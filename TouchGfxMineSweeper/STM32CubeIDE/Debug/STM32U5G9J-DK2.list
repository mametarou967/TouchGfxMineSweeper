
STM32U5G9J-DK2.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000274  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00033598  08000280  08000280  00001280  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00005160  08033818  08033818  00034818  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 FontFlashSection 000001a6  08038978  08038978  00039978  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 FontSearchFlashSection 00000018  08038b20  08038b20  00039b20  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 TextFlashSection 0000000e  08038b38  08038b38  00039b38  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 .ARM.extab    00000002  08038b46  08038b46  00039b46  2**0
                  ALLOC
  7 .ARM          00000000  08038b48  08038b48  00107010  2**0
                  CONTENTS
  8 .preinit_array 00000000  08038b48  08038b48  00107010  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .init_array   00000020  08038b48  08038b48  00039b48  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 10 .fini_array   00000008  08038b68  08038b68  00039b68  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 11 .data         000002a8  20000000  08038b70  0003a000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 12 .bss          00083618  200002a8  08038e18  0003a2a8  2**2
                  ALLOC
 13 ._user_heap_stack 00002000  200838c0  08038e18  0003a8c0  2**0
                  ALLOC
 14 .ARM.attributes 00000036  00000000  00000000  00107010  2**0
                  CONTENTS, READONLY
 15 FramebufferSection 00177000  200858c0  200858c0  0003a8c0  2**2
                  ALLOC
 16 VideobufferSection 00000000  201fc8c0  201fc8c0  00107046  2**0
                  CONTENTS
 17 ExtFlashSection 000cc010  a0000000  a0000000  0003b000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 18 .debug_info   000ac469  00000000  00000000  00107046  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_abbrev 00014048  00000000  00000000  001b34af  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_loclists 0001f925  00000000  00000000  001c74f7  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_aranges 000035f0  00000000  00000000  001e6e20  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_rnglists 0000350b  00000000  00000000  001ea410  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 23 .debug_macro  0004fc89  00000000  00000000  001ed91b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 24 .debug_line   0005d944  00000000  00000000  0023d5a4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 25 .debug_str    001c1292  00000000  00000000  0029aee8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 26 .comment      000000c2  00000000  00000000  0045c17a  2**0
                  CONTENTS, READONLY
 27 .debug_frame  00009c8c  00000000  00000000  0045c23c  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 28 .debug_line_str 0000007e  00000000  00000000  00465ec8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000280 <__do_global_dtors_aux>:
 8000280:	b510      	push	{r4, lr}
 8000282:	4c05      	ldr	r4, [pc, #20]	@ (8000298 <__do_global_dtors_aux+0x18>)
 8000284:	7823      	ldrb	r3, [r4, #0]
 8000286:	b933      	cbnz	r3, 8000296 <__do_global_dtors_aux+0x16>
 8000288:	4b04      	ldr	r3, [pc, #16]	@ (800029c <__do_global_dtors_aux+0x1c>)
 800028a:	b113      	cbz	r3, 8000292 <__do_global_dtors_aux+0x12>
 800028c:	4804      	ldr	r0, [pc, #16]	@ (80002a0 <__do_global_dtors_aux+0x20>)
 800028e:	f3af 8000 	nop.w
 8000292:	2301      	movs	r3, #1
 8000294:	7023      	strb	r3, [r4, #0]
 8000296:	bd10      	pop	{r4, pc}
 8000298:	200002a8 	.word	0x200002a8
 800029c:	00000000 	.word	0x00000000
 80002a0:	08033800 	.word	0x08033800

080002a4 <frame_dummy>:
 80002a4:	b508      	push	{r3, lr}
 80002a6:	4b03      	ldr	r3, [pc, #12]	@ (80002b4 <frame_dummy+0x10>)
 80002a8:	b11b      	cbz	r3, 80002b2 <frame_dummy+0xe>
 80002aa:	4903      	ldr	r1, [pc, #12]	@ (80002b8 <frame_dummy+0x14>)
 80002ac:	4803      	ldr	r0, [pc, #12]	@ (80002bc <frame_dummy+0x18>)
 80002ae:	f3af 8000 	nop.w
 80002b2:	bd08      	pop	{r3, pc}
 80002b4:	00000000 	.word	0x00000000
 80002b8:	200002ac 	.word	0x200002ac
 80002bc:	08033800 	.word	0x08033800

080002c0 <StartDefaultTask>:
* @param argument: Not used
* @retval None
*/
/* USER CODE END Header_StartDefaultTask */
void StartDefaultTask(void *argument)
{
 80002c0:	b508      	push	{r3, lr}
  /* USER CODE BEGIN defaultTask */
  /* Infinite loop */
  for(;;)
  {
    osDelay(1);
 80002c2:	2001      	movs	r0, #1
 80002c4:	f008 fd55 	bl	8008d72 <osDelay>
  for(;;)
 80002c8:	e7fb      	b.n	80002c2 <StartDefaultTask+0x2>
	...

080002cc <vApplicationIdleHook>:
   vTaskSetApplicationTaskTag(NULL, IdleTaskHook);
 80002cc:	2000      	movs	r0, #0
 80002ce:	4901      	ldr	r1, [pc, #4]	@ (80002d4 <vApplicationIdleHook+0x8>)
 80002d0:	f009 bf88 	b.w	800a1e4 <vTaskSetApplicationTaskTag>
 80002d4:	08001385 	.word	0x08001385

080002d8 <MX_FREERTOS_Init>:
void MX_FREERTOS_Init(void) {
 80002d8:	b508      	push	{r3, lr}
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 80002da:	2100      	movs	r1, #0
 80002dc:	4a06      	ldr	r2, [pc, #24]	@ (80002f8 <MX_FREERTOS_Init+0x20>)
 80002de:	4807      	ldr	r0, [pc, #28]	@ (80002fc <MX_FREERTOS_Init+0x24>)
 80002e0:	f008 fcfc 	bl	8008cdc <osThreadNew>
 80002e4:	4b06      	ldr	r3, [pc, #24]	@ (8000300 <MX_FREERTOS_Init+0x28>)
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 80002e6:	2100      	movs	r1, #0
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 80002e8:	6018      	str	r0, [r3, #0]
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 80002ea:	4a06      	ldr	r2, [pc, #24]	@ (8000304 <MX_FREERTOS_Init+0x2c>)
 80002ec:	4806      	ldr	r0, [pc, #24]	@ (8000308 <MX_FREERTOS_Init+0x30>)
 80002ee:	f008 fcf5 	bl	8008cdc <osThreadNew>
 80002f2:	4b06      	ldr	r3, [pc, #24]	@ (800030c <MX_FREERTOS_Init+0x34>)
 80002f4:	6018      	str	r0, [r3, #0]
}
 80002f6:	bd08      	pop	{r3, pc}
 80002f8:	08033924 	.word	0x08033924
 80002fc:	080002c1 	.word	0x080002c1
 8000300:	200002c8 	.word	0x200002c8
 8000304:	08033900 	.word	0x08033900
 8000308:	08000fbb 	.word	0x08000fbb
 800030c:	200002c4 	.word	0x200002c4

08000310 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 8000310:	b530      	push	{r4, r5, lr}
 8000312:	b09f      	sub	sp, #124	@ 0x7c
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8000314:	2260      	movs	r2, #96	@ 0x60
 8000316:	2100      	movs	r1, #0
 8000318:	a806      	add	r0, sp, #24
 800031a:	f032 fc34 	bl	8032b86 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 800031e:	2218      	movs	r2, #24
 8000320:	2100      	movs	r1, #0
 8000322:	4668      	mov	r0, sp
 8000324:	f032 fc2f 	bl	8032b86 <memset>

  /** Configure the main internal regulator output voltage
  */
  if (HAL_PWREx_ControlVoltageScaling(PWR_REGULATOR_VOLTAGE_SCALE1) != HAL_OK)
 8000328:	f44f 3040 	mov.w	r0, #196608	@ 0x30000
 800032c:	f006 fa60 	bl	80067f0 <HAL_PWREx_ControlVoltageScaling>
 8000330:	b108      	cbz	r0, 8000336 <SystemClock_Config+0x26>
  \details Disables IRQ interrupts by setting special-purpose register PRIMASK.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8000332:	b672      	cpsid	i
void Error_Handler(void)
{
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 8000334:	e7fe      	b.n	8000334 <SystemClock_Config+0x24>
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8000336:	2201      	movs	r2, #1
 8000338:	f44f 3380 	mov.w	r3, #65536	@ 0x10000
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 800033c:	2503      	movs	r5, #3
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 800033e:	e9cd 2306 	strd	r2, r3, [sp, #24]
  RCC_OscInitStruct.PLL.PLLM = 4;
 8000342:	2404      	movs	r4, #4
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8000344:	2302      	movs	r3, #2
  RCC_OscInitStruct.PLL.PLLN = 80;
 8000346:	2250      	movs	r2, #80	@ 0x50
  RCC_OscInitStruct.PLL.PLLFRACN = 0;
 8000348:	e9cd 001c 	strd	r0, r0, [sp, #112]	@ 0x70
  RCC_OscInitStruct.PLL.PLLMBOOST = RCC_PLLMBOOST_DIV1;
 800034c:	9017      	str	r0, [sp, #92]	@ 0x5c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 800034e:	a806      	add	r0, sp, #24
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8000350:	e9cd 3514 	strd	r3, r5, [sp, #80]	@ 0x50
  RCC_OscInitStruct.PLL.PLLP = 2;
 8000354:	e9cd 2318 	strd	r2, r3, [sp, #96]	@ 0x60
  RCC_OscInitStruct.PLL.PLLR = 2;
 8000358:	e9cd 331a 	strd	r3, r3, [sp, #104]	@ 0x68
  RCC_OscInitStruct.PLL.PLLM = 4;
 800035c:	9416      	str	r4, [sp, #88]	@ 0x58
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 800035e:	f006 fd0d 	bl	8006d7c <HAL_RCC_OscConfig>
 8000362:	b108      	cbz	r0, 8000368 <SystemClock_Config+0x58>
 8000364:	b672      	cpsid	i
  while (1)
 8000366:	e7fe      	b.n	8000366 <SystemClock_Config+0x56>
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8000368:	231f      	movs	r3, #31
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 800036a:	e9cd 0002 	strd	r0, r0, [sp, #8]
  RCC_ClkInitStruct.APB3CLKDivider = RCC_HCLK_DIV1;
 800036e:	e9cd 0004 	strd	r0, r0, [sp, #16]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_4) != HAL_OK)
 8000372:	4621      	mov	r1, r4
 8000374:	4668      	mov	r0, sp
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8000376:	e9cd 3500 	strd	r3, r5, [sp]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_4) != HAL_OK)
 800037a:	f006 fb9d 	bl	8006ab8 <HAL_RCC_ClockConfig>
 800037e:	b108      	cbz	r0, 8000384 <SystemClock_Config+0x74>
 8000380:	b672      	cpsid	i
  while (1)
 8000382:	e7fe      	b.n	8000382 <SystemClock_Config+0x72>
}
 8000384:	b01f      	add	sp, #124	@ 0x7c
 8000386:	bd30      	pop	{r4, r5, pc}

08000388 <main>:
{
 8000388:	b580      	push	{r7, lr}
 800038a:	b098      	sub	sp, #96	@ 0x60
  HAL_Init();
 800038c:	f003 fdb4 	bl	8003ef8 <HAL_Init>
  SystemClock_Config();
 8000390:	f7ff ffbe 	bl	8000310 <SystemClock_Config>
  HAL_PWREx_DisableUCPDDeadBattery();
 8000394:	f006 faa0 	bl	80068d8 <HAL_PWREx_DisableUCPDDeadBattery>
  if (HAL_PWREx_ConfigSupply(PWR_SMPS_SUPPLY) != HAL_OK)
 8000398:	2002      	movs	r0, #2
 800039a:	f006 fa71 	bl	8006880 <HAL_PWREx_ConfigSupply>
 800039e:	4605      	mov	r5, r0
 80003a0:	b108      	cbz	r0, 80003a6 <main+0x1e>
 80003a2:	b672      	cpsid	i
  while (1)
 80003a4:	e7fe      	b.n	80003a4 <main+0x1c>
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80003a6:	f04f 0914 	mov.w	r9, #20
  __HAL_RCC_GPIOE_CLK_ENABLE();
 80003aa:	4cc0      	ldr	r4, [pc, #768]	@ (80006ac <main+0x324>)
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80003ac:	4601      	mov	r1, r0
 80003ae:	464a      	mov	r2, r9
 80003b0:	a80b      	add	r0, sp, #44	@ 0x2c
 80003b2:	f032 fbe8 	bl	8032b86 <memset>
  __HAL_RCC_GPIOE_CLK_ENABLE();
 80003b6:	f8d4 308c 	ldr.w	r3, [r4, #140]	@ 0x8c
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80003ba:	2601      	movs	r6, #1
  __HAL_RCC_GPIOE_CLK_ENABLE();
 80003bc:	f043 0310 	orr.w	r3, r3, #16
 80003c0:	f8c4 308c 	str.w	r3, [r4, #140]	@ 0x8c
 80003c4:	f8d4 308c 	ldr.w	r3, [r4, #140]	@ 0x8c
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80003c8:	f04f 0810 	mov.w	r8, #16
  __HAL_RCC_GPIOE_CLK_ENABLE();
 80003cc:	f003 0310 	and.w	r3, r3, #16
 80003d0:	9304      	str	r3, [sp, #16]
 80003d2:	9b04      	ldr	r3, [sp, #16]
  __HAL_RCC_GPIOC_CLK_ENABLE();
 80003d4:	f8d4 308c 	ldr.w	r3, [r4, #140]	@ 0x8c
  GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
 80003d8:	f04f 0a20 	mov.w	sl, #32
  __HAL_RCC_GPIOC_CLK_ENABLE();
 80003dc:	f043 0304 	orr.w	r3, r3, #4
 80003e0:	f8c4 308c 	str.w	r3, [r4, #140]	@ 0x8c
 80003e4:	f8d4 308c 	ldr.w	r3, [r4, #140]	@ 0x8c
  HAL_GPIO_WritePin(GPIOE, LCD_DISP_EN_Pin|LCD_BL_CTRL_Pin, GPIO_PIN_SET);
 80003e8:	2201      	movs	r2, #1
  __HAL_RCC_GPIOC_CLK_ENABLE();
 80003ea:	f003 0304 	and.w	r3, r3, #4
 80003ee:	9305      	str	r3, [sp, #20]
 80003f0:	9b05      	ldr	r3, [sp, #20]
  __HAL_RCC_GPIOF_CLK_ENABLE();
 80003f2:	f8d4 308c 	ldr.w	r3, [r4, #140]	@ 0x8c
  HAL_GPIO_WritePin(GPIOE, LCD_DISP_EN_Pin|LCD_BL_CTRL_Pin, GPIO_PIN_SET);
 80003f6:	2150      	movs	r1, #80	@ 0x50
  __HAL_RCC_GPIOF_CLK_ENABLE();
 80003f8:	f043 0320 	orr.w	r3, r3, #32
 80003fc:	f8c4 308c 	str.w	r3, [r4, #140]	@ 0x8c
 8000400:	f8d4 308c 	ldr.w	r3, [r4, #140]	@ 0x8c
  HAL_GPIO_WritePin(GPIOE, LCD_DISP_EN_Pin|LCD_BL_CTRL_Pin, GPIO_PIN_SET);
 8000404:	48aa      	ldr	r0, [pc, #680]	@ (80006b0 <main+0x328>)
  __HAL_RCC_GPIOF_CLK_ENABLE();
 8000406:	f003 0320 	and.w	r3, r3, #32
 800040a:	9306      	str	r3, [sp, #24]
 800040c:	9b06      	ldr	r3, [sp, #24]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 800040e:	f8d4 308c 	ldr.w	r3, [r4, #140]	@ 0x8c
  GPIO_InitStruct.Pull = GPIO_PULLDOWN;
 8000412:	2702      	movs	r7, #2
  __HAL_RCC_GPIOH_CLK_ENABLE();
 8000414:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8000418:	f8c4 308c 	str.w	r3, [r4, #140]	@ 0x8c
 800041c:	f8d4 308c 	ldr.w	r3, [r4, #140]	@ 0x8c
 8000420:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8000424:	9307      	str	r3, [sp, #28]
 8000426:	9b07      	ldr	r3, [sp, #28]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8000428:	f8d4 308c 	ldr.w	r3, [r4, #140]	@ 0x8c
 800042c:	f043 0302 	orr.w	r3, r3, #2
 8000430:	f8c4 308c 	str.w	r3, [r4, #140]	@ 0x8c
 8000434:	f8d4 308c 	ldr.w	r3, [r4, #140]	@ 0x8c
 8000438:	f003 0302 	and.w	r3, r3, #2
 800043c:	9308      	str	r3, [sp, #32]
 800043e:	9b08      	ldr	r3, [sp, #32]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8000440:	f8d4 308c 	ldr.w	r3, [r4, #140]	@ 0x8c
 8000444:	f043 0308 	orr.w	r3, r3, #8
 8000448:	f8c4 308c 	str.w	r3, [r4, #140]	@ 0x8c
 800044c:	f8d4 308c 	ldr.w	r3, [r4, #140]	@ 0x8c
 8000450:	f003 0308 	and.w	r3, r3, #8
 8000454:	9309      	str	r3, [sp, #36]	@ 0x24
 8000456:	9b09      	ldr	r3, [sp, #36]	@ 0x24
  __HAL_RCC_GPIOI_CLK_ENABLE();
 8000458:	f8d4 308c 	ldr.w	r3, [r4, #140]	@ 0x8c
 800045c:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8000460:	f8c4 308c 	str.w	r3, [r4, #140]	@ 0x8c
 8000464:	f8d4 308c 	ldr.w	r3, [r4, #140]	@ 0x8c
 8000468:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800046c:	930a      	str	r3, [sp, #40]	@ 0x28
 800046e:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
  HAL_GPIO_WritePin(GPIOE, LCD_DISP_EN_Pin|LCD_BL_CTRL_Pin, GPIO_PIN_SET);
 8000470:	f004 fc62 	bl	8004d38 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, VSYNC_FREQ_Pin|RENDER_TIME_Pin|FRAME_RATE_Pin|MCU_ACTIVE_Pin, GPIO_PIN_RESET);
 8000474:	462a      	mov	r2, r5
 8000476:	f641 4101 	movw	r1, #7169	@ 0x1c01
 800047a:	488e      	ldr	r0, [pc, #568]	@ (80006b4 <main+0x32c>)
 800047c:	f004 fc5c 	bl	8004d38 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOD, USER_LD2_RED_Pin|USER_LD3_GREEN_Pin, GPIO_PIN_SET);
 8000480:	2201      	movs	r2, #1
 8000482:	4649      	mov	r1, r9
 8000484:	488c      	ldr	r0, [pc, #560]	@ (80006b8 <main+0x330>)
 8000486:	f004 fc57 	bl	8004d38 <HAL_GPIO_WritePin>
  HAL_GPIO_Init(LCD_DISP_EN_GPIO_Port, &GPIO_InitStruct);
 800048a:	4889      	ldr	r0, [pc, #548]	@ (80006b0 <main+0x328>)
 800048c:	a90b      	add	r1, sp, #44	@ 0x2c
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 800048e:	e9cd 860b 	strd	r8, r6, [sp, #44]	@ 0x2c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000492:	e9cd 550d 	strd	r5, r5, [sp, #52]	@ 0x34
  HAL_GPIO_Init(LCD_DISP_EN_GPIO_Port, &GPIO_InitStruct);
 8000496:	f004 fb3b 	bl	8004b10 <HAL_GPIO_Init>
  GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
 800049a:	4b88      	ldr	r3, [pc, #544]	@ (80006bc <main+0x334>)
  HAL_GPIO_Init(TP_IRQ_GPIO_Port, &GPIO_InitStruct);
 800049c:	4884      	ldr	r0, [pc, #528]	@ (80006b0 <main+0x328>)
 800049e:	a90b      	add	r1, sp, #44	@ 0x2c
  GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
 80004a0:	e9cd a30b 	strd	sl, r3, [sp, #44]	@ 0x2c
  GPIO_InitStruct.Pull = GPIO_PULLUP;
 80004a4:	960d      	str	r6, [sp, #52]	@ 0x34
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_OD;
 80004a6:	f04f 0a11 	mov.w	sl, #17
  HAL_GPIO_Init(TP_IRQ_GPIO_Port, &GPIO_InitStruct);
 80004aa:	f004 fb31 	bl	8004b10 <HAL_GPIO_Init>
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_OD;
 80004ae:	2340      	movs	r3, #64	@ 0x40
  HAL_GPIO_Init(LCD_BL_CTRL_GPIO_Port, &GPIO_InitStruct);
 80004b0:	487f      	ldr	r0, [pc, #508]	@ (80006b0 <main+0x328>)
 80004b2:	a90b      	add	r1, sp, #44	@ 0x2c
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_OD;
 80004b4:	e9cd 3a0b 	strd	r3, sl, [sp, #44]	@ 0x2c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80004b8:	e9cd 550d 	strd	r5, r5, [sp, #52]	@ 0x34
  HAL_GPIO_Init(LCD_BL_CTRL_GPIO_Port, &GPIO_InitStruct);
 80004bc:	f004 fb28 	bl	8004b10 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = USER_BUTTON_Pin;
 80004c0:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
  HAL_GPIO_Init(USER_BUTTON_GPIO_Port, &GPIO_InitStruct);
 80004c4:	487b      	ldr	r0, [pc, #492]	@ (80006b4 <main+0x32c>)
 80004c6:	a90b      	add	r1, sp, #44	@ 0x2c
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 80004c8:	e9cd 350b 	strd	r3, r5, [sp, #44]	@ 0x2c
  GPIO_InitStruct.Pull = GPIO_PULLDOWN;
 80004cc:	970d      	str	r7, [sp, #52]	@ 0x34
  HAL_GPIO_Init(USER_BUTTON_GPIO_Port, &GPIO_InitStruct);
 80004ce:	f004 fb1f 	bl	8004b10 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = VSYNC_FREQ_Pin|RENDER_TIME_Pin|FRAME_RATE_Pin|MCU_ACTIVE_Pin;
 80004d2:	f641 4301 	movw	r3, #7169	@ 0x1c01
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80004d6:	4877      	ldr	r0, [pc, #476]	@ (80006b4 <main+0x32c>)
 80004d8:	a90b      	add	r1, sp, #44	@ 0x2c
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80004da:	e9cd 360b 	strd	r3, r6, [sp, #44]	@ 0x2c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_MEDIUM;
 80004de:	e9cd 560d 	strd	r5, r6, [sp, #52]	@ 0x34
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80004e2:	f004 fb15 	bl	8004b10 <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80004e6:	4874      	ldr	r0, [pc, #464]	@ (80006b8 <main+0x330>)
 80004e8:	a90b      	add	r1, sp, #44	@ 0x2c
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_OD;
 80004ea:	e9cd 9a0b 	strd	r9, sl, [sp, #44]	@ 0x2c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_MEDIUM;
 80004ee:	e9cd 560d 	strd	r5, r6, [sp, #52]	@ 0x34
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80004f2:	f004 fb0d 	bl	8004b10 <HAL_GPIO_Init>
  HAL_NVIC_SetPriority(EXTI5_IRQn, 5, 0);
 80004f6:	462a      	mov	r2, r5
 80004f8:	2105      	movs	r1, #5
 80004fa:	4640      	mov	r0, r8
 80004fc:	f003 fd64 	bl	8003fc8 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(EXTI5_IRQn);
 8000500:	4640      	mov	r0, r8
 8000502:	f003 fd91 	bl	8004028 <HAL_NVIC_EnableIRQ>
  __HAL_RCC_GPDMA1_CLK_ENABLE();
 8000506:	f8d4 3088 	ldr.w	r3, [r4, #136]	@ 0x88
    HAL_NVIC_SetPriority(GPDMA1_Channel0_IRQn, 5, 0);
 800050a:	462a      	mov	r2, r5
  __HAL_RCC_GPDMA1_CLK_ENABLE();
 800050c:	4333      	orrs	r3, r6
 800050e:	f8c4 3088 	str.w	r3, [r4, #136]	@ 0x88
 8000512:	f8d4 3088 	ldr.w	r3, [r4, #136]	@ 0x88
    HAL_NVIC_SetPriority(GPDMA1_Channel0_IRQn, 5, 0);
 8000516:	2105      	movs	r1, #5
  __HAL_RCC_GPDMA1_CLK_ENABLE();
 8000518:	4033      	ands	r3, r6
    HAL_NVIC_SetPriority(GPDMA1_Channel0_IRQn, 5, 0);
 800051a:	201d      	movs	r0, #29
  __HAL_RCC_GPDMA1_CLK_ENABLE();
 800051c:	9303      	str	r3, [sp, #12]
 800051e:	9b03      	ldr	r3, [sp, #12]
    HAL_NVIC_SetPriority(GPDMA1_Channel0_IRQn, 5, 0);
 8000520:	f003 fd52 	bl	8003fc8 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(GPDMA1_Channel0_IRQn);
 8000524:	201d      	movs	r0, #29
 8000526:	f003 fd7f 	bl	8004028 <HAL_NVIC_EnableIRQ>
    HAL_NVIC_SetPriority(GPDMA1_Channel1_IRQn, 5, 0);
 800052a:	462a      	mov	r2, r5
 800052c:	2105      	movs	r1, #5
 800052e:	201e      	movs	r0, #30
 8000530:	f003 fd4a 	bl	8003fc8 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(GPDMA1_Channel1_IRQn);
 8000534:	201e      	movs	r0, #30
 8000536:	f003 fd77 	bl	8004028 <HAL_NVIC_EnableIRQ>
  if (HAL_ICACHE_ConfigAssociativityMode(ICACHE_1WAY) != HAL_OK)
 800053a:	4628      	mov	r0, r5
 800053c:	f004 ffde 	bl	80054fc <HAL_ICACHE_ConfigAssociativityMode>
 8000540:	b108      	cbz	r0, 8000546 <main+0x1be>
 8000542:	b672      	cpsid	i
  while (1)
 8000544:	e7fe      	b.n	8000544 <main+0x1bc>
  if (HAL_ICACHE_Enable() != HAL_OK)
 8000546:	f004 ffe9 	bl	800551c <HAL_ICACHE_Enable>
 800054a:	b108      	cbz	r0, 8000550 <main+0x1c8>
 800054c:	b672      	cpsid	i
  while (1)
 800054e:	e7fe      	b.n	800054e <main+0x1c6>
  hdcache1.Init.ReadBurstType = DCACHE_READ_BURST_INCR;
 8000550:	f04f 4500 	mov.w	r5, #2147483648	@ 0x80000000
  hdcache1.Instance = DCACHE1;
 8000554:	485a      	ldr	r0, [pc, #360]	@ (80006c0 <main+0x338>)
  hdcache1.Init.ReadBurstType = DCACHE_READ_BURST_INCR;
 8000556:	4b5b      	ldr	r3, [pc, #364]	@ (80006c4 <main+0x33c>)
 8000558:	e9c0 3500 	strd	r3, r5, [r0]
  if (HAL_DCACHE_Init(&hdcache1) != HAL_OK)
 800055c:	f003 fe24 	bl	80041a8 <HAL_DCACHE_Init>
 8000560:	b108      	cbz	r0, 8000566 <main+0x1de>
 8000562:	b672      	cpsid	i
  while (1)
 8000564:	e7fe      	b.n	8000564 <main+0x1dc>
  hdcache2.Instance = DCACHE2;
 8000566:	4858      	ldr	r0, [pc, #352]	@ (80006c8 <main+0x340>)
 8000568:	4b58      	ldr	r3, [pc, #352]	@ (80006cc <main+0x344>)
  hdcache2.Init.ReadBurstType = DCACHE_READ_BURST_INCR;
 800056a:	e9c0 3500 	strd	r3, r5, [r0]
  if (HAL_DCACHE_Init(&hdcache2) != HAL_OK)
 800056e:	f003 fe1b 	bl	80041a8 <HAL_DCACHE_Init>
 8000572:	4605      	mov	r5, r0
 8000574:	b108      	cbz	r0, 800057a <main+0x1f2>
 8000576:	b672      	cpsid	i
  while (1)
 8000578:	e7fe      	b.n	8000578 <main+0x1f0>
   __HAL_RCC_SYSCFG_CLK_ENABLE();
 800057a:	f8d4 30a8 	ldr.w	r3, [r4, #168]	@ 0xa8
 800057e:	f043 0302 	orr.w	r3, r3, #2
 8000582:	f8c4 30a8 	str.w	r3, [r4, #168]	@ 0xa8
 8000586:	f8d4 30a8 	ldr.w	r3, [r4, #168]	@ 0xa8
 800058a:	f003 0302 	and.w	r3, r3, #2
 800058e:	9302      	str	r3, [sp, #8]
 8000590:	9b02      	ldr	r3, [sp, #8]
   HAL_SYSCFG_DisableSRAMCached();
 8000592:	f003 fcff 	bl	8003f94 <HAL_SYSCFG_DisableSRAMCached>
  hcrc.Instance = CRC;
 8000596:	484e      	ldr	r0, [pc, #312]	@ (80006d0 <main+0x348>)
 8000598:	4b4e      	ldr	r3, [pc, #312]	@ (80006d4 <main+0x34c>)
  hcrc.Init.OutputDataInversionMode = CRC_OUTPUTDATA_INVERSION_DISABLE;
 800059a:	e9c0 5505 	strd	r5, r5, [r0, #20]
  hcrc.Init.DefaultPolynomialUse = DEFAULT_POLYNOMIAL_ENABLE;
 800059e:	8085      	strh	r5, [r0, #4]
  hcrc.Instance = CRC;
 80005a0:	6003      	str	r3, [r0, #0]
  hcrc.InputDataFormat = CRC_INPUTDATA_FORMAT_BYTES;
 80005a2:	6206      	str	r6, [r0, #32]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
 80005a4:	f003 fd88 	bl	80040b8 <HAL_CRC_Init>
 80005a8:	4605      	mov	r5, r0
 80005aa:	b108      	cbz	r0, 80005b0 <main+0x228>
 80005ac:	b672      	cpsid	i
  while (1)
 80005ae:	e7fe      	b.n	80005ae <main+0x226>
  LTDC_LayerCfgTypeDef pLayerCfg = {0};
 80005b0:	2234      	movs	r2, #52	@ 0x34
 80005b2:	4601      	mov	r1, r0
 80005b4:	a80b      	add	r0, sp, #44	@ 0x2c
 80005b6:	f032 fae6 	bl	8032b86 <memset>
  hltdc.Instance = LTDC;
 80005ba:	4c47      	ldr	r4, [pc, #284]	@ (80006d8 <main+0x350>)
 80005bc:	4b47      	ldr	r3, [pc, #284]	@ (80006dc <main+0x354>)
  hltdc.Init.AccumulatedActiveH = 492;
 80005be:	f44f 7c4b 	mov.w	ip, #812	@ 0x32c
  hltdc.Init.HSPolarity = LTDC_HSPOLARITY_AL;
 80005c2:	e9c4 3500 	strd	r3, r5, [r4]
  hltdc.Init.HorizontalSync = 4;
 80005c6:	2304      	movs	r3, #4
  hltdc.Init.VerticalSync = 4;
 80005c8:	e9c4 3305 	strd	r3, r3, [r4, #20]
  hltdc.Init.AccumulatedHBP = 12;
 80005cc:	230c      	movs	r3, #12
  hltdc.Init.AccumulatedVBP = 12;
 80005ce:	e9c4 3307 	strd	r3, r3, [r4, #28]
  hltdc.Init.AccumulatedActiveH = 492;
 80005d2:	f44f 73f6 	mov.w	r3, #492	@ 0x1ec
  hltdc.Init.TotalHeigh = 506;
 80005d6:	f44f 7e4d 	mov.w	lr, #820	@ 0x334
  hltdc.Init.AccumulatedActiveH = 492;
 80005da:	e9c4 c309 	strd	ip, r3, [r4, #36]	@ 0x24
  hltdc.Init.TotalHeigh = 506;
 80005de:	f44f 73fd 	mov.w	r3, #506	@ 0x1fa
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 80005e2:	4620      	mov	r0, r4
  hltdc.Init.DEPolarity = LTDC_DEPOLARITY_AL;
 80005e4:	e9c4 5502 	strd	r5, r5, [r4, #8]
  hltdc.Init.TotalHeigh = 506;
 80005e8:	e9c4 e30b 	strd	lr, r3, [r4, #44]	@ 0x2c
  hltdc.Init.PCPolarity = LTDC_PCPOLARITY_IPC;
 80005ec:	6125      	str	r5, [r4, #16]
  hltdc.Init.Backcolor.Blue = 0;
 80005ee:	86a5      	strh	r5, [r4, #52]	@ 0x34
  hltdc.Init.Backcolor.Red = 0;
 80005f0:	f884 5036 	strb.w	r5, [r4, #54]	@ 0x36
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 80005f4:	f005 ffe6 	bl	80065c4 <HAL_LTDC_Init>
 80005f8:	4602      	mov	r2, r0
 80005fa:	b108      	cbz	r0, 8000600 <main+0x278>
 80005fc:	b672      	cpsid	i
  while (1)
 80005fe:	e7fe      	b.n	80005fe <main+0x276>
  pLayerCfg.WindowX1 = 800;
 8000600:	f44f 7148 	mov.w	r1, #800	@ 0x320
  pLayerCfg.WindowX0 = 0;
 8000604:	900b      	str	r0, [sp, #44]	@ 0x2c
  pLayerCfg.WindowY0 = 0;
 8000606:	e9cd 100c 	strd	r1, r0, [sp, #48]	@ 0x30
  pLayerCfg.Alpha = 255;
 800060a:	20ff      	movs	r0, #255	@ 0xff
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 800060c:	f44f 6580 	mov.w	r5, #1024	@ 0x400
  pLayerCfg.Alpha0 = 0;
 8000610:	e9cd 0210 	strd	r0, r2, [sp, #64]	@ 0x40
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 8000614:	2005      	movs	r0, #5
  pLayerCfg.WindowY1 = 480;
 8000616:	f44f 73f0 	mov.w	r3, #480	@ 0x1e0
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 800061a:	e9cd 5012 	strd	r5, r0, [sp, #72]	@ 0x48
  pLayerCfg.ImageWidth = 800;
 800061e:	e9cd 2114 	strd	r2, r1, [sp, #80]	@ 0x50
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8000622:	4620      	mov	r0, r4
 8000624:	a90b      	add	r1, sp, #44	@ 0x2c
  pLayerCfg.PixelFormat = LTDC_PIXEL_FORMAT_RGB565;
 8000626:	e9cd 370e 	strd	r3, r7, [sp, #56]	@ 0x38
  pLayerCfg.ImageHeight = 480;
 800062a:	9316      	str	r3, [sp, #88]	@ 0x58
  pLayerCfg.Backcolor.Blue = 0;
 800062c:	f8ad 205c 	strh.w	r2, [sp, #92]	@ 0x5c
  pLayerCfg.Backcolor.Red = 0;
 8000630:	f88d 205e 	strb.w	r2, [sp, #94]	@ 0x5e
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8000634:	f006 f891 	bl	800675a <HAL_LTDC_ConfigLayer>
 8000638:	4603      	mov	r3, r0
 800063a:	b108      	cbz	r0, 8000640 <main+0x2b8>
 800063c:	b672      	cpsid	i
  while (1)
 800063e:	e7fe      	b.n	800063e <main+0x2b6>
  hdma2d.Init.Mode = DMA2D_R2M;
 8000640:	f44f 3240 	mov.w	r2, #196608	@ 0x30000
  hdma2d.Instance = DMA2D;
 8000644:	4826      	ldr	r0, [pc, #152]	@ (80006e0 <main+0x358>)
  hdma2d.Init.Mode = DMA2D_R2M;
 8000646:	4c27      	ldr	r4, [pc, #156]	@ (80006e4 <main+0x35c>)
  hdma2d.Init.OutputOffset = 0;
 8000648:	e9c0 6302 	strd	r6, r3, [r0, #8]
  hdma2d.Init.Mode = DMA2D_R2M;
 800064c:	e9c0 4200 	strd	r4, r2, [r0]
  hdma2d.Init.LineOffsetMode = DMA2D_LOM_PIXELS;
 8000650:	e9c0 3306 	strd	r3, r3, [r0, #24]
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 8000654:	f004 f90c 	bl	8004870 <HAL_DMA2D_Init>
 8000658:	b108      	cbz	r0, 800065e <main+0x2d6>
 800065a:	b672      	cpsid	i
  while (1)
 800065c:	e7fe      	b.n	800065c <main+0x2d4>
  hgpu2d.Instance = GPU2D;
 800065e:	4822      	ldr	r0, [pc, #136]	@ (80006e8 <main+0x360>)
 8000660:	4b22      	ldr	r3, [pc, #136]	@ (80006ec <main+0x364>)
 8000662:	6003      	str	r3, [r0, #0]
  if (HAL_GPU2D_Init(&hgpu2d) != HAL_OK)
 8000664:	f004 fb8c 	bl	8004d80 <HAL_GPU2D_Init>
 8000668:	b108      	cbz	r0, 800066e <main+0x2e6>
 800066a:	b672      	cpsid	i
  while (1)
 800066c:	e7fe      	b.n	800066c <main+0x2e4>
  hxspi1.Init.FifoThresholdByte = 4;
 800066e:	2304      	movs	r3, #4
  hxspi1.Instance = HSPI1;
 8000670:	4c1f      	ldr	r4, [pc, #124]	@ (80006f0 <main+0x368>)
  hxspi1.Init.FifoThresholdByte = 4;
 8000672:	4920      	ldr	r1, [pc, #128]	@ (80006f4 <main+0x36c>)
  hxspi1.Init.MemoryType = HAL_XSPI_MEMTYPE_MACRONIX;
 8000674:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
  hxspi1.Init.FifoThresholdByte = 4;
 8000678:	e9c4 1300 	strd	r1, r3, [r4]
  hxspi1.Init.MemoryType = HAL_XSPI_MEMTYPE_MACRONIX;
 800067c:	2300      	movs	r3, #0
  hxspi1.Init.ChipSelectHighTimeCycle = 2;
 800067e:	2602      	movs	r6, #2
  hxspi1.Init.MemoryType = HAL_XSPI_MEMTYPE_MACRONIX;
 8000680:	e9c4 3202 	strd	r3, r2, [r4, #8]
  hxspi1.Init.ChipSelectHighTimeCycle = 2;
 8000684:	221a      	movs	r2, #26
  if (HAL_XSPI_Init(&hxspi1) != HAL_OK)
 8000686:	4620      	mov	r0, r4
  hxspi1.Init.ChipSelectHighTimeCycle = 2;
 8000688:	e9c4 2604 	strd	r2, r6, [r4, #16]
  hxspi1.Init.ClockMode = HAL_XSPI_CLOCK_MODE_0;
 800068c:	e9c4 3306 	strd	r3, r3, [r4, #24]
  hxspi1.Init.ClockPrescaler = 0;
 8000690:	e9c4 3308 	strd	r3, r3, [r4, #32]
  hxspi1.Init.DelayHoldQuarterCycle = HAL_XSPI_DHQC_DISABLE;
 8000694:	e9c4 330a 	strd	r3, r3, [r4, #40]	@ 0x28
  hxspi1.Init.Refresh = 0;
 8000698:	e9c4 330e 	strd	r3, r3, [r4, #56]	@ 0x38
  hxspi1.Init.ChipSelectBoundary = HAL_XSPI_BONDARYOF_NONE;
 800069c:	6323      	str	r3, [r4, #48]	@ 0x30
  if (HAL_XSPI_Init(&hxspi1) != HAL_OK)
 800069e:	f007 ffcf 	bl	8008640 <HAL_XSPI_Init>
 80006a2:	4605      	mov	r5, r0
 80006a4:	b340      	cbz	r0, 80006f8 <main+0x370>
 80006a6:	b672      	cpsid	i
  while (1)
 80006a8:	e7fe      	b.n	80006a8 <main+0x320>
 80006aa:	bf00      	nop
 80006ac:	46020c00 	.word	0x46020c00
 80006b0:	42021000 	.word	0x42021000
 80006b4:	42020800 	.word	0x42020800
 80006b8:	42020c00 	.word	0x42020c00
 80006bc:	10210000 	.word	0x10210000
 80006c0:	20000610 	.word	0x20000610
 80006c4:	40031400 	.word	0x40031400
 80006c8:	200005e4 	.word	0x200005e4
 80006cc:	40031800 	.word	0x40031800
 80006d0:	2000063c 	.word	0x2000063c
 80006d4:	40023000 	.word	0x40023000
 80006d8:	200002cc 	.word	0x200002cc
 80006dc:	40016800 	.word	0x40016800
 80006e0:	2000057c 	.word	0x2000057c
 80006e4:	4002b000 	.word	0x4002b000
 80006e8:	20000570 	.word	0x20000570
 80006ec:	4002f000 	.word	0x4002f000
 80006f0:	20000510 	.word	0x20000510
 80006f4:	420d3400 	.word	0x420d3400
  MX66UW1G45G_ResetEnable(&hxspi1, MX66UW1G45G_SPI_MODE, MX66UW1G45G_STR_TRANSFER);
 80006f8:	4602      	mov	r2, r0
 80006fa:	4601      	mov	r1, r0
 80006fc:	4620      	mov	r0, r4
 80006fe:	f003 fb77 	bl	8003df0 <MX66UW1G45G_ResetEnable>
  MX66UW1G45G_ResetMemory(&hxspi1, MX66UW1G45G_SPI_MODE, MX66UW1G45G_STR_TRANSFER);
 8000702:	462a      	mov	r2, r5
 8000704:	4629      	mov	r1, r5
 8000706:	4620      	mov	r0, r4
 8000708:	f003 fba3 	bl	8003e52 <MX66UW1G45G_ResetMemory>
  HAL_Delay(MX66UW1G45G_RESET_MAX_TIME);
 800070c:	2064      	movs	r0, #100	@ 0x64
 800070e:	f003 fc2f 	bl	8003f70 <HAL_Delay>
  MX66UW1G45G_WriteEnable(&hxspi1, MX66UW1G45G_SPI_MODE, MX66UW1G45G_STR_TRANSFER);
 8000712:	462a      	mov	r2, r5
 8000714:	4629      	mov	r1, r5
 8000716:	4620      	mov	r0, r4
 8000718:	f003 fa98 	bl	8003c4c <MX66UW1G45G_WriteEnable>
  MX66UW1G45G_WriteCfg2Register(&hxspi1, MX66UW1G45G_SPI_MODE, MX66UW1G45G_STR_TRANSFER, MX66UW1G45G_CR2_REG3_ADDR, MX66UW1G45G_CR2_DC_6_CYCLES);
 800071c:	2307      	movs	r3, #7
 800071e:	462a      	mov	r2, r5
 8000720:	4629      	mov	r1, r5
 8000722:	4620      	mov	r0, r4
 8000724:	9300      	str	r3, [sp, #0]
 8000726:	f44f 7340 	mov.w	r3, #768	@ 0x300
 800072a:	f003 fb09 	bl	8003d40 <MX66UW1G45G_WriteCfg2Register>
  MX66UW1G45G_WriteEnable(&hxspi1, MX66UW1G45G_SPI_MODE, MX66UW1G45G_STR_TRANSFER);
 800072e:	462a      	mov	r2, r5
 8000730:	4629      	mov	r1, r5
 8000732:	4620      	mov	r0, r4
 8000734:	f003 fa8a 	bl	8003c4c <MX66UW1G45G_WriteEnable>
  MX66UW1G45G_WriteCfg2Register(&hxspi1, MX66UW1G45G_SPI_MODE, MX66UW1G45G_STR_TRANSFER, MX66UW1G45G_CR2_REG1_ADDR, MX66UW1G45G_CR2_DOPI);
 8000738:	462b      	mov	r3, r5
 800073a:	462a      	mov	r2, r5
 800073c:	4629      	mov	r1, r5
 800073e:	4620      	mov	r0, r4
 8000740:	9600      	str	r6, [sp, #0]
 8000742:	f003 fafd 	bl	8003d40 <MX66UW1G45G_WriteCfg2Register>
  HAL_Delay(MX66UW1G45G_WRITE_REG_MAX_TIME);
 8000746:	2028      	movs	r0, #40	@ 0x28
 8000748:	f003 fc12 	bl	8003f70 <HAL_Delay>
  MX66UW1G45G_EnableDTRMemoryMappedMode(&hxspi1, MX66UW1G45G_OPI_MODE);
 800074c:	2101      	movs	r1, #1
 800074e:	4620      	mov	r0, r4
 8000750:	f003 fa2d 	bl	8003bae <MX66UW1G45G_EnableDTRMemoryMappedMode>
  hi2c2.Instance = I2C2;
 8000754:	4c19      	ldr	r4, [pc, #100]	@ (80007bc <main+0x434>)
  hi2c2.Init.Timing = 0x00F07BFF;
 8000756:	4a1a      	ldr	r2, [pc, #104]	@ (80007c0 <main+0x438>)
 8000758:	4b1a      	ldr	r3, [pc, #104]	@ (80007c4 <main+0x43c>)
  if (HAL_I2C_Init(&hi2c2) != HAL_OK)
 800075a:	4620      	mov	r0, r4
  hi2c2.Init.Timing = 0x00F07BFF;
 800075c:	e9c4 2300 	strd	r2, r3, [r4]
  hi2c2.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 8000760:	2301      	movs	r3, #1
  hi2c2.Init.OwnAddress2Masks = I2C_OA2_NOMASK;
 8000762:	e9c4 5505 	strd	r5, r5, [r4, #20]
  hi2c2.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 8000766:	e9c4 3503 	strd	r3, r5, [r4, #12]
  hi2c2.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 800076a:	e9c4 5507 	strd	r5, r5, [r4, #28]
  hi2c2.Init.OwnAddress1 = 0;
 800076e:	60a5      	str	r5, [r4, #8]
  if (HAL_I2C_Init(&hi2c2) != HAL_OK)
 8000770:	f004 fc6b 	bl	800504a <HAL_I2C_Init>
 8000774:	4601      	mov	r1, r0
 8000776:	b108      	cbz	r0, 800077c <main+0x3f4>
 8000778:	b672      	cpsid	i
  while (1)
 800077a:	e7fe      	b.n	800077a <main+0x3f2>
  if (HAL_I2CEx_ConfigAnalogFilter(&hi2c2, I2C_ANALOGFILTER_ENABLE) != HAL_OK)
 800077c:	4620      	mov	r0, r4
 800077e:	f004 fe71 	bl	8005464 <HAL_I2CEx_ConfigAnalogFilter>
 8000782:	4601      	mov	r1, r0
 8000784:	b108      	cbz	r0, 800078a <main+0x402>
 8000786:	b672      	cpsid	i
  while (1)
 8000788:	e7fe      	b.n	8000788 <main+0x400>
  if (HAL_I2CEx_ConfigDigitalFilter(&hi2c2, 0) != HAL_OK)
 800078a:	4620      	mov	r0, r4
 800078c:	f004 fe90 	bl	80054b0 <HAL_I2CEx_ConfigDigitalFilter>
 8000790:	b108      	cbz	r0, 8000796 <main+0x40e>
 8000792:	b672      	cpsid	i
  while (1)
 8000794:	e7fe      	b.n	8000794 <main+0x40c>
  hjpeg.Instance = JPEG;
 8000796:	480c      	ldr	r0, [pc, #48]	@ (80007c8 <main+0x440>)
 8000798:	4b0c      	ldr	r3, [pc, #48]	@ (80007cc <main+0x444>)
 800079a:	6003      	str	r3, [r0, #0]
  if (HAL_JPEG_Init(&hjpeg) != HAL_OK)
 800079c:	f005 f88e 	bl	80058bc <HAL_JPEG_Init>
 80007a0:	b108      	cbz	r0, 80007a6 <main+0x41e>
 80007a2:	b672      	cpsid	i
  while (1)
 80007a4:	e7fe      	b.n	80007a4 <main+0x41c>
  MX_TouchGFX_Init();
 80007a6:	f000 fc01 	bl	8000fac <MX_TouchGFX_Init>
  MX_TouchGFX_PreOSInit();
 80007aa:	f000 fbfe 	bl	8000faa <MX_TouchGFX_PreOSInit>
  osKernelInitialize();
 80007ae:	f008 fa5f 	bl	8008c70 <osKernelInitialize>
  MX_FREERTOS_Init();
 80007b2:	f7ff fd91 	bl	80002d8 <MX_FREERTOS_Init>
  osKernelStart();
 80007b6:	f008 fa71 	bl	8008c9c <osKernelStart>
  while (1)
 80007ba:	e7fe      	b.n	80007ba <main+0x432>
 80007bc:	200004bc 	.word	0x200004bc
 80007c0:	40005800 	.word	0x40005800
 80007c4:	00f07bff 	.word	0x00f07bff
 80007c8:	20000464 	.word	0x20000464
 80007cc:	4002a000 	.word	0x4002a000

080007d0 <HAL_TIM_PeriodElapsedCallback>:
  if (htim->Instance == TIM6) {
 80007d0:	6802      	ldr	r2, [r0, #0]
 80007d2:	4b03      	ldr	r3, [pc, #12]	@ (80007e0 <HAL_TIM_PeriodElapsedCallback+0x10>)
 80007d4:	429a      	cmp	r2, r3
 80007d6:	d101      	bne.n	80007dc <HAL_TIM_PeriodElapsedCallback+0xc>
    HAL_IncTick();
 80007d8:	f003 bbb8 	b.w	8003f4c <HAL_IncTick>
}
 80007dc:	4770      	bx	lr
 80007de:	bf00      	nop
 80007e0:	40001000 	.word	0x40001000

080007e4 <Error_Handler>:
 80007e4:	b672      	cpsid	i
  while (1)
 80007e6:	e7fe      	b.n	80007e6 <Error_Handler+0x2>

080007e8 <HAL_MspInit>:

  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_PWR_CLK_ENABLE();
 80007e8:	4b0a      	ldr	r3, [pc, #40]	@ (8000814 <HAL_MspInit+0x2c>)

  /* System interrupt init*/
  /* PendSV_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 80007ea:	210f      	movs	r1, #15
  __HAL_RCC_PWR_CLK_ENABLE();
 80007ec:	f8d3 2094 	ldr.w	r2, [r3, #148]	@ 0x94
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 80007f0:	f06f 0001 	mvn.w	r0, #1
  __HAL_RCC_PWR_CLK_ENABLE();
 80007f4:	f042 0204 	orr.w	r2, r2, #4
 80007f8:	f8c3 2094 	str.w	r2, [r3, #148]	@ 0x94
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 80007fc:	2200      	movs	r2, #0
  __HAL_RCC_PWR_CLK_ENABLE();
 80007fe:	f8d3 3094 	ldr.w	r3, [r3, #148]	@ 0x94
{
 8000802:	b082      	sub	sp, #8
  __HAL_RCC_PWR_CLK_ENABLE();
 8000804:	f003 0304 	and.w	r3, r3, #4
 8000808:	9301      	str	r3, [sp, #4]
 800080a:	9b01      	ldr	r3, [sp, #4]

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 800080c:	b002      	add	sp, #8
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 800080e:	f003 bbdb 	b.w	8003fc8 <HAL_NVIC_SetPriority>
 8000812:	bf00      	nop
 8000814:	46020c00 	.word	0x46020c00

08000818 <HAL_CRC_MspInit>:
* @param hcrc: CRC handle pointer
* @retval None
*/
void HAL_CRC_MspInit(CRC_HandleTypeDef* hcrc)
{
  if(hcrc->Instance==CRC)
 8000818:	6802      	ldr	r2, [r0, #0]
 800081a:	4b09      	ldr	r3, [pc, #36]	@ (8000840 <HAL_CRC_MspInit+0x28>)
{
 800081c:	b082      	sub	sp, #8
  if(hcrc->Instance==CRC)
 800081e:	429a      	cmp	r2, r3
 8000820:	d10c      	bne.n	800083c <HAL_CRC_MspInit+0x24>
  {
  /* USER CODE BEGIN CRC_MspInit 0 */

  /* USER CODE END CRC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_CRC_CLK_ENABLE();
 8000822:	4b08      	ldr	r3, [pc, #32]	@ (8000844 <HAL_CRC_MspInit+0x2c>)
 8000824:	f8d3 2088 	ldr.w	r2, [r3, #136]	@ 0x88
 8000828:	f442 5280 	orr.w	r2, r2, #4096	@ 0x1000
 800082c:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
 8000830:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8000834:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 8000838:	9301      	str	r3, [sp, #4]
 800083a:	9b01      	ldr	r3, [sp, #4]
  /* USER CODE BEGIN CRC_MspInit 1 */

  /* USER CODE END CRC_MspInit 1 */
  }

}
 800083c:	b002      	add	sp, #8
 800083e:	4770      	bx	lr
 8000840:	40023000 	.word	0x40023000
 8000844:	46020c00 	.word	0x46020c00

08000848 <HAL_DCACHE_MspInit>:
* @param hdcache: DCACHE handle pointer
* @retval None
*/
void HAL_DCACHE_MspInit(DCACHE_HandleTypeDef* hdcache)
{
  if(hdcache->Instance==DCACHE1)
 8000848:	6803      	ldr	r3, [r0, #0]
 800084a:	4a12      	ldr	r2, [pc, #72]	@ (8000894 <HAL_DCACHE_MspInit+0x4c>)
{
 800084c:	b082      	sub	sp, #8
  if(hdcache->Instance==DCACHE1)
 800084e:	4293      	cmp	r3, r2
 8000850:	d10e      	bne.n	8000870 <HAL_DCACHE_MspInit+0x28>
  {
  /* USER CODE BEGIN DCACHE1_MspInit 0 */

  /* USER CODE END DCACHE1_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_DCACHE1_CLK_ENABLE();
 8000852:	4b11      	ldr	r3, [pc, #68]	@ (8000898 <HAL_DCACHE_MspInit+0x50>)
 8000854:	f8d3 2088 	ldr.w	r2, [r3, #136]	@ 0x88
 8000858:	f042 4280 	orr.w	r2, r2, #1073741824	@ 0x40000000
 800085c:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
 8000860:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8000864:	f003 4380 	and.w	r3, r3, #1073741824	@ 0x40000000
 8000868:	9300      	str	r3, [sp, #0]
 800086a:	9b00      	ldr	r3, [sp, #0]
  /* USER CODE BEGIN DCACHE2_MspInit 1 */

  /* USER CODE END DCACHE2_MspInit 1 */
  }

}
 800086c:	b002      	add	sp, #8
 800086e:	4770      	bx	lr
  else if(hdcache->Instance==DCACHE2)
 8000870:	4a0a      	ldr	r2, [pc, #40]	@ (800089c <HAL_DCACHE_MspInit+0x54>)
 8000872:	4293      	cmp	r3, r2
 8000874:	d1fa      	bne.n	800086c <HAL_DCACHE_MspInit+0x24>
    __HAL_RCC_DCACHE2_CLK_ENABLE();
 8000876:	4b08      	ldr	r3, [pc, #32]	@ (8000898 <HAL_DCACHE_MspInit+0x50>)
 8000878:	f8d3 2088 	ldr.w	r2, [r3, #136]	@ 0x88
 800087c:	f442 1200 	orr.w	r2, r2, #2097152	@ 0x200000
 8000880:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
 8000884:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8000888:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 800088c:	9301      	str	r3, [sp, #4]
 800088e:	9b01      	ldr	r3, [sp, #4]
}
 8000890:	e7ec      	b.n	800086c <HAL_DCACHE_MspInit+0x24>
 8000892:	bf00      	nop
 8000894:	40031400 	.word	0x40031400
 8000898:	46020c00 	.word	0x46020c00
 800089c:	40031800 	.word	0x40031800

080008a0 <HAL_DMA2D_MspInit>:
* This function configures the hardware resources used in this example
* @param hdma2d: DMA2D handle pointer
* @retval None
*/
void HAL_DMA2D_MspInit(DMA2D_HandleTypeDef* hdma2d)
{
 80008a0:	b507      	push	{r0, r1, r2, lr}
  if(hdma2d->Instance==DMA2D)
 80008a2:	4b0f      	ldr	r3, [pc, #60]	@ (80008e0 <HAL_DMA2D_MspInit+0x40>)
 80008a4:	6802      	ldr	r2, [r0, #0]
 80008a6:	429a      	cmp	r2, r3
 80008a8:	d117      	bne.n	80008da <HAL_DMA2D_MspInit+0x3a>
  {
  /* USER CODE BEGIN DMA2D_MspInit 0 */

  /* USER CODE END DMA2D_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_DMA2D_CLK_ENABLE();
 80008aa:	4b0e      	ldr	r3, [pc, #56]	@ (80008e4 <HAL_DMA2D_MspInit+0x44>)
    /* DMA2D interrupt Init */
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 80008ac:	2105      	movs	r1, #5
    __HAL_RCC_DMA2D_CLK_ENABLE();
 80008ae:	f8d3 2088 	ldr.w	r2, [r3, #136]	@ 0x88
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 80008b2:	2076      	movs	r0, #118	@ 0x76
    __HAL_RCC_DMA2D_CLK_ENABLE();
 80008b4:	f442 2280 	orr.w	r2, r2, #262144	@ 0x40000
 80008b8:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
 80008bc:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 80008c0:	2200      	movs	r2, #0
    __HAL_RCC_DMA2D_CLK_ENABLE();
 80008c2:	f403 2380 	and.w	r3, r3, #262144	@ 0x40000
 80008c6:	9301      	str	r3, [sp, #4]
 80008c8:	9b01      	ldr	r3, [sp, #4]
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 80008ca:	f003 fb7d 	bl	8003fc8 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 80008ce:	2076      	movs	r0, #118	@ 0x76
  /* USER CODE BEGIN DMA2D_MspInit 1 */

  /* USER CODE END DMA2D_MspInit 1 */
  }

}
 80008d0:	b003      	add	sp, #12
 80008d2:	f85d eb04 	ldr.w	lr, [sp], #4
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 80008d6:	f003 bba7 	b.w	8004028 <HAL_NVIC_EnableIRQ>
}
 80008da:	b003      	add	sp, #12
 80008dc:	f85d fb04 	ldr.w	pc, [sp], #4
 80008e0:	4002b000 	.word	0x4002b000
 80008e4:	46020c00 	.word	0x46020c00

080008e8 <HAL_GPU2D_MspInit>:
* This function configures the hardware resources used in this example
* @param hgpu2d: GPU2D handle pointer
* @retval None
*/
void HAL_GPU2D_MspInit(GPU2D_HandleTypeDef* hgpu2d)
{
 80008e8:	b507      	push	{r0, r1, r2, lr}
  if(hgpu2d->Instance==GPU2D)
 80008ea:	4b19      	ldr	r3, [pc, #100]	@ (8000950 <HAL_GPU2D_MspInit+0x68>)
 80008ec:	6802      	ldr	r2, [r0, #0]
 80008ee:	429a      	cmp	r2, r3
 80008f0:	d12b      	bne.n	800094a <HAL_GPU2D_MspInit+0x62>
  {
  /* USER CODE BEGIN GPU2D_MspInit 0 */

  /* USER CODE END GPU2D_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_GPU2D_CLK_ENABLE();
 80008f2:	4b18      	ldr	r3, [pc, #96]	@ (8000954 <HAL_GPU2D_MspInit+0x6c>)
    __HAL_RCC_DCACHE2_CLK_ENABLE();
    /* GPU2D interrupt Init */
    HAL_NVIC_SetPriority(GPU2D_IRQn, 5, 0);
 80008f4:	2105      	movs	r1, #5
    __HAL_RCC_GPU2D_CLK_ENABLE();
 80008f6:	f8d3 2088 	ldr.w	r2, [r3, #136]	@ 0x88
    HAL_NVIC_SetPriority(GPU2D_IRQn, 5, 0);
 80008fa:	2084      	movs	r0, #132	@ 0x84
    __HAL_RCC_GPU2D_CLK_ENABLE();
 80008fc:	f442 1280 	orr.w	r2, r2, #1048576	@ 0x100000
 8000900:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
 8000904:	f8d3 2088 	ldr.w	r2, [r3, #136]	@ 0x88
 8000908:	f402 1280 	and.w	r2, r2, #1048576	@ 0x100000
 800090c:	9200      	str	r2, [sp, #0]
 800090e:	9a00      	ldr	r2, [sp, #0]
    __HAL_RCC_DCACHE2_CLK_ENABLE();
 8000910:	f8d3 2088 	ldr.w	r2, [r3, #136]	@ 0x88
 8000914:	f442 1200 	orr.w	r2, r2, #2097152	@ 0x200000
 8000918:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
 800091c:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
    HAL_NVIC_SetPriority(GPU2D_IRQn, 5, 0);
 8000920:	2200      	movs	r2, #0
    __HAL_RCC_DCACHE2_CLK_ENABLE();
 8000922:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 8000926:	9301      	str	r3, [sp, #4]
 8000928:	9b01      	ldr	r3, [sp, #4]
    HAL_NVIC_SetPriority(GPU2D_IRQn, 5, 0);
 800092a:	f003 fb4d 	bl	8003fc8 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(GPU2D_IRQn);
 800092e:	2084      	movs	r0, #132	@ 0x84
 8000930:	f003 fb7a 	bl	8004028 <HAL_NVIC_EnableIRQ>
    HAL_NVIC_SetPriority(GPU2D_ER_IRQn, 5, 0);
 8000934:	2200      	movs	r2, #0
 8000936:	2105      	movs	r1, #5
 8000938:	2085      	movs	r0, #133	@ 0x85
 800093a:	f003 fb45 	bl	8003fc8 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(GPU2D_ER_IRQn);
 800093e:	2085      	movs	r0, #133	@ 0x85
  /* USER CODE BEGIN GPU2D_MspInit 1 */

  /* USER CODE END GPU2D_MspInit 1 */
  }

}
 8000940:	b003      	add	sp, #12
 8000942:	f85d eb04 	ldr.w	lr, [sp], #4
    HAL_NVIC_EnableIRQ(GPU2D_ER_IRQn);
 8000946:	f003 bb6f 	b.w	8004028 <HAL_NVIC_EnableIRQ>
}
 800094a:	b003      	add	sp, #12
 800094c:	f85d fb04 	ldr.w	pc, [sp], #4
 8000950:	4002f000 	.word	0x4002f000
 8000954:	46020c00 	.word	0x46020c00

08000958 <HAL_XSPI_MspInit>:
* This function configures the hardware resources used in this example
* @param hxspi: XSPI handle pointer
* @retval None
*/
void HAL_XSPI_MspInit(XSPI_HandleTypeDef* hxspi)
{
 8000958:	b5f0      	push	{r4, r5, r6, r7, lr}
 800095a:	4604      	mov	r4, r0
 800095c:	b0c1      	sub	sp, #260	@ 0x104
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800095e:	2214      	movs	r2, #20
 8000960:	2100      	movs	r1, #0
 8000962:	a803      	add	r0, sp, #12
 8000964:	f032 f90f 	bl	8032b86 <memset>
  RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 8000968:	22e0      	movs	r2, #224	@ 0xe0
 800096a:	2100      	movs	r1, #0
 800096c:	a808      	add	r0, sp, #32
 800096e:	f032 f90a 	bl	8032b86 <memset>
  if(hxspi->Instance==HSPI1)
 8000972:	6822      	ldr	r2, [r4, #0]
 8000974:	4b32      	ldr	r3, [pc, #200]	@ (8000a40 <HAL_XSPI_MspInit+0xe8>)
 8000976:	429a      	cmp	r2, r3
 8000978:	d15f      	bne.n	8000a3a <HAL_XSPI_MspInit+0xe2>

  /* USER CODE END HSPI1_MspInit 0 */

  /** Initializes the peripherals clock
  */
    PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_HSPI;
 800097a:	2301      	movs	r3, #1
 800097c:	2200      	movs	r2, #0
 800097e:	e9cd 2308 	strd	r2, r3, [sp, #32]
    PeriphClkInit.HspiClockSelection = RCC_HSPICLKSOURCE_PLL2;
 8000982:	f44f 0300 	mov.w	r3, #8388608	@ 0x800000
    PeriphClkInit.PLL2.PLL2Source = RCC_PLLSOURCE_HSE;
    PeriphClkInit.PLL2.PLL2M = 4;
 8000986:	2103      	movs	r1, #3
    PeriphClkInit.HspiClockSelection = RCC_HSPICLKSOURCE_PLL2;
 8000988:	9338      	str	r3, [sp, #224]	@ 0xe0
    PeriphClkInit.PLL2.PLL2M = 4;
 800098a:	2304      	movs	r3, #4
    PeriphClkInit.PLL2.PLL2N = 66;
    PeriphClkInit.PLL2.PLL2P = 2;
 800098c:	2042      	movs	r0, #66	@ 0x42
    PeriphClkInit.PLL2.PLL2M = 4;
 800098e:	e9cd 130a 	strd	r1, r3, [sp, #40]	@ 0x28
    PeriphClkInit.PLL2.PLL2P = 2;
 8000992:	2302      	movs	r3, #2
 8000994:	e9cd 030c 	strd	r0, r3, [sp, #48]	@ 0x30
    PeriphClkInit.PLL2.PLL2Q = 2;
    PeriphClkInit.PLL2.PLL2R = 2;
 8000998:	e9cd 330e 	strd	r3, r3, [sp, #56]	@ 0x38
    PeriphClkInit.PLL2.PLL2RGE = RCC_PLLVCIRANGE_0;
    PeriphClkInit.PLL2.PLL2FRACN = 0;
    PeriphClkInit.PLL2.PLL2ClockOut = RCC_PLL2_DIVQ;
 800099c:	f44f 3300 	mov.w	r3, #131072	@ 0x20000
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 80009a0:	a808      	add	r0, sp, #32
    PeriphClkInit.PLL2.PLL2ClockOut = RCC_PLL2_DIVQ;
 80009a2:	9312      	str	r3, [sp, #72]	@ 0x48
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 80009a4:	f006 ff54 	bl	8007850 <HAL_RCCEx_PeriphCLKConfig>
 80009a8:	b108      	cbz	r0, 80009ae <HAL_XSPI_MspInit+0x56>
    {
      Error_Handler();
 80009aa:	f7ff ff1b 	bl	80007e4 <Error_Handler>
    }

    /* Peripheral clock enable */
    __HAL_RCC_HSPI1_CLK_ENABLE();
 80009ae:	4b25      	ldr	r3, [pc, #148]	@ (8000a44 <HAL_XSPI_MspInit+0xec>)
    */
    GPIO_InitStruct.Pin = GPIO_PIN_9|GPIO_PIN_10|GPIO_PIN_11|GPIO_PIN_12
                          |GPIO_PIN_13|GPIO_PIN_14|GPIO_PIN_15;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80009b0:	2400      	movs	r4, #0
    __HAL_RCC_HSPI1_CLK_ENABLE();
 80009b2:	f8d3 2090 	ldr.w	r2, [r3, #144]	@ 0x90
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80009b6:	2702      	movs	r7, #2
    __HAL_RCC_HSPI1_CLK_ENABLE();
 80009b8:	f442 5280 	orr.w	r2, r2, #4096	@ 0x1000
 80009bc:	f8c3 2090 	str.w	r2, [r3, #144]	@ 0x90
 80009c0:	f8d3 2090 	ldr.w	r2, [r3, #144]	@ 0x90
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80009c4:	2603      	movs	r6, #3
    __HAL_RCC_HSPI1_CLK_ENABLE();
 80009c6:	f402 5280 	and.w	r2, r2, #4096	@ 0x1000
 80009ca:	9200      	str	r2, [sp, #0]
 80009cc:	9a00      	ldr	r2, [sp, #0]
    __HAL_RCC_GPIOH_CLK_ENABLE();
 80009ce:	f8d3 208c 	ldr.w	r2, [r3, #140]	@ 0x8c
    GPIO_InitStruct.Alternate = GPIO_AF8_HSPI1;
 80009d2:	2508      	movs	r5, #8
    __HAL_RCC_GPIOH_CLK_ENABLE();
 80009d4:	f042 0280 	orr.w	r2, r2, #128	@ 0x80
 80009d8:	f8c3 208c 	str.w	r2, [r3, #140]	@ 0x8c
 80009dc:	f8d3 208c 	ldr.w	r2, [r3, #140]	@ 0x8c
    HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 80009e0:	4819      	ldr	r0, [pc, #100]	@ (8000a48 <HAL_XSPI_MspInit+0xf0>)
    __HAL_RCC_GPIOH_CLK_ENABLE();
 80009e2:	f002 0280 	and.w	r2, r2, #128	@ 0x80
 80009e6:	9201      	str	r2, [sp, #4]
 80009e8:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOI_CLK_ENABLE();
 80009ea:	f8d3 208c 	ldr.w	r2, [r3, #140]	@ 0x8c
    HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 80009ee:	a903      	add	r1, sp, #12
    __HAL_RCC_GPIOI_CLK_ENABLE();
 80009f0:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 80009f4:	f8c3 208c 	str.w	r2, [r3, #140]	@ 0x8c
 80009f8:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80009fc:	e9cd 4605 	strd	r4, r6, [sp, #20]
    __HAL_RCC_GPIOI_CLK_ENABLE();
 8000a00:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8000a04:	9302      	str	r3, [sp, #8]
 8000a06:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000a08:	f44f 437e 	mov.w	r3, #65024	@ 0xfe00
    GPIO_InitStruct.Alternate = GPIO_AF8_HSPI1;
 8000a0c:	9507      	str	r5, [sp, #28]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000a0e:	e9cd 3703 	strd	r3, r7, [sp, #12]
    HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 8000a12:	f004 f87d 	bl	8004b10 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3;
 8000a16:	230f      	movs	r3, #15
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF8_HSPI1;
    HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
 8000a18:	480c      	ldr	r0, [pc, #48]	@ (8000a4c <HAL_XSPI_MspInit+0xf4>)
 8000a1a:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000a1c:	e9cd 3703 	strd	r3, r7, [sp, #12]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000a20:	e9cd 4605 	strd	r4, r6, [sp, #20]
    GPIO_InitStruct.Alternate = GPIO_AF8_HSPI1;
 8000a24:	9507      	str	r5, [sp, #28]
    HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
 8000a26:	f004 f873 	bl	8004b10 <HAL_GPIO_Init>

    /* HSPI1 interrupt Init */
    HAL_NVIC_SetPriority(HSPI1_IRQn, 5, 0);
 8000a2a:	2083      	movs	r0, #131	@ 0x83
 8000a2c:	4622      	mov	r2, r4
 8000a2e:	2105      	movs	r1, #5
 8000a30:	f003 faca 	bl	8003fc8 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(HSPI1_IRQn);
 8000a34:	2083      	movs	r0, #131	@ 0x83
 8000a36:	f003 faf7 	bl	8004028 <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN HSPI1_MspInit 1 */

  /* USER CODE END HSPI1_MspInit 1 */
  }

}
 8000a3a:	b041      	add	sp, #260	@ 0x104
 8000a3c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000a3e:	bf00      	nop
 8000a40:	420d3400 	.word	0x420d3400
 8000a44:	46020c00 	.word	0x46020c00
 8000a48:	42021c00 	.word	0x42021c00
 8000a4c:	42022000 	.word	0x42022000

08000a50 <HAL_I2C_MspInit>:
* This function configures the hardware resources used in this example
* @param hi2c: I2C handle pointer
* @retval None
*/
void HAL_I2C_MspInit(I2C_HandleTypeDef* hi2c)
{
 8000a50:	b510      	push	{r4, lr}
 8000a52:	4604      	mov	r4, r0
 8000a54:	b0c0      	sub	sp, #256	@ 0x100
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000a56:	2214      	movs	r2, #20
 8000a58:	2100      	movs	r1, #0
 8000a5a:	a803      	add	r0, sp, #12
 8000a5c:	f032 f893 	bl	8032b86 <memset>
  RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 8000a60:	22e0      	movs	r2, #224	@ 0xe0
 8000a62:	2100      	movs	r1, #0
 8000a64:	a808      	add	r0, sp, #32
 8000a66:	f032 f88e 	bl	8032b86 <memset>
  if(hi2c->Instance==I2C2)
 8000a6a:	6822      	ldr	r2, [r4, #0]
 8000a6c:	4b1a      	ldr	r3, [pc, #104]	@ (8000ad8 <HAL_I2C_MspInit+0x88>)
 8000a6e:	429a      	cmp	r2, r3
 8000a70:	d12f      	bne.n	8000ad2 <HAL_I2C_MspInit+0x82>

  /* USER CODE END I2C2_MspInit 0 */

  /** Initializes the peripherals clock
  */
    PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_I2C2;
 8000a72:	2280      	movs	r2, #128	@ 0x80
 8000a74:	2300      	movs	r3, #0
    PeriphClkInit.I2c2ClockSelection = RCC_I2C2CLKSOURCE_PCLK1;
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 8000a76:	a808      	add	r0, sp, #32
    PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_I2C2;
 8000a78:	e9cd 2308 	strd	r2, r3, [sp, #32]
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 8000a7c:	f006 fee8 	bl	8007850 <HAL_RCCEx_PeriphCLKConfig>
 8000a80:	b108      	cbz	r0, 8000a86 <HAL_I2C_MspInit+0x36>
    {
      Error_Handler();
 8000a82:	f7ff feaf 	bl	80007e4 <Error_Handler>
    }

    __HAL_RCC_GPIOF_CLK_ENABLE();
 8000a86:	4c15      	ldr	r4, [pc, #84]	@ (8000adc <HAL_I2C_MspInit+0x8c>)
    /**I2C2 GPIO Configuration
    PF0     ------> I2C2_SDA
    PF1     ------> I2C2_SCL
    */
    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8000a88:	2203      	movs	r2, #3
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8000a8a:	f8d4 308c 	ldr.w	r3, [r4, #140]	@ 0x8c
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C2;
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8000a8e:	4814      	ldr	r0, [pc, #80]	@ (8000ae0 <HAL_I2C_MspInit+0x90>)
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8000a90:	f043 0320 	orr.w	r3, r3, #32
 8000a94:	f8c4 308c 	str.w	r3, [r4, #140]	@ 0x8c
 8000a98:	f8d4 308c 	ldr.w	r3, [r4, #140]	@ 0x8c
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8000a9c:	a903      	add	r1, sp, #12
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8000a9e:	f003 0320 	and.w	r3, r3, #32
 8000aa2:	9301      	str	r3, [sp, #4]
 8000aa4:	9b01      	ldr	r3, [sp, #4]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8000aa6:	2312      	movs	r3, #18
 8000aa8:	e9cd 2303 	strd	r2, r3, [sp, #12]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000aac:	2300      	movs	r3, #0
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000aae:	e9cd 3305 	strd	r3, r3, [sp, #20]
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C2;
 8000ab2:	2304      	movs	r3, #4
 8000ab4:	9307      	str	r3, [sp, #28]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8000ab6:	f004 f82b 	bl	8004b10 <HAL_GPIO_Init>

    /* Peripheral clock enable */
    __HAL_RCC_I2C2_CLK_ENABLE();
 8000aba:	f8d4 309c 	ldr.w	r3, [r4, #156]	@ 0x9c
 8000abe:	f443 0380 	orr.w	r3, r3, #4194304	@ 0x400000
 8000ac2:	f8c4 309c 	str.w	r3, [r4, #156]	@ 0x9c
 8000ac6:	f8d4 309c 	ldr.w	r3, [r4, #156]	@ 0x9c
 8000aca:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8000ace:	9302      	str	r3, [sp, #8]
 8000ad0:	9b02      	ldr	r3, [sp, #8]
  /* USER CODE BEGIN I2C2_MspInit 1 */

  /* USER CODE END I2C2_MspInit 1 */
  }

}
 8000ad2:	b040      	add	sp, #256	@ 0x100
 8000ad4:	bd10      	pop	{r4, pc}
 8000ad6:	bf00      	nop
 8000ad8:	40005800 	.word	0x40005800
 8000adc:	46020c00 	.word	0x46020c00
 8000ae0:	42021400 	.word	0x42021400

08000ae4 <HAL_JPEG_MspInit>:
* This function configures the hardware resources used in this example
* @param hjpeg: JPEG handle pointer
* @retval None
*/
void HAL_JPEG_MspInit(JPEG_HandleTypeDef* hjpeg)
{
 8000ae4:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
  DMA_DataHandlingConfTypeDef DataHandlingConfig;
  if(hjpeg->Instance==JPEG)
 8000ae6:	6802      	ldr	r2, [r0, #0]
 8000ae8:	4b3d      	ldr	r3, [pc, #244]	@ (8000be0 <HAL_JPEG_MspInit+0xfc>)
{
 8000aea:	4605      	mov	r5, r0
  if(hjpeg->Instance==JPEG)
 8000aec:	429a      	cmp	r2, r3
 8000aee:	d174      	bne.n	8000bda <HAL_JPEG_MspInit+0xf6>
  {
  /* USER CODE BEGIN JPEG_MspInit 0 */

  /* USER CODE END JPEG_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_JPEG_CLK_ENABLE();
 8000af0:	4b3c      	ldr	r3, [pc, #240]	@ (8000be4 <HAL_JPEG_MspInit+0x100>)
    handle_GPDMA1_Channel1.Init.Request = GPDMA1_REQUEST_JPEG_TX;
    handle_GPDMA1_Channel1.Init.BlkHWRequest = DMA_BREQ_SINGLE_BURST;
    handle_GPDMA1_Channel1.Init.Direction = DMA_PERIPH_TO_MEMORY;
    handle_GPDMA1_Channel1.Init.SrcInc = DMA_SINC_FIXED;
    handle_GPDMA1_Channel1.Init.DestInc = DMA_DINC_INCREMENTED;
    handle_GPDMA1_Channel1.Init.SrcDataWidth = DMA_SRC_DATAWIDTH_WORD;
 8000af2:	f44f 2600 	mov.w	r6, #524288	@ 0x80000
    __HAL_RCC_JPEG_CLK_ENABLE();
 8000af6:	f8d3 2088 	ldr.w	r2, [r3, #136]	@ 0x88
    handle_GPDMA1_Channel1.Instance = GPDMA1_Channel1;
 8000afa:	4c3b      	ldr	r4, [pc, #236]	@ (8000be8 <HAL_JPEG_MspInit+0x104>)
    __HAL_RCC_JPEG_CLK_ENABLE();
 8000afc:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 8000b00:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
    handle_GPDMA1_Channel1.Init.SrcDataWidth = DMA_SRC_DATAWIDTH_WORD;
 8000b04:	2202      	movs	r2, #2
    __HAL_RCC_JPEG_CLK_ENABLE();
 8000b06:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
    handle_GPDMA1_Channel1.Init.DestDataWidth = DMA_DEST_DATAWIDTH_WORD;
    handle_GPDMA1_Channel1.Init.Priority = DMA_HIGH_PRIORITY;
 8000b0a:	f44f 3c00 	mov.w	ip, #131072	@ 0x20000
    handle_GPDMA1_Channel1.Init.SrcDataWidth = DMA_SRC_DATAWIDTH_WORD;
 8000b0e:	e9c4 6205 	strd	r6, r2, [r4, #20]
    handle_GPDMA1_Channel1.Init.Priority = DMA_HIGH_PRIORITY;
 8000b12:	f44f 0240 	mov.w	r2, #12582912	@ 0xc00000
    __HAL_RCC_JPEG_CLK_ENABLE();
 8000b16:	f403 4300 	and.w	r3, r3, #32768	@ 0x8000
 8000b1a:	9301      	str	r3, [sp, #4]
    handle_GPDMA1_Channel1.Init.Priority = DMA_HIGH_PRIORITY;
 8000b1c:	e9c4 c207 	strd	ip, r2, [r4, #28]
    __HAL_RCC_JPEG_CLK_ENABLE();
 8000b20:	9b01      	ldr	r3, [sp, #4]
    handle_GPDMA1_Channel1.Init.SrcBurstLength = 8;
 8000b22:	2208      	movs	r2, #8
    handle_GPDMA1_Channel1.Init.Request = GPDMA1_REQUEST_JPEG_TX;
 8000b24:	237d      	movs	r3, #125	@ 0x7d
 8000b26:	4831      	ldr	r0, [pc, #196]	@ (8000bec <HAL_JPEG_MspInit+0x108>)
    handle_GPDMA1_Channel1.Init.DestBurstLength = 8;
 8000b28:	e9c4 2209 	strd	r2, r2, [r4, #36]	@ 0x24
    handle_GPDMA1_Channel1.Init.Request = GPDMA1_REQUEST_JPEG_TX;
 8000b2c:	e9c4 0300 	strd	r0, r3, [r4]
    handle_GPDMA1_Channel1.Init.TransferAllocatedPort = DMA_SRC_ALLOCATED_PORT0|DMA_DEST_ALLOCATED_PORT1;
 8000b30:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
    handle_GPDMA1_Channel1.Init.BlkHWRequest = DMA_BREQ_SINGLE_BURST;
 8000b34:	2300      	movs	r3, #0
    handle_GPDMA1_Channel1.Init.TransferEventMode = DMA_TCEM_BLOCK_TRANSFER;
    handle_GPDMA1_Channel1.Init.Mode = DMA_NORMAL;
    if (HAL_DMA_Init(&handle_GPDMA1_Channel1) != HAL_OK)
 8000b36:	4620      	mov	r0, r4
    handle_GPDMA1_Channel1.Init.Direction = DMA_PERIPH_TO_MEMORY;
 8000b38:	e9c4 3302 	strd	r3, r3, [r4, #8]
    handle_GPDMA1_Channel1.Init.TransferEventMode = DMA_TCEM_BLOCK_TRANSFER;
 8000b3c:	e9c4 230b 	strd	r2, r3, [r4, #44]	@ 0x2c
    handle_GPDMA1_Channel1.Init.SrcInc = DMA_SINC_FIXED;
 8000b40:	6123      	str	r3, [r4, #16]
    handle_GPDMA1_Channel1.Init.Mode = DMA_NORMAL;
 8000b42:	6363      	str	r3, [r4, #52]	@ 0x34
    if (HAL_DMA_Init(&handle_GPDMA1_Channel1) != HAL_OK)
 8000b44:	f003 fb66 	bl	8004214 <HAL_DMA_Init>
 8000b48:	b108      	cbz	r0, 8000b4e <HAL_JPEG_MspInit+0x6a>
    {
      Error_Handler();
 8000b4a:	f7ff fe4b 	bl	80007e4 <Error_Handler>
    }

    __HAL_LINKDMA(hjpeg, hdmaout, handle_GPDMA1_Channel1);
 8000b4e:	636c      	str	r4, [r5, #52]	@ 0x34

    if (HAL_DMA_ConfigChannelAttributes(&handle_GPDMA1_Channel1, DMA_CHANNEL_NPRIV) != HAL_OK)
 8000b50:	2110      	movs	r1, #16
 8000b52:	4825      	ldr	r0, [pc, #148]	@ (8000be8 <HAL_JPEG_MspInit+0x104>)
    __HAL_LINKDMA(hjpeg, hdmaout, handle_GPDMA1_Channel1);
 8000b54:	65e5      	str	r5, [r4, #92]	@ 0x5c
    if (HAL_DMA_ConfigChannelAttributes(&handle_GPDMA1_Channel1, DMA_CHANNEL_NPRIV) != HAL_OK)
 8000b56:	f003 fe6d 	bl	8004834 <HAL_DMA_ConfigChannelAttributes>
 8000b5a:	b108      	cbz	r0, 8000b60 <HAL_JPEG_MspInit+0x7c>
    {
      Error_Handler();
 8000b5c:	f7ff fe42 	bl	80007e4 <Error_Handler>
    }

    /* GPDMA1_REQUEST_JPEG_RX Init */
    handle_GPDMA1_Channel0.Instance = GPDMA1_Channel0;
    handle_GPDMA1_Channel0.Init.Request = GPDMA1_REQUEST_JPEG_RX;
 8000b60:	237c      	movs	r3, #124	@ 0x7c
    handle_GPDMA1_Channel0.Instance = GPDMA1_Channel0;
 8000b62:	4c23      	ldr	r4, [pc, #140]	@ (8000bf0 <HAL_JPEG_MspInit+0x10c>)
    handle_GPDMA1_Channel0.Init.Request = GPDMA1_REQUEST_JPEG_RX;
 8000b64:	4a23      	ldr	r2, [pc, #140]	@ (8000bf4 <HAL_JPEG_MspInit+0x110>)
    handle_GPDMA1_Channel0.Init.BlkHWRequest = DMA_BREQ_SINGLE_BURST;
    handle_GPDMA1_Channel0.Init.Direction = DMA_MEMORY_TO_PERIPH;
 8000b66:	2600      	movs	r6, #0
    handle_GPDMA1_Channel0.Init.Request = GPDMA1_REQUEST_JPEG_RX;
 8000b68:	e9c4 2300 	strd	r2, r3, [r4]
    handle_GPDMA1_Channel0.Init.Direction = DMA_MEMORY_TO_PERIPH;
 8000b6c:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 8000b70:	e9c4 6302 	strd	r6, r3, [r4, #8]
    handle_GPDMA1_Channel0.Init.SrcInc = DMA_SINC_INCREMENTED;
 8000b74:	2308      	movs	r3, #8
    handle_GPDMA1_Channel0.Init.DestInc = DMA_DINC_FIXED;
    handle_GPDMA1_Channel0.Init.SrcDataWidth = DMA_SRC_DATAWIDTH_BYTE;
    handle_GPDMA1_Channel0.Init.DestDataWidth = DMA_DEST_DATAWIDTH_WORD;
    handle_GPDMA1_Channel0.Init.Priority = DMA_HIGH_PRIORITY;
 8000b76:	f44f 3100 	mov.w	r1, #131072	@ 0x20000
 8000b7a:	f44f 0240 	mov.w	r2, #12582912	@ 0xc00000
    handle_GPDMA1_Channel0.Init.DestInc = DMA_DINC_FIXED;
 8000b7e:	e9c4 3604 	strd	r3, r6, [r4, #16]
    handle_GPDMA1_Channel0.Init.SrcBurstLength = 8;
    handle_GPDMA1_Channel0.Init.DestBurstLength = 8;
 8000b82:	e9c4 3309 	strd	r3, r3, [r4, #36]	@ 0x24
    handle_GPDMA1_Channel0.Init.TransferAllocatedPort = DMA_SRC_ALLOCATED_PORT1|DMA_DEST_ALLOCATED_PORT0;
 8000b86:	f44f 4380 	mov.w	r3, #16384	@ 0x4000
    handle_GPDMA1_Channel0.Init.TransferEventMode = DMA_TCEM_BLOCK_TRANSFER;
    handle_GPDMA1_Channel0.Init.Mode = DMA_NORMAL;
    if (HAL_DMA_Init(&handle_GPDMA1_Channel0) != HAL_OK)
 8000b8a:	4620      	mov	r0, r4
    handle_GPDMA1_Channel0.Init.Priority = DMA_HIGH_PRIORITY;
 8000b8c:	e9c4 1207 	strd	r1, r2, [r4, #28]
    handle_GPDMA1_Channel0.Init.TransferEventMode = DMA_TCEM_BLOCK_TRANSFER;
 8000b90:	e9c4 360b 	strd	r3, r6, [r4, #44]	@ 0x2c
    handle_GPDMA1_Channel0.Init.SrcDataWidth = DMA_SRC_DATAWIDTH_BYTE;
 8000b94:	61a6      	str	r6, [r4, #24]
    handle_GPDMA1_Channel0.Init.Mode = DMA_NORMAL;
 8000b96:	6366      	str	r6, [r4, #52]	@ 0x34
    if (HAL_DMA_Init(&handle_GPDMA1_Channel0) != HAL_OK)
 8000b98:	f003 fb3c 	bl	8004214 <HAL_DMA_Init>
 8000b9c:	b108      	cbz	r0, 8000ba2 <HAL_JPEG_MspInit+0xbe>
    {
      Error_Handler();
 8000b9e:	f7ff fe21 	bl	80007e4 <Error_Handler>
    }

    DataHandlingConfig.DataExchange = DMA_EXCHANGE_NONE;
    DataHandlingConfig.DataAlignment = DMA_DATA_PACK;
 8000ba2:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
    if (HAL_DMAEx_ConfigDataHandling(&handle_GPDMA1_Channel0, &DataHandlingConfig) != HAL_OK)
 8000ba6:	4812      	ldr	r0, [pc, #72]	@ (8000bf0 <HAL_JPEG_MspInit+0x10c>)
 8000ba8:	a902      	add	r1, sp, #8
    DataHandlingConfig.DataExchange = DMA_EXCHANGE_NONE;
 8000baa:	9602      	str	r6, [sp, #8]
    DataHandlingConfig.DataAlignment = DMA_DATA_PACK;
 8000bac:	9303      	str	r3, [sp, #12]
    if (HAL_DMAEx_ConfigDataHandling(&handle_GPDMA1_Channel0, &DataHandlingConfig) != HAL_OK)
 8000bae:	f003 ff8f 	bl	8004ad0 <HAL_DMAEx_ConfigDataHandling>
 8000bb2:	b108      	cbz	r0, 8000bb8 <HAL_JPEG_MspInit+0xd4>
    {
      Error_Handler();
 8000bb4:	f7ff fe16 	bl	80007e4 <Error_Handler>
    }

    __HAL_LINKDMA(hjpeg, hdmain, handle_GPDMA1_Channel0);
 8000bb8:	632c      	str	r4, [r5, #48]	@ 0x30

    if (HAL_DMA_ConfigChannelAttributes(&handle_GPDMA1_Channel0, DMA_CHANNEL_NPRIV) != HAL_OK)
 8000bba:	2110      	movs	r1, #16
 8000bbc:	480c      	ldr	r0, [pc, #48]	@ (8000bf0 <HAL_JPEG_MspInit+0x10c>)
    __HAL_LINKDMA(hjpeg, hdmain, handle_GPDMA1_Channel0);
 8000bbe:	65e5      	str	r5, [r4, #92]	@ 0x5c
    if (HAL_DMA_ConfigChannelAttributes(&handle_GPDMA1_Channel0, DMA_CHANNEL_NPRIV) != HAL_OK)
 8000bc0:	f003 fe38 	bl	8004834 <HAL_DMA_ConfigChannelAttributes>
 8000bc4:	b108      	cbz	r0, 8000bca <HAL_JPEG_MspInit+0xe6>
    {
      Error_Handler();
 8000bc6:	f7ff fe0d 	bl	80007e4 <Error_Handler>
    }

    /* JPEG interrupt Init */
    HAL_NVIC_SetPriority(JPEG_IRQn, 7, 0);
 8000bca:	208c      	movs	r0, #140	@ 0x8c
 8000bcc:	2200      	movs	r2, #0
 8000bce:	2107      	movs	r1, #7
 8000bd0:	f003 f9fa 	bl	8003fc8 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(JPEG_IRQn);
 8000bd4:	208c      	movs	r0, #140	@ 0x8c
 8000bd6:	f003 fa27 	bl	8004028 <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN JPEG_MspInit 1 */

  /* USER CODE END JPEG_MspInit 1 */
  }

}
 8000bda:	b004      	add	sp, #16
 8000bdc:	bd70      	pop	{r4, r5, r6, pc}
 8000bde:	bf00      	nop
 8000be0:	4002a000 	.word	0x4002a000
 8000be4:	46020c00 	.word	0x46020c00
 8000be8:	200003ec 	.word	0x200003ec
 8000bec:	400200d0 	.word	0x400200d0
 8000bf0:	20000374 	.word	0x20000374
 8000bf4:	40020050 	.word	0x40020050

08000bf8 <HAL_LTDC_MspInit>:
* This function configures the hardware resources used in this example
* @param hltdc: LTDC handle pointer
* @retval None
*/
void HAL_LTDC_MspInit(LTDC_HandleTypeDef* hltdc)
{
 8000bf8:	b5f0      	push	{r4, r5, r6, r7, lr}
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000bfa:	2514      	movs	r5, #20
{
 8000bfc:	4604      	mov	r4, r0
 8000bfe:	b0c3      	sub	sp, #268	@ 0x10c
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000c00:	462a      	mov	r2, r5
 8000c02:	2100      	movs	r1, #0
 8000c04:	eb0d 0005 	add.w	r0, sp, r5
 8000c08:	f031 ffbd 	bl	8032b86 <memset>
  RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 8000c0c:	22e0      	movs	r2, #224	@ 0xe0
 8000c0e:	2100      	movs	r1, #0
 8000c10:	a80a      	add	r0, sp, #40	@ 0x28
 8000c12:	f031 ffb8 	bl	8032b86 <memset>
  if(hltdc->Instance==LTDC)
 8000c16:	6822      	ldr	r2, [r4, #0]
 8000c18:	4b57      	ldr	r3, [pc, #348]	@ (8000d78 <HAL_LTDC_MspInit+0x180>)
 8000c1a:	429a      	cmp	r2, r3
 8000c1c:	f040 80a9 	bne.w	8000d72 <HAL_LTDC_MspInit+0x17a>

  /* USER CODE END LTDC_MspInit 0 */

  /** Initializes the peripherals clock
  */
    PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
 8000c20:	2200      	movs	r2, #0
 8000c22:	2302      	movs	r3, #2
 8000c24:	e9cd 230a 	strd	r2, r3, [sp, #40]	@ 0x28
    PeriphClkInit.LtdcClockSelection = RCC_LTDCCLKSOURCE_PLL3;
    PeriphClkInit.PLL3.PLL3Source = RCC_PLLSOURCE_HSE;
    PeriphClkInit.PLL3.PLL3M = 4;
 8000c28:	2304      	movs	r3, #4
 8000c2a:	2203      	movs	r2, #3
    PeriphClkInit.PLL3.PLL3N = 125;
    PeriphClkInit.PLL3.PLL3P = 8;
 8000c2c:	217d      	movs	r1, #125	@ 0x7d
    PeriphClkInit.PLL3.PLL3M = 4;
 8000c2e:	e9cd 2315 	strd	r2, r3, [sp, #84]	@ 0x54
    PeriphClkInit.PLL3.PLL3P = 8;
 8000c32:	2308      	movs	r3, #8
 8000c34:	e9cd 1317 	strd	r1, r3, [sp, #92]	@ 0x5c
    PeriphClkInit.PLL3.PLL3Q = 2;
 8000c38:	2302      	movs	r3, #2
    PeriphClkInit.PLL3.PLL3R = 20;
 8000c3a:	e9cd 3519 	strd	r3, r5, [sp, #100]	@ 0x64
    PeriphClkInit.PLL3.PLL3RGE = RCC_PLLVCIRANGE_0;
    PeriphClkInit.PLL3.PLL3FRACN = 0;
    PeriphClkInit.PLL3.PLL3ClockOut = RCC_PLL3_DIVR;
 8000c3e:	f44f 2380 	mov.w	r3, #262144	@ 0x40000
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 8000c42:	a80a      	add	r0, sp, #40	@ 0x28
    PeriphClkInit.PLL3.PLL3ClockOut = RCC_PLL3_DIVR;
 8000c44:	931d      	str	r3, [sp, #116]	@ 0x74
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 8000c46:	f006 fe03 	bl	8007850 <HAL_RCCEx_PeriphCLKConfig>
 8000c4a:	b108      	cbz	r0, 8000c50 <HAL_LTDC_MspInit+0x58>
    {
      Error_Handler();
 8000c4c:	f7ff fdca 	bl	80007e4 <Error_Handler>
    }

    /* Peripheral clock enable */
    __HAL_RCC_LTDC_CLK_ENABLE();
 8000c50:	4b4a      	ldr	r3, [pc, #296]	@ (8000d7c <HAL_LTDC_MspInit+0x184>)
    PB9     ------> LTDC_B0
    PE0     ------> LTDC_HSYNC
    */
    GPIO_InitStruct.Pin = GPIO_PIN_2;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000c52:	2400      	movs	r4, #0
    __HAL_RCC_LTDC_CLK_ENABLE();
 8000c54:	f8d3 20a4 	ldr.w	r2, [r3, #164]	@ 0xa4
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000c58:	2502      	movs	r5, #2
    __HAL_RCC_LTDC_CLK_ENABLE();
 8000c5a:	f042 6280 	orr.w	r2, r2, #67108864	@ 0x4000000
 8000c5e:	f8c3 20a4 	str.w	r2, [r3, #164]	@ 0xa4
 8000c62:	f8d3 20a4 	ldr.w	r2, [r3, #164]	@ 0xa4
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
    GPIO_InitStruct.Alternate = GPIO_AF8_LTDC;
 8000c66:	2608      	movs	r6, #8
    __HAL_RCC_LTDC_CLK_ENABLE();
 8000c68:	f002 6280 	and.w	r2, r2, #67108864	@ 0x4000000
 8000c6c:	9200      	str	r2, [sp, #0]
 8000c6e:	9a00      	ldr	r2, [sp, #0]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8000c70:	f8d3 208c 	ldr.w	r2, [r3, #140]	@ 0x8c
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8000c74:	4842      	ldr	r0, [pc, #264]	@ (8000d80 <HAL_LTDC_MspInit+0x188>)
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8000c76:	f042 0202 	orr.w	r2, r2, #2
 8000c7a:	f8c3 208c 	str.w	r2, [r3, #140]	@ 0x8c
 8000c7e:	f8d3 208c 	ldr.w	r2, [r3, #140]	@ 0x8c
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8000c82:	a905      	add	r1, sp, #20
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8000c84:	f002 0202 	and.w	r2, r2, #2
 8000c88:	9201      	str	r2, [sp, #4]
 8000c8a:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOE_CLK_ENABLE();
 8000c8c:	f8d3 208c 	ldr.w	r2, [r3, #140]	@ 0x8c

    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
    GPIO_InitStruct.Alternate = GPIO_AF7_LTDC;
 8000c90:	2707      	movs	r7, #7
    __HAL_RCC_GPIOE_CLK_ENABLE();
 8000c92:	f042 0210 	orr.w	r2, r2, #16
 8000c96:	f8c3 208c 	str.w	r2, [r3, #140]	@ 0x8c
 8000c9a:	f8d3 208c 	ldr.w	r2, [r3, #140]	@ 0x8c
 8000c9e:	f002 0210 	and.w	r2, r2, #16
 8000ca2:	9202      	str	r2, [sp, #8]
 8000ca4:	9a02      	ldr	r2, [sp, #8]
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8000ca6:	f8d3 208c 	ldr.w	r2, [r3, #140]	@ 0x8c
 8000caa:	f042 0208 	orr.w	r2, r2, #8
 8000cae:	f8c3 208c 	str.w	r2, [r3, #140]	@ 0x8c
 8000cb2:	f8d3 208c 	ldr.w	r2, [r3, #140]	@ 0x8c
 8000cb6:	f002 0208 	and.w	r2, r2, #8
 8000cba:	9203      	str	r2, [sp, #12]
 8000cbc:	9a03      	ldr	r2, [sp, #12]
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8000cbe:	f8d3 208c 	ldr.w	r2, [r3, #140]	@ 0x8c
 8000cc2:	f042 0204 	orr.w	r2, r2, #4
 8000cc6:	f8c3 208c 	str.w	r2, [r3, #140]	@ 0x8c
 8000cca:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000cce:	e9cd 4407 	strd	r4, r4, [sp, #28]
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8000cd2:	f003 0304 	and.w	r3, r3, #4
 8000cd6:	9304      	str	r3, [sp, #16]
 8000cd8:	9b04      	ldr	r3, [sp, #16]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000cda:	2304      	movs	r3, #4
    GPIO_InitStruct.Alternate = GPIO_AF8_LTDC;
 8000cdc:	9609      	str	r6, [sp, #36]	@ 0x24
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000cde:	e9cd 3505 	strd	r3, r5, [sp, #20]
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8000ce2:	f003 ff15 	bl	8004b10 <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10
 8000ce6:	f64f 7381 	movw	r3, #65409	@ 0xff81
    HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8000cea:	4826      	ldr	r0, [pc, #152]	@ (8000d84 <HAL_LTDC_MspInit+0x18c>)
 8000cec:	a905      	add	r1, sp, #20
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000cee:	e9cd 3505 	strd	r3, r5, [sp, #20]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000cf2:	e9cd 4407 	strd	r4, r4, [sp, #28]
    GPIO_InitStruct.Alternate = GPIO_AF8_LTDC;
 8000cf6:	9609      	str	r6, [sp, #36]	@ 0x24
    HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8000cf8:	f003 ff0a 	bl	8004b10 <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10|GPIO_PIN_11
 8000cfc:	f64f 734b 	movw	r3, #65355	@ 0xff4b
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8000d00:	4821      	ldr	r0, [pc, #132]	@ (8000d88 <HAL_LTDC_MspInit+0x190>)
 8000d02:	a905      	add	r1, sp, #20
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000d04:	e9cd 3505 	strd	r3, r5, [sp, #20]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000d08:	e9cd 4407 	strd	r4, r4, [sp, #28]
    GPIO_InitStruct.Alternate = GPIO_AF8_LTDC;
 8000d0c:	9609      	str	r6, [sp, #36]	@ 0x24
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8000d0e:	f003 feff 	bl	8004b10 <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 8000d12:	23c0      	movs	r3, #192	@ 0xc0
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8000d14:	481d      	ldr	r0, [pc, #116]	@ (8000d8c <HAL_LTDC_MspInit+0x194>)
 8000d16:	a905      	add	r1, sp, #20
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000d18:	e9cd 3505 	strd	r3, r5, [sp, #20]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000d1c:	e9cd 4407 	strd	r4, r4, [sp, #28]
    GPIO_InitStruct.Alternate = GPIO_AF7_LTDC;
 8000d20:	9709      	str	r7, [sp, #36]	@ 0x24
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8000d22:	f003 fef5 	bl	8004b10 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9;
 8000d26:	f44f 7340 	mov.w	r3, #768	@ 0x300
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
    GPIO_InitStruct.Alternate = GPIO_AF8_LTDC;
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8000d2a:	4818      	ldr	r0, [pc, #96]	@ (8000d8c <HAL_LTDC_MspInit+0x194>)
 8000d2c:	a905      	add	r1, sp, #20
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000d2e:	e9cd 3505 	strd	r3, r5, [sp, #20]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000d32:	e9cd 4407 	strd	r4, r4, [sp, #28]
    GPIO_InitStruct.Alternate = GPIO_AF8_LTDC;
 8000d36:	9609      	str	r6, [sp, #36]	@ 0x24
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8000d38:	f003 feea 	bl	8004b10 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_9;
 8000d3c:	f44f 7300 	mov.w	r3, #512	@ 0x200
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
    GPIO_InitStruct.Alternate = GPIO_AF7_LTDC;
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8000d40:	480f      	ldr	r0, [pc, #60]	@ (8000d80 <HAL_LTDC_MspInit+0x188>)
 8000d42:	a905      	add	r1, sp, #20
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000d44:	e9cd 3505 	strd	r3, r5, [sp, #20]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000d48:	e9cd 4407 	strd	r4, r4, [sp, #28]
    GPIO_InitStruct.Alternate = GPIO_AF7_LTDC;
 8000d4c:	9709      	str	r7, [sp, #36]	@ 0x24
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8000d4e:	f003 fedf 	bl	8004b10 <HAL_GPIO_Init>

    /* LTDC interrupt Init */
    HAL_NVIC_SetPriority(LTDC_IRQn, 5, 0);
 8000d52:	4622      	mov	r2, r4
 8000d54:	2105      	movs	r1, #5
 8000d56:	2087      	movs	r0, #135	@ 0x87
 8000d58:	f003 f936 	bl	8003fc8 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(LTDC_IRQn);
 8000d5c:	2087      	movs	r0, #135	@ 0x87
 8000d5e:	f003 f963 	bl	8004028 <HAL_NVIC_EnableIRQ>
    HAL_NVIC_SetPriority(LTDC_ER_IRQn, 5, 0);
 8000d62:	2088      	movs	r0, #136	@ 0x88
 8000d64:	4622      	mov	r2, r4
 8000d66:	2105      	movs	r1, #5
 8000d68:	f003 f92e 	bl	8003fc8 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(LTDC_ER_IRQn);
 8000d6c:	2088      	movs	r0, #136	@ 0x88
 8000d6e:	f003 f95b 	bl	8004028 <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN LTDC_MspInit 1 */

  /* USER CODE END LTDC_MspInit 1 */
  }

}
 8000d72:	b043      	add	sp, #268	@ 0x10c
 8000d74:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000d76:	bf00      	nop
 8000d78:	40016800 	.word	0x40016800
 8000d7c:	46020c00 	.word	0x46020c00
 8000d80:	42020400 	.word	0x42020400
 8000d84:	42021000 	.word	0x42021000
 8000d88:	42020c00 	.word	0x42020c00
 8000d8c:	42020800 	.word	0x42020800

08000d90 <HAL_InitTick>:
  uint32_t              uwPrescalerValue = 0;
  uint32_t              pFLatency;
  HAL_StatusTypeDef     status;

  /* Enable TIM6 clock */
  __HAL_RCC_TIM6_CLK_ENABLE();
 8000d90:	4b1f      	ldr	r3, [pc, #124]	@ (8000e10 <HAL_InitTick+0x80>)
{
 8000d92:	b570      	push	{r4, r5, r6, lr}
  __HAL_RCC_TIM6_CLK_ENABLE();
 8000d94:	f8d3 209c 	ldr.w	r2, [r3, #156]	@ 0x9c
{
 8000d98:	b088      	sub	sp, #32
  __HAL_RCC_TIM6_CLK_ENABLE();
 8000d9a:	f042 0210 	orr.w	r2, r2, #16
 8000d9e:	f8c3 209c 	str.w	r2, [r3, #156]	@ 0x9c
 8000da2:	f8d3 309c 	ldr.w	r3, [r3, #156]	@ 0x9c

  /* Get clock configuration */
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 8000da6:	4669      	mov	r1, sp
  __HAL_RCC_TIM6_CLK_ENABLE();
 8000da8:	f003 0310 	and.w	r3, r3, #16
 8000dac:	9301      	str	r3, [sp, #4]
{
 8000dae:	4606      	mov	r6, r0
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 8000db0:	a802      	add	r0, sp, #8

  /* Compute the prescaler value to have TIM6 counter clock equal to 1MHz */
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);

  /* Initialize TIM6 */
  htim6.Instance = TIM6;
 8000db2:	4d18      	ldr	r5, [pc, #96]	@ (8000e14 <HAL_InitTick+0x84>)
  __HAL_RCC_TIM6_CLK_ENABLE();
 8000db4:	9b01      	ldr	r3, [sp, #4]
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 8000db6:	f006 fc51 	bl	800765c <HAL_RCC_GetClockConfig>
  uwTimclock = HAL_RCC_GetPCLK1Freq();
 8000dba:	f006 fc3f 	bl	800763c <HAL_RCC_GetPCLK1Freq>
  htim6.Instance = TIM6;
 8000dbe:	4b16      	ldr	r3, [pc, #88]	@ (8000e18 <HAL_InitTick+0x88>)
 8000dc0:	602b      	str	r3, [r5, #0]
  + Period = [(TIM6CLK/1000) - 1]. to have a (1/1000) s time base.
  + Prescaler = (uwTimclock/1000000 - 1) to have a 1MHz counter clock.
  + ClockDivision = 0
  + Counter direction = Up
  */
  htim6.Init.Period = (1000000U / 1000U) - 1U;
 8000dc2:	f240 33e7 	movw	r3, #999	@ 0x3e7
 8000dc6:	60eb      	str	r3, [r5, #12]
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
 8000dc8:	4b14      	ldr	r3, [pc, #80]	@ (8000e1c <HAL_InitTick+0x8c>)
 8000dca:	fbb0 f0f3 	udiv	r0, r0, r3
  htim6.Init.Prescaler = uwPrescalerValue;
  htim6.Init.ClockDivision = 0;
 8000dce:	2300      	movs	r3, #0
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
 8000dd0:	3801      	subs	r0, #1
  htim6.Init.Prescaler = uwPrescalerValue;
 8000dd2:	6068      	str	r0, [r5, #4]
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;

  status = HAL_TIM_Base_Init(&htim6);
 8000dd4:	4628      	mov	r0, r5
  htim6.Init.ClockDivision = 0;
 8000dd6:	612b      	str	r3, [r5, #16]
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
 8000dd8:	60ab      	str	r3, [r5, #8]
  status = HAL_TIM_Base_Init(&htim6);
 8000dda:	f007 fac7 	bl	800836c <HAL_TIM_Base_Init>
  if (status == HAL_OK)
 8000dde:	4604      	mov	r4, r0
 8000de0:	b968      	cbnz	r0, 8000dfe <HAL_InitTick+0x6e>
  {
    /* Start the TIM time Base generation in interrupt mode */
    status = HAL_TIM_Base_Start_IT(&htim6);
 8000de2:	4628      	mov	r0, r5
 8000de4:	f007 f8dc 	bl	8007fa0 <HAL_TIM_Base_Start_IT>
    if (status == HAL_OK)
 8000de8:	4604      	mov	r4, r0
 8000dea:	b940      	cbnz	r0, 8000dfe <HAL_InitTick+0x6e>
    {
      if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 8000dec:	2e0f      	cmp	r6, #15
 8000dee:	d80c      	bhi.n	8000e0a <HAL_InitTick+0x7a>
      {
        /* Enable the TIM6 global Interrupt */
        HAL_NVIC_SetPriority(TIM6_IRQn, TickPriority, 0U);
 8000df0:	4602      	mov	r2, r0
 8000df2:	4631      	mov	r1, r6
 8000df4:	2031      	movs	r0, #49	@ 0x31
 8000df6:	f003 f8e7 	bl	8003fc8 <HAL_NVIC_SetPriority>
        uwTickPrio = TickPriority;
 8000dfa:	4b09      	ldr	r3, [pc, #36]	@ (8000e20 <HAL_InitTick+0x90>)
 8000dfc:	601e      	str	r6, [r3, #0]
      }
    }
  }

  /* Enable the TIM6 global Interrupt */
  HAL_NVIC_EnableIRQ(TIM6_IRQn);
 8000dfe:	2031      	movs	r0, #49	@ 0x31
 8000e00:	f003 f912 	bl	8004028 <HAL_NVIC_EnableIRQ>

 /* Return function status */
  return status;
}
 8000e04:	4620      	mov	r0, r4
 8000e06:	b008      	add	sp, #32
 8000e08:	bd70      	pop	{r4, r5, r6, pc}
        status = HAL_ERROR;
 8000e0a:	2401      	movs	r4, #1
 8000e0c:	e7f7      	b.n	8000dfe <HAL_InitTick+0x6e>
 8000e0e:	bf00      	nop
 8000e10:	46020c00 	.word	0x46020c00
 8000e14:	20000660 	.word	0x20000660
 8000e18:	40001000 	.word	0x40001000
 8000e1c:	000f4240 	.word	0x000f4240
 8000e20:	20000054 	.word	0x20000054

08000e24 <NMI_Handler>:
{
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  while (1)
 8000e24:	e7fe      	b.n	8000e24 <NMI_Handler>

08000e26 <HardFault_Handler>:
void HardFault_Handler(void)
{
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8000e26:	e7fe      	b.n	8000e26 <HardFault_Handler>

08000e28 <MemManage_Handler>:
void MemManage_Handler(void)
{
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8000e28:	e7fe      	b.n	8000e28 <MemManage_Handler>

08000e2a <BusFault_Handler>:
void BusFault_Handler(void)
{
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8000e2a:	e7fe      	b.n	8000e2a <BusFault_Handler>

08000e2c <UsageFault_Handler>:
void UsageFault_Handler(void)
{
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8000e2c:	e7fe      	b.n	8000e2c <UsageFault_Handler>

08000e2e <DebugMon_Handler>:

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 8000e2e:	4770      	bx	lr

08000e30 <EXTI5_IRQHandler>:
void EXTI5_IRQHandler(void)
{
  /* USER CODE BEGIN EXTI5_IRQn 0 */

  /* USER CODE END EXTI5_IRQn 0 */
  HAL_GPIO_EXTI_IRQHandler(TP_IRQ_Pin);
 8000e30:	2020      	movs	r0, #32
 8000e32:	f003 bf91 	b.w	8004d58 <HAL_GPIO_EXTI_IRQHandler>
	...

08000e38 <GPDMA1_Channel0_IRQHandler>:
void GPDMA1_Channel0_IRQHandler(void)
{
  /* USER CODE BEGIN GPDMA1_Channel0_IRQn 0 */

  /* USER CODE END GPDMA1_Channel0_IRQn 0 */
  HAL_DMA_IRQHandler(&handle_GPDMA1_Channel0);
 8000e38:	4801      	ldr	r0, [pc, #4]	@ (8000e40 <GPDMA1_Channel0_IRQHandler+0x8>)
 8000e3a:	f003 bc3a 	b.w	80046b2 <HAL_DMA_IRQHandler>
 8000e3e:	bf00      	nop
 8000e40:	20000374 	.word	0x20000374

08000e44 <GPDMA1_Channel1_IRQHandler>:
void GPDMA1_Channel1_IRQHandler(void)
{
  /* USER CODE BEGIN GPDMA1_Channel1_IRQn 0 */

  /* USER CODE END GPDMA1_Channel1_IRQn 0 */
  HAL_DMA_IRQHandler(&handle_GPDMA1_Channel1);
 8000e44:	4801      	ldr	r0, [pc, #4]	@ (8000e4c <GPDMA1_Channel1_IRQHandler+0x8>)
 8000e46:	f003 bc34 	b.w	80046b2 <HAL_DMA_IRQHandler>
 8000e4a:	bf00      	nop
 8000e4c:	200003ec 	.word	0x200003ec

08000e50 <TIM6_IRQHandler>:
void TIM6_IRQHandler(void)
{
  /* USER CODE BEGIN TIM6_IRQn 0 */

  /* USER CODE END TIM6_IRQn 0 */
  HAL_TIM_IRQHandler(&htim6);
 8000e50:	4801      	ldr	r0, [pc, #4]	@ (8000e58 <TIM6_IRQHandler+0x8>)
 8000e52:	f007 b903 	b.w	800805c <HAL_TIM_IRQHandler>
 8000e56:	bf00      	nop
 8000e58:	20000660 	.word	0x20000660

08000e5c <DMA2D_IRQHandler>:
void DMA2D_IRQHandler(void)
{
  /* USER CODE BEGIN DMA2D_IRQn 0 */

  /* USER CODE END DMA2D_IRQn 0 */
  HAL_DMA2D_IRQHandler(&hdma2d);
 8000e5c:	4801      	ldr	r0, [pc, #4]	@ (8000e64 <DMA2D_IRQHandler+0x8>)
 8000e5e:	f003 bd46 	b.w	80048ee <HAL_DMA2D_IRQHandler>
 8000e62:	bf00      	nop
 8000e64:	2000057c 	.word	0x2000057c

08000e68 <HSPI1_IRQHandler>:
void HSPI1_IRQHandler(void)
{
  /* USER CODE BEGIN HSPI1_IRQn 0 */

  /* USER CODE END HSPI1_IRQn 0 */
  HAL_XSPI_IRQHandler(&hxspi1);
 8000e68:	4801      	ldr	r0, [pc, #4]	@ (8000e70 <HSPI1_IRQHandler+0x8>)
 8000e6a:	f007 be29 	b.w	8008ac0 <HAL_XSPI_IRQHandler>
 8000e6e:	bf00      	nop
 8000e70:	20000510 	.word	0x20000510

08000e74 <GPU2D_IRQHandler>:
void GPU2D_IRQHandler(void)
{
  /* USER CODE BEGIN GPU2D_IRQn 0 */

  /* USER CODE END GPU2D_IRQn 0 */
  HAL_GPU2D_IRQHandler(&hgpu2d);
 8000e74:	4801      	ldr	r0, [pc, #4]	@ (8000e7c <GPU2D_IRQHandler+0x8>)
 8000e76:	f003 bf9e 	b.w	8004db6 <HAL_GPU2D_IRQHandler>
 8000e7a:	bf00      	nop
 8000e7c:	20000570 	.word	0x20000570

08000e80 <GPU2D_ER_IRQHandler>:
void GPU2D_ER_IRQHandler(void)
{
  /* USER CODE BEGIN GPU2D_ER_IRQn 0 */

  /* USER CODE END GPU2D_ER_IRQn 0 */
  HAL_GPU2D_ER_IRQHandler(&hgpu2d);
 8000e80:	4801      	ldr	r0, [pc, #4]	@ (8000e88 <GPU2D_ER_IRQHandler+0x8>)
 8000e82:	f003 bfab 	b.w	8004ddc <HAL_GPU2D_ER_IRQHandler>
 8000e86:	bf00      	nop
 8000e88:	20000570 	.word	0x20000570

08000e8c <LTDC_IRQHandler>:
void LTDC_IRQHandler(void)
{
  /* USER CODE BEGIN LTDC_IRQn 0 */

  /* USER CODE END LTDC_IRQn 0 */
  HAL_LTDC_IRQHandler(&hltdc);
 8000e8c:	4801      	ldr	r0, [pc, #4]	@ (8000e94 <LTDC_IRQHandler+0x8>)
 8000e8e:	f005 bc07 	b.w	80066a0 <HAL_LTDC_IRQHandler>
 8000e92:	bf00      	nop
 8000e94:	200002cc 	.word	0x200002cc

08000e98 <LTDC_ER_IRQHandler>:
}

/**
  * @brief This function handles LCD-TFT Error interrupt.
  */
void LTDC_ER_IRQHandler(void)
 8000e98:	f7ff bff8 	b.w	8000e8c <LTDC_IRQHandler>

08000e9c <JPEG_IRQHandler>:
void JPEG_IRQHandler(void)
{
  /* USER CODE BEGIN JPEG_IRQn 0 */

  /* USER CODE END JPEG_IRQn 0 */
  HAL_JPEG_IRQHandler(&hjpeg);
 8000e9c:	4801      	ldr	r0, [pc, #4]	@ (8000ea4 <JPEG_IRQHandler+0x8>)
 8000e9e:	f005 bab2 	b.w	8006406 <HAL_JPEG_IRQHandler>
 8000ea2:	bf00      	nop
 8000ea4:	20000464 	.word	0x20000464

08000ea8 <_getpid>:
}

int _getpid(void)
{
  return 1;
}
 8000ea8:	2001      	movs	r0, #1
 8000eaa:	4770      	bx	lr

08000eac <_kill>:

int _kill(int pid, int sig)
{
 8000eac:	b508      	push	{r3, lr}
  (void)pid;
  (void)sig;
  errno = EINVAL;
 8000eae:	f031 ff1f 	bl	8032cf0 <__errno>
 8000eb2:	2316      	movs	r3, #22
 8000eb4:	6003      	str	r3, [r0, #0]
  return -1;
}
 8000eb6:	f04f 30ff 	mov.w	r0, #4294967295
 8000eba:	bd08      	pop	{r3, pc}

08000ebc <_exit>:

void _exit (int status)
{
 8000ebc:	b508      	push	{r3, lr}
  errno = EINVAL;
 8000ebe:	f031 ff17 	bl	8032cf0 <__errno>
 8000ec2:	2316      	movs	r3, #22
 8000ec4:	6003      	str	r3, [r0, #0]
  _kill(status, -1);
  while (1) {}    /* Make sure we hang here */
 8000ec6:	e7fe      	b.n	8000ec6 <_exit+0xa>

08000ec8 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8000ec8:	b570      	push	{r4, r5, r6, lr}
 8000eca:	460d      	mov	r5, r1
 8000ecc:	4614      	mov	r4, r2
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000ece:	460e      	mov	r6, r1
 8000ed0:	1b73      	subs	r3, r6, r5
 8000ed2:	429c      	cmp	r4, r3
 8000ed4:	dc01      	bgt.n	8000eda <_read+0x12>
  {
    *ptr++ = __io_getchar();
  }

  return len;
}
 8000ed6:	4620      	mov	r0, r4
 8000ed8:	bd70      	pop	{r4, r5, r6, pc}
    *ptr++ = __io_getchar();
 8000eda:	f3af 8000 	nop.w
 8000ede:	f806 0b01 	strb.w	r0, [r6], #1
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000ee2:	e7f5      	b.n	8000ed0 <_read+0x8>

08000ee4 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8000ee4:	b570      	push	{r4, r5, r6, lr}
 8000ee6:	460d      	mov	r5, r1
 8000ee8:	4614      	mov	r4, r2
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000eea:	460e      	mov	r6, r1
 8000eec:	1b73      	subs	r3, r6, r5
 8000eee:	429c      	cmp	r4, r3
 8000ef0:	dc01      	bgt.n	8000ef6 <_write+0x12>
  {
    __io_putchar(*ptr++);
  }
  return len;
}
 8000ef2:	4620      	mov	r0, r4
 8000ef4:	bd70      	pop	{r4, r5, r6, pc}
    __io_putchar(*ptr++);
 8000ef6:	f816 0b01 	ldrb.w	r0, [r6], #1
 8000efa:	f3af 8000 	nop.w
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000efe:	e7f5      	b.n	8000eec <_write+0x8>

08000f00 <_close>:

int _close(int file)
{
  (void)file;
  return -1;
}
 8000f00:	f04f 30ff 	mov.w	r0, #4294967295
 8000f04:	4770      	bx	lr

08000f06 <_fstat>:


int _fstat(int file, struct stat *st)
{
  (void)file;
  st->st_mode = S_IFCHR;
 8000f06:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
  return 0;
}
 8000f0a:	2000      	movs	r0, #0
  st->st_mode = S_IFCHR;
 8000f0c:	604b      	str	r3, [r1, #4]
}
 8000f0e:	4770      	bx	lr

08000f10 <_isatty>:

int _isatty(int file)
{
  (void)file;
  return 1;
}
 8000f10:	2001      	movs	r0, #1
 8000f12:	4770      	bx	lr

08000f14 <_lseek>:
{
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
}
 8000f14:	2000      	movs	r0, #0
 8000f16:	4770      	bx	lr

08000f18 <_sbrk>:
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
  const uint8_t *max_heap = (uint8_t *)stack_limit;
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8000f18:	4a0b      	ldr	r2, [pc, #44]	@ (8000f48 <_sbrk+0x30>)
{
 8000f1a:	4603      	mov	r3, r0
  if (NULL == __sbrk_heap_end)
 8000f1c:	6811      	ldr	r1, [r2, #0]
{
 8000f1e:	b510      	push	{r4, lr}
  if (NULL == __sbrk_heap_end)
 8000f20:	b909      	cbnz	r1, 8000f26 <_sbrk+0xe>
  {
    __sbrk_heap_end = &_end;
 8000f22:	490a      	ldr	r1, [pc, #40]	@ (8000f4c <_sbrk+0x34>)
 8000f24:	6011      	str	r1, [r2, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 8000f26:	6810      	ldr	r0, [r2, #0]
 8000f28:	4909      	ldr	r1, [pc, #36]	@ (8000f50 <_sbrk+0x38>)
 8000f2a:	4c0a      	ldr	r4, [pc, #40]	@ (8000f54 <_sbrk+0x3c>)
 8000f2c:	4403      	add	r3, r0
 8000f2e:	1b09      	subs	r1, r1, r4
 8000f30:	428b      	cmp	r3, r1
 8000f32:	d906      	bls.n	8000f42 <_sbrk+0x2a>
  {
    errno = ENOMEM;
 8000f34:	f031 fedc 	bl	8032cf0 <__errno>
 8000f38:	230c      	movs	r3, #12
 8000f3a:	6003      	str	r3, [r0, #0]
    return (void *)-1;
 8000f3c:	f04f 30ff 	mov.w	r0, #4294967295

  prev_heap_end = __sbrk_heap_end;
  __sbrk_heap_end += incr;

  return (void *)prev_heap_end;
}
 8000f40:	bd10      	pop	{r4, pc}
  __sbrk_heap_end += incr;
 8000f42:	6013      	str	r3, [r2, #0]
  return (void *)prev_heap_end;
 8000f44:	e7fc      	b.n	8000f40 <_sbrk+0x28>
 8000f46:	bf00      	nop
 8000f48:	200006ac 	.word	0x200006ac
 8000f4c:	200838c0 	.word	0x200838c0
 8000f50:	202f0000 	.word	0x202f0000
 8000f54:	00001000 	.word	0x00001000

08000f58 <Reset_Handler>:

    .section	.text.Reset_Handler
	.weak	Reset_Handler
	.type	Reset_Handler, %function
Reset_Handler:
  ldr   sp, =_estack    /* set stack pointer */
 8000f58:	f8df d034 	ldr.w	sp, [pc, #52]	@ 8000f90 <LoopForever+0x2>
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000f5c:	f002 ffaa 	bl	8003eb4 <SystemInit>

/* Copy the data segment initializers from flash to SRAM */
  movs	r1, #0
 8000f60:	2100      	movs	r1, #0
  b	LoopCopyDataInit
 8000f62:	e003      	b.n	8000f6c <LoopCopyDataInit>

08000f64 <CopyDataInit>:

CopyDataInit:
	ldr	r3, =_sidata
 8000f64:	4b0b      	ldr	r3, [pc, #44]	@ (8000f94 <LoopForever+0x6>)
	ldr	r3, [r3, r1]
 8000f66:	585b      	ldr	r3, [r3, r1]
	str	r3, [r0, r1]
 8000f68:	5043      	str	r3, [r0, r1]
	adds	r1, r1, #4
 8000f6a:	3104      	adds	r1, #4

08000f6c <LoopCopyDataInit>:

LoopCopyDataInit:
	ldr	r0, =_sdata
 8000f6c:	480a      	ldr	r0, [pc, #40]	@ (8000f98 <LoopForever+0xa>)
	ldr	r3, =_edata
 8000f6e:	4b0b      	ldr	r3, [pc, #44]	@ (8000f9c <LoopForever+0xe>)
	adds	r2, r0, r1
 8000f70:	1842      	adds	r2, r0, r1
	cmp	r2, r3
 8000f72:	429a      	cmp	r2, r3
	bcc	CopyDataInit
 8000f74:	d3f6      	bcc.n	8000f64 <CopyDataInit>
	ldr	r2, =_sbss
 8000f76:	4a0a      	ldr	r2, [pc, #40]	@ (8000fa0 <LoopForever+0x12>)
	b	LoopFillZerobss
 8000f78:	e002      	b.n	8000f80 <LoopFillZerobss>

08000f7a <FillZerobss>:
/* Zero fill the bss segment. */
FillZerobss:
	movs	r3, #0
 8000f7a:	2300      	movs	r3, #0
	str	r3, [r2], #4
 8000f7c:	f842 3b04 	str.w	r3, [r2], #4

08000f80 <LoopFillZerobss>:

LoopFillZerobss:
	ldr	r3, = _ebss
 8000f80:	4b08      	ldr	r3, [pc, #32]	@ (8000fa4 <LoopForever+0x16>)
	cmp	r2, r3
 8000f82:	429a      	cmp	r2, r3
	bcc	FillZerobss
 8000f84:	d3f9      	bcc.n	8000f7a <FillZerobss>

/* Call static constructors */
    bl __libc_init_array
 8000f86:	f031 feb9 	bl	8032cfc <__libc_init_array>
/* Call the application's entry point.*/
	bl	main
 8000f8a:	f7ff f9fd 	bl	8000388 <main>

08000f8e <LoopForever>:

LoopForever:
    b LoopForever
 8000f8e:	e7fe      	b.n	8000f8e <LoopForever>
  ldr   sp, =_estack    /* set stack pointer */
 8000f90:	202f0000 	.word	0x202f0000
	ldr	r3, =_sidata
 8000f94:	08038b70 	.word	0x08038b70
	ldr	r0, =_sdata
 8000f98:	20000000 	.word	0x20000000
	ldr	r3, =_edata
 8000f9c:	200002a8 	.word	0x200002a8
	ldr	r2, =_sbss
 8000fa0:	200002a8 	.word	0x200002a8
	ldr	r3, = _ebss
 8000fa4:	200838c0 	.word	0x200838c0

08000fa8 <ADC1_2_IRQHandler>:
 * @retval : None
*/
    .section	.text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
	b	Infinite_Loop
 8000fa8:	e7fe      	b.n	8000fa8 <ADC1_2_IRQHandler>

08000faa <MX_TouchGFX_PreOSInit>:
/**
 * PreOS Initialization function
 */
void MX_TouchGFX_PreOSInit(void)
{
}
 8000faa:	4770      	bx	lr

08000fac <MX_TouchGFX_Init>:

/**
 * Initialize TouchGFX application
 */
void MX_TouchGFX_Init(void)
{
 8000fac:	b508      	push	{r3, lr}
    // Calling forward to touchgfx_init in C++ domain
    touchgfx_components_init();
 8000fae:	f001 fb6f 	bl	8002690 <touchgfx_components_init>
    touchgfx_init();
}
 8000fb2:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    touchgfx_init();
 8000fb6:	f001 baf1 	b.w	800259c <touchgfx_init>

08000fba <TouchGFX_Task>:
 * TouchGFX application thread
 */
void TouchGFX_Task(void* argument)
{
    // Calling forward to touchgfx_taskEntry in C++ domain
    touchgfx_taskEntry();
 8000fba:	f001 bb79 	b.w	80026b0 <touchgfx_taskEntry>

08000fbe <_ZN8touchgfx18MCUInstrumentation13getCCConsumedEv>:
     *
     * @return clock cycles.
     */
    virtual uint32_t getCCConsumed()
    {
        return cc_consumed;
 8000fbe:	6840      	ldr	r0, [r0, #4]
    }
 8000fc0:	4770      	bx	lr

08000fc2 <_ZN8touchgfx18MCUInstrumentation13setCCConsumedEm>:
     *
     * @param  val number of clock cycles.
     */
    virtual void setCCConsumed(uint32_t val)
    {
        cc_consumed = val;
 8000fc2:	6041      	str	r1, [r0, #4]
    }
 8000fc4:	4770      	bx	lr
	...

08000fc8 <_ZN8touchgfx25CortexMMCUInstrumentation4initEv>:
    //                                    Embedded Trace Macrocell (ETM)
    //                                    Trace Port Interface Unit (TPIU).
    //                                    This enables control of power usage unless tracing is required. The application can enable this, for ITM use, or use by a debugger.

    // Enable Debug Exception and Monitor Control Register
    *((volatile unsigned int*)0xE000EDFC) |= 0x01000000;
 8000fc8:	f04f 22e0 	mov.w	r2, #3758153728	@ 0xe000e000
 8000fcc:	f8d2 3dfc 	ldr.w	r3, [r2, #3580]	@ 0xdfc
 8000fd0:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
 8000fd4:	f8c2 3dfc 	str.w	r3, [r2, #3580]	@ 0xdfc
    // Enable Lock Access Register
    *((volatile unsigned int*)0xE0001FB0) |= 0xC5ACCE55;
 8000fd8:	4b05      	ldr	r3, [pc, #20]	@ (8000ff0 <_ZN8touchgfx25CortexMMCUInstrumentation4initEv+0x28>)
 8000fda:	4a06      	ldr	r2, [pc, #24]	@ (8000ff4 <_ZN8touchgfx25CortexMMCUInstrumentation4initEv+0x2c>)
 8000fdc:	f8d3 1fb0 	ldr.w	r1, [r3, #4016]	@ 0xfb0
 8000fe0:	430a      	orrs	r2, r1
 8000fe2:	f8c3 2fb0 	str.w	r2, [r3, #4016]	@ 0xfb0
    // Enable Data Watchpoint and Trace Control Register
    *((volatile unsigned int*)0xE0001000) |= 1;
 8000fe6:	681a      	ldr	r2, [r3, #0]
 8000fe8:	f042 0201 	orr.w	r2, r2, #1
 8000fec:	601a      	str	r2, [r3, #0]
}
 8000fee:	4770      	bx	lr
 8000ff0:	e0001000 	.word	0xe0001000
 8000ff4:	c5acce55 	.word	0xc5acce55

08000ff8 <_ZN8touchgfx25CortexMMCUInstrumentation12getElapsedUSEjjj>:

//Board specific clockfrequency
unsigned int CortexMMCUInstrumentation::getElapsedUS(unsigned int start, unsigned int now, unsigned int clockfrequency)
{
    return ((now - start) + (clockfrequency / 2)) / clockfrequency;
 8000ff8:	1a52      	subs	r2, r2, r1
 8000ffa:	eb02 0253 	add.w	r2, r2, r3, lsr #1
}
 8000ffe:	fbb2 f0f3 	udiv	r0, r2, r3
 8001002:	4770      	bx	lr

08001004 <_ZN8touchgfx25CortexMMCUInstrumentation12getCPUCyclesEv>:

unsigned int CortexMMCUInstrumentation::getCPUCycles()
{
    return *((volatile unsigned int*)0xE0001004);
 8001004:	4b01      	ldr	r3, [pc, #4]	@ (800100c <_ZN8touchgfx25CortexMMCUInstrumentation12getCPUCyclesEv+0x8>)
 8001006:	6858      	ldr	r0, [r3, #4]
}
 8001008:	4770      	bx	lr
 800100a:	bf00      	nop
 800100c:	e0001000 	.word	0xe0001000

08001010 <_ZN8touchgfx25CortexMMCUInstrumentationD1Ev>:
 *        Interface for instrumenting Cortex-M processors to measure MCU load via measured CPU
 *        cycles.
 *
 * @sa MCUInstrumentation
 */
class CortexMMCUInstrumentation : public MCUInstrumentation
 8001010:	4770      	bx	lr

08001012 <_ZN8touchgfx25CortexMMCUInstrumentationD0Ev>:
 8001012:	b510      	push	{r4, lr}
 8001014:	4604      	mov	r4, r0
 8001016:	210c      	movs	r1, #12
 8001018:	f030 f9d5 	bl	80313c6 <_ZdlPvj>
 800101c:	4620      	mov	r0, r4
 800101e:	bd10      	pop	{r4, pc}

08001020 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb>:

void CortexMMCUInstrumentation::setMCUActive(bool active)
{
    if (active) //idle task sched out
    {
        uint32_t cc_temp = getCPUCycles() - cc_in;
 8001020:	6803      	ldr	r3, [r0, #0]
{
 8001022:	b510      	push	{r4, lr}
        uint32_t cc_temp = getCPUCycles() - cc_in;
 8001024:	691b      	ldr	r3, [r3, #16]
{
 8001026:	4604      	mov	r4, r0
    if (active) //idle task sched out
 8001028:	b131      	cbz	r1, 8001038 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x18>
        uint32_t cc_temp = getCPUCycles() - cc_in;
 800102a:	4798      	blx	r3
 800102c:	68a2      	ldr	r2, [r4, #8]
        cc_consumed += cc_temp;
 800102e:	6863      	ldr	r3, [r4, #4]
 8001030:	1a9b      	subs	r3, r3, r2
 8001032:	4403      	add	r3, r0
 8001034:	6063      	str	r3, [r4, #4]
    }
    else //idle task sched in
    {
        cc_in = getCPUCycles();
    }
}
 8001036:	bd10      	pop	{r4, pc}
        cc_in = getCPUCycles();
 8001038:	4798      	blx	r3
 800103a:	60a0      	str	r0, [r4, #8]
}
 800103c:	e7fb      	b.n	8001036 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x16>

0800103e <_ZN8touchgfx16ButtonController5resetEv>:
    virtual bool sample(uint8_t& key) = 0;

    /** Resets button controller. Does nothing in the default implementation. */
    virtual void reset()
    {
    }
 800103e:	4770      	bx	lr

08001040 <_ZN8touchgfx10KeySamplerD1Ev>:
public:
    KeySampler()
    {
        init();
    }
    virtual ~KeySampler() {}
 8001040:	4770      	bx	lr

08001042 <_ZN8touchgfx10KeySampler4initEv>:

using namespace touchgfx;

void KeySampler::init()
{
}
 8001042:	4770      	bx	lr

08001044 <_ZN8touchgfx10KeySampler6sampleERh>:

bool KeySampler::sample(uint8_t& key)
{
 8001044:	b510      	push	{r4, lr}
    bool buttonPressed = false;
    if (HAL_GPIO_ReadPin(USER_BUTTON_GPIO_Port, USER_BUTTON_Pin) != GPIO_PIN_RESET)
 8001046:	4805      	ldr	r0, [pc, #20]	@ (800105c <_ZN8touchgfx10KeySampler6sampleERh+0x18>)
{
 8001048:	460c      	mov	r4, r1
    if (HAL_GPIO_ReadPin(USER_BUTTON_GPIO_Port, USER_BUTTON_Pin) != GPIO_PIN_RESET)
 800104a:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 800104e:	f003 fe6d 	bl	8004d2c <HAL_GPIO_ReadPin>
 8001052:	b108      	cbz	r0, 8001058 <_ZN8touchgfx10KeySampler6sampleERh+0x14>
    {
        buttonPressed = true;
        key = 1; // This is the "hardware button key" reffered in the TouchGFX Designer Interactions
 8001054:	2001      	movs	r0, #1
 8001056:	7020      	strb	r0, [r4, #0]
    }
    return buttonPressed;
}
 8001058:	bd10      	pop	{r4, pc}
 800105a:	bf00      	nop
 800105c:	42020800 	.word	0x42020800

08001060 <_ZN8touchgfx10KeySamplerD0Ev>:
 8001060:	b510      	push	{r4, lr}
 8001062:	4604      	mov	r4, r0
 8001064:	2108      	movs	r1, #8
 8001066:	f030 f9ae 	bl	80313c6 <_ZdlPvj>
 800106a:	4620      	mov	r0, r4
 800106c:	bd10      	pop	{r4, pc}

0800106e <_ZN20STM32TouchController4initEv>:
}

void STM32TouchController::init()
{
    // No init needed
}
 800106e:	4770      	bx	lr

08001070 <_ZN20STM32TouchControllerD1Ev>:
 * @brief This class specializes TouchController Interface.
 *
 * @sa touchgfx::TouchController
 */

class STM32TouchController : public touchgfx::TouchController
 8001070:	4770      	bx	lr

08001072 <_ZN20STM32TouchControllerD0Ev>:
 8001072:	b510      	push	{r4, lr}
 8001074:	4604      	mov	r4, r0
 8001076:	2104      	movs	r1, #4
 8001078:	f030 f9a5 	bl	80313c6 <_ZdlPvj>
 800107c:	4620      	mov	r0, r4
 800107e:	bd10      	pop	{r4, pc}

08001080 <_ZN20STM32TouchController11sampleTouchERlS0_>:

bool STM32TouchController::sampleTouch(int32_t& x, int32_t& y)
{
 8001080:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8001084:	4615      	mov	r5, r2
    uint8_t touches = 0;
    uint8_t buf[6];
    const uint16_t STATUS_REG = 0x814E;
    const uint16_t TOUCH_POS_REG = 0x8150;
    uint8_t ZERO = 0;
 8001086:	f04f 0a00 	mov.w	sl, #0
 */
__STATIC_INLINE void __NVIC_DisableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 800108a:	f44f 3280 	mov.w	r2, #65536	@ 0x10000
 800108e:	4b28      	ldr	r3, [pc, #160]	@ (8001130 <_ZN20STM32TouchController11sampleTouchERlS0_+0xb0>)
{
 8001090:	b089      	sub	sp, #36	@ 0x24
    uint8_t ZERO = 0;
 8001092:	f88d a017 	strb.w	sl, [sp, #23]
{
 8001096:	460e      	mov	r6, r1
 8001098:	f8c3 2080 	str.w	r2, [r3, #128]	@ 0x80
  __ASM volatile ("dsb 0xF":::"memory");
 800109c:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 80010a0:	f3bf 8f6f 	isb	sy

    NVIC_DisableIRQ(EXTI5_IRQn);
    if (doSampleTouch)
 80010a4:	f8df 9090 	ldr.w	r9, [pc, #144]	@ 8001138 <_ZN20STM32TouchController11sampleTouchERlS0_+0xb8>
 80010a8:	f899 3000 	ldrb.w	r3, [r9]
 80010ac:	b30b      	cbz	r3, 80010f2 <_ZN20STM32TouchController11sampleTouchERlS0_+0x72>
    {
        HAL_I2C_Mem_Read(&hi2c2, 0xBA, STATUS_REG, 2, buf, 1, HAL_MAX_DELAY);
 80010ae:	f04f 0b01 	mov.w	fp, #1
 80010b2:	f04f 38ff 	mov.w	r8, #4294967295
 80010b6:	af06      	add	r7, sp, #24
 80010b8:	2302      	movs	r3, #2
 80010ba:	f248 124e 	movw	r2, #33102	@ 0x814e
 80010be:	21ba      	movs	r1, #186	@ 0xba
 80010c0:	e9cd b801 	strd	fp, r8, [sp, #4]
 80010c4:	481b      	ldr	r0, [pc, #108]	@ (8001134 <_ZN20STM32TouchController11sampleTouchERlS0_+0xb4>)
 80010c6:	9700      	str	r7, [sp, #0]
 80010c8:	f004 f8ee 	bl	80052a8 <HAL_I2C_Mem_Read>
        touches = (0x0F & buf[0]);
 80010cc:	f89d 4018 	ldrb.w	r4, [sp, #24]

        HAL_I2C_Mem_Write(&hi2c2, 0xBA, STATUS_REG, 2, &ZERO, 1, HAL_MAX_DELAY);
 80010d0:	f10d 0317 	add.w	r3, sp, #23
 80010d4:	9300      	str	r3, [sp, #0]
 80010d6:	f248 124e 	movw	r2, #33102	@ 0x814e
 80010da:	2302      	movs	r3, #2
 80010dc:	21ba      	movs	r1, #186	@ 0xba
 80010de:	e9cd b801 	strd	fp, r8, [sp, #4]
 80010e2:	4814      	ldr	r0, [pc, #80]	@ (8001134 <_ZN20STM32TouchController11sampleTouchERlS0_+0xb4>)
        touches = (0x0F & buf[0]);
 80010e4:	f004 040f 	and.w	r4, r4, #15
        HAL_I2C_Mem_Write(&hi2c2, 0xBA, STATUS_REG, 2, &ZERO, 1, HAL_MAX_DELAY);
 80010e8:	f004 f804 	bl	80050f4 <HAL_I2C_Mem_Write>

        doSampleTouch = false;
 80010ec:	f889 a000 	strb.w	sl, [r9]

        if (touches > 0)
 80010f0:	b954      	cbnz	r4, 8001108 <_ZN20STM32TouchController11sampleTouchERlS0_+0x88>
    uint8_t touches = 0;
 80010f2:	2400      	movs	r4, #0
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80010f4:	f44f 3280 	mov.w	r2, #65536	@ 0x10000
 80010f8:	4b0d      	ldr	r3, [pc, #52]	@ (8001130 <_ZN20STM32TouchController11sampleTouchERlS0_+0xb0>)
 80010fa:	601a      	str	r2, [r3, #0]
        }
    }
    NVIC_EnableIRQ(EXTI5_IRQn);

    return (touches > 0);
}
 80010fc:	1e20      	subs	r0, r4, #0
 80010fe:	bf18      	it	ne
 8001100:	2001      	movne	r0, #1
 8001102:	b009      	add	sp, #36	@ 0x24
 8001104:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
            HAL_I2C_Mem_Read(&hi2c2, 0xBA, TOUCH_POS_REG, 2, buf, 4, HAL_MAX_DELAY);
 8001108:	2304      	movs	r3, #4
 800110a:	f248 1250 	movw	r2, #33104	@ 0x8150
 800110e:	e9cd 7300 	strd	r7, r3, [sp]
 8001112:	21ba      	movs	r1, #186	@ 0xba
 8001114:	2302      	movs	r3, #2
 8001116:	4807      	ldr	r0, [pc, #28]	@ (8001134 <_ZN20STM32TouchController11sampleTouchERlS0_+0xb4>)
 8001118:	f8cd 8008 	str.w	r8, [sp, #8]
 800111c:	f004 f8c4 	bl	80052a8 <HAL_I2C_Mem_Read>
            x = buf[0] + (buf[1] << 8);
 8001120:	f8bd 3018 	ldrh.w	r3, [sp, #24]
 8001124:	6033      	str	r3, [r6, #0]
            y = buf[2] + (buf[3] << 8);
 8001126:	f8bd 301a 	ldrh.w	r3, [sp, #26]
 800112a:	602b      	str	r3, [r5, #0]
 800112c:	e7e2      	b.n	80010f4 <_ZN20STM32TouchController11sampleTouchERlS0_+0x74>
 800112e:	bf00      	nop
 8001130:	e000e100 	.word	0xe000e100
 8001134:	200004bc 	.word	0x200004bc
 8001138:	200006b0 	.word	0x200006b0

0800113c <HAL_GPIO_EXTI_Falling_Callback>:
        if (GPIO_Pin == TP_IRQ_Pin)
 800113c:	2820      	cmp	r0, #32
            doSampleTouch = true;
 800113e:	bf02      	ittt	eq
 8001140:	2201      	moveq	r2, #1
 8001142:	4b01      	ldreq	r3, [pc, #4]	@ (8001148 <HAL_GPIO_EXTI_Falling_Callback+0xc>)
 8001144:	701a      	strbeq	r2, [r3, #0]
    }
 8001146:	4770      	bx	lr
 8001148:	200006b0 	.word	0x200006b0

0800114c <_ZN8touchgfx4GPIO4initEv>:
 * Perform configuration of IO pins.
 */
void GPIO::init()
{

}
 800114c:	4770      	bx	lr
	...

08001150 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>:
/*
 * Sets a pin high.
 */
void GPIO::set(GPIO_ID id)
{
    switch (id)
 8001150:	2803      	cmp	r0, #3
 8001152:	d814      	bhi.n	800117e <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x2e>
 8001154:	e8df f000 	tbb	[pc, r0]
 8001158:	0f0b0702 	.word	0x0f0b0702
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, GPIO_PIN_SET);
 800115c:	2201      	movs	r2, #1
 800115e:	4611      	mov	r1, r2
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, GPIO_PIN_SET);
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, GPIO_PIN_SET);
 8001160:	4807      	ldr	r0, [pc, #28]	@ (8001180 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x30>)
 8001162:	f003 bde9 	b.w	8004d38 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, GPIO_PIN_SET);
 8001166:	2201      	movs	r2, #1
 8001168:	f44f 6180 	mov.w	r1, #1024	@ 0x400
 800116c:	e7f8      	b.n	8001160 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x10>
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, GPIO_PIN_SET);
 800116e:	2201      	movs	r2, #1
 8001170:	f44f 6100 	mov.w	r1, #2048	@ 0x800
 8001174:	e7f4      	b.n	8001160 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x10>
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, GPIO_PIN_SET);
 8001176:	2201      	movs	r2, #1
 8001178:	f44f 5180 	mov.w	r1, #4096	@ 0x1000
 800117c:	e7f0      	b.n	8001160 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x10>
#endif
        break;
    }
}
 800117e:	4770      	bx	lr
 8001180:	42020800 	.word	0x42020800

08001184 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>:
/*
 * Sets a pin low.
 */
void GPIO::clear(GPIO_ID id)
{
    switch (id)
 8001184:	2803      	cmp	r0, #3
 8001186:	d814      	bhi.n	80011b2 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x2e>
 8001188:	e8df f000 	tbb	[pc, r0]
 800118c:	0f0b0702 	.word	0x0f0b0702
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, GPIO_PIN_RESET);
 8001190:	2200      	movs	r2, #0
 8001192:	2101      	movs	r1, #1
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, GPIO_PIN_RESET);
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, GPIO_PIN_RESET);
 8001194:	4807      	ldr	r0, [pc, #28]	@ (80011b4 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x30>)
 8001196:	f003 bdcf 	b.w	8004d38 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, GPIO_PIN_RESET);
 800119a:	2200      	movs	r2, #0
 800119c:	f44f 6180 	mov.w	r1, #1024	@ 0x400
 80011a0:	e7f8      	b.n	8001194 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x10>
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, GPIO_PIN_RESET);
 80011a2:	2200      	movs	r2, #0
 80011a4:	f44f 6100 	mov.w	r1, #2048	@ 0x800
 80011a8:	e7f4      	b.n	8001194 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x10>
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, GPIO_PIN_RESET);
 80011aa:	2200      	movs	r2, #0
 80011ac:	f44f 5180 	mov.w	r1, #4096	@ 0x1000
 80011b0:	e7f0      	b.n	8001194 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x10>
#endif
        break;
    }
}
 80011b2:	4770      	bx	lr
 80011b4:	42020800 	.word	0x42020800

080011b8 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>:
/*
 * Toggles a pin.
 */
void GPIO::toggle(GPIO_ID id)
{
    switch (id)
 80011b8:	2803      	cmp	r0, #3
 80011ba:	d810      	bhi.n	80011de <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x26>
 80011bc:	e8df f000 	tbb	[pc, r0]
 80011c0:	0c090602 	.word	0x0c090602
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_TogglePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
 80011c4:	2101      	movs	r1, #1
        HAL_GPIO_TogglePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_TogglePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
 80011c6:	4806      	ldr	r0, [pc, #24]	@ (80011e0 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x28>)
 80011c8:	f003 bdbb 	b.w	8004d42 <HAL_GPIO_TogglePin>
        HAL_GPIO_TogglePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
 80011cc:	f44f 6180 	mov.w	r1, #1024	@ 0x400
 80011d0:	e7f9      	b.n	80011c6 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0xe>
        HAL_GPIO_TogglePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
 80011d2:	f44f 6100 	mov.w	r1, #2048	@ 0x800
 80011d6:	e7f6      	b.n	80011c6 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0xe>
        HAL_GPIO_TogglePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
 80011d8:	f44f 5180 	mov.w	r1, #4096	@ 0x1000
 80011dc:	e7f3      	b.n	80011c6 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0xe>
#endif
        break;
    }
}
 80011de:	4770      	bx	lr
 80011e0:	42020800 	.word	0x42020800

080011e4 <_ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE>:
     * @note A screen transition must occur before this takes effect!
     */
    virtual void setDisplayOrientation(DisplayOrientation orientation)
    {
        requestedOrientation = orientation;
        displayOrientationChangeRequested = true;
 80011e4:	2301      	movs	r3, #1
        requestedOrientation = orientation;
 80011e6:	f880 1078 	strb.w	r1, [r0, #120]	@ 0x78
        displayOrientationChangeRequested = true;
 80011ea:	f880 3079 	strb.w	r3, [r0, #121]	@ 0x79
    }
 80011ee:	4770      	bx	lr

080011f0 <_ZN8touchgfx3HAL9sampleKeyERh>:
     */
    virtual bool sampleKey(uint8_t& key)
    {
        (void)key; // Unused variable
        return false;
    }
 80011f0:	2000      	movs	r0, #0
 80011f2:	4770      	bx	lr

080011f4 <_ZN8touchgfx3HAL19setAnimationStorageEPv>:
     *
     * @see setFrameBufferStartAddresses
     */
    virtual void setAnimationStorage(void* animationStorage)
    {
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
 80011f4:	6441      	str	r1, [r0, #68]	@ 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
 80011f6:	3900      	subs	r1, #0
 80011f8:	bf18      	it	ne
 80011fa:	2101      	movne	r1, #1
 80011fc:	4b01      	ldr	r3, [pc, #4]	@ (8001204 <_ZN8touchgfx3HAL19setAnimationStorageEPv+0x10>)
 80011fe:	7019      	strb	r1, [r3, #0]
    }
 8001200:	4770      	bx	lr
 8001202:	bf00      	nop
 8001204:	200830a3 	.word	0x200830a3

08001208 <_ZNK8touchgfx3HAL18getFlashDataReaderEv>:
     * @return the FlashDataReader.
     */
    virtual FlashDataReader* getFlashDataReader() const
    {
        return 0;
    }
 8001208:	2000      	movs	r0, #0
 800120a:	4770      	bx	lr

0800120c <_ZN8touchgfx3HAL9taskDelayEt>:
     *
     * @see registerTaskDelayFunction
     */
    virtual void taskDelay(uint16_t ms)
    {
        if (taskDelayFunc)
 800120c:	6b83      	ldr	r3, [r0, #56]	@ 0x38
 800120e:	b10b      	cbz	r3, 8001214 <_ZN8touchgfx3HAL9taskDelayEt+0x8>
        {
            taskDelayFunc(ms);
 8001210:	4608      	mov	r0, r1
 8001212:	4718      	bx	r3
        }
    }
 8001214:	4770      	bx	lr

08001216 <_ZN8touchgfx3HAL17getTFTCurrentLineEv>:
     *         implemented".
     */
    virtual uint16_t getTFTCurrentLine()
    {
        return 0xFFFFu;
    }
 8001216:	f64f 70ff 	movw	r0, #65535	@ 0xffff
 800121a:	4770      	bx	lr

0800121c <_ZN8touchgfx3HAL10getDMATypeEv>:
     *
     * @return a DMAType value of the concrete DMA implementation.
     */
    virtual DMAType getDMAType()
    {
        return dma.getDMAType();
 800121c:	6840      	ldr	r0, [r0, #4]
 800121e:	6803      	ldr	r3, [r0, #0]
 8001220:	699b      	ldr	r3, [r3, #24]
 8001222:	4718      	bx	r3

08001224 <_ZN8touchgfx3HAL15InvalidateCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Hardware to Software indicating the cache should be invalidated.
     */
    virtual void InvalidateCache()
    {
    }
 8001224:	4770      	bx	lr

08001226 <_ZN8touchgfx3HAL10FlushCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Software to Hardware indicating the cache should be invalidated.
     */
    virtual void FlushCache()
    {
    }
 8001226:	4770      	bx	lr

08001228 <_ZN11TouchGFXHALD1Ev>:
 *
 * @brief HAL implementation for TouchGFX.
 *
 * @sa HAL
 */
class TouchGFXHAL : public TouchGFXGeneratedHAL
 8001228:	4770      	bx	lr
	...

0800122c <_ZN11TouchGFXHAL10initializeEv>:

KeySampler btnctrl;


void TouchGFXHAL::initialize()
{
 800122c:	b538      	push	{r3, r4, r5, lr}
 800122e:	4604      	mov	r4, r0
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::initialize() must be called to initialize the framework.

    TouchGFXGeneratedHAL::initialize();
    instrumentation.init();
 8001230:	f104 05a8 	add.w	r5, r4, #168	@ 0xa8
    TouchGFXGeneratedHAL::initialize();
 8001234:	f001 fac8 	bl	80027c8 <_ZN20TouchGFXGeneratedHAL10initializeEv>
    instrumentation.init();
 8001238:	4628      	mov	r0, r5
 800123a:	f7ff fec5 	bl	8000fc8 <_ZN8touchgfx25CortexMMCUInstrumentation4initEv>
        updateMCULoad = enabled;
 800123e:	2301      	movs	r3, #1
 8001240:	f884 3070 	strb.w	r3, [r4, #112]	@ 0x70
        buttonController = btnCtrl;
 8001244:	4b01      	ldr	r3, [pc, #4]	@ (800124c <_ZN11TouchGFXHAL10initializeEv+0x20>)
        mcuInstrumentation = mcuInstr;
 8001246:	6125      	str	r5, [r4, #16]
        buttonController = btnCtrl;
 8001248:	6163      	str	r3, [r4, #20]
    setMCUInstrumentation(&instrumentation);
    enableMCULoadCalculation(true);
    setButtonController(&btnctrl);

}
 800124a:	bd38      	pop	{r3, r4, r5, pc}
 800124c:	200006b4 	.word	0x200006b4

08001250 <_ZNK11TouchGFXHAL17getTFTFrameBufferEv>:
    // Calling parent implementation of getTFTFrameBuffer().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    return TouchGFXGeneratedHAL::getTFTFrameBuffer();
 8001250:	f001 ba9a 	b.w	8002788 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>

08001254 <_ZN11TouchGFXHAL17setTFTFrameBufferEPt>:
    // Calling parent implementation of setTFTFrameBuffer(uint16_t* address).
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::setTFTFrameBuffer(address);
 8001254:	f001 ba9e 	b.w	8002794 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>

08001258 <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE>:
    // be called to notify the touchgfx framework that flush has been performed.
    // To calculate he start adress of rect,
    // use advanceFrameBufferToRect(uint8_t* fbPtr, const touchgfx::Rect& rect)
    // defined in TouchGFXGeneratedHAL.cpp

    TouchGFXGeneratedHAL::flushFrameBuffer(rect);
 8001258:	f001 bb68 	b.w	800292c <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>

0800125c <_ZN11TouchGFXHAL9blockCopyEPvPKvm>:
}

bool TouchGFXHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
    return TouchGFXGeneratedHAL::blockCopy(dest, src, numBytes);
 800125c:	f001 bb68 	b.w	8002930 <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>

08001260 <_ZN11TouchGFXHAL19configureInterruptsEv>:
    // Calling parent implementation of configureInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::configureInterrupts();
 8001260:	f001 ba6c 	b.w	800273c <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>

08001264 <_ZN11TouchGFXHAL16enableInterruptsEv>:
    // Calling parent implementation of enableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableInterrupts();
 8001264:	f001 bcd2 	b.w	8002c0c <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>

08001268 <_ZN11TouchGFXHAL17disableInterruptsEv>:
    // Calling parent implementation of disableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::disableInterrupts();
 8001268:	f001 bcb6 	b.w	8002bd8 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>

0800126c <_ZN11TouchGFXHAL28enableLCDControllerInterruptEv>:
    // Calling parent implementation of enableLCDControllerInterrupt().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableLCDControllerInterrupt();
 800126c:	f001 ba72 	b.w	8002754 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>

08001270 <_ZN11TouchGFXHAL10beginFrameEv>:
}

bool TouchGFXHAL::beginFrame()
{
    return TouchGFXGeneratedHAL::beginFrame();
 8001270:	f001 bb58 	b.w	8002924 <_ZN20TouchGFXGeneratedHAL10beginFrameEv>

08001274 <_ZN11TouchGFXHAL8endFrameEv>:
}

void TouchGFXHAL::endFrame()
{
    TouchGFXGeneratedHAL::endFrame();
 8001274:	f001 bb58 	b.w	8002928 <_ZN20TouchGFXGeneratedHAL8endFrameEv>

08001278 <_ZN8touchgfx3HAL15backPorchExitedEv>:
    virtual void backPorchExited()
 8001278:	b510      	push	{r4, lr}
 800127a:	4604      	mov	r4, r0
        swapFrameBuffers();
 800127c:	f00a fcf6 	bl	800bc6c <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
 8001280:	6823      	ldr	r3, [r4, #0]
 8001282:	4620      	mov	r0, r4
    }
 8001284:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        tick();
 8001288:	f8d3 30ac 	ldr.w	r3, [r3, #172]	@ 0xac
 800128c:	4718      	bx	r3

0800128e <_ZN20TouchGFXGeneratedHAL17unlockFrameBufferEv>:
     * This specialization is marks DMA2D as un-reserved by the framwork.
     * @see HAL::unlockFrameBuffer
     */
    virtual void unlockFrameBuffer()
    {
        HAL::unlockFrameBuffer();
 800128e:	f00a b877 	b.w	800b380 <_ZN8touchgfx3HAL17unlockFrameBufferEv>

08001292 <_ZN11TouchGFXHAL16flushFrameBufferEv>:
        HAL::flushFrameBuffer();
 8001292:	f009 bf3d 	b.w	800b110 <_ZN8touchgfx3HAL16flushFrameBufferEv>

08001296 <_ZN11TouchGFXHALD0Ev>:
 8001296:	b510      	push	{r4, lr}
 8001298:	4604      	mov	r4, r0
 800129a:	21b4      	movs	r1, #180	@ 0xb4
 800129c:	f030 f893 	bl	80313c6 <_ZdlPvj>
 80012a0:	4620      	mov	r0, r4
 80012a2:	bd10      	pop	{r4, pc}

080012a4 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv>:
    virtual void performDisplayOrientationChange()
 80012a4:	b510      	push	{r4, lr}
        if (requestedOrientation != nativeDisplayOrientation)
 80012a6:	f890 1034 	ldrb.w	r1, [r0, #52]	@ 0x34
 80012aa:	f890 4078 	ldrb.w	r4, [r0, #120]	@ 0x78
            if (DISPLAY_ROTATION == rotate0)
 80012ae:	4b0c      	ldr	r3, [pc, #48]	@ (80012e0 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x3c>)
        if (requestedOrientation != nativeDisplayOrientation)
 80012b0:	428c      	cmp	r4, r1
            if (DISPLAY_ROTATION == rotate0)
 80012b2:	781a      	ldrb	r2, [r3, #0]
        if (requestedOrientation != nativeDisplayOrientation)
 80012b4:	d009      	beq.n	80012ca <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x26>
            if (DISPLAY_ROTATION == rotate0)
 80012b6:	b93a      	cbnz	r2, 80012c8 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
                const uint16_t tmp = DISPLAY_HEIGHT;
 80012b8:	490a      	ldr	r1, [pc, #40]	@ (80012e4 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 80012ba:	4a0b      	ldr	r2, [pc, #44]	@ (80012e8 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
                const uint16_t tmp = DISPLAY_HEIGHT;
 80012bc:	8808      	ldrh	r0, [r1, #0]
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 80012be:	8814      	ldrh	r4, [r2, #0]
                DISPLAY_WIDTH = tmp;
 80012c0:	8010      	strh	r0, [r2, #0]
                DISPLAY_ROTATION = rotate90;
 80012c2:	2201      	movs	r2, #1
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 80012c4:	800c      	strh	r4, [r1, #0]
            DISPLAY_ROTATION = rotate0;
 80012c6:	701a      	strb	r2, [r3, #0]
    }
 80012c8:	bd10      	pop	{r4, pc}
        else if (DISPLAY_ROTATION != rotate0)
 80012ca:	2a00      	cmp	r2, #0
 80012cc:	d0fc      	beq.n	80012c8 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 80012ce:	4a06      	ldr	r2, [pc, #24]	@ (80012e8 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
            const uint16_t tmp = DISPLAY_HEIGHT;
 80012d0:	4904      	ldr	r1, [pc, #16]	@ (80012e4 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 80012d2:	8814      	ldrh	r4, [r2, #0]
            const uint16_t tmp = DISPLAY_HEIGHT;
 80012d4:	8808      	ldrh	r0, [r1, #0]
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 80012d6:	800c      	strh	r4, [r1, #0]
            DISPLAY_WIDTH = tmp;
 80012d8:	8010      	strh	r0, [r2, #0]
            DISPLAY_ROTATION = rotate0;
 80012da:	2200      	movs	r2, #0
 80012dc:	e7f3      	b.n	80012c6 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x22>
 80012de:	bf00      	nop
 80012e0:	2008309c 	.word	0x2008309c
 80012e4:	2008309a 	.word	0x2008309a
 80012e8:	20083098 	.word	0x20083098

080012ec <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_>:
    virtual void setFrameBufferStartAddresses(void* frameBuffer, void* doubleBuffer, void* animationStorage)
 80012ec:	b570      	push	{r4, r5, r6, lr}
 80012ee:	460d      	mov	r5, r1
 80012f0:	4619      	mov	r1, r3
        assert(frameBuffer != 0 && "A framebuffer address must be set");
 80012f2:	b935      	cbnz	r5, 8001302 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x16>
 80012f4:	f240 21d2 	movw	r1, #722	@ 0x2d2
 80012f8:	4b08      	ldr	r3, [pc, #32]	@ (800131c <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x30>)
 80012fa:	4a09      	ldr	r2, [pc, #36]	@ (8001320 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x34>)
 80012fc:	4809      	ldr	r0, [pc, #36]	@ (8001324 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x38>)
 80012fe:	f031 fa3b 	bl	8032778 <__assert_func>
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
 8001302:	e9c0 520f 	strd	r5, r2, [r0, #60]	@ 0x3c
    }
 8001306:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
 800130a:	3a00      	subs	r2, #0
 800130c:	bf18      	it	ne
 800130e:	2201      	movne	r2, #1
 8001310:	4b05      	ldr	r3, [pc, #20]	@ (8001328 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x3c>)
 8001312:	701a      	strb	r2, [r3, #0]
        setAnimationStorage(animationStorage);
 8001314:	6803      	ldr	r3, [r0, #0]
 8001316:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
 800131a:	4718      	bx	r3
 800131c:	080339a4 	.word	0x080339a4
 8001320:	080339dc 	.word	0x080339dc
 8001324:	08033a2a 	.word	0x08033a2a
 8001328:	200830a2 	.word	0x200830a2

0800132c <_ZN8touchgfx3HAL18setFrameBufferSizeEtt>:
    virtual void setFrameBufferSize(uint16_t width, uint16_t height)
 800132c:	b508      	push	{r3, lr}
        assert(width >= DISPLAY_WIDTH && height >= DISPLAY_HEIGHT && "Framebuffer cannot be smaller than display");
 800132e:	4b09      	ldr	r3, [pc, #36]	@ (8001354 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x28>)
 8001330:	881b      	ldrh	r3, [r3, #0]
 8001332:	428b      	cmp	r3, r1
 8001334:	d803      	bhi.n	800133e <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x12>
 8001336:	4b08      	ldr	r3, [pc, #32]	@ (8001358 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x2c>)
 8001338:	881b      	ldrh	r3, [r3, #0]
 800133a:	4293      	cmp	r3, r2
 800133c:	d905      	bls.n	800134a <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x1e>
 800133e:	219e      	movs	r1, #158	@ 0x9e
 8001340:	4b06      	ldr	r3, [pc, #24]	@ (800135c <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x30>)
 8001342:	4a07      	ldr	r2, [pc, #28]	@ (8001360 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x34>)
 8001344:	4807      	ldr	r0, [pc, #28]	@ (8001364 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x38>)
 8001346:	f031 fa17 	bl	8032778 <__assert_func>
        FRAME_BUFFER_WIDTH = width;
 800134a:	4b07      	ldr	r3, [pc, #28]	@ (8001368 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x3c>)
 800134c:	8019      	strh	r1, [r3, #0]
        FRAME_BUFFER_HEIGHT = height;
 800134e:	4b07      	ldr	r3, [pc, #28]	@ (800136c <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x40>)
 8001350:	801a      	strh	r2, [r3, #0]
    }
 8001352:	bd08      	pop	{r3, pc}
 8001354:	20083098 	.word	0x20083098
 8001358:	2008309a 	.word	0x2008309a
 800135c:	08033a6f 	.word	0x08033a6f
 8001360:	08033ad2 	.word	0x08033ad2
 8001364:	08033a2a 	.word	0x08033a2a
 8001368:	2008309e 	.word	0x2008309e
 800136c:	200830a0 	.word	0x200830a0

08001370 <_ZN8touchgfx3HAL11getBlitCapsEv>:
    virtual BlitOperations getBlitCaps()
 8001370:	4603      	mov	r3, r0
        if (useDMAAcceleration)
 8001372:	f890 007a 	ldrb.w	r0, [r0, #122]	@ 0x7a
 8001376:	b118      	cbz	r0, 8001380 <_ZN8touchgfx3HAL11getBlitCapsEv+0x10>
 8001378:	6858      	ldr	r0, [r3, #4]
            return dma.getBlitCaps();
 800137a:	6803      	ldr	r3, [r0, #0]
 800137c:	681b      	ldr	r3, [r3, #0]
 800137e:	4718      	bx	r3
    }
 8001380:	4770      	bx	lr
	...

08001384 <IdleTaskHook>:
}

extern "C"
{
    portBASE_TYPE IdleTaskHook(void* p)
    {
 8001384:	4601      	mov	r1, r0
 8001386:	b508      	push	{r3, lr}
        return instance;
 8001388:	4b03      	ldr	r3, [pc, #12]	@ (8001398 <IdleTaskHook+0x14>)
 800138a:	6818      	ldr	r0, [r3, #0]
        if ((int)p) //idle task sched out
 800138c:	b101      	cbz	r1, 8001390 <IdleTaskHook+0xc>
        {
            touchgfx::HAL::getInstance()->setMCUActive(true);
 800138e:	2101      	movs	r1, #1
        }
        else //idle task sched in
        {
            touchgfx::HAL::getInstance()->setMCUActive(false);
 8001390:	f00a fc86 	bl	800bca0 <_ZN8touchgfx3HAL12setMCUActiveEb>
        }
        return pdTRUE;
    }
 8001394:	2001      	movs	r0, #1
 8001396:	bd08      	pop	{r3, pc}
 8001398:	200830a4 	.word	0x200830a4

0800139c <_GLOBAL__sub_I_btnctrl>:
{
class KeySampler : public ButtonController
{
public:
    KeySampler()
    {
 800139c:	4802      	ldr	r0, [pc, #8]	@ (80013a8 <_GLOBAL__sub_I_btnctrl+0xc>)
 800139e:	4b03      	ldr	r3, [pc, #12]	@ (80013ac <_GLOBAL__sub_I_btnctrl+0x10>)
 80013a0:	6003      	str	r3, [r0, #0]
        init();
 80013a2:	f7ff be4e 	b.w	8001042 <_ZN8touchgfx10KeySampler4initEv>
 80013a6:	bf00      	nop
 80013a8:	200006b4 	.word	0x200006b4
 80013ac:	08033978 	.word	0x08033978

080013b0 <_ZNK20HardwareMJPEGDecoder21getCurrentFrameNumberEv>:
    virtual bool decodeThumbnail(uint32_t frameno, uint8_t* buffer, uint16_t width, uint16_t height);
    virtual void gotoFrame(uint32_t frameno);
    virtual uint32_t getCurrentFrameNumber() const
    {
        return frameNumber;
    }
 80013b0:	6940      	ldr	r0, [r0, #20]
 80013b2:	4770      	bx	lr

080013b4 <_ZN20HardwareMJPEGDecoder12getLastErrorEv>:
    }

    virtual AVIErrors getLastError()
    {
        return lastError;
    }
 80013b4:	f890 0040 	ldrb.w	r0, [r0, #64]	@ 0x40
 80013b8:	4770      	bx	lr

080013ba <_ZN20HardwareMJPEGDecoder8hasVideoEv>:
    readVideoHeader();
}

bool HardwareMJPEGDecoder::hasVideo()
{
    return (reader != 0) || (movieData != 0);
 80013ba:	6b03      	ldr	r3, [r0, #48]	@ 0x30
 80013bc:	b923      	cbnz	r3, 80013c8 <_ZN20HardwareMJPEGDecoder8hasVideoEv+0xe>
 80013be:	6ac0      	ldr	r0, [r0, #44]	@ 0x2c
 80013c0:	3800      	subs	r0, #0
 80013c2:	bf18      	it	ne
 80013c4:	2001      	movne	r0, #1
 80013c6:	4770      	bx	lr
 80013c8:	2001      	movs	r0, #1
}
 80013ca:	4770      	bx	lr

080013cc <_ZN20HardwareMJPEGDecoder17getNumberOfFramesEv>:
}

uint32_t HardwareMJPEGDecoder::getNumberOfFrames()
{
    return videoInfo.number_of_frames;
}
 80013cc:	6880      	ldr	r0, [r0, #8]
 80013ce:	4770      	bx	lr

080013d0 <_ZN20HardwareMJPEGDecoder14setRepeatVideoEb>:

void HardwareMJPEGDecoder::setRepeatVideo(bool repeat)
{

}
 80013d0:	4770      	bx	lr

080013d2 <_ZN20HardwareMJPEGDecoder12getVideoInfoEPN8touchgfx16VideoInformationE>:

void HardwareMJPEGDecoder::getVideoInfo(touchgfx::VideoInformation* data)
{
 80013d2:	b510      	push	{r4, lr}
 80013d4:	460c      	mov	r4, r1
    *data = videoInfo;
 80013d6:	3004      	adds	r0, #4
 80013d8:	c80f      	ldmia	r0, {r0, r1, r2, r3}
 80013da:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
}
 80013de:	bd10      	pop	{r4, pc}

080013e0 <_ZN20HardwareMJPEGDecoderD1Ev>:
class HardwareMJPEGDecoder : public MJPEGDecoder
 80013e0:	4770      	bx	lr
	...

080013e4 <_ZN20HardwareMJPEGDecoder15decodeThumbnailEmPhtt>:
{
 80013e4:	b508      	push	{r3, lr}
    assert(0);
 80013e6:	f44f 71fa 	mov.w	r1, #500	@ 0x1f4
 80013ea:	4b02      	ldr	r3, [pc, #8]	@ (80013f4 <_ZN20HardwareMJPEGDecoder15decodeThumbnailEmPhtt+0x10>)
 80013ec:	4a02      	ldr	r2, [pc, #8]	@ (80013f8 <_ZN20HardwareMJPEGDecoder15decodeThumbnailEmPhtt+0x14>)
 80013ee:	4803      	ldr	r0, [pc, #12]	@ (80013fc <_ZN20HardwareMJPEGDecoder15decodeThumbnailEmPhtt+0x18>)
 80013f0:	f031 f9c2 	bl	8032778 <__assert_func>
 80013f4:	08035055 	.word	0x08035055
 80013f8:	08033bf0 	.word	0x08033bf0
 80013fc:	08033c4b 	.word	0x08033c4b

08001400 <_ZN20HardwareMJPEGDecoderD0Ev>:
 8001400:	b510      	push	{r4, lr}
 8001402:	4604      	mov	r4, r0
 8001404:	2148      	movs	r1, #72	@ 0x48
 8001406:	f02f ffde 	bl	80313c6 <_ZdlPvj>
 800140a:	4620      	mov	r0, r4
 800140c:	bd10      	pop	{r4, pc}
	...

08001410 <_ZN20HardwareMJPEGDecoderC1Ev>:
    : frameNumber(0), currentMovieOffset(0), indexOffset(0), firstFrameOffset(0), lastFrameEnd(0), movieLength(0), movieData(0),
 8001410:	2200      	movs	r2, #0
      reader(0), aviBuffer(0), aviBufferLength(0), aviBufferStartOffset(0), lastError(AVI_NO_ERROR)
 8001412:	4b0e      	ldr	r3, [pc, #56]	@ (800144c <_ZN20HardwareMJPEGDecoderC1Ev+0x3c>)
HardwareMJPEGDecoder::HardwareMJPEGDecoder()
 8001414:	b510      	push	{r4, lr}
    semDecodingDone = SEM_CREATE();
 8001416:	4611      	mov	r1, r2
HardwareMJPEGDecoder::HardwareMJPEGDecoder()
 8001418:	4604      	mov	r4, r0
    : frameNumber(0), currentMovieOffset(0), indexOffset(0), firstFrameOffset(0), lastFrameEnd(0), movieLength(0), movieData(0),
 800141a:	e9c0 2205 	strd	r2, r2, [r0, #20]
 800141e:	e9c0 2207 	strd	r2, r2, [r0, #28]
 8001422:	e9c0 2209 	strd	r2, r2, [r0, #36]	@ 0x24
      reader(0), aviBuffer(0), aviBufferLength(0), aviBufferStartOffset(0), lastError(AVI_NO_ERROR)
 8001426:	e9c0 220b 	strd	r2, r2, [r0, #44]	@ 0x2c
 800142a:	e9c0 220d 	strd	r2, r2, [r0, #52]	@ 0x34
    videoInfo.frame_width = 0;
 800142e:	e9c0 2203 	strd	r2, r2, [r0, #12]
    videoInfo.number_of_frames = 0;
 8001432:	e9c0 2201 	strd	r2, r2, [r0, #4]
      reader(0), aviBuffer(0), aviBufferLength(0), aviBufferStartOffset(0), lastError(AVI_NO_ERROR)
 8001436:	6003      	str	r3, [r0, #0]
 8001438:	63c2      	str	r2, [r0, #60]	@ 0x3c
 800143a:	f880 2040 	strb.w	r2, [r0, #64]	@ 0x40
    semDecodingDone = SEM_CREATE();
 800143e:	2001      	movs	r0, #1
 8001440:	f007 fca5 	bl	8008d8e <osSemaphoreNew>
 8001444:	4b02      	ldr	r3, [pc, #8]	@ (8001450 <_ZN20HardwareMJPEGDecoderC1Ev+0x40>)
 8001446:	6018      	str	r0, [r3, #0]
}
 8001448:	4620      	mov	r0, r4
 800144a:	bd10      	pop	{r4, pc}
 800144c:	08033e8c 	.word	0x08033e8c
 8001450:	20000704 	.word	0x20000704

08001454 <_ZN20HardwareMJPEGDecoder7compareEmPKcm>:
{
 8001454:	b410      	push	{r4}
 8001456:	460c      	mov	r4, r1
 8001458:	4611      	mov	r1, r2
 800145a:	461a      	mov	r2, r3
    if (reader != 0)
 800145c:	6b03      	ldr	r3, [r0, #48]	@ 0x30
 800145e:	b13b      	cbz	r3, 8001470 <_ZN20HardwareMJPEGDecoder7compareEmPKcm+0x1c>
        src = reinterpret_cast<const char*>(aviBuffer + (offset - aviBufferStartOffset));
 8001460:	6bc3      	ldr	r3, [r0, #60]	@ 0x3c
 8001462:	6b40      	ldr	r0, [r0, #52]	@ 0x34
 8001464:	1ae4      	subs	r4, r4, r3
        src = (const char*)movieData + offset;
 8001466:	4420      	add	r0, r4
}
 8001468:	f85d 4b04 	ldr.w	r4, [sp], #4
    return strncmp(src, str, num);
 800146c:	f031 bb93 	b.w	8032b96 <strncmp>
        src = (const char*)movieData + offset;
 8001470:	6ac0      	ldr	r0, [r0, #44]	@ 0x2c
 8001472:	e7f8      	b.n	8001466 <_ZN20HardwareMJPEGDecoder7compareEmPKcm+0x12>

08001474 <_ZN20HardwareMJPEGDecoder6getU32Em>:
    if (reader != 0)
 8001474:	6b03      	ldr	r3, [r0, #48]	@ 0x30
{
 8001476:	b510      	push	{r4, lr}
    if (reader != 0)
 8001478:	b173      	cbz	r3, 8001498 <_ZN20HardwareMJPEGDecoder6getU32Em+0x24>
        const uint32_t index = offset - aviBufferStartOffset;
 800147a:	6bc3      	ldr	r3, [r0, #60]	@ 0x3c
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
 800147c:	6b42      	ldr	r2, [r0, #52]	@ 0x34
        const uint32_t index = offset - aviBufferStartOffset;
 800147e:	1ac9      	subs	r1, r1, r3
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
 8001480:	1853      	adds	r3, r2, r1
 8001482:	7898      	ldrb	r0, [r3, #2]
 8001484:	785c      	ldrb	r4, [r3, #1]
 8001486:	0400      	lsls	r0, r0, #16
 8001488:	5c52      	ldrb	r2, [r2, r1]
 800148a:	ea40 2004 	orr.w	r0, r0, r4, lsl #8
        val |= d[3] << 24;
 800148e:	78db      	ldrb	r3, [r3, #3]
        val |= d[2] << 16;
 8001490:	4310      	orrs	r0, r2
        val |= d[3] << 24;
 8001492:	ea40 6003 	orr.w	r0, r0, r3, lsl #24
}
 8001496:	bd10      	pop	{r4, pc}
        volatile const uint8_t* const d = movieData + offset;
 8001498:	6ac2      	ldr	r2, [r0, #44]	@ 0x2c
 800149a:	1853      	adds	r3, r2, r1
        val |= d[0];
 800149c:	5c52      	ldrb	r2, [r2, r1]
        val |= d[1] << 8;
 800149e:	7859      	ldrb	r1, [r3, #1]
        val |= d[2] << 16;
 80014a0:	7898      	ldrb	r0, [r3, #2]
 80014a2:	0400      	lsls	r0, r0, #16
 80014a4:	ea40 2001 	orr.w	r0, r0, r1, lsl #8
 80014a8:	e7f1      	b.n	800148e <_ZN20HardwareMJPEGDecoder6getU32Em+0x1a>

080014aa <_ZN20HardwareMJPEGDecoder6getU16Em>:
    if (reader != 0)
 80014aa:	6b03      	ldr	r3, [r0, #48]	@ 0x30
 80014ac:	b143      	cbz	r3, 80014c0 <_ZN20HardwareMJPEGDecoder6getU16Em+0x16>
        const uint32_t index = offset - aviBufferStartOffset;
 80014ae:	6bc3      	ldr	r3, [r0, #60]	@ 0x3c
 80014b0:	1ac9      	subs	r1, r1, r3
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8);
 80014b2:	6b43      	ldr	r3, [r0, #52]	@ 0x34
 80014b4:	185a      	adds	r2, r3, r1
 80014b6:	7852      	ldrb	r2, [r2, #1]
 80014b8:	5c58      	ldrb	r0, [r3, r1]
 80014ba:	ea40 2002 	orr.w	r0, r0, r2, lsl #8
 80014be:	4770      	bx	lr
        volatile const uint8_t* const d = movieData + offset;
 80014c0:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 80014c2:	185a      	adds	r2, r3, r1
        val |= d[0];
 80014c4:	5c58      	ldrb	r0, [r3, r1]
        val |= d[1] << 8;
 80014c6:	7853      	ldrb	r3, [r2, #1]
 80014c8:	ea40 2003 	orr.w	r0, r0, r3, lsl #8
}
 80014cc:	4770      	bx	lr
	...

080014d0 <_ZN20HardwareMJPEGDecoder8readDataEmm>:
{
 80014d0:	b570      	push	{r4, r5, r6, lr}
 80014d2:	4604      	mov	r4, r0
    if (reader != 0)
 80014d4:	6b00      	ldr	r0, [r0, #48]	@ 0x30
{
 80014d6:	460d      	mov	r5, r1
 80014d8:	4616      	mov	r6, r2
    if (reader != 0)
 80014da:	b1d8      	cbz	r0, 8001514 <_ZN20HardwareMJPEGDecoder8readDataEmm+0x44>
        if (length > aviBufferLength)
 80014dc:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 80014de:	4293      	cmp	r3, r2
 80014e0:	d208      	bcs.n	80014f4 <_ZN20HardwareMJPEGDecoder8readDataEmm+0x24>
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
 80014e2:	2309      	movs	r3, #9
            assert(!"Buffer to small");
 80014e4:	21b0      	movs	r1, #176	@ 0xb0
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
 80014e6:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
            assert(!"Buffer to small");
 80014ea:	4a0c      	ldr	r2, [pc, #48]	@ (800151c <_ZN20HardwareMJPEGDecoder8readDataEmm+0x4c>)
 80014ec:	4b0c      	ldr	r3, [pc, #48]	@ (8001520 <_ZN20HardwareMJPEGDecoder8readDataEmm+0x50>)
 80014ee:	480d      	ldr	r0, [pc, #52]	@ (8001524 <_ZN20HardwareMJPEGDecoder8readDataEmm+0x54>)
 80014f0:	f031 f942 	bl	8032778 <__assert_func>
        reader->seek(offset);
 80014f4:	6803      	ldr	r3, [r0, #0]
 80014f6:	68db      	ldr	r3, [r3, #12]
 80014f8:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
 80014fa:	6b20      	ldr	r0, [r4, #48]	@ 0x30
 80014fc:	4632      	mov	r2, r6
 80014fe:	6803      	ldr	r3, [r0, #0]
 8001500:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8001502:	691b      	ldr	r3, [r3, #16]
 8001504:	4798      	blx	r3
 8001506:	b910      	cbnz	r0, 800150e <_ZN20HardwareMJPEGDecoder8readDataEmm+0x3e>
            lastError = AVI_ERROR_EOF_REACHED;
 8001508:	230d      	movs	r3, #13
 800150a:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
        return aviBuffer;
 800150e:	6b60      	ldr	r0, [r4, #52]	@ 0x34
        aviBufferStartOffset = offset;
 8001510:	63e5      	str	r5, [r4, #60]	@ 0x3c
}
 8001512:	bd70      	pop	{r4, r5, r6, pc}
    return movieData + offset;
 8001514:	6ae0      	ldr	r0, [r4, #44]	@ 0x2c
 8001516:	4408      	add	r0, r1
 8001518:	e7fb      	b.n	8001512 <_ZN20HardwareMJPEGDecoder8readDataEmm+0x42>
 800151a:	bf00      	nop
 800151c:	08033cc7 	.word	0x08033cc7
 8001520:	08033cb4 	.word	0x08033cb4
 8001524:	08033c4b 	.word	0x08033c4b

08001528 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv>:
{
 8001528:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
    assert((frameNumber > 0) && "HardwareMJPEGDecoder decoding without frame data!");
 800152c:	6943      	ldr	r3, [r0, #20]
{
 800152e:	4604      	mov	r4, r0
    assert((frameNumber > 0) && "HardwareMJPEGDecoder decoding without frame data!");
 8001530:	b92b      	cbnz	r3, 800153e <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x16>
 8001532:	21f6      	movs	r1, #246	@ 0xf6
 8001534:	4b21      	ldr	r3, [pc, #132]	@ (80015bc <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x94>)
 8001536:	4a22      	ldr	r2, [pc, #136]	@ (80015c0 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x98>)
 8001538:	4822      	ldr	r0, [pc, #136]	@ (80015c4 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x9c>)
 800153a:	f031 f91d 	bl	8032778 <__assert_func>
    readData(currentMovieOffset, 8);
 800153e:	2208      	movs	r2, #8
 8001540:	6981      	ldr	r1, [r0, #24]
 8001542:	f7ff ffc5 	bl	80014d0 <_ZN20HardwareMJPEGDecoder8readDataEmm>
    uint32_t chunkSize = getU32(currentMovieOffset + 4);
 8001546:	69a1      	ldr	r1, [r4, #24]
 8001548:	4620      	mov	r0, r4
 800154a:	3104      	adds	r1, #4
 800154c:	f7ff ff92 	bl	8001474 <_ZN20HardwareMJPEGDecoder6getU32Em>
        if (streamNo == STREAM0 && chunkType == TYPEDC)
 8001550:	f243 0630 	movw	r6, #12336	@ 0x3030
 8001554:	f246 3764 	movw	r7, #25444	@ 0x6364
    while (currentMovieOffset + 8 + chunkSize < movieLength)
 8001558:	69a3      	ldr	r3, [r4, #24]
 800155a:	4418      	add	r0, r3
 800155c:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
 800155e:	f100 0208 	add.w	r2, r0, #8
 8001562:	429a      	cmp	r2, r3
 8001564:	d306      	bcc.n	8001574 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x4c>
    frameNumber = 1;
 8001566:	2301      	movs	r3, #1
    return false;
 8001568:	2000      	movs	r0, #0
    frameNumber = 1;
 800156a:	6163      	str	r3, [r4, #20]
    currentMovieOffset = firstFrameOffset; /* start over */
 800156c:	6a23      	ldr	r3, [r4, #32]
 800156e:	61a3      	str	r3, [r4, #24]
}
 8001570:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
        frameNumber++;
 8001574:	6963      	ldr	r3, [r4, #20]
        currentMovieOffset = (currentMovieOffset + 1) & 0xFFFFFFFE; /* pad to next word */
 8001576:	f100 0109 	add.w	r1, r0, #9
        frameNumber++;
 800157a:	3301      	adds	r3, #1
        currentMovieOffset = (currentMovieOffset + 1) & 0xFFFFFFFE; /* pad to next word */
 800157c:	f021 0101 	bic.w	r1, r1, #1
        readData(currentMovieOffset, 8);
 8001580:	2208      	movs	r2, #8
        frameNumber++;
 8001582:	6163      	str	r3, [r4, #20]
        currentMovieOffset = (currentMovieOffset + 1) & 0xFFFFFFFE; /* pad to next word */
 8001584:	61a1      	str	r1, [r4, #24]
        readData(currentMovieOffset, 8);
 8001586:	4620      	mov	r0, r4
 8001588:	f7ff ffa2 	bl	80014d0 <_ZN20HardwareMJPEGDecoder8readDataEmm>
        uint32_t streamNo  = getU16(currentMovieOffset);
 800158c:	f8d4 9018 	ldr.w	r9, [r4, #24]
 8001590:	4620      	mov	r0, r4
 8001592:	4649      	mov	r1, r9
 8001594:	f7ff ff89 	bl	80014aa <_ZN20HardwareMJPEGDecoder6getU16Em>
        uint32_t chunkType = getU16(currentMovieOffset + 2);
 8001598:	f109 0102 	add.w	r1, r9, #2
        uint32_t streamNo  = getU16(currentMovieOffset);
 800159c:	4680      	mov	r8, r0
        uint32_t chunkType = getU16(currentMovieOffset + 2);
 800159e:	4620      	mov	r0, r4
 80015a0:	f7ff ff83 	bl	80014aa <_ZN20HardwareMJPEGDecoder6getU16Em>
        chunkSize = getU32(currentMovieOffset + 4);
 80015a4:	f109 0104 	add.w	r1, r9, #4
        uint32_t chunkType = getU16(currentMovieOffset + 2);
 80015a8:	4605      	mov	r5, r0
        chunkSize = getU32(currentMovieOffset + 4);
 80015aa:	4620      	mov	r0, r4
 80015ac:	f7ff ff62 	bl	8001474 <_ZN20HardwareMJPEGDecoder6getU32Em>
        if (streamNo == STREAM0 && chunkType == TYPEDC)
 80015b0:	45b0      	cmp	r8, r6
 80015b2:	d1d1      	bne.n	8001558 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x30>
 80015b4:	42bd      	cmp	r5, r7
 80015b6:	d1cf      	bne.n	8001558 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x30>
            return true;
 80015b8:	2001      	movs	r0, #1
 80015ba:	e7d9      	b.n	8001570 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x48>
 80015bc:	08033d09 	.word	0x08033d09
 80015c0:	08033d52 	.word	0x08033d52
 80015c4:	08033c4b 	.word	0x08033c4b

080015c8 <_ZN20HardwareMJPEGDecoder9gotoFrameEm>:
    if (frameNumber == 0)
 80015c8:	2901      	cmp	r1, #1
 80015ca:	bf38      	it	cc
 80015cc:	2101      	movcc	r1, #1
    if (frameNumber > getNumberOfFrames())
 80015ce:	6803      	ldr	r3, [r0, #0]
{
 80015d0:	b570      	push	{r4, r5, r6, lr}
    if (frameNumber > getNumberOfFrames())
 80015d2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80015d4:	460d      	mov	r5, r1
{
 80015d6:	4604      	mov	r4, r0
    if (frameNumber > getNumberOfFrames())
 80015d8:	4798      	blx	r3
 80015da:	42a8      	cmp	r0, r5
 80015dc:	d204      	bcs.n	80015e8 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x20>
        frameNumber = getNumberOfFrames();
 80015de:	6823      	ldr	r3, [r4, #0]
 80015e0:	4620      	mov	r0, r4
 80015e2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80015e4:	4798      	blx	r3
 80015e6:	4605      	mov	r5, r0
    uint32_t offset = indexOffset + 8 + (frameNumber - 1) * 16;
 80015e8:	69e6      	ldr	r6, [r4, #28]
 80015ea:	1e6b      	subs	r3, r5, #1
 80015ec:	eb06 1603 	add.w	r6, r6, r3, lsl #4
    readData(offset, 16);
 80015f0:	2210      	movs	r2, #16
 80015f2:	f106 0108 	add.w	r1, r6, #8
 80015f6:	4620      	mov	r0, r4
 80015f8:	f7ff ff6a 	bl	80014d0 <_ZN20HardwareMJPEGDecoder8readDataEmm>
    currentMovieOffset = getU32(offset + 8) + firstFrameOffset - 4;
 80015fc:	4620      	mov	r0, r4
 80015fe:	f106 0110 	add.w	r1, r6, #16
 8001602:	f7ff ff37 	bl	8001474 <_ZN20HardwareMJPEGDecoder6getU32Em>
 8001606:	6a23      	ldr	r3, [r4, #32]
 8001608:	3b04      	subs	r3, #4
 800160a:	4403      	add	r3, r0
    this->frameNumber = frameNumber;
 800160c:	e9c4 5305 	strd	r5, r3, [r4, #20]
}
 8001610:	bd70      	pop	{r4, r5, r6, pc}
	...

08001614 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv>:
    currentMovieOffset = 0;
 8001614:	2100      	movs	r1, #0
{
 8001616:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800161a:	4604      	mov	r4, r0
    readData(0, 72);
 800161c:	2248      	movs	r2, #72	@ 0x48
    currentMovieOffset = 0;
 800161e:	6181      	str	r1, [r0, #24]
    lastError = AVI_NO_ERROR;
 8001620:	f880 1040 	strb.w	r1, [r0, #64]	@ 0x40
    readData(0, 72);
 8001624:	f7ff ff54 	bl	80014d0 <_ZN20HardwareMJPEGDecoder8readDataEmm>
    if (compare(currentMovieOffset, "RIFF", 4))
 8001628:	69a6      	ldr	r6, [r4, #24]
 800162a:	2304      	movs	r3, #4
 800162c:	4631      	mov	r1, r6
 800162e:	4620      	mov	r0, r4
 8001630:	4a62      	ldr	r2, [pc, #392]	@ (80017bc <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1a8>)
 8001632:	f7ff ff0f 	bl	8001454 <_ZN20HardwareMJPEGDecoder7compareEmPKcm>
 8001636:	b148      	cbz	r0, 800164c <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x38>
        lastError = AVI_ERROR_NOT_RIFF;
 8001638:	2303      	movs	r3, #3
        assert(!"RIFF header not found");
 800163a:	f44f 719f 	mov.w	r1, #318	@ 0x13e
        lastError = AVI_ERROR_NOT_RIFF;
 800163e:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
        assert(!"RIFF header not found");
 8001642:	4a5f      	ldr	r2, [pc, #380]	@ (80017c0 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1ac>)
 8001644:	4b5f      	ldr	r3, [pc, #380]	@ (80017c4 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1b0>)
        assert(!"AVI header not found");
 8001646:	4860      	ldr	r0, [pc, #384]	@ (80017c8 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1b4>)
 8001648:	f031 f896 	bl	8032778 <__assert_func>
    currentMovieOffset += 8;
 800164c:	f106 0108 	add.w	r1, r6, #8
    if (compare(currentMovieOffset, "AVI ", 4))
 8001650:	2304      	movs	r3, #4
 8001652:	4620      	mov	r0, r4
 8001654:	4a5d      	ldr	r2, [pc, #372]	@ (80017cc <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1b8>)
    currentMovieOffset += 8;
 8001656:	61a1      	str	r1, [r4, #24]
    if (compare(currentMovieOffset, "AVI ", 4))
 8001658:	f7ff fefc 	bl	8001454 <_ZN20HardwareMJPEGDecoder7compareEmPKcm>
 800165c:	b138      	cbz	r0, 800166e <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x5a>
        lastError = AVI_ERROR_AVI_HEADER_NOT_FOUND;
 800165e:	2304      	movs	r3, #4
        assert(!"AVI header not found");
 8001660:	f44f 71a3 	mov.w	r1, #326	@ 0x146
        lastError = AVI_ERROR_AVI_HEADER_NOT_FOUND;
 8001664:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
        assert(!"AVI header not found");
 8001668:	4a55      	ldr	r2, [pc, #340]	@ (80017c0 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1ac>)
 800166a:	4b59      	ldr	r3, [pc, #356]	@ (80017d0 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1bc>)
 800166c:	e7eb      	b.n	8001646 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x32>
    currentMovieOffset += 4;
 800166e:	f106 010c 	add.w	r1, r6, #12
    if (compare(currentMovieOffset, "LIST", 4))
 8001672:	2304      	movs	r3, #4
 8001674:	4620      	mov	r0, r4
 8001676:	4a57      	ldr	r2, [pc, #348]	@ (80017d4 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1c0>)
    currentMovieOffset += 4;
 8001678:	61a1      	str	r1, [r4, #24]
    if (compare(currentMovieOffset, "LIST", 4))
 800167a:	f7ff feeb 	bl	8001454 <_ZN20HardwareMJPEGDecoder7compareEmPKcm>
 800167e:	4607      	mov	r7, r0
 8001680:	b138      	cbz	r0, 8001692 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x7e>
        lastError = AVI_ERROR_AVI_LIST_NOT_FOUND;
 8001682:	2305      	movs	r3, #5
        assert(!"AVI LIST not found");
 8001684:	f240 114d 	movw	r1, #333	@ 0x14d
        lastError = AVI_ERROR_AVI_LIST_NOT_FOUND;
 8001688:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
        assert(!"AVI LIST not found");
 800168c:	4a4c      	ldr	r2, [pc, #304]	@ (80017c0 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1ac>)
 800168e:	4b52      	ldr	r3, [pc, #328]	@ (80017d8 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1c4>)
 8001690:	e7d9      	b.n	8001646 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x32>
    const uint32_t aviListSize = getU32(currentMovieOffset + 4);
 8001692:	4620      	mov	r0, r4
 8001694:	f106 0110 	add.w	r1, r6, #16
 8001698:	f7ff feec 	bl	8001474 <_ZN20HardwareMJPEGDecoder6getU32Em>
    assert(aviListSize);
 800169c:	4605      	mov	r5, r0
 800169e:	b920      	cbnz	r0, 80016aa <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x96>
 80016a0:	f240 1153 	movw	r1, #339	@ 0x153
 80016a4:	4b4d      	ldr	r3, [pc, #308]	@ (80017dc <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1c8>)
 80016a6:	4a46      	ldr	r2, [pc, #280]	@ (80017c0 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1ac>)
 80016a8:	e7cd      	b.n	8001646 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x32>
    uint32_t offset =  currentMovieOffset + 8;
 80016aa:	f106 0814 	add.w	r8, r6, #20
    if (compare(offset, "hdrl", 4))
 80016ae:	2304      	movs	r3, #4
 80016b0:	4641      	mov	r1, r8
 80016b2:	4620      	mov	r0, r4
 80016b4:	4a4a      	ldr	r2, [pc, #296]	@ (80017e0 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1cc>)
 80016b6:	f7ff fecd 	bl	8001454 <_ZN20HardwareMJPEGDecoder7compareEmPKcm>
 80016ba:	2800      	cmp	r0, #0
 80016bc:	d049      	beq.n	8001752 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x13e>
        lastError = AVI_ERROR_AVI_HDRL_NOT_FOUND;
 80016be:	2306      	movs	r3, #6
 80016c0:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
    if (compare(offset, "avih", 4))
 80016c4:	2304      	movs	r3, #4
 80016c6:	4620      	mov	r0, r4
 80016c8:	4a46      	ldr	r2, [pc, #280]	@ (80017e4 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1d0>)
 80016ca:	f106 0118 	add.w	r1, r6, #24
 80016ce:	f7ff fec1 	bl	8001454 <_ZN20HardwareMJPEGDecoder7compareEmPKcm>
 80016d2:	2800      	cmp	r0, #0
 80016d4:	d03f      	beq.n	8001756 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x142>
        lastError = AVI_ERROR_AVI_AVIH_NOT_FOUND;
 80016d6:	2307      	movs	r3, #7
 80016d8:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
    uint32_t listOffset = aviListOffset + aviListSize + 8;
 80016dc:	4445      	add	r5, r8
    readData(listOffset, 12);
 80016de:	220c      	movs	r2, #12
 80016e0:	4629      	mov	r1, r5
 80016e2:	4620      	mov	r0, r4
 80016e4:	f7ff fef4 	bl	80014d0 <_ZN20HardwareMJPEGDecoder8readDataEmm>
    while (compare(listOffset + 8, "movi", 4) && (lastError == AVI_NO_ERROR) && listOffset < movieLength)
 80016e8:	4f3f      	ldr	r7, [pc, #252]	@ (80017e8 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1d4>)
 80016ea:	f105 0608 	add.w	r6, r5, #8
 80016ee:	2304      	movs	r3, #4
 80016f0:	463a      	mov	r2, r7
 80016f2:	4631      	mov	r1, r6
 80016f4:	4620      	mov	r0, r4
 80016f6:	f7ff fead 	bl	8001454 <_ZN20HardwareMJPEGDecoder7compareEmPKcm>
 80016fa:	f894 3040 	ldrb.w	r3, [r4, #64]	@ 0x40
 80016fe:	2800      	cmp	r0, #0
 8001700:	d048      	beq.n	8001794 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x180>
 8001702:	2b00      	cmp	r3, #0
 8001704:	d148      	bne.n	8001798 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x184>
 8001706:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
 8001708:	42ab      	cmp	r3, r5
 800170a:	d849      	bhi.n	80017a0 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x18c>
    currentMovieOffset = listOffset + 8 + 4; /* skip LIST and 'movi' */
 800170c:	f105 030c 	add.w	r3, r5, #12
    lastFrameEnd = listOffset + 8 + getU32(listOffset + 4);
 8001710:	3504      	adds	r5, #4
    currentMovieOffset = listOffset + 8 + 4; /* skip LIST and 'movi' */
 8001712:	61a3      	str	r3, [r4, #24]
    lastFrameEnd = listOffset + 8 + getU32(listOffset + 4);
 8001714:	4629      	mov	r1, r5
 8001716:	4620      	mov	r0, r4
 8001718:	f7ff feac 	bl	8001474 <_ZN20HardwareMJPEGDecoder6getU32Em>
 800171c:	4430      	add	r0, r6
    const uint32_t listSize = getU32(listOffset + 4) + 8;
 800171e:	4629      	mov	r1, r5
    lastFrameEnd = listOffset + 8 + getU32(listOffset + 4);
 8001720:	6260      	str	r0, [r4, #36]	@ 0x24
    const uint32_t listSize = getU32(listOffset + 4) + 8;
 8001722:	4620      	mov	r0, r4
 8001724:	f7ff fea6 	bl	8001474 <_ZN20HardwareMJPEGDecoder6getU32Em>
    listOffset += listSize;
 8001728:	4406      	add	r6, r0
    readData(listOffset, 4);
 800172a:	2204      	movs	r2, #4
 800172c:	4631      	mov	r1, r6
 800172e:	4620      	mov	r0, r4
 8001730:	f7ff fece 	bl	80014d0 <_ZN20HardwareMJPEGDecoder8readDataEmm>
    if (!compare(listOffset, "idx1", 4))
 8001734:	2304      	movs	r3, #4
 8001736:	4631      	mov	r1, r6
 8001738:	4620      	mov	r0, r4
 800173a:	4a2c      	ldr	r2, [pc, #176]	@ (80017ec <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1d8>)
 800173c:	f7ff fe8a 	bl	8001454 <_ZN20HardwareMJPEGDecoder7compareEmPKcm>
 8001740:	2800      	cmp	r0, #0
 8001742:	d138      	bne.n	80017b6 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1a2>
    frameNumber = 1; /* next frame number is 1 */
 8001744:	2301      	movs	r3, #1
 8001746:	6163      	str	r3, [r4, #20]
    firstFrameOffset = currentMovieOffset;
 8001748:	69a3      	ldr	r3, [r4, #24]
        indexOffset = listOffset;
 800174a:	61e6      	str	r6, [r4, #28]
    firstFrameOffset = currentMovieOffset;
 800174c:	6223      	str	r3, [r4, #32]
}
 800174e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    bool foundFrame = true;
 8001752:	2701      	movs	r7, #1
 8001754:	e7b6      	b.n	80016c4 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0xb0>
    if (foundFrame)
 8001756:	2f00      	cmp	r7, #0
 8001758:	d0c0      	beq.n	80016dc <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0xc8>
        videoInfo.ms_between_frames = getU32(offset) / 1000;
 800175a:	f106 0120 	add.w	r1, r6, #32
 800175e:	4620      	mov	r0, r4
 8001760:	f7ff fe88 	bl	8001474 <_ZN20HardwareMJPEGDecoder6getU32Em>
 8001764:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 8001768:	fbb0 f0f3 	udiv	r0, r0, r3
        videoInfo.number_of_frames = getU32(offset + 16);
 800176c:	f106 0130 	add.w	r1, r6, #48	@ 0x30
        videoInfo.ms_between_frames = getU32(offset) / 1000;
 8001770:	6060      	str	r0, [r4, #4]
        videoInfo.number_of_frames = getU32(offset + 16);
 8001772:	4620      	mov	r0, r4
 8001774:	f7ff fe7e 	bl	8001474 <_ZN20HardwareMJPEGDecoder6getU32Em>
        videoInfo.frame_width = getU32(offset + 32);
 8001778:	f106 0140 	add.w	r1, r6, #64	@ 0x40
        videoInfo.number_of_frames = getU32(offset + 16);
 800177c:	60a0      	str	r0, [r4, #8]
        videoInfo.frame_width = getU32(offset + 32);
 800177e:	4620      	mov	r0, r4
 8001780:	f7ff fe78 	bl	8001474 <_ZN20HardwareMJPEGDecoder6getU32Em>
        videoInfo.frame_height = getU32(offset + 36);
 8001784:	f106 0144 	add.w	r1, r6, #68	@ 0x44
        videoInfo.frame_width = getU32(offset + 32);
 8001788:	60e0      	str	r0, [r4, #12]
        videoInfo.frame_height = getU32(offset + 36);
 800178a:	4620      	mov	r0, r4
 800178c:	f7ff fe72 	bl	8001474 <_ZN20HardwareMJPEGDecoder6getU32Em>
 8001790:	6120      	str	r0, [r4, #16]
 8001792:	e7a3      	b.n	80016dc <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0xc8>
    if (lastError != AVI_NO_ERROR)
 8001794:	2b00      	cmp	r3, #0
 8001796:	d0b9      	beq.n	800170c <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0xf8>
        lastError = AVI_ERROR_MOVI_NOT_FOUND;
 8001798:	230a      	movs	r3, #10
        lastError = AVI_ERROR_IDX1_NOT_FOUND;
 800179a:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
        return;
 800179e:	e7d6      	b.n	800174e <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x13a>
        const uint32_t listSize = getU32(listOffset + 4) + 8;
 80017a0:	1d29      	adds	r1, r5, #4
 80017a2:	4620      	mov	r0, r4
 80017a4:	f7ff fe66 	bl	8001474 <_ZN20HardwareMJPEGDecoder6getU32Em>
        listOffset += listSize;
 80017a8:	1985      	adds	r5, r0, r6
        readData(listOffset, 12);
 80017aa:	220c      	movs	r2, #12
 80017ac:	4629      	mov	r1, r5
 80017ae:	4620      	mov	r0, r4
 80017b0:	f7ff fe8e 	bl	80014d0 <_ZN20HardwareMJPEGDecoder8readDataEmm>
 80017b4:	e799      	b.n	80016ea <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0xd6>
        lastError = AVI_ERROR_IDX1_NOT_FOUND;
 80017b6:	230b      	movs	r3, #11
 80017b8:	e7ef      	b.n	800179a <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x186>
 80017ba:	bf00      	nop
 80017bc:	08033d85 	.word	0x08033d85
 80017c0:	08033da3 	.word	0x08033da3
 80017c4:	08033d8a 	.word	0x08033d8a
 80017c8:	08033c4b 	.word	0x08033c4b
 80017cc:	08033dd0 	.word	0x08033dd0
 80017d0:	08033dd5 	.word	0x08033dd5
 80017d4:	08033ded 	.word	0x08033ded
 80017d8:	08033df2 	.word	0x08033df2
 80017dc:	08033e08 	.word	0x08033e08
 80017e0:	08033e14 	.word	0x08033e14
 80017e4:	08033e19 	.word	0x08033e19
 80017e8:	08033e1e 	.word	0x08033e1e
 80017ec:	08033e23 	.word	0x08033e23

080017f0 <_ZN20HardwareMJPEGDecoder12setVideoDataEPKhm>:
    movieLength = length;
 80017f0:	e9c0 210a 	strd	r2, r1, [r0, #40]	@ 0x28
    reader = 0; /* not using reader */
 80017f4:	2200      	movs	r2, #0
 80017f6:	6302      	str	r2, [r0, #48]	@ 0x30
    readVideoHeader();
 80017f8:	f7ff bf0c 	b.w	8001614 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv>

080017fc <_ZN20HardwareMJPEGDecoder12setVideoDataERN8touchgfx15VideoDataReaderE>:
{
 80017fc:	b510      	push	{r4, lr}
    movieData = 0;
 80017fe:	2300      	movs	r3, #0
{
 8001800:	4604      	mov	r4, r0
    movieData = 0;
 8001802:	62e3      	str	r3, [r4, #44]	@ 0x2c
    movieLength = reader.getDataLength();
 8001804:	680b      	ldr	r3, [r1, #0]
    this->reader = &reader;
 8001806:	6321      	str	r1, [r4, #48]	@ 0x30
{
 8001808:	4608      	mov	r0, r1
    movieLength = reader.getDataLength();
 800180a:	689b      	ldr	r3, [r3, #8]
 800180c:	4798      	blx	r3
 800180e:	62a0      	str	r0, [r4, #40]	@ 0x28
    readVideoHeader();
 8001810:	4620      	mov	r0, r4
}
 8001812:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    readVideoHeader();
 8001816:	f7ff befd 	b.w	8001614 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv>
	...

0800181c <JPEG_Decode_DMA>:
     * @param  JPEGImageSize_Bytes    : jpg image size in bytes.
     * @param  DestAddress : ARGB8888 destination Frame Buffer Address.
     * @retval None
     */
    uint32_t JPEG_Decode_DMA(JPEG_HandleTypeDef* hjpeg, uint8_t* input, uint32_t chunkSizeIn /* length */, uint8_t* output)
    {
 800181c:	b573      	push	{r0, r1, r4, r5, r6, lr}
        FrameBufferAddress = output;
 800181e:	4c1d      	ldr	r4, [pc, #116]	@ (8001894 <JPEG_Decode_DMA+0x78>)
        JPEG_output_is_paused = 0;
        JPEG_OUT_Read_BufferIndex = 0;
        JPEG_OUT_Write_BufferIndex = 0;
 8001820:	4e1d      	ldr	r6, [pc, #116]	@ (8001898 <JPEG_Decode_DMA+0x7c>)
        FrameBufferAddress = output;
 8001822:	6023      	str	r3, [r4, #0]
        JPEG_output_is_paused = 0;
 8001824:	2400      	movs	r4, #0
 8001826:	4b1d      	ldr	r3, [pc, #116]	@ (800189c <JPEG_Decode_DMA+0x80>)
            Jpeg_OUT_BufferTab[i].DoCropping = false;
            Jpeg_OUT_BufferTab[i].FirstJob = false;
            Jpeg_OUT_BufferTab[i].LastJob = false;
        }
        Jpeg_OUT_BufferTab[0].FirstJob = true;
        if (JPEG_ConvertorParams.firstRowOffset != 0)
 8001828:	4d1d      	ldr	r5, [pc, #116]	@ (80018a0 <JPEG_Decode_DMA+0x84>)
        JPEG_output_is_paused = 0;
 800182a:	601c      	str	r4, [r3, #0]
        JPEG_OUT_Read_BufferIndex = 0;
 800182c:	4b1d      	ldr	r3, [pc, #116]	@ (80018a4 <JPEG_Decode_DMA+0x88>)
 800182e:	601c      	str	r4, [r3, #0]
        JPEG_InputImageIndex = 0;
 8001830:	4b1d      	ldr	r3, [pc, #116]	@ (80018a8 <JPEG_Decode_DMA+0x8c>)
        JPEG_OUT_Write_BufferIndex = 0;
 8001832:	6034      	str	r4, [r6, #0]
        JPEG_InputImageIndex = 0;
 8001834:	601c      	str	r4, [r3, #0]
        JPEG_InputImageAddress = (uint32_t)input;
 8001836:	4b1d      	ldr	r3, [pc, #116]	@ (80018ac <JPEG_Decode_DMA+0x90>)
 8001838:	6019      	str	r1, [r3, #0]
        JPEG_InputImageSize_Bytes = chunkSizeIn;
 800183a:	4b1d      	ldr	r3, [pc, #116]	@ (80018b0 <JPEG_Decode_DMA+0x94>)
 800183c:	601a      	str	r2, [r3, #0]
        Jpeg_OUT_BufferTab[0].FirstJob = true;
 800183e:	2201      	movs	r2, #1
        MCU_BlockIndex = 0;
 8001840:	4b1c      	ldr	r3, [pc, #112]	@ (80018b4 <JPEG_Decode_DMA+0x98>)
 8001842:	601c      	str	r4, [r3, #0]
        line_count = 0;
 8001844:	4b1c      	ldr	r3, [pc, #112]	@ (80018b8 <JPEG_Decode_DMA+0x9c>)
 8001846:	601c      	str	r4, [r3, #0]
            Jpeg_OUT_BufferTab[i].State = JPEG_BUFFER_EMPTY;
 8001848:	4b1c      	ldr	r3, [pc, #112]	@ (80018bc <JPEG_Decode_DMA+0xa0>)
        Jpeg_OUT_BufferTab[0].FirstJob = true;
 800184a:	765a      	strb	r2, [r3, #25]
        if (JPEG_ConvertorParams.firstRowOffset != 0)
 800184c:	6b6a      	ldr	r2, [r5, #52]	@ 0x34
            Jpeg_OUT_BufferTab[i].MCU_index = 0;
 800184e:	e9c3 4402 	strd	r4, r4, [r3, #8]
        if (JPEG_ConvertorParams.firstRowOffset != 0)
 8001852:	1b12      	subs	r2, r2, r4
 8001854:	bf18      	it	ne
 8001856:	2201      	movne	r2, #1
 8001858:	761a      	strb	r2, [r3, #24]
        {
            Jpeg_OUT_BufferTab[0].DoCropping = true;
        }

        /* Do not return from this function until done with decoding all chunks. */
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
 800185a:	6832      	ldr	r2, [r6, #0]
 800185c:	261c      	movs	r6, #28
            Jpeg_OUT_BufferTab[i].OutputBuffer = NULL;
 800185e:	e9c3 4404 	strd	r4, r4, [r3, #16]
            Jpeg_OUT_BufferTab[i].MCU_index = 0;
 8001862:	e9c3 4409 	strd	r4, r4, [r3, #36]	@ 0x24
            Jpeg_OUT_BufferTab[i].OutputBuffer = NULL;
 8001866:	e9c3 440b 	strd	r4, r4, [r3, #44]	@ 0x2c
            Jpeg_OUT_BufferTab[i].State = JPEG_BUFFER_EMPTY;
 800186a:	701c      	strb	r4, [r3, #0]
            Jpeg_OUT_BufferTab[i].LastJob = false;
 800186c:	769c      	strb	r4, [r3, #26]
            Jpeg_OUT_BufferTab[i].State = JPEG_BUFFER_EMPTY;
 800186e:	771c      	strb	r4, [r3, #28]
            Jpeg_OUT_BufferTab[i].DoCropping = false;
 8001870:	869c      	strh	r4, [r3, #52]	@ 0x34
            Jpeg_OUT_BufferTab[i].LastJob = false;
 8001872:	f883 4036 	strb.w	r4, [r3, #54]	@ 0x36
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
 8001876:	fb06 3302 	mla	r3, r6, r2, r3
 800187a:	68ea      	ldr	r2, [r5, #12]
 800187c:	f44f 75c0 	mov.w	r5, #384	@ 0x180
 8001880:	436a      	muls	r2, r5
 8001882:	9200      	str	r2, [sp, #0]
 8001884:	685b      	ldr	r3, [r3, #4]
 8001886:	f44f 4250 	mov.w	r2, #53248	@ 0xd000
 800188a:	f004 f9cb 	bl	8005c24 <HAL_JPEG_Decode_DMA>

        return 0;
    }
 800188e:	4620      	mov	r0, r4
 8001890:	b002      	add	sp, #8
 8001892:	bd70      	pop	{r4, r5, r6, pc}
 8001894:	20009f34 	.word	0x20009f34
 8001898:	20009f14 	.word	0x20009f14
 800189c:	20009f20 	.word	0x20009f20
 80018a0:	200006bc 	.word	0x200006bc
 80018a4:	20000700 	.word	0x20000700
 80018a8:	20009f30 	.word	0x20009f30
 80018ac:	20009f28 	.word	0x20009f28
 80018b0:	20009f2c 	.word	0x20009f2c
 80018b4:	20000708 	.word	0x20000708
 80018b8:	20009f10 	.word	0x20009f10
 80018bc:	20000004 	.word	0x20000004

080018c0 <HAL_JPEG_InfoReadyCallback>:
     */
    void HAL_JPEG_InfoReadyCallback(JPEG_HandleTypeDef* hjpeg, JPEG_ConfTypeDef* pInfo)
    {
        uint32_t hMCU, vMCU;

        if (pInfo->ChromaSubsampling == JPEG_420_SUBSAMPLING)
 80018c0:	684b      	ldr	r3, [r1, #4]
 80018c2:	2b01      	cmp	r3, #1
 80018c4:	d10e      	bne.n	80018e4 <HAL_JPEG_InfoReadyCallback+0x24>
        {
            if ((pInfo->ImageWidth % 16) != 0)
 80018c6:	68cb      	ldr	r3, [r1, #12]
 80018c8:	071a      	lsls	r2, r3, #28
            {
                pInfo->ImageWidth += (16 - (pInfo->ImageWidth % 16));
 80018ca:	bf1e      	ittt	ne
 80018cc:	f023 030f 	bicne.w	r3, r3, #15
 80018d0:	3310      	addne	r3, #16
 80018d2:	60cb      	strne	r3, [r1, #12]
            }

            if ((pInfo->ImageHeight % 16) != 0)
 80018d4:	688b      	ldr	r3, [r1, #8]
 80018d6:	0718      	lsls	r0, r3, #28
 80018d8:	d003      	beq.n	80018e2 <HAL_JPEG_InfoReadyCallback+0x22>
            {
                pInfo->ImageHeight += (16 - (pInfo->ImageHeight % 16));
 80018da:	f023 030f 	bic.w	r3, r3, #15
 80018de:	3310      	adds	r3, #16
                    pInfo->ImageWidth += (8 - (pInfo->ImageWidth % 8));
                }

                if ((pInfo->ImageHeight % 8) != 0)
                {
                    pInfo->ImageHeight += (8 - (pInfo->ImageHeight % 8));
 80018e0:	608b      	str	r3, [r1, #8]
                }
            }
        }
    }
 80018e2:	4770      	bx	lr
            if (pInfo->ChromaSubsampling == JPEG_422_SUBSAMPLING)
 80018e4:	2b02      	cmp	r3, #2
 80018e6:	d10d      	bne.n	8001904 <HAL_JPEG_InfoReadyCallback+0x44>
                if ((pInfo->ImageWidth % 16) != 0)
 80018e8:	68cb      	ldr	r3, [r1, #12]
 80018ea:	071a      	lsls	r2, r3, #28
 80018ec:	d003      	beq.n	80018f6 <HAL_JPEG_InfoReadyCallback+0x36>
                    pInfo->ImageWidth += (16 - (pInfo->ImageWidth % 16));
 80018ee:	f023 030f 	bic.w	r3, r3, #15
 80018f2:	3310      	adds	r3, #16
                    pInfo->ImageWidth += (8 - (pInfo->ImageWidth % 8));
 80018f4:	60cb      	str	r3, [r1, #12]
                if ((pInfo->ImageHeight % 8) != 0)
 80018f6:	688b      	ldr	r3, [r1, #8]
 80018f8:	075a      	lsls	r2, r3, #29
 80018fa:	d0f2      	beq.n	80018e2 <HAL_JPEG_InfoReadyCallback+0x22>
                    pInfo->ImageHeight += (8 - (pInfo->ImageHeight % 8));
 80018fc:	f023 0307 	bic.w	r3, r3, #7
 8001900:	3308      	adds	r3, #8
 8001902:	e7ed      	b.n	80018e0 <HAL_JPEG_InfoReadyCallback+0x20>
            if (pInfo->ChromaSubsampling == JPEG_444_SUBSAMPLING)
 8001904:	2b00      	cmp	r3, #0
 8001906:	d1ec      	bne.n	80018e2 <HAL_JPEG_InfoReadyCallback+0x22>
                if ((pInfo->ImageWidth % 8) != 0)
 8001908:	68cb      	ldr	r3, [r1, #12]
 800190a:	0758      	lsls	r0, r3, #29
 800190c:	d0f3      	beq.n	80018f6 <HAL_JPEG_InfoReadyCallback+0x36>
                    pInfo->ImageWidth += (8 - (pInfo->ImageWidth % 8));
 800190e:	f023 0307 	bic.w	r3, r3, #7
 8001912:	3308      	adds	r3, #8
 8001914:	e7ee      	b.n	80018f4 <HAL_JPEG_InfoReadyCallback+0x34>
	...

08001918 <HAL_JPEG_GetDataCallback>:
     * @retval None
     */
    void HAL_JPEG_GetDataCallback(JPEG_HandleTypeDef* hjpeg, uint32_t NbDecodedData)
    {
        /* Input buffer has been consumed by the peripheral and to ask for a new data chunk if the operation (encoding/decoding) has not been complete yet. */
        JPEG_InputImageIndex += NbDecodedData;
 8001918:	4a0b      	ldr	r2, [pc, #44]	@ (8001948 <HAL_JPEG_GetDataCallback+0x30>)
    {
 800191a:	b430      	push	{r4, r5}
        JPEG_InputImageIndex += NbDecodedData;
 800191c:	6813      	ldr	r3, [r2, #0]
 800191e:	440b      	add	r3, r1
 8001920:	6013      	str	r3, [r2, #0]
        if (JPEG_InputImageIndex < JPEG_InputImageSize_Bytes)
 8001922:	4a0a      	ldr	r2, [pc, #40]	@ (800194c <HAL_JPEG_GetDataCallback+0x34>)
 8001924:	6812      	ldr	r2, [r2, #0]
 8001926:	4293      	cmp	r3, r2
 8001928:	d20c      	bcs.n	8001944 <HAL_JPEG_GetDataCallback+0x2c>
        {
            JPEG_InputImageAddress = JPEG_InputImageAddress + NbDecodedData;
 800192a:	4c09      	ldr	r4, [pc, #36]	@ (8001950 <HAL_JPEG_GetDataCallback+0x38>)
            uint32_t inDataLength = JPEG_InputImageSize_Bytes - JPEG_InputImageIndex;
 800192c:	1ad2      	subs	r2, r2, r3
            JPEG_InputImageAddress = JPEG_InputImageAddress + NbDecodedData;
 800192e:	6825      	ldr	r5, [r4, #0]
            HAL_JPEG_ConfigInputBuffer(hjpeg, (uint8_t*)JPEG_InputImageAddress, inDataLength >= CHUNK_SIZE_IN ? CHUNK_SIZE_IN : inDataLength);
 8001930:	f5b2 4f50 	cmp.w	r2, #53248	@ 0xd000
            JPEG_InputImageAddress = JPEG_InputImageAddress + NbDecodedData;
 8001934:	4429      	add	r1, r5
 8001936:	6021      	str	r1, [r4, #0]
            HAL_JPEG_ConfigInputBuffer(hjpeg, (uint8_t*)JPEG_InputImageAddress, inDataLength >= CHUNK_SIZE_IN ? CHUNK_SIZE_IN : inDataLength);
 8001938:	bf28      	it	cs
 800193a:	f44f 4250 	movcs.w	r2, #53248	@ 0xd000
        }
    }
 800193e:	bc30      	pop	{r4, r5}
            HAL_JPEG_ConfigInputBuffer(hjpeg, (uint8_t*)JPEG_InputImageAddress, inDataLength >= CHUNK_SIZE_IN ? CHUNK_SIZE_IN : inDataLength);
 8001940:	f004 b9d7 	b.w	8005cf2 <HAL_JPEG_ConfigInputBuffer>
    }
 8001944:	bc30      	pop	{r4, r5}
 8001946:	4770      	bx	lr
 8001948:	20009f30 	.word	0x20009f30
 800194c:	20009f2c 	.word	0x20009f2c
 8001950:	20009f28 	.word	0x20009f28

08001954 <HAL_JPEG_DataReadyCallback>:
     * @param pDataOut: pointer to the output data buffer
     * @param OutDataLength: length of output buffer in bytes
     * @retval None
     */
    void HAL_JPEG_DataReadyCallback(JPEG_HandleTypeDef* hjpeg, uint8_t* pDataOut, uint32_t OutDataLength)
    {
 8001954:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
        line_count += MCU_HEIGHT_PIXELS;
 8001958:	f8df 8130 	ldr.w	r8, [pc, #304]	@ 8001a8c <HAL_JPEG_DataReadyCallback+0x138>

        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].OutputBuffer = FrameBufferAddress;
 800195c:	4c43      	ldr	r4, [pc, #268]	@ (8001a6c <HAL_JPEG_DataReadyCallback+0x118>)
        line_count += MCU_HEIGHT_PIXELS;
 800195e:	f8d8 3000 	ldr.w	r3, [r8]
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].OutputBuffer = FrameBufferAddress;
 8001962:	4d43      	ldr	r5, [pc, #268]	@ (8001a70 <HAL_JPEG_DataReadyCallback+0x11c>)
        line_count += MCU_HEIGHT_PIXELS;
 8001964:	3310      	adds	r3, #16
 8001966:	f8c8 3000 	str.w	r3, [r8]
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].OutputBuffer = FrameBufferAddress;
 800196a:	231c      	movs	r3, #28
 800196c:	6821      	ldr	r1, [r4, #0]
 800196e:	f8df e120 	ldr.w	lr, [pc, #288]	@ 8001a90 <HAL_JPEG_DataReadyCallback+0x13c>
 8001972:	fb03 5101 	mla	r1, r3, r1, r5
 8001976:	f8de 9000 	ldr.w	r9, [lr]

        /* Increment framebuffer */
        FrameBufferAddress += FrameBufferWidth * MCU_HEIGHT_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel;
 800197a:	4e3e      	ldr	r6, [pc, #248]	@ (8001a74 <HAL_JPEG_DataReadyCallback+0x120>)
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].OutputBuffer = FrameBufferAddress;
 800197c:	f8c1 9014 	str.w	r9, [r1, #20]
        FrameBufferAddress += FrameBufferWidth * MCU_HEIGHT_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel;
 8001980:	493d      	ldr	r1, [pc, #244]	@ (8001a78 <HAL_JPEG_DataReadyCallback+0x124>)
    {
 8001982:	4694      	mov	ip, r2
        FrameBufferAddress += FrameBufferWidth * MCU_HEIGHT_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel;
 8001984:	6809      	ldr	r1, [r1, #0]
 8001986:	6932      	ldr	r2, [r6, #16]
    {
 8001988:	4607      	mov	r7, r0
        FrameBufferAddress += FrameBufferWidth * MCU_HEIGHT_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel;
 800198a:	4351      	muls	r1, r2
 800198c:	eb09 1101 	add.w	r1, r9, r1, lsl #4

        /* Decode until we reach area to draw */
        if (line_count <= JPEG_ConvertorParams.startY)
 8001990:	f8d8 2000 	ldr.w	r2, [r8]
        FrameBufferAddress += FrameBufferWidth * MCU_HEIGHT_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel;
 8001994:	f8ce 1000 	str.w	r1, [lr]
        if (line_count <= JPEG_ConvertorParams.startY)
 8001998:	6971      	ldr	r1, [r6, #20]
 800199a:	4291      	cmp	r1, r2
 800199c:	d30b      	bcc.n	80019b6 <HAL_JPEG_DataReadyCallback+0x62>
        {
            HAL_JPEG_ConfigOutputBuffer(hjpeg, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
 800199e:	6821      	ldr	r1, [r4, #0]
 80019a0:	68f2      	ldr	r2, [r6, #12]
 80019a2:	fb03 5301 	mla	r3, r3, r1, r5
 80019a6:	f44f 71c0 	mov.w	r1, #384	@ 0x180
 80019aa:	434a      	muls	r2, r1
 80019ac:	6859      	ldr	r1, [r3, #4]
        /* Signal Hardware Decoding to wake up */
        if (!DMA2D_reference->isDMARunning())
        {
            SEM_POST(semDecodingDone);
        }
    }
 80019ae:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
            HAL_JPEG_ConfigOutputBuffer(hjpeg, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
 80019b2:	f004 b9a1 	b.w	8005cf8 <HAL_JPEG_ConfigOutputBuffer>
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State = JPEG_BUFFER_FULL;
 80019b6:	6822      	ldr	r2, [r4, #0]
 80019b8:	2001      	movs	r0, #1
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBufferSize = OutDataLength;
 80019ba:	6821      	ldr	r1, [r4, #0]
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State = JPEG_BUFFER_FULL;
 80019bc:	435a      	muls	r2, r3
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBufferSize = OutDataLength;
 80019be:	fb03 5101 	mla	r1, r3, r1, r5
 80019c2:	f8c1 c008 	str.w	ip, [r1, #8]
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].MCU_drawn = 0;
 80019c6:	2100      	movs	r1, #0
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State = JPEG_BUFFER_FULL;
 80019c8:	54a8      	strb	r0, [r5, r2]
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].MCU_drawn = 0;
 80019ca:	6822      	ldr	r2, [r4, #0]
 80019cc:	fb03 5202 	mla	r2, r3, r2, r5
 80019d0:	6111      	str	r1, [r2, #16]
        if (JPEG_ConvertorParams.firstColOffset != 0)
 80019d2:	6b32      	ldr	r2, [r6, #48]	@ 0x30
 80019d4:	b11a      	cbz	r2, 80019de <HAL_JPEG_DataReadyCallback+0x8a>
            Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DoCropping = true;
 80019d6:	6822      	ldr	r2, [r4, #0]
 80019d8:	fb03 5302 	mla	r3, r3, r2, r5
 80019dc:	7618      	strb	r0, [r3, #24]
        if (line_count < JPEG_ConvertorParams.endY)
 80019de:	f8d8 3000 	ldr.w	r3, [r8]
 80019e2:	69b2      	ldr	r2, [r6, #24]
 80019e4:	429a      	cmp	r2, r3
 80019e6:	d924      	bls.n	8001a32 <HAL_JPEG_DataReadyCallback+0xde>
            Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].LastJob = false;
 80019e8:	221c      	movs	r2, #28
 80019ea:	6823      	ldr	r3, [r4, #0]
 80019ec:	fb02 5303 	mla	r3, r2, r3, r5
 80019f0:	2200      	movs	r2, #0
 80019f2:	769a      	strb	r2, [r3, #26]
            JPEG_OUT_Write_BufferIndex++;
 80019f4:	6823      	ldr	r3, [r4, #0]
 80019f6:	3301      	adds	r3, #1
 80019f8:	6023      	str	r3, [r4, #0]
            if (JPEG_OUT_Write_BufferIndex >= NB_OUTPUT_DATA_BUFFERS)
 80019fa:	6823      	ldr	r3, [r4, #0]
 80019fc:	2b01      	cmp	r3, #1
                JPEG_OUT_Write_BufferIndex = 0;
 80019fe:	bf88      	it	hi
 8001a00:	6022      	strhi	r2, [r4, #0]
            if (Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State != JPEG_BUFFER_EMPTY)
 8001a02:	221c      	movs	r2, #28
 8001a04:	6823      	ldr	r3, [r4, #0]
 8001a06:	4353      	muls	r3, r2
 8001a08:	5ceb      	ldrb	r3, [r5, r3]
 8001a0a:	b133      	cbz	r3, 8001a1a <HAL_JPEG_DataReadyCallback+0xc6>
                HAL_JPEG_Pause(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
 8001a0c:	2102      	movs	r1, #2
 8001a0e:	4638      	mov	r0, r7
 8001a10:	f004 f93c 	bl	8005c8c <HAL_JPEG_Pause>
                JPEG_output_is_paused = 1;
 8001a14:	2201      	movs	r2, #1
 8001a16:	4b19      	ldr	r3, [pc, #100]	@ (8001a7c <HAL_JPEG_DataReadyCallback+0x128>)
 8001a18:	601a      	str	r2, [r3, #0]
            HAL_JPEG_ConfigOutputBuffer(hjpeg, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
 8001a1a:	211c      	movs	r1, #28
 8001a1c:	6823      	ldr	r3, [r4, #0]
 8001a1e:	68f2      	ldr	r2, [r6, #12]
 8001a20:	fb01 5303 	mla	r3, r1, r3, r5
 8001a24:	f44f 71c0 	mov.w	r1, #384	@ 0x180
 8001a28:	4638      	mov	r0, r7
 8001a2a:	434a      	muls	r2, r1
 8001a2c:	6859      	ldr	r1, [r3, #4]
 8001a2e:	f004 f963 	bl	8005cf8 <HAL_JPEG_ConfigOutputBuffer>
        if (line_count >= JPEG_ConvertorParams.endY)
 8001a32:	f8d8 3000 	ldr.w	r3, [r8]
 8001a36:	69b2      	ldr	r2, [r6, #24]
 8001a38:	429a      	cmp	r2, r3
 8001a3a:	d80b      	bhi.n	8001a54 <HAL_JPEG_DataReadyCallback+0x100>
            Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].LastJob = true;
 8001a3c:	221c      	movs	r2, #28
 8001a3e:	6823      	ldr	r3, [r4, #0]
            HAL_JPEG_Pause(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
 8001a40:	2102      	movs	r1, #2
            Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].LastJob = true;
 8001a42:	fb02 5503 	mla	r5, r2, r3, r5
 8001a46:	2301      	movs	r3, #1
            Jpeg_HWDecodingEnd = 1;
 8001a48:	4a0d      	ldr	r2, [pc, #52]	@ (8001a80 <HAL_JPEG_DataReadyCallback+0x12c>)
            HAL_JPEG_Pause(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
 8001a4a:	4638      	mov	r0, r7
            Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].LastJob = true;
 8001a4c:	76ab      	strb	r3, [r5, #26]
            Jpeg_HWDecodingEnd = 1;
 8001a4e:	6013      	str	r3, [r2, #0]
            HAL_JPEG_Pause(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
 8001a50:	f004 f91c 	bl	8005c8c <HAL_JPEG_Pause>
     *
     * @return true if a DMA operation is currently in progress.
     */
    bool isDMARunning()
    {
        return isRunning;
 8001a54:	4b0b      	ldr	r3, [pc, #44]	@ (8001a84 <HAL_JPEG_DataReadyCallback+0x130>)
 8001a56:	681b      	ldr	r3, [r3, #0]
        if (!DMA2D_reference->isDMARunning())
 8001a58:	7a1b      	ldrb	r3, [r3, #8]
 8001a5a:	b92b      	cbnz	r3, 8001a68 <HAL_JPEG_DataReadyCallback+0x114>
            SEM_POST(semDecodingDone);
 8001a5c:	4b0a      	ldr	r3, [pc, #40]	@ (8001a88 <HAL_JPEG_DataReadyCallback+0x134>)
 8001a5e:	6818      	ldr	r0, [r3, #0]
    }
 8001a60:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
            SEM_POST(semDecodingDone);
 8001a64:	f007 ba10 	b.w	8008e88 <osSemaphoreRelease>
    }
 8001a68:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8001a6c:	20009f14 	.word	0x20009f14
 8001a70:	20000004 	.word	0x20000004
 8001a74:	200006bc 	.word	0x200006bc
 8001a78:	20009f0c 	.word	0x20009f0c
 8001a7c:	20009f20 	.word	0x20009f20
 8001a80:	20009f24 	.word	0x20009f24
 8001a84:	20009f18 	.word	0x20009f18
 8001a88:	20000704 	.word	0x20000704
 8001a8c:	20009f10 	.word	0x20009f10
 8001a90:	20009f34 	.word	0x20009f34

08001a94 <HAL_JPEG_ErrorCallback>:
  __ASM volatile ("cpsid i" : : : "memory");
 8001a94:	b672      	cpsid	i
     * @retval None
     */
    void HAL_JPEG_ErrorCallback(JPEG_HandleTypeDef* hjpeg)
    {
        __disable_irq();
        while (1)
 8001a96:	e7fe      	b.n	8001a96 <HAL_JPEG_ErrorCallback+0x2>

08001a98 <HAL_JPEG_DecodeCpltCallback>:
     * @param hjpeg: JPEG handle pointer
     * @retval None
     */
    void HAL_JPEG_DecodeCpltCallback(JPEG_HandleTypeDef* hjpeg)
    {
        Jpeg_HWDecodingEnd = 1;
 8001a98:	2201      	movs	r2, #1
 8001a9a:	4b01      	ldr	r3, [pc, #4]	@ (8001aa0 <HAL_JPEG_DecodeCpltCallback+0x8>)
 8001a9c:	601a      	str	r2, [r3, #0]
    }
 8001a9e:	4770      	bx	lr
 8001aa0:	20009f24 	.word	0x20009f24

08001aa4 <JPEG_OutputHandler>:
 * @brief  JPEG Ouput Data BackGround Postprocessing .
 * @param hjpeg: JPEG handle pointer
 * @retval 1 : if JPEG processing has finished, 0 : if JPEG processing still ongoing
 */
uint32_t JPEG_OutputHandler(JPEG_HandleTypeDef* hjpeg)
{
 8001aa4:	b538      	push	{r3, r4, r5, lr}
    /* Decode frame complete */
    if (Jpeg_HWDecodingEnd && DMA2D_CopyBufferEnd)
 8001aa6:	4d1c      	ldr	r5, [pc, #112]	@ (8001b18 <JPEG_OutputHandler+0x74>)
{
 8001aa8:	4604      	mov	r4, r0
    if (Jpeg_HWDecodingEnd && DMA2D_CopyBufferEnd)
 8001aaa:	682b      	ldr	r3, [r5, #0]
 8001aac:	b15b      	cbz	r3, 8001ac6 <JPEG_OutputHandler+0x22>
 8001aae:	4b1b      	ldr	r3, [pc, #108]	@ (8001b1c <JPEG_OutputHandler+0x78>)
 8001ab0:	681b      	ldr	r3, [r3, #0]
 8001ab2:	b143      	cbz	r3, 8001ac6 <JPEG_OutputHandler+0x22>
    {
        /* Abort any ongoing operations */
        if (HAL_JPEG_GetState(hjpeg) == HAL_JPEG_STATE_BUSY_DECODING)
 8001ab4:	f004 fd02 	bl	80064bc <HAL_JPEG_GetState>
 8001ab8:	2804      	cmp	r0, #4
 8001aba:	d102      	bne.n	8001ac2 <JPEG_OutputHandler+0x1e>
        {
            HAL_JPEG_Abort(hjpeg);
 8001abc:	4620      	mov	r0, r4
 8001abe:	f004 f91e 	bl	8005cfe <HAL_JPEG_Abort>
        }
        return 1;
 8001ac2:	2001      	movs	r0, #1
        JPEG_output_is_paused = 0;
        HAL_JPEG_Resume(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
    }

    return 2;
}
 8001ac4:	bd38      	pop	{r3, r4, r5, pc}
    if (!DMA2D_reference->isDMARunning() && (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL) && (DMA2D_CopyBufferEnd == 0))
 8001ac6:	4b16      	ldr	r3, [pc, #88]	@ (8001b20 <JPEG_OutputHandler+0x7c>)
 8001ac8:	6818      	ldr	r0, [r3, #0]
 8001aca:	7a03      	ldrb	r3, [r0, #8]
 8001acc:	b96b      	cbnz	r3, 8001aea <JPEG_OutputHandler+0x46>
 8001ace:	221c      	movs	r2, #28
 8001ad0:	4b14      	ldr	r3, [pc, #80]	@ (8001b24 <JPEG_OutputHandler+0x80>)
 8001ad2:	681b      	ldr	r3, [r3, #0]
 8001ad4:	4353      	muls	r3, r2
 8001ad6:	4a14      	ldr	r2, [pc, #80]	@ (8001b28 <JPEG_OutputHandler+0x84>)
 8001ad8:	5cd3      	ldrb	r3, [r2, r3]
 8001ada:	2b01      	cmp	r3, #1
 8001adc:	d105      	bne.n	8001aea <JPEG_OutputHandler+0x46>
 8001ade:	4b0f      	ldr	r3, [pc, #60]	@ (8001b1c <JPEG_OutputHandler+0x78>)
 8001ae0:	681b      	ldr	r3, [r3, #0]
 8001ae2:	b913      	cbnz	r3, 8001aea <JPEG_OutputHandler+0x46>
        DMA2D_reference->start();
 8001ae4:	6803      	ldr	r3, [r0, #0]
 8001ae6:	691b      	ldr	r3, [r3, #16]
 8001ae8:	4798      	blx	r3
    if ((JPEG_output_is_paused == 1) && (Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State == JPEG_BUFFER_EMPTY) && (Jpeg_HWDecodingEnd == 0))
 8001aea:	4a10      	ldr	r2, [pc, #64]	@ (8001b2c <JPEG_OutputHandler+0x88>)
 8001aec:	6813      	ldr	r3, [r2, #0]
 8001aee:	2b01      	cmp	r3, #1
 8001af0:	d106      	bne.n	8001b00 <JPEG_OutputHandler+0x5c>
 8001af2:	211c      	movs	r1, #28
 8001af4:	4b0e      	ldr	r3, [pc, #56]	@ (8001b30 <JPEG_OutputHandler+0x8c>)
 8001af6:	681b      	ldr	r3, [r3, #0]
 8001af8:	434b      	muls	r3, r1
 8001afa:	490b      	ldr	r1, [pc, #44]	@ (8001b28 <JPEG_OutputHandler+0x84>)
 8001afc:	5ccb      	ldrb	r3, [r1, r3]
 8001afe:	b10b      	cbz	r3, 8001b04 <JPEG_OutputHandler+0x60>
    return 2;
 8001b00:	2002      	movs	r0, #2
 8001b02:	e7df      	b.n	8001ac4 <JPEG_OutputHandler+0x20>
    if ((JPEG_output_is_paused == 1) && (Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State == JPEG_BUFFER_EMPTY) && (Jpeg_HWDecodingEnd == 0))
 8001b04:	682b      	ldr	r3, [r5, #0]
 8001b06:	2b00      	cmp	r3, #0
 8001b08:	d1fa      	bne.n	8001b00 <JPEG_OutputHandler+0x5c>
        HAL_JPEG_Resume(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
 8001b0a:	2102      	movs	r1, #2
 8001b0c:	4620      	mov	r0, r4
        JPEG_output_is_paused = 0;
 8001b0e:	6013      	str	r3, [r2, #0]
        HAL_JPEG_Resume(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
 8001b10:	f004 fb80 	bl	8006214 <HAL_JPEG_Resume>
 8001b14:	e7f4      	b.n	8001b00 <JPEG_OutputHandler+0x5c>
 8001b16:	bf00      	nop
 8001b18:	20009f24 	.word	0x20009f24
 8001b1c:	200006fc 	.word	0x200006fc
 8001b20:	20009f18 	.word	0x20009f18
 8001b24:	20000700 	.word	0x20000700
 8001b28:	20000004 	.word	0x20000004
 8001b2c:	20009f20 	.word	0x20009f20
 8001b30:	20009f14 	.word	0x20009f14

08001b34 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm>:
{
 8001b34:	b570      	push	{r4, r5, r6, lr}
 8001b36:	4605      	mov	r5, r0
    if (length == 0)
 8001b38:	2a00      	cmp	r2, #0
 8001b3a:	d034      	beq.n	8001ba6 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm+0x72>
    if (outputBuffer) /* only decode if buffers are assigned. */
 8001b3c:	2b00      	cmp	r3, #0
 8001b3e:	d032      	beq.n	8001ba6 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm+0x72>
        JPEG_ConvertorParams.bytes_pr_pixel = 2;
 8001b40:	2402      	movs	r4, #2
 8001b42:	4819      	ldr	r0, [pc, #100]	@ (8001ba8 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm+0x74>)
 8001b44:	6104      	str	r4, [r0, #16]
        JPEG_ConvertorParams.WidthExtend = videoInfo.frame_width;
 8001b46:	68ec      	ldr	r4, [r5, #12]
        if ((JPEG_ConvertorParams.WidthExtend % 16) != 0)
 8001b48:	0726      	lsls	r6, r4, #28
        JPEG_ConvertorParams.ScaledWidth = 800 * JPEG_ConvertorParams.bytes_pr_pixel;
 8001b4a:	f44f 66c8 	mov.w	r6, #1600	@ 0x640
            JPEG_ConvertorParams.WidthExtend += 16 - (JPEG_ConvertorParams.WidthExtend % 16);
 8001b4e:	bf1c      	itt	ne
 8001b50:	f024 040f 	bicne.w	r4, r4, #15
 8001b54:	3410      	addne	r4, #16
        JPEG_ConvertorParams.WidthExtend = videoInfo.frame_width;
 8001b56:	6004      	str	r4, [r0, #0]
        JPEG_ConvertorParams.MCU_pr_line = JPEG_ConvertorParams.WidthExtend / MCU_WIDTH_PIXELS;
 8001b58:	0924      	lsrs	r4, r4, #4
 8001b5a:	60c4      	str	r4, [r0, #12]
        JPEG_ConvertorParams.LastLineHeight = (videoInfo.frame_height % MCU_HEIGHT_PIXELS) == 0 ? 0 : MCU_HEIGHT_PIXELS - (videoInfo.frame_height % MCU_HEIGHT_PIXELS);
 8001b5c:	692c      	ldr	r4, [r5, #16]
        JPEG_ConvertorParams.ScaledWidth = 800 * JPEG_ConvertorParams.bytes_pr_pixel;
 8001b5e:	6046      	str	r6, [r0, #4]
        JPEG_ConvertorParams.LastLineHeight = (videoInfo.frame_height % MCU_HEIGHT_PIXELS) == 0 ? 0 : MCU_HEIGHT_PIXELS - (videoInfo.frame_height % MCU_HEIGHT_PIXELS);
 8001b60:	f014 040f 	ands.w	r4, r4, #15
 8001b64:	bf18      	it	ne
 8001b66:	f1c4 0410 	rsbne	r4, r4, #16
 8001b6a:	6084      	str	r4, [r0, #8]
        JPEG_Decode_DMA(&hjpeg, const_cast<uint8_t*>(mjpgdata), length, outputBuffer);
 8001b6c:	480f      	ldr	r0, [pc, #60]	@ (8001bac <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm+0x78>)
 8001b6e:	f7ff fe55 	bl	800181c <JPEG_Decode_DMA>
        DMA2D_reference = dma;
 8001b72:	6c6a      	ldr	r2, [r5, #68]	@ 0x44
 8001b74:	4b0e      	ldr	r3, [pc, #56]	@ (8001bb0 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm+0x7c>)
            JpegProcessing_End = JPEG_OutputHandler(&hjpeg);
 8001b76:	4d0d      	ldr	r5, [pc, #52]	@ (8001bac <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm+0x78>)
 8001b78:	4c0e      	ldr	r4, [pc, #56]	@ (8001bb4 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm+0x80>)
        DMA2D_reference = dma;
 8001b7a:	601a      	str	r2, [r3, #0]
            JpegProcessing_End = JPEG_OutputHandler(&hjpeg);
 8001b7c:	4628      	mov	r0, r5
 8001b7e:	f7ff ff91 	bl	8001aa4 <JPEG_OutputHandler>
 8001b82:	6020      	str	r0, [r4, #0]
            if (JpegProcessing_End == 2)
 8001b84:	6823      	ldr	r3, [r4, #0]
 8001b86:	2b02      	cmp	r3, #2
 8001b88:	d105      	bne.n	8001b96 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm+0x62>
                SEM_WAIT(semDecodingDone);
 8001b8a:	4b0b      	ldr	r3, [pc, #44]	@ (8001bb8 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm+0x84>)
 8001b8c:	f04f 31ff 	mov.w	r1, #4294967295
 8001b90:	6818      	ldr	r0, [r3, #0]
 8001b92:	f007 f94b 	bl	8008e2c <osSemaphoreAcquire>
        } while (JpegProcessing_End != 1);
 8001b96:	6823      	ldr	r3, [r4, #0]
 8001b98:	2b01      	cmp	r3, #1
 8001b9a:	d1ef      	bne.n	8001b7c <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm+0x48>
        Jpeg_HWDecodingEnd = 0;
 8001b9c:	2300      	movs	r3, #0
 8001b9e:	4a07      	ldr	r2, [pc, #28]	@ (8001bbc <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm+0x88>)
 8001ba0:	6013      	str	r3, [r2, #0]
        DMA2D_CopyBufferEnd = 0;
 8001ba2:	4a07      	ldr	r2, [pc, #28]	@ (8001bc0 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm+0x8c>)
 8001ba4:	6013      	str	r3, [r2, #0]
}
 8001ba6:	bd70      	pop	{r4, r5, r6, pc}
 8001ba8:	200006bc 	.word	0x200006bc
 8001bac:	20000464 	.word	0x20000464
 8001bb0:	20009f18 	.word	0x20009f18
 8001bb4:	20009f1c 	.word	0x20009f1c
 8001bb8:	20000704 	.word	0x20000704
 8001bbc:	20009f24 	.word	0x20009f24
 8001bc0:	200006fc 	.word	0x200006fc

08001bc4 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm>:
{
 8001bc4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8001bc8:	4699      	mov	r9, r3
    assert((frameNumber > 0) && "HardwareMJPEGDecoder decoding without frame data!");
 8001bca:	6943      	ldr	r3, [r0, #20]
{
 8001bcc:	4604      	mov	r4, r0
 8001bce:	460f      	mov	r7, r1
 8001bd0:	4690      	mov	r8, r2
 8001bd2:	b085      	sub	sp, #20
    assert((frameNumber > 0) && "HardwareMJPEGDecoder decoding without frame data!");
 8001bd4:	b92b      	cbnz	r3, 8001be2 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x1e>
 8001bd6:	21c2      	movs	r1, #194	@ 0xc2
 8001bd8:	4b28      	ldr	r3, [pc, #160]	@ (8001c7c <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xb8>)
 8001bda:	4a29      	ldr	r2, [pc, #164]	@ (8001c80 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xbc>)
 8001bdc:	4829      	ldr	r0, [pc, #164]	@ (8001c84 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xc0>)
 8001bde:	f030 fdcb 	bl	8032778 <__assert_func>
    readData(currentMovieOffset, 8);
 8001be2:	2208      	movs	r2, #8
 8001be4:	6981      	ldr	r1, [r0, #24]
 8001be6:	f7ff fc73 	bl	80014d0 <_ZN20HardwareMJPEGDecoder8readDataEmm>
    uint32_t streamNo  = getU16(currentMovieOffset);
 8001bea:	69a6      	ldr	r6, [r4, #24]
 8001bec:	4620      	mov	r0, r4
 8001bee:	4631      	mov	r1, r6
 8001bf0:	f7ff fc5b 	bl	80014aa <_ZN20HardwareMJPEGDecoder6getU16Em>
    uint32_t chunkType = getU16(currentMovieOffset + 2);
 8001bf4:	1cb1      	adds	r1, r6, #2
    uint32_t streamNo  = getU16(currentMovieOffset);
 8001bf6:	4683      	mov	fp, r0
    uint32_t chunkType = getU16(currentMovieOffset + 2);
 8001bf8:	4620      	mov	r0, r4
 8001bfa:	f7ff fc56 	bl	80014aa <_ZN20HardwareMJPEGDecoder6getU16Em>
    uint32_t chunkSize = getU32(currentMovieOffset + 4);
 8001bfe:	1d31      	adds	r1, r6, #4
    uint32_t chunkType = getU16(currentMovieOffset + 2);
 8001c00:	4682      	mov	sl, r0
    uint32_t chunkSize = getU32(currentMovieOffset + 4);
 8001c02:	4620      	mov	r0, r4
 8001c04:	f7ff fc36 	bl	8001474 <_ZN20HardwareMJPEGDecoder6getU32Em>
    if (currentMovieOffset + 8 + chunkSize < movieLength)
 8001c08:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
 8001c0a:	f106 0108 	add.w	r1, r6, #8
 8001c0e:	1842      	adds	r2, r0, r1
 8001c10:	429a      	cmp	r2, r3
    uint32_t chunkSize = getU32(currentMovieOffset + 4);
 8001c12:	4605      	mov	r5, r0
    if (currentMovieOffset + 8 + chunkSize < movieLength)
 8001c14:	d226      	bcs.n	8001c64 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xa0>
        if (streamNo == STREAM0 && chunkType == TYPEDC && chunkSize > 0)
 8001c16:	f243 0330 	movw	r3, #12336	@ 0x3030
 8001c1a:	459b      	cmp	fp, r3
 8001c1c:	d117      	bne.n	8001c4e <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x8a>
 8001c1e:	f246 3364 	movw	r3, #25444	@ 0x6364
 8001c22:	459a      	cmp	sl, r3
 8001c24:	d113      	bne.n	8001c4e <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x8a>
 8001c26:	b190      	cbz	r0, 8001c4e <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x8a>
            const uint8_t* chunk = readData(currentMovieOffset, chunkSize);
 8001c28:	4602      	mov	r2, r0
            currentMovieOffset += 8;
 8001c2a:	61a1      	str	r1, [r4, #24]
            const uint8_t* chunk = readData(currentMovieOffset, chunkSize);
 8001c2c:	4620      	mov	r0, r4
 8001c2e:	f7ff fc4f 	bl	80014d0 <_ZN20HardwareMJPEGDecoder8readDataEmm>
            decodeMJPEGFrame(chunk, chunkSize, buffer, buffer_width, buffer_height, buffer_stride);
 8001c32:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
            const uint8_t* chunk = readData(currentMovieOffset, chunkSize);
 8001c34:	4601      	mov	r1, r0
            decodeMJPEGFrame(chunk, chunkSize, buffer, buffer_width, buffer_height, buffer_stride);
 8001c36:	e9cd 9301 	strd	r9, r3, [sp, #4]
 8001c3a:	462a      	mov	r2, r5
 8001c3c:	463b      	mov	r3, r7
 8001c3e:	4620      	mov	r0, r4
 8001c40:	f8cd 8000 	str.w	r8, [sp]
 8001c44:	f7ff ff76 	bl	8001b34 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm>
            frameNumber++;
 8001c48:	6963      	ldr	r3, [r4, #20]
 8001c4a:	3301      	adds	r3, #1
 8001c4c:	6163      	str	r3, [r4, #20]
        currentMovieOffset += chunkSize;
 8001c4e:	69a3      	ldr	r3, [r4, #24]
 8001c50:	442b      	add	r3, r5
        if (chunkSize == 0) /* Empty frame - Skip */
 8001c52:	b905      	cbnz	r5, 8001c56 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x92>
            currentMovieOffset += 8;
 8001c54:	3308      	adds	r3, #8
        if (currentMovieOffset == lastFrameEnd)
 8001c56:	6a62      	ldr	r2, [r4, #36]	@ 0x24
        currentMovieOffset = (currentMovieOffset + 1) & 0xFFFFFFFE; /* pad to next word */
 8001c58:	3301      	adds	r3, #1
 8001c5a:	f023 0301 	bic.w	r3, r3, #1
        if (currentMovieOffset == lastFrameEnd)
 8001c5e:	4293      	cmp	r3, r2
        currentMovieOffset = (currentMovieOffset + 1) & 0xFFFFFFFE; /* pad to next word */
 8001c60:	61a3      	str	r3, [r4, #24]
        if (currentMovieOffset == lastFrameEnd)
 8001c62:	d109      	bne.n	8001c78 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xb4>
        frameNumber = 1;
 8001c64:	2301      	movs	r3, #1
            isCurrentFrameLast = true;
 8001c66:	2001      	movs	r0, #1
        frameNumber = 1;
 8001c68:	6163      	str	r3, [r4, #20]
        currentMovieOffset = firstFrameOffset; /* start over */
 8001c6a:	6a23      	ldr	r3, [r4, #32]
 8001c6c:	61a3      	str	r3, [r4, #24]
}
 8001c6e:	f080 0001 	eor.w	r0, r0, #1
 8001c72:	b005      	add	sp, #20
 8001c74:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
        isCurrentFrameLast = false;
 8001c78:	2000      	movs	r0, #0
 8001c7a:	e7f8      	b.n	8001c6e <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xaa>
 8001c7c:	08033d09 	.word	0x08033d09
 8001c80:	08033e28 	.word	0x08033e28
 8001c84:	08033c4b 	.word	0x08033c4b

08001c88 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm>:
{
 8001c88:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8001c8c:	4607      	mov	r7, r0
 8001c8e:	468b      	mov	fp, r1
 8001c90:	4691      	mov	r9, r2
    readData(currentMovieOffset, 8);
 8001c92:	6981      	ldr	r1, [r0, #24]
 8001c94:	2208      	movs	r2, #8
{
 8001c96:	4698      	mov	r8, r3
    readData(currentMovieOffset, 8);
 8001c98:	f7ff fc1a 	bl	80014d0 <_ZN20HardwareMJPEGDecoder8readDataEmm>
    const uint32_t length = getU32(currentMovieOffset + 4);
 8001c9c:	69bc      	ldr	r4, [r7, #24]
 8001c9e:	4638      	mov	r0, r7
 8001ca0:	1d21      	adds	r1, r4, #4
 8001ca2:	f7ff fbe7 	bl	8001474 <_ZN20HardwareMJPEGDecoder6getU32Em>
    const uint8_t* mjpgdata = readData(currentMovieOffset + 8, length);
 8001ca6:	f104 0108 	add.w	r1, r4, #8
 8001caa:	4602      	mov	r2, r0
    const uint32_t length = getU32(currentMovieOffset + 4);
 8001cac:	4682      	mov	sl, r0
    const uint8_t* mjpgdata = readData(currentMovieOffset + 8, length);
 8001cae:	4638      	mov	r0, r7
 8001cb0:	f7ff fc0e 	bl	80014d0 <_ZN20HardwareMJPEGDecoder8readDataEmm>
    JPEG_ConvertorParams.bytes_pr_pixel = 2;
 8001cb4:	2302      	movs	r3, #2
 8001cb6:	4c34      	ldr	r4, [pc, #208]	@ (8001d88 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x100>)
    JPEG_ConvertorParams.WidthExtend = videoInfo.frame_width;
 8001cb8:	68fa      	ldr	r2, [r7, #12]
    JPEG_ConvertorParams.bytes_pr_pixel = 2;
 8001cba:	6123      	str	r3, [r4, #16]
    const uint8_t* mjpgdata = readData(currentMovieOffset + 8, length);
 8001cbc:	4601      	mov	r1, r0
    if ((JPEG_ConvertorParams.WidthExtend % 16) != 0)
 8001cbe:	0713      	lsls	r3, r2, #28
    JPEG_ConvertorParams.ScaledWidth = 800 * JPEG_ConvertorParams.bytes_pr_pixel;
 8001cc0:	f44f 60c8 	mov.w	r0, #1600	@ 0x640
 8001cc4:	bf0e      	itee	eq
 8001cc6:	4613      	moveq	r3, r2
        JPEG_ConvertorParams.WidthExtend += 16 - (JPEG_ConvertorParams.WidthExtend % 16);
 8001cc8:	f022 030f 	bicne.w	r3, r2, #15
 8001ccc:	3310      	addne	r3, #16
    JPEG_ConvertorParams.ScaledWidth = 800 * JPEG_ConvertorParams.bytes_pr_pixel;
 8001cce:	6060      	str	r0, [r4, #4]
     *
     * @return y coordinate of the bottom edge (calculated as "y + height").
     */
    FORCE_INLINE_FUNCTION int16_t bottom() const
    {
        return y + height;
 8001cd0:	f8bb 5006 	ldrh.w	r5, [fp, #6]
    JPEG_ConvertorParams.startY = area.y;
 8001cd4:	f9bb 0002 	ldrsh.w	r0, [fp, #2]
    JPEG_ConvertorParams.WidthExtend = videoInfo.frame_width;
 8001cd8:	6023      	str	r3, [r4, #0]
    JPEG_ConvertorParams.MCU_pr_line = JPEG_ConvertorParams.WidthExtend / MCU_WIDTH_PIXELS;
 8001cda:	091b      	lsrs	r3, r3, #4
 8001cdc:	60e3      	str	r3, [r4, #12]
 8001cde:	4405      	add	r5, r0
 8001ce0:	693b      	ldr	r3, [r7, #16]
    JPEG_ConvertorParams.endY = MIN((uint32_t)area.bottom(), videoInfo.frame_height);
 8001ce2:	b22d      	sxth	r5, r5
 8001ce4:	429d      	cmp	r5, r3
 8001ce6:	bf28      	it	cs
 8001ce8:	461d      	movcs	r5, r3
    JPEG_ConvertorParams.startX = area.x;
 8001cea:	f9bb 3000 	ldrsh.w	r3, [fp]
    JPEG_ConvertorParams.endY = MIN((uint32_t)area.bottom(), videoInfo.frame_height);
 8001cee:	61a5      	str	r5, [r4, #24]
 8001cf0:	462e      	mov	r6, r5
        return x + width;
 8001cf2:	f8bb 5004 	ldrh.w	r5, [fp, #4]
    JPEG_ConvertorParams.MCUStart = JPEG_ConvertorParams.startX / MCU_WIDTH_PIXELS;
 8001cf6:	ea4f 1c13 	mov.w	ip, r3, lsr #4
 8001cfa:	441d      	add	r5, r3
    JPEG_ConvertorParams.endX = MIN((uint32_t)area.right(), videoInfo.frame_width);
 8001cfc:	b22d      	sxth	r5, r5
 8001cfe:	4295      	cmp	r5, r2
 8001d00:	bf28      	it	cs
 8001d02:	4615      	movcs	r5, r2
    JPEG_ConvertorParams.MCUEnd = (JPEG_ConvertorParams.endX + MCU_WIDTH_PIXELS - 1) / MCU_WIDTH_PIXELS; // Ceil division
 8001d04:	f105 020f 	add.w	r2, r5, #15
    JPEG_ConvertorParams.endX = MIN((uint32_t)area.right(), videoInfo.frame_width);
 8001d08:	6225      	str	r5, [r4, #32]
    JPEG_ConvertorParams.MCUEnd = (JPEG_ConvertorParams.endX + MCU_WIDTH_PIXELS - 1) / MCU_WIDTH_PIXELS; // Ceil division
 8001d0a:	0912      	lsrs	r2, r2, #4
    JPEG_ConvertorParams.lastColOffset = (JPEG_ConvertorParams.endX % MCU_WIDTH_PIXELS) == 0 ? 0 : MCU_WIDTH_PIXELS - (JPEG_ConvertorParams.endX % MCU_WIDTH_PIXELS);
 8001d0c:	f015 050f 	ands.w	r5, r5, #15
    JPEG_ConvertorParams.startY = area.y;
 8001d10:	6160      	str	r0, [r4, #20]
    JPEG_ConvertorParams.startX = area.x;
 8001d12:	61e3      	str	r3, [r4, #28]
    JPEG_ConvertorParams.MCUEnd = (JPEG_ConvertorParams.endX + MCU_WIDTH_PIXELS - 1) / MCU_WIDTH_PIXELS; // Ceil division
 8001d14:	62a2      	str	r2, [r4, #40]	@ 0x28
    JPEG_ConvertorParams.lastColOffset = (JPEG_ConvertorParams.endX % MCU_WIDTH_PIXELS) == 0 ? 0 : MCU_WIDTH_PIXELS - (JPEG_ConvertorParams.endX % MCU_WIDTH_PIXELS);
 8001d16:	bf18      	it	ne
 8001d18:	f1c5 0510 	rsbne	r5, r5, #16
    JPEG_ConvertorParams.MCU_pr_job = JPEG_ConvertorParams.MCUEnd - JPEG_ConvertorParams.MCUStart;
 8001d1c:	eba2 020c 	sub.w	r2, r2, ip
    JPEG_ConvertorParams.lastRowOffset = (JPEG_ConvertorParams.endY % MCU_HEIGHT_PIXELS) == 0 ? 0 : MCU_HEIGHT_PIXELS - (JPEG_ConvertorParams.endY % MCU_HEIGHT_PIXELS);
 8001d20:	f016 060f 	ands.w	r6, r6, #15
    JPEG_ConvertorParams.firstColOffset = JPEG_ConvertorParams.startX % MCU_WIDTH_PIXELS;
 8001d24:	f003 030f 	and.w	r3, r3, #15
    JPEG_ConvertorParams.firstRowOffset = JPEG_ConvertorParams.startY % MCU_HEIGHT_PIXELS;
 8001d28:	f000 000f 	and.w	r0, r0, #15
    JPEG_ConvertorParams.MCU_pr_job = JPEG_ConvertorParams.MCUEnd - JPEG_ConvertorParams.MCUStart;
 8001d2c:	62e2      	str	r2, [r4, #44]	@ 0x2c
    JPEG_ConvertorParams.firstColOffset = JPEG_ConvertorParams.startX % MCU_WIDTH_PIXELS;
 8001d2e:	6323      	str	r3, [r4, #48]	@ 0x30
    JPEG_ConvertorParams.firstRowOffset = JPEG_ConvertorParams.startY % MCU_HEIGHT_PIXELS;
 8001d30:	6360      	str	r0, [r4, #52]	@ 0x34
    JPEG_Decode_DMA(&hjpeg, const_cast<uint8_t*>(mjpgdata), length, frameBuffer);
 8001d32:	464b      	mov	r3, r9
 8001d34:	4652      	mov	r2, sl
    JPEG_ConvertorParams.lastRowOffset = (JPEG_ConvertorParams.endY % MCU_HEIGHT_PIXELS) == 0 ? 0 : MCU_HEIGHT_PIXELS - (JPEG_ConvertorParams.endY % MCU_HEIGHT_PIXELS);
 8001d36:	bf18      	it	ne
 8001d38:	f1c6 0610 	rsbne	r6, r6, #16
    JPEG_Decode_DMA(&hjpeg, const_cast<uint8_t*>(mjpgdata), length, frameBuffer);
 8001d3c:	4813      	ldr	r0, [pc, #76]	@ (8001d8c <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x104>)
    JPEG_ConvertorParams.lastColOffset = (JPEG_ConvertorParams.endX % MCU_WIDTH_PIXELS) == 0 ? 0 : MCU_WIDTH_PIXELS - (JPEG_ConvertorParams.endX % MCU_WIDTH_PIXELS);
 8001d3e:	63a5      	str	r5, [r4, #56]	@ 0x38
    JPEG_ConvertorParams.MCUStart = JPEG_ConvertorParams.startX / MCU_WIDTH_PIXELS;
 8001d40:	f8c4 c024 	str.w	ip, [r4, #36]	@ 0x24
    JPEG_ConvertorParams.lastRowOffset = (JPEG_ConvertorParams.endY % MCU_HEIGHT_PIXELS) == 0 ? 0 : MCU_HEIGHT_PIXELS - (JPEG_ConvertorParams.endY % MCU_HEIGHT_PIXELS);
 8001d44:	63e6      	str	r6, [r4, #60]	@ 0x3c
    JPEG_Decode_DMA(&hjpeg, const_cast<uint8_t*>(mjpgdata), length, frameBuffer);
 8001d46:	f7ff fd69 	bl	800181c <JPEG_Decode_DMA>
    DMA2D_reference = dma;
 8001d4a:	4b11      	ldr	r3, [pc, #68]	@ (8001d90 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x108>)
 8001d4c:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
        JpegProcessing_End = JPEG_OutputHandler(&hjpeg);
 8001d4e:	4d0f      	ldr	r5, [pc, #60]	@ (8001d8c <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x104>)
    DMA2D_reference = dma;
 8001d50:	601a      	str	r2, [r3, #0]
    FrameBufferWidth = framebuffer_width;
 8001d52:	4b10      	ldr	r3, [pc, #64]	@ (8001d94 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x10c>)
        JpegProcessing_End = JPEG_OutputHandler(&hjpeg);
 8001d54:	4c10      	ldr	r4, [pc, #64]	@ (8001d98 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x110>)
    FrameBufferWidth = framebuffer_width;
 8001d56:	f8c3 8000 	str.w	r8, [r3]
        JpegProcessing_End = JPEG_OutputHandler(&hjpeg);
 8001d5a:	4628      	mov	r0, r5
 8001d5c:	f7ff fea2 	bl	8001aa4 <JPEG_OutputHandler>
 8001d60:	6020      	str	r0, [r4, #0]
        if (JpegProcessing_End == 2)
 8001d62:	6823      	ldr	r3, [r4, #0]
 8001d64:	2b02      	cmp	r3, #2
 8001d66:	d105      	bne.n	8001d74 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0xec>
            SEM_WAIT(semDecodingDone);
 8001d68:	4b0c      	ldr	r3, [pc, #48]	@ (8001d9c <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x114>)
 8001d6a:	f04f 31ff 	mov.w	r1, #4294967295
 8001d6e:	6818      	ldr	r0, [r3, #0]
 8001d70:	f007 f85c 	bl	8008e2c <osSemaphoreAcquire>
    } while (JpegProcessing_End != 1);
 8001d74:	6820      	ldr	r0, [r4, #0]
 8001d76:	2801      	cmp	r0, #1
 8001d78:	d1ef      	bne.n	8001d5a <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0xd2>
    Jpeg_HWDecodingEnd = 0;
 8001d7a:	2300      	movs	r3, #0
 8001d7c:	4a08      	ldr	r2, [pc, #32]	@ (8001da0 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x118>)
 8001d7e:	6013      	str	r3, [r2, #0]
    DMA2D_CopyBufferEnd = 0;
 8001d80:	4a08      	ldr	r2, [pc, #32]	@ (8001da4 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x11c>)
 8001d82:	6013      	str	r3, [r2, #0]
}
 8001d84:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8001d88:	200006bc 	.word	0x200006bc
 8001d8c:	20000464 	.word	0x20000464
 8001d90:	20009f18 	.word	0x20009f18
 8001d94:	20009f0c 	.word	0x20009f0c
 8001d98:	20009f1c 	.word	0x20009f1c
 8001d9c:	20000704 	.word	0x20000704
 8001da0:	20009f24 	.word	0x20009f24
 8001da4:	200006fc 	.word	0x200006fc

08001da8 <DMA2D_CopyBuffer>:
 * @brief  Configures external DMA2D job to copy YCbCr data to RGB buffer(s)
 * @param job: External job reference
 * @retval None
 */
void DMA2D_CopyBuffer(JPEG_Data_BufferTypeDef& job)
{
 8001da8:	b5f0      	push	{r4, r5, r6, r7, lr}
    const uint32_t width = JPEG_ConvertorParams.MCU_pr_job * MCU_WIDTH_PIXELS - job.MCU_drawn * MCU_WIDTH_PIXELS - JPEG_ConvertorParams.lastColOffset;
    const uint32_t scaledWidth = (width % MCU_WIDTH_PIXELS) == 0 ? 0 : MCU_WIDTH_PIXELS - (width % MCU_WIDTH_PIXELS);
    const uint32_t srcOffset = (JPEG_ConvertorParams.MCUStart + job.MCU_drawn) * MCU_CHROMA_420_SIZE_BYTES;
 8001daa:	f44f 75c0 	mov.w	r5, #384	@ 0x180
    const uint32_t width = JPEG_ConvertorParams.MCU_pr_job * MCU_WIDTH_PIXELS - job.MCU_drawn * MCU_WIDTH_PIXELS - JPEG_ConvertorParams.lastColOffset;
 8001dae:	f8df c08c 	ldr.w	ip, [pc, #140]	@ 8001e3c <DMA2D_CopyBuffer+0x94>
 8001db2:	6902      	ldr	r2, [r0, #16]
 8001db4:	f8dc e02c 	ldr.w	lr, [ip, #44]	@ 0x2c
    const uint32_t srcOffset = (JPEG_ConvertorParams.MCUStart + job.MCU_drawn) * MCU_CHROMA_420_SIZE_BYTES;
 8001db8:	f8dc 1024 	ldr.w	r1, [ip, #36]	@ 0x24
    const uint32_t width = JPEG_ConvertorParams.MCU_pr_job * MCU_WIDTH_PIXELS - job.MCU_drawn * MCU_WIDTH_PIXELS - JPEG_ConvertorParams.lastColOffset;
 8001dbc:	ebae 0302 	sub.w	r3, lr, r2
    const uint32_t dstOffset = JPEG_ConvertorParams.MCUStart * MCU_WIDTH_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel
                               + job.MCU_drawn * MCU_WIDTH_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel;

    /* Mark job as fully drawn */
    job.MCU_drawn = JPEG_ConvertorParams.MCU_pr_job;
 8001dc0:	f8c0 e010 	str.w	lr, [r0, #16]

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
 8001dc4:	f04f 0e02 	mov.w	lr, #2
    const uint32_t srcOffset = (JPEG_ConvertorParams.MCUStart + job.MCU_drawn) * MCU_CHROMA_420_SIZE_BYTES;
 8001dc8:	440a      	add	r2, r1
    const uint32_t dstOffset = JPEG_ConvertorParams.MCUStart * MCU_WIDTH_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel
 8001dca:	f8dc 1010 	ldr.w	r1, [ip, #16]
    const uint32_t srcOffset = (JPEG_ConvertorParams.MCUStart + job.MCU_drawn) * MCU_CHROMA_420_SIZE_BYTES;
 8001dce:	4355      	muls	r5, r2
    const uint32_t dstOffset = JPEG_ConvertorParams.MCUStart * MCU_WIDTH_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel
 8001dd0:	434a      	muls	r2, r1
    const uint32_t width = JPEG_ConvertorParams.MCU_pr_job * MCU_WIDTH_PIXELS - job.MCU_drawn * MCU_WIDTH_PIXELS - JPEG_ConvertorParams.lastColOffset;
 8001dd2:	f8dc 4038 	ldr.w	r4, [ip, #56]	@ 0x38
    const uint32_t dstOffset = JPEG_ConvertorParams.MCUStart * MCU_WIDTH_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel
 8001dd6:	0111      	lsls	r1, r2, #4
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
 8001dd8:	4a15      	ldr	r2, [pc, #84]	@ (8001e30 <DMA2D_CopyBuffer+0x88>)
    const uint32_t width = JPEG_ConvertorParams.MCU_pr_job * MCU_WIDTH_PIXELS - job.MCU_drawn * MCU_WIDTH_PIXELS - JPEG_ConvertorParams.lastColOffset;
 8001dda:	011f      	lsls	r7, r3, #4
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
 8001ddc:	f8c2 e034 	str.w	lr, [r2, #52]	@ 0x34
    const uint32_t width = JPEG_ConvertorParams.MCU_pr_job * MCU_WIDTH_PIXELS - job.MCU_drawn * MCU_WIDTH_PIXELS - JPEG_ConvertorParams.lastColOffset;
 8001de0:	ebc4 1303 	rsb	r3, r4, r3, lsl #4

    /* Configure DMA2D data size */
    if (job.LastJob)  /* Last line of frame */
 8001de4:	f890 e01a 	ldrb.w	lr, [r0, #26]
    const uint32_t scaledWidth = (width % MCU_WIDTH_PIXELS) == 0 ? 0 : MCU_WIDTH_PIXELS - (width % MCU_WIDTH_PIXELS);
 8001de8:	f013 060f 	ands.w	r6, r3, #15
 8001dec:	bf18      	it	ne
 8001dee:	f1c6 0610 	rsbne	r6, r6, #16
    {
        WRITE_REG(DMA2D->NLR, (MCU_HEIGHT_PIXELS - JPEG_ConvertorParams.lastRowOffset) | (width << DMA2D_NLR_PL_Pos));
 8001df2:	041b      	lsls	r3, r3, #16
    if (job.LastJob)  /* Last line of frame */
 8001df4:	f1be 0f00 	cmp.w	lr, #0
 8001df8:	d016      	beq.n	8001e28 <DMA2D_CopyBuffer+0x80>
        WRITE_REG(DMA2D->NLR, (MCU_HEIGHT_PIXELS - JPEG_ConvertorParams.lastRowOffset) | (width << DMA2D_NLR_PL_Pos));
 8001dfa:	f8dc c03c 	ldr.w	ip, [ip, #60]	@ 0x3c
 8001dfe:	f1cc 0c10 	rsb	ip, ip, #16
 8001e02:	ea4c 0303 	orr.w	r3, ip, r3
    }
    else
    {
        WRITE_REG(DMA2D->NLR, MCU_HEIGHT_PIXELS | (width << DMA2D_NLR_PL_Pos));
 8001e06:	6453      	str	r3, [r2, #68]	@ 0x44
    }

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(job.OutputBuffer + dstOffset));
 8001e08:	6943      	ldr	r3, [r0, #20]

    /* DMA2D OOR register configuration */
    WRITE_REG(DMA2D->OOR, 800 - width);
 8001e0a:	f504 7448 	add.w	r4, r4, #800	@ 0x320
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(job.OutputBuffer + dstOffset));
 8001e0e:	440b      	add	r3, r1
 8001e10:	63d3      	str	r3, [r2, #60]	@ 0x3c

    /* DMA2D FGOR register configuration */
    WRITE_REG(DMA2D->FGOR, scaledWidth);

    /* DMA2D FGPFCCR register configuration */
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_YCBCR | (DMA2D_CSS_420 << DMA2D_FGPFCCR_CSS_Pos) | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (0xFFU << DMA2D_FGPFCCR_ALPHA_Pos));
 8001e12:	4b08      	ldr	r3, [pc, #32]	@ (8001e34 <DMA2D_CopyBuffer+0x8c>)
    WRITE_REG(DMA2D->OOR, 800 - width);
 8001e14:	1be4      	subs	r4, r4, r7
 8001e16:	6414      	str	r4, [r2, #64]	@ 0x40
    WRITE_REG(DMA2D->FGOR, scaledWidth);
 8001e18:	6116      	str	r6, [r2, #16]
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_YCBCR | (DMA2D_CSS_420 << DMA2D_FGPFCCR_CSS_Pos) | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (0xFFU << DMA2D_FGPFCCR_ALPHA_Pos));
 8001e1a:	61d3      	str	r3, [r2, #28]

    /* Configure DMA2D source address */
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(job.DataBuffer + srcOffset));
 8001e1c:	6843      	ldr	r3, [r0, #4]
 8001e1e:	442b      	add	r3, r5
 8001e20:	60d3      	str	r3, [r2, #12]

    /* Configure DMA2D contol register */
    WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START);
 8001e22:	4b05      	ldr	r3, [pc, #20]	@ (8001e38 <DMA2D_CopyBuffer+0x90>)
 8001e24:	6013      	str	r3, [r2, #0]
}
 8001e26:	bdf0      	pop	{r4, r5, r6, r7, pc}
        WRITE_REG(DMA2D->NLR, MCU_HEIGHT_PIXELS | (width << DMA2D_NLR_PL_Pos));
 8001e28:	f043 0310 	orr.w	r3, r3, #16
 8001e2c:	e7eb      	b.n	8001e06 <DMA2D_CopyBuffer+0x5e>
 8001e2e:	bf00      	nop
 8001e30:	4002b000 	.word	0x4002b000
 8001e34:	ff09000b 	.word	0xff09000b
 8001e38:	00010201 	.word	0x00010201
 8001e3c:	200006bc 	.word	0x200006bc

08001e40 <DMA2D_CropBuffer>:
 * @brief  Configures external DMA2D job to copy and crop YCbCr data to an RGB cropping buffer
 * @param job: External job reference
 * @retval None
 */
void DMA2D_CropBuffer(JPEG_Data_BufferTypeDef& job)
{
 8001e40:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    const uint32_t colLeftOffset = job.MCU_drawn == 0 ? JPEG_ConvertorParams.firstColOffset : 0;
 8001e44:	6905      	ldr	r5, [r0, #16]
{
 8001e46:	4604      	mov	r4, r0
 8001e48:	4937      	ldr	r1, [pc, #220]	@ (8001f28 <DMA2D_CropBuffer+0xe8>)
 8001e4a:	b08b      	sub	sp, #44	@ 0x2c
    const uint32_t colLeftOffset = job.MCU_drawn == 0 ? JPEG_ConvertorParams.firstColOffset : 0;
 8001e4c:	2d00      	cmp	r5, #0
 8001e4e:	d166      	bne.n	8001f1e <DMA2D_CropBuffer+0xde>
 8001e50:	6b0a      	ldr	r2, [r1, #48]	@ 0x30
    const uint32_t colRightOffset = job.MCU_drawn == JPEG_ConvertorParams.MCU_pr_job - 1 ? JPEG_ConvertorParams.lastColOffset : 0;
 8001e52:	6acb      	ldr	r3, [r1, #44]	@ 0x2c
    const uint32_t rowTopOffset = job.FirstJob ? JPEG_ConvertorParams.firstRowOffset : 0;
 8001e54:	7e67      	ldrb	r7, [r4, #25]
    const uint32_t colRightOffset = job.MCU_drawn == JPEG_ConvertorParams.MCU_pr_job - 1 ? JPEG_ConvertorParams.lastColOffset : 0;
 8001e56:	3b01      	subs	r3, #1
 8001e58:	429d      	cmp	r5, r3
    const uint32_t rowTopOffset = job.FirstJob ? JPEG_ConvertorParams.firstRowOffset : 0;
 8001e5a:	f8d1 8034 	ldr.w	r8, [r1, #52]	@ 0x34
    const uint32_t rowBottomOffset = job.LastJob ? JPEG_ConvertorParams.lastRowOffset : 0;
 8001e5e:	7ea3      	ldrb	r3, [r4, #26]
    const uint32_t colRightOffset = job.MCU_drawn == JPEG_ConvertorParams.MCU_pr_job - 1 ? JPEG_ConvertorParams.lastColOffset : 0;
 8001e60:	bf14      	ite	ne
 8001e62:	f04f 0e00 	movne.w	lr, #0
 8001e66:	f8d1 e038 	ldreq.w	lr, [r1, #56]	@ 0x38
    const uint32_t rowTopOffset = job.FirstJob ? JPEG_ConvertorParams.firstRowOffset : 0;
 8001e6a:	2f00      	cmp	r7, #0
 8001e6c:	bf14      	ite	ne
 8001e6e:	4640      	movne	r0, r8
 8001e70:	2000      	moveq	r0, #0
    const uint32_t rowBottomOffset = job.LastJob ? JPEG_ConvertorParams.lastRowOffset : 0;
 8001e72:	2b00      	cmp	r3, #0
 8001e74:	d055      	beq.n	8001f22 <DMA2D_CropBuffer+0xe2>
 8001e76:	f8d1 c03c 	ldr.w	ip, [r1, #60]	@ 0x3c
    const uint32_t srcOffset = (JPEG_ConvertorParams.MCUStart + job.MCU_drawn) * MCU_CHROMA_420_SIZE_BYTES;
 8001e7a:	6a4b      	ldr	r3, [r1, #36]	@ 0x24
 8001e7c:	f44f 76c0 	mov.w	r6, #384	@ 0x180
 8001e80:	eb05 0a03 	add.w	sl, r5, r3
    const uint32_t dstOffset = JPEG_ConvertorParams.MCUStart * MCU_WIDTH_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel
                               + job.MCU_drawn * MCU_WIDTH_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel
                               + rowTopOffset * JPEG_ConvertorParams.bytes_pr_pixel * 800
 8001e84:	2332      	movs	r3, #50	@ 0x32
    const uint32_t dstOffset = JPEG_ConvertorParams.MCUStart * MCU_WIDTH_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel
 8001e86:	f8d1 b010 	ldr.w	fp, [r1, #16]
                               + colLeftOffset * JPEG_ConvertorParams.bytes_pr_pixel;
    const uint32_t cropSrcOffset = colLeftOffset * JPEG_ConvertorParams.bytes_pr_pixel
                                   + rowTopOffset * JPEG_ConvertorParams.bytes_pr_pixel * MCU_HEIGHT_PIXELS;

    /* Update job and assert if more cropping is needed */
    job.MCU_drawn++;
 8001e8a:	3501      	adds	r5, #1
                               + rowTopOffset * JPEG_ConvertorParams.bytes_pr_pixel * 800
 8001e8c:	fb00 f90b 	mul.w	r9, r0, fp
 8001e90:	fb03 f309 	mul.w	r3, r3, r9
                               + colLeftOffset * JPEG_ConvertorParams.bytes_pr_pixel;
 8001e94:	fb02 f10b 	mul.w	r1, r2, fp
                               + rowTopOffset * JPEG_ConvertorParams.bytes_pr_pixel * 800
 8001e98:	fb0b 330a 	mla	r3, fp, sl, r3
    job.MCU_drawn++;
 8001e9c:	6125      	str	r5, [r4, #16]
    const uint32_t dstOffset = JPEG_ConvertorParams.MCUStart * MCU_WIDTH_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel
 8001e9e:	eb01 1303 	add.w	r3, r1, r3, lsl #4
 8001ea2:	2500      	movs	r5, #0
    const uint32_t srcOffset = (JPEG_ConvertorParams.MCUStart + job.MCU_drawn) * MCU_CHROMA_420_SIZE_BYTES;
 8001ea4:	fb06 f60a 	mul.w	r6, r6, sl
    const uint32_t cropSrcOffset = colLeftOffset * JPEG_ConvertorParams.bytes_pr_pixel
 8001ea8:	eb01 1109 	add.w	r1, r1, r9, lsl #4
    if ((JPEG_ConvertorParams.firstRowOffset == 0) || !job.FirstJob)
 8001eac:	f1b8 0f00 	cmp.w	r8, #0
 8001eb0:	d000      	beq.n	8001eb4 <DMA2D_CropBuffer+0x74>
 8001eb2:	b907      	cbnz	r7, 8001eb6 <DMA2D_CropBuffer+0x76>
    {
        job.DoCropping = false;
 8001eb4:	7625      	strb	r5, [r4, #24]
    }

    /* Configure BlitOp */
    touchgfx::BlitOp blitOp;
    blitOp.operation = touchgfx::BLIT_OP_COPY;
 8001eb6:	2701      	movs	r7, #1
    blitOp.pSrc = reinterpret_cast<uint16_t*>(MCU_Cropping_Buffer + cropSrcOffset);
    blitOp.nSteps = MCU_WIDTH_PIXELS - colLeftOffset - colRightOffset;
 8001eb8:	f1c2 0210 	rsb	r2, r2, #16
 8001ebc:	eba2 020e 	sub.w	r2, r2, lr
 8001ec0:	f8ad 2018 	strh.w	r2, [sp, #24]
    blitOp.nLoops = MCU_HEIGHT_PIXELS - rowTopOffset - rowBottomOffset;
    blitOp.srcLoopStride = MCU_WIDTH_PIXELS;
 8001ec4:	4a19      	ldr	r2, [pc, #100]	@ (8001f2c <DMA2D_CropBuffer+0xec>)
    blitOp.nLoops = MCU_HEIGHT_PIXELS - rowTopOffset - rowBottomOffset;
 8001ec6:	f1c0 0010 	rsb	r0, r0, #16
    blitOp.srcLoopStride = MCU_WIDTH_PIXELS;
 8001eca:	9207      	str	r2, [sp, #28]
    blitOp.dstLoopStride = 800;
    blitOp.pDst = reinterpret_cast<uint16_t*>(job.OutputBuffer + dstOffset);
 8001ecc:	6962      	ldr	r2, [r4, #20]
    blitOp.nLoops = MCU_HEIGHT_PIXELS - rowTopOffset - rowBottomOffset;
 8001ece:	eba0 000c 	sub.w	r0, r0, ip
    blitOp.pDst = reinterpret_cast<uint16_t*>(job.OutputBuffer + dstOffset);
 8001ed2:	441a      	add	r2, r3
    blitOp.srcFormat = touchgfx::Bitmap::RGB565;
    blitOp.dstFormat = touchgfx::Bitmap::RGB565;
    DMA2D_reference->addToQueue(blitOp);
 8001ed4:	4b16      	ldr	r3, [pc, #88]	@ (8001f30 <DMA2D_CropBuffer+0xf0>)
    blitOp.nLoops = MCU_HEIGHT_PIXELS - rowTopOffset - rowBottomOffset;
 8001ed6:	f8ad 001a 	strh.w	r0, [sp, #26]
    DMA2D_reference->addToQueue(blitOp);
 8001eda:	6818      	ldr	r0, [r3, #0]
    blitOp.srcFormat = touchgfx::Bitmap::RGB565;
 8001edc:	f88d 5021 	strb.w	r5, [sp, #33]	@ 0x21
    blitOp.dstFormat = touchgfx::Bitmap::RGB565;
 8001ee0:	f88d 5022 	strb.w	r5, [sp, #34]	@ 0x22
    blitOp.operation = touchgfx::BLIT_OP_COPY;
 8001ee4:	9701      	str	r7, [sp, #4]
    blitOp.pSrc = reinterpret_cast<uint16_t*>(MCU_Cropping_Buffer + cropSrcOffset);
 8001ee6:	4f13      	ldr	r7, [pc, #76]	@ (8001f34 <DMA2D_CropBuffer+0xf4>)
    DMA2D_reference->addToQueue(blitOp);
 8001ee8:	6803      	ldr	r3, [r0, #0]
    blitOp.pSrc = reinterpret_cast<uint16_t*>(MCU_Cropping_Buffer + cropSrcOffset);
 8001eea:	4439      	add	r1, r7
 8001eec:	9102      	str	r1, [sp, #8]
    blitOp.pDst = reinterpret_cast<uint16_t*>(job.OutputBuffer + dstOffset);
 8001eee:	9205      	str	r2, [sp, #20]
    DMA2D_reference->addToQueue(blitOp);
 8001ef0:	685b      	ldr	r3, [r3, #4]
        : color(0)
 8001ef2:	9504      	str	r5, [sp, #16]
 8001ef4:	a901      	add	r1, sp, #4
 8001ef6:	4798      	blx	r3

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
 8001ef8:	2202      	movs	r2, #2
 8001efa:	4b0f      	ldr	r3, [pc, #60]	@ (8001f38 <DMA2D_CropBuffer+0xf8>)
 8001efc:	635a      	str	r2, [r3, #52]	@ 0x34

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, MCU_HEIGHT_PIXELS | (MCU_WIDTH_PIXELS << DMA2D_NLR_PL_Pos));
 8001efe:	f04f 1210 	mov.w	r2, #1048592	@ 0x100010
 8001f02:	645a      	str	r2, [r3, #68]	@ 0x44

    /* DMA2D FGOR register configuration */
    WRITE_REG(DMA2D->FGOR, 0);

    /* DMA2D FGPFCCR register configuration */
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_YCBCR | (DMA2D_CSS_420 << DMA2D_FGPFCCR_CSS_Pos) | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (0xFFU << DMA2D_FGPFCCR_ALPHA_Pos));
 8001f04:	4a0d      	ldr	r2, [pc, #52]	@ (8001f3c <DMA2D_CropBuffer+0xfc>)
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(MCU_Cropping_Buffer));
 8001f06:	63df      	str	r7, [r3, #60]	@ 0x3c
    WRITE_REG(DMA2D->OOR, 0);
 8001f08:	641d      	str	r5, [r3, #64]	@ 0x40
    WRITE_REG(DMA2D->FGOR, 0);
 8001f0a:	611d      	str	r5, [r3, #16]
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_YCBCR | (DMA2D_CSS_420 << DMA2D_FGPFCCR_CSS_Pos) | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (0xFFU << DMA2D_FGPFCCR_ALPHA_Pos));
 8001f0c:	61da      	str	r2, [r3, #28]

    /* Configure DMA2D source address */
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(job.DataBuffer + srcOffset));
 8001f0e:	6862      	ldr	r2, [r4, #4]
 8001f10:	4432      	add	r2, r6
 8001f12:	60da      	str	r2, [r3, #12]

    /* Configure DMA2D contol register */
    WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START);
 8001f14:	4a0a      	ldr	r2, [pc, #40]	@ (8001f40 <DMA2D_CropBuffer+0x100>)
 8001f16:	601a      	str	r2, [r3, #0]
}
 8001f18:	b00b      	add	sp, #44	@ 0x2c
 8001f1a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    const uint32_t colLeftOffset = job.MCU_drawn == 0 ? JPEG_ConvertorParams.firstColOffset : 0;
 8001f1e:	2200      	movs	r2, #0
 8001f20:	e797      	b.n	8001e52 <DMA2D_CropBuffer+0x12>
    const uint32_t rowBottomOffset = job.LastJob ? JPEG_ConvertorParams.lastRowOffset : 0;
 8001f22:	469c      	mov	ip, r3
 8001f24:	e7a9      	b.n	8001e7a <DMA2D_CropBuffer+0x3a>
 8001f26:	bf00      	nop
 8001f28:	200006bc 	.word	0x200006bc
 8001f2c:	03200010 	.word	0x03200010
 8001f30:	20009f18 	.word	0x20009f18
 8001f34:	2000070c 	.word	0x2000070c
 8001f38:	4002b000 	.word	0x4002b000
 8001f3c:	ff09000b 	.word	0xff09000b
 8001f40:	00010201 	.word	0x00010201

08001f44 <DMA2D_ExternalJobCompleted>:
 * @retval None
 */
void DMA2D_ExternalJobCompleted(JPEG_Data_BufferTypeDef& job)
{
    /* Mark job done if all MCUs are drawn */
    if (job.MCU_drawn == JPEG_ConvertorParams.MCU_pr_job)
 8001f44:	4b0d      	ldr	r3, [pc, #52]	@ (8001f7c <DMA2D_ExternalJobCompleted+0x38>)
 8001f46:	6902      	ldr	r2, [r0, #16]
 8001f48:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8001f4a:	429a      	cmp	r2, r3
 8001f4c:	d114      	bne.n	8001f78 <DMA2D_ExternalJobCompleted+0x34>
    {
        job.State = JPEG_BUFFER_EMPTY;
 8001f4e:	2200      	movs	r2, #0
        job.DataBufferSize = 0;
        job.DoCropping = false;
        job.FirstJob = false;

        JPEG_OUT_Read_BufferIndex++;
 8001f50:	4b0b      	ldr	r3, [pc, #44]	@ (8001f80 <DMA2D_ExternalJobCompleted+0x3c>)
        job.State = JPEG_BUFFER_EMPTY;
 8001f52:	7002      	strb	r2, [r0, #0]
        JPEG_OUT_Read_BufferIndex++;
 8001f54:	6819      	ldr	r1, [r3, #0]
        job.DataBufferSize = 0;
 8001f56:	6082      	str	r2, [r0, #8]
        JPEG_OUT_Read_BufferIndex++;
 8001f58:	3101      	adds	r1, #1
 8001f5a:	6019      	str	r1, [r3, #0]
        if (JPEG_OUT_Read_BufferIndex >= NB_OUTPUT_DATA_BUFFERS)
 8001f5c:	6819      	ldr	r1, [r3, #0]
        job.DoCropping = false;
 8001f5e:	8302      	strh	r2, [r0, #24]
        if (JPEG_OUT_Read_BufferIndex >= NB_OUTPUT_DATA_BUFFERS)
 8001f60:	2901      	cmp	r1, #1
        {
            JPEG_OUT_Read_BufferIndex = 0;
 8001f62:	bf88      	it	hi
 8001f64:	601a      	strhi	r2, [r3, #0]
        }

        /* Check if last line */
        if (job.LastJob)
 8001f66:	7e83      	ldrb	r3, [r0, #26]
 8001f68:	b113      	cbz	r3, 8001f70 <DMA2D_ExternalJobCompleted+0x2c>
        {
            DMA2D_CopyBufferEnd = 1;
 8001f6a:	2201      	movs	r2, #1
 8001f6c:	4b05      	ldr	r3, [pc, #20]	@ (8001f84 <DMA2D_ExternalJobCompleted+0x40>)
 8001f6e:	601a      	str	r2, [r3, #0]
        }

        /* Signal decoder thread to wake up and continue decoding */
        SEM_POST(semDecodingDone);
 8001f70:	4b05      	ldr	r3, [pc, #20]	@ (8001f88 <DMA2D_ExternalJobCompleted+0x44>)
 8001f72:	6818      	ldr	r0, [r3, #0]
 8001f74:	f006 bf88 	b.w	8008e88 <osSemaphoreRelease>
    }
}
 8001f78:	4770      	bx	lr
 8001f7a:	bf00      	nop
 8001f7c:	200006bc 	.word	0x200006bc
 8001f80:	20000700 	.word	0x20000700
 8001f84:	200006fc 	.word	0x200006fc
 8001f88:	20000704 	.word	0x20000704

08001f8c <_ZN8touchgfx10OSWrappers10initializeEv>:
 * Initialize frame buffer semaphore and queue/mutex for VSYNC signal.
 */
void OSWrappers::initialize()
{
    // Create a queue of length 1
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 8001f8c:	2101      	movs	r1, #1
{
 8001f8e:	b508      	push	{r3, lr}
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 8001f90:	2200      	movs	r2, #0
 8001f92:	4608      	mov	r0, r1
 8001f94:	f006 fefb 	bl	8008d8e <osSemaphoreNew>
 8001f98:	4b0a      	ldr	r3, [pc, #40]	@ (8001fc4 <_ZN8touchgfx10OSWrappers10initializeEv+0x38>)
 8001f9a:	6018      	str	r0, [r3, #0]
    assert((frame_buffer_sem != NULL) && "Creation of framebuffer semaphore failed");
 8001f9c:	b928      	cbnz	r0, 8001faa <_ZN8touchgfx10OSWrappers10initializeEv+0x1e>
 8001f9e:	2128      	movs	r1, #40	@ 0x28
 8001fa0:	4b09      	ldr	r3, [pc, #36]	@ (8001fc8 <_ZN8touchgfx10OSWrappers10initializeEv+0x3c>)
 8001fa2:	4a0a      	ldr	r2, [pc, #40]	@ (8001fcc <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)

    // Create a queue of length 1
    vsync_queue = osMessageQueueNew(1, 4, NULL);
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 8001fa4:	480a      	ldr	r0, [pc, #40]	@ (8001fd0 <_ZN8touchgfx10OSWrappers10initializeEv+0x44>)
 8001fa6:	f030 fbe7 	bl	8032778 <__assert_func>
    vsync_queue = osMessageQueueNew(1, 4, NULL);
 8001faa:	2200      	movs	r2, #0
 8001fac:	2104      	movs	r1, #4
 8001fae:	2001      	movs	r0, #1
 8001fb0:	f006 ff92 	bl	8008ed8 <osMessageQueueNew>
 8001fb4:	4b07      	ldr	r3, [pc, #28]	@ (8001fd4 <_ZN8touchgfx10OSWrappers10initializeEv+0x48>)
 8001fb6:	6018      	str	r0, [r3, #0]
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 8001fb8:	b918      	cbnz	r0, 8001fc2 <_ZN8touchgfx10OSWrappers10initializeEv+0x36>
 8001fba:	212c      	movs	r1, #44	@ 0x2c
 8001fbc:	4b06      	ldr	r3, [pc, #24]	@ (8001fd8 <_ZN8touchgfx10OSWrappers10initializeEv+0x4c>)
 8001fbe:	4a03      	ldr	r2, [pc, #12]	@ (8001fcc <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 8001fc0:	e7f0      	b.n	8001fa4 <_ZN8touchgfx10OSWrappers10initializeEv+0x18>
}
 8001fc2:	bd08      	pop	{r3, pc}
 8001fc4:	20009f3c 	.word	0x20009f3c
 8001fc8:	08033ec8 	.word	0x08033ec8
 8001fcc:	08033f11 	.word	0x08033f11
 8001fd0:	08033f40 	.word	0x08033f40
 8001fd4:	20009f38 	.word	0x20009f38
 8001fd8:	08033f9f 	.word	0x08033f9f

08001fdc <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>:
/*
 * Take the frame buffer semaphore. Blocks until semaphore is available.
 */
void OSWrappers::takeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, osWaitForever);
 8001fdc:	4b02      	ldr	r3, [pc, #8]	@ (8001fe8 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0xc>)
 8001fde:	f04f 31ff 	mov.w	r1, #4294967295
 8001fe2:	6818      	ldr	r0, [r3, #0]
 8001fe4:	f006 bf22 	b.w	8008e2c <osSemaphoreAcquire>
 8001fe8:	20009f3c 	.word	0x20009f3c

08001fec <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>:
/*
 * Release the frame buffer semaphore.
 */
void OSWrappers::giveFrameBufferSemaphore()
{
    osSemaphoreRelease(frame_buffer_sem);
 8001fec:	4b01      	ldr	r3, [pc, #4]	@ (8001ff4 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x8>)
 8001fee:	6818      	ldr	r0, [r3, #0]
 8001ff0:	f006 bf4a 	b.w	8008e88 <osSemaphoreRelease>
 8001ff4:	20009f3c 	.word	0x20009f3c

08001ff8 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>:
 * Note must return immediately! This function does not care who has the taken the semaphore,
 * it only serves to make sure that the semaphore is taken by someone.
 */
void OSWrappers::tryTakeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, 0);
 8001ff8:	4b02      	ldr	r3, [pc, #8]	@ (8002004 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0xc>)
 8001ffa:	2100      	movs	r1, #0
 8001ffc:	6818      	ldr	r0, [r3, #0]
 8001ffe:	f006 bf15 	b.w	8008e2c <osSemaphoreAcquire>
 8002002:	bf00      	nop
 8002004:	20009f3c 	.word	0x20009f3c

08002008 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>:
 * from ISR.
 *
 * Release the frame buffer semaphore in a way that is safe in interrupt context.
 * Called from ISR.
 */
void OSWrappers::giveFrameBufferSemaphoreFromISR()
 8002008:	f7ff bff0 	b.w	8001fec <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

0800200c <_ZN8touchgfx10OSWrappers11signalVSyncEv>:
 * Note This function is called from an ISR, and should (depending on OS) trigger a
 * scheduling.
 */
void OSWrappers::signalVSync()
{
    osMessageQueuePut(vsync_queue, &dummy, 0, 0);
 800200c:	2300      	movs	r3, #0
 800200e:	4803      	ldr	r0, [pc, #12]	@ (800201c <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x10>)
 8002010:	461a      	mov	r2, r3
 8002012:	4903      	ldr	r1, [pc, #12]	@ (8002020 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x14>)
 8002014:	6800      	ldr	r0, [r0, #0]
 8002016:	f006 bf9e 	b.w	8008f56 <osMessageQueuePut>
 800201a:	bf00      	nop
 800201c:	20009f38 	.word	0x20009f38
 8002020:	2000003c 	.word	0x2000003c

08002024 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>:
 */
void OSWrappers::waitForVSync()
{
    uint32_t dummyGet;
    // First make sure the queue is empty, by trying to remove an element with 0 timeout.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, 0);
 8002024:	2300      	movs	r3, #0
{
 8002026:	b513      	push	{r0, r1, r4, lr}
    osMessageQueueGet(vsync_queue, &dummyGet, 0, 0);
 8002028:	4c07      	ldr	r4, [pc, #28]	@ (8002048 <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x24>)
 800202a:	461a      	mov	r2, r3
 800202c:	a901      	add	r1, sp, #4
 800202e:	6820      	ldr	r0, [r4, #0]
 8002030:	f006 ffc5 	bl	8008fbe <osMessageQueueGet>

    // Then, wait for next VSYNC to occur.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, osWaitForever);
 8002034:	f04f 33ff 	mov.w	r3, #4294967295
 8002038:	2200      	movs	r2, #0
 800203a:	6820      	ldr	r0, [r4, #0]
 800203c:	a901      	add	r1, sp, #4
 800203e:	f006 ffbe 	bl	8008fbe <osMessageQueueGet>
}
 8002042:	b002      	add	sp, #8
 8002044:	bd10      	pop	{r4, pc}
 8002046:	bf00      	nop
 8002048:	20009f38 	.word	0x20009f38

0800204c <_ZN8touchgfx13DMA_Interface5flushEv>:
        waitForFrameBufferSemaphore();
 800204c:	6803      	ldr	r3, [r0, #0]
 800204e:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8002050:	4718      	bx	r3

08002052 <_ZN8STM32DMA10getDMATypeEv>:
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual touchgfx::DMAType getDMAType(void)
    {
        return touchgfx::DMA_TYPE_CHROMART;
    }
 8002052:	2001      	movs	r0, #1
 8002054:	4770      	bx	lr

08002056 <_ZN8STM32DMA11getBlitCapsEv>:
                                       | BLIT_OP_COPY_WITH_ALPHA
                                       | BLIT_OP_COPY_ARGB8888
                                       | BLIT_OP_COPY_ARGB8888_WITH_ALPHA
                                       | BLIT_OP_COPY_A4
                                       | BLIT_OP_COPY_A8);
}
 8002056:	f240 30ef 	movw	r0, #1007	@ 0x3ef
 800205a:	4770      	bx	lr

0800205c <_ZN8STM32DMAD1Ev>:
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 800205c:	f44f 0280 	mov.w	r2, #4194304	@ 0x400000
STM32DMA::~STM32DMA()
 8002060:	4b04      	ldr	r3, [pc, #16]	@ (8002074 <_ZN8STM32DMAD1Ev+0x18>)
 8002062:	6003      	str	r3, [r0, #0]
 8002064:	4b04      	ldr	r3, [pc, #16]	@ (8002078 <_ZN8STM32DMAD1Ev+0x1c>)
 8002066:	f8c3 208c 	str.w	r2, [r3, #140]	@ 0x8c
  __ASM volatile ("dsb 0xF":::"memory");
 800206a:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 800206e:	f3bf 8f6f 	isb	sy
}
 8002072:	4770      	bx	lr
 8002074:	08034150 	.word	0x08034150
 8002078:	e000e100 	.word	0xe000e100

0800207c <_ZN8STM32DMAD0Ev>:
STM32DMA::~STM32DMA()
 800207c:	b510      	push	{r4, lr}
 800207e:	4604      	mov	r4, r0
}
 8002080:	f640 51a4 	movw	r1, #3492	@ 0xda4
 8002084:	f7ff ffea 	bl	800205c <_ZN8STM32DMAD1Ev>
 8002088:	4620      	mov	r0, r4
 800208a:	f02f f99c 	bl	80313c6 <_ZdlPvj>
 800208e:	4620      	mov	r0, r4
 8002090:	bd10      	pop	{r4, pc}
	...

08002094 <_ZN8STM32DMA10initializeEv>:
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8002094:	4b0f      	ldr	r3, [pc, #60]	@ (80020d4 <_ZN8STM32DMA10initializeEv+0x40>)
{
 8002096:	b082      	sub	sp, #8
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8002098:	f8d3 2088 	ldr.w	r2, [r3, #136]	@ 0x88
 800209c:	f442 2280 	orr.w	r2, r2, #262144	@ 0x40000
 80020a0:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
 80020a4:	f8d3 2088 	ldr.w	r2, [r3, #136]	@ 0x88
 80020a8:	f402 2280 	and.w	r2, r2, #262144	@ 0x40000
 80020ac:	9201      	str	r2, [sp, #4]
 80020ae:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_DMA2D_FORCE_RESET();
 80020b0:	6e1a      	ldr	r2, [r3, #96]	@ 0x60
 80020b2:	f442 2280 	orr.w	r2, r2, #262144	@ 0x40000
 80020b6:	661a      	str	r2, [r3, #96]	@ 0x60
    __HAL_RCC_DMA2D_RELEASE_RESET();
 80020b8:	6e1a      	ldr	r2, [r3, #96]	@ 0x60
 80020ba:	f422 2280 	bic.w	r2, r2, #262144	@ 0x40000
 80020be:	661a      	str	r2, [r3, #96]	@ 0x60
    hdma2d.XferCpltCallback = DMA2D_XferCpltCallback;
 80020c0:	4b05      	ldr	r3, [pc, #20]	@ (80020d8 <_ZN8STM32DMA10initializeEv+0x44>)
 80020c2:	4a06      	ldr	r2, [pc, #24]	@ (80020dc <_ZN8STM32DMA10initializeEv+0x48>)
 80020c4:	621a      	str	r2, [r3, #32]
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80020c6:	f44f 0280 	mov.w	r2, #4194304	@ 0x400000
 80020ca:	4b05      	ldr	r3, [pc, #20]	@ (80020e0 <_ZN8STM32DMA10initializeEv+0x4c>)
 80020cc:	60da      	str	r2, [r3, #12]
}
 80020ce:	b002      	add	sp, #8
 80020d0:	4770      	bx	lr
 80020d2:	bf00      	nop
 80020d4:	46020c00 	.word	0x46020c00
 80020d8:	2000057c 	.word	0x2000057c
 80020dc:	08002331 	.word	0x08002331
 80020e0:	e000e100 	.word	0xe000e100

080020e4 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>:
inline uint32_t STM32DMA::getChromARTOutputFormat(Bitmap::BitmapFormat format)
 80020e4:	b508      	push	{r3, lr}
    switch (format)
 80020e6:	280a      	cmp	r0, #10
 80020e8:	d809      	bhi.n	80020fe <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x1a>
 80020ea:	e8df f000 	tbb	[pc, r0]
 80020ee:	1006      	.short	0x1006
 80020f0:	0808080e 	.word	0x0808080e
 80020f4:	10101008 	.word	0x10101008
 80020f8:	10          	.byte	0x10
 80020f9:	00          	.byte	0x00
        dma2dColorMode = DMA2D_OUTPUT_RGB565;
 80020fa:	2002      	movs	r0, #2
}
 80020fc:	bd08      	pop	{r3, pc}
        assert(0 && "Unsupported Format!");
 80020fe:	2187      	movs	r1, #135	@ 0x87
 8002100:	4b04      	ldr	r3, [pc, #16]	@ (8002114 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x30>)
 8002102:	4a05      	ldr	r2, [pc, #20]	@ (8002118 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x34>)
 8002104:	4805      	ldr	r0, [pc, #20]	@ (800211c <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x38>)
 8002106:	f030 fb37 	bl	8032778 <__assert_func>
        dma2dColorMode = DMA2D_OUTPUT_ARGB8888;
 800210a:	2000      	movs	r0, #0
 800210c:	e7f6      	b.n	80020fc <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x18>
    switch (format)
 800210e:	2001      	movs	r0, #1
    return dma2dColorMode;
 8002110:	e7f4      	b.n	80020fc <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x18>
 8002112:	bf00      	nop
 8002114:	08033fe1 	.word	0x08033fe1
 8002118:	08033ffc 	.word	0x08033ffc
 800211c:	08034047 	.word	0x08034047

08002120 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE>:
 * void STM32DMA::setupDataFill(const BlitOp& blitOp) handles blit operation of
 * BLIT_OP_FILL
 * BLIT_OP_FILL_WITH_ALPHA
 */
void STM32DMA::setupDataFill(const BlitOp& blitOp)
{
 8002120:	b538      	push	{r3, r4, r5, lr}
 8002122:	460c      	mov	r4, r1
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8002124:	7f88      	ldrb	r0, [r1, #30]
 8002126:	f7ff ffdd 	bl	80020e4 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 800212a:	8aa5      	ldrh	r5, [r4, #20]
 800212c:	8ae2      	ldrh	r2, [r4, #22]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 800212e:	4b16      	ldr	r3, [pc, #88]	@ (8002188 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x68>)
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8002130:	ea42 4205 	orr.w	r2, r2, r5, lsl #16
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8002134:	6358      	str	r0, [r3, #52]	@ 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8002136:	645a      	str	r2, [r3, #68]	@ 0x44

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));

    /* DMA2D OOR register configuration */
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8002138:	8b62      	ldrh	r2, [r4, #26]
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 800213a:	6921      	ldr	r1, [r4, #16]
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 800213c:	1b52      	subs	r2, r2, r5
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 800213e:	63d9      	str	r1, [r3, #60]	@ 0x3c
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8002140:	641a      	str	r2, [r3, #64]	@ 0x40

    if (blitOp.operation == BLIT_OP_FILL_WITH_ALPHA)
 8002142:	6825      	ldr	r5, [r4, #0]
 8002144:	2d08      	cmp	r5, #8
 8002146:	d10e      	bne.n	8002166 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x46>
    {
        /* DMA2D BGOR register configuration */
        WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8002148:	619a      	str	r2, [r3, #24]

        /* DMA2D FGOR register configuration */
        WRITE_REG(DMA2D->FGOR, blitOp.dstLoopStride - blitOp.nSteps);
 800214a:	611a      	str	r2, [r3, #16]

        /* Write DMA2D BGPFCCR register */
        WRITE_REG(DMA2D->BGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 800214c:	6258      	str	r0, [r3, #36]	@ 0x24

        /* Write DMA2D FGPFCCR register */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((blitOp.alpha << 24) & DMA2D_FGPFCCR_ALPHA));
 800214e:	7f20      	ldrb	r0, [r4, #28]
 8002150:	4a0e      	ldr	r2, [pc, #56]	@ (800218c <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x6c>)
 8002152:	ea42 6200 	orr.w	r2, r2, r0, lsl #24
 8002156:	61da      	str	r2, [r3, #28]
        return color;
 8002158:	68e2      	ldr	r2, [r4, #12]

        /* DMA2D FGCOLR register configuration */
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
 800215a:	621a      	str	r2, [r3, #32]

        /* Configure DMA2D source address */
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_M2M_BLEND));
 800215c:	4a0c      	ldr	r2, [pc, #48]	@ (8002190 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x70>)
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 800215e:	6159      	str	r1, [r3, #20]
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8002160:	60d9      	str	r1, [r3, #12]

        /* Set color */
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M));
 8002162:	601a      	str	r2, [r3, #0]
    }
}
 8002164:	bd38      	pop	{r3, r4, r5, pc}
        WRITE_REG(DMA2D->FGOR, 0);
 8002166:	2200      	movs	r2, #0
        WRITE_REG(DMA2D->FGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_FGPFCCR_AM_Pos));
 8002168:	61d8      	str	r0, [r3, #28]
        WRITE_REG(DMA2D->FGOR, 0);
 800216a:	611a      	str	r2, [r3, #16]
 800216c:	68e1      	ldr	r1, [r4, #12]
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));
 800216e:	0a0a      	lsrs	r2, r1, #8
 8002170:	0948      	lsrs	r0, r1, #5
 8002172:	f402 4278 	and.w	r2, r2, #63488	@ 0xf800
 8002176:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 800217a:	4302      	orrs	r2, r0
 800217c:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8002180:	430a      	orrs	r2, r1
 8002182:	639a      	str	r2, [r3, #56]	@ 0x38
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M));
 8002184:	4a03      	ldr	r2, [pc, #12]	@ (8002194 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x74>)
 8002186:	e7ec      	b.n	8002162 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x42>
 8002188:	4002b000 	.word	0x4002b000
 800218c:	00010009 	.word	0x00010009
 8002190:	00020201 	.word	0x00020201
 8002194:	00030201 	.word	0x00030201

08002198 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>:
inline uint32_t STM32DMA::getChromARTInputFormat(Bitmap::BitmapFormat format)
 8002198:	b508      	push	{r3, lr}
    switch (format)
 800219a:	280b      	cmp	r0, #11
 800219c:	d80b      	bhi.n	80021b6 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x1e>
 800219e:	e8df f000 	tbb	[pc, r0]
 80021a2:	1206      	.short	0x1206
 80021a4:	0a0a0a10 	.word	0x0a0a0a10
 80021a8:	0808080a 	.word	0x0808080a
 80021ac:	0808      	.short	0x0808
        dma2dColorMode = DMA2D_INPUT_RGB565;
 80021ae:	2002      	movs	r0, #2
}
 80021b0:	bd08      	pop	{r3, pc}
        dma2dColorMode = DMA2D_INPUT_L8;
 80021b2:	2005      	movs	r0, #5
        break;
 80021b4:	e7fc      	b.n	80021b0 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x18>
        assert(0 && "Unsupported Format!");
 80021b6:	2166      	movs	r1, #102	@ 0x66
 80021b8:	4b04      	ldr	r3, [pc, #16]	@ (80021cc <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x34>)
 80021ba:	4a05      	ldr	r2, [pc, #20]	@ (80021d0 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x38>)
 80021bc:	4805      	ldr	r0, [pc, #20]	@ (80021d4 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x3c>)
 80021be:	f030 fadb 	bl	8032778 <__assert_func>
        dma2dColorMode = DMA2D_INPUT_ARGB8888;
 80021c2:	2000      	movs	r0, #0
 80021c4:	e7f4      	b.n	80021b0 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x18>
    switch (format)
 80021c6:	2001      	movs	r0, #1
    return dma2dColorMode;
 80021c8:	e7f2      	b.n	80021b0 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x18>
 80021ca:	bf00      	nop
 80021cc:	08033fe1 	.word	0x08033fe1
 80021d0:	080340a4 	.word	0x080340a4
 80021d4:	08034047 	.word	0x08034047

080021d8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE>:
{
 80021d8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 80021dc:	f891 801d 	ldrb.w	r8, [r1, #29]
{
 80021e0:	460c      	mov	r4, r1
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 80021e2:	4640      	mov	r0, r8
 80021e4:	f7ff ffd8 	bl	8002198 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 80021e8:	7fa7      	ldrb	r7, [r4, #30]
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 80021ea:	4605      	mov	r5, r0
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 80021ec:	4638      	mov	r0, r7
 80021ee:	f7ff ffd3 	bl	8002198 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>
 80021f2:	4606      	mov	r6, r0
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 80021f4:	4638      	mov	r0, r7
 80021f6:	f7ff ff75 	bl	80020e4 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 80021fa:	8aa1      	ldrh	r1, [r4, #20]
 80021fc:	8b62      	ldrh	r2, [r4, #26]
 80021fe:	4b44      	ldr	r3, [pc, #272]	@ (8002310 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>)
 8002200:	1a52      	subs	r2, r2, r1
 8002202:	641a      	str	r2, [r3, #64]	@ 0x40
    WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8002204:	619a      	str	r2, [r3, #24]
    WRITE_REG(DMA2D->FGOR, blitOp.srcLoopStride - blitOp.nSteps);
 8002206:	8b22      	ldrh	r2, [r4, #24]
 8002208:	1a52      	subs	r2, r2, r1
 800220a:	611a      	str	r2, [r3, #16]
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 800220c:	8ae2      	ldrh	r2, [r4, #22]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 800220e:	6358      	str	r0, [r3, #52]	@ 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8002210:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8002214:	645a      	str	r2, [r3, #68]	@ 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8002216:	6921      	ldr	r1, [r4, #16]
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
 8002218:	6862      	ldr	r2, [r4, #4]
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 800221a:	63d9      	str	r1, [r3, #60]	@ 0x3c
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
 800221c:	60da      	str	r2, [r3, #12]
    switch (blitOp.operation)
 800221e:	6820      	ldr	r0, [r4, #0]
 8002220:	2880      	cmp	r0, #128	@ 0x80
 8002222:	d028      	beq.n	8002276 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x9e>
 8002224:	7f22      	ldrb	r2, [r4, #28]
 8002226:	d80f      	bhi.n	8002248 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x70>
 8002228:	2820      	cmp	r0, #32
 800222a:	d067      	beq.n	80022fc <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x124>
 800222c:	2840      	cmp	r0, #64	@ 0x40
 800222e:	d065      	beq.n	80022fc <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x124>
 8002230:	2804      	cmp	r0, #4
 8002232:	d01a      	beq.n	800226a <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x92>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8002234:	4b36      	ldr	r3, [pc, #216]	@ (8002310 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>)
 8002236:	ea45 6502 	orr.w	r5, r5, r2, lsl #24
 800223a:	f445 3500 	orr.w	r5, r5, #131072	@ 0x20000
        if (blitOp.srcFormat != blitOp.dstFormat)
 800223e:	45b8      	cmp	r8, r7
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8002240:	61dd      	str	r5, [r3, #28]
        if (blitOp.srcFormat != blitOp.dstFormat)
 8002242:	d061      	beq.n	8002308 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x130>
            WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START);
 8002244:	4a33      	ldr	r2, [pc, #204]	@ (8002314 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x13c>)
 8002246:	e044      	b.n	80022d2 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xfa>
    switch (blitOp.operation)
 8002248:	f5b0 7f80 	cmp.w	r0, #256	@ 0x100
 800224c:	d004      	beq.n	8002258 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x80>
 800224e:	f5b0 7f00 	cmp.w	r0, #512	@ 0x200
 8002252:	d1ef      	bne.n	8002234 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x5c>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8002254:	4830      	ldr	r0, [pc, #192]	@ (8002318 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x140>)
 8002256:	e000      	b.n	800225a <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x82>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8002258:	4830      	ldr	r0, [pc, #192]	@ (800231c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x144>)
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 800225a:	ea40 6202 	orr.w	r2, r0, r2, lsl #24
 800225e:	61da      	str	r2, [r3, #28]
 8002260:	68e2      	ldr	r2, [r4, #12]
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
 8002262:	621a      	str	r2, [r3, #32]
        WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8002264:	625e      	str	r6, [r3, #36]	@ 0x24
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8002266:	6159      	str	r1, [r3, #20]
 8002268:	e032      	b.n	80022d0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xf8>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 800226a:	ea45 6202 	orr.w	r2, r5, r2, lsl #24
 800226e:	f442 3200 	orr.w	r2, r2, #131072	@ 0x20000
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8002272:	61da      	str	r2, [r3, #28]
 8002274:	e7f6      	b.n	8002264 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x8c>
            const clutData_t* const palette = reinterpret_cast<const clutData_t*>(blitOp.pClut);
 8002276:	68a0      	ldr	r0, [r4, #8]
            WRITE_REG(DMA2D->FGCMAR, reinterpret_cast<uint32_t>(&palette->data));
 8002278:	1d02      	adds	r2, r0, #4
 800227a:	62da      	str	r2, [r3, #44]	@ 0x2c
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 800227c:	7f22      	ldrb	r2, [r4, #28]
 800227e:	ea45 6502 	orr.w	r5, r5, r2, lsl #24
 8002282:	f445 3500 	orr.w	r5, r5, #131072	@ 0x20000
 8002286:	61dd      	str	r5, [r3, #28]
            WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8002288:	625e      	str	r6, [r3, #36]	@ 0x24
            WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 800228a:	6159      	str	r1, [r3, #20]
            switch ((Bitmap::ClutFormat)palette->format)
 800228c:	7801      	ldrb	r1, [r0, #0]
 800228e:	b141      	cbz	r1, 80022a2 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xca>
 8002290:	2901      	cmp	r1, #1
 8002292:	d021      	beq.n	80022d8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x100>
                assert(0 && "Unsupported format");
 8002294:	f240 1111 	movw	r1, #273	@ 0x111
 8002298:	4b21      	ldr	r3, [pc, #132]	@ (8002320 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x148>)
 800229a:	4a22      	ldr	r2, [pc, #136]	@ (8002324 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x14c>)
 800229c:	4822      	ldr	r0, [pc, #136]	@ (8002328 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x150>)
 800229e:	f030 fa6b 	bl	8032778 <__assert_func>
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_ARGB8888 << DMA2D_FGPFCCR_CCM_Pos)));
 80022a2:	69da      	ldr	r2, [r3, #28]
 80022a4:	8841      	ldrh	r1, [r0, #2]
 80022a6:	f422 427f 	bic.w	r2, r2, #65280	@ 0xff00
 80022aa:	3901      	subs	r1, #1
 80022ac:	f022 0210 	bic.w	r2, r2, #16
 80022b0:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
            bool blend = true;
 80022b4:	2101      	movs	r1, #1
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_ARGB8888 << DMA2D_FGPFCCR_CCM_Pos)));
 80022b6:	61da      	str	r2, [r3, #28]
            SET_BIT(DMA2D->FGPFCCR, DMA2D_FGPFCCR_START);
 80022b8:	4b15      	ldr	r3, [pc, #84]	@ (8002310 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>)
 80022ba:	69da      	ldr	r2, [r3, #28]
 80022bc:	f042 0220 	orr.w	r2, r2, #32
 80022c0:	61da      	str	r2, [r3, #28]
            while ((READ_REG(DMA2D->FGPFCCR) & DMA2D_FGPFCCR_START) != 0U)
 80022c2:	69da      	ldr	r2, [r3, #28]
 80022c4:	0692      	lsls	r2, r2, #26
 80022c6:	d4fc      	bmi.n	80022c2 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xea>
            DMA2D->IFCR = (DMA2D_FLAG_CTC);
 80022c8:	2210      	movs	r2, #16
 80022ca:	609a      	str	r2, [r3, #8]
            if (blend)
 80022cc:	2900      	cmp	r1, #0
 80022ce:	d0b9      	beq.n	8002244 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x6c>
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
 80022d0:	4a16      	ldr	r2, [pc, #88]	@ (800232c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x154>)
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START);
 80022d2:	601a      	str	r2, [r3, #0]
}
 80022d4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
                if (blitOp.alpha == 255)
 80022d8:	f1b2 01ff 	subs.w	r1, r2, #255	@ 0xff
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 80022dc:	69da      	ldr	r2, [r3, #28]
 80022de:	8840      	ldrh	r0, [r0, #2]
 80022e0:	f422 427f 	bic.w	r2, r2, #65280	@ 0xff00
 80022e4:	f100 30ff 	add.w	r0, r0, #4294967295
 80022e8:	f022 0210 	bic.w	r2, r2, #16
 80022ec:	ea42 2200 	orr.w	r2, r2, r0, lsl #8
 80022f0:	f042 0210 	orr.w	r2, r2, #16
                if (blitOp.alpha == 255)
 80022f4:	bf18      	it	ne
 80022f6:	2101      	movne	r1, #1
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 80022f8:	61da      	str	r2, [r3, #28]
                break;
 80022fa:	e7dd      	b.n	80022b8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xe0>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 80022fc:	ea45 6202 	orr.w	r2, r5, r2, lsl #24
 8002300:	4b03      	ldr	r3, [pc, #12]	@ (8002310 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>)
 8002302:	f442 3200 	orr.w	r2, r2, #131072	@ 0x20000
 8002306:	e7b4      	b.n	8002272 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x9a>
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START);
 8002308:	f240 2201 	movw	r2, #513	@ 0x201
 800230c:	e7e1      	b.n	80022d2 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xfa>
 800230e:	bf00      	nop
 8002310:	4002b000 	.word	0x4002b000
 8002314:	00010201 	.word	0x00010201
 8002318:	00020009 	.word	0x00020009
 800231c:	0002000a 	.word	0x0002000a
 8002320:	080340ee 	.word	0x080340ee
 8002324:	08034108 	.word	0x08034108
 8002328:	08034047 	.word	0x08034047
 800232c:	00020201 	.word	0x00020201

08002330 <DMA2D_XferCpltCallback>:
 8002330:	4b02      	ldr	r3, [pc, #8]	@ (800233c <DMA2D_XferCpltCallback+0xc>)
 8002332:	681b      	ldr	r3, [r3, #0]
 8002334:	6858      	ldr	r0, [r3, #4]
        dma.signalDMAInterrupt();
 8002336:	6803      	ldr	r3, [r0, #0]
 8002338:	695b      	ldr	r3, [r3, #20]
 800233a:	4718      	bx	r3
 800233c:	200830a4 	.word	0x200830a4

08002340 <_ZN8STM32DMA18externalJobExecuteEv>:
     *
     * @param None
     */
    void externalJobExecute()
    {
        isRunning = true;
 8002340:	2301      	movs	r3, #1
        if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].DoCropping)
 8002342:	221c      	movs	r2, #28
 8002344:	4908      	ldr	r1, [pc, #32]	@ (8002368 <_ZN8STM32DMA18externalJobExecuteEv+0x28>)
        isRunning = true;
 8002346:	7203      	strb	r3, [r0, #8]
        if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].DoCropping)
 8002348:	6808      	ldr	r0, [r1, #0]
 800234a:	4b08      	ldr	r3, [pc, #32]	@ (800236c <_ZN8STM32DMA18externalJobExecuteEv+0x2c>)
 800234c:	fb02 3000 	mla	r0, r2, r0, r3
 8002350:	7e00      	ldrb	r0, [r0, #24]
 8002352:	b120      	cbz	r0, 800235e <_ZN8STM32DMA18externalJobExecuteEv+0x1e>
        {
            DMA2D_CropBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
 8002354:	6808      	ldr	r0, [r1, #0]
 8002356:	fb02 3000 	mla	r0, r2, r0, r3
 800235a:	f7ff bd71 	b.w	8001e40 <DMA2D_CropBuffer>
        }
        else
        {
            DMA2D_CopyBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
 800235e:	6808      	ldr	r0, [r1, #0]
 8002360:	fb02 3000 	mla	r0, r2, r0, r3
 8002364:	f7ff bd20 	b.w	8001da8 <DMA2D_CopyBuffer>
 8002368:	20000700 	.word	0x20000700
 800236c:	20000004 	.word	0x20000004

08002370 <_ZN8STM32DMA18signalDMAInterruptEv>:
        if (!started_by_external_job)
 8002370:	f890 3da0 	ldrb.w	r3, [r0, #3488]	@ 0xda0
    virtual void signalDMAInterrupt()
 8002374:	b510      	push	{r4, lr}
 8002376:	4604      	mov	r4, r0
        if (!started_by_external_job)
 8002378:	b9ab      	cbnz	r3, 80023a6 <_ZN8STM32DMA18signalDMAInterruptEv+0x36>
            executeCompleted();
 800237a:	6803      	ldr	r3, [r0, #0]
 800237c:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800237e:	4798      	blx	r3
            if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL && !DMA2D_CopyBufferEnd && !isRunning)
 8002380:	221c      	movs	r2, #28
 8002382:	4b17      	ldr	r3, [pc, #92]	@ (80023e0 <_ZN8STM32DMA18signalDMAInterruptEv+0x70>)
 8002384:	681b      	ldr	r3, [r3, #0]
 8002386:	4353      	muls	r3, r2
 8002388:	4a16      	ldr	r2, [pc, #88]	@ (80023e4 <_ZN8STM32DMA18signalDMAInterruptEv+0x74>)
 800238a:	5cd3      	ldrb	r3, [r2, r3]
 800238c:	2b01      	cmp	r3, #1
 800238e:	d109      	bne.n	80023a4 <_ZN8STM32DMA18signalDMAInterruptEv+0x34>
 8002390:	4a15      	ldr	r2, [pc, #84]	@ (80023e8 <_ZN8STM32DMA18signalDMAInterruptEv+0x78>)
 8002392:	6812      	ldr	r2, [r2, #0]
 8002394:	b932      	cbnz	r2, 80023a4 <_ZN8STM32DMA18signalDMAInterruptEv+0x34>
 8002396:	7a22      	ldrb	r2, [r4, #8]
 8002398:	b922      	cbnz	r2, 80023a4 <_ZN8STM32DMA18signalDMAInterruptEv+0x34>
                externalJobExecute();
 800239a:	4620      	mov	r0, r4
                started_by_external_job = true;
 800239c:	f884 3da0 	strb.w	r3, [r4, #3488]	@ 0xda0
                externalJobExecute();
 80023a0:	f7ff ffce 	bl	8002340 <_ZN8STM32DMA18externalJobExecuteEv>
    }
 80023a4:	bd10      	pop	{r4, pc}
        if (isRunning)
 80023a6:	7a03      	ldrb	r3, [r0, #8]
 80023a8:	b14b      	cbz	r3, 80023be <_ZN8STM32DMA18signalDMAInterruptEv+0x4e>
            isRunning = false;
 80023aa:	2300      	movs	r3, #0
 80023ac:	7203      	strb	r3, [r0, #8]
            DMA2D_ExternalJobCompleted(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
 80023ae:	201c      	movs	r0, #28
 80023b0:	4b0b      	ldr	r3, [pc, #44]	@ (80023e0 <_ZN8STM32DMA18signalDMAInterruptEv+0x70>)
 80023b2:	681a      	ldr	r2, [r3, #0]
 80023b4:	4b0b      	ldr	r3, [pc, #44]	@ (80023e4 <_ZN8STM32DMA18signalDMAInterruptEv+0x74>)
 80023b6:	fb00 3002 	mla	r0, r0, r2, r3
 80023ba:	f7ff fdc3 	bl	8001f44 <DMA2D_ExternalJobCompleted>
            if (!queue.isEmpty() && isAllowed)
 80023be:	6860      	ldr	r0, [r4, #4]
 80023c0:	6803      	ldr	r3, [r0, #0]
 80023c2:	681b      	ldr	r3, [r3, #0]
 80023c4:	4798      	blx	r3
 80023c6:	2800      	cmp	r0, #0
 80023c8:	d1ec      	bne.n	80023a4 <_ZN8STM32DMA18signalDMAInterruptEv+0x34>
 80023ca:	7a63      	ldrb	r3, [r4, #9]
 80023cc:	2b00      	cmp	r3, #0
 80023ce:	d0e9      	beq.n	80023a4 <_ZN8STM32DMA18signalDMAInterruptEv+0x34>
                execute();
 80023d0:	6823      	ldr	r3, [r4, #0]
                started_by_external_job = false;
 80023d2:	f884 0da0 	strb.w	r0, [r4, #3488]	@ 0xda0
                execute();
 80023d6:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80023d8:	4620      	mov	r0, r4
    }
 80023da:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
                execute();
 80023de:	4718      	bx	r3
 80023e0:	20000700 	.word	0x20000700
 80023e4:	20000004 	.word	0x20000004
 80023e8:	200006fc 	.word	0x200006fc

080023ec <_ZN8STM32DMA5startEv>:
    virtual void start()
 80023ec:	b510      	push	{r4, lr}
 80023ee:	4604      	mov	r4, r0
        if (!queue.isEmpty() && isAllowed && !isRunning)
 80023f0:	6840      	ldr	r0, [r0, #4]
 80023f2:	6803      	ldr	r3, [r0, #0]
 80023f4:	681b      	ldr	r3, [r3, #0]
 80023f6:	4798      	blx	r3
 80023f8:	b958      	cbnz	r0, 8002412 <_ZN8STM32DMA5startEv+0x26>
 80023fa:	7a63      	ldrb	r3, [r4, #9]
 80023fc:	b14b      	cbz	r3, 8002412 <_ZN8STM32DMA5startEv+0x26>
 80023fe:	7a23      	ldrb	r3, [r4, #8]
 8002400:	b93b      	cbnz	r3, 8002412 <_ZN8STM32DMA5startEv+0x26>
                started_by_external_job = false;
 8002402:	f884 3da0 	strb.w	r3, [r4, #3488]	@ 0xda0
                execute();
 8002406:	6823      	ldr	r3, [r4, #0]
 8002408:	4620      	mov	r0, r4
    }
 800240a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
                execute();
 800240e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002410:	4718      	bx	r3
        else if ((Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL) && !isRunning)
 8002412:	221c      	movs	r2, #28
 8002414:	4b07      	ldr	r3, [pc, #28]	@ (8002434 <_ZN8STM32DMA5startEv+0x48>)
 8002416:	681b      	ldr	r3, [r3, #0]
 8002418:	4353      	muls	r3, r2
 800241a:	4a07      	ldr	r2, [pc, #28]	@ (8002438 <_ZN8STM32DMA5startEv+0x4c>)
 800241c:	5cd3      	ldrb	r3, [r2, r3]
 800241e:	2b01      	cmp	r3, #1
 8002420:	d106      	bne.n	8002430 <_ZN8STM32DMA5startEv+0x44>
 8002422:	7a22      	ldrb	r2, [r4, #8]
 8002424:	b922      	cbnz	r2, 8002430 <_ZN8STM32DMA5startEv+0x44>
            externalJobExecute();
 8002426:	4620      	mov	r0, r4
            started_by_external_job = true;
 8002428:	f884 3da0 	strb.w	r3, [r4, #3488]	@ 0xda0
            externalJobExecute();
 800242c:	f7ff ff88 	bl	8002340 <_ZN8STM32DMA18externalJobExecuteEv>
    }
 8002430:	bd10      	pop	{r4, pc}
 8002432:	bf00      	nop
 8002434:	20000700 	.word	0x20000700
 8002438:	20000004 	.word	0x20000004

0800243c <_ZN8STM32DMAC1Ev>:
STM32DMA::STM32DMA()
 800243c:	b570      	push	{r4, r5, r6, lr}
 800243e:	4604      	mov	r4, r0
     * Constructs a DMA Interface object.
     *
     * @param [in] dmaQueue Reference to the queue of DMA operations.
     */
    DMA_Interface(DMA_Queue& dmaQueue)
        : queue(dmaQueue), isRunning(false), isAllowed(false)
 8002440:	2600      	movs	r6, #0
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0])), started_by_external_job(false)
 8002442:	4625      	mov	r5, r4
 8002444:	4b0a      	ldr	r3, [pc, #40]	@ (8002470 <_ZN8STM32DMAC1Ev+0x34>)
 8002446:	300c      	adds	r0, #12
 8002448:	6060      	str	r0, [r4, #4]
 800244a:	7226      	strb	r6, [r4, #8]
 800244c:	7266      	strb	r6, [r4, #9]
 800244e:	f845 3b20 	str.w	r3, [r5], #32
 8002452:	2260      	movs	r2, #96	@ 0x60
 8002454:	4629      	mov	r1, r5
 8002456:	f009 fd69 	bl	800bf2c <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>
 800245a:	f504 635a 	add.w	r3, r4, #3488	@ 0xda0
        : color(0)
 800245e:	60ee      	str	r6, [r5, #12]
 8002460:	3524      	adds	r5, #36	@ 0x24
 8002462:	429d      	cmp	r5, r3
 8002464:	d1fb      	bne.n	800245e <_ZN8STM32DMAC1Ev+0x22>
}
 8002466:	4620      	mov	r0, r4
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0])), started_by_external_job(false)
 8002468:	f884 6da0 	strb.w	r6, [r4, #3488]	@ 0xda0
}
 800246c:	bd70      	pop	{r4, r5, r6, pc}
 800246e:	bf00      	nop
 8002470:	08034150 	.word	0x08034150

08002474 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    };

    virtual uint16_t capacity() const
    {
        return NUMBER_OF_ELEMENTS;
    }
 8002474:	2001      	movs	r0, #1
 8002476:	4770      	bx	lr

08002478 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:

    virtual uint32_t element_size()
    {
        return sizeof(stBlocks[0]);
    }
 8002478:	200c      	movs	r0, #12
 800247a:	4770      	bx	lr

0800247c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE7elementEt>:

protected:
    virtual void* element(uint16_t index)
    {
        return &stBlocks[index];
 800247c:	230c      	movs	r3, #12
 800247e:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8002482:	3008      	adds	r0, #8
 8002484:	4770      	bx	lr

08002486 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE7elementEt>:

    virtual const void* element(uint16_t index) const
    {
        return &stBlocks[index];
 8002486:	230c      	movs	r3, #12
 8002488:	fb03 0001 	mla	r0, r3, r1, r0
    }
 800248c:	3008      	adds	r0, #8
 800248e:	4770      	bx	lr

08002490 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI15GameScreen1ViewNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 8002490:	2001      	movs	r0, #1
 8002492:	4770      	bx	lr

08002494 <_ZN8touchgfx9PartitionINS_4meta8TypeListI15GameScreen1ViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 8002494:	f44f 7032 	mov.w	r0, #712	@ 0x2c8
 8002498:	4770      	bx	lr

0800249a <_ZN8touchgfx9PartitionINS_4meta8TypeListI15GameScreen1ViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 800249a:	f44f 7332 	mov.w	r3, #712	@ 0x2c8
 800249e:	fb03 0001 	mla	r0, r3, r1, r0
    }
 80024a2:	3008      	adds	r0, #8
 80024a4:	4770      	bx	lr

080024a6 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI15GameScreen1ViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 80024a6:	f44f 7332 	mov.w	r3, #712	@ 0x2c8
 80024aa:	fb03 0001 	mla	r0, r3, r1, r0
    }
 80024ae:	3008      	adds	r0, #8
 80024b0:	4770      	bx	lr

080024b2 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 80024b2:	2001      	movs	r0, #1
 80024b4:	4770      	bx	lr

080024b6 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 80024b6:	2010      	movs	r0, #16
 80024b8:	4770      	bx	lr

080024ba <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 80024ba:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 80024be:	3008      	adds	r0, #8
 80024c0:	4770      	bx	lr

080024c2 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 80024c2:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 80024c6:	3008      	adds	r0, #8
 80024c8:	4770      	bx	lr

080024ca <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>:
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedTransitionTypes >::type MaxGeneratedTransitionType;

    virtual void gotoStartScreen(FrontendApplication& app)
    {
        app.gotoGameScreen1ScreenNoTransition();
 80024ca:	4608      	mov	r0, r1
 80024cc:	f000 be84 	b.w	80031d8 <_ZN23FrontendApplicationBase33gotoGameScreen1ScreenNoTransitionEv>

080024d0 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>:
class Partition : public AbstractPartition
 80024d0:	b510      	push	{r4, lr}
 80024d2:	4604      	mov	r4, r0
 80024d4:	4b02      	ldr	r3, [pc, #8]	@ (80024e0 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 80024d6:	6003      	str	r3, [r0, #0]
 80024d8:	f008 fb73 	bl	800abc2 <_ZN8touchgfx17AbstractPartitionD1Ev>
 80024dc:	4620      	mov	r0, r4
 80024de:	bd10      	pop	{r4, pc}
 80024e0:	08034208 	.word	0x08034208

080024e4 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED0Ev>:
 80024e4:	b510      	push	{r4, lr}
 80024e6:	4604      	mov	r4, r0
 80024e8:	f7ff fff2 	bl	80024d0 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>
 80024ec:	4620      	mov	r0, r4
 80024ee:	2114      	movs	r1, #20
 80024f0:	f02e ff69 	bl	80313c6 <_ZdlPvj>
 80024f4:	4620      	mov	r0, r4
 80024f6:	bd10      	pop	{r4, pc}

080024f8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI15GameScreen1ViewNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 80024f8:	b510      	push	{r4, lr}
 80024fa:	4604      	mov	r4, r0
 80024fc:	4b02      	ldr	r3, [pc, #8]	@ (8002508 <_ZN8touchgfx9PartitionINS_4meta8TypeListI15GameScreen1ViewNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 80024fe:	6003      	str	r3, [r0, #0]
 8002500:	f008 fb5f 	bl	800abc2 <_ZN8touchgfx17AbstractPartitionD1Ev>
 8002504:	4620      	mov	r0, r4
 8002506:	bd10      	pop	{r4, pc}
 8002508:	080341d4 	.word	0x080341d4

0800250c <_ZN8touchgfx9PartitionINS_4meta8TypeListI15GameScreen1ViewNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 800250c:	b510      	push	{r4, lr}
 800250e:	4604      	mov	r4, r0
 8002510:	f7ff fff2 	bl	80024f8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI15GameScreen1ViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8002514:	4620      	mov	r0, r4
 8002516:	f44f 7134 	mov.w	r1, #720	@ 0x2d0
 800251a:	f02e ff54 	bl	80313c6 <_ZdlPvj>
 800251e:	4620      	mov	r0, r4
 8002520:	bd10      	pop	{r4, pc}
	...

08002524 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8002524:	b510      	push	{r4, lr}
 8002526:	4604      	mov	r4, r0
 8002528:	4b02      	ldr	r3, [pc, #8]	@ (8002534 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 800252a:	6003      	str	r3, [r0, #0]
 800252c:	f008 fb49 	bl	800abc2 <_ZN8touchgfx17AbstractPartitionD1Ev>
 8002530:	4620      	mov	r0, r4
 8002532:	bd10      	pop	{r4, pc}
 8002534:	080341a0 	.word	0x080341a0

08002538 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8002538:	b510      	push	{r4, lr}
 800253a:	4604      	mov	r4, r0
 800253c:	f7ff fff2 	bl	8002524 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8002540:	4620      	mov	r0, r4
 8002542:	2118      	movs	r1, #24
 8002544:	f02e ff3f 	bl	80313c6 <_ZdlPvj>
 8002548:	4620      	mov	r0, r4
 800254a:	bd10      	pop	{r4, pc}

0800254c <_ZN12FrontendHeapD1Ev>:
#ifndef FRONTENDHEAP_HPP
#define FRONTENDHEAP_HPP

#include <gui_generated/common/FrontendHeapBase.hpp>

class FrontendHeap : public FrontendHeapBase
 800254c:	b510      	push	{r4, lr}
 800254e:	4604      	mov	r4, r0
 8002550:	4b07      	ldr	r3, [pc, #28]	@ (8002570 <_ZN12FrontendHeapD1Ev+0x24>)
 8002552:	6003      	str	r3, [r0, #0]
 8002554:	f500 703f 	add.w	r0, r0, #764	@ 0x2fc
 8002558:	f7ff ffba 	bl	80024d0 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>
 800255c:	f104 002c 	add.w	r0, r4, #44	@ 0x2c
 8002560:	f7ff ffca 	bl	80024f8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI15GameScreen1ViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8002564:	f104 0014 	add.w	r0, r4, #20
 8002568:	f7ff ffdc 	bl	8002524 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 800256c:	4620      	mov	r0, r4
 800256e:	bd10      	pop	{r4, pc}
 8002570:	0803423c 	.word	0x0803423c

08002574 <__tcf_0>:
                            > > CombinedTransitionTypes;
    typedef touchgfx::meta::select_type_maxsize< CombinedTransitionTypes >::type MaxTransitionType;

    static FrontendHeap& getInstance()
    {
        static FrontendHeap instance;
 8002574:	b508      	push	{r3, lr}
 8002576:	4802      	ldr	r0, [pc, #8]	@ (8002580 <__tcf_0+0xc>)
 8002578:	f7ff ffe8 	bl	800254c <_ZN12FrontendHeapD1Ev>
 800257c:	bd08      	pop	{r3, pc}
 800257e:	bf00      	nop
 8002580:	2000b610 	.word	0x2000b610

08002584 <_ZN12FrontendHeapD0Ev>:
class FrontendHeap : public FrontendHeapBase
 8002584:	b510      	push	{r4, lr}
 8002586:	4604      	mov	r4, r0
 8002588:	f7ff ffe0 	bl	800254c <_ZN12FrontendHeapD1Ev>
 800258c:	4620      	mov	r0, r4
 800258e:	f44f 618e 	mov.w	r1, #1136	@ 0x470
 8002592:	f02e ff18 	bl	80313c6 <_ZdlPvj>
 8002596:	4620      	mov	r0, r4
 8002598:	bd10      	pop	{r4, pc}
	...

0800259c <touchgfx_init>:
static ApplicationFontProvider fontProvider;
static Texts texts;
static TouchGFXHAL hal(dma, display, tc, 800, 480);

void touchgfx_init()
{
 800259c:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
    Bitmap::registerBitmapDatabase(BitmapDatabase::getInstance(), BitmapDatabase::getInstanceSize());
 80025a0:	f000 fcb4 	bl	8002f0c <_ZN14BitmapDatabase11getInstanceEv>
 80025a4:	2400      	movs	r4, #0
 80025a6:	4605      	mov	r5, r0
 80025a8:	f000 fcb4 	bl	8002f14 <_ZN14BitmapDatabase15getInstanceSizeEv>
 80025ac:	4623      	mov	r3, r4
 80025ae:	4601      	mov	r1, r0
 80025b0:	4622      	mov	r2, r4
 80025b2:	4628      	mov	r0, r5
 80025b4:	9400      	str	r4, [sp, #0]
 80025b6:	f00d fe29 	bl	801020c <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>
    TypedText::registerTexts(&texts);
    Texts::setLanguage(0);

    display.setFrameBufferFormat(Bitmap::RGB565);
 80025ba:	4d28      	ldr	r5, [pc, #160]	@ (800265c <touchgfx_init+0xc0>)
     *
     * @param  t The array of texts.
     */
    static void registerTexts(const Texts* t)
    {
        texts = t;
 80025bc:	4a28      	ldr	r2, [pc, #160]	@ (8002660 <touchgfx_init+0xc4>)
 80025be:	4b29      	ldr	r3, [pc, #164]	@ (8002664 <touchgfx_init+0xc8>)
    Texts::setLanguage(0);
 80025c0:	4620      	mov	r0, r4
 80025c2:	601a      	str	r2, [r3, #0]
 80025c4:	f001 f9ac 	bl	8003920 <_ZN8touchgfx5Texts11setLanguageEt>
    display.setFrameBufferFormat(Bitmap::RGB565);
 80025c8:	4621      	mov	r1, r4
 80025ca:	4628      	mov	r0, r5
 80025cc:	f022 fdbc 	bl	8025148 <_ZN8touchgfx8LCDGPU2D20setFrameBufferFormatENS_6Bitmap12BitmapFormatE>
     *
     * @param renderer  The renderer to be used by LCD when dealing with vector fonts.
     */
    void setVectorFontRenderer(VectorFontRenderer* renderer)
    {
        vectorFontRenderer = renderer;
 80025d0:	4b25      	ldr	r3, [pc, #148]	@ (8002668 <touchgfx_init+0xcc>)

    display.setVectorFontRenderer(&vectorFontRenderer);

    FontManager::setFontProvider(&fontProvider);
 80025d2:	4826      	ldr	r0, [pc, #152]	@ (800266c <touchgfx_init+0xd0>)
 80025d4:	60ab      	str	r3, [r5, #8]
 80025d6:	f00d fd81 	bl	80100dc <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>
        static FrontendHeap instance;
 80025da:	4d25      	ldr	r5, [pc, #148]	@ (8002670 <touchgfx_init+0xd4>)
 80025dc:	e8d5 3faf 	lda	r3, [r5]
 80025e0:	07db      	lsls	r3, r3, #31
 80025e2:	d435      	bmi.n	8002650 <touchgfx_init+0xb4>
 80025e4:	4628      	mov	r0, r5
 80025e6:	f02e fef0 	bl	80313ca <__cxa_guard_acquire>
 80025ea:	b388      	cbz	r0, 8002650 <touchgfx_init+0xb4>
     */
    MVPHeap(AbstractPartition& pres,
            AbstractPartition& scr,
            AbstractPartition& tra,
            MVPApplication& app)
        : presenterStorage(pres),
 80025ec:	4c21      	ldr	r4, [pc, #132]	@ (8002674 <touchgfx_init+0xd8>)
    Model model;
    FrontendApplication app;

private:
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
                     app(model, *this)
 80025ee:	4b22      	ldr	r3, [pc, #136]	@ (8002678 <touchgfx_init+0xdc>)
          screenStorage(scr),
          transitionStorage(tra),
          frontendApplication(app)
 80025f0:	f504 7645 	add.w	r6, r4, #788	@ 0x314
        : presenterStorage(pres),
 80025f4:	f104 0014 	add.w	r0, r4, #20
          screenStorage(scr),
 80025f8:	f104 082c 	add.w	r8, r4, #44	@ 0x2c
          transitionStorage(tra),
 80025fc:	f504 773f 	add.w	r7, r4, #764	@ 0x2fc
 8002600:	6023      	str	r3, [r4, #0]
        : presenterStorage(pres),
 8002602:	6060      	str	r0, [r4, #4]
          screenStorage(scr),
 8002604:	f8c4 8008 	str.w	r8, [r4, #8]
          transitionStorage(tra),
 8002608:	60e7      	str	r7, [r4, #12]
          frontendApplication(app)
 800260a:	6126      	str	r6, [r4, #16]
 800260c:	f008 fada 	bl	800abc4 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8002610:	4b1a      	ldr	r3, [pc, #104]	@ (800267c <touchgfx_init+0xe0>)
 8002612:	4640      	mov	r0, r8
 8002614:	6163      	str	r3, [r4, #20]
 8002616:	f008 fad5 	bl	800abc4 <_ZN8touchgfx17AbstractPartitionC1Ev>
 800261a:	4b19      	ldr	r3, [pc, #100]	@ (8002680 <touchgfx_init+0xe4>)
 800261c:	4638      	mov	r0, r7
 800261e:	62e3      	str	r3, [r4, #44]	@ 0x2c
 8002620:	f008 fad0 	bl	800abc4 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8002624:	4b17      	ldr	r3, [pc, #92]	@ (8002684 <touchgfx_init+0xe8>)
 8002626:	f504 7044 	add.w	r0, r4, #784	@ 0x310
 800262a:	f8c4 32fc 	str.w	r3, [r4, #764]	@ 0x2fc
 800262e:	f001 faba 	bl	8003ba6 <_ZN5ModelC1Ev>
 8002632:	4622      	mov	r2, r4
 8002634:	f504 7144 	add.w	r1, r4, #784	@ 0x310
 8002638:	4630      	mov	r0, r6
 800263a:	f001 f9dd 	bl	80039f8 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>
 800263e:	4630      	mov	r0, r6
 8002640:	f000 fdca 	bl	80031d8 <_ZN23FrontendApplicationBase33gotoGameScreen1ScreenNoTransitionEv>
        static FrontendHeap instance;
 8002644:	4810      	ldr	r0, [pc, #64]	@ (8002688 <touchgfx_init+0xec>)
 8002646:	f030 f8b5 	bl	80327b4 <atexit>
 800264a:	4628      	mov	r0, r5
 800264c:	f02e fec9 	bl	80313e2 <__cxa_guard_release>
    (void)heap;

    /*
     * Initialize TouchGFX
     */
    hal.initialize();
 8002650:	480e      	ldr	r0, [pc, #56]	@ (800268c <touchgfx_init+0xf0>)
}
 8002652:	b002      	add	sp, #8
 8002654:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    hal.initialize();
 8002658:	f7fe bde8 	b.w	800122c <_ZN11TouchGFXHAL10initializeEv>
 800265c:	2000a014 	.word	0x2000a014
 8002660:	20009ff4 	.word	0x20009ff4
 8002664:	20083100 	.word	0x20083100
 8002668:	20009ff8 	.word	0x20009ff8
 800266c:	20000040 	.word	0x20000040
 8002670:	2000b60c 	.word	0x2000b60c
 8002674:	2000b610 	.word	0x2000b610
 8002678:	0803423c 	.word	0x0803423c
 800267c:	080341a0 	.word	0x080341a0
 8002680:	080341d4 	.word	0x080341d4
 8002684:	08034208 	.word	0x08034208
 8002688:	08002575 	.word	0x08002575
 800268c:	20009f40 	.word	0x20009f40

08002690 <touchgfx_components_init>:

void touchgfx_components_init()
{
 8002690:	b508      	push	{r3, lr}
    nema_init();
 8002692:	f00e fb71 	bl	8010d78 <nema_init>
    nema_vg_init_stencil_pool(800, 480, 1);
 8002696:	f44f 71f0 	mov.w	r1, #480	@ 0x1e0
 800269a:	f44f 7048 	mov.w	r0, #800	@ 0x320
 800269e:	2201      	movs	r2, #1
 80026a0:	f016 fdce 	bl	8019240 <nema_vg_init_stencil_pool>
    nema_vg_handle_large_coords(1, 1);
}
 80026a4:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    nema_vg_handle_large_coords(1, 1);
 80026a8:	2101      	movs	r1, #1
 80026aa:	4608      	mov	r0, r1
 80026ac:	f01a bb82 	b.w	801cdb4 <nema_vg_handle_large_coords>

080026b0 <touchgfx_taskEntry>:
     * Main event loop. Will wait for VSYNC signal, and then process next frame. Call
     * this function from your GUI task.
     *
     * Note This function never returns
     */
    hal.taskEntry();
 80026b0:	4801      	ldr	r0, [pc, #4]	@ (80026b8 <touchgfx_taskEntry+0x8>)
 80026b2:	f008 bd96 	b.w	800b1e2 <_ZN8touchgfx3HAL9taskEntryEv>
 80026b6:	bf00      	nop
 80026b8:	20009f40 	.word	0x20009f40

080026bc <_GLOBAL__sub_I_touchgfx_init>:
}
 80026bc:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
static STM32DMA dma;
 80026be:	4d13      	ldr	r5, [pc, #76]	@ (800270c <_GLOBAL__sub_I_touchgfx_init+0x50>)
{
public:

    STM32TouchController() {}
 80026c0:	4b13      	ldr	r3, [pc, #76]	@ (8002710 <_GLOBAL__sub_I_touchgfx_init+0x54>)
 80026c2:	4f14      	ldr	r7, [pc, #80]	@ (8002714 <_GLOBAL__sub_I_touchgfx_init+0x58>)
static LCDGPU2D display;
 80026c4:	4e14      	ldr	r6, [pc, #80]	@ (8002718 <_GLOBAL__sub_I_touchgfx_init+0x5c>)
static STM32DMA dma;
 80026c6:	4628      	mov	r0, r5
 80026c8:	603b      	str	r3, [r7, #0]
 80026ca:	f7ff feb7 	bl	800243c <_ZN8STM32DMAC1Ev>
static LCDGPU2D display;
 80026ce:	4630      	mov	r0, r6
 80026d0:	f022 fd2c 	bl	802512c <_ZN8touchgfx8LCDGPU2DC1Ev>
static VectorFontRendererImpl vectorFontRenderer;
 80026d4:	4811      	ldr	r0, [pc, #68]	@ (800271c <_GLOBAL__sub_I_touchgfx_init+0x60>)
 80026d6:	f00b ff37 	bl	800e548 <_ZN8touchgfx22VectorFontRendererImplC1Ev>
        touchgfx::HALGPU2D(dma, display, tc, width, height)
 80026da:	f44f 7348 	mov.w	r3, #800	@ 0x320
 80026de:	f44f 72f0 	mov.w	r2, #480	@ 0x1e0
 80026e2:	4c0f      	ldr	r4, [pc, #60]	@ (8002720 <_GLOBAL__sub_I_touchgfx_init+0x64>)
 80026e4:	e9cd 3200 	strd	r3, r2, [sp]
 80026e8:	4629      	mov	r1, r5
 80026ea:	463b      	mov	r3, r7
 80026ec:	4632      	mov	r2, r6
 80026ee:	4620      	mov	r0, r4
 80026f0:	f01e fb2e 	bl	8020d50 <_ZN8touchgfx8HALGPU2DC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt>
     * @param [in,out] display Reference to LCD interface.
     * @param [in,out] tc      Reference to Touch Controller driver.
     * @param width            Width of the display.
     * @param height           Height of the display.
     */
    TouchGFXHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) : TouchGFXGeneratedHAL(dma, display, tc, width, height)
 80026f4:	4b0b      	ldr	r3, [pc, #44]	@ (8002724 <_GLOBAL__sub_I_touchgfx_init+0x68>)
 80026f6:	6023      	str	r3, [r4, #0]
        : cc_consumed(0),
 80026f8:	2300      	movs	r3, #0
 80026fa:	f8c4 30ac 	str.w	r3, [r4, #172]	@ 0xac
          cc_in(0)
 80026fe:	f8c4 30b0 	str.w	r3, [r4, #176]	@ 0xb0
 8002702:	4b09      	ldr	r3, [pc, #36]	@ (8002728 <_GLOBAL__sub_I_touchgfx_init+0x6c>)
 8002704:	f8c4 30a8 	str.w	r3, [r4, #168]	@ 0xa8
}
 8002708:	b003      	add	sp, #12
 800270a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800270c:	2000a864 	.word	0x2000a864
 8002710:	08033994 	.word	0x08033994
 8002714:	2000b608 	.word	0x2000b608
 8002718:	2000a014 	.word	0x2000a014
 800271c:	20009ff8 	.word	0x20009ff8
 8002720:	20009f40 	.word	0x20009f40
 8002724:	08033b20 	.word	0x08033b20
 8002728:	08033950 	.word	0x08033950

0800272c <_GLOBAL__sub_D_touchgfx_init>:
static STM32DMA dma;
 800272c:	4801      	ldr	r0, [pc, #4]	@ (8002734 <_GLOBAL__sub_D_touchgfx_init+0x8>)
 800272e:	f7ff bc95 	b.w	800205c <_ZN8STM32DMAD1Ev>
 8002732:	bf00      	nop
 8002734:	2000a864 	.word	0x2000a864

08002738 <__tcf_1>:

namespace touchgfx
{
VectorRenderer* VectorRenderer::getInstance()
{
    static GPU2DVectorRenderer renderer;
 8002738:	4770      	bx	lr
	...

0800273c <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>:
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->IPR[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800273c:	2290      	movs	r2, #144	@ 0x90
 800273e:	4b04      	ldr	r3, [pc, #16]	@ (8002750 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv+0x14>)
 8002740:	f883 2376 	strb.w	r2, [r3, #886]	@ 0x376
 8002744:	f883 2387 	strb.w	r2, [r3, #903]	@ 0x387
 8002748:	f883 2384 	strb.w	r2, [r3, #900]	@ 0x384
void TouchGFXGeneratedHAL::configureInterrupts()
{
    NVIC_SetPriority(DMA2D_IRQn, 9);
    NVIC_SetPriority(LTDC_IRQn, 9);
    NVIC_SetPriority(GPU2D_IRQn, 9);
}
 800274c:	4770      	bx	lr
 800274e:	bf00      	nop
 8002750:	e000e100 	.word	0xe000e100

08002754 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>:
    NVIC_DisableIRQ(GPU2D_IRQn);
}

void TouchGFXGeneratedHAL::enableLCDControllerInterrupt()
{
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
 8002754:	4a09      	ldr	r2, [pc, #36]	@ (800277c <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x28>)
 8002756:	490a      	ldr	r1, [pc, #40]	@ (8002780 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x2c>)
 8002758:	68d3      	ldr	r3, [r2, #12]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
 800275a:	480a      	ldr	r0, [pc, #40]	@ (8002784 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x30>)
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
 800275c:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8002760:	3b01      	subs	r3, #1
 8002762:	b29b      	uxth	r3, r3
 8002764:	800b      	strh	r3, [r1, #0]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
 8002766:	6911      	ldr	r1, [r2, #16]
 8002768:	f3c1 010a 	ubfx	r1, r1, #0, #11
 800276c:	3901      	subs	r1, #1
 800276e:	8001      	strh	r1, [r0, #0]

    /* Sets the Line Interrupt position */
    LTDC->LIPCR = lcd_int_active_line;
 8002770:	6413      	str	r3, [r2, #64]	@ 0x40
    /* Line Interrupt Enable            */
    LTDC->IER |= LTDC_IER_LIE;
 8002772:	6b53      	ldr	r3, [r2, #52]	@ 0x34
 8002774:	f043 0301 	orr.w	r3, r3, #1
 8002778:	6353      	str	r3, [r2, #52]	@ 0x34
}
 800277a:	4770      	bx	lr
 800277c:	40016800 	.word	0x40016800
 8002780:	2000ba82 	.word	0x2000ba82
 8002784:	2000ba80 	.word	0x2000ba80

08002788 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>:
    HALGPU2D::endFrame();
}

uint16_t* TouchGFXGeneratedHAL::getTFTFrameBuffer() const
{
    return (uint16_t*)LTDC_Layer1->CFBAR;
 8002788:	4b01      	ldr	r3, [pc, #4]	@ (8002790 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv+0x8>)
 800278a:	f8d3 00ac 	ldr.w	r0, [r3, #172]	@ 0xac
}
 800278e:	4770      	bx	lr
 8002790:	40016800 	.word	0x40016800

08002794 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>:
void TouchGFXGeneratedHAL::setTFTFrameBuffer(uint16_t* adr)
{
    LTDC_Layer1->CFBAR = (uint32_t)adr;

    /* Reload immediate */
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 8002794:	2201      	movs	r2, #1
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 8002796:	4b02      	ldr	r3, [pc, #8]	@ (80027a0 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt+0xc>)
 8002798:	f8c3 10ac 	str.w	r1, [r3, #172]	@ 0xac
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 800279c:	625a      	str	r2, [r3, #36]	@ 0x24
}
 800279e:	4770      	bx	lr
 80027a0:	40016800 	.word	0x40016800

080027a4 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EED1Ev>:
 * Strategy:
 * Decode directly into the framebuffer in draw.
 * Tick will decide if we are going to a new frame.
 */
template <uint32_t no_streams, touchgfx::Bitmap::BitmapFormat output_format>
class DirectFrameBufferVideoController : public touchgfx::VideoController
 80027a4:	4770      	bx	lr

080027a6 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE21unregisterVideoWidgetEm>:
        return handle;
    }

    virtual void unregisterVideoWidget(const Handle handle)
    {
        streams[handle].isActive = false;
 80027a6:	2324      	movs	r3, #36	@ 0x24
 80027a8:	fb03 0001 	mla	r0, r3, r1, r0
 80027ac:	2300      	movs	r3, #0
 80027ae:	f880 3024 	strb.w	r3, [r0, #36]	@ 0x24
    }
 80027b2:	4770      	bx	lr

080027b4 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE29setVideoFrameRateCompensationEb>:
        return stream.isPlaying;
    }

    virtual void setVideoFrameRateCompensation(const bool allow)
    {
        allowSkipFrames = allow;
 80027b4:	f880 102c 	strb.w	r1, [r0, #44]	@ 0x2c
    }
 80027b8:	4770      	bx	lr

080027ba <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EED0Ev>:
class DirectFrameBufferVideoController : public touchgfx::VideoController
 80027ba:	b510      	push	{r4, lr}
 80027bc:	4604      	mov	r4, r0
 80027be:	2130      	movs	r1, #48	@ 0x30
 80027c0:	f02e fe01 	bl	80313c6 <_ZdlPvj>
 80027c4:	4620      	mov	r0, r4
 80027c6:	bd10      	pop	{r4, pc}

080027c8 <_ZN20TouchGFXGeneratedHAL10initializeEv>:
{
 80027c8:	b538      	push	{r3, r4, r5, lr}
 80027ca:	4604      	mov	r4, r0
    HALGPU2D::initialize(8192);
 80027cc:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 80027d0:	f01e fb26 	bl	8020e20 <_ZN8touchgfx8HALGPU2D10initializeEi>
    registerEventListener(*(Application::getInstance()));
 80027d4:	6823      	ldr	r3, [r4, #0]
 80027d6:	6e5d      	ldr	r5, [r3, #100]	@ 0x64
 80027d8:	f00a fd8a 	bl	800d2f0 <_ZN8touchgfx11Application11getInstanceEv>
 80027dc:	4601      	mov	r1, r0
 80027de:	4620      	mov	r0, r4
 80027e0:	47a8      	blx	r5
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
 80027e2:	6823      	ldr	r3, [r4, #0]
 80027e4:	4a06      	ldr	r2, [pc, #24]	@ (8002800 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x38>)
 80027e6:	f8d3 5088 	ldr.w	r5, [r3, #136]	@ 0x88
 80027ea:	4620      	mov	r0, r4
 80027ec:	2300      	movs	r3, #0
 80027ee:	4905      	ldr	r1, [pc, #20]	@ (8002804 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x3c>)
 80027f0:	47a8      	blx	r5
    void addDMA(touchgfx::DMA_Interface& dma)
    {
        this->dma = &dma;
 80027f2:	6862      	ldr	r2, [r4, #4]
 80027f4:	4b04      	ldr	r3, [pc, #16]	@ (8002808 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x40>)
 80027f6:	645a      	str	r2, [r3, #68]	@ 0x44
        mjpegDecoders[index] = &decoder;
 80027f8:	4a04      	ldr	r2, [pc, #16]	@ (800280c <_ZN20TouchGFXGeneratedHAL10initializeEv+0x44>)
 80027fa:	6053      	str	r3, [r2, #4]
}
 80027fc:	bd38      	pop	{r3, r4, r5, pc}
 80027fe:	bf00      	nop
 8002800:	201410c0 	.word	0x201410c0
 8002804:	200858c0 	.word	0x200858c0
 8002808:	2000bab8 	.word	0x2000bab8
 800280c:	2000ba88 	.word	0x2000ba88

08002810 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE>:
    virtual bool updateFrame(const Handle handle, touchgfx::VideoWidget& widget)
 8002810:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8002812:	4604      	mov	r4, r0
 8002814:	4610      	mov	r0, r2
        assert(handle < no_streams);
 8002816:	b129      	cbz	r1, 8002824 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x14>
 8002818:	21a9      	movs	r1, #169	@ 0xa9
 800281a:	4b3e      	ldr	r3, [pc, #248]	@ (8002914 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x104>)
 800281c:	4a3e      	ldr	r2, [pc, #248]	@ (8002918 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x108>)
 800281e:	483f      	ldr	r0, [pc, #252]	@ (800291c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x10c>)
 8002820:	f02f ffaa 	bl	8032778 <__assert_func>
        if (stream.isPlaying || stream.isShowingOneFrame)
 8002824:	f894 3025 	ldrb.w	r3, [r4, #37]	@ 0x25
 8002828:	b91b      	cbnz	r3, 8002832 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x22>
 800282a:	f894 3026 	ldrb.w	r3, [r4, #38]	@ 0x26
 800282e:	2b00      	cmp	r3, #0
 8002830:	d06e      	beq.n	8002910 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x100>
            stream.isShowingOneFrame = false;
 8002832:	2700      	movs	r7, #0
        return vSyncForFrame;
 8002834:	4b3a      	ldr	r3, [pc, #232]	@ (8002920 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x110>)
 8002836:	681b      	ldr	r3, [r3, #0]
 8002838:	f893 206b 	ldrb.w	r2, [r3, #107]	@ 0x6b
            stream.tickCount += HAL::getInstance()->getLCDRefreshCount();
 800283c:	6923      	ldr	r3, [r4, #16]
            stream.isShowingOneFrame = false;
 800283e:	f884 7026 	strb.w	r7, [r4, #38]	@ 0x26
            stream.tickCount += HAL::getInstance()->getLCDRefreshCount();
 8002842:	4413      	add	r3, r2
 8002844:	6123      	str	r3, [r4, #16]
            if (stream.doDecodeNextFrame)
 8002846:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
 800284a:	2b00      	cmp	r3, #0
 800284c:	d05c      	beq.n	8002908 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0xf8>
                widget.invalidate();
 800284e:	6803      	ldr	r3, [r0, #0]
                MJPEGDecoder* const decoder = mjpegDecoders[handle];
 8002850:	6865      	ldr	r5, [r4, #4]
                widget.invalidate();
 8002852:	695b      	ldr	r3, [r3, #20]
 8002854:	4798      	blx	r3
                if (stream.seek_to_frame > 0)
 8002856:	69e6      	ldr	r6, [r4, #28]
 8002858:	682b      	ldr	r3, [r5, #0]
 800285a:	2e00      	cmp	r6, #0
 800285c:	d02d      	beq.n	80028ba <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0xaa>
                    decoder->gotoFrame(stream.seek_to_frame);
 800285e:	4631      	mov	r1, r6
 8002860:	4628      	mov	r0, r5
 8002862:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002864:	4798      	blx	r3
                    hasMoreFrames = (stream.seek_to_frame < decoder->getNumberOfFrames());
 8002866:	682b      	ldr	r3, [r5, #0]
 8002868:	4628      	mov	r0, r5
 800286a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800286c:	69e6      	ldr	r6, [r4, #28]
 800286e:	4798      	blx	r3
 8002870:	4286      	cmp	r6, r0
 8002872:	bf2c      	ite	cs
 8002874:	2600      	movcs	r6, #0
 8002876:	2601      	movcc	r6, #1
                    stream.seek_to_frame = 0;
 8002878:	61e7      	str	r7, [r4, #28]
                stream.frameNumber = decoder->getCurrentFrameNumber();
 800287a:	682b      	ldr	r3, [r5, #0]
 800287c:	4628      	mov	r0, r5
 800287e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8002880:	4798      	blx	r3
                stream.frameCount++;
 8002882:	68a3      	ldr	r3, [r4, #8]
                stream.frameNumber = decoder->getCurrentFrameNumber();
 8002884:	60e0      	str	r0, [r4, #12]
                stream.frameCount++;
 8002886:	3301      	adds	r3, #1
 8002888:	60a3      	str	r3, [r4, #8]
    bool decodeForNextTick(Stream& stream)
    {
        // Running in UI thread

        // Compare tickCount/frameNumber to frame_rate_ticks/frame_rate_video
        if ((stream.tickCount * stream.frame_rate_video) > (stream.frame_rate_ticks * stream.frameCount))
 800288a:	e9d4 3204 	ldrd	r3, r2, [r4, #16]
 800288e:	69a1      	ldr	r1, [r4, #24]
 8002890:	4353      	muls	r3, r2
 8002892:	68a2      	ldr	r2, [r4, #8]
 8002894:	434a      	muls	r2, r1
 8002896:	4293      	cmp	r3, r2
 8002898:	d938      	bls.n	800290c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0xfc>
        {
            if (allowSkipFrames)
 800289a:	f894 002c 	ldrb.w	r0, [r4, #44]	@ 0x2c
 800289e:	b138      	cbz	r0, 80028b0 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0xa0>
            {
                stream.skip_frames = (stream.tickCount * stream.frame_rate_video - stream.frame_rate_ticks * stream.frameCount) / stream.frame_rate_ticks;
 80028a0:	1a9b      	subs	r3, r3, r2
 80028a2:	fbb3 f2f1 	udiv	r2, r3, r1
                if (stream.skip_frames > 0)
 80028a6:	4299      	cmp	r1, r3
                {
                    stream.skip_frames--;
 80028a8:	bf98      	it	ls
 80028aa:	f102 32ff 	addls.w	r2, r2, #4294967295
 80028ae:	6222      	str	r2, [r4, #32]
                }
            }
            return true;
 80028b0:	2301      	movs	r3, #1
            stream.doDecodeNextFrame = decodeForNextTick(stream);
 80028b2:	f884 3028 	strb.w	r3, [r4, #40]	@ 0x28
    }
 80028b6:	4630      	mov	r0, r6
 80028b8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
                    if (stream.skip_frames > 0)
 80028ba:	6a22      	ldr	r2, [r4, #32]
 80028bc:	b162      	cbz	r2, 80028d8 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0xc8>
                        decoder->gotoFrame(decoder->getCurrentFrameNumber() + stream.skip_frames);
 80028be:	e9d3 7309 	ldrd	r7, r3, [r3, #36]	@ 0x24
 80028c2:	4628      	mov	r0, r5
 80028c4:	4798      	blx	r3
 80028c6:	6a21      	ldr	r1, [r4, #32]
 80028c8:	4401      	add	r1, r0
 80028ca:	4628      	mov	r0, r5
 80028cc:	47b8      	blx	r7
                        stream.frameCount += stream.skip_frames;
 80028ce:	68a3      	ldr	r3, [r4, #8]
 80028d0:	6a22      	ldr	r2, [r4, #32]
                        stream.skip_frames = 0;
 80028d2:	6226      	str	r6, [r4, #32]
                        stream.frameCount += stream.skip_frames;
 80028d4:	4413      	add	r3, r2
 80028d6:	60a3      	str	r3, [r4, #8]
                    if (stream.repeat)
 80028d8:	f894 6027 	ldrb.w	r6, [r4, #39]	@ 0x27
                        hasMoreFrames = decoder->gotoNextFrame();
 80028dc:	682b      	ldr	r3, [r5, #0]
                    if (stream.repeat)
 80028de:	b126      	cbz	r6, 80028ea <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0xda>
                            hasMoreFrames = decoder->gotoNextFrame();
 80028e0:	4628      	mov	r0, r5
 80028e2:	699b      	ldr	r3, [r3, #24]
 80028e4:	4798      	blx	r3
 80028e6:	4606      	mov	r6, r0
 80028e8:	e7c7      	b.n	800287a <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x6a>
                        if (decoder->getCurrentFrameNumber() < decoder->getNumberOfFrames())
 80028ea:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80028ec:	4628      	mov	r0, r5
 80028ee:	4798      	blx	r3
 80028f0:	682b      	ldr	r3, [r5, #0]
 80028f2:	4607      	mov	r7, r0
 80028f4:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80028f6:	4628      	mov	r0, r5
 80028f8:	4798      	blx	r3
 80028fa:	4287      	cmp	r7, r0
 80028fc:	d201      	bcs.n	8002902 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0xf2>
                            hasMoreFrames = decoder->gotoNextFrame();
 80028fe:	682b      	ldr	r3, [r5, #0]
 8002900:	e7ee      	b.n	80028e0 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0xd0>
                            stream.isPlaying = false;
 8002902:	f884 6025 	strb.w	r6, [r4, #37]	@ 0x25
 8002906:	e7b8      	b.n	800287a <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x6a>
        bool hasMoreFrames = true;
 8002908:	2601      	movs	r6, #1
 800290a:	e7be      	b.n	800288a <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x7a>
        }
        return false;
 800290c:	2300      	movs	r3, #0
 800290e:	e7d0      	b.n	80028b2 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0xa2>
        bool hasMoreFrames = true;
 8002910:	2601      	movs	r6, #1
 8002912:	e7d0      	b.n	80028b6 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0xa6>
 8002914:	08034248 	.word	0x08034248
 8002918:	0803425c 	.word	0x0803425c
 800291c:	0803438d 	.word	0x0803438d
 8002920:	200830a4 	.word	0x200830a4

08002924 <_ZN20TouchGFXGeneratedHAL10beginFrameEv>:
    return HALGPU2D::beginFrame();
 8002924:	f01e b9a6 	b.w	8020c74 <_ZN8touchgfx8HALGPU2D10beginFrameEv>

08002928 <_ZN20TouchGFXGeneratedHAL8endFrameEv>:
    HALGPU2D::endFrame();
 8002928:	f01e b9d0 	b.w	8020ccc <_ZN8touchgfx8HALGPU2D8endFrameEv>

0800292c <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>:

void TouchGFXGeneratedHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
    HALGPU2D::flushFrameBuffer(rect);
 800292c:	f008 bbf6 	b.w	800b11c <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>

08002930 <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>:
}

bool TouchGFXGeneratedHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
    return HALGPU2D::blockCopy(dest, src, numBytes);
 8002930:	f008 bd65 	b.w	800b3fe <_ZN8touchgfx3HAL9blockCopyEPvPKvm>

08002934 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12getIsPlayingEm>:
    virtual bool getIsPlaying(const Handle handle)
 8002934:	b508      	push	{r3, lr}
        assert(handle < no_streams);
 8002936:	b131      	cbz	r1, 8002946 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12getIsPlayingEm+0x12>
 8002938:	f44f 7191 	mov.w	r1, #290	@ 0x122
 800293c:	4b03      	ldr	r3, [pc, #12]	@ (800294c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12getIsPlayingEm+0x18>)
 800293e:	4a04      	ldr	r2, [pc, #16]	@ (8002950 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12getIsPlayingEm+0x1c>)
 8002940:	4804      	ldr	r0, [pc, #16]	@ (8002954 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12getIsPlayingEm+0x20>)
 8002942:	f02f ff19 	bl	8032778 <__assert_func>
    }
 8002946:	f890 0025 	ldrb.w	r0, [r0, #37]	@ 0x25
 800294a:	bd08      	pop	{r3, pc}
 800294c:	08034248 	.word	0x08034248
 8002950:	080343d2 	.word	0x080343d2
 8002954:	0803438d 	.word	0x0803438d

08002958 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE19getVideoInformationEmPNS0_16VideoInformationE>:
    virtual void getVideoInformation(const Handle handle, touchgfx::VideoInformation* data)
 8002958:	b510      	push	{r4, lr}
        assert(handle < no_streams);
 800295a:	b131      	cbz	r1, 800296a <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE19getVideoInformationEmPNS0_16VideoInformationE+0x12>
 800295c:	f44f 718e 	mov.w	r1, #284	@ 0x11c
 8002960:	4b05      	ldr	r3, [pc, #20]	@ (8002978 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE19getVideoInformationEmPNS0_16VideoInformationE+0x20>)
 8002962:	4a06      	ldr	r2, [pc, #24]	@ (800297c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE19getVideoInformationEmPNS0_16VideoInformationE+0x24>)
 8002964:	4806      	ldr	r0, [pc, #24]	@ (8002980 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE19getVideoInformationEmPNS0_16VideoInformationE+0x28>)
 8002966:	f02f ff07 	bl	8032778 <__assert_func>
        mjpegDecoders[handle]->getVideoInfo(data);
 800296a:	6840      	ldr	r0, [r0, #4]
 800296c:	4611      	mov	r1, r2
    }
 800296e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        mjpegDecoders[handle]->getVideoInfo(data);
 8002972:	6803      	ldr	r3, [r0, #0]
 8002974:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002976:	4718      	bx	r3
 8002978:	08034248 	.word	0x08034248
 800297c:	080344ec 	.word	0x080344ec
 8002980:	0803438d 	.word	0x0803438d

08002984 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE21getCurrentFrameNumberEm>:
    virtual uint32_t getCurrentFrameNumber(const Handle handle)
 8002984:	b508      	push	{r3, lr}
        assert(handle < no_streams);
 8002986:	b131      	cbz	r1, 8002996 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE21getCurrentFrameNumberEm+0x12>
 8002988:	f44f 718a 	mov.w	r1, #276	@ 0x114
 800298c:	4b03      	ldr	r3, [pc, #12]	@ (800299c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE21getCurrentFrameNumberEm+0x18>)
 800298e:	4a04      	ldr	r2, [pc, #16]	@ (80029a0 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE21getCurrentFrameNumberEm+0x1c>)
 8002990:	4804      	ldr	r0, [pc, #16]	@ (80029a4 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE21getCurrentFrameNumberEm+0x20>)
 8002992:	f02f fef1 	bl	8032778 <__assert_func>
    }
 8002996:	68c0      	ldr	r0, [r0, #12]
 8002998:	bd08      	pop	{r3, pc}
 800299a:	bf00      	nop
 800299c:	08034248 	.word	0x08034248
 80029a0:	0803462a 	.word	0x0803462a
 80029a4:	0803438d 	.word	0x0803438d

080029a8 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm>:
    virtual void setCommand(const Handle handle, Command cmd, uint32_t param)
 80029a8:	b570      	push	{r4, r5, r6, lr}
 80029aa:	4604      	mov	r4, r0
        assert(handle < no_streams);
 80029ac:	b129      	cbz	r1, 80029ba <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0x12>
 80029ae:	216e      	movs	r1, #110	@ 0x6e
 80029b0:	4b26      	ldr	r3, [pc, #152]	@ (8002a4c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0xa4>)
 80029b2:	4a27      	ldr	r2, [pc, #156]	@ (8002a50 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0xa8>)
 80029b4:	4827      	ldr	r0, [pc, #156]	@ (8002a54 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0xac>)
 80029b6:	f02f fedf 	bl	8032778 <__assert_func>
        switch (cmd)
 80029ba:	2a05      	cmp	r2, #5
 80029bc:	d82b      	bhi.n	8002a16 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0x6e>
 80029be:	e8df f002 	tbb	[pc, r2]
 80029c2:	2503      	.short	0x2503
 80029c4:	3f37302b 	.word	0x3f37302b
            if (mjpegDecoders[handle]->hasVideo())
 80029c8:	6840      	ldr	r0, [r0, #4]
 80029ca:	6803      	ldr	r3, [r0, #0]
 80029cc:	691b      	ldr	r3, [r3, #16]
 80029ce:	4798      	blx	r3
 80029d0:	b308      	cbz	r0, 8002a16 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0x6e>
                stream.isPlaying = true;
 80029d2:	2301      	movs	r3, #1
 80029d4:	f884 3025 	strb.w	r3, [r4, #37]	@ 0x25
                stream.isShowingOneFrame = false;
 80029d8:	2300      	movs	r3, #0
 80029da:	f884 3026 	strb.w	r3, [r4, #38]	@ 0x26
                stream.frameCount = 0;
 80029de:	60a3      	str	r3, [r4, #8]
                stream.tickCount = 0;
 80029e0:	6123      	str	r3, [r4, #16]
                if (!stream.repeat)
 80029e2:	f894 3027 	ldrb.w	r3, [r4, #39]	@ 0x27
 80029e6:	b9b3      	cbnz	r3, 8002a16 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0x6e>
                    MJPEGDecoder* const decoder = mjpegDecoders[handle];
 80029e8:	6864      	ldr	r4, [r4, #4]
                    if (decoder->getCurrentFrameNumber() == decoder->getNumberOfFrames())
 80029ea:	6823      	ldr	r3, [r4, #0]
 80029ec:	4620      	mov	r0, r4
 80029ee:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80029f0:	4798      	blx	r3
 80029f2:	6823      	ldr	r3, [r4, #0]
 80029f4:	4605      	mov	r5, r0
 80029f6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80029f8:	4620      	mov	r0, r4
 80029fa:	4798      	blx	r3
 80029fc:	4285      	cmp	r5, r0
 80029fe:	d10a      	bne.n	8002a16 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0x6e>
                        decoder->gotoNextFrame();
 8002a00:	6823      	ldr	r3, [r4, #0]
 8002a02:	4620      	mov	r0, r4
    }
 8002a04:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
                        decoder->gotoNextFrame();
 8002a08:	699b      	ldr	r3, [r3, #24]
 8002a0a:	4718      	bx	r3
            stream.isPlaying = false;
 8002a0c:	2300      	movs	r3, #0
 8002a0e:	f880 3025 	strb.w	r3, [r0, #37]	@ 0x25
            stream.isShowingOneFrame = false;
 8002a12:	f880 3026 	strb.w	r3, [r0, #38]	@ 0x26
    }
 8002a16:	bd70      	pop	{r4, r5, r6, pc}
            stream.seek_to_frame = param;
 8002a18:	61c3      	str	r3, [r0, #28]
            stream.frameCount = 0;
 8002a1a:	2300      	movs	r3, #0
            stream.frameCount = 0;
 8002a1c:	60a3      	str	r3, [r4, #8]
            stream.tickCount = 0;
 8002a1e:	6123      	str	r3, [r4, #16]
            break;
 8002a20:	e7f9      	b.n	8002a16 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0x6e>
            stream.seek_to_frame = param;
 8002a22:	61c3      	str	r3, [r0, #28]
            stream.isShowingOneFrame = true;
 8002a24:	2301      	movs	r3, #1
 8002a26:	f880 3026 	strb.w	r3, [r0, #38]	@ 0x26
            stream.doDecodeNextFrame = true;
 8002a2a:	f880 3028 	strb.w	r3, [r0, #40]	@ 0x28
 8002a2e:	e7f4      	b.n	8002a1a <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0x72>
            stream.isPlaying = false;
 8002a30:	2300      	movs	r3, #0
            stream.seek_to_frame = 1;
 8002a32:	2201      	movs	r2, #1
            stream.isPlaying = false;
 8002a34:	f880 3025 	strb.w	r3, [r0, #37]	@ 0x25
            stream.isShowingOneFrame = false;
 8002a38:	f880 3026 	strb.w	r3, [r0, #38]	@ 0x26
            stream.seek_to_frame = 1;
 8002a3c:	61c2      	str	r2, [r0, #28]
 8002a3e:	e7ed      	b.n	8002a1c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0x74>
            stream.repeat = (param > 0);
 8002a40:	3b00      	subs	r3, #0
 8002a42:	bf18      	it	ne
 8002a44:	2301      	movne	r3, #1
 8002a46:	f880 3027 	strb.w	r3, [r0, #39]	@ 0x27
    }
 8002a4a:	e7e4      	b.n	8002a16 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0x6e>
 8002a4c:	08034248 	.word	0x08034248
 8002a50:	0803476f 	.word	0x0803476f
 8002a54:	0803438d 	.word	0x0803438d

08002a58 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmRNS0_15VideoDataReaderE>:
    virtual void setVideoData(const Handle handle, touchgfx::VideoDataReader& reader)
 8002a58:	b570      	push	{r4, r5, r6, lr}
 8002a5a:	4604      	mov	r4, r0
        assert(handle < no_streams);
 8002a5c:	460d      	mov	r5, r1
 8002a5e:	b129      	cbz	r1, 8002a6c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmRNS0_15VideoDataReaderE+0x14>
 8002a60:	215e      	movs	r1, #94	@ 0x5e
 8002a62:	4b0d      	ldr	r3, [pc, #52]	@ (8002a98 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmRNS0_15VideoDataReaderE+0x40>)
 8002a64:	4a0d      	ldr	r2, [pc, #52]	@ (8002a9c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmRNS0_15VideoDataReaderE+0x44>)
 8002a66:	480e      	ldr	r0, [pc, #56]	@ (8002aa0 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmRNS0_15VideoDataReaderE+0x48>)
 8002a68:	f02f fe86 	bl	8032778 <__assert_func>
        mjpegDecoders[handle]->setVideoData(reader);
 8002a6c:	6840      	ldr	r0, [r0, #4]
 8002a6e:	4611      	mov	r1, r2
 8002a70:	6803      	ldr	r3, [r0, #0]
 8002a72:	68db      	ldr	r3, [r3, #12]
 8002a74:	4798      	blx	r3
        stream.frameNumber = mjpegDecoders[handle]->getCurrentFrameNumber();
 8002a76:	6860      	ldr	r0, [r4, #4]
 8002a78:	6803      	ldr	r3, [r0, #0]
 8002a7a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8002a7c:	4798      	blx	r3
        setCommand(handle, PAUSE, 0);
 8002a7e:	6823      	ldr	r3, [r4, #0]
        stream.frameNumber = mjpegDecoders[handle]->getCurrentFrameNumber();
 8002a80:	60e0      	str	r0, [r4, #12]
        setCommand(handle, PAUSE, 0);
 8002a82:	6a5e      	ldr	r6, [r3, #36]	@ 0x24
 8002a84:	4629      	mov	r1, r5
 8002a86:	462b      	mov	r3, r5
 8002a88:	4620      	mov	r0, r4
 8002a8a:	46b4      	mov	ip, r6
        stream.doDecodeNextFrame = false;
 8002a8c:	f884 5028 	strb.w	r5, [r4, #40]	@ 0x28
        setCommand(handle, PAUSE, 0);
 8002a90:	2201      	movs	r2, #1
    }
 8002a92:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setCommand(handle, PAUSE, 0);
 8002a96:	4760      	bx	ip
 8002a98:	08034248 	.word	0x08034248
 8002a9c:	080348d3 	.word	0x080348d3
 8002aa0:	0803438d 	.word	0x0803438d

08002aa4 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm>:
    virtual void setVideoData(const Handle handle, const uint8_t* movie, const uint32_t length)
 8002aa4:	b570      	push	{r4, r5, r6, lr}
 8002aa6:	460d      	mov	r5, r1
 8002aa8:	4604      	mov	r4, r0
 8002aaa:	4611      	mov	r1, r2
 8002aac:	461a      	mov	r2, r3
        assert(handle < no_streams);
 8002aae:	b12d      	cbz	r5, 8002abc <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm+0x18>
 8002ab0:	214e      	movs	r1, #78	@ 0x4e
 8002ab2:	4b0d      	ldr	r3, [pc, #52]	@ (8002ae8 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm+0x44>)
 8002ab4:	4a0d      	ldr	r2, [pc, #52]	@ (8002aec <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm+0x48>)
 8002ab6:	480e      	ldr	r0, [pc, #56]	@ (8002af0 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm+0x4c>)
 8002ab8:	f02f fe5e 	bl	8032778 <__assert_func>
        mjpegDecoders[handle]->setVideoData(movie, length);
 8002abc:	6840      	ldr	r0, [r0, #4]
 8002abe:	6803      	ldr	r3, [r0, #0]
 8002ac0:	689b      	ldr	r3, [r3, #8]
 8002ac2:	4798      	blx	r3
        stream.frameNumber = mjpegDecoders[handle]->getCurrentFrameNumber();
 8002ac4:	6860      	ldr	r0, [r4, #4]
 8002ac6:	6803      	ldr	r3, [r0, #0]
 8002ac8:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8002aca:	4798      	blx	r3
        setCommand(handle, PAUSE, 0);
 8002acc:	6823      	ldr	r3, [r4, #0]
        stream.frameNumber = mjpegDecoders[handle]->getCurrentFrameNumber();
 8002ace:	60e0      	str	r0, [r4, #12]
        setCommand(handle, PAUSE, 0);
 8002ad0:	6a5e      	ldr	r6, [r3, #36]	@ 0x24
 8002ad2:	4629      	mov	r1, r5
 8002ad4:	462b      	mov	r3, r5
 8002ad6:	4620      	mov	r0, r4
 8002ad8:	46b4      	mov	ip, r6
        stream.doDecodeNextFrame = false;
 8002ada:	f884 5028 	strb.w	r5, [r4, #40]	@ 0x28
        setCommand(handle, PAUSE, 0);
 8002ade:	2201      	movs	r2, #1
    }
 8002ae0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setCommand(handle, PAUSE, 0);
 8002ae4:	4760      	bx	ip
 8002ae6:	bf00      	nop
 8002ae8:	08034248 	.word	0x08034248
 8002aec:	08034a09 	.word	0x08034a09
 8002af0:	0803438d 	.word	0x0803438d

08002af4 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setFrameRateEmmm>:
    virtual void setFrameRate(const Handle handle, uint32_t ui_frames, uint32_t video_frames)
 8002af4:	b508      	push	{r3, lr}
        assert(handle < no_streams);
 8002af6:	b129      	cbz	r1, 8002b04 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setFrameRateEmmm+0x10>
 8002af8:	2140      	movs	r1, #64	@ 0x40
 8002afa:	4b05      	ldr	r3, [pc, #20]	@ (8002b10 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setFrameRateEmmm+0x1c>)
 8002afc:	4a05      	ldr	r2, [pc, #20]	@ (8002b14 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setFrameRateEmmm+0x20>)
 8002afe:	4806      	ldr	r0, [pc, #24]	@ (8002b18 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setFrameRateEmmm+0x24>)
 8002b00:	f02f fe3a 	bl	8032778 <__assert_func>
        stream.frame_rate_video = video_frames;
 8002b04:	e9c0 3205 	strd	r3, r2, [r0, #20]
        stream.frameCount = 0;
 8002b08:	6081      	str	r1, [r0, #8]
        stream.tickCount = 0;
 8002b0a:	6101      	str	r1, [r0, #16]
    }
 8002b0c:	bd08      	pop	{r3, pc}
 8002b0e:	bf00      	nop
 8002b10:	08034248 	.word	0x08034248
 8002b14:	08034b74 	.word	0x08034b74
 8002b18:	0803438d 	.word	0x0803438d

08002b1c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE4drawEmRKNS0_4RectERKNS0_11VideoWidgetE>:
    virtual void draw(const Handle handle, const touchgfx::Rect& invalidatedArea, const touchgfx::VideoWidget& widget)
 8002b1c:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8002b20:	4604      	mov	r4, r0
 8002b22:	4615      	mov	r5, r2
 8002b24:	461f      	mov	r7, r3
        assert(handle < no_streams);
 8002b26:	b129      	cbz	r1, 8002b34 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE4drawEmRKNS0_4RectERKNS0_11VideoWidgetE+0x18>
 8002b28:	21e9      	movs	r1, #233	@ 0xe9
 8002b2a:	4b18      	ldr	r3, [pc, #96]	@ (8002b8c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE4drawEmRKNS0_4RectERKNS0_11VideoWidgetE+0x70>)
 8002b2c:	4a18      	ldr	r2, [pc, #96]	@ (8002b90 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE4drawEmRKNS0_4RectERKNS0_11VideoWidgetE+0x74>)
 8002b2e:	4819      	ldr	r0, [pc, #100]	@ (8002b94 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE4drawEmRKNS0_4RectERKNS0_11VideoWidgetE+0x78>)
 8002b30:	f02f fe22 	bl	8032778 <__assert_func>
        if (mjpegDecoders[handle]->hasVideo())
 8002b34:	6840      	ldr	r0, [r0, #4]
 8002b36:	6803      	ldr	r3, [r0, #0]
 8002b38:	691b      	ldr	r3, [r3, #16]
 8002b3a:	4798      	blx	r3
 8002b3c:	b310      	cbz	r0, 8002b84 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE4drawEmRKNS0_4RectERKNS0_11VideoWidgetE+0x68>
        return instance;
 8002b3e:	f8df 805c 	ldr.w	r8, [pc, #92]	@ 8002b9c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE4drawEmRKNS0_4RectERKNS0_11VideoWidgetE+0x80>
            uint8_t* wbuf = (uint8_t*)touchgfx::HAL::getInstance()->lockFrameBufferForRenderingMethod(touchgfx::HAL::HARDWARE);
 8002b42:	2101      	movs	r1, #1
 8002b44:	f8d8 0000 	ldr.w	r0, [r8]
 8002b48:	f009 f8f2 	bl	800bd30 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>
 8002b4c:	4606      	mov	r6, r0
            const touchgfx::Rect& absolute = widget.getAbsoluteRect();
 8002b4e:	4639      	mov	r1, r7
 8002b50:	4668      	mov	r0, sp
 8002b52:	f00b fcdf 	bl	800e514 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
                wbuf += (absolute.x + absolute.y * touchgfx::HAL::FRAME_BUFFER_WIDTH) * 2;
 8002b56:	4b10      	ldr	r3, [pc, #64]	@ (8002b98 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE4drawEmRKNS0_4RectERKNS0_11VideoWidgetE+0x7c>)
 8002b58:	f9bd 1002 	ldrsh.w	r1, [sp, #2]
 8002b5c:	881b      	ldrh	r3, [r3, #0]
 8002b5e:	f9bd 2000 	ldrsh.w	r2, [sp]
            mjpegDecoders[handle]->decodeFrame(invalidatedArea, wbuf, touchgfx::HAL::FRAME_BUFFER_WIDTH);
 8002b62:	6860      	ldr	r0, [r4, #4]
                wbuf += (absolute.x + absolute.y * touchgfx::HAL::FRAME_BUFFER_WIDTH) * 2;
 8002b64:	fb03 2201 	mla	r2, r3, r1, r2
            mjpegDecoders[handle]->decodeFrame(invalidatedArea, wbuf, touchgfx::HAL::FRAME_BUFFER_WIDTH);
 8002b68:	6801      	ldr	r1, [r0, #0]
 8002b6a:	eb06 0242 	add.w	r2, r6, r2, lsl #1
 8002b6e:	69cc      	ldr	r4, [r1, #28]
 8002b70:	4629      	mov	r1, r5
 8002b72:	47a0      	blx	r4
 8002b74:	f8d8 0000 	ldr.w	r0, [r8]
            touchgfx::HAL::getInstance()->unlockFrameBuffer();
 8002b78:	6803      	ldr	r3, [r0, #0]
 8002b7a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
    }
 8002b7c:	b002      	add	sp, #8
 8002b7e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
            touchgfx::HAL::getInstance()->unlockFrameBuffer();
 8002b82:	4718      	bx	r3
    }
 8002b84:	b002      	add	sp, #8
 8002b86:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8002b8a:	bf00      	nop
 8002b8c:	08034248 	.word	0x08034248
 8002b90:	08034cc0 	.word	0x08034cc0
 8002b94:	0803438d 	.word	0x0803438d
 8002b98:	2008309e 	.word	0x2008309e
 8002b9c:	200830a4 	.word	0x200830a4

08002ba0 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE19registerVideoWidgetERNS0_11VideoWidgetE>:
    virtual Handle registerVideoWidget(touchgfx::VideoWidget& widget)
 8002ba0:	b508      	push	{r3, lr}
 8002ba2:	4603      	mov	r3, r0

    Handle getFreeHandle()
    {
        for (uint32_t i = 0; i < no_streams; i++)
        {
            if (streams[i].isActive == false)
 8002ba4:	f890 0024 	ldrb.w	r0, [r0, #36]	@ 0x24
 8002ba8:	b130      	cbz	r0, 8002bb8 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE19registerVideoWidgetERNS0_11VideoWidgetE+0x18>
            {
                return static_cast<VideoController::Handle>(i);
            }
        }

        assert(0 && "Unable to find free video stream handle!");
 8002baa:	f240 116b 	movw	r1, #363	@ 0x16b
 8002bae:	4b07      	ldr	r3, [pc, #28]	@ (8002bcc <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE19registerVideoWidgetERNS0_11VideoWidgetE+0x2c>)
 8002bb0:	4a07      	ldr	r2, [pc, #28]	@ (8002bd0 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE19registerVideoWidgetERNS0_11VideoWidgetE+0x30>)
 8002bb2:	4808      	ldr	r0, [pc, #32]	@ (8002bd4 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE19registerVideoWidgetERNS0_11VideoWidgetE+0x34>)
 8002bb4:	f02f fde0 	bl	8032778 <__assert_func>
        streams[handle].isActive = true;
 8002bb8:	2201      	movs	r2, #1
 8002bba:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
     * @param width  Width of the videoBuffer in pixels
     * @param height Height of the videoBuffer in pixels
     */
    void setVideoBufferFormat(Bitmap::BitmapFormat bufferFormat, int16_t width, int16_t height)
    {
        format = bufferFormat;
 8002bbe:	f881 0034 	strb.w	r0, [r1, #52]	@ 0x34
        bufferWidth = width;
 8002bc2:	86c8      	strh	r0, [r1, #54]	@ 0x36
        bufferHeight = height;
 8002bc4:	8708      	strh	r0, [r1, #56]	@ 0x38
        buffer = videoBuffer;
 8002bc6:	6308      	str	r0, [r1, #48]	@ 0x30
    }
 8002bc8:	bd08      	pop	{r3, pc}
 8002bca:	bf00      	nop
 8002bcc:	08034e07 	.word	0x08034e07
 8002bd0:	08034e37 	.word	0x08034e37
 8002bd4:	0803438d 	.word	0x0803438d

08002bd8 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>:
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8002bd8:	f44f 0280 	mov.w	r2, #4194304	@ 0x400000
 8002bdc:	4b0a      	ldr	r3, [pc, #40]	@ (8002c08 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv+0x30>)
 8002bde:	f8c3 208c 	str.w	r2, [r3, #140]	@ 0x8c
  __ASM volatile ("dsb 0xF":::"memory");
 8002be2:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8002be6:	f3bf 8f6f 	isb	sy
 8002bea:	2280      	movs	r2, #128	@ 0x80
 8002bec:	f8c3 2090 	str.w	r2, [r3, #144]	@ 0x90
  __ASM volatile ("dsb 0xF":::"memory");
 8002bf0:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8002bf4:	f3bf 8f6f 	isb	sy
 8002bf8:	2210      	movs	r2, #16
 8002bfa:	f8c3 2090 	str.w	r2, [r3, #144]	@ 0x90
  __ASM volatile ("dsb 0xF":::"memory");
 8002bfe:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8002c02:	f3bf 8f6f 	isb	sy
}
 8002c06:	4770      	bx	lr
 8002c08:	e000e100 	.word	0xe000e100

08002c0c <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>:
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8002c0c:	f44f 0280 	mov.w	r2, #4194304	@ 0x400000
 8002c10:	4b03      	ldr	r3, [pc, #12]	@ (8002c20 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv+0x14>)
 8002c12:	60da      	str	r2, [r3, #12]
 8002c14:	2280      	movs	r2, #128	@ 0x80
 8002c16:	611a      	str	r2, [r3, #16]
 8002c18:	2210      	movs	r2, #16
 8002c1a:	611a      	str	r2, [r3, #16]
}
 8002c1c:	4770      	bx	lr
 8002c1e:	bf00      	nop
 8002c20:	e000e100 	.word	0xe000e100

08002c24 <_ZN8touchgfx14VectorRenderer11getInstanceEv>:
{
 8002c24:	b510      	push	{r4, lr}
    static GPU2DVectorRenderer renderer;
 8002c26:	4c08      	ldr	r4, [pc, #32]	@ (8002c48 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x24>)
 8002c28:	e8d4 3faf 	lda	r3, [r4]
 8002c2c:	07db      	lsls	r3, r3, #31
 8002c2e:	d409      	bmi.n	8002c44 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x20>
 8002c30:	4620      	mov	r0, r4
 8002c32:	f02e fbca 	bl	80313ca <__cxa_guard_acquire>
 8002c36:	b128      	cbz	r0, 8002c44 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x20>
 8002c38:	4804      	ldr	r0, [pc, #16]	@ (8002c4c <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x28>)
 8002c3a:	f02f fdbb 	bl	80327b4 <atexit>
 8002c3e:	4620      	mov	r0, r4
 8002c40:	f02e fbcf 	bl	80313e2 <__cxa_guard_release>
}
 8002c44:	4802      	ldr	r0, [pc, #8]	@ (8002c50 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x2c>)
 8002c46:	bd10      	pop	{r4, pc}
 8002c48:	2000ba84 	.word	0x2000ba84
 8002c4c:	08002739 	.word	0x08002739
 8002c50:	20000044 	.word	0x20000044

08002c54 <HAL_LTDC_LineEventCallback>:
}

extern "C"
{
    void HAL_LTDC_LineEventCallback(LTDC_HandleTypeDef* hltdc)
    {
 8002c54:	b510      	push	{r4, lr}
 8002c56:	4c14      	ldr	r4, [pc, #80]	@ (8002ca8 <HAL_LTDC_LineEventCallback+0x54>)
        if (!HAL::getInstance())
 8002c58:	6823      	ldr	r3, [r4, #0]
 8002c5a:	b323      	cbz	r3, 8002ca6 <HAL_LTDC_LineEventCallback+0x52>
        {
            return;
        }

        if (LTDC->LIPCR == lcd_int_active_line)
 8002c5c:	4b13      	ldr	r3, [pc, #76]	@ (8002cac <HAL_LTDC_LineEventCallback+0x58>)
 8002c5e:	4a14      	ldr	r2, [pc, #80]	@ (8002cb0 <HAL_LTDC_LineEventCallback+0x5c>)
 8002c60:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002c62:	8811      	ldrh	r1, [r2, #0]
 8002c64:	428b      	cmp	r3, r1
 8002c66:	d113      	bne.n	8002c90 <HAL_LTDC_LineEventCallback+0x3c>
        {
            //entering active area
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_porch_line);
 8002c68:	4b12      	ldr	r3, [pc, #72]	@ (8002cb4 <HAL_LTDC_LineEventCallback+0x60>)
 8002c6a:	8819      	ldrh	r1, [r3, #0]
 8002c6c:	f003 fda2 	bl	80067b4 <HAL_LTDC_ProgramLineEvent>
 8002c70:	6822      	ldr	r2, [r4, #0]
        vSyncCnt++;
 8002c72:	f892 306a 	ldrb.w	r3, [r2, #106]	@ 0x6a
 8002c76:	3301      	adds	r3, #1
 8002c78:	f882 306a 	strb.w	r3, [r2, #106]	@ 0x6a
            HAL::getInstance()->vSync();
            OSWrappers::signalVSync();
 8002c7c:	f7ff f9c6 	bl	800200c <_ZN8touchgfx10OSWrappers11signalVSyncEv>

            // Swap frame buffers immediately instead of waiting for the task to be scheduled in.
            // Note: task will also swap when it wakes up, but that operation is guarded and will not have
            // any effect if already swapped.
            HAL::getInstance()->swapFrameBuffers();
 8002c80:	6820      	ldr	r0, [r4, #0]
 8002c82:	f008 fff3 	bl	800bc6c <_ZN8touchgfx3HAL16swapFrameBuffersEv>

            // Signal to the framework that display update has finished.
            HAL::getInstance()->frontPorchEntered();
            GPIO::clear(GPIO::VSYNC_FREQ);
        }
    }
 8002c86:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::set(GPIO::VSYNC_FREQ);
 8002c8a:	2000      	movs	r0, #0
 8002c8c:	f7fe ba60 	b.w	8001150 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_active_line);
 8002c90:	f003 fd90 	bl	80067b4 <HAL_LTDC_ProgramLineEvent>
        return instance;
 8002c94:	6820      	ldr	r0, [r4, #0]
        allowDMATransfers();
 8002c96:	6803      	ldr	r3, [r0, #0]
 8002c98:	6a1b      	ldr	r3, [r3, #32]
 8002c9a:	4798      	blx	r3
    }
 8002c9c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::clear(GPIO::VSYNC_FREQ);
 8002ca0:	2000      	movs	r0, #0
 8002ca2:	f7fe ba6f 	b.w	8001184 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
    }
 8002ca6:	bd10      	pop	{r4, pc}
 8002ca8:	200830a4 	.word	0x200830a4
 8002cac:	40016800 	.word	0x40016800
 8002cb0:	2000ba82 	.word	0x2000ba82
 8002cb4:	2000ba80 	.word	0x2000ba80

08002cb8 <_GLOBAL__sub_I_mjpegdecoder1>:
}
 8002cb8:	b508      	push	{r3, lr}
HardwareMJPEGDecoder mjpegdecoder1;
 8002cba:	480b      	ldr	r0, [pc, #44]	@ (8002ce8 <_GLOBAL__sub_I_mjpegdecoder1+0x30>)
 8002cbc:	f7fe fba8 	bl	8001410 <_ZN20HardwareMJPEGDecoderC1Ev>
        : VideoController(), allowSkipFrames(true)
 8002cc0:	4b0a      	ldr	r3, [pc, #40]	@ (8002cec <_GLOBAL__sub_I_mjpegdecoder1+0x34>)
 8002cc2:	4a0b      	ldr	r2, [pc, #44]	@ (8002cf0 <_GLOBAL__sub_I_mjpegdecoder1+0x38>)
        Stream()
 8002cc4:	f04f 7180 	mov.w	r1, #16777216	@ 0x1000000
        : VideoController(), allowSkipFrames(true)
 8002cc8:	601a      	str	r2, [r3, #0]
 8002cca:	2201      	movs	r2, #1
 8002ccc:	f883 202c 	strb.w	r2, [r3, #44]	@ 0x2c
        memset(mjpegDecoders, 0, sizeof(mjpegDecoders));
 8002cd0:	2200      	movs	r2, #0
            : frameCount(0), frameNumber(0), tickCount(0),
 8002cd2:	e9c3 2201 	strd	r2, r2, [r3, #4]
        Stream()
 8002cd6:	6259      	str	r1, [r3, #36]	@ 0x24
            : frameCount(0), frameNumber(0), tickCount(0),
 8002cd8:	e9c3 2203 	strd	r2, r2, [r3, #12]
              frame_rate_video(0), frame_rate_ticks(0),
 8002cdc:	e9c3 2205 	strd	r2, r2, [r3, #20]
              seek_to_frame(0),
 8002ce0:	61da      	str	r2, [r3, #28]
              doDecodeNextFrame(false)
 8002ce2:	f883 2028 	strb.w	r2, [r3, #40]	@ 0x28
}
 8002ce6:	bd08      	pop	{r3, pc}
 8002ce8:	2000bab8 	.word	0x2000bab8
 8002cec:	2000ba88 	.word	0x2000ba88
 8002cf0:	08034f58 	.word	0x08034f58

08002cf4 <HAL_GPU2D_CommandListCpltCallback>:
#endif /* USE_HAL_GPU2D_REGISTER_CALLBACKS = 1 */
{
    /* Prevent unused argument(s) compilation warning */
    UNUSED(hgpu2d);

    last_cl_id = CmdListID;
 8002cf4:	4b02      	ldr	r3, [pc, #8]	@ (8002d00 <HAL_GPU2D_CommandListCpltCallback+0xc>)
 8002cf6:	6019      	str	r1, [r3, #0]

    /* Return a token back to a semaphore */
    osSemaphoreRelease(nema_irq_sem);
 8002cf8:	4b02      	ldr	r3, [pc, #8]	@ (8002d04 <HAL_GPU2D_CommandListCpltCallback+0x10>)
 8002cfa:	6818      	ldr	r0, [r3, #0]
 8002cfc:	f006 b8c4 	b.w	8008e88 <osSemaphoreRelease>
 8002d00:	20000048 	.word	0x20000048
 8002d04:	2000bb00 	.word	0x2000bb00

08002d08 <nema_reg_read>:

    return error_code;
}

uint32_t nema_reg_read(uint32_t reg)
{
 8002d08:	4601      	mov	r1, r0
    return HAL_GPU2D_ReadRegister(&hgpu2d, reg);
 8002d0a:	4801      	ldr	r0, [pc, #4]	@ (8002d10 <nema_reg_read+0x8>)
 8002d0c:	f002 b84c 	b.w	8004da8 <HAL_GPU2D_ReadRegister>
 8002d10:	20000570 	.word	0x20000570

08002d14 <nema_reg_write>:
}

void nema_reg_write(uint32_t reg, uint32_t value)
{
 8002d14:	460a      	mov	r2, r1
    HAL_GPU2D_WriteRegister(&hgpu2d, reg, value);
 8002d16:	4601      	mov	r1, r0
 8002d18:	4801      	ldr	r0, [pc, #4]	@ (8002d20 <nema_reg_write+0xc>)
 8002d1a:	f002 b848 	b.w	8004dae <HAL_GPU2D_WriteRegister>
 8002d1e:	bf00      	nop
 8002d20:	20000570 	.word	0x20000570

08002d24 <nema_wait_irq>:
}

int nema_wait_irq(void)
{
 8002d24:	b508      	push	{r3, lr}
    /* Wait indefinitely for a free semaphore */
    osSemaphoreAcquire(nema_irq_sem, osWaitForever);
 8002d26:	4b04      	ldr	r3, [pc, #16]	@ (8002d38 <nema_wait_irq+0x14>)
 8002d28:	f04f 31ff 	mov.w	r1, #4294967295
 8002d2c:	6818      	ldr	r0, [r3, #0]
 8002d2e:	f006 f87d 	bl	8008e2c <osSemaphoreAcquire>

    return 0;
}
 8002d32:	2000      	movs	r0, #0
 8002d34:	bd08      	pop	{r3, pc}
 8002d36:	bf00      	nop
 8002d38:	2000bb00 	.word	0x2000bb00

08002d3c <nema_wait_irq_cl>:

int nema_wait_irq_cl(int cl_id)
{
 8002d3c:	b538      	push	{r3, r4, r5, lr}
 8002d3e:	4604      	mov	r4, r0
    while (last_cl_id < cl_id)
 8002d40:	4d04      	ldr	r5, [pc, #16]	@ (8002d54 <nema_wait_irq_cl+0x18>)
 8002d42:	682b      	ldr	r3, [r5, #0]
 8002d44:	42a3      	cmp	r3, r4
 8002d46:	db01      	blt.n	8002d4c <nema_wait_irq_cl+0x10>
    {
        (void)nema_wait_irq();
    }

    return 0;
}
 8002d48:	2000      	movs	r0, #0
 8002d4a:	bd38      	pop	{r3, r4, r5, pc}
        (void)nema_wait_irq();
 8002d4c:	f7ff ffea 	bl	8002d24 <nema_wait_irq>
 8002d50:	e7f7      	b.n	8002d42 <nema_wait_irq_cl+0x6>
 8002d52:	bf00      	nop
 8002d54:	20000048 	.word	0x20000048

08002d58 <nema_host_free>:
    return 0;
}

void nema_host_free(void* ptr)
{
    tsi_free(ptr);
 8002d58:	f01a be5a 	b.w	801da10 <tsi_free>

08002d5c <nema_host_malloc>:
}

void* nema_host_malloc(unsigned size)
{
 8002d5c:	4601      	mov	r1, r0
    return tsi_malloc(size);
 8002d5e:	2000      	movs	r0, #0
 8002d60:	f01a bdf8 	b.w	801d954 <tsi_malloc_pool>

08002d64 <nema_buffer_create>:
}

nema_buffer_t nema_buffer_create(int size)
{
 8002d64:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8002d66:	4604      	mov	r4, r0
    nema_buffer_t bo;
    memset(&bo, 0, sizeof(bo));
 8002d68:	2000      	movs	r0, #0
{
 8002d6a:	460e      	mov	r6, r1
    memset(&bo, 0, sizeof(bo));
 8002d6c:	9001      	str	r0, [sp, #4]
    bo.base_virt = tsi_malloc(size);
 8002d6e:	f01a fdf1 	bl	801d954 <tsi_malloc_pool>
    memset(&bo, 0, sizeof(bo));
 8002d72:	466d      	mov	r5, sp
    bo.base_phys = (uint32_t)bo.base_virt;
 8002d74:	e9cd 0002 	strd	r0, r0, [sp, #8]
    bo.size      = size;
 8002d78:	9600      	str	r6, [sp, #0]
    assert(bo.base_virt != 0 && "Unable to allocate memory in nema_buffer_create");
 8002d7a:	b928      	cbnz	r0, 8002d88 <nema_buffer_create+0x24>
 8002d7c:	21a6      	movs	r1, #166	@ 0xa6
 8002d7e:	4b06      	ldr	r3, [pc, #24]	@ (8002d98 <nema_buffer_create+0x34>)
 8002d80:	4a06      	ldr	r2, [pc, #24]	@ (8002d9c <nema_buffer_create+0x38>)
 8002d82:	4807      	ldr	r0, [pc, #28]	@ (8002da0 <nema_buffer_create+0x3c>)
 8002d84:	f02f fcf8 	bl	8032778 <__assert_func>

    return bo;
 8002d88:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
 8002d8c:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
}
 8002d90:	4620      	mov	r0, r4
 8002d92:	b004      	add	sp, #16
 8002d94:	bd70      	pop	{r4, r5, r6, pc}
 8002d96:	bf00      	nop
 8002d98:	08034f90 	.word	0x08034f90
 8002d9c:	080350d8 	.word	0x080350d8
 8002da0:	08034fd7 	.word	0x08034fd7

08002da4 <nema_sys_init>:
    nema_irq_sem = osSemaphoreNew(1, 1, NULL);
 8002da4:	2101      	movs	r1, #1
{
 8002da6:	b5f0      	push	{r4, r5, r6, r7, lr}
    nema_irq_sem = osSemaphoreNew(1, 1, NULL);
 8002da8:	2200      	movs	r2, #0
 8002daa:	4608      	mov	r0, r1
{
 8002dac:	b087      	sub	sp, #28
    nema_irq_sem = osSemaphoreNew(1, 1, NULL);
 8002dae:	f005 ffee 	bl	8008d8e <osSemaphoreNew>
 8002db2:	4b21      	ldr	r3, [pc, #132]	@ (8002e38 <nema_sys_init+0x94>)
 8002db4:	6018      	str	r0, [r3, #0]
    assert(nema_irq_sem != NULL);
 8002db6:	b928      	cbnz	r0, 8002dc4 <nema_sys_init+0x20>
 8002db8:	2156      	movs	r1, #86	@ 0x56
 8002dba:	4b20      	ldr	r3, [pc, #128]	@ (8002e3c <nema_sys_init+0x98>)
 8002dbc:	4a20      	ldr	r2, [pc, #128]	@ (8002e40 <nema_sys_init+0x9c>)
    assert(error_code == 0);
 8002dbe:	4821      	ldr	r0, [pc, #132]	@ (8002e44 <nema_sys_init+0xa0>)
 8002dc0:	f02f fcda 	bl	8032778 <__assert_func>
    error_code = tsi_malloc_init_pool_aligned(0, (void*)nemagfx_pool_mem, (uintptr_t)nemagfx_pool_mem, NEMAGFX_MEM_POOL_SIZE, 1, 8);
 8002dc4:	2701      	movs	r7, #1
 8002dc6:	2408      	movs	r4, #8
 8002dc8:	4a1f      	ldr	r2, [pc, #124]	@ (8002e48 <nema_sys_init+0xa4>)
 8002dca:	f44f 537c 	mov.w	r3, #16128	@ 0x3f00
 8002dce:	4611      	mov	r1, r2
 8002dd0:	2000      	movs	r0, #0
 8002dd2:	e9cd 7400 	strd	r7, r4, [sp]
 8002dd6:	f01a fd61 	bl	801d89c <tsi_malloc_init_pool_aligned>
    assert(error_code == 0);
 8002dda:	b118      	cbz	r0, 8002de4 <nema_sys_init+0x40>
 8002ddc:	215a      	movs	r1, #90	@ 0x5a
 8002dde:	4b1b      	ldr	r3, [pc, #108]	@ (8002e4c <nema_sys_init+0xa8>)
 8002de0:	4a17      	ldr	r2, [pc, #92]	@ (8002e40 <nema_sys_init+0x9c>)
 8002de2:	e7ec      	b.n	8002dbe <nema_sys_init+0x1a>
    error_code = tsi_malloc_init_pool_aligned(1, (void*)nemagfx_stencil_buffer_mem, (uintptr_t)nemagfx_stencil_buffer_mem, NEMAGFX_STENCIL_POOL_SIZE, 1, 8);
 8002de4:	4a1a      	ldr	r2, [pc, #104]	@ (8002e50 <nema_sys_init+0xac>)
 8002de6:	f44f 23be 	mov.w	r3, #389120	@ 0x5f000
 8002dea:	4611      	mov	r1, r2
 8002dec:	4638      	mov	r0, r7
 8002dee:	e9cd 7400 	strd	r7, r4, [sp]
 8002df2:	f01a fd53 	bl	801d89c <tsi_malloc_init_pool_aligned>
    assert(error_code == 0);
 8002df6:	4606      	mov	r6, r0
 8002df8:	b118      	cbz	r0, 8002e02 <nema_sys_init+0x5e>
 8002dfa:	215c      	movs	r1, #92	@ 0x5c
 8002dfc:	4b13      	ldr	r3, [pc, #76]	@ (8002e4c <nema_sys_init+0xa8>)
 8002dfe:	4a10      	ldr	r2, [pc, #64]	@ (8002e40 <nema_sys_init+0x9c>)
 8002e00:	e7dd      	b.n	8002dbe <nema_sys_init+0x1a>
    ring_buffer_str.bo = nema_buffer_create(RING_SIZE);
 8002e02:	ad02      	add	r5, sp, #8
 8002e04:	4c13      	ldr	r4, [pc, #76]	@ (8002e54 <nema_sys_init+0xb0>)
 8002e06:	f44f 6180 	mov.w	r1, #1024	@ 0x400
 8002e0a:	4628      	mov	r0, r5
 8002e0c:	f7ff ffaa 	bl	8002d64 <nema_buffer_create>
 8002e10:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
 8002e14:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
    assert(ring_buffer_str.bo.base_virt);
 8002e18:	b91a      	cbnz	r2, 8002e22 <nema_sys_init+0x7e>
 8002e1a:	2160      	movs	r1, #96	@ 0x60
 8002e1c:	4b0e      	ldr	r3, [pc, #56]	@ (8002e58 <nema_sys_init+0xb4>)
 8002e1e:	4a08      	ldr	r2, [pc, #32]	@ (8002e40 <nema_sys_init+0x9c>)
 8002e20:	e7cd      	b.n	8002dbe <nema_sys_init+0x1a>
    error_code = nema_rb_init(&ring_buffer_str, 1);
 8002e22:	4639      	mov	r1, r7
 8002e24:	4620      	mov	r0, r4
 8002e26:	f00d fd69 	bl	80108fc <nema_rb_init>
    if (error_code < 0)
 8002e2a:	2800      	cmp	r0, #0
    last_cl_id = 0;
 8002e2c:	bfa4      	itt	ge
 8002e2e:	4b0b      	ldrge	r3, [pc, #44]	@ (8002e5c <nema_sys_init+0xb8>)
 8002e30:	601e      	strge	r6, [r3, #0]
}
 8002e32:	b007      	add	sp, #28
 8002e34:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8002e36:	bf00      	nop
 8002e38:	2000bb00 	.word	0x2000bb00
 8002e3c:	08035032 	.word	0x08035032
 8002e40:	080350eb 	.word	0x080350eb
 8002e44:	08034fd7 	.word	0x08034fd7
 8002e48:	2006ab1c 	.word	0x2006ab1c
 8002e4c:	08035047 	.word	0x08035047
 8002e50:	2000bb1c 	.word	0x2000bb1c
 8002e54:	2000bb04 	.word	0x2000bb04
 8002e58:	08035057 	.word	0x08035057
 8002e5c:	20000048 	.word	0x20000048

08002e60 <nema_buffer_create_pool>:

nema_buffer_t nema_buffer_create_pool(int pool, int size)
{
 8002e60:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
    nema_buffer_t bo;
    memset(&bo, 0, sizeof(bo));
 8002e62:	2300      	movs	r3, #0
{
 8002e64:	4604      	mov	r4, r0
 8002e66:	4608      	mov	r0, r1
    bo.base_virt = tsi_malloc_pool(pool, size);
 8002e68:	4611      	mov	r1, r2
{
 8002e6a:	4616      	mov	r6, r2
    memset(&bo, 0, sizeof(bo));
 8002e6c:	9301      	str	r3, [sp, #4]
    bo.base_virt = tsi_malloc_pool(pool, size);
 8002e6e:	f01a fd71 	bl	801d954 <tsi_malloc_pool>
    memset(&bo, 0, sizeof(bo));
 8002e72:	466d      	mov	r5, sp
    bo.base_phys = (uint32_t)bo.base_virt;
 8002e74:	e9cd 0002 	strd	r0, r0, [sp, #8]
    bo.size      = size;
 8002e78:	9600      	str	r6, [sp, #0]
    bo.fd        = 0;
    assert(bo.base_virt != 0 && "Unable to allocate memory in nema_buffer_create_pool");
 8002e7a:	b928      	cbnz	r0, 8002e88 <nema_buffer_create_pool+0x28>
 8002e7c:	21b3      	movs	r1, #179	@ 0xb3
 8002e7e:	4b06      	ldr	r3, [pc, #24]	@ (8002e98 <nema_buffer_create_pool+0x38>)
 8002e80:	4a06      	ldr	r2, [pc, #24]	@ (8002e9c <nema_buffer_create_pool+0x3c>)
 8002e82:	4807      	ldr	r0, [pc, #28]	@ (8002ea0 <nema_buffer_create_pool+0x40>)
 8002e84:	f02f fc78 	bl	8032778 <__assert_func>

    return bo;
 8002e88:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
 8002e8c:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
}
 8002e90:	4620      	mov	r0, r4
 8002e92:	b004      	add	sp, #16
 8002e94:	bd70      	pop	{r4, r5, r6, pc}
 8002e96:	bf00      	nop
 8002e98:	08035074 	.word	0x08035074
 8002e9c:	080350c0 	.word	0x080350c0
 8002ea0:	08034fd7 	.word	0x08034fd7

08002ea4 <nema_buffer_map>:

void* nema_buffer_map(nema_buffer_t* bo)
{
    return bo->base_virt;
}
 8002ea4:	6880      	ldr	r0, [r0, #8]
 8002ea6:	4770      	bx	lr

08002ea8 <nema_buffer_destroy>:
    UNUSED(bo);
}

void nema_buffer_destroy(nema_buffer_t* bo)
{
    if (bo->fd == -1)
 8002ea8:	6843      	ldr	r3, [r0, #4]
{
 8002eaa:	b510      	push	{r4, lr}
    if (bo->fd == -1)
 8002eac:	3301      	adds	r3, #1
{
 8002eae:	4604      	mov	r4, r0
    if (bo->fd == -1)
 8002eb0:	d009      	beq.n	8002ec6 <nema_buffer_destroy+0x1e>
    {
        return; /* Buffer weren't allocated! */
    }

    tsi_free(bo->base_virt);
 8002eb2:	6880      	ldr	r0, [r0, #8]
 8002eb4:	f01a fdac 	bl	801da10 <tsi_free>

    bo->base_virt = (void*)0;
 8002eb8:	2300      	movs	r3, #0
    bo->base_phys = 0;
 8002eba:	e9c4 3302 	strd	r3, r3, [r4, #8]
    bo->size      = 0;
 8002ebe:	6023      	str	r3, [r4, #0]
    bo->fd        = -1; /* Buffer not allocated */
 8002ec0:	f04f 33ff 	mov.w	r3, #4294967295
 8002ec4:	6063      	str	r3, [r4, #4]
}
 8002ec6:	bd10      	pop	{r4, pc}

08002ec8 <nema_buffer_flush>:
uintptr_t nema_buffer_phys(nema_buffer_t* bo)
{
    return bo->base_phys;
}

void nema_buffer_flush(nema_buffer_t* bo)
 8002ec8:	4770      	bx	lr

08002eca <nema_mutex_lock>:
    /* Prevent unused argument(s) compilation warning */
    UNUSED(mutex_id);
    /* USER CODE END nema_mutex_lock */

    return retval;
}
 8002eca:	2000      	movs	r0, #0
 8002ecc:	4770      	bx	lr

08002ece <nema_mutex_unlock>:

int nema_mutex_unlock(int mutex_id)
 8002ece:	2000      	movs	r0, #0
 8002ed0:	4770      	bx	lr

08002ed2 <_ZN23ApplicationFontProviderD1Ev>:
    static const touchgfx::FontId LARGE = 1;   // verdana_40_4bpp
    static const touchgfx::FontId SMALL = 2;   // verdana_10_4bpp
    static const uint16_t NUMBER_OF_FONTS = 3;
};

class ApplicationFontProvider : public touchgfx::FontProvider
 8002ed2:	4770      	bx	lr

08002ed4 <_ZN23ApplicationFontProviderD0Ev>:
 8002ed4:	b510      	push	{r4, lr}
 8002ed6:	4604      	mov	r4, r0
 8002ed8:	2104      	movs	r1, #4
 8002eda:	f02e fa74 	bl	80313c6 <_ZdlPvj>
 8002ede:	4620      	mov	r0, r4
 8002ee0:	bd10      	pop	{r4, pc}

08002ee2 <_ZN23ApplicationFontProvider7getFontEt>:
#include <fonts/GeneratedFont.hpp>
#include <texts/TypedTextDatabase.hpp>

touchgfx::Font* ApplicationFontProvider::getFont(touchgfx::FontId typography)
{
    switch (typography)
 8002ee2:	2901      	cmp	r1, #1
{
 8002ee4:	b508      	push	{r3, lr}
    switch (typography)
 8002ee6:	d006      	beq.n	8002ef6 <_ZN23ApplicationFontProvider7getFontEt+0x14>
 8002ee8:	2902      	cmp	r1, #2
 8002eea:	d008      	beq.n	8002efe <_ZN23ApplicationFontProvider7getFontEt+0x1c>
 8002eec:	b959      	cbnz	r1, 8002f06 <_ZN23ApplicationFontProvider7getFontEt+0x24>
    {
    case Typography::DEFAULT:
        // verdana_20_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[0]);
 8002eee:	f000 fd55 	bl	800399c <_ZN17TypedTextDatabase8getFontsEv>
 8002ef2:	6800      	ldr	r0, [r0, #0]
        // verdana_10_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
    default:
        return 0;
    }
}
 8002ef4:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[1]);
 8002ef6:	f000 fd51 	bl	800399c <_ZN17TypedTextDatabase8getFontsEv>
 8002efa:	6840      	ldr	r0, [r0, #4]
 8002efc:	e7fa      	b.n	8002ef4 <_ZN23ApplicationFontProvider7getFontEt+0x12>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
 8002efe:	f000 fd4d 	bl	800399c <_ZN17TypedTextDatabase8getFontsEv>
 8002f02:	6880      	ldr	r0, [r0, #8]
 8002f04:	e7f6      	b.n	8002ef4 <_ZN23ApplicationFontProvider7getFontEt+0x12>
    switch (typography)
 8002f06:	2000      	movs	r0, #0
 8002f08:	e7f4      	b.n	8002ef4 <_ZN23ApplicationFontProvider7getFontEt+0x12>
	...

08002f0c <_ZN14BitmapDatabase11getInstanceEv>:
namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}
 8002f0c:	4800      	ldr	r0, [pc, #0]	@ (8002f10 <_ZN14BitmapDatabase11getInstanceEv+0x4>)
 8002f0e:	4770      	bx	lr
 8002f10:	08035110 	.word	0x08035110

08002f14 <_ZN14BitmapDatabase15getInstanceSizeEv>:

uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
 8002f14:	2006      	movs	r0, #6
 8002f16:	4770      	bx	lr

08002f18 <_ZNK8touchgfx4Font8getGlyphEt>:
     *
     * @return A pointer to the glyph node or null if the glyph was not found.
     *
     * @see TextProvider::getNextLigature
     */
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
 8002f18:	b513      	push	{r0, r1, r4, lr}
 8002f1a:	2400      	movs	r4, #0
    {
        if (unicode == 0)
 8002f1c:	b151      	cbz	r1, 8002f34 <_ZNK8touchgfx4Font8getGlyphEt+0x1c>
        {
            return 0;
        }
        const uint8_t* dummyPixelDataPointer = 0;
        uint8_t bitsPerPixelDummy = 0;
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 8002f1e:	6803      	ldr	r3, [r0, #0]
        const uint8_t* dummyPixelDataPointer = 0;
 8002f20:	9401      	str	r4, [sp, #4]
        uint8_t bitsPerPixelDummy = 0;
 8002f22:	f88d 4003 	strb.w	r4, [sp, #3]
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 8002f26:	aa01      	add	r2, sp, #4
 8002f28:	689c      	ldr	r4, [r3, #8]
 8002f2a:	f10d 0303 	add.w	r3, sp, #3
 8002f2e:	47a0      	blx	r4
        return glyph;
    }
 8002f30:	b002      	add	sp, #8
 8002f32:	bd10      	pop	{r4, pc}
            return 0;
 8002f34:	4608      	mov	r0, r1
 8002f36:	e7fb      	b.n	8002f30 <_ZNK8touchgfx4Font8getGlyphEt+0x18>

08002f38 <_ZNK8touchgfx4Font15getFallbackCharEv>:
     * @return The default character for the typography in case no glyph is available.
     */
    virtual Unicode::UnicodeChar getFallbackChar() const
    {
        return fallbackCharacter;
    }
 8002f38:	89c0      	ldrh	r0, [r0, #14]
 8002f3a:	4770      	bx	lr

08002f3c <_ZNK8touchgfx4Font15getEllipsisCharEv>:
     * @see TextArea::setWideTextAction
     */
    virtual Unicode::UnicodeChar getEllipsisChar() const
    {
        return ellipsisCharacter;
    }
 8002f3c:	8a00      	ldrh	r0, [r0, #16]
 8002f3e:	4770      	bx	lr

08002f40 <_ZNK8touchgfx4Font11getBaselineEv>:
     *       getHeight for this.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getBaseline() const
    {
        return baselineHeight;
    }
 8002f40:	88c0      	ldrh	r0, [r0, #6]
 8002f42:	4770      	bx	lr

08002f44 <_ZNK8touchgfx4Font9getHeightEv>:
     * @return The font height.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getHeight() const
    {
        return fontHeight;
    }
 8002f44:	8880      	ldrh	r0, [r0, #4]
 8002f46:	4770      	bx	lr

08002f48 <_ZNK8touchgfx4Font15getBitsPerPixelEv>:
     *
     * @return The number of bits used per pixel in this font.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getBitsPerPixel() const
    {
        return bPerPixel;
 8002f48:	7a80      	ldrb	r0, [r0, #10]
    }
 8002f4a:	f000 007f 	and.w	r0, r0, #127	@ 0x7f
 8002f4e:	4770      	bx	lr

08002f50 <_ZNK8touchgfx4Font15getByteAlignRowEv>:
     *
     * @return True if each glyph row is stored byte aligned, false otherwise.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getByteAlignRow() const
    {
        return bAlignRow;
 8002f50:	7a80      	ldrb	r0, [r0, #10]
    }
 8002f52:	09c0      	lsrs	r0, r0, #7
 8002f54:	4770      	bx	lr

08002f56 <_ZNK8touchgfx4Font17isVectorBasedFontEv>:
     * @return True if this Font is vector based.
     */
    virtual bool isVectorBasedFont() const
    {
        return false;
    }
 8002f56:	2000      	movs	r0, #0
 8002f58:	4770      	bx	lr
	...

08002f5c <_ZNK8touchgfx4Font14getScaleFactorEv>:
     * @return The scale factor
     */
    virtual float getScaleFactor() const
    {
        return 0;
    }
 8002f5c:	ed9f 0a01 	vldr	s0, [pc, #4]	@ 8002f64 <_ZNK8touchgfx4Font14getScaleFactorEv+0x8>
 8002f60:	4770      	bx	lr
 8002f62:	bf00      	nop
 8002f64:	00000000 	.word	0x00000000

08002f68 <_ZN8touchgfx11Application19changeToStartScreenEv>:
     *       this is explicitly done in your
     *       FrontendApplication::changeToStartScreen().
     */
    virtual void changeToStartScreen()
    {
    }
 8002f68:	4770      	bx	lr

08002f6a <_ZN8touchgfx11Application15appSwitchScreenEh>:
     * @param screenId An id that maps to the desired screen.
     */
    virtual void appSwitchScreen(uint8_t screenId)
    {
        (void)screenId; // Unused variable
    }
 8002f6a:	4770      	bx	lr

08002f6c <_ZN8touchgfx11Application13requestRedrawERNS_4RectE>:
     *
     * @param [in,out] rect The Rect that must be redrawn.
     */
    virtual void requestRedraw(Rect& rect)
    {
        redraw = rect;
 8002f6c:	f500 7398 	add.w	r3, r0, #304	@ 0x130
 8002f70:	6808      	ldr	r0, [r1, #0]
 8002f72:	6849      	ldr	r1, [r1, #4]
 8002f74:	c303      	stmia	r3!, {r0, r1}
    }
 8002f76:	4770      	bx	lr

08002f78 <_ZN8touchgfx10Transition8tearDownEv>:
     * Tears down the Animation. Called before the destructor is called, when the
     * application changes the transition.
     */
    virtual void tearDown()
    {
    }
 8002f78:	4770      	bx	lr

08002f7a <_ZN8touchgfx10Transition4initEv>:
     * Initializes the transition. Called after the constructor is called, when the
     * application changes the transition.
     */
    virtual void init()
    {
    }
 8002f7a:	4770      	bx	lr

08002f7c <_ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE>:
     *
     * @param [in] cont The Container the transition should have access to.
     */
    virtual void setScreenContainer(Container& cont)
    {
        screenContainer = &cont;
 8002f7c:	6041      	str	r1, [r0, #4]
    }
 8002f7e:	4770      	bx	lr

08002f80 <_ZN23FrontendApplicationBaseD1Ev>:

class FrontendApplicationBase : public touchgfx::MVPApplication
{
public:
    FrontendApplicationBase(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplicationBase() { }
 8002f80:	4770      	bx	lr
	...

08002f84 <_ZN23FrontendApplicationBase19changeToStartScreenEv>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type>
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8002f84:	4b06      	ldr	r3, [pc, #24]	@ (8002fa0 <_ZN23FrontendApplicationBase19changeToStartScreenEv+0x1c>)
 8002f86:	f8c0 0148 	str.w	r0, [r0, #328]	@ 0x148
 8002f8a:	f8c0 314c 	str.w	r3, [r0, #332]	@ 0x14c
 8002f8e:	2300      	movs	r3, #0
 8002f90:	f8c0 3150 	str.w	r3, [r0, #336]	@ 0x150
// GameScreen1

void FrontendApplicationBase::gotoGameScreen1ScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoGameScreen1ScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 8002f94:	f500 73a2 	add.w	r3, r0, #324	@ 0x144
 8002f98:	f8c0 3140 	str.w	r3, [r0, #320]	@ 0x140

    virtual void changeToStartScreen()
    {
        gotoGameScreen1ScreenNoTransition();
    }
 8002f9c:	4770      	bx	lr
 8002f9e:	bf00      	nop
 8002fa0:	08003045 	.word	0x08003045

08002fa4 <_ZN8touchgfx12NoTransition15handleTickEventEv>:
{
public:
    /** Indicates that the transition is done after the first tick. */
    virtual void handleTickEvent()
    {
        done = true;
 8002fa4:	2301      	movs	r3, #1
 8002fa6:	7203      	strb	r3, [r0, #8]
    }
 8002fa8:	4770      	bx	lr

08002faa <_ZN8touchgfx12NoTransitionD1Ev>:
class NoTransition : public Transition
 8002faa:	4770      	bx	lr

08002fac <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>:
 8002fac:	4770      	bx	lr

08002fae <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv>:

    /**
     * Calls the member function. Do not call execute unless isValid() returns true (ie. a
     * pointer to the object and the function has been set).
     */
    virtual void execute()
 8002fae:	4603      	mov	r3, r0
 8002fb0:	b410      	push	{r4}
    {
        (pobject->*pmemfun)();
 8002fb2:	6841      	ldr	r1, [r0, #4]
 8002fb4:	68c2      	ldr	r2, [r0, #12]
 8002fb6:	689b      	ldr	r3, [r3, #8]
 8002fb8:	1054      	asrs	r4, r2, #1
 8002fba:	eb01 0062 	add.w	r0, r1, r2, asr #1
 8002fbe:	07d2      	lsls	r2, r2, #31
 8002fc0:	bf48      	it	mi
 8002fc2:	590a      	ldrmi	r2, [r1, r4]
    }
 8002fc4:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun)();
 8002fc8:	bf48      	it	mi
 8002fca:	58d3      	ldrmi	r3, [r2, r3]
 8002fcc:	4718      	bx	r3

08002fce <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv>:
    /**
     * Function to check whether the Callback has been initialized with values.
     *
     * @return true If the callback is valid (i.e. safe to call execute).
     */
    virtual bool isValid() const
 8002fce:	4603      	mov	r3, r0
    {
        return (pobject != 0) && (pmemfun != 0);
 8002fd0:	6840      	ldr	r0, [r0, #4]
 8002fd2:	b130      	cbz	r0, 8002fe2 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x14>
 8002fd4:	689a      	ldr	r2, [r3, #8]
 8002fd6:	b91a      	cbnz	r2, 8002fe0 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x12>
 8002fd8:	68d8      	ldr	r0, [r3, #12]
 8002fda:	f000 0001 	and.w	r0, r0, #1
 8002fde:	4770      	bx	lr
 8002fe0:	2001      	movs	r0, #1
    }
 8002fe2:	4770      	bx	lr

08002fe4 <_ZN8touchgfx12NoTransitionD0Ev>:
 8002fe4:	b510      	push	{r4, lr}
 8002fe6:	4604      	mov	r4, r0
 8002fe8:	210c      	movs	r1, #12
 8002fea:	f02e f9ec 	bl	80313c6 <_ZdlPvj>
 8002fee:	4620      	mov	r0, r4
 8002ff0:	bd10      	pop	{r4, pc}

08002ff2 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED0Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8002ff2:	b510      	push	{r4, lr}
 8002ff4:	4604      	mov	r4, r0
 8002ff6:	2110      	movs	r1, #16
 8002ff8:	f02e f9e5 	bl	80313c6 <_ZdlPvj>
 8002ffc:	4620      	mov	r0, r4
 8002ffe:	bd10      	pop	{r4, pc}

08003000 <_ZN23FrontendApplicationBaseD0Ev>:
    virtual ~FrontendApplicationBase() { }
 8003000:	b510      	push	{r4, lr}
 8003002:	4604      	mov	r4, r0
 8003004:	f44f 71ae 	mov.w	r1, #348	@ 0x15c
 8003008:	f02e f9dd 	bl	80313c6 <_ZdlPvj>
 800300c:	4620      	mov	r0, r4
 800300e:	bd10      	pop	{r4, pc}

08003010 <_ZN8touchgfx10Transition10invalidateEv>:
    virtual void invalidate()
 8003010:	b510      	push	{r4, lr}
        Application::getInstance()->invalidate();
 8003012:	f00a f96d 	bl	800d2f0 <_ZN8touchgfx11Application11getInstanceEv>
    }
 8003016:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        Application::getInstance()->invalidate();
 800301a:	6803      	ldr	r3, [r0, #0]
 800301c:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800301e:	4718      	bx	r3

08003020 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv>:
    /**
     * Handles the pending screen transition.
     *
     * Delegates the work to evaluatePendingScreenTransition()
     */
    virtual void handlePendingScreenTransition()
 8003020:	b510      	push	{r4, lr}
 8003022:	4604      	mov	r4, r0
     * Evaluates the pending Callback instances. If a callback is valid, it is executed and
     * a Screen transition is executed.
     */
    void evaluatePendingScreenTransition()
    {
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
 8003024:	f8d0 0140 	ldr.w	r0, [r0, #320]	@ 0x140
 8003028:	b158      	cbz	r0, 8003042 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
 800302a:	6803      	ldr	r3, [r0, #0]
 800302c:	68db      	ldr	r3, [r3, #12]
 800302e:	4798      	blx	r3
 8003030:	b138      	cbz	r0, 8003042 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
        {
            pendingScreenTransitionCallback->execute();
 8003032:	f8d4 0140 	ldr.w	r0, [r4, #320]	@ 0x140
 8003036:	6803      	ldr	r3, [r0, #0]
 8003038:	689b      	ldr	r3, [r3, #8]
 800303a:	4798      	blx	r3
            pendingScreenTransitionCallback = 0;
 800303c:	2300      	movs	r3, #0
 800303e:	f8c4 3140 	str.w	r3, [r4, #320]	@ 0x140
    }
 8003042:	bd10      	pop	{r4, pc}

08003044 <_ZN23FrontendApplicationBase37gotoGameScreen1ScreenNoTransitionImplEv>:
}

void FrontendApplicationBase::gotoGameScreen1ScreenNoTransitionImpl()
{
 8003044:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<GameScreen1View, GameScreen1Presenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8003048:	e9d0 6a55 	ldrd	r6, sl, [r0, #340]	@ 0x154
{
 800304c:	4607      	mov	r7, r0
 *         value as the old presenter due to memory reuse.
 */
template <class ScreenType, class PresenterType, class TransType, class ModelType>
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
{
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800304e:	68b0      	ldr	r0, [r6, #8]
 8003050:	6803      	ldr	r3, [r0, #0]
 8003052:	6a1b      	ldr	r3, [r3, #32]
 8003054:	4798      	blx	r3
 8003056:	f5b0 7f32 	cmp.w	r0, #712	@ 0x2c8
 800305a:	d205      	bcs.n	8003068 <_ZN23FrontendApplicationBase37gotoGameScreen1ScreenNoTransitionImplEv+0x24>
 800305c:	21a3      	movs	r1, #163	@ 0xa3
 800305e:	4b44      	ldr	r3, [pc, #272]	@ (8003170 <_ZN23FrontendApplicationBase37gotoGameScreen1ScreenNoTransitionImplEv+0x12c>)
 8003060:	4a44      	ldr	r2, [pc, #272]	@ (8003174 <_ZN23FrontendApplicationBase37gotoGameScreen1ScreenNoTransitionImplEv+0x130>)
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8003062:	4845      	ldr	r0, [pc, #276]	@ (8003178 <_ZN23FrontendApplicationBase37gotoGameScreen1ScreenNoTransitionImplEv+0x134>)
 8003064:	f02f fb88 	bl	8032778 <__assert_func>
 8003068:	6870      	ldr	r0, [r6, #4]
 800306a:	6803      	ldr	r3, [r0, #0]
 800306c:	6a1b      	ldr	r3, [r3, #32]
 800306e:	4798      	blx	r3
 8003070:	280f      	cmp	r0, #15
 8003072:	d803      	bhi.n	800307c <_ZN23FrontendApplicationBase37gotoGameScreen1ScreenNoTransitionImplEv+0x38>
 8003074:	21a4      	movs	r1, #164	@ 0xa4
 8003076:	4b41      	ldr	r3, [pc, #260]	@ (800317c <_ZN23FrontendApplicationBase37gotoGameScreen1ScreenNoTransitionImplEv+0x138>)
 8003078:	4a3e      	ldr	r2, [pc, #248]	@ (8003174 <_ZN23FrontendApplicationBase37gotoGameScreen1ScreenNoTransitionImplEv+0x130>)
 800307a:	e7f2      	b.n	8003062 <_ZN23FrontendApplicationBase37gotoGameScreen1ScreenNoTransitionImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 800307c:	68f0      	ldr	r0, [r6, #12]
 800307e:	6803      	ldr	r3, [r0, #0]
 8003080:	6a1b      	ldr	r3, [r3, #32]
 8003082:	4798      	blx	r3
 8003084:	280b      	cmp	r0, #11
 8003086:	d803      	bhi.n	8003090 <_ZN23FrontendApplicationBase37gotoGameScreen1ScreenNoTransitionImplEv+0x4c>
 8003088:	21a5      	movs	r1, #165	@ 0xa5
 800308a:	4b3d      	ldr	r3, [pc, #244]	@ (8003180 <_ZN23FrontendApplicationBase37gotoGameScreen1ScreenNoTransitionImplEv+0x13c>)
 800308c:	4a39      	ldr	r2, [pc, #228]	@ (8003174 <_ZN23FrontendApplicationBase37gotoGameScreen1ScreenNoTransitionImplEv+0x130>)
 800308e:	e7e8      	b.n	8003062 <_ZN23FrontendApplicationBase37gotoGameScreen1ScreenNoTransitionImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 8003090:	f00a f92e 	bl	800d2f0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8003094:	f8df 90f0 	ldr.w	r9, [pc, #240]	@ 8003188 <_ZN23FrontendApplicationBase37gotoGameScreen1ScreenNoTransitionImplEv+0x144>

    /** Clears all currently registered timer widgets. */

    void clearAllTimerWidgets()
    {
        timerWidgets.clear();
 8003098:	3004      	adds	r0, #4
 800309a:	f00a f94e 	bl	800d33a <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 800309e:	f8d9 0000 	ldr.w	r0, [r9]
 80030a2:	b110      	cbz	r0, 80030aa <_ZN23FrontendApplicationBase37gotoGameScreen1ScreenNoTransitionImplEv+0x66>
        (*currentTrans)->tearDown();
 80030a4:	6803      	ldr	r3, [r0, #0]
 80030a6:	68db      	ldr	r3, [r3, #12]
 80030a8:	4798      	blx	r3
    if (*currentTrans)
 80030aa:	f8d9 0000 	ldr.w	r0, [r9]
 80030ae:	b110      	cbz	r0, 80030b6 <_ZN23FrontendApplicationBase37gotoGameScreen1ScreenNoTransitionImplEv+0x72>
        (*currentTrans)->~Transition();
 80030b0:	6803      	ldr	r3, [r0, #0]
 80030b2:	681b      	ldr	r3, [r3, #0]
 80030b4:	4798      	blx	r3
    if (*currentScreen)
 80030b6:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 800318c <_ZN23FrontendApplicationBase37gotoGameScreen1ScreenNoTransitionImplEv+0x148>
 80030ba:	f8d8 0000 	ldr.w	r0, [r8]
 80030be:	b110      	cbz	r0, 80030c6 <_ZN23FrontendApplicationBase37gotoGameScreen1ScreenNoTransitionImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 80030c0:	6803      	ldr	r3, [r0, #0]
 80030c2:	695b      	ldr	r3, [r3, #20]
 80030c4:	4798      	blx	r3
    if (*currentPresenter)
 80030c6:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 80030ca:	b110      	cbz	r0, 80030d2 <_ZN23FrontendApplicationBase37gotoGameScreen1ScreenNoTransitionImplEv+0x8e>
        (*currentPresenter)->deactivate();
 80030cc:	6803      	ldr	r3, [r0, #0]
 80030ce:	685b      	ldr	r3, [r3, #4]
 80030d0:	4798      	blx	r3
    if (*currentScreen)
 80030d2:	f8d8 0000 	ldr.w	r0, [r8]
 80030d6:	b110      	cbz	r0, 80030de <_ZN23FrontendApplicationBase37gotoGameScreen1ScreenNoTransitionImplEv+0x9a>
        (*currentScreen)->~Screen();
 80030d8:	6803      	ldr	r3, [r0, #0]
 80030da:	681b      	ldr	r3, [r3, #0]
 80030dc:	4798      	blx	r3
    if (*currentPresenter)
 80030de:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 80030e2:	b110      	cbz	r0, 80030ea <_ZN23FrontendApplicationBase37gotoGameScreen1ScreenNoTransitionImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 80030e4:	6803      	ldr	r3, [r0, #0]
 80030e6:	689b      	ldr	r3, [r3, #8]
 80030e8:	4798      	blx	r3

    prepareTransition(currentScreen, currentPresenter, currentTrans);

    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80030ea:	68f0      	ldr	r0, [r6, #12]
     * @return A typed reference to the object at the specified index.
     */
    template <typename T>
    T& at(const uint16_t index)
    {
        return *static_cast<T*>(element(index));
 80030ec:	2100      	movs	r1, #0
 80030ee:	6803      	ldr	r3, [r0, #0]
        : screenContainer(0), done(false)
 80030f0:	f04f 0b00 	mov.w	fp, #0
 80030f4:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80030f6:	4798      	blx	r3
 80030f8:	4b22      	ldr	r3, [pc, #136]	@ (8003184 <_ZN23FrontendApplicationBase37gotoGameScreen1ScreenNoTransitionImplEv+0x140>)
 80030fa:	4604      	mov	r4, r0
 80030fc:	f8c0 b004 	str.w	fp, [r0, #4]
 8003100:	f880 b008 	strb.w	fp, [r0, #8]
 8003104:	6003      	str	r3, [r0, #0]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8003106:	68b0      	ldr	r0, [r6, #8]
 8003108:	4659      	mov	r1, fp
 800310a:	6803      	ldr	r3, [r0, #0]
 800310c:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800310e:	4798      	blx	r3
 8003110:	4605      	mov	r5, r0
 8003112:	f000 fcdd 	bl	8003ad0 <_ZN15GameScreen1ViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8003116:	6870      	ldr	r0, [r6, #4]
 8003118:	4659      	mov	r1, fp
 800311a:	6803      	ldr	r3, [r0, #0]
 800311c:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800311e:	4798      	blx	r3
 8003120:	4606      	mov	r6, r0
 8003122:	4629      	mov	r1, r5
 8003124:	f000 fc80 	bl	8003a28 <_ZN20GameScreen1PresenterC1ER15GameScreen1View>
    *currentTrans = newTransition;
    *currentPresenter = newPresenter;
    *currentScreen = newScreen;
    model->bind(newPresenter);
 8003128:	1d33      	adds	r3, r6, #4
    *currentPresenter = newPresenter;
 800312a:	f8c7 613c 	str.w	r6, [r7, #316]	@ 0x13c
    *currentTrans = newTransition;
 800312e:	f8c9 4000 	str.w	r4, [r9]
    *currentScreen = newScreen;
 8003132:	f8c8 5000 	str.w	r5, [r8]
public:
    Model();

    void bind(ModelListener* listener)
    {
        modelListener = listener;
 8003136:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 800313a:	682b      	ldr	r3, [r5, #0]
 800313c:	4628      	mov	r0, r5
    
    virtual ~ModelListener() {}

    void bind(Model* m)
    {
        model = m;
 800313e:	f8c6 a008 	str.w	sl, [r6, #8]
 8003142:	68db      	ldr	r3, [r3, #12]
     *
     * @param [in] newPresenter The specific Presenter to be associated with the View.
     */
    void bind(T& newPresenter)
    {
        presenter = &newPresenter;
 8003144:	63ee      	str	r6, [r5, #60]	@ 0x3c
 8003146:	4798      	blx	r3
    newPresenter->activate();
 8003148:	6833      	ldr	r3, [r6, #0]
 800314a:	4630      	mov	r0, r6
 800314c:	681b      	ldr	r3, [r3, #0]
 800314e:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8003150:	4621      	mov	r1, r4
 8003152:	4628      	mov	r0, r5
 8003154:	f00c f8be 	bl	800f2d4 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8003158:	6823      	ldr	r3, [r4, #0]
 800315a:	4620      	mov	r0, r4
 800315c:	691b      	ldr	r3, [r3, #16]
 800315e:	4798      	blx	r3
    newTransition->invalidate();
 8003160:	4620      	mov	r0, r4
 8003162:	6823      	ldr	r3, [r4, #0]
 8003164:	695b      	ldr	r3, [r3, #20]
}
 8003166:	b001      	add	sp, #4
 8003168:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800316c:	4718      	bx	r3
 800316e:	bf00      	nop
 8003170:	08035188 	.word	0x08035188
 8003174:	08035216 	.word	0x08035216
 8003178:	080352f0 	.word	0x080352f0
 800317c:	08035337 	.word	0x08035337
 8003180:	080353da 	.word	0x080353da
 8003184:	080354f4 	.word	0x080354f4
 8003188:	200830e4 	.word	0x200830e4
 800318c:	200830e0 	.word	0x200830e0

08003190 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>:
FrontendApplicationBase::FrontendApplicationBase(Model& m, FrontendHeap& heap)
 8003190:	b570      	push	{r4, r5, r6, lr}
 8003192:	4604      	mov	r4, r0
 8003194:	460d      	mov	r5, r1
 8003196:	4616      	mov	r6, r2
          pendingScreenTransitionCallback(0)
 8003198:	f00a f96c 	bl	800d474 <_ZN8touchgfx11ApplicationC1Ev>
        : currentPresenter(0),
 800319c:	2100      	movs	r1, #0
        instance = this;
 800319e:	4b0a      	ldr	r3, [pc, #40]	@ (80031c8 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x38>)
        : pobject(0), pmemfun(0)
 80031a0:	e9c4 1153 	strd	r1, r1, [r4, #332]	@ 0x14c
 80031a4:	601c      	str	r4, [r3, #0]
      model(m)
 80031a6:	4b09      	ldr	r3, [pc, #36]	@ (80031cc <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x3c>)
          pendingScreenTransitionCallback(0)
 80031a8:	e9c4 114f 	strd	r1, r1, [r4, #316]	@ 0x13c
 80031ac:	6023      	str	r3, [r4, #0]
 80031ae:	4b08      	ldr	r3, [pc, #32]	@ (80031d0 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x40>)
 80031b0:	e9c4 6555 	strd	r6, r5, [r4, #340]	@ 0x154
 80031b4:	e9c4 3151 	strd	r3, r1, [r4, #324]	@ 0x144
        return instance;
 80031b8:	4b06      	ldr	r3, [pc, #24]	@ (80031d4 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x44>)
 80031ba:	6818      	ldr	r0, [r3, #0]
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_LANDSCAPE);
 80031bc:	6803      	ldr	r3, [r0, #0]
 80031be:	689b      	ldr	r3, [r3, #8]
 80031c0:	4798      	blx	r3
}
 80031c2:	4620      	mov	r0, r4
 80031c4:	bd70      	pop	{r4, r5, r6, pc}
 80031c6:	bf00      	nop
 80031c8:	200830f0 	.word	0x200830f0
 80031cc:	080354a0 	.word	0x080354a0
 80031d0:	08035488 	.word	0x08035488
 80031d4:	200830a4 	.word	0x200830a4

080031d8 <_ZN23FrontendApplicationBase33gotoGameScreen1ScreenNoTransitionEv>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 80031d8:	4b06      	ldr	r3, [pc, #24]	@ (80031f4 <_ZN23FrontendApplicationBase33gotoGameScreen1ScreenNoTransitionEv+0x1c>)
 80031da:	f8c0 0148 	str.w	r0, [r0, #328]	@ 0x148
 80031de:	f8c0 314c 	str.w	r3, [r0, #332]	@ 0x14c
 80031e2:	2300      	movs	r3, #0
 80031e4:	f8c0 3150 	str.w	r3, [r0, #336]	@ 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 80031e8:	f500 73a2 	add.w	r3, r0, #324	@ 0x144
 80031ec:	f8c0 3140 	str.w	r3, [r0, #320]	@ 0x140
}
 80031f0:	4770      	bx	lr
 80031f2:	bf00      	nop
 80031f4:	08003045 	.word	0x08003045

080031f8 <_ZN8touchgfx8Drawable13getFirstChildEv>:
     * @see Container::getFirstChild
     */
    virtual Drawable* getFirstChild()
    {
        return 0;
    }
 80031f8:	2000      	movs	r0, #0
 80031fa:	4770      	bx	lr

080031fc <_ZN8touchgfx8Drawable4setXEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setX(int16_t x)
    {
        rect.x = x;
 80031fc:	8081      	strh	r1, [r0, #4]
    }
 80031fe:	4770      	bx	lr

08003200 <_ZN8touchgfx8Drawable4setYEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setY(int16_t y)
    {
        rect.y = y;
 8003200:	80c1      	strh	r1, [r0, #6]
    }
 8003202:	4770      	bx	lr

08003204 <_ZN8touchgfx8Drawable8setWidthEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setWidth(int16_t width)
    {
        rect.width = width;
 8003204:	8101      	strh	r1, [r0, #8]
    }
 8003206:	4770      	bx	lr

08003208 <_ZN8touchgfx8Drawable9setHeightEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setHeight(int16_t height)
    {
        rect.height = height;
 8003208:	8141      	strh	r1, [r0, #10]
    }
 800320a:	4770      	bx	lr

0800320c <_ZN8touchgfx8Drawable20childGeometryChangedEv>:
     * one or more of its children has changed. Currently only used in ScrollableContainer
     * to redraw scrollbars when the size of the scrolling contents changes.
     */
    virtual void childGeometryChanged()
    {
    }
 800320c:	4770      	bx	lr

0800320e <_ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE>:
     * @param  event The ClickEvent received from the HAL.
     */
    virtual void handleClickEvent(const ClickEvent& event)
    {
        (void)event; // Unused variable
    }
 800320e:	4770      	bx	lr

08003210 <_ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE>:
     * @param  event The GestureEvent received from the HAL.
     */
    virtual void handleGestureEvent(const GestureEvent& event)
    {
        (void)event; // Unused variable
    }
 8003210:	4770      	bx	lr

08003212 <_ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE>:
     * @param  event The DragEvent received from the HAL.
     */
    virtual void handleDragEvent(const DragEvent& event)
    {
        (void)event; // Unused variable
    }
 8003212:	4770      	bx	lr

08003214 <_ZN8touchgfx8Drawable15handleTickEventEv>:
     *
     * @see Application::registerTimerWidget
     */
    virtual void handleTickEvent()
    {
    }
 8003214:	4770      	bx	lr

08003216 <_ZN8touchgfx8Drawable6moveToEss>:
     *
     * @see moveRelative, setXY
     *
     * @note Will redraw the appropriate areas of the screen.
     */
    virtual void moveTo(int16_t x, int16_t y)
 8003216:	b410      	push	{r4}
    {
        moveRelative(x - rect.x, y - rect.y);
 8003218:	88c4      	ldrh	r4, [r0, #6]
 800321a:	6803      	ldr	r3, [r0, #0]
 800321c:	1b12      	subs	r2, r2, r4
 800321e:	8884      	ldrh	r4, [r0, #4]
 8003220:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8003222:	1b09      	subs	r1, r1, r4
 8003224:	b212      	sxth	r2, r2
    }
 8003226:	f85d 4b04 	ldr.w	r4, [sp], #4
        moveRelative(x - rect.x, y - rect.y);
 800322a:	b209      	sxth	r1, r1
 800322c:	4718      	bx	r3

0800322e <_ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_>:
     * @note For TouchGFX internal use only.
     */
    void resetDrawChainCache()
    {
        // Resetting the cached indicators
        cachedVisibleRect.x = UNCACHED_INDICATOR;
 800322e:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 8003232:	8183      	strh	r3, [r0, #12]
        cachedAbsX = UNCACHED_INDICATOR;
 8003234:	f04f 33ff 	mov.w	r3, #4294967295
 8003238:	6203      	str	r3, [r0, #32]
     */
    virtual void setupDrawChain(const Rect& invalidatedArea, Drawable** nextPreviousElement)
    {
        (void)invalidatedArea; // Unused variable
        resetDrawChainCache();
        nextDrawChainElement = *nextPreviousElement;
 800323a:	6813      	ldr	r3, [r2, #0]
 800323c:	61c3      	str	r3, [r0, #28]
        *nextPreviousElement = this;
 800323e:	6010      	str	r0, [r2, #0]
    }
 8003240:	4770      	bx	lr

08003242 <_ZN8touchgfx6Screen11setupScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void setupScreen()
    {
    }
 8003242:	4770      	bx	lr

08003244 <_ZN8touchgfx6Screen15afterTransitionEv>:
     *
     * @see Application::handleTickEvent
     */
    virtual void afterTransition()
    {
    }
 8003244:	4770      	bx	lr

08003246 <_ZN8touchgfx6Screen14tearDownScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void tearDownScreen()
    {
    }
 8003246:	4770      	bx	lr

08003248 <_ZN8touchgfx6Screen15handleTickEventEv>:
     * Called by the Application on the current screen with a frequency of
     * Application::TICK_INTERVAL_MS.
     */
    virtual void handleTickEvent()
    {
    }
 8003248:	4770      	bx	lr

0800324a <_ZN8touchgfx6Screen14handleKeyEventEh>:
     * @param  key The key to handle.
     */
    virtual void handleKeyEvent(uint8_t key)
    {
        (void)key; // Unused variable
    }
 800324a:	4770      	bx	lr

0800324c <_ZN19GameScreen1ViewBase16Block1_1_ClickedEv>:
     * Virtual Action Handlers
     */
    virtual void Block1_1_Clicked()
    {
        // Override and implement this function in GameScreen1
    }
 800324c:	4770      	bx	lr

0800324e <_ZN19GameScreen1ViewBaseD1Ev>:
}

GameScreen1ViewBase::~GameScreen1ViewBase()
{

}
 800324e:	4770      	bx	lr

08003250 <_ZN19GameScreen1ViewBase11setupScreenEv>:

void GameScreen1ViewBase::setupScreen()
{

}
 8003250:	4770      	bx	lr

08003252 <_ZN8touchgfx8CallbackI19GameScreen1ViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8003252:	4770      	bx	lr

08003254 <_ZN8touchgfx8CallbackI19GameScreen1ViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8003254:	4603      	mov	r3, r0
 8003256:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8003258:	6844      	ldr	r4, [r0, #4]
 800325a:	68c2      	ldr	r2, [r0, #12]
 800325c:	689b      	ldr	r3, [r3, #8]
 800325e:	1055      	asrs	r5, r2, #1
 8003260:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8003264:	07d2      	lsls	r2, r2, #31
 8003266:	bf48      	it	mi
 8003268:	5962      	ldrmi	r2, [r4, r5]
    }
 800326a:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 800326c:	bf48      	it	mi
 800326e:	58d3      	ldrmi	r3, [r2, r3]
 8003270:	4718      	bx	r3

08003272 <_ZNK8touchgfx8CallbackI19GameScreen1ViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
    virtual bool isValid() const
 8003272:	4603      	mov	r3, r0
        return (pobject != 0) && (pmemfun != 0);
 8003274:	6840      	ldr	r0, [r0, #4]
 8003276:	b130      	cbz	r0, 8003286 <_ZNK8touchgfx8CallbackI19GameScreen1ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8003278:	689a      	ldr	r2, [r3, #8]
 800327a:	b91a      	cbnz	r2, 8003284 <_ZNK8touchgfx8CallbackI19GameScreen1ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x12>
 800327c:	68d8      	ldr	r0, [r3, #12]
 800327e:	f000 0001 	and.w	r0, r0, #1
 8003282:	4770      	bx	lr
 8003284:	2001      	movs	r0, #1
    }
 8003286:	4770      	bx	lr

08003288 <_ZN8touchgfx8CallbackI19GameScreen1ViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8003288:	b510      	push	{r4, lr}
 800328a:	4604      	mov	r4, r0
 800328c:	2110      	movs	r1, #16
 800328e:	f02e f89a 	bl	80313c6 <_ZdlPvj>
 8003292:	4620      	mov	r0, r4
 8003294:	bd10      	pop	{r4, pc}

08003296 <_ZN19GameScreen1ViewBaseD0Ev>:
GameScreen1ViewBase::~GameScreen1ViewBase()
 8003296:	b510      	push	{r4, lr}
 8003298:	4604      	mov	r4, r0
}
 800329a:	f44f 7131 	mov.w	r1, #708	@ 0x2c4
 800329e:	f02e f892 	bl	80313c6 <_ZdlPvj>
 80032a2:	4620      	mov	r0, r4
 80032a4:	bd10      	pop	{r4, pc}

080032a6 <_ZNK8touchgfx8Drawable17invalidateContentEv>:
        if (visible)
 80032a6:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
 80032aa:	b112      	cbz	r2, 80032b2 <_ZNK8touchgfx8Drawable17invalidateContentEv+0xc>
            invalidate();
 80032ac:	6803      	ldr	r3, [r0, #0]
 80032ae:	695b      	ldr	r3, [r3, #20]
 80032b0:	4718      	bx	r3
    }
 80032b2:	4770      	bx	lr

080032b4 <_ZN19GameScreen1ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void GameScreen1ViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &Block1_1)
 80032b4:	f500 721e 	add.w	r2, r0, #632	@ 0x278
 80032b8:	428a      	cmp	r2, r1
 80032ba:	d102      	bne.n	80032c2 <_ZN19GameScreen1ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0xe>
    {
        //Block1_1_Interaction
        //When Block1_1 clicked call virtual function
        //Call Block1_1_Clicked
        Block1_1_Clicked();
 80032bc:	6803      	ldr	r3, [r0, #0]
 80032be:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80032c0:	4718      	bx	r3
    }
}
 80032c2:	4770      	bx	lr

080032c4 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE>:
     *
     * @param [out] last Result, the address of the actual instance of the Widget.
     */
    virtual void getLastChild(int16_t /*x*/, int16_t /*y*/, Drawable** last)
    {
        if (isVisible() && isTouchable())
 80032c4:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
 80032c8:	b11a      	cbz	r2, 80032d2 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
 80032ca:	f890 2024 	ldrb.w	r2, [r0, #36]	@ 0x24
 80032ce:	b102      	cbz	r2, 80032d2 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
        {
            *last = this;
 80032d0:	6018      	str	r0, [r3, #0]
        }
    }
 80032d2:	4770      	bx	lr

080032d4 <_ZN8touchgfx8Drawable5setXYEss>:
    void setXY(int16_t x, int16_t y)
 80032d4:	b570      	push	{r4, r5, r6, lr}
 80032d6:	4604      	mov	r4, r0
 80032d8:	4615      	mov	r5, r2
        setX(x);
 80032da:	6803      	ldr	r3, [r0, #0]
 80032dc:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80032de:	4798      	blx	r3
        setY(y);
 80032e0:	6823      	ldr	r3, [r4, #0]
 80032e2:	4629      	mov	r1, r5
 80032e4:	4620      	mov	r0, r4
    }
 80032e6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(y);
 80032ea:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 80032ec:	4718      	bx	r3
	...

080032f0 <_ZN19GameScreen1ViewBaseC1Ev>:
GameScreen1ViewBase::GameScreen1ViewBase() :
 80032f0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80032f4:	4604      	mov	r4, r0
        : presenter(0)
 80032f6:	2500      	movs	r5, #0
    buttonCallback(this, &GameScreen1ViewBase::buttonCallbackHandler)
 80032f8:	4626      	mov	r6, r4
GameScreen1ViewBase::GameScreen1ViewBase() :
 80032fa:	b08f      	sub	sp, #60	@ 0x3c
 80032fc:	f00b fe3e 	bl	800ef7c <_ZN8touchgfx6ScreenC1Ev>
    buttonCallback(this, &GameScreen1ViewBase::buttonCallbackHandler)
 8003300:	4bc8      	ldr	r3, [pc, #800]	@ (8003624 <_ZN19GameScreen1ViewBaseC1Ev+0x334>)
 8003302:	63e5      	str	r5, [r4, #60]	@ 0x3c
 8003304:	f846 3b40 	str.w	r3, [r6], #64
class Box : public Widget
{
public:
    /** Construct a new Box with a default alpha value of 255 (solid) */
    Box()
        : Widget(), alpha(255), color(0)
 8003308:	4bc7      	ldr	r3, [pc, #796]	@ (8003628 <_ZN19GameScreen1ViewBaseC1Ev+0x338>)
          touchable(false),
 800330a:	f44f 7280 	mov.w	r2, #256	@ 0x100
        : x(0), y(0), width(0), height(0)
 800330e:	e9c4 3510 	strd	r3, r5, [r4, #64]	@ 0x40
 8003312:	23ff      	movs	r3, #255	@ 0xff
 8003314:	f884 3066 	strb.w	r3, [r4, #102]	@ 0x66
     * array.
     *
     * @param  id (Optional) The unique bitmap identifier.
     */
    Bitmap(const BitmapId id = BITMAP_INVALID)
        : bitmapId(id)
 8003318:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 800331c:	f8a4 2064 	strh.w	r2, [r4, #100]	@ 0x64
 8003320:	f8a4 2090 	strh.w	r2, [r4, #144]	@ 0x90
     * @param   bmp (Optional) The bitmap to display.
     *
     * @see setBitmap
     */
    Image(const Bitmap& bmp = Bitmap())
        : Widget(), bitmap(bmp), alpha(255)
 8003324:	4ac1      	ldr	r2, [pc, #772]	@ (800362c <_ZN19GameScreen1ViewBaseC1Ev+0x33c>)
    {
        Image::setBitmap(bmp);
 8003326:	f10d 0834 	add.w	r8, sp, #52	@ 0x34
 800332a:	f104 096c 	add.w	r9, r4, #108	@ 0x6c
 800332e:	4641      	mov	r1, r8
        : Widget(), bitmap(bmp), alpha(255)
 8003330:	66e2      	str	r2, [r4, #108]	@ 0x6c
 8003332:	f8a4 3092 	strh.w	r3, [r4, #146]	@ 0x92
 8003336:	f884 3094 	strb.w	r3, [r4, #148]	@ 0x94
 800333a:	f104 0b98 	add.w	fp, r4, #152	@ 0x98
        Image::setBitmap(bmp);
 800333e:	4648      	mov	r0, r9
 8003340:	e9c4 5512 	strd	r5, r5, [r4, #72]	@ 0x48
          parent(0),
 8003344:	e9c4 5514 	strd	r5, r5, [r4, #80]	@ 0x50
          nextDrawChainElement(0),
 8003348:	e9c4 5516 	strd	r5, r5, [r4, #88]	@ 0x58
 800334c:	e9c4 551c 	strd	r5, r5, [r4, #112]	@ 0x70
 8003350:	e9c4 551e 	strd	r5, r5, [r4, #120]	@ 0x78
          nextSibling(0),
 8003354:	e9c4 5520 	strd	r5, r5, [r4, #128]	@ 0x80
          cachedAbsX(0),
 8003358:	e9c4 5522 	strd	r5, r5, [r4, #136]	@ 0x88
 800335c:	6625      	str	r5, [r4, #96]	@ 0x60
        : color(col)
 800335e:	66a5      	str	r5, [r4, #104]	@ 0x68
 8003360:	f8ad 3034 	strh.w	r3, [sp, #52]	@ 0x34
 8003364:	f104 0ad4 	add.w	sl, r4, #212	@ 0xd4
 8003368:	f008 ff0d 	bl	800c186 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800336c:	4658      	mov	r0, fp
 800336e:	f008 fee3 	bl	800c138 <_ZN8touchgfx14ButtonWithIconC1Ev>
 8003372:	4650      	mov	r0, sl
 8003374:	f008 fee0 	bl	800c138 <_ZN8touchgfx14ButtonWithIconC1Ev>
 8003378:	f504 7388 	add.w	r3, r4, #272	@ 0x110
 800337c:	4618      	mov	r0, r3
 800337e:	9303      	str	r3, [sp, #12]
 8003380:	f008 feda 	bl	800c138 <_ZN8touchgfx14ButtonWithIconC1Ev>
 8003384:	f504 73a6 	add.w	r3, r4, #332	@ 0x14c
 8003388:	4618      	mov	r0, r3
 800338a:	9304      	str	r3, [sp, #16]
 800338c:	f008 fed4 	bl	800c138 <_ZN8touchgfx14ButtonWithIconC1Ev>
 8003390:	f504 73c4 	add.w	r3, r4, #392	@ 0x188
 8003394:	4618      	mov	r0, r3
 8003396:	9305      	str	r3, [sp, #20]
 8003398:	f008 fece 	bl	800c138 <_ZN8touchgfx14ButtonWithIconC1Ev>
 800339c:	f504 73e2 	add.w	r3, r4, #452	@ 0x1c4
 80033a0:	4618      	mov	r0, r3
 80033a2:	9306      	str	r3, [sp, #24]
 80033a4:	f008 fec8 	bl	800c138 <_ZN8touchgfx14ButtonWithIconC1Ev>
 80033a8:	f504 7300 	add.w	r3, r4, #512	@ 0x200
 80033ac:	4618      	mov	r0, r3
 80033ae:	9307      	str	r3, [sp, #28]
 80033b0:	f008 fec2 	bl	800c138 <_ZN8touchgfx14ButtonWithIconC1Ev>
 80033b4:	f504 730f 	add.w	r3, r4, #572	@ 0x23c
 80033b8:	4618      	mov	r0, r3
 80033ba:	9308      	str	r3, [sp, #32]
 80033bc:	f008 febc 	bl	800c138 <_ZN8touchgfx14ButtonWithIconC1Ev>
 80033c0:	f504 731e 	add.w	r3, r4, #632	@ 0x278
 80033c4:	4618      	mov	r0, r3
 80033c6:	9309      	str	r3, [sp, #36]	@ 0x24
 80033c8:	f008 feb6 	bl	800c138 <_ZN8touchgfx14ButtonWithIconC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 80033cc:	4b98      	ldr	r3, [pc, #608]	@ (8003630 <_ZN19GameScreen1ViewBaseC1Ev+0x340>)
        setXY(x, y);
 80033ce:	462a      	mov	r2, r5
 80033d0:	e9c4 34ad 	strd	r3, r4, [r4, #692]	@ 0x2b4
 80033d4:	4b97      	ldr	r3, [pc, #604]	@ (8003634 <_ZN19GameScreen1ViewBaseC1Ev+0x344>)
 80033d6:	4629      	mov	r1, r5
 80033d8:	e9c4 35af 	strd	r3, r5, [r4, #700]	@ 0x2bc
 80033dc:	4630      	mov	r0, r6
 80033de:	f7ff ff79 	bl	80032d4 <_ZN8touchgfx8Drawable5setXYEss>
        setWidth(width);
 80033e2:	4630      	mov	r0, r6
 80033e4:	f44f 7148 	mov.w	r1, #800	@ 0x320
 80033e8:	f7ff ff0c 	bl	8003204 <_ZN8touchgfx8Drawable8setWidthEs>
        setHeight(height);
 80033ec:	4630      	mov	r0, r6
 80033ee:	f44f 71f0 	mov.w	r1, #480	@ 0x1e0
 80033f2:	f7ff ff09 	bl	8003208 <_ZN8touchgfx8Drawable9setHeightEs>
     *
     * @see getColor, Color::getColorFromRGB
     */
    void setColor(colortype newColor)
    {
        color = newColor;
 80033f6:	f04f 437f 	mov.w	r3, #4278190080	@ 0xff000000
     * @note Must not be called with a Drawable that was already added to the screen. If in doubt,
     *       call remove() first.
     */
    void add(Drawable& d)
    {
        container.add(d);
 80033fa:	1d27      	adds	r7, r4, #4
 80033fc:	66a3      	str	r3, [r4, #104]	@ 0x68
 80033fe:	4631      	mov	r1, r6
 8003400:	4638      	mov	r0, r7
 8003402:	f007 fbf3 	bl	800abec <_ZN8touchgfx9Container3addERNS_8DrawableE>
    BackScreen.setXY(0, 0);
 8003406:	462a      	mov	r2, r5
 8003408:	4629      	mov	r1, r5
 800340a:	4648      	mov	r0, r9
 800340c:	f7ff ff62 	bl	80032d4 <_ZN8touchgfx8Drawable5setXYEss>
 8003410:	2302      	movs	r3, #2
    BackScreen.setBitmap(touchgfx::Bitmap(BITMAP_BACKSCREEN_ID));
 8003412:	4641      	mov	r1, r8
 8003414:	4648      	mov	r0, r9
 8003416:	f8ad 3034 	strh.w	r3, [sp, #52]	@ 0x34
 800341a:	f008 feb4 	bl	800c186 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800341e:	4649      	mov	r1, r9
 8003420:	4638      	mov	r0, r7
 8003422:	f007 fbe3 	bl	800abec <_ZN8touchgfx9Container3addERNS_8DrawableE>
    Block3_3.setXY(150, 150);
 8003426:	2296      	movs	r2, #150	@ 0x96
 8003428:	2603      	movs	r6, #3
     * @note The user code must call invalidate() in order to update the button on the display.
     * @note The value set is overwritten on a subsequent call to setBitmaps.
     */
    void setIconX(int16_t x)
    {
        iconX = x;
 800342a:	f04f 1905 	mov.w	r9, #327685	@ 0x50005
 800342e:	4611      	mov	r1, r2
 8003430:	4658      	mov	r0, fp
 8003432:	f7ff ff4f 	bl	80032d4 <_ZN8touchgfx8Drawable5setXYEss>
    Block3_3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUNDED_TINY_FILL_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUNDED_TINY_FILL_NORMAL_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_CONTENT_OUTLINED_FLAG_50_50_E8F6FB_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_CONTENT_OUTLINED_FLAG_50_50_E8F6FB_SVG_ID));
 8003436:	ab0c      	add	r3, sp, #48	@ 0x30
 8003438:	aa0b      	add	r2, sp, #44	@ 0x2c
 800343a:	4658      	mov	r0, fp
 800343c:	a90a      	add	r1, sp, #40	@ 0x28
 800343e:	f8cd 8000 	str.w	r8, [sp]
 8003442:	f8ad 5028 	strh.w	r5, [sp, #40]	@ 0x28
 8003446:	f8ad 502c 	strh.w	r5, [sp, #44]	@ 0x2c
 800344a:	f8ad 6030 	strh.w	r6, [sp, #48]	@ 0x30
 800344e:	f8ad 6034 	strh.w	r6, [sp, #52]	@ 0x34
 8003452:	f008 fdcc 	bl	800bfee <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 8003456:	4659      	mov	r1, fp
 8003458:	4638      	mov	r0, r7
 800345a:	f8c4 90d0 	str.w	r9, [r4, #208]	@ 0xd0
 800345e:	f007 fbc5 	bl	800abec <_ZN8touchgfx9Container3addERNS_8DrawableE>
    Block3_2.setXY(85, 150);
 8003462:	4650      	mov	r0, sl
 8003464:	2296      	movs	r2, #150	@ 0x96
 8003466:	2155      	movs	r1, #85	@ 0x55
 8003468:	f7ff ff34 	bl	80032d4 <_ZN8touchgfx8Drawable5setXYEss>
    Block3_2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUNDED_TINY_FILL_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUNDED_TINY_FILL_NORMAL_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_CONTENT_OUTLINED_FLAG_50_50_E8F6FB_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_CONTENT_OUTLINED_FLAG_50_50_E8F6FB_SVG_ID));
 800346c:	ab0c      	add	r3, sp, #48	@ 0x30
 800346e:	aa0b      	add	r2, sp, #44	@ 0x2c
 8003470:	4650      	mov	r0, sl
 8003472:	a90a      	add	r1, sp, #40	@ 0x28
 8003474:	f8cd 8000 	str.w	r8, [sp]
 8003478:	f8ad 5028 	strh.w	r5, [sp, #40]	@ 0x28
 800347c:	f8ad 502c 	strh.w	r5, [sp, #44]	@ 0x2c
 8003480:	f8ad 6030 	strh.w	r6, [sp, #48]	@ 0x30
 8003484:	f8ad 6034 	strh.w	r6, [sp, #52]	@ 0x34
 8003488:	f008 fdb1 	bl	800bfee <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 800348c:	4651      	mov	r1, sl
 800348e:	4638      	mov	r0, r7
 8003490:	f8c4 910c 	str.w	r9, [r4, #268]	@ 0x10c
 8003494:	f007 fbaa 	bl	800abec <_ZN8touchgfx9Container3addERNS_8DrawableE>
    Block3_1.setXY(20, 150);
 8003498:	9803      	ldr	r0, [sp, #12]
 800349a:	2296      	movs	r2, #150	@ 0x96
 800349c:	2114      	movs	r1, #20
 800349e:	f7ff ff19 	bl	80032d4 <_ZN8touchgfx8Drawable5setXYEss>
    Block3_1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUNDED_TINY_FILL_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUNDED_TINY_FILL_NORMAL_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_CONTENT_OUTLINED_FLAG_50_50_E8F6FB_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_CONTENT_OUTLINED_FLAG_50_50_E8F6FB_SVG_ID));
 80034a2:	ab0c      	add	r3, sp, #48	@ 0x30
 80034a4:	aa0b      	add	r2, sp, #44	@ 0x2c
 80034a6:	9803      	ldr	r0, [sp, #12]
 80034a8:	a90a      	add	r1, sp, #40	@ 0x28
 80034aa:	f8cd 8000 	str.w	r8, [sp]
 80034ae:	f8ad 5028 	strh.w	r5, [sp, #40]	@ 0x28
 80034b2:	f8ad 502c 	strh.w	r5, [sp, #44]	@ 0x2c
 80034b6:	f8ad 6030 	strh.w	r6, [sp, #48]	@ 0x30
 80034ba:	f8ad 6034 	strh.w	r6, [sp, #52]	@ 0x34
 80034be:	f008 fd96 	bl	800bfee <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 80034c2:	4638      	mov	r0, r7
 80034c4:	9903      	ldr	r1, [sp, #12]
 80034c6:	f8c4 9148 	str.w	r9, [r4, #328]	@ 0x148
 80034ca:	f007 fb8f 	bl	800abec <_ZN8touchgfx9Container3addERNS_8DrawableE>
    Block2_3.setXY(150, 85);
 80034ce:	9804      	ldr	r0, [sp, #16]
 80034d0:	2255      	movs	r2, #85	@ 0x55
 80034d2:	2196      	movs	r1, #150	@ 0x96
 80034d4:	f7ff fefe 	bl	80032d4 <_ZN8touchgfx8Drawable5setXYEss>
    Block2_3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUNDED_TINY_FILL_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUNDED_TINY_FILL_NORMAL_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_CONTENT_OUTLINED_FLAG_50_50_E8F6FB_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_CONTENT_OUTLINED_FLAG_50_50_E8F6FB_SVG_ID));
 80034d8:	ab0c      	add	r3, sp, #48	@ 0x30
 80034da:	aa0b      	add	r2, sp, #44	@ 0x2c
 80034dc:	9804      	ldr	r0, [sp, #16]
 80034de:	a90a      	add	r1, sp, #40	@ 0x28
 80034e0:	f8cd 8000 	str.w	r8, [sp]
 80034e4:	f8ad 5028 	strh.w	r5, [sp, #40]	@ 0x28
 80034e8:	f8ad 502c 	strh.w	r5, [sp, #44]	@ 0x2c
 80034ec:	f8ad 6030 	strh.w	r6, [sp, #48]	@ 0x30
 80034f0:	f8ad 6034 	strh.w	r6, [sp, #52]	@ 0x34
 80034f4:	f008 fd7b 	bl	800bfee <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 80034f8:	4638      	mov	r0, r7
 80034fa:	9904      	ldr	r1, [sp, #16]
 80034fc:	f8c4 9184 	str.w	r9, [r4, #388]	@ 0x184
 8003500:	f007 fb74 	bl	800abec <_ZN8touchgfx9Container3addERNS_8DrawableE>
    Block2_2.setXY(85, 85);
 8003504:	2255      	movs	r2, #85	@ 0x55
 8003506:	9805      	ldr	r0, [sp, #20]
 8003508:	4611      	mov	r1, r2
 800350a:	f7ff fee3 	bl	80032d4 <_ZN8touchgfx8Drawable5setXYEss>
    Block2_2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUNDED_TINY_FILL_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUNDED_TINY_FILL_NORMAL_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_CONTENT_OUTLINED_FLAG_50_50_E8F6FB_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_CONTENT_OUTLINED_FLAG_50_50_E8F6FB_SVG_ID));
 800350e:	ab0c      	add	r3, sp, #48	@ 0x30
 8003510:	aa0b      	add	r2, sp, #44	@ 0x2c
 8003512:	9805      	ldr	r0, [sp, #20]
 8003514:	a90a      	add	r1, sp, #40	@ 0x28
 8003516:	f8cd 8000 	str.w	r8, [sp]
 800351a:	f8ad 5028 	strh.w	r5, [sp, #40]	@ 0x28
 800351e:	f8ad 502c 	strh.w	r5, [sp, #44]	@ 0x2c
 8003522:	f8ad 6030 	strh.w	r6, [sp, #48]	@ 0x30
 8003526:	f8ad 6034 	strh.w	r6, [sp, #52]	@ 0x34
 800352a:	f008 fd60 	bl	800bfee <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 800352e:	4638      	mov	r0, r7
 8003530:	9905      	ldr	r1, [sp, #20]
 8003532:	f8c4 91c0 	str.w	r9, [r4, #448]	@ 0x1c0
 8003536:	f007 fb59 	bl	800abec <_ZN8touchgfx9Container3addERNS_8DrawableE>
    Block2_1.setXY(20, 85);
 800353a:	9806      	ldr	r0, [sp, #24]
 800353c:	2255      	movs	r2, #85	@ 0x55
 800353e:	2114      	movs	r1, #20
 8003540:	f7ff fec8 	bl	80032d4 <_ZN8touchgfx8Drawable5setXYEss>
    Block2_1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUNDED_TINY_FILL_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUNDED_TINY_FILL_NORMAL_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_CONTENT_OUTLINED_FLAG_50_50_E8F6FB_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_CONTENT_OUTLINED_FLAG_50_50_E8F6FB_SVG_ID));
 8003544:	ab0c      	add	r3, sp, #48	@ 0x30
 8003546:	aa0b      	add	r2, sp, #44	@ 0x2c
 8003548:	9806      	ldr	r0, [sp, #24]
 800354a:	a90a      	add	r1, sp, #40	@ 0x28
 800354c:	f8cd 8000 	str.w	r8, [sp]
 8003550:	f8ad 5028 	strh.w	r5, [sp, #40]	@ 0x28
 8003554:	f8ad 502c 	strh.w	r5, [sp, #44]	@ 0x2c
 8003558:	f8ad 6030 	strh.w	r6, [sp, #48]	@ 0x30
 800355c:	f8ad 6034 	strh.w	r6, [sp, #52]	@ 0x34
 8003560:	f008 fd45 	bl	800bfee <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 8003564:	4638      	mov	r0, r7
 8003566:	9906      	ldr	r1, [sp, #24]
 8003568:	f8c4 91fc 	str.w	r9, [r4, #508]	@ 0x1fc
 800356c:	f007 fb3e 	bl	800abec <_ZN8touchgfx9Container3addERNS_8DrawableE>
    Block1_3.setXY(150, 20);
 8003570:	9807      	ldr	r0, [sp, #28]
 8003572:	2214      	movs	r2, #20
 8003574:	2196      	movs	r1, #150	@ 0x96
 8003576:	f7ff fead 	bl	80032d4 <_ZN8touchgfx8Drawable5setXYEss>
    Block1_3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUNDED_TINY_FILL_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUNDED_TINY_FILL_NORMAL_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_CONTENT_OUTLINED_FLAG_50_50_E8F6FB_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_CONTENT_OUTLINED_FLAG_50_50_E8F6FB_SVG_ID));
 800357a:	ab0c      	add	r3, sp, #48	@ 0x30
 800357c:	aa0b      	add	r2, sp, #44	@ 0x2c
 800357e:	9807      	ldr	r0, [sp, #28]
 8003580:	a90a      	add	r1, sp, #40	@ 0x28
 8003582:	f8cd 8000 	str.w	r8, [sp]
 8003586:	f8ad 5028 	strh.w	r5, [sp, #40]	@ 0x28
 800358a:	f8ad 502c 	strh.w	r5, [sp, #44]	@ 0x2c
 800358e:	f8ad 6030 	strh.w	r6, [sp, #48]	@ 0x30
 8003592:	f8ad 6034 	strh.w	r6, [sp, #52]	@ 0x34
 8003596:	f008 fd2a 	bl	800bfee <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 800359a:	4638      	mov	r0, r7
 800359c:	9907      	ldr	r1, [sp, #28]
 800359e:	f8c4 9238 	str.w	r9, [r4, #568]	@ 0x238
 80035a2:	f007 fb23 	bl	800abec <_ZN8touchgfx9Container3addERNS_8DrawableE>
    Block1_2.setXY(85, 20);
 80035a6:	9808      	ldr	r0, [sp, #32]
 80035a8:	2214      	movs	r2, #20
 80035aa:	2155      	movs	r1, #85	@ 0x55
 80035ac:	f7ff fe92 	bl	80032d4 <_ZN8touchgfx8Drawable5setXYEss>
    Block1_2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUNDED_TINY_FILL_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUNDED_TINY_FILL_NORMAL_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_CONTENT_OUTLINED_FLAG_50_50_E8F6FB_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_CONTENT_OUTLINED_FLAG_50_50_E8F6FB_SVG_ID));
 80035b0:	ab0c      	add	r3, sp, #48	@ 0x30
 80035b2:	aa0b      	add	r2, sp, #44	@ 0x2c
 80035b4:	9808      	ldr	r0, [sp, #32]
 80035b6:	a90a      	add	r1, sp, #40	@ 0x28
 80035b8:	f8cd 8000 	str.w	r8, [sp]
 80035bc:	f8ad 5028 	strh.w	r5, [sp, #40]	@ 0x28
 80035c0:	f8ad 502c 	strh.w	r5, [sp, #44]	@ 0x2c
 80035c4:	f8ad 6030 	strh.w	r6, [sp, #48]	@ 0x30
 80035c8:	f8ad 6034 	strh.w	r6, [sp, #52]	@ 0x34
 80035cc:	f008 fd0f 	bl	800bfee <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 80035d0:	4638      	mov	r0, r7
 80035d2:	9908      	ldr	r1, [sp, #32]
 80035d4:	f8c4 9274 	str.w	r9, [r4, #628]	@ 0x274
 80035d8:	f007 fb08 	bl	800abec <_ZN8touchgfx9Container3addERNS_8DrawableE>
    Block1_1.setXY(20, 20);
 80035dc:	2214      	movs	r2, #20
 80035de:	9809      	ldr	r0, [sp, #36]	@ 0x24
 80035e0:	4611      	mov	r1, r2
 80035e2:	f7ff fe77 	bl	80032d4 <_ZN8touchgfx8Drawable5setXYEss>
    Block1_1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUNDED_TINY_FILL_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUNDED_TINY_FILL_NORMAL_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_CONTENT_OUTLINED_FLAG_50_50_E8F6FB_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_CONTENT_OUTLINED_FLAG_50_50_E8F6FB_SVG_ID));
 80035e6:	9809      	ldr	r0, [sp, #36]	@ 0x24
 80035e8:	ab0c      	add	r3, sp, #48	@ 0x30
 80035ea:	aa0b      	add	r2, sp, #44	@ 0x2c
 80035ec:	a90a      	add	r1, sp, #40	@ 0x28
 80035ee:	f8cd 8000 	str.w	r8, [sp]
 80035f2:	f8ad 5028 	strh.w	r5, [sp, #40]	@ 0x28
 80035f6:	f8ad 502c 	strh.w	r5, [sp, #44]	@ 0x2c
 80035fa:	f8ad 6030 	strh.w	r6, [sp, #48]	@ 0x30
 80035fe:	f8ad 6034 	strh.w	r6, [sp, #52]	@ 0x34
 8003602:	f008 fcf4 	bl	800bfee <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
    Block1_1.setAction(buttonCallback);
 8003606:	f504 732d 	add.w	r3, r4, #692	@ 0x2b4
 800360a:	4638      	mov	r0, r7
 800360c:	9909      	ldr	r1, [sp, #36]	@ 0x24
 800360e:	f8c4 92b0 	str.w	r9, [r4, #688]	@ 0x2b0
     *
     * @see GenericCallback, handleClickEvent, ClickEvent
     */
    void setAction(GenericCallback<const AbstractButton&>& callback)
    {
        action = &callback;
 8003612:	f8c4 32a0 	str.w	r3, [r4, #672]	@ 0x2a0
 8003616:	f007 fae9 	bl	800abec <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 800361a:	4620      	mov	r0, r4
 800361c:	b00f      	add	sp, #60	@ 0x3c
 800361e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003622:	bf00      	nop
 8003624:	08035530 	.word	0x08035530
 8003628:	08035ca0 	.word	0x08035ca0
 800362c:	08035d80 	.word	0x08035d80
 8003630:	08035518 	.word	0x08035518
 8003634:	080032b5 	.word	0x080032b5

08003638 <_ZNK8touchgfx13GeneratedFont12getGSUBTableEv>:
    virtual int8_t getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const;

    virtual const uint16_t* getGSUBTable() const
    {
        return gsubTable;
    }
 8003638:	6a40      	ldr	r0, [r0, #36]	@ 0x24
 800363a:	4770      	bx	lr

0800363c <_ZNK8touchgfx13GeneratedFont23getContextualFormsTableEv>:

    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return arabicTable;
    }
 800363c:	6a80      	ldr	r0, [r0, #40]	@ 0x28
 800363e:	4770      	bx	lr

08003640 <_ZN8touchgfx13GeneratedFontD1Ev>:
class GeneratedFont : public ConstFont
 8003640:	4770      	bx	lr

08003642 <_ZNK8touchgfx13GeneratedFont12getPixelDataEPKNS_9GlyphNodeE>:
}

const uint8_t* GeneratedFont::getPixelData(const GlyphNode* glyph) const
{
    const uint8_t* const* table = (const uint8_t* const*)glyphData;
    return &(table[glyph->unicode / 2048][glyph->dataOffset]);
 8003642:	888b      	ldrh	r3, [r1, #4]
 8003644:	69c0      	ldr	r0, [r0, #28]
 8003646:	0adb      	lsrs	r3, r3, #11
 8003648:	680a      	ldr	r2, [r1, #0]
 800364a:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
}
 800364e:	4410      	add	r0, r2
 8003650:	4770      	bx	lr

08003652 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE>:

int8_t GeneratedFont::getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
{
 8003652:	b510      	push	{r4, lr}
 8003654:	4604      	mov	r4, r0
    if (!glyph || glyph->kerningTableSize == 0)
 8003656:	b1ba      	cbz	r2, 8003688 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
 8003658:	7b10      	ldrb	r0, [r2, #12]
 800365a:	b168      	cbz	r0, 8003678 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>
        return ((flags & GLYPH_DATA_KERNINGTABLEPOS_BIT8_10) << 8) | _kerningTablePos;
 800365c:	7b53      	ldrb	r3, [r2, #13]
 800365e:	7ad2      	ldrb	r2, [r2, #11]
 8003660:	021b      	lsls	r3, r3, #8
 8003662:	f403 63e0 	and.w	r3, r3, #1792	@ 0x700
    {
        return 0;
    }

    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 8003666:	431a      	orrs	r2, r3
 8003668:	6a23      	ldr	r3, [r4, #32]
 800366a:	eb03 0382 	add.w	r3, r3, r2, lsl #2
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
    {
        if (prevChar == kerndata->unicodePrevChar)
 800366e:	881a      	ldrh	r2, [r3, #0]
 8003670:	428a      	cmp	r2, r1
 8003672:	d102      	bne.n	800367a <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x28>
        {
            return kerndata->distance;
 8003674:	f993 0002 	ldrsb.w	r0, [r3, #2]
        {
            break;
        }
    }
    return 0;
}
 8003678:	bd10      	pop	{r4, pc}
        if (prevChar < kerndata->unicodePrevChar)
 800367a:	d805      	bhi.n	8003688 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 800367c:	3801      	subs	r0, #1
 800367e:	b280      	uxth	r0, r0
 8003680:	3304      	adds	r3, #4
 8003682:	2800      	cmp	r0, #0
 8003684:	d1f3      	bne.n	800366e <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x1c>
 8003686:	e7f7      	b.n	8003678 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>
        return 0;
 8003688:	2000      	movs	r0, #0
 800368a:	e7f5      	b.n	8003678 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>

0800368c <_ZN8touchgfx13GeneratedFontD0Ev>:
 800368c:	b510      	push	{r4, lr}
 800368e:	4604      	mov	r4, r0
 8003690:	212c      	movs	r1, #44	@ 0x2c
 8003692:	f02d fe98 	bl	80313c6 <_ZdlPvj>
 8003696:	4620      	mov	r0, r4
 8003698:	bd10      	pop	{r4, pc}
	...

0800369c <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>:
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
 800369c:	b530      	push	{r4, r5, lr}
 800369e:	4604      	mov	r4, r0
 80036a0:	b08b      	sub	sp, #44	@ 0x2c
      arabicTable(formsTable)
 80036a2:	f8bd 5060 	ldrh.w	r5, [sp, #96]	@ 0x60
 80036a6:	9508      	str	r5, [sp, #32]
 80036a8:	f8bd 505c 	ldrh.w	r5, [sp, #92]	@ 0x5c
 80036ac:	9507      	str	r5, [sp, #28]
 80036ae:	f89d 5050 	ldrb.w	r5, [sp, #80]	@ 0x50
 80036b2:	9506      	str	r5, [sp, #24]
 80036b4:	f89d 504c 	ldrb.w	r5, [sp, #76]	@ 0x4c
 80036b8:	9505      	str	r5, [sp, #20]
 80036ba:	f89d 5048 	ldrb.w	r5, [sp, #72]	@ 0x48
 80036be:	9504      	str	r5, [sp, #16]
 80036c0:	f89d 5044 	ldrb.w	r5, [sp, #68]	@ 0x44
 80036c4:	9503      	str	r5, [sp, #12]
 80036c6:	f89d 5040 	ldrb.w	r5, [sp, #64]	@ 0x40
 80036ca:	9502      	str	r5, [sp, #8]
 80036cc:	f89d 503c 	ldrb.w	r5, [sp, #60]	@ 0x3c
 80036d0:	9501      	str	r5, [sp, #4]
 80036d2:	f8bd 5038 	ldrh.w	r5, [sp, #56]	@ 0x38
 80036d6:	9500      	str	r5, [sp, #0]
 80036d8:	f00b fa56 	bl	800eb88 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>
}
 80036dc:	4620      	mov	r0, r4
      arabicTable(formsTable)
 80036de:	4b06      	ldr	r3, [pc, #24]	@ (80036f8 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE+0x5c>)
 80036e0:	6023      	str	r3, [r4, #0]
      glyphData(glyphDataInternalFlash),
 80036e2:	9b15      	ldr	r3, [sp, #84]	@ 0x54
 80036e4:	61e3      	str	r3, [r4, #28]
      kerningData(kerningList),
 80036e6:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 80036e8:	6223      	str	r3, [r4, #32]
      gsubTable(gsubData),
 80036ea:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 80036ec:	6263      	str	r3, [r4, #36]	@ 0x24
      arabicTable(formsTable)
 80036ee:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
 80036f0:	62a3      	str	r3, [r4, #40]	@ 0x28
}
 80036f2:	b00b      	add	sp, #44	@ 0x2c
 80036f4:	bd30      	pop	{r4, r5, pc}
 80036f6:	bf00      	nop
 80036f8:	08035568 	.word	0x08035568

080036fc <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_10_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_10_4bpp();

touchgfx::GeneratedFont& getFont_verdana_10_4bpp()
{
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 10, 0, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 80036fc:	4770      	bx	lr
	...

08003700 <_Z23getFont_verdana_10_4bppv>:
{
 8003700:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 10, 0, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 8003702:	4d15      	ldr	r5, [pc, #84]	@ (8003758 <_Z23getFont_verdana_10_4bppv+0x58>)
{
 8003704:	b08f      	sub	sp, #60	@ 0x3c
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 10, 0, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 8003706:	e8d5 4faf 	lda	r4, [r5]
 800370a:	f014 0401 	ands.w	r4, r4, #1
 800370e:	d120      	bne.n	8003752 <_Z23getFont_verdana_10_4bppv+0x52>
 8003710:	4628      	mov	r0, r5
 8003712:	f02d fe5a 	bl	80313ca <__cxa_guard_acquire>
 8003716:	b1e0      	cbz	r0, 8003752 <_Z23getFont_verdana_10_4bppv+0x52>
 8003718:	233f      	movs	r3, #63	@ 0x3f
 800371a:	9309      	str	r3, [sp, #36]	@ 0x24
 800371c:	4b0f      	ldr	r3, [pc, #60]	@ (800375c <_Z23getFont_verdana_10_4bppv+0x5c>)
 800371e:	2201      	movs	r2, #1
 8003720:	9308      	str	r3, [sp, #32]
 8003722:	4b0f      	ldr	r3, [pc, #60]	@ (8003760 <_Z23getFont_verdana_10_4bppv+0x60>)
 8003724:	490f      	ldr	r1, [pc, #60]	@ (8003764 <_Z23getFont_verdana_10_4bppv+0x64>)
 8003726:	e9cd 4306 	strd	r4, r3, [sp, #24]
 800372a:	2304      	movs	r3, #4
 800372c:	e9cd 3203 	strd	r3, r2, [sp, #12]
 8003730:	230a      	movs	r3, #10
 8003732:	e9cd 440b 	strd	r4, r4, [sp, #44]	@ 0x2c
 8003736:	9300      	str	r3, [sp, #0]
 8003738:	e9cd 4401 	strd	r4, r4, [sp, #4]
 800373c:	480a      	ldr	r0, [pc, #40]	@ (8003768 <_Z23getFont_verdana_10_4bppv+0x68>)
 800373e:	940a      	str	r4, [sp, #40]	@ 0x28
 8003740:	9405      	str	r4, [sp, #20]
 8003742:	f7ff ffab 	bl	800369c <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8003746:	4809      	ldr	r0, [pc, #36]	@ (800376c <_Z23getFont_verdana_10_4bppv+0x6c>)
 8003748:	f02f f834 	bl	80327b4 <atexit>
 800374c:	4628      	mov	r0, r5
 800374e:	f02d fe48 	bl	80313e2 <__cxa_guard_release>
    return verdana_10_4bpp;
}
 8003752:	4805      	ldr	r0, [pc, #20]	@ (8003768 <_Z23getFont_verdana_10_4bppv+0x68>)
 8003754:	b00f      	add	sp, #60	@ 0x3c
 8003756:	bd30      	pop	{r4, r5, pc}
 8003758:	2006ea1c 	.word	0x2006ea1c
 800375c:	08038b20 	.word	0x08038b20
 8003760:	08038b2c 	.word	0x08038b2c
 8003764:	08038af0 	.word	0x08038af0
 8003768:	2006ea20 	.word	0x2006ea20
 800376c:	080036fd 	.word	0x080036fd

08003770 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_20_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_20_4bpp();

touchgfx::GeneratedFont& getFont_verdana_20_4bpp()
{
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 1, 20, 20, 0, 0, 4, 1, 0, 0, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
 8003770:	4770      	bx	lr
	...

08003774 <_Z23getFont_verdana_20_4bppv>:
{
 8003774:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 1, 20, 20, 0, 0, 4, 1, 0, 0, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
 8003776:	4d15      	ldr	r5, [pc, #84]	@ (80037cc <_Z23getFont_verdana_20_4bppv+0x58>)
{
 8003778:	b08f      	sub	sp, #60	@ 0x3c
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 1, 20, 20, 0, 0, 4, 1, 0, 0, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
 800377a:	e8d5 4faf 	lda	r4, [r5]
 800377e:	f014 0401 	ands.w	r4, r4, #1
 8003782:	d120      	bne.n	80037c6 <_Z23getFont_verdana_20_4bppv+0x52>
 8003784:	4628      	mov	r0, r5
 8003786:	f02d fe20 	bl	80313ca <__cxa_guard_acquire>
 800378a:	b1e0      	cbz	r0, 80037c6 <_Z23getFont_verdana_20_4bppv+0x52>
 800378c:	233f      	movs	r3, #63	@ 0x3f
 800378e:	9309      	str	r3, [sp, #36]	@ 0x24
 8003790:	4b0f      	ldr	r3, [pc, #60]	@ (80037d0 <_Z23getFont_verdana_20_4bppv+0x5c>)
 8003792:	2201      	movs	r2, #1
 8003794:	9308      	str	r3, [sp, #32]
 8003796:	4b0f      	ldr	r3, [pc, #60]	@ (80037d4 <_Z23getFont_verdana_20_4bppv+0x60>)
 8003798:	490f      	ldr	r1, [pc, #60]	@ (80037d8 <_Z23getFont_verdana_20_4bppv+0x64>)
 800379a:	e9cd 4306 	strd	r4, r3, [sp, #24]
 800379e:	2304      	movs	r3, #4
 80037a0:	e9cd 3203 	strd	r3, r2, [sp, #12]
 80037a4:	2314      	movs	r3, #20
 80037a6:	e9cd 440b 	strd	r4, r4, [sp, #44]	@ 0x2c
 80037aa:	9300      	str	r3, [sp, #0]
 80037ac:	e9cd 4401 	strd	r4, r4, [sp, #4]
 80037b0:	480a      	ldr	r0, [pc, #40]	@ (80037dc <_Z23getFont_verdana_20_4bppv+0x68>)
 80037b2:	940a      	str	r4, [sp, #40]	@ 0x28
 80037b4:	9405      	str	r4, [sp, #20]
 80037b6:	f7ff ff71 	bl	800369c <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 80037ba:	4809      	ldr	r0, [pc, #36]	@ (80037e0 <_Z23getFont_verdana_20_4bppv+0x6c>)
 80037bc:	f02e fffa 	bl	80327b4 <atexit>
 80037c0:	4628      	mov	r0, r5
 80037c2:	f02d fe0e 	bl	80313e2 <__cxa_guard_release>
    return verdana_20_4bpp;
}
 80037c6:	4805      	ldr	r0, [pc, #20]	@ (80037dc <_Z23getFont_verdana_20_4bppv+0x68>)
 80037c8:	b00f      	add	sp, #60	@ 0x3c
 80037ca:	bd30      	pop	{r4, r5, pc}
 80037cc:	2006ea4c 	.word	0x2006ea4c
 80037d0:	08038b24 	.word	0x08038b24
 80037d4:	08038b30 	.word	0x08038b30
 80037d8:	08038b00 	.word	0x08038b00
 80037dc:	2006ea50 	.word	0x2006ea50
 80037e0:	08003771 	.word	0x08003771

080037e4 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_40_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_40_4bpp();

touchgfx::GeneratedFont& getFont_verdana_40_4bpp()
{
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 80037e4:	4770      	bx	lr
	...

080037e8 <_Z23getFont_verdana_40_4bppv>:
{
 80037e8:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 80037ea:	4d15      	ldr	r5, [pc, #84]	@ (8003840 <_Z23getFont_verdana_40_4bppv+0x58>)
{
 80037ec:	b08f      	sub	sp, #60	@ 0x3c
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 80037ee:	e8d5 4faf 	lda	r4, [r5]
 80037f2:	f014 0401 	ands.w	r4, r4, #1
 80037f6:	d120      	bne.n	800383a <_Z23getFont_verdana_40_4bppv+0x52>
 80037f8:	4628      	mov	r0, r5
 80037fa:	f02d fde6 	bl	80313ca <__cxa_guard_acquire>
 80037fe:	b1e0      	cbz	r0, 800383a <_Z23getFont_verdana_40_4bppv+0x52>
 8003800:	233f      	movs	r3, #63	@ 0x3f
 8003802:	9309      	str	r3, [sp, #36]	@ 0x24
 8003804:	4b0f      	ldr	r3, [pc, #60]	@ (8003844 <_Z23getFont_verdana_40_4bppv+0x5c>)
 8003806:	2201      	movs	r2, #1
 8003808:	9308      	str	r3, [sp, #32]
 800380a:	4b0f      	ldr	r3, [pc, #60]	@ (8003848 <_Z23getFont_verdana_40_4bppv+0x60>)
 800380c:	490f      	ldr	r1, [pc, #60]	@ (800384c <_Z23getFont_verdana_40_4bppv+0x64>)
 800380e:	e9cd 4306 	strd	r4, r3, [sp, #24]
 8003812:	2304      	movs	r3, #4
 8003814:	e9cd 3203 	strd	r3, r2, [sp, #12]
 8003818:	2328      	movs	r3, #40	@ 0x28
 800381a:	e9cd 440b 	strd	r4, r4, [sp, #44]	@ 0x2c
 800381e:	9300      	str	r3, [sp, #0]
 8003820:	e9cd 4401 	strd	r4, r4, [sp, #4]
 8003824:	480a      	ldr	r0, [pc, #40]	@ (8003850 <_Z23getFont_verdana_40_4bppv+0x68>)
 8003826:	940a      	str	r4, [sp, #40]	@ 0x28
 8003828:	9405      	str	r4, [sp, #20]
 800382a:	f7ff ff37 	bl	800369c <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 800382e:	4809      	ldr	r0, [pc, #36]	@ (8003854 <_Z23getFont_verdana_40_4bppv+0x6c>)
 8003830:	f02e ffc0 	bl	80327b4 <atexit>
 8003834:	4628      	mov	r0, r5
 8003836:	f02d fdd4 	bl	80313e2 <__cxa_guard_release>
    return verdana_40_4bpp;
}
 800383a:	4805      	ldr	r0, [pc, #20]	@ (8003850 <_Z23getFont_verdana_40_4bppv+0x68>)
 800383c:	b00f      	add	sp, #60	@ 0x3c
 800383e:	bd30      	pop	{r4, r5, pc}
 8003840:	2006ea7c 	.word	0x2006ea7c
 8003844:	08038b28 	.word	0x08038b28
 8003848:	08038b34 	.word	0x08038b34
 800384c:	08038b10 	.word	0x08038b10
 8003850:	2006ea80 	.word	0x2006ea80
 8003854:	080037e5 	.word	0x080037e5

08003858 <_ZNK8touchgfx4Font12getGSUBTableEv>:
    }
 8003858:	2000      	movs	r0, #0
 800385a:	4770      	bx	lr

0800385c <_ZNK8touchgfx4Font23getContextualFormsTableEv>:
    }
 800385c:	2000      	movs	r0, #0
 800385e:	4770      	bx	lr

08003860 <_ZNK8touchgfx4Font14getStringWidthEPKtz>:
#include <touchgfx/hal/HAL.hpp>
#include <touchgfx/lcd/LCD.hpp>
#include <texts/TypedTextDatabase.hpp>

uint16_t touchgfx::Font::getStringWidth(const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 8003860:	b40e      	push	{r1, r2, r3}
 8003862:	b503      	push	{r0, r1, lr}
 8003864:	ab03      	add	r3, sp, #12
 8003866:	f853 2b04 	ldr.w	r2, [r3], #4
    va_list pArg;
    va_start(pArg, text);
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 800386a:	2100      	movs	r1, #0
    va_start(pArg, text);
 800386c:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 800386e:	f00a fc8b 	bl	800e188 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 8003872:	b002      	add	sp, #8
 8003874:	f85d eb04 	ldr.w	lr, [sp], #4
 8003878:	b003      	add	sp, #12
 800387a:	4770      	bx	lr

0800387c <_ZNK8touchgfx4Font14getStringWidthEhPKtz>:

uint16_t touchgfx::Font::getStringWidth(touchgfx::TextDirection textDirection, const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 800387c:	b40c      	push	{r2, r3}
 800387e:	b507      	push	{r0, r1, r2, lr}
 8003880:	ab04      	add	r3, sp, #16
 8003882:	f853 2b04 	ldr.w	r2, [r3], #4
    va_list pArg;
    va_start(pArg, text);
 8003886:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(textDirection, text, pArg);
 8003888:	f00a fc7e 	bl	800e188 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 800388c:	b003      	add	sp, #12
 800388e:	f85d eb04 	ldr.w	lr, [sp], #4
 8003892:	b002      	add	sp, #8
 8003894:	4770      	bx	lr
	...

08003898 <_ZN8touchgfx12TextProvider15getNextLigatureEh>:

touchgfx::Unicode::UnicodeChar touchgfx::TextProvider::getNextLigature(TextDirection direction)
{
    if (fontGsubTable && nextCharacters.peekChar())
 8003898:	6c43      	ldr	r3, [r0, #68]	@ 0x44
{
 800389a:	b510      	push	{r4, lr}
 800389c:	4604      	mov	r4, r0
    if (fontGsubTable && nextCharacters.peekChar())
 800389e:	b373      	cbz	r3, 80038fe <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
            return used == size;
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
        {
            assert(used > 0);
 80038a0:	8f03      	ldrh	r3, [r0, #56]	@ 0x38
 80038a2:	b92b      	cbnz	r3, 80038b0 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x18>
 80038a4:	21c5      	movs	r1, #197	@ 0xc5
 80038a6:	4b18      	ldr	r3, [pc, #96]	@ (8003908 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x70>)
 80038a8:	4a18      	ldr	r2, [pc, #96]	@ (800390c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x74>)
            return buffer[pos];
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar(uint16_t offset)
        {
            assert(offset < used);
 80038aa:	4819      	ldr	r0, [pc, #100]	@ (8003910 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x78>)
 80038ac:	f02e ff64 	bl	8032778 <__assert_func>
            return buffer[pos];
 80038b0:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
 80038b2:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 80038b6:	8c5b      	ldrh	r3, [r3, #34]	@ 0x22
 80038b8:	b30b      	cbz	r3, 80038fe <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
    {
        substituteGlyphs();
 80038ba:	f00c f9d2 	bl	800fc62 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>
            assert(offset < used);
 80038be:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
 80038c0:	2b01      	cmp	r3, #1
 80038c2:	d803      	bhi.n	80038cc <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x34>
 80038c4:	21cb      	movs	r1, #203	@ 0xcb
 80038c6:	4b13      	ldr	r3, [pc, #76]	@ (8003914 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x7c>)
 80038c8:	4a13      	ldr	r2, [pc, #76]	@ (8003918 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x80>)
 80038ca:	e7ee      	b.n	80038aa <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x12>
            const uint16_t index = pos + offset;
 80038cc:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
        if (nextCharacters.peekChar(1) == 0x093F) // Hindi I-matra
 80038ce:	f640 103f 	movw	r0, #2367	@ 0x93f
 80038d2:	1c53      	adds	r3, r2, #1
 80038d4:	b29b      	uxth	r3, r3
            return buffer[index < size ? index : index - size];
 80038d6:	4619      	mov	r1, r3
 80038d8:	2b09      	cmp	r3, #9
 80038da:	bf88      	it	hi
 80038dc:	f1a3 010a 	subhi.w	r1, r3, #10
 80038e0:	eb04 0141 	add.w	r1, r4, r1, lsl #1
 80038e4:	8c49      	ldrh	r1, [r1, #34]	@ 0x22
 80038e6:	4281      	cmp	r1, r0
 80038e8:	d109      	bne.n	80038fe <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
 80038ea:	2b0a      	cmp	r3, #10
 80038ec:	bf28      	it	cs
 80038ee:	2300      	movcs	r3, #0
 80038f0:	eb04 0242 	add.w	r2, r4, r2, lsl #1
            return buffer[pos];
 80038f4:	8c50      	ldrh	r0, [r2, #34]	@ 0x22

        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
        {
            assert(used > 1);
            const uint16_t index = pos + 1;
            buffer[index < size ? index : 0] = newChar;
 80038f6:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 80038fa:	8458      	strh	r0, [r3, #34]	@ 0x22
            buffer[pos] = newChar;
 80038fc:	8451      	strh	r1, [r2, #34]	@ 0x22
        {
            nextCharacters.replaceAt1(nextCharacters.peekChar());
            nextCharacters.replaceAt0(0x093F);
        }
    }
    return getNextChar();
 80038fe:	4620      	mov	r0, r4
}
 8003900:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    return getNextChar();
 8003904:	f00c b8b0 	b.w	800fa68 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8003908:	080355c8 	.word	0x080355c8
 800390c:	080355d1 	.word	0x080355d1
 8003910:	0803567c 	.word	0x0803567c
 8003914:	080356c6 	.word	0x080356c6
 8003918:	080356d4 	.word	0x080356d4

0800391c <_ZN8touchgfx12TextProvider18initializeInternalEv>:

void touchgfx::TextProvider::initializeInternal()
{
    fillInputBuffer();
 800391c:	f00c b86b 	b.w	800f9f6 <_ZN8touchgfx12TextProvider15fillInputBufferEv>

08003920 <_ZN8touchgfx5Texts11setLanguageEt>:
touchgfx::LanguageId touchgfx::Texts::currentLanguage = static_cast<touchgfx::LanguageId>(0);
static const touchgfx::Unicode::UnicodeChar* currentLanguagePtr = 0;
static const uint32_t* currentLanguageIndices = 0;

void touchgfx::Texts::setLanguage(touchgfx::LanguageId id)
{
 8003920:	b538      	push	{r3, r4, r5, lr}
    const touchgfx::TypedText::TypedTextData* currentLanguageTypedText = 0;
    if (id < 1)
 8003922:	bb18      	cbnz	r0, 800396c <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
    {
        if (languagesArray[id] != 0)
 8003924:	4b12      	ldr	r3, [pc, #72]	@ (8003970 <_ZN8touchgfx5Texts11setLanguageEt+0x50>)
 8003926:	4813      	ldr	r0, [pc, #76]	@ (8003974 <_ZN8touchgfx5Texts11setLanguageEt+0x54>)
 8003928:	681c      	ldr	r4, [r3, #0]
 800392a:	4913      	ldr	r1, [pc, #76]	@ (8003978 <_ZN8touchgfx5Texts11setLanguageEt+0x58>)
 800392c:	b1b4      	cbz	r4, 800395c <_ZN8touchgfx5Texts11setLanguageEt+0x3c>
        {
            // Dynamic translation is added
            const TranslationHeader* translation = languagesArray[id];
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 800392e:	6822      	ldr	r2, [r4, #0]
 8003930:	4422      	add	r2, r4
 8003932:	6002      	str	r2, [r0, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
 8003934:	6862      	ldr	r2, [r4, #4]
 8003936:	4422      	add	r2, r4
 8003938:	600a      	str	r2, [r1, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 800393a:	68a2      	ldr	r2, [r4, #8]
 800393c:	4414      	add	r4, r2
        }
    }

    if (currentLanguageTypedText)
    {
        currentLanguage = id;
 800393e:	2200      	movs	r2, #0
 8003940:	4b0e      	ldr	r3, [pc, #56]	@ (800397c <_ZN8touchgfx5Texts11setLanguageEt+0x5c>)
 8003942:	801a      	strh	r2, [r3, #0]
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
                                                       TypedTextDatabase::getFonts(), TypedTextDatabase::getInstanceSize());
 8003944:	f000 f82a 	bl	800399c <_ZN17TypedTextDatabase8getFontsEv>
 8003948:	4605      	mov	r5, r0
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
 800394a:	f000 f825 	bl	8003998 <_ZN17TypedTextDatabase15getInstanceSizeEv>
        typedTexts = data;
 800394e:	4b0c      	ldr	r3, [pc, #48]	@ (8003980 <_ZN8touchgfx5Texts11setLanguageEt+0x60>)
 8003950:	601c      	str	r4, [r3, #0]
        fonts = f;
 8003952:	4b0c      	ldr	r3, [pc, #48]	@ (8003984 <_ZN8touchgfx5Texts11setLanguageEt+0x64>)
 8003954:	601d      	str	r5, [r3, #0]
        numberOfTypedTexts = n;
 8003956:	4b0c      	ldr	r3, [pc, #48]	@ (8003988 <_ZN8touchgfx5Texts11setLanguageEt+0x68>)
 8003958:	8018      	strh	r0, [r3, #0]
    }
}
 800395a:	e007      	b.n	800396c <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
            currentLanguagePtr = texts_all_languages;
 800395c:	4b0b      	ldr	r3, [pc, #44]	@ (800398c <_ZN8touchgfx5Texts11setLanguageEt+0x6c>)
 800395e:	6003      	str	r3, [r0, #0]
            currentLanguageIndices = staticLanguageIndices[id];
 8003960:	4b0b      	ldr	r3, [pc, #44]	@ (8003990 <_ZN8touchgfx5Texts11setLanguageEt+0x70>)
 8003962:	600b      	str	r3, [r1, #0]
            currentLanguageTypedText = typedTextDatabaseArray[id];
 8003964:	4b0b      	ldr	r3, [pc, #44]	@ (8003994 <_ZN8touchgfx5Texts11setLanguageEt+0x74>)
 8003966:	681c      	ldr	r4, [r3, #0]
    if (currentLanguageTypedText)
 8003968:	2c00      	cmp	r4, #0
 800396a:	d1e8      	bne.n	800393e <_ZN8touchgfx5Texts11setLanguageEt+0x1e>
}
 800396c:	bd38      	pop	{r3, r4, r5, pc}
 800396e:	bf00      	nop
 8003970:	2006eab8 	.word	0x2006eab8
 8003974:	2006eab0 	.word	0x2006eab0
 8003978:	2006eaac 	.word	0x2006eaac
 800397c:	2006eab4 	.word	0x2006eab4
 8003980:	200830f4 	.word	0x200830f4
 8003984:	200830fc 	.word	0x200830fc
 8003988:	200830f8 	.word	0x200830f8
 800398c:	08038b3c 	.word	0x08038b3c
 8003990:	08038b38 	.word	0x08038b38
 8003994:	08038b40 	.word	0x08038b40

08003998 <_ZN17TypedTextDatabase15getInstanceSizeEv>:
}

uint16_t getInstanceSize()
{
    return 0;
}
 8003998:	2000      	movs	r0, #0
 800399a:	4770      	bx	lr

0800399c <_ZN17TypedTextDatabase8getFontsEv>:

const touchgfx::Font** getFonts()
{
    return touchgfx_fonts;
}
 800399c:	4800      	ldr	r0, [pc, #0]	@ (80039a0 <_ZN17TypedTextDatabase8getFontsEv+0x4>)
 800399e:	4770      	bx	lr
 80039a0:	2006eabc 	.word	0x2006eabc

080039a4 <_GLOBAL__sub_I_touchgfx_fonts>:
    case 2:
        touchgfx_fonts[2] = &(getFont_verdana_10_4bpp());
        break;
    }
}
} // namespace TypedTextDatabase
 80039a4:	b510      	push	{r4, lr}
    &(getFont_verdana_20_4bpp()),
 80039a6:	f7ff fee5 	bl	8003774 <_Z23getFont_verdana_20_4bppv>
};
 80039aa:	4c04      	ldr	r4, [pc, #16]	@ (80039bc <_GLOBAL__sub_I_touchgfx_fonts+0x18>)
 80039ac:	6020      	str	r0, [r4, #0]
    &(getFont_verdana_40_4bpp()),
 80039ae:	f7ff ff1b 	bl	80037e8 <_Z23getFont_verdana_40_4bppv>
};
 80039b2:	6060      	str	r0, [r4, #4]
    &(getFont_verdana_10_4bpp())
 80039b4:	f7ff fea4 	bl	8003700 <_Z23getFont_verdana_10_4bppv>
};
 80039b8:	60a0      	str	r0, [r4, #8]
} // namespace TypedTextDatabase
 80039ba:	bd10      	pop	{r4, pc}
 80039bc:	2006eabc 	.word	0x2006eabc

080039c0 <_ZN8touchgfx22VectorFontRendererImpl20getVectorFontBuffersERPfRiRPhS3_>:
/* DO NOT EDIT THIS FILE */
/* This file is autogenerated by the text-database code generator */
#include <touchgfx/VectorFontRendererImpl.hpp>

void touchgfx::VectorFontRendererImpl::getVectorFontBuffers(float*& pointArray, int& pointArraySize, uint8_t*& commandArray, int& commandArraySize)
{
 80039c0:	b510      	push	{r4, lr}
    pointArray = 0;
 80039c2:	2400      	movs	r4, #0
 80039c4:	6004      	str	r4, [r0, #0]
    pointArraySize = 0;
 80039c6:	600c      	str	r4, [r1, #0]
    commandArray = 0;
 80039c8:	6014      	str	r4, [r2, #0]
    commandArraySize = 0;
 80039ca:	601c      	str	r4, [r3, #0]
}
 80039cc:	bd10      	pop	{r4, pc}

080039ce <_ZN19FrontendApplicationD1Ev>:

class FrontendApplication : public FrontendApplicationBase
{
public:
    FrontendApplication(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplication() { }
 80039ce:	4770      	bx	lr

080039d0 <_ZN19FrontendApplicationD0Ev>:
 80039d0:	b510      	push	{r4, lr}
 80039d2:	4604      	mov	r4, r0
 80039d4:	f44f 71ae 	mov.w	r1, #348	@ 0x15c
 80039d8:	f02d fcf5 	bl	80313c6 <_ZdlPvj>
 80039dc:	4620      	mov	r0, r4
 80039de:	bd10      	pop	{r4, pc}

080039e0 <_ZN19FrontendApplication15handleTickEventEv>:

    virtual void handleTickEvent()
 80039e0:	b510      	push	{r4, lr}
 80039e2:	4604      	mov	r4, r0
    {
        model.tick();
 80039e4:	f8d0 0158 	ldr.w	r0, [r0, #344]	@ 0x158
 80039e8:	f000 f8e0 	bl	8003bac <_ZN5Model4tickEv>
        FrontendApplicationBase::handleTickEvent();
 80039ec:	4620      	mov	r0, r4
    }
 80039ee:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        FrontendApplicationBase::handleTickEvent();
 80039f2:	f009 bcff 	b.w	800d3f4 <_ZN8touchgfx11Application15handleTickEventEv>
	...

080039f8 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>:
#include <gui/common/FrontendApplication.hpp>

FrontendApplication::FrontendApplication(Model& m, FrontendHeap& heap)
 80039f8:	b510      	push	{r4, lr}
 80039fa:	4604      	mov	r4, r0
    : FrontendApplicationBase(m, heap)
 80039fc:	f7ff fbc8 	bl	8003190 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>
 8003a00:	4b01      	ldr	r3, [pc, #4]	@ (8003a08 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap+0x10>)
{

}
 8003a02:	4620      	mov	r0, r4
    : FrontendApplicationBase(m, heap)
 8003a04:	6023      	str	r3, [r4, #0]
}
 8003a06:	bd10      	pop	{r4, pc}
 8003a08:	080357b0 	.word	0x080357b0

08003a0c <_ZN20GameScreen1PresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~GameScreen1Presenter() {}
 8003a0c:	4770      	bx	lr

08003a0e <_ZThn4_N20GameScreen1PresenterD1Ev>:
 8003a0e:	3804      	subs	r0, #4
 8003a10:	4770      	bx	lr

08003a12 <_ZN20GameScreen1Presenter10deactivateEv>:
}

void GameScreen1Presenter::activate()
{

}
 8003a12:	4770      	bx	lr

08003a14 <_ZN20GameScreen1PresenterD0Ev>:
 8003a14:	b510      	push	{r4, lr}
 8003a16:	4604      	mov	r4, r0
 8003a18:	2110      	movs	r1, #16
 8003a1a:	f02d fcd4 	bl	80313c6 <_ZdlPvj>
 8003a1e:	4620      	mov	r0, r4
 8003a20:	bd10      	pop	{r4, pc}

08003a22 <_ZThn4_N20GameScreen1PresenterD0Ev>:
 8003a22:	f1a0 0004 	sub.w	r0, r0, #4
 8003a26:	e7f5      	b.n	8003a14 <_ZN20GameScreen1PresenterD0Ev>

08003a28 <_ZN20GameScreen1PresenterC1ER15GameScreen1View>:
    ModelListener() : model(0) {}
 8003a28:	2200      	movs	r2, #0
 8003a2a:	6082      	str	r2, [r0, #8]
    : view(v)
 8003a2c:	4a02      	ldr	r2, [pc, #8]	@ (8003a38 <_ZN20GameScreen1PresenterC1ER15GameScreen1View+0x10>)
 8003a2e:	60c1      	str	r1, [r0, #12]
 8003a30:	6002      	str	r2, [r0, #0]
 8003a32:	3218      	adds	r2, #24
 8003a34:	6042      	str	r2, [r0, #4]
}
 8003a36:	4770      	bx	lr
 8003a38:	08035804 	.word	0x08035804

08003a3c <_ZN15GameScreen1View14tearDownScreenEv>:
}

void GameScreen1View::tearDownScreen()
{
    GameScreen1ViewBase::tearDownScreen();
}
 8003a3c:	4770      	bx	lr
	...

08003a40 <_ZN15GameScreen1ViewD1Ev>:

class GameScreen1View : public GameScreen1ViewBase
{
public:
    GameScreen1View();
    virtual ~GameScreen1View() {}
 8003a40:	b510      	push	{r4, lr}
 8003a42:	4604      	mov	r4, r0
 8003a44:	4b02      	ldr	r3, [pc, #8]	@ (8003a50 <_ZN15GameScreen1ViewD1Ev+0x10>)
 8003a46:	6003      	str	r3, [r0, #0]
 8003a48:	f7ff fc01 	bl	800324e <_ZN19GameScreen1ViewBaseD1Ev>
 8003a4c:	4620      	mov	r0, r4
 8003a4e:	bd10      	pop	{r4, pc}
 8003a50:	0803582c 	.word	0x0803582c

08003a54 <_ZN15GameScreen1ViewD0Ev>:
 8003a54:	b510      	push	{r4, lr}
 8003a56:	4604      	mov	r4, r0
 8003a58:	f7ff fff2 	bl	8003a40 <_ZN15GameScreen1ViewD1Ev>
 8003a5c:	4620      	mov	r0, r4
 8003a5e:	f44f 7132 	mov.w	r1, #712	@ 0x2c8
 8003a62:	f02d fcb0 	bl	80313c6 <_ZdlPvj>
 8003a66:	4620      	mov	r0, r4
 8003a68:	bd10      	pop	{r4, pc}

08003a6a <_ZN15GameScreen1View16updateBlockImageERN8touchgfx14ButtonWithIconENS_10BlockStateE>:
    GameScreen1View::block1_1_Cliecked_number++;
    if (GameScreen1View::block1_1_Cliecked_number == 5) GameScreen1View::block1_1_Cliecked_number = 0;
}

void GameScreen1View::updateBlockImage(touchgfx::ButtonWithIcon& blockImage, GameScreen1View::BlockState blockState)
{
 8003a6a:	b530      	push	{r4, r5, lr}
    switch (blockState)
    {
    case BlockState::Close:
        blockImage.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUNDED_TINY_FILL_NORMAL_ID),
 8003a6c:	680b      	ldr	r3, [r1, #0]
{
 8003a6e:	b087      	sub	sp, #28
        blockImage.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUNDED_TINY_FILL_NORMAL_ID),
 8003a70:	6edd      	ldr	r5, [r3, #108]	@ 0x6c
{
 8003a72:	460c      	mov	r4, r1
 8003a74:	ab05      	add	r3, sp, #20
    switch (blockState)
 8003a76:	2a04      	cmp	r2, #4
 8003a78:	d827      	bhi.n	8003aca <_ZN15GameScreen1View16updateBlockImageERN8touchgfx14ButtonWithIconENS_10BlockStateE+0x60>
 8003a7a:	e8df f002 	tbb	[pc, r2]
 8003a7e:	0326      	.short	0x0326
 8003a80:	221a      	.short	0x221a
 8003a82:	24          	.byte	0x24
 8003a83:	00          	.byte	0x00
 8003a84:	2200      	movs	r2, #0
 8003a86:	f8ad 2008 	strh.w	r2, [sp, #8]
 8003a8a:	f8ad 200c 	strh.w	r2, [sp, #12]
 8003a8e:	2203      	movs	r2, #3
                              touchgfx::Bitmap(BITMAP_TINY_OUTLINE_DISABLED_NUMBER2_ID),
                              touchgfx::Bitmap(BITMAP_INVALID),
                              touchgfx::Bitmap(BITMAP_INVALID));
        break;
    default:
        blockImage.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUNDED_TINY_FILL_NORMAL_ID),
 8003a90:	4620      	mov	r0, r4
 8003a92:	f8ad 2010 	strh.w	r2, [sp, #16]
 8003a96:	f8ad 2014 	strh.w	r2, [sp, #20]
 8003a9a:	9300      	str	r3, [sp, #0]
 8003a9c:	aa03      	add	r2, sp, #12
 8003a9e:	ab04      	add	r3, sp, #16
 8003aa0:	a902      	add	r1, sp, #8
 8003aa2:	47a8      	blx	r5
                              touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUNDED_TINY_FILL_NORMAL_ID),
                              touchgfx::Bitmap(BITMAP_INVALID),
                              touchgfx::Bitmap(BITMAP_INVALID));
        break;
    }
    blockImage.invalidate();
 8003aa4:	4620      	mov	r0, r4
 8003aa6:	6823      	ldr	r3, [r4, #0]
 8003aa8:	695b      	ldr	r3, [r3, #20]
}
 8003aaa:	b007      	add	sp, #28
 8003aac:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
    blockImage.invalidate();
 8003ab0:	4718      	bx	r3
 8003ab2:	2201      	movs	r2, #1
 8003ab4:	f8ad 2008 	strh.w	r2, [sp, #8]
 8003ab8:	f8ad 200c 	strh.w	r2, [sp, #12]
 8003abc:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 8003ac0:	e7e6      	b.n	8003a90 <_ZN15GameScreen1View16updateBlockImageERN8touchgfx14ButtonWithIconENS_10BlockStateE+0x26>
 8003ac2:	2204      	movs	r2, #4
 8003ac4:	e7f6      	b.n	8003ab4 <_ZN15GameScreen1View16updateBlockImageERN8touchgfx14ButtonWithIconENS_10BlockStateE+0x4a>
 8003ac6:	2205      	movs	r2, #5
 8003ac8:	e7f4      	b.n	8003ab4 <_ZN15GameScreen1View16updateBlockImageERN8touchgfx14ButtonWithIconENS_10BlockStateE+0x4a>
 8003aca:	2200      	movs	r2, #0
 8003acc:	e7f2      	b.n	8003ab4 <_ZN15GameScreen1View16updateBlockImageERN8touchgfx14ButtonWithIconENS_10BlockStateE+0x4a>
	...

08003ad0 <_ZN15GameScreen1ViewC1Ev>:
GameScreen1View::GameScreen1View()
 8003ad0:	b510      	push	{r4, lr}
 8003ad2:	4604      	mov	r4, r0
 8003ad4:	f7ff fc0c 	bl	80032f0 <_ZN19GameScreen1ViewBaseC1Ev>
 8003ad8:	4b1e      	ldr	r3, [pc, #120]	@ (8003b54 <_ZN15GameScreen1ViewC1Ev+0x84>)
    updateBlockImage(Block1_1, BlockState::Close);
 8003ada:	4620      	mov	r0, r4
GameScreen1View::GameScreen1View()
 8003adc:	6023      	str	r3, [r4, #0]
    updateBlockImage(Block1_1, BlockState::Close);
 8003ade:	f504 711e 	add.w	r1, r4, #632	@ 0x278
 8003ae2:	2200      	movs	r2, #0
 8003ae4:	f7ff ffc1 	bl	8003a6a <_ZN15GameScreen1View16updateBlockImageERN8touchgfx14ButtonWithIconENS_10BlockStateE>
    updateBlockImage(Block1_2, BlockState::Close);
 8003ae8:	4620      	mov	r0, r4
 8003aea:	f504 710f 	add.w	r1, r4, #572	@ 0x23c
 8003aee:	2200      	movs	r2, #0
 8003af0:	f7ff ffbb 	bl	8003a6a <_ZN15GameScreen1View16updateBlockImageERN8touchgfx14ButtonWithIconENS_10BlockStateE>
    updateBlockImage(Block1_3, BlockState::Close);
 8003af4:	4620      	mov	r0, r4
 8003af6:	f504 7100 	add.w	r1, r4, #512	@ 0x200
 8003afa:	2200      	movs	r2, #0
 8003afc:	f7ff ffb5 	bl	8003a6a <_ZN15GameScreen1View16updateBlockImageERN8touchgfx14ButtonWithIconENS_10BlockStateE>
    updateBlockImage(Block2_1, BlockState::Close);
 8003b00:	4620      	mov	r0, r4
 8003b02:	f504 71e2 	add.w	r1, r4, #452	@ 0x1c4
 8003b06:	2200      	movs	r2, #0
 8003b08:	f7ff ffaf 	bl	8003a6a <_ZN15GameScreen1View16updateBlockImageERN8touchgfx14ButtonWithIconENS_10BlockStateE>
    updateBlockImage(Block2_2, BlockState::Close);
 8003b0c:	4620      	mov	r0, r4
 8003b0e:	f504 71c4 	add.w	r1, r4, #392	@ 0x188
 8003b12:	2200      	movs	r2, #0
 8003b14:	f7ff ffa9 	bl	8003a6a <_ZN15GameScreen1View16updateBlockImageERN8touchgfx14ButtonWithIconENS_10BlockStateE>
    updateBlockImage(Block2_3, BlockState::Close);
 8003b18:	4620      	mov	r0, r4
 8003b1a:	f504 71a6 	add.w	r1, r4, #332	@ 0x14c
 8003b1e:	2200      	movs	r2, #0
 8003b20:	f7ff ffa3 	bl	8003a6a <_ZN15GameScreen1View16updateBlockImageERN8touchgfx14ButtonWithIconENS_10BlockStateE>
    updateBlockImage(Block3_1, BlockState::Close);
 8003b24:	4620      	mov	r0, r4
 8003b26:	f504 7188 	add.w	r1, r4, #272	@ 0x110
 8003b2a:	2200      	movs	r2, #0
 8003b2c:	f7ff ff9d 	bl	8003a6a <_ZN15GameScreen1View16updateBlockImageERN8touchgfx14ButtonWithIconENS_10BlockStateE>
    updateBlockImage(Block3_2, BlockState::Close);
 8003b30:	4620      	mov	r0, r4
 8003b32:	f104 01d4 	add.w	r1, r4, #212	@ 0xd4
 8003b36:	2200      	movs	r2, #0
 8003b38:	f7ff ff97 	bl	8003a6a <_ZN15GameScreen1View16updateBlockImageERN8touchgfx14ButtonWithIconENS_10BlockStateE>
    updateBlockImage(Block3_3, BlockState::Close);
 8003b3c:	4620      	mov	r0, r4
 8003b3e:	2200      	movs	r2, #0
 8003b40:	f104 0198 	add.w	r1, r4, #152	@ 0x98
 8003b44:	f7ff ff91 	bl	8003a6a <_ZN15GameScreen1View16updateBlockImageERN8touchgfx14ButtonWithIconENS_10BlockStateE>
    GameScreen1View::block1_1_Cliecked_number = 0;
 8003b48:	2300      	movs	r3, #0
}
 8003b4a:	4620      	mov	r0, r4
    GameScreen1View::block1_1_Cliecked_number = 0;
 8003b4c:	f8c4 32c4 	str.w	r3, [r4, #708]	@ 0x2c4
}
 8003b50:	bd10      	pop	{r4, pc}
 8003b52:	bf00      	nop
 8003b54:	0803582c 	.word	0x0803582c

08003b58 <_ZN15GameScreen1View16Block1_1_ClickedEv>:
    if (GameScreen1View::block1_1_Cliecked_number == 0) updateBlockImage(Block1_1, BlockState::Close);
 8003b58:	f8d0 22c4 	ldr.w	r2, [r0, #708]	@ 0x2c4
{
 8003b5c:	b510      	push	{r4, lr}
 8003b5e:	4604      	mov	r4, r0
    if (GameScreen1View::block1_1_Cliecked_number == 0) updateBlockImage(Block1_1, BlockState::Close);
 8003b60:	b96a      	cbnz	r2, 8003b7e <_ZN15GameScreen1View16Block1_1_ClickedEv+0x26>
 8003b62:	f500 711e 	add.w	r1, r0, #632	@ 0x278
    else if (GameScreen1View::block1_1_Cliecked_number == 4) updateBlockImage(Block1_1, BlockState::OpenNumber2);
 8003b66:	f7ff ff80 	bl	8003a6a <_ZN15GameScreen1View16updateBlockImageERN8touchgfx14ButtonWithIconENS_10BlockStateE>
    GameScreen1View::block1_1_Cliecked_number++;
 8003b6a:	f8d4 22c4 	ldr.w	r2, [r4, #708]	@ 0x2c4
    if (GameScreen1View::block1_1_Cliecked_number == 5) GameScreen1View::block1_1_Cliecked_number = 0;
 8003b6e:	2a04      	cmp	r2, #4
    GameScreen1View::block1_1_Cliecked_number++;
 8003b70:	f102 0301 	add.w	r3, r2, #1
    if (GameScreen1View::block1_1_Cliecked_number == 5) GameScreen1View::block1_1_Cliecked_number = 0;
 8003b74:	bf08      	it	eq
 8003b76:	2300      	moveq	r3, #0
 8003b78:	f8c4 32c4 	str.w	r3, [r4, #708]	@ 0x2c4
}
 8003b7c:	bd10      	pop	{r4, pc}
    else if (GameScreen1View::block1_1_Cliecked_number == 1) updateBlockImage(Block1_1, BlockState::CloseWithFlag);
 8003b7e:	3a01      	subs	r2, #1
 8003b80:	2a03      	cmp	r2, #3
 8003b82:	d8f2      	bhi.n	8003b6a <_ZN15GameScreen1View16Block1_1_ClickedEv+0x12>
 8003b84:	e8df f002 	tbb	[pc, r2]
 8003b88:	0b090702 	.word	0x0b090702
 8003b8c:	2201      	movs	r2, #1
    else if (GameScreen1View::block1_1_Cliecked_number == 4) updateBlockImage(Block1_1, BlockState::OpenNumber2);
 8003b8e:	4620      	mov	r0, r4
 8003b90:	f504 711e 	add.w	r1, r4, #632	@ 0x278
 8003b94:	e7e7      	b.n	8003b66 <_ZN15GameScreen1View16Block1_1_ClickedEv+0xe>
    else if (GameScreen1View::block1_1_Cliecked_number == 2) updateBlockImage(Block1_1, BlockState::OpenNumber0);
 8003b96:	2202      	movs	r2, #2
 8003b98:	e7f9      	b.n	8003b8e <_ZN15GameScreen1View16Block1_1_ClickedEv+0x36>
    else if (GameScreen1View::block1_1_Cliecked_number == 3) updateBlockImage(Block1_1, BlockState::OpenNumber1);
 8003b9a:	2203      	movs	r2, #3
 8003b9c:	e7f7      	b.n	8003b8e <_ZN15GameScreen1View16Block1_1_ClickedEv+0x36>
    else if (GameScreen1View::block1_1_Cliecked_number == 4) updateBlockImage(Block1_1, BlockState::OpenNumber2);
 8003b9e:	2204      	movs	r2, #4
 8003ba0:	e7f5      	b.n	8003b8e <_ZN15GameScreen1View16Block1_1_ClickedEv+0x36>

08003ba2 <_ZN15GameScreen1View11setupScreenEv>:
    GameScreen1ViewBase::setupScreen();
 8003ba2:	f7ff bb55 	b.w	8003250 <_ZN19GameScreen1ViewBase11setupScreenEv>

08003ba6 <_ZN5ModelC1Ev>:
#include <gui/model/Model.hpp>
#include <gui/model/ModelListener.hpp>

Model::Model() : modelListener(0)
 8003ba6:	2200      	movs	r2, #0
 8003ba8:	6002      	str	r2, [r0, #0]
{

}
 8003baa:	4770      	bx	lr

08003bac <_ZN5Model4tickEv>:

void Model::tick()
{

}
 8003bac:	4770      	bx	lr

08003bae <MX66UW1G45G_EnableDTRMemoryMappedMode>:
  * @param  AddressWidth Address size
  * @note   Only OPI mode support DTR transfer rate
  * @retval XSPI memory status
  */
int32_t MX66UW1G45G_EnableDTRMemoryMappedMode(XSPI_HandleTypeDef *Ctx, MX66UW1G45G_Interface_t Mode)
{
 8003bae:	b510      	push	{r4, lr}
 8003bb0:	b096      	sub	sp, #88	@ 0x58
 8003bb2:	4604      	mov	r4, r0
  /* Prevent unused argument(s) compilation warning */
  UNUSED(Mode);

  XSPI_RegularCmdTypeDef s_command = {0};
 8003bb4:	224c      	movs	r2, #76	@ 0x4c
 8003bb6:	2100      	movs	r1, #0
 8003bb8:	a803      	add	r0, sp, #12
 8003bba:	f02e ffe4 	bl	8032b86 <memset>
  XSPI_MemoryMappedTypeDef s_mem_mapped_cfg = {0};
 8003bbe:	2300      	movs	r3, #0
 8003bc0:	e9cd 3300 	strd	r3, r3, [sp]

  /* Initialize the read command */
  s_command.OperationType = HAL_XSPI_OPTYPE_READ_CFG;
 8003bc4:	2301      	movs	r3, #1
 8003bc6:	9302      	str	r3, [sp, #8]
  s_command.InstructionMode = HAL_XSPI_INSTRUCTION_8_LINES;
 8003bc8:	2304      	movs	r3, #4
  s_command.InstructionDTRMode = HAL_XSPI_INSTRUCTION_DTR_ENABLE;
  s_command.InstructionWidth = HAL_XSPI_INSTRUCTION_16_BITS;
 8003bca:	f04f 0c08 	mov.w	ip, #8
  s_command.InstructionMode = HAL_XSPI_INSTRUCTION_8_LINES;
 8003bce:	9305      	str	r3, [sp, #20]
  s_command.InstructionWidth = HAL_XSPI_INSTRUCTION_16_BITS;
 8003bd0:	2310      	movs	r3, #16
 8003bd2:	e9cd 3c06 	strd	r3, ip, [sp, #24]
  s_command.Instruction = MX66UW1G45G_OCTA_READ_DTR_CMD;
 8003bd6:	f64e 6311 	movw	r3, #60945	@ 0xee11
 8003bda:	9304      	str	r3, [sp, #16]
  s_command.AddressMode = HAL_XSPI_ADDRESS_8_LINES;
 8003bdc:	f44f 6380 	mov.w	r3, #1024	@ 0x400
  s_command.AddressDTRMode = HAL_XSPI_ADDRESS_DTR_ENABLE;
  s_command.AddressWidth = HAL_XSPI_ADDRESS_32_BITS;
 8003be0:	f44f 6100 	mov.w	r1, #2048	@ 0x800
  s_command.AddressMode = HAL_XSPI_ADDRESS_8_LINES;
 8003be4:	9309      	str	r3, [sp, #36]	@ 0x24
  s_command.AddressWidth = HAL_XSPI_ADDRESS_32_BITS;
 8003be6:	f44f 5340 	mov.w	r3, #12288	@ 0x3000
 8003bea:	e9cd 310a 	strd	r3, r1, [sp, #40]	@ 0x28
  s_command.AlternateBytesMode = HAL_XSPI_ALT_BYTES_NONE;
  s_command.DataMode = HAL_XSPI_DATA_8_LINES;
 8003bee:	f04f 6380 	mov.w	r3, #67108864	@ 0x4000000
  s_command.DataDTRMode = HAL_XSPI_DATA_DTR_ENABLE;
  s_command.DummyCycles = DUMMY_CYCLES_READ_OCTAL_DTR;
 8003bf2:	f04f 6c00 	mov.w	ip, #134217728	@ 0x8000000
  s_command.DataMode = HAL_XSPI_DATA_8_LINES;
 8003bf6:	9310      	str	r3, [sp, #64]	@ 0x40
  s_command.DummyCycles = DUMMY_CYCLES_READ_OCTAL_DTR;
 8003bf8:	2306      	movs	r3, #6
 8003bfa:	e9cd c312 	strd	ip, r3, [sp, #72]	@ 0x48
  s_command.DQSMode = HAL_XSPI_DQS_ENABLE;
 8003bfe:	f04f 5300 	mov.w	r3, #536870912	@ 0x20000000
 #if defined (XSPI_CCR_SIOO)
  s_command.SIOOMode            = HAL_XSPI_SIOO_INST_EVERY_CMD;
 #endif

  /* Send the command */
  if (HAL_XSPI_Command(Ctx, &s_command, HAL_XSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003c02:	f241 3288 	movw	r2, #5000	@ 0x1388
 8003c06:	4620      	mov	r0, r4
 8003c08:	a902      	add	r1, sp, #8
  s_command.DQSMode = HAL_XSPI_DQS_ENABLE;
 8003c0a:	9314      	str	r3, [sp, #80]	@ 0x50
  if (HAL_XSPI_Command(Ctx, &s_command, HAL_XSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003c0c:	f004 fdd2 	bl	80087b4 <HAL_XSPI_Command>
 8003c10:	b118      	cbz	r0, 8003c1a <MX66UW1G45G_EnableDTRMemoryMappedMode+0x6c>
  {
    return MX66UW1G45G_ERROR;
 8003c12:	f04f 30ff 	mov.w	r0, #4294967295
  {
    return MX66UW1G45G_ERROR;
  }

  return MX66UW1G45G_OK;
}
 8003c16:	b016      	add	sp, #88	@ 0x58
 8003c18:	bd10      	pop	{r4, pc}
  s_command.OperationType = HAL_XSPI_OPTYPE_WRITE_CFG;
 8003c1a:	2302      	movs	r3, #2
 8003c1c:	9302      	str	r3, [sp, #8]
  s_command.Instruction = MX66UW1G45G_OCTA_PAGE_PROG_CMD;
 8003c1e:	f241 23ed 	movw	r3, #4845	@ 0x12ed
  s_command.DQSMode = HAL_XSPI_DQS_DISABLE;
 8003c22:	e9cd 0013 	strd	r0, r0, [sp, #76]	@ 0x4c
  if (HAL_XSPI_Command(Ctx, &s_command, HAL_XSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003c26:	f241 3288 	movw	r2, #5000	@ 0x1388
 8003c2a:	4620      	mov	r0, r4
 8003c2c:	a902      	add	r1, sp, #8
  s_command.Instruction = MX66UW1G45G_OCTA_PAGE_PROG_CMD;
 8003c2e:	9304      	str	r3, [sp, #16]
  if (HAL_XSPI_Command(Ctx, &s_command, HAL_XSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003c30:	f004 fdc0 	bl	80087b4 <HAL_XSPI_Command>
 8003c34:	2800      	cmp	r0, #0
 8003c36:	d1ec      	bne.n	8003c12 <MX66UW1G45G_EnableDTRMemoryMappedMode+0x64>
  s_mem_mapped_cfg.TimeOutActivation = HAL_XSPI_TIMEOUT_COUNTER_DISABLE;
 8003c38:	9000      	str	r0, [sp, #0]
  if (HAL_XSPI_MemoryMapped(Ctx, &s_mem_mapped_cfg) != HAL_OK)
 8003c3a:	4669      	mov	r1, sp
 8003c3c:	4620      	mov	r0, r4
 8003c3e:	f004 fee6 	bl	8008a0e <HAL_XSPI_MemoryMapped>
 8003c42:	3800      	subs	r0, #0
 8003c44:	bf18      	it	ne
 8003c46:	2001      	movne	r0, #1
 8003c48:	4240      	negs	r0, r0
 8003c4a:	e7e4      	b.n	8003c16 <MX66UW1G45G_EnableDTRMemoryMappedMode+0x68>

08003c4c <MX66UW1G45G_WriteEnable>:
  * @param  Mode Interface mode
  * @param  Rate Transfer rate STR or DTR
  * @retval error status
  */
int32_t MX66UW1G45G_WriteEnable(XSPI_HandleTypeDef *Ctx, MX66UW1G45G_Interface_t Mode, MX66UW1G45G_Transfer_t Rate)
{
 8003c4c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8003c50:	460c      	mov	r4, r1
 8003c52:	b09a      	sub	sp, #104	@ 0x68
  XSPI_RegularCmdTypeDef s_command = {0};
 8003c54:	2100      	movs	r1, #0
{
 8003c56:	4607      	mov	r7, r0
 8003c58:	4616      	mov	r6, r2
  XSPI_RegularCmdTypeDef s_command = {0};
 8003c5a:	a806      	add	r0, sp, #24
 8003c5c:	2250      	movs	r2, #80	@ 0x50
 8003c5e:	f02e ff92 	bl	8032b86 <memset>
  XSPI_AutoPollingTypeDef s_config = {0};
 8003c62:	2214      	movs	r2, #20
 8003c64:	2100      	movs	r1, #0
 8003c66:	a801      	add	r0, sp, #4
 8003c68:	f02e ff8d 	bl	8032b86 <memset>

  /* SPI mode and DTR transfer not supported by memory */
  if ((Mode == MX66UW1G45G_SPI_MODE) && (Rate == MX66UW1G45G_DTR_TRANSFER))
 8003c6c:	b934      	cbnz	r4, 8003c7c <MX66UW1G45G_WriteEnable+0x30>
 8003c6e:	2e01      	cmp	r6, #1
 8003c70:	d164      	bne.n	8003d3c <MX66UW1G45G_WriteEnable+0xf0>
  {
    return MX66UW1G45G_ERROR;
 8003c72:	f04f 30ff 	mov.w	r0, #4294967295
  {
    return MX66UW1G45G_ERROR;
  }

  return MX66UW1G45G_OK;
}
 8003c76:	b01a      	add	sp, #104	@ 0x68
 8003c78:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
                                  : HAL_XSPI_INSTRUCTION_8_LINES;
 8003c7c:	2304      	movs	r3, #4
                                     : HAL_XSPI_INSTRUCTION_DTR_DISABLE;
 8003c7e:	1e71      	subs	r1, r6, #1
 8003c80:	424d      	negs	r5, r1
 8003c82:	414d      	adcs	r5, r1
                                   : HAL_XSPI_INSTRUCTION_16_BITS;
 8003c84:	2c00      	cmp	r4, #0
 8003c86:	bf14      	ite	ne
 8003c88:	f04f 0801 	movne.w	r8, #1
 8003c8c:	f04f 0800 	moveq.w	r8, #0
  s_command.InstructionMode = (Mode == MX66UW1G45G_SPI_MODE)
 8003c90:	9309      	str	r3, [sp, #36]	@ 0x24
                                     : HAL_XSPI_INSTRUCTION_DTR_DISABLE;
 8003c92:	ea4f 03c5 	mov.w	r3, r5, lsl #3
  s_command.InstructionDTRMode = (Rate == MX66UW1G45G_DTR_TRANSFER)
 8003c96:	930b      	str	r3, [sp, #44]	@ 0x2c
                                   : HAL_XSPI_INSTRUCTION_16_BITS;
 8003c98:	ea4f 1308 	mov.w	r3, r8, lsl #4
  s_command.InstructionWidth = (Mode == MX66UW1G45G_SPI_MODE)
 8003c9c:	930a      	str	r3, [sp, #40]	@ 0x28
                              : MX66UW1G45G_OCTA_WRITE_ENABLE_CMD;
 8003c9e:	f240 63f9 	movw	r3, #1785	@ 0x6f9
 8003ca2:	bf08      	it	eq
 8003ca4:	2306      	moveq	r3, #6
  if (HAL_XSPI_Command(Ctx, &s_command, HAL_XSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003ca6:	f241 3288 	movw	r2, #5000	@ 0x1388
 8003caa:	4638      	mov	r0, r7
 8003cac:	a906      	add	r1, sp, #24
  s_command.Instruction = (Mode == MX66UW1G45G_SPI_MODE)
 8003cae:	9308      	str	r3, [sp, #32]
  if (HAL_XSPI_Command(Ctx, &s_command, HAL_XSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003cb0:	f004 fd80 	bl	80087b4 <HAL_XSPI_Command>
 8003cb4:	2800      	cmp	r0, #0
 8003cb6:	d1dc      	bne.n	8003c72 <MX66UW1G45G_WriteEnable+0x26>
                              : MX66UW1G45G_OCTA_READ_STATUS_REG_CMD;
 8003cb8:	2c00      	cmp	r4, #0
 8003cba:	f240 53fa 	movw	r3, #1530	@ 0x5fa
 8003cbe:	bf08      	it	eq
 8003cc0:	2305      	moveq	r3, #5
  s_command.Instruction = (Mode == MX66UW1G45G_SPI_MODE)
 8003cc2:	9308      	str	r3, [sp, #32]
  s_command.AddressMode = (Mode == MX66UW1G45G_SPI_MODE) ? HAL_XSPI_ADDRESS_NONE : HAL_XSPI_ADDRESS_8_LINES;
 8003cc4:	ea4f 2388 	mov.w	r3, r8, lsl #10
 8003cc8:	930d      	str	r3, [sp, #52]	@ 0x34
                                 : HAL_XSPI_ADDRESS_DTR_DISABLE;
 8003cca:	ea4f 23c5 	mov.w	r3, r5, lsl #11
  s_command.AddressDTRMode = (Rate == MX66UW1G45G_DTR_TRANSFER)
 8003cce:	930f      	str	r3, [sp, #60]	@ 0x3c
  s_command.AddressWidth = HAL_XSPI_ADDRESS_32_BITS;
 8003cd0:	f44f 5340 	mov.w	r3, #12288	@ 0x3000
 8003cd4:	930e      	str	r3, [sp, #56]	@ 0x38
  s_command.DataMode = (Mode == MX66UW1G45G_SPI_MODE) ? HAL_XSPI_DATA_1_LINE : HAL_XSPI_DATA_8_LINES;
 8003cd6:	bf0c      	ite	eq
 8003cd8:	f04f 7380 	moveq.w	r3, #16777216	@ 0x1000000
 8003cdc:	f04f 6380 	movne.w	r3, #67108864	@ 0x4000000
 8003ce0:	9314      	str	r3, [sp, #80]	@ 0x50
  s_command.DataDTRMode = (Rate == MX66UW1G45G_DTR_TRANSFER) ? HAL_XSPI_DATA_DTR_ENABLE : HAL_XSPI_DATA_DTR_DISABLE;
 8003ce2:	ea4f 63c5 	mov.w	r3, r5, lsl #27
  s_command.Address = 0U;
 8003ce6:	900c      	str	r0, [sp, #48]	@ 0x30
  s_command.DataDTRMode = (Rate == MX66UW1G45G_DTR_TRANSFER) ? HAL_XSPI_DATA_DTR_ENABLE : HAL_XSPI_DATA_DTR_DISABLE;
 8003ce8:	9316      	str	r3, [sp, #88]	@ 0x58
                              : ((Rate == MX66UW1G45G_DTR_TRANSFER)
 8003cea:	d003      	beq.n	8003cf4 <MX66UW1G45G_WriteEnable+0xa8>
 8003cec:	2e01      	cmp	r6, #1
 8003cee:	bf0c      	ite	eq
 8003cf0:	2405      	moveq	r4, #5
 8003cf2:	2404      	movne	r4, #4
  s_command.DataLength = (Rate == MX66UW1G45G_DTR_TRANSFER) ? 2U : 1U;
 8003cf4:	2e01      	cmp	r6, #1
 8003cf6:	bf0c      	ite	eq
 8003cf8:	2302      	moveq	r3, #2
 8003cfa:	2301      	movne	r3, #1
  s_command.DQSMode = (Rate == MX66UW1G45G_DTR_TRANSFER) ? HAL_XSPI_DQS_ENABLE : HAL_XSPI_DQS_DISABLE;
 8003cfc:	076d      	lsls	r5, r5, #29
  if (HAL_XSPI_Command(Ctx, &s_command, HAL_XSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003cfe:	f241 3288 	movw	r2, #5000	@ 0x1388
 8003d02:	4638      	mov	r0, r7
 8003d04:	a906      	add	r1, sp, #24
  s_command.DummyCycles = (Mode == MX66UW1G45G_SPI_MODE)
 8003d06:	9417      	str	r4, [sp, #92]	@ 0x5c
  s_command.DataLength = (Rate == MX66UW1G45G_DTR_TRANSFER) ? 2U : 1U;
 8003d08:	9315      	str	r3, [sp, #84]	@ 0x54
  s_command.DQSMode = (Rate == MX66UW1G45G_DTR_TRANSFER) ? HAL_XSPI_DQS_ENABLE : HAL_XSPI_DQS_DISABLE;
 8003d0a:	9518      	str	r5, [sp, #96]	@ 0x60
  if (HAL_XSPI_Command(Ctx, &s_command, HAL_XSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003d0c:	f004 fd52 	bl	80087b4 <HAL_XSPI_Command>
 8003d10:	2800      	cmp	r0, #0
 8003d12:	d1ae      	bne.n	8003c72 <MX66UW1G45G_WriteEnable+0x26>
  s_config.MatchValue = 2U;
 8003d14:	2302      	movs	r3, #2
  s_config.AutomaticStop = HAL_XSPI_AUTOMATIC_STOP_ENABLE;
 8003d16:	2210      	movs	r2, #16
  s_config.MatchMask = 2U;
 8003d18:	e9cd 3301 	strd	r3, r3, [sp, #4]
  s_config.AutomaticStop = HAL_XSPI_AUTOMATIC_STOP_ENABLE;
 8003d1c:	f44f 0380 	mov.w	r3, #4194304	@ 0x400000
  s_config.MatchMode = HAL_XSPI_MATCH_MODE_AND;
 8003d20:	9003      	str	r0, [sp, #12]
  s_config.AutomaticStop = HAL_XSPI_AUTOMATIC_STOP_ENABLE;
 8003d22:	e9cd 3204 	strd	r3, r2, [sp, #16]
  if (HAL_XSPI_AutoPolling(Ctx, &s_config, HAL_XSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003d26:	4638      	mov	r0, r7
 8003d28:	f241 3288 	movw	r2, #5000	@ 0x1388
 8003d2c:	a901      	add	r1, sp, #4
 8003d2e:	f004 fe19 	bl	8008964 <HAL_XSPI_AutoPolling>
 8003d32:	3800      	subs	r0, #0
 8003d34:	bf18      	it	ne
 8003d36:	2001      	movne	r0, #1
 8003d38:	4240      	negs	r0, r0
 8003d3a:	e79c      	b.n	8003c76 <MX66UW1G45G_WriteEnable+0x2a>
                                  : HAL_XSPI_INSTRUCTION_8_LINES;
 8003d3c:	2301      	movs	r3, #1
 8003d3e:	e79e      	b.n	8003c7e <MX66UW1G45G_WriteEnable+0x32>

08003d40 <MX66UW1G45G_WriteCfg2Register>:
  * @param  Value Value to write to configuration register
  * @retval error status
  */
int32_t MX66UW1G45G_WriteCfg2Register(XSPI_HandleTypeDef *Ctx, MX66UW1G45G_Interface_t Mode,
                                      MX66UW1G45G_Transfer_t Rate, uint32_t WriteAddr, uint8_t Value)
{
 8003d40:	b5f0      	push	{r4, r5, r6, r7, lr}
 8003d42:	460e      	mov	r6, r1
 8003d44:	b095      	sub	sp, #84	@ 0x54
 8003d46:	4605      	mov	r5, r0
 8003d48:	4614      	mov	r4, r2
  XSPI_RegularCmdTypeDef s_command = {0};
 8003d4a:	2100      	movs	r1, #0
 8003d4c:	2250      	movs	r2, #80	@ 0x50
 8003d4e:	4668      	mov	r0, sp
{
 8003d50:	461f      	mov	r7, r3
  XSPI_RegularCmdTypeDef s_command = {0};
 8003d52:	f02e ff18 	bl	8032b86 <memset>

  /* SPI mode and DTR transfer not supported by memory */
  if ((Mode == MX66UW1G45G_SPI_MODE) && (Rate == MX66UW1G45G_DTR_TRANSFER))
 8003d56:	b92e      	cbnz	r6, 8003d64 <MX66UW1G45G_WriteCfg2Register+0x24>
 8003d58:	2c01      	cmp	r4, #1
 8003d5a:	d145      	bne.n	8003de8 <MX66UW1G45G_WriteCfg2Register+0xa8>
  {
    return MX66UW1G45G_ERROR;
 8003d5c:	f04f 30ff 	mov.w	r0, #4294967295
  {
    return MX66UW1G45G_ERROR;
  }

  return MX66UW1G45G_OK;
}
 8003d60:	b015      	add	sp, #84	@ 0x54
 8003d62:	bdf0      	pop	{r4, r5, r6, r7, pc}
                                  : HAL_XSPI_INSTRUCTION_8_LINES;
 8003d64:	2304      	movs	r3, #4
  s_command.InstructionMode = (Mode == MX66UW1G45G_SPI_MODE)
 8003d66:	9303      	str	r3, [sp, #12]
                                     : HAL_XSPI_INSTRUCTION_DTR_DISABLE;
 8003d68:	1e63      	subs	r3, r4, #1
 8003d6a:	425a      	negs	r2, r3
 8003d6c:	415a      	adcs	r2, r3
 8003d6e:	00d3      	lsls	r3, r2, #3
                                   : HAL_XSPI_INSTRUCTION_16_BITS;
 8003d70:	2e00      	cmp	r6, #0
  s_command.InstructionDTRMode = (Rate == MX66UW1G45G_DTR_TRANSFER)
 8003d72:	9305      	str	r3, [sp, #20]
                                   : HAL_XSPI_INSTRUCTION_16_BITS;
 8003d74:	bf14      	ite	ne
 8003d76:	2301      	movne	r3, #1
 8003d78:	2300      	moveq	r3, #0
 8003d7a:	ea4f 1303 	mov.w	r3, r3, lsl #4
  s_command.InstructionWidth = (Mode == MX66UW1G45G_SPI_MODE)
 8003d7e:	9304      	str	r3, [sp, #16]
                              : MX66UW1G45G_OCTA_WRITE_CFG_REG2_CMD;
 8003d80:	f247 238d 	movw	r3, #29325	@ 0x728d
 8003d84:	bf08      	it	eq
 8003d86:	2372      	moveq	r3, #114	@ 0x72
  s_command.Instruction = (Mode == MX66UW1G45G_SPI_MODE)
 8003d88:	9302      	str	r3, [sp, #8]
  s_command.AddressMode = (Mode == MX66UW1G45G_SPI_MODE) ? HAL_XSPI_ADDRESS_1_LINE : HAL_XSPI_ADDRESS_8_LINES;
 8003d8a:	bf0c      	ite	eq
 8003d8c:	f44f 7380 	moveq.w	r3, #256	@ 0x100
 8003d90:	f44f 6380 	movne.w	r3, #1024	@ 0x400
 8003d94:	9307      	str	r3, [sp, #28]
                                 : HAL_XSPI_ADDRESS_DTR_DISABLE;
 8003d96:	ea4f 23c2 	mov.w	r3, r2, lsl #11
  s_command.AddressDTRMode = (Rate == MX66UW1G45G_DTR_TRANSFER)
 8003d9a:	9309      	str	r3, [sp, #36]	@ 0x24
  s_command.AddressWidth = HAL_XSPI_ADDRESS_32_BITS;
 8003d9c:	f44f 5340 	mov.w	r3, #12288	@ 0x3000
 8003da0:	9308      	str	r3, [sp, #32]
  s_command.DataMode = (Mode == MX66UW1G45G_SPI_MODE) ? HAL_XSPI_DATA_1_LINE : HAL_XSPI_DATA_8_LINES;
 8003da2:	bf0c      	ite	eq
 8003da4:	f04f 7380 	moveq.w	r3, #16777216	@ 0x1000000
 8003da8:	f04f 6380 	movne.w	r3, #67108864	@ 0x4000000
                              : HAL_XSPI_DATA_DTR_DISABLE;
 8003dac:	ea4f 62c2 	mov.w	r2, r2, lsl #27
  s_command.Address = WriteAddr;
 8003db0:	9706      	str	r7, [sp, #24]
  s_command.DataMode = (Mode == MX66UW1G45G_SPI_MODE) ? HAL_XSPI_DATA_1_LINE : HAL_XSPI_DATA_8_LINES;
 8003db2:	930e      	str	r3, [sp, #56]	@ 0x38
  s_command.DataDTRMode = (Rate == MX66UW1G45G_DTR_TRANSFER)
 8003db4:	9210      	str	r2, [sp, #64]	@ 0x40
  s_command.DataLength = (Mode == MX66UW1G45G_SPI_MODE) ? 1U : ((Rate == MX66UW1G45G_DTR_TRANSFER) ? 2U : 1U);
 8003db6:	d019      	beq.n	8003dec <MX66UW1G45G_WriteCfg2Register+0xac>
 8003db8:	2c01      	cmp	r4, #1
 8003dba:	bf14      	ite	ne
 8003dbc:	2301      	movne	r3, #1
 8003dbe:	2302      	moveq	r3, #2
  if (HAL_XSPI_Command(Ctx, &s_command, HAL_XSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003dc0:	f241 3288 	movw	r2, #5000	@ 0x1388
 8003dc4:	4669      	mov	r1, sp
 8003dc6:	4628      	mov	r0, r5
  s_command.DataLength = (Mode == MX66UW1G45G_SPI_MODE) ? 1U : ((Rate == MX66UW1G45G_DTR_TRANSFER) ? 2U : 1U);
 8003dc8:	930f      	str	r3, [sp, #60]	@ 0x3c
  if (HAL_XSPI_Command(Ctx, &s_command, HAL_XSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003dca:	f004 fcf3 	bl	80087b4 <HAL_XSPI_Command>
 8003dce:	2800      	cmp	r0, #0
 8003dd0:	d1c4      	bne.n	8003d5c <MX66UW1G45G_WriteCfg2Register+0x1c>
  if (HAL_XSPI_Transmit(Ctx, &Value, HAL_XSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003dd2:	f241 3288 	movw	r2, #5000	@ 0x1388
 8003dd6:	4628      	mov	r0, r5
 8003dd8:	a91a      	add	r1, sp, #104	@ 0x68
 8003dda:	f004 fd7f 	bl	80088dc <HAL_XSPI_Transmit>
 8003dde:	3800      	subs	r0, #0
 8003de0:	bf18      	it	ne
 8003de2:	2001      	movne	r0, #1
 8003de4:	4240      	negs	r0, r0
 8003de6:	e7bb      	b.n	8003d60 <MX66UW1G45G_WriteCfg2Register+0x20>
                                  : HAL_XSPI_INSTRUCTION_8_LINES;
 8003de8:	2301      	movs	r3, #1
 8003dea:	e7bc      	b.n	8003d66 <MX66UW1G45G_WriteCfg2Register+0x26>
  s_command.DataLength = (Mode == MX66UW1G45G_SPI_MODE) ? 1U : ((Rate == MX66UW1G45G_DTR_TRANSFER) ? 2U : 1U);
 8003dec:	2301      	movs	r3, #1
 8003dee:	e7e7      	b.n	8003dc0 <MX66UW1G45G_WriteCfg2Register+0x80>

08003df0 <MX66UW1G45G_ResetEnable>:
  * @param  Mode Interface select
  * @param  Rate Transfer rate STR or DTR
  * @retval error status
  */
int32_t MX66UW1G45G_ResetEnable(XSPI_HandleTypeDef *Ctx, MX66UW1G45G_Interface_t Mode, MX66UW1G45G_Transfer_t Rate)
{
 8003df0:	b570      	push	{r4, r5, r6, lr}
 8003df2:	460d      	mov	r5, r1
 8003df4:	b094      	sub	sp, #80	@ 0x50
 8003df6:	4606      	mov	r6, r0
 8003df8:	4614      	mov	r4, r2
  XSPI_RegularCmdTypeDef s_command = {0};
 8003dfa:	2100      	movs	r1, #0
 8003dfc:	2250      	movs	r2, #80	@ 0x50
 8003dfe:	4668      	mov	r0, sp
 8003e00:	f02e fec1 	bl	8032b86 <memset>

  /* SPI mode and DTR transfer not supported by memory */
  if ((Mode == MX66UW1G45G_SPI_MODE) && (Rate == MX66UW1G45G_DTR_TRANSFER))
 8003e04:	bb05      	cbnz	r5, 8003e48 <MX66UW1G45G_ResetEnable+0x58>
 8003e06:	2c01      	cmp	r4, #1
 8003e08:	d020      	beq.n	8003e4c <MX66UW1G45G_ResetEnable+0x5c>
  /* Initialize the reset enable command */
  s_command.OperationType = HAL_XSPI_OPTYPE_COMMON_CFG;
  s_command.IOSelect =  HAL_XSPI_SELECT_IO_3_0;
  s_command.InstructionMode = (Mode == MX66UW1G45G_SPI_MODE)
                                  ? HAL_XSPI_INSTRUCTION_1_LINE
                                  : HAL_XSPI_INSTRUCTION_8_LINES;
 8003e0a:	2301      	movs	r3, #1
  s_command.InstructionDTRMode = (Rate == MX66UW1G45G_DTR_TRANSFER)
                                     ? HAL_XSPI_INSTRUCTION_DTR_ENABLE
                                     : HAL_XSPI_INSTRUCTION_DTR_DISABLE;
 8003e0c:	1e62      	subs	r2, r4, #1
 8003e0e:	4254      	negs	r4, r2
 8003e10:	4154      	adcs	r4, r2
  s_command.InstructionWidth = (Mode == MX66UW1G45G_SPI_MODE)
                                   ? HAL_XSPI_INSTRUCTION_8_BITS
                                   : HAL_XSPI_INSTRUCTION_16_BITS;
 8003e12:	2d00      	cmp	r5, #0
  s_command.InstructionMode = (Mode == MX66UW1G45G_SPI_MODE)
 8003e14:	9303      	str	r3, [sp, #12]
                                   : HAL_XSPI_INSTRUCTION_16_BITS;
 8003e16:	bf14      	ite	ne
 8003e18:	2301      	movne	r3, #1
 8003e1a:	2300      	moveq	r3, #0
 8003e1c:	ea4f 1303 	mov.w	r3, r3, lsl #4
  s_command.InstructionWidth = (Mode == MX66UW1G45G_SPI_MODE)
 8003e20:	9304      	str	r3, [sp, #16]
  s_command.Instruction = (Mode == MX66UW1G45G_SPI_MODE)
                              ? MX66UW1G45G_RESET_ENABLE_CMD
                              : MX66UW1G45G_OCTA_RESET_ENABLE_CMD;
 8003e22:	f246 6399 	movw	r3, #26265	@ 0x6699
 8003e26:	bf08      	it	eq
 8003e28:	2366      	moveq	r3, #102	@ 0x66
  s_command.DummyCycles = 0U;
  s_command.DQSMode = HAL_XSPI_DQS_DISABLE;


  /* Send the command */
  if (HAL_XSPI_Command(Ctx, &s_command, HAL_XSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003e2a:	f241 3288 	movw	r2, #5000	@ 0x1388
 8003e2e:	4669      	mov	r1, sp
 8003e30:	4630      	mov	r0, r6
                                     : HAL_XSPI_INSTRUCTION_DTR_DISABLE;
 8003e32:	00e4      	lsls	r4, r4, #3
  s_command.InstructionDTRMode = (Rate == MX66UW1G45G_DTR_TRANSFER)
 8003e34:	9405      	str	r4, [sp, #20]
  s_command.Instruction = (Mode == MX66UW1G45G_SPI_MODE)
 8003e36:	9302      	str	r3, [sp, #8]
  if (HAL_XSPI_Command(Ctx, &s_command, HAL_XSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003e38:	f004 fcbc 	bl	80087b4 <HAL_XSPI_Command>
 8003e3c:	3800      	subs	r0, #0
 8003e3e:	bf18      	it	ne
 8003e40:	2001      	movne	r0, #1
 8003e42:	4240      	negs	r0, r0
  {
    return MX66UW1G45G_ERROR;
  }

  return MX66UW1G45G_OK;
}
 8003e44:	b014      	add	sp, #80	@ 0x50
 8003e46:	bd70      	pop	{r4, r5, r6, pc}
                                  : HAL_XSPI_INSTRUCTION_8_LINES;
 8003e48:	2304      	movs	r3, #4
 8003e4a:	e7df      	b.n	8003e0c <MX66UW1G45G_ResetEnable+0x1c>
    return MX66UW1G45G_ERROR;
 8003e4c:	f04f 30ff 	mov.w	r0, #4294967295
 8003e50:	e7f8      	b.n	8003e44 <MX66UW1G45G_ResetEnable+0x54>

08003e52 <MX66UW1G45G_ResetMemory>:
  * @param  Mode Interface select
  * @param  Rate Transfer rate STR or DTR
  * @retval error status
  */
int32_t MX66UW1G45G_ResetMemory(XSPI_HandleTypeDef *Ctx, MX66UW1G45G_Interface_t Mode, MX66UW1G45G_Transfer_t Rate)
{
 8003e52:	b570      	push	{r4, r5, r6, lr}
 8003e54:	460d      	mov	r5, r1
 8003e56:	b094      	sub	sp, #80	@ 0x50
 8003e58:	4606      	mov	r6, r0
 8003e5a:	4614      	mov	r4, r2
  XSPI_RegularCmdTypeDef s_command = {0};
 8003e5c:	2100      	movs	r1, #0
 8003e5e:	2250      	movs	r2, #80	@ 0x50
 8003e60:	4668      	mov	r0, sp
 8003e62:	f02e fe90 	bl	8032b86 <memset>

  /* SPI mode and DTR transfer not supported by memory */
  if ((Mode == MX66UW1G45G_SPI_MODE) && (Rate == MX66UW1G45G_DTR_TRANSFER))
 8003e66:	bb05      	cbnz	r5, 8003eaa <MX66UW1G45G_ResetMemory+0x58>
 8003e68:	2c01      	cmp	r4, #1
 8003e6a:	d020      	beq.n	8003eae <MX66UW1G45G_ResetMemory+0x5c>

  /* Initialize the reset enable command */
  s_command.OperationType = HAL_XSPI_OPTYPE_COMMON_CFG;
  s_command.InstructionMode = (Mode == MX66UW1G45G_SPI_MODE)
                                  ? HAL_XSPI_INSTRUCTION_1_LINE
                                  : HAL_XSPI_INSTRUCTION_8_LINES;
 8003e6c:	2301      	movs	r3, #1
  s_command.InstructionDTRMode = (Rate == MX66UW1G45G_DTR_TRANSFER)
                                     ? HAL_XSPI_INSTRUCTION_DTR_ENABLE
                                     : HAL_XSPI_INSTRUCTION_DTR_DISABLE;
 8003e6e:	1e62      	subs	r2, r4, #1
 8003e70:	4254      	negs	r4, r2
 8003e72:	4154      	adcs	r4, r2
  s_command.InstructionWidth = (Mode == MX66UW1G45G_SPI_MODE)
                                   ? HAL_XSPI_INSTRUCTION_8_BITS
                                   : HAL_XSPI_INSTRUCTION_16_BITS;
 8003e74:	2d00      	cmp	r5, #0
  s_command.InstructionMode = (Mode == MX66UW1G45G_SPI_MODE)
 8003e76:	9303      	str	r3, [sp, #12]
                                   : HAL_XSPI_INSTRUCTION_16_BITS;
 8003e78:	bf14      	ite	ne
 8003e7a:	2301      	movne	r3, #1
 8003e7c:	2300      	moveq	r3, #0
 8003e7e:	ea4f 1303 	mov.w	r3, r3, lsl #4
  s_command.InstructionWidth = (Mode == MX66UW1G45G_SPI_MODE)
 8003e82:	9304      	str	r3, [sp, #16]
  s_command.Instruction = (Mode == MX66UW1G45G_SPI_MODE)
                              ? MX66UW1G45G_RESET_MEMORY_CMD
                              : MX66UW1G45G_OCTA_RESET_MEMORY_CMD;
 8003e84:	f649 1366 	movw	r3, #39270	@ 0x9966
 8003e88:	bf08      	it	eq
 8003e8a:	2399      	moveq	r3, #153	@ 0x99
 #if defined (XSPI_CCR_SIOO)
  s_command.SIOOMode            = HAL_XSPI_SIOO_INST_EVERY_CMD;
 #endif

  /* Send the command */
  if (HAL_XSPI_Command(Ctx, &s_command, HAL_XSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003e8c:	f241 3288 	movw	r2, #5000	@ 0x1388
 8003e90:	4669      	mov	r1, sp
 8003e92:	4630      	mov	r0, r6
                                     : HAL_XSPI_INSTRUCTION_DTR_DISABLE;
 8003e94:	00e4      	lsls	r4, r4, #3
  s_command.InstructionDTRMode = (Rate == MX66UW1G45G_DTR_TRANSFER)
 8003e96:	9405      	str	r4, [sp, #20]
  s_command.Instruction = (Mode == MX66UW1G45G_SPI_MODE)
 8003e98:	9302      	str	r3, [sp, #8]
  if (HAL_XSPI_Command(Ctx, &s_command, HAL_XSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003e9a:	f004 fc8b 	bl	80087b4 <HAL_XSPI_Command>
 8003e9e:	3800      	subs	r0, #0
 8003ea0:	bf18      	it	ne
 8003ea2:	2001      	movne	r0, #1
 8003ea4:	4240      	negs	r0, r0
  {
    return MX66UW1G45G_ERROR;
  }

  return MX66UW1G45G_OK;
}
 8003ea6:	b014      	add	sp, #80	@ 0x50
 8003ea8:	bd70      	pop	{r4, r5, r6, pc}
                                  : HAL_XSPI_INSTRUCTION_8_LINES;
 8003eaa:	2304      	movs	r3, #4
 8003eac:	e7df      	b.n	8003e6e <MX66UW1G45G_ResetMemory+0x1c>
    return MX66UW1G45G_ERROR;
 8003eae:	f04f 30ff 	mov.w	r0, #4294967295
 8003eb2:	e7f8      	b.n	8003ea6 <MX66UW1G45G_ResetMemory+0x54>

08003eb4 <SystemInit>:
   SCB->CPACR |= ((3UL << 20U)|(3UL << 22U));  /* set CP10 and CP11 Full Access */
  #endif

  /* Reset the RCC clock configuration to the default reset state ------------*/
  /* Set MSION bit */
  RCC->CR = RCC_CR_MSISON;
 8003eb4:	2201      	movs	r2, #1
   SCB->CPACR |= ((3UL << 20U)|(3UL << 22U));  /* set CP10 and CP11 Full Access */
 8003eb6:	480e      	ldr	r0, [pc, #56]	@ (8003ef0 <SystemInit+0x3c>)
 8003eb8:	f8d0 3088 	ldr.w	r3, [r0, #136]	@ 0x88
 8003ebc:	f443 0370 	orr.w	r3, r3, #15728640	@ 0xf00000
 8003ec0:	f8c0 3088 	str.w	r3, [r0, #136]	@ 0x88
  RCC->CR = RCC_CR_MSISON;
 8003ec4:	4b0b      	ldr	r3, [pc, #44]	@ (8003ef4 <SystemInit+0x40>)
 8003ec6:	601a      	str	r2, [r3, #0]

  /* Reset CFGR register */
  RCC->CFGR1 = 0U;
 8003ec8:	2200      	movs	r2, #0
 8003eca:	61da      	str	r2, [r3, #28]
  RCC->CFGR2 = 0U;
 8003ecc:	621a      	str	r2, [r3, #32]
  RCC->CFGR3 = 0U;
 8003ece:	625a      	str	r2, [r3, #36]	@ 0x24

  /* Reset HSEON, CSSON , HSION, PLLxON bits */
  RCC->CR &= ~(RCC_CR_HSEON | RCC_CR_CSSON | RCC_CR_PLL1ON | RCC_CR_PLL2ON | RCC_CR_PLL3ON);
 8003ed0:	6819      	ldr	r1, [r3, #0]
 8003ed2:	f021 51a8 	bic.w	r1, r1, #352321536	@ 0x15000000
 8003ed6:	f421 2110 	bic.w	r1, r1, #589824	@ 0x90000
 8003eda:	6019      	str	r1, [r3, #0]

  /* Reset PLLCFGR register */
  RCC->PLL1CFGR = 0U;
 8003edc:	629a      	str	r2, [r3, #40]	@ 0x28

  /* Reset HSEBYP bit */
  RCC->CR &= ~(RCC_CR_HSEBYP);
 8003ede:	6819      	ldr	r1, [r3, #0]
 8003ee0:	f421 2180 	bic.w	r1, r1, #262144	@ 0x40000
 8003ee4:	6019      	str	r1, [r3, #0]

  /* Disable all interrupts */
  RCC->CIER = 0U;
 8003ee6:	651a      	str	r2, [r3, #80]	@ 0x50

  /* Configure the Vector Table location add offset address ------------------*/
  #ifdef VECT_TAB_SRAM
    SCB->VTOR = SRAM1_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
  #else
    SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 8003ee8:	f04f 6300 	mov.w	r3, #134217728	@ 0x8000000
 8003eec:	6083      	str	r3, [r0, #8]
  #endif
}
 8003eee:	4770      	bx	lr
 8003ef0:	e000ed00 	.word	0xe000ed00
 8003ef4:	46020c00 	.word	0x46020c00

08003ef8 <HAL_Init>:
  */
HAL_StatusTypeDef HAL_Init(void)
{
  /* Configure Flash prefetch */
#if (PREFETCH_ENABLE != 0U)
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 8003ef8:	4a10      	ldr	r2, [pc, #64]	@ (8003f3c <HAL_Init+0x44>)
{
 8003efa:	b510      	push	{r4, lr}
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 8003efc:	6813      	ldr	r3, [r2, #0]
#endif /* PREFETCH_ENABLE */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 8003efe:	2003      	movs	r0, #3
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 8003f00:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8003f04:	6013      	str	r3, [r2, #0]
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 8003f06:	f000 f84d 	bl	8003fa4 <HAL_NVIC_SetPriorityGrouping>

  /* Update the SystemCoreClock global variable */
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR2 & RCC_CFGR2_HPRE) >> RCC_CFGR2_HPRE_Pos];
 8003f0a:	f002 fd49 	bl	80069a0 <HAL_RCC_GetSysClockFreq>
 8003f0e:	4b0c      	ldr	r3, [pc, #48]	@ (8003f40 <HAL_Init+0x48>)
 8003f10:	4a0c      	ldr	r2, [pc, #48]	@ (8003f44 <HAL_Init+0x4c>)
 8003f12:	6a1b      	ldr	r3, [r3, #32]
 8003f14:	f003 030f 	and.w	r3, r3, #15
 8003f18:	5cd3      	ldrb	r3, [r2, r3]
 8003f1a:	40d8      	lsrs	r0, r3
 8003f1c:	4b0a      	ldr	r3, [pc, #40]	@ (8003f48 <HAL_Init+0x50>)
 8003f1e:	6018      	str	r0, [r3, #0]

  /* Select HCLK as SysTick clock source */
  HAL_SYSTICK_CLKSourceConfig(SYSTICK_CLKSOURCE_HCLK);
 8003f20:	2004      	movs	r0, #4
 8003f22:	f000 f88f 	bl	8004044 <HAL_SYSTICK_CLKSourceConfig>

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  if (HAL_InitTick(TICK_INT_PRIORITY) != HAL_OK)
 8003f26:	2000      	movs	r0, #0
 8003f28:	f7fc ff32 	bl	8000d90 <HAL_InitTick>
 8003f2c:	4604      	mov	r4, r0
 8003f2e:	b918      	cbnz	r0, 8003f38 <HAL_Init+0x40>
  {
    return HAL_ERROR;
  }

  /* Init the low level hardware */
  HAL_MspInit();
 8003f30:	f7fc fc5a 	bl	80007e8 <HAL_MspInit>

  /* Return function status */
  return HAL_OK;
}
 8003f34:	4620      	mov	r0, r4
 8003f36:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8003f38:	2401      	movs	r4, #1
 8003f3a:	e7fb      	b.n	8003f34 <HAL_Init+0x3c>
 8003f3c:	40022000 	.word	0x40022000
 8003f40:	46020c00 	.word	0x46020c00
 8003f44:	080358a4 	.word	0x080358a4
 8003f48:	2000004c 	.word	0x2000004c

08003f4c <HAL_IncTick>:
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
  uwTick += (uint32_t)uwTickFreq;
 8003f4c:	4a03      	ldr	r2, [pc, #12]	@ (8003f5c <HAL_IncTick+0x10>)
 8003f4e:	4b04      	ldr	r3, [pc, #16]	@ (8003f60 <HAL_IncTick+0x14>)
 8003f50:	6811      	ldr	r1, [r2, #0]
 8003f52:	781b      	ldrb	r3, [r3, #0]
 8003f54:	440b      	add	r3, r1
 8003f56:	6013      	str	r3, [r2, #0]
}
 8003f58:	4770      	bx	lr
 8003f5a:	bf00      	nop
 8003f5c:	2006eac8 	.word	0x2006eac8
 8003f60:	20000050 	.word	0x20000050

08003f64 <HAL_GetTick>:
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
  return uwTick;
 8003f64:	4b01      	ldr	r3, [pc, #4]	@ (8003f6c <HAL_GetTick+0x8>)
 8003f66:	6818      	ldr	r0, [r3, #0]
}
 8003f68:	4770      	bx	lr
 8003f6a:	bf00      	nop
 8003f6c:	2006eac8 	.word	0x2006eac8

08003f70 <HAL_Delay>:
  *       implementations in user file.
  * @param Delay  specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 8003f70:	b538      	push	{r3, r4, r5, lr}
 8003f72:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 8003f74:	f7ff fff6 	bl	8003f64 <HAL_GetTick>
 8003f78:	4605      	mov	r5, r0
  uint32_t wait = Delay;

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 8003f7a:	1c63      	adds	r3, r4, #1
  {
    wait += (uint32_t)(uwTickFreq);
 8003f7c:	bf1e      	ittt	ne
 8003f7e:	4b04      	ldrne	r3, [pc, #16]	@ (8003f90 <HAL_Delay+0x20>)
 8003f80:	781b      	ldrbne	r3, [r3, #0]
 8003f82:	18e4      	addne	r4, r4, r3
  }

  while ((HAL_GetTick() - tickstart) < wait)
 8003f84:	f7ff ffee 	bl	8003f64 <HAL_GetTick>
 8003f88:	1b43      	subs	r3, r0, r5
 8003f8a:	42a3      	cmp	r3, r4
 8003f8c:	d3fa      	bcc.n	8003f84 <HAL_Delay+0x14>
  {
  }
}
 8003f8e:	bd38      	pop	{r3, r4, r5, pc}
 8003f90:	20000050 	.word	0x20000050

08003f94 <HAL_SYSCFG_DisableSRAMCached>:
  *
  * @retval None
  */
void HAL_SYSCFG_DisableSRAMCached(void)
{
  CLEAR_BIT(SYSCFG->CFGR1, SYSCFG_CFGR1_SRAMCACHED);
 8003f94:	4a02      	ldr	r2, [pc, #8]	@ (8003fa0 <HAL_SYSCFG_DisableSRAMCached+0xc>)
 8003f96:	6853      	ldr	r3, [r2, #4]
 8003f98:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 8003f9c:	6053      	str	r3, [r2, #4]
}
 8003f9e:	4770      	bx	lr
 8003fa0:	46000400 	.word	0x46000400

08003fa4 <HAL_NVIC_SetPriorityGrouping>:
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 8003fa4:	4907      	ldr	r1, [pc, #28]	@ (8003fc4 <HAL_NVIC_SetPriorityGrouping+0x20>)
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 8003fa6:	0203      	lsls	r3, r0, #8
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 8003fa8:	68ca      	ldr	r2, [r1, #12]
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 8003faa:	f403 63e0 	and.w	r3, r3, #1792	@ 0x700
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 8003fae:	f422 62e0 	bic.w	r2, r2, #1792	@ 0x700
 8003fb2:	0412      	lsls	r2, r2, #16
 8003fb4:	0c12      	lsrs	r2, r2, #16
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 8003fb6:	4313      	orrs	r3, r2
  reg_value  =  (reg_value                                   |
 8003fb8:	f043 63bf 	orr.w	r3, r3, #100139008	@ 0x5f80000
 8003fbc:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
  SCB->AIRCR =  reg_value;
 8003fc0:	60cb      	str	r3, [r1, #12]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));

  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
}
 8003fc2:	4770      	bx	lr
 8003fc4:	e000ed00 	.word	0xe000ed00

08003fc8 <HAL_NVIC_SetPriority>:
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 8003fc8:	4b15      	ldr	r3, [pc, #84]	@ (8004020 <HAL_NVIC_SetPriority+0x58>)
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{
 8003fca:	b530      	push	{r4, r5, lr}
 8003fcc:	68dc      	ldr	r4, [r3, #12]
 8003fce:	f3c4 2402 	ubfx	r4, r4, #8, #3
{
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 8003fd2:	f1c4 0307 	rsb	r3, r4, #7
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8003fd6:	1d25      	adds	r5, r4, #4
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 8003fd8:	2b04      	cmp	r3, #4
 8003fda:	bf28      	it	cs
 8003fdc:	2304      	movcs	r3, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8003fde:	2d06      	cmp	r5, #6

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8003fe0:	f04f 35ff 	mov.w	r5, #4294967295
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8003fe4:	bf94      	ite	ls
 8003fe6:	2400      	movls	r4, #0
 8003fe8:	3c03      	subhi	r4, #3
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8003fea:	fa05 f303 	lsl.w	r3, r5, r3
 8003fee:	ea21 0303 	bic.w	r3, r1, r3
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 8003ff2:	40a5      	lsls	r5, r4
 8003ff4:	ea22 0205 	bic.w	r2, r2, r5
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8003ff8:	40a3      	lsls	r3, r4
  if ((int32_t)(IRQn) >= 0)
 8003ffa:	2800      	cmp	r0, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8003ffc:	ea43 0302 	orr.w	r3, r3, r2
    NVIC->IPR[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8004000:	bfac      	ite	ge
 8004002:	f100 4060 	addge.w	r0, r0, #3758096384	@ 0xe0000000
    SCB->SHPR[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8004006:	4a07      	ldrlt	r2, [pc, #28]	@ (8004024 <HAL_NVIC_SetPriority+0x5c>)
    NVIC->IPR[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8004008:	ea4f 1303 	mov.w	r3, r3, lsl #4
 800400c:	b2db      	uxtb	r3, r3
 800400e:	bfab      	itete	ge
 8004010:	f500 4061 	addge.w	r0, r0, #57600	@ 0xe100
    SCB->SHPR[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8004014:	f000 000f 	andlt.w	r0, r0, #15
    NVIC->IPR[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8004018:	f880 3300 	strbge.w	r3, [r0, #768]	@ 0x300
    SCB->SHPR[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800401c:	5413      	strblt	r3, [r2, r0]
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));

  prioritygroup = NVIC_GetPriorityGrouping();

  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
}
 800401e:	bd30      	pop	{r4, r5, pc}
 8004020:	e000ed00 	.word	0xe000ed00
 8004024:	e000ed14 	.word	0xe000ed14

08004028 <HAL_NVIC_EnableIRQ>:
  if ((int32_t)(IRQn) >= 0)
 8004028:	2800      	cmp	r0, #0
 800402a:	db07      	blt.n	800403c <HAL_NVIC_EnableIRQ+0x14>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 800402c:	2301      	movs	r3, #1
 800402e:	0941      	lsrs	r1, r0, #5
 8004030:	4a03      	ldr	r2, [pc, #12]	@ (8004040 <HAL_NVIC_EnableIRQ+0x18>)
 8004032:	f000 001f 	and.w	r0, r0, #31
 8004036:	4083      	lsls	r3, r0
 8004038:	f842 3021 	str.w	r3, [r2, r1, lsl #2]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));

  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
}
 800403c:	4770      	bx	lr
 800403e:	bf00      	nop
 8004040:	e000e100 	.word	0xe000e100

08004044 <HAL_SYSTICK_CLKSourceConfig>:
  */
void HAL_SYSTICK_CLKSourceConfig(uint32_t CLKSource)
{
  /* Check the parameters */
  assert_param(IS_SYSTICK_CLK_SOURCE(CLKSource));
  switch (CLKSource)
 8004044:	2804      	cmp	r0, #4
 8004046:	d818      	bhi.n	800407a <HAL_SYSTICK_CLKSourceConfig+0x36>
 8004048:	e8df f000 	tbb	[pc, r0]
 800404c:	1726180a 	.word	0x1726180a
 8004050:	03          	.byte	0x03
 8004051:	00          	.byte	0x00
  {
    /* Select HCLK as Systick clock source */
    case SYSTICK_CLKSOURCE_HCLK:
      SET_BIT(SysTick->CTRL, SysTick_CTRL_CLKSOURCE_Msk);
 8004052:	f04f 22e0 	mov.w	r2, #3758153728	@ 0xe000e000
 8004056:	6913      	ldr	r3, [r2, #16]
 8004058:	f043 0304 	orr.w	r3, r3, #4
 800405c:	6113      	str	r3, [r2, #16]
      break;
 800405e:	4770      	bx	lr
    /* Select HCLK_DIV8 as Systick clock source */
    case SYSTICK_CLKSOURCE_HCLK_DIV8:
      CLEAR_BIT(SysTick->CTRL, SysTick_CTRL_CLKSOURCE_Msk);
 8004060:	f04f 22e0 	mov.w	r2, #3758153728	@ 0xe000e000
 8004064:	6913      	ldr	r3, [r2, #16]
 8004066:	f023 0304 	bic.w	r3, r3, #4
 800406a:	6113      	str	r3, [r2, #16]
      MODIFY_REG(RCC->CCIPR1, RCC_CCIPR1_SYSTICKSEL, (0x00000000U));
 800406c:	4a11      	ldr	r2, [pc, #68]	@ (80040b4 <HAL_SYSTICK_CLKSourceConfig+0x70>)
 800406e:	f8d2 30e0 	ldr.w	r3, [r2, #224]	@ 0xe0
 8004072:	f423 0340 	bic.w	r3, r3, #12582912	@ 0xc00000
      MODIFY_REG(RCC->CCIPR1, RCC_CCIPR1_SYSTICKSEL, RCC_CCIPR1_SYSTICKSEL_0);
      break;
    /* Select LSE as Systick clock source */
    case SYSTICK_CLKSOURCE_LSE:
      CLEAR_BIT(SysTick->CTRL, SysTick_CTRL_CLKSOURCE_Msk);
      MODIFY_REG(RCC->CCIPR1, RCC_CCIPR1_SYSTICKSEL, RCC_CCIPR1_SYSTICKSEL_1);
 8004076:	f8c2 30e0 	str.w	r3, [r2, #224]	@ 0xe0
      break;
    default:
      /* Nothing to do */
      break;
  }
}
 800407a:	4770      	bx	lr
      CLEAR_BIT(SysTick->CTRL, SysTick_CTRL_CLKSOURCE_Msk);
 800407c:	f04f 22e0 	mov.w	r2, #3758153728	@ 0xe000e000
 8004080:	6913      	ldr	r3, [r2, #16]
 8004082:	f023 0304 	bic.w	r3, r3, #4
 8004086:	6113      	str	r3, [r2, #16]
      MODIFY_REG(RCC->CCIPR1, RCC_CCIPR1_SYSTICKSEL, RCC_CCIPR1_SYSTICKSEL_0);
 8004088:	4a0a      	ldr	r2, [pc, #40]	@ (80040b4 <HAL_SYSTICK_CLKSourceConfig+0x70>)
 800408a:	f8d2 30e0 	ldr.w	r3, [r2, #224]	@ 0xe0
 800408e:	f423 0340 	bic.w	r3, r3, #12582912	@ 0xc00000
 8004092:	f443 0380 	orr.w	r3, r3, #4194304	@ 0x400000
 8004096:	e7ee      	b.n	8004076 <HAL_SYSTICK_CLKSourceConfig+0x32>
      CLEAR_BIT(SysTick->CTRL, SysTick_CTRL_CLKSOURCE_Msk);
 8004098:	f04f 22e0 	mov.w	r2, #3758153728	@ 0xe000e000
 800409c:	6913      	ldr	r3, [r2, #16]
 800409e:	f023 0304 	bic.w	r3, r3, #4
 80040a2:	6113      	str	r3, [r2, #16]
      MODIFY_REG(RCC->CCIPR1, RCC_CCIPR1_SYSTICKSEL, RCC_CCIPR1_SYSTICKSEL_1);
 80040a4:	4a03      	ldr	r2, [pc, #12]	@ (80040b4 <HAL_SYSTICK_CLKSourceConfig+0x70>)
 80040a6:	f8d2 30e0 	ldr.w	r3, [r2, #224]	@ 0xe0
 80040aa:	f423 0340 	bic.w	r3, r3, #12582912	@ 0xc00000
 80040ae:	f443 0300 	orr.w	r3, r3, #8388608	@ 0x800000
 80040b2:	e7e0      	b.n	8004076 <HAL_SYSTICK_CLKSourceConfig+0x32>
 80040b4:	46020c00 	.word	0x46020c00

080040b8 <HAL_CRC_Init>:
  *         parameters in the CRC_InitTypeDef and create the associated handle.
  * @param  hcrc CRC handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRC_Init(CRC_HandleTypeDef *hcrc)
{
 80040b8:	b510      	push	{r4, lr}
  /* Check the CRC handle allocation */
  if (hcrc == NULL)
 80040ba:	4604      	mov	r4, r0
 80040bc:	b908      	cbnz	r0, 80040c2 <HAL_CRC_Init+0xa>
  {
    return HAL_ERROR;
 80040be:	2001      	movs	r0, #1
  /* Change CRC peripheral state */
  hcrc->State = HAL_CRC_STATE_READY;

  /* Return function status */
  return HAL_OK;
}
 80040c0:	bd10      	pop	{r4, pc}
  if (hcrc->State == HAL_CRC_STATE_RESET)
 80040c2:	7f43      	ldrb	r3, [r0, #29]
 80040c4:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 80040c8:	b913      	cbnz	r3, 80040d0 <HAL_CRC_Init+0x18>
    hcrc->Lock = HAL_UNLOCKED;
 80040ca:	7702      	strb	r2, [r0, #28]
    HAL_CRC_MspInit(hcrc);
 80040cc:	f7fc fba4 	bl	8000818 <HAL_CRC_MspInit>
  hcrc->State = HAL_CRC_STATE_BUSY;
 80040d0:	2302      	movs	r3, #2
 80040d2:	7763      	strb	r3, [r4, #29]
  if (hcrc->Init.DefaultPolynomialUse == DEFAULT_POLYNOMIAL_ENABLE)
 80040d4:	7923      	ldrb	r3, [r4, #4]
 80040d6:	b9e3      	cbnz	r3, 8004112 <HAL_CRC_Init+0x5a>
    WRITE_REG(hcrc->Instance->POL, DEFAULT_CRC32_POLY);
 80040d8:	6823      	ldr	r3, [r4, #0]
 80040da:	4a13      	ldr	r2, [pc, #76]	@ (8004128 <HAL_CRC_Init+0x70>)
 80040dc:	615a      	str	r2, [r3, #20]
    MODIFY_REG(hcrc->Instance->CR, CRC_CR_POLYSIZE, CRC_POLYLENGTH_32B);
 80040de:	689a      	ldr	r2, [r3, #8]
 80040e0:	f022 0218 	bic.w	r2, r2, #24
 80040e4:	609a      	str	r2, [r3, #8]
  if (hcrc->Init.DefaultInitValueUse == DEFAULT_INIT_VALUE_ENABLE)
 80040e6:	7962      	ldrb	r2, [r4, #5]
    WRITE_REG(hcrc->Instance->INIT, DEFAULT_CRC_INITVALUE);
 80040e8:	6823      	ldr	r3, [r4, #0]
  if (hcrc->Init.DefaultInitValueUse == DEFAULT_INIT_VALUE_ENABLE)
 80040ea:	b9d2      	cbnz	r2, 8004122 <HAL_CRC_Init+0x6a>
    WRITE_REG(hcrc->Instance->INIT, DEFAULT_CRC_INITVALUE);
 80040ec:	f04f 32ff 	mov.w	r2, #4294967295
    WRITE_REG(hcrc->Instance->INIT, hcrc->Init.InitValue);
 80040f0:	611a      	str	r2, [r3, #16]
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_IN, hcrc->Init.InputDataInversionMode);
 80040f2:	689a      	ldr	r2, [r3, #8]
 80040f4:	6961      	ldr	r1, [r4, #20]
 80040f6:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
 80040fa:	430a      	orrs	r2, r1
 80040fc:	609a      	str	r2, [r3, #8]
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_OUT, hcrc->Init.OutputDataInversionMode);
 80040fe:	689a      	ldr	r2, [r3, #8]
 8004100:	69a1      	ldr	r1, [r4, #24]
 8004102:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
 8004106:	430a      	orrs	r2, r1
 8004108:	609a      	str	r2, [r3, #8]
  hcrc->State = HAL_CRC_STATE_READY;
 800410a:	2301      	movs	r3, #1
  return HAL_OK;
 800410c:	2000      	movs	r0, #0
  hcrc->State = HAL_CRC_STATE_READY;
 800410e:	7763      	strb	r3, [r4, #29]
  return HAL_OK;
 8004110:	e7d6      	b.n	80040c0 <HAL_CRC_Init+0x8>
    if (HAL_CRCEx_Polynomial_Set(hcrc, hcrc->Init.GeneratingPolynomial, hcrc->Init.CRCLength) != HAL_OK)
 8004112:	4620      	mov	r0, r4
 8004114:	e9d4 1202 	ldrd	r1, r2, [r4, #8]
 8004118:	f000 f808 	bl	800412c <HAL_CRCEx_Polynomial_Set>
 800411c:	2800      	cmp	r0, #0
 800411e:	d0e2      	beq.n	80040e6 <HAL_CRC_Init+0x2e>
 8004120:	e7cd      	b.n	80040be <HAL_CRC_Init+0x6>
    WRITE_REG(hcrc->Instance->INIT, hcrc->Init.InitValue);
 8004122:	6922      	ldr	r2, [r4, #16]
 8004124:	e7e4      	b.n	80040f0 <HAL_CRC_Init+0x38>
 8004126:	bf00      	nop
 8004128:	04c11db7 	.word	0x04c11db7

0800412c <HAL_CRCEx_Polynomial_Set>:

  /* Check the parameters */
  assert_param(IS_CRC_POL_LENGTH(PolyLength));

  /* Ensure that the generating polynomial is odd */
  if ((Pol & (uint32_t)(0x1U)) ==  0U)
 800412c:	07cb      	lsls	r3, r1, #31
{
 800412e:	b510      	push	{r4, lr}
  if ((Pol & (uint32_t)(0x1U)) ==  0U)
 8004130:	d50d      	bpl.n	800414e <HAL_CRCEx_Polynomial_Set+0x22>
  uint32_t msb = 31U; /* polynomial degree is 32 at most, so msb is initialized to max value */
 8004132:	231f      	movs	r3, #31
     * definition. HAL_ERROR is reported if Pol degree is
     * larger than that indicated by PolyLength.
     * Look for MSB position: msb will contain the degree of
     *  the second to the largest polynomial member. E.g., for
     *  X^7 + X^6 + X^5 + X^2 + 1, msb = 6. */
    while ((msb-- > 0U) && ((Pol & ((uint32_t)(0x1U) << (msb & 0x1FU))) == 0U))
 8004134:	3b01      	subs	r3, #1
 8004136:	d31d      	bcc.n	8004174 <HAL_CRCEx_Polynomial_Set+0x48>
 8004138:	fa21 f403 	lsr.w	r4, r1, r3
 800413c:	07e4      	lsls	r4, r4, #31
 800413e:	d5f9      	bpl.n	8004134 <HAL_CRCEx_Polynomial_Set+0x8>
    {
    }

    switch (PolyLength)
 8004140:	2a10      	cmp	r2, #16
 8004142:	d013      	beq.n	800416c <HAL_CRCEx_Polynomial_Set+0x40>
 8004144:	2a10      	cmp	r2, #16
 8004146:	d804      	bhi.n	8004152 <HAL_CRCEx_Polynomial_Set+0x26>
 8004148:	b13a      	cbz	r2, 800415a <HAL_CRCEx_Polynomial_Set+0x2e>
 800414a:	2a08      	cmp	r2, #8
 800414c:	d010      	beq.n	8004170 <HAL_CRCEx_Polynomial_Set+0x44>
 800414e:	2001      	movs	r0, #1

    /* set generating polynomial size */
    MODIFY_REG(hcrc->Instance->CR, CRC_CR_POLYSIZE, PolyLength);
  }
  /* Return function status */
  return status;
 8004150:	e00b      	b.n	800416a <HAL_CRCEx_Polynomial_Set+0x3e>
    switch (PolyLength)
 8004152:	2a18      	cmp	r2, #24
 8004154:	d1fb      	bne.n	800414e <HAL_CRCEx_Polynomial_Set+0x22>
        if (msb >= HAL_CRC_LENGTH_7B)
 8004156:	2b06      	cmp	r3, #6
        if (msb >= HAL_CRC_LENGTH_16B)
 8004158:	d8f9      	bhi.n	800414e <HAL_CRCEx_Polynomial_Set+0x22>
    WRITE_REG(hcrc->Instance->POL, Pol);
 800415a:	6800      	ldr	r0, [r0, #0]
 800415c:	6141      	str	r1, [r0, #20]
    MODIFY_REG(hcrc->Instance->CR, CRC_CR_POLYSIZE, PolyLength);
 800415e:	6883      	ldr	r3, [r0, #8]
 8004160:	f023 0318 	bic.w	r3, r3, #24
 8004164:	4313      	orrs	r3, r2
 8004166:	6083      	str	r3, [r0, #8]
 8004168:	2000      	movs	r0, #0
}
 800416a:	bd10      	pop	{r4, pc}
        if (msb >= HAL_CRC_LENGTH_8B)
 800416c:	2b07      	cmp	r3, #7
 800416e:	e7f3      	b.n	8004158 <HAL_CRCEx_Polynomial_Set+0x2c>
        if (msb >= HAL_CRC_LENGTH_16B)
 8004170:	2b0f      	cmp	r3, #15
 8004172:	e7f1      	b.n	8004158 <HAL_CRCEx_Polynomial_Set+0x2c>
    switch (PolyLength)
 8004174:	2a10      	cmp	r2, #16
 8004176:	d1e5      	bne.n	8004144 <HAL_CRCEx_Polynomial_Set+0x18>
 8004178:	e7e9      	b.n	800414e <HAL_CRCEx_Polynomial_Set+0x22>

0800417a <HAL_DCACHE_ErrorCallback>:
  * @brief  Error callback.
  * @param  hdcache Pointer to a DCACHE_HandleTypeDef structure that contains
  *                 the configuration information for the specified DCACHEx peripheral.
  * @retval None
  */
__weak void HAL_DCACHE_ErrorCallback(DCACHE_HandleTypeDef *hdcache)
 800417a:	4770      	bx	lr

0800417c <HAL_DCACHE_CleanByAddrCallback>:
__weak void HAL_DCACHE_CleanByAddrCallback(DCACHE_HandleTypeDef *hdcache)
 800417c:	4770      	bx	lr

0800417e <HAL_DCACHE_InvalidateByAddrCallback>:
__weak void HAL_DCACHE_InvalidateByAddrCallback(DCACHE_HandleTypeDef *hdcache)
 800417e:	4770      	bx	lr

08004180 <HAL_DCACHE_CleanAndInvalidateByAddrCallback>:
__weak void HAL_DCACHE_CleanAndInvalidateByAddrCallback(DCACHE_HandleTypeDef *hdcache)
 8004180:	4770      	bx	lr

08004182 <HAL_DCACHE_InvalidateCompleteCallback>:
__weak void HAL_DCACHE_InvalidateCompleteCallback(DCACHE_HandleTypeDef *hdcache)
 8004182:	4770      	bx	lr

08004184 <HAL_DCACHE_Enable>:
  if (hdcache == NULL)
 8004184:	4602      	mov	r2, r0
 8004186:	b150      	cbz	r0, 800419e <HAL_DCACHE_Enable+0x1a>
  if (READ_BIT(hdcache->Instance->SR, (DCACHE_SR_BUSYF | DCACHE_SR_BUSYCMDF)) != 0U)
 8004188:	6801      	ldr	r1, [r0, #0]
 800418a:	6848      	ldr	r0, [r1, #4]
 800418c:	f010 0009 	ands.w	r0, r0, #9
 8004190:	d107      	bne.n	80041a2 <HAL_DCACHE_Enable+0x1e>
    hdcache->ErrorCode = HAL_DCACHE_ERROR_NONE;
 8004192:	6290      	str	r0, [r2, #40]	@ 0x28
    SET_BIT(hdcache->Instance->CR, DCACHE_CR_EN);
 8004194:	680b      	ldr	r3, [r1, #0]
 8004196:	f043 0301 	orr.w	r3, r3, #1
 800419a:	600b      	str	r3, [r1, #0]
 800419c:	4770      	bx	lr
    return HAL_ERROR;
 800419e:	2001      	movs	r0, #1
 80041a0:	4770      	bx	lr
    status =  HAL_BUSY;
 80041a2:	2002      	movs	r0, #2
}
 80041a4:	4770      	bx	lr
	...

080041a8 <HAL_DCACHE_Init>:
{
 80041a8:	b510      	push	{r4, lr}
  if (hdcache == NULL)
 80041aa:	4604      	mov	r4, r0
 80041ac:	b320      	cbz	r0, 80041f8 <HAL_DCACHE_Init+0x50>
  if (hdcache->State == HAL_DCACHE_STATE_RESET)
 80041ae:	f890 3024 	ldrb.w	r3, [r0, #36]	@ 0x24
 80041b2:	b983      	cbnz	r3, 80041d6 <HAL_DCACHE_Init+0x2e>
    hdcache->ErrorCallback                      = HAL_DCACHE_ErrorCallback;
 80041b4:	4b11      	ldr	r3, [pc, #68]	@ (80041fc <HAL_DCACHE_Init+0x54>)
 80041b6:	6083      	str	r3, [r0, #8]
    hdcache->CleanByAddrCallback                = HAL_DCACHE_CleanByAddrCallback;
 80041b8:	4b11      	ldr	r3, [pc, #68]	@ (8004200 <HAL_DCACHE_Init+0x58>)
 80041ba:	60c3      	str	r3, [r0, #12]
    hdcache->InvalidateByAddrCallback           = HAL_DCACHE_InvalidateByAddrCallback;
 80041bc:	4b11      	ldr	r3, [pc, #68]	@ (8004204 <HAL_DCACHE_Init+0x5c>)
 80041be:	6103      	str	r3, [r0, #16]
    hdcache->InvalidateCompleteCallback         = HAL_DCACHE_InvalidateCompleteCallback;
 80041c0:	4b11      	ldr	r3, [pc, #68]	@ (8004208 <HAL_DCACHE_Init+0x60>)
 80041c2:	6143      	str	r3, [r0, #20]
    hdcache->CleanAndInvalidateByAddrCallback   = HAL_DCACHE_CleanAndInvalidateByAddrCallback;
 80041c4:	4b11      	ldr	r3, [pc, #68]	@ (800420c <HAL_DCACHE_Init+0x64>)
 80041c6:	6183      	str	r3, [r0, #24]
    if (hdcache->MspInitCallback == NULL)
 80041c8:	69c3      	ldr	r3, [r0, #28]
 80041ca:	b90b      	cbnz	r3, 80041d0 <HAL_DCACHE_Init+0x28>
      hdcache->MspInitCallback = HAL_DCACHE_MspInit;
 80041cc:	4b10      	ldr	r3, [pc, #64]	@ (8004210 <HAL_DCACHE_Init+0x68>)
 80041ce:	61c3      	str	r3, [r0, #28]
    hdcache->MspInitCallback(hdcache);
 80041d0:	4620      	mov	r0, r4
 80041d2:	69e3      	ldr	r3, [r4, #28]
 80041d4:	4798      	blx	r3
  hdcache->ErrorCode = HAL_DCACHE_ERROR_NONE;
 80041d6:	2300      	movs	r3, #0
 80041d8:	62a3      	str	r3, [r4, #40]	@ 0x28
  hdcache->State = HAL_DCACHE_STATE_READY;
 80041da:	2301      	movs	r3, #1
  MODIFY_REG(hdcache->Instance->CR, DCACHE_CR_HBURST, hdcache->Init.ReadBurstType);
 80041dc:	6822      	ldr	r2, [r4, #0]
  hdcache->State = HAL_DCACHE_STATE_READY;
 80041de:	f884 3024 	strb.w	r3, [r4, #36]	@ 0x24
  MODIFY_REG(hdcache->Instance->CR, DCACHE_CR_HBURST, hdcache->Init.ReadBurstType);
 80041e2:	6813      	ldr	r3, [r2, #0]
 80041e4:	6861      	ldr	r1, [r4, #4]
 80041e6:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 80041ea:	430b      	orrs	r3, r1
  status = HAL_DCACHE_Enable(hdcache);
 80041ec:	4620      	mov	r0, r4
}
 80041ee:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  MODIFY_REG(hdcache->Instance->CR, DCACHE_CR_HBURST, hdcache->Init.ReadBurstType);
 80041f2:	6013      	str	r3, [r2, #0]
  status = HAL_DCACHE_Enable(hdcache);
 80041f4:	f7ff bfc6 	b.w	8004184 <HAL_DCACHE_Enable>
}
 80041f8:	2001      	movs	r0, #1
 80041fa:	bd10      	pop	{r4, pc}
 80041fc:	0800417b 	.word	0x0800417b
 8004200:	0800417d 	.word	0x0800417d
 8004204:	0800417f 	.word	0x0800417f
 8004208:	08004183 	.word	0x08004183
 800420c:	08004181 	.word	0x08004181
 8004210:	08000849 	.word	0x08000849

08004214 <HAL_DMA_Init>:
  * @param  hdma : Pointer to a DMA_HandleTypeDef structure that contains the configuration information for the
  *                specified DMA Channel.
  * @retval HAL status.
  */
HAL_StatusTypeDef HAL_DMA_Init(DMA_HandleTypeDef *const hdma)
{
 8004214:	b538      	push	{r3, r4, r5, lr}
 8004216:	4604      	mov	r4, r0
  /* Get tick number */
  uint32_t tickstart = HAL_GetTick();
 8004218:	f7ff fea4 	bl	8003f64 <HAL_GetTick>
 800421c:	4605      	mov	r5, r0

  /* Check the DMA peripheral handle parameter */
  if (hdma == NULL)
 800421e:	2c00      	cmp	r4, #0
 8004220:	f000 81a2 	beq.w	8004568 <HAL_DMA_Init+0x354>
    assert_param(IS_DMA_BURST_LENGTH(hdma->Init.DestBurstLength));
    assert_param(IS_DMA_TRANSFER_ALLOCATED_PORT(hdma->Init.TransferAllocatedPort));
  }

  /* Allocate lock resource */
  __HAL_UNLOCK(hdma);
 8004224:	2300      	movs	r3, #0
 8004226:	f884 304c 	strb.w	r3, [r4, #76]	@ 0x4c

  /* Update the DMA channel state */
  hdma->State = HAL_DMA_STATE_BUSY;
 800422a:	2302      	movs	r3, #2
  if (IS_GPDMA_INSTANCE(hdma->Instance) != 0U)
 800422c:	6822      	ldr	r2, [r4, #0]
  hdma->State = HAL_DMA_STATE_BUSY;
 800422e:	f884 3054 	strb.w	r3, [r4, #84]	@ 0x54

  /* Disable the DMA channel */
  __HAL_DMA_DISABLE(hdma);
 8004232:	6953      	ldr	r3, [r2, #20]
 8004234:	f043 0306 	orr.w	r3, r3, #6
 8004238:	6153      	str	r3, [r2, #20]

  /* Check if the DMA channel is effectively disabled */
  while ((hdma->Instance->CCR & DMA_CCR_EN) != 0U)
 800423a:	6823      	ldr	r3, [r4, #0]
 800423c:	695a      	ldr	r2, [r3, #20]
 800423e:	07d2      	lsls	r2, r2, #31
 8004240:	f100 8187 	bmi.w	8004552 <HAL_DMA_Init+0x33e>

  /* Prepare DMA Channel Control Register (CCR) value *****************************************************************/
  tmpreg = hdma->Init.Priority;

  /* Write DMA Channel Control Register (CCR) */
  MODIFY_REG(hdma->Instance->CCR, DMA_CCR_PRIO | DMA_CCR_LAP | DMA_CCR_LSM, tmpreg);
 8004244:	695a      	ldr	r2, [r3, #20]
 8004246:	6a21      	ldr	r1, [r4, #32]
 8004248:	f422 0243 	bic.w	r2, r2, #12779520	@ 0xc30000
 800424c:	430a      	orrs	r2, r1
 800424e:	615a      	str	r2, [r3, #20]

  /* Prepare DMA Channel Transfer Register (CTR1) value ***************************************************************/
  tmpreg = hdma->Init.DestInc | hdma->Init.DestDataWidth | hdma->Init.SrcInc | hdma->Init.SrcDataWidth;
 8004250:	69e1      	ldr	r1, [r4, #28]
 8004252:	6962      	ldr	r2, [r4, #20]

  /* Add parameters specific to GPDMA */
  if (IS_GPDMA_INSTANCE(hdma->Instance) != 0U)
 8004254:	4daf      	ldr	r5, [pc, #700]	@ (8004514 <HAL_DMA_Init+0x300>)
  tmpreg = hdma->Init.DestInc | hdma->Init.DestDataWidth | hdma->Init.SrcInc | hdma->Init.SrcDataWidth;
 8004256:	430a      	orrs	r2, r1
 8004258:	6921      	ldr	r1, [r4, #16]
  if (IS_GPDMA_INSTANCE(hdma->Instance) != 0U)
 800425a:	42ab      	cmp	r3, r5
  tmpreg = hdma->Init.DestInc | hdma->Init.DestDataWidth | hdma->Init.SrcInc | hdma->Init.SrcDataWidth;
 800425c:	ea42 0201 	orr.w	r2, r2, r1
 8004260:	69a1      	ldr	r1, [r4, #24]
 8004262:	48ad      	ldr	r0, [pc, #692]	@ (8004518 <HAL_DMA_Init+0x304>)
 8004264:	ea42 0201 	orr.w	r2, r2, r1
  if (IS_GPDMA_INSTANCE(hdma->Instance) != 0U)
 8004268:	f000 8087 	beq.w	800437a <HAL_DMA_Init+0x166>
 800426c:	49ab      	ldr	r1, [pc, #684]	@ (800451c <HAL_DMA_Init+0x308>)
 800426e:	428b      	cmp	r3, r1
 8004270:	f000 8083 	beq.w	800437a <HAL_DMA_Init+0x166>
 8004274:	f101 4170 	add.w	r1, r1, #4026531840	@ 0xf0000000
 8004278:	3180      	adds	r1, #128	@ 0x80
 800427a:	428b      	cmp	r3, r1
 800427c:	d07d      	beq.n	800437a <HAL_DMA_Init+0x166>
 800427e:	f101 5180 	add.w	r1, r1, #268435456	@ 0x10000000
 8004282:	428b      	cmp	r3, r1
 8004284:	d079      	beq.n	800437a <HAL_DMA_Init+0x166>
 8004286:	f101 4170 	add.w	r1, r1, #4026531840	@ 0xf0000000
 800428a:	3180      	adds	r1, #128	@ 0x80
 800428c:	428b      	cmp	r3, r1
 800428e:	d074      	beq.n	800437a <HAL_DMA_Init+0x166>
 8004290:	f101 5180 	add.w	r1, r1, #268435456	@ 0x10000000
 8004294:	428b      	cmp	r3, r1
 8004296:	d070      	beq.n	800437a <HAL_DMA_Init+0x166>
 8004298:	f101 4170 	add.w	r1, r1, #4026531840	@ 0xf0000000
 800429c:	3180      	adds	r1, #128	@ 0x80
 800429e:	428b      	cmp	r3, r1
 80042a0:	d06b      	beq.n	800437a <HAL_DMA_Init+0x166>
 80042a2:	f101 5180 	add.w	r1, r1, #268435456	@ 0x10000000
 80042a6:	428b      	cmp	r3, r1
 80042a8:	d067      	beq.n	800437a <HAL_DMA_Init+0x166>
 80042aa:	f101 4170 	add.w	r1, r1, #4026531840	@ 0xf0000000
 80042ae:	3180      	adds	r1, #128	@ 0x80
 80042b0:	428b      	cmp	r3, r1
 80042b2:	d062      	beq.n	800437a <HAL_DMA_Init+0x166>
 80042b4:	f101 5180 	add.w	r1, r1, #268435456	@ 0x10000000
 80042b8:	428b      	cmp	r3, r1
 80042ba:	d05e      	beq.n	800437a <HAL_DMA_Init+0x166>
 80042bc:	f101 4170 	add.w	r1, r1, #4026531840	@ 0xf0000000
 80042c0:	3180      	adds	r1, #128	@ 0x80
 80042c2:	428b      	cmp	r3, r1
 80042c4:	d059      	beq.n	800437a <HAL_DMA_Init+0x166>
 80042c6:	f101 5180 	add.w	r1, r1, #268435456	@ 0x10000000
 80042ca:	428b      	cmp	r3, r1
 80042cc:	d055      	beq.n	800437a <HAL_DMA_Init+0x166>
 80042ce:	f101 4170 	add.w	r1, r1, #4026531840	@ 0xf0000000
 80042d2:	3180      	adds	r1, #128	@ 0x80
 80042d4:	428b      	cmp	r3, r1
 80042d6:	d050      	beq.n	800437a <HAL_DMA_Init+0x166>
 80042d8:	f101 5180 	add.w	r1, r1, #268435456	@ 0x10000000
 80042dc:	428b      	cmp	r3, r1
 80042de:	d04c      	beq.n	800437a <HAL_DMA_Init+0x166>
 80042e0:	f101 4170 	add.w	r1, r1, #4026531840	@ 0xf0000000
 80042e4:	3180      	adds	r1, #128	@ 0x80
 80042e6:	428b      	cmp	r3, r1
 80042e8:	d047      	beq.n	800437a <HAL_DMA_Init+0x166>
 80042ea:	f101 5180 	add.w	r1, r1, #268435456	@ 0x10000000
 80042ee:	428b      	cmp	r3, r1
 80042f0:	d043      	beq.n	800437a <HAL_DMA_Init+0x166>
 80042f2:	f101 4170 	add.w	r1, r1, #4026531840	@ 0xf0000000
 80042f6:	3180      	adds	r1, #128	@ 0x80
 80042f8:	428b      	cmp	r3, r1
 80042fa:	d03e      	beq.n	800437a <HAL_DMA_Init+0x166>
 80042fc:	f101 5180 	add.w	r1, r1, #268435456	@ 0x10000000
 8004300:	428b      	cmp	r3, r1
 8004302:	d03a      	beq.n	800437a <HAL_DMA_Init+0x166>
 8004304:	f101 4170 	add.w	r1, r1, #4026531840	@ 0xf0000000
 8004308:	3180      	adds	r1, #128	@ 0x80
 800430a:	428b      	cmp	r3, r1
 800430c:	d035      	beq.n	800437a <HAL_DMA_Init+0x166>
 800430e:	f101 5180 	add.w	r1, r1, #268435456	@ 0x10000000
 8004312:	428b      	cmp	r3, r1
 8004314:	d031      	beq.n	800437a <HAL_DMA_Init+0x166>
 8004316:	f101 4170 	add.w	r1, r1, #4026531840	@ 0xf0000000
 800431a:	3180      	adds	r1, #128	@ 0x80
 800431c:	428b      	cmp	r3, r1
 800431e:	d02c      	beq.n	800437a <HAL_DMA_Init+0x166>
 8004320:	f101 5180 	add.w	r1, r1, #268435456	@ 0x10000000
 8004324:	428b      	cmp	r3, r1
 8004326:	d028      	beq.n	800437a <HAL_DMA_Init+0x166>
 8004328:	f101 4170 	add.w	r1, r1, #4026531840	@ 0xf0000000
 800432c:	3180      	adds	r1, #128	@ 0x80
 800432e:	428b      	cmp	r3, r1
 8004330:	d023      	beq.n	800437a <HAL_DMA_Init+0x166>
 8004332:	f101 5180 	add.w	r1, r1, #268435456	@ 0x10000000
 8004336:	428b      	cmp	r3, r1
 8004338:	d01f      	beq.n	800437a <HAL_DMA_Init+0x166>
 800433a:	4283      	cmp	r3, r0
 800433c:	d01d      	beq.n	800437a <HAL_DMA_Init+0x166>
 800433e:	3180      	adds	r1, #128	@ 0x80
 8004340:	428b      	cmp	r3, r1
 8004342:	d01a      	beq.n	800437a <HAL_DMA_Init+0x166>
 8004344:	f101 4170 	add.w	r1, r1, #4026531840	@ 0xf0000000
 8004348:	3180      	adds	r1, #128	@ 0x80
 800434a:	428b      	cmp	r3, r1
 800434c:	d015      	beq.n	800437a <HAL_DMA_Init+0x166>
 800434e:	f101 5180 	add.w	r1, r1, #268435456	@ 0x10000000
 8004352:	428b      	cmp	r3, r1
 8004354:	d011      	beq.n	800437a <HAL_DMA_Init+0x166>
 8004356:	f101 4170 	add.w	r1, r1, #4026531840	@ 0xf0000000
 800435a:	3180      	adds	r1, #128	@ 0x80
 800435c:	428b      	cmp	r3, r1
 800435e:	d00c      	beq.n	800437a <HAL_DMA_Init+0x166>
 8004360:	f101 5180 	add.w	r1, r1, #268435456	@ 0x10000000
 8004364:	428b      	cmp	r3, r1
 8004366:	d008      	beq.n	800437a <HAL_DMA_Init+0x166>
 8004368:	f101 4170 	add.w	r1, r1, #4026531840	@ 0xf0000000
 800436c:	3180      	adds	r1, #128	@ 0x80
 800436e:	428b      	cmp	r3, r1
 8004370:	d003      	beq.n	800437a <HAL_DMA_Init+0x166>
 8004372:	f101 5180 	add.w	r1, r1, #268435456	@ 0x10000000
 8004376:	428b      	cmp	r3, r1
 8004378:	d10d      	bne.n	8004396 <HAL_DMA_Init+0x182>
  {
    tmpreg |= (hdma->Init.TransferAllocatedPort                                             |
               (((hdma->Init.DestBurstLength - 1U) << DMA_CTR1_DBL_1_Pos) & DMA_CTR1_DBL_1) |
 800437a:	6aa1      	ldr	r1, [r4, #40]	@ 0x28
 800437c:	3901      	subs	r1, #1
 800437e:	0509      	lsls	r1, r1, #20
 8004380:	f001 717c 	and.w	r1, r1, #66060288	@ 0x3f00000
 8004384:	4311      	orrs	r1, r2
 8004386:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
 8004388:	4311      	orrs	r1, r2
               (((hdma->Init.SrcBurstLength - 1U) << DMA_CTR1_SBL_1_Pos) & DMA_CTR1_SBL_1));
 800438a:	6a62      	ldr	r2, [r4, #36]	@ 0x24
 800438c:	3a01      	subs	r2, #1
 800438e:	0112      	lsls	r2, r2, #4
 8004390:	f402 727c 	and.w	r2, r2, #1008	@ 0x3f0
    tmpreg |= (hdma->Init.TransferAllocatedPort                                             |
 8004394:	430a      	orrs	r2, r1
  }

  /* Write DMA Channel Transfer Register 1 (CTR1) */
  MODIFY_REG(hdma->Instance->CTR1, ~(DMA_CTR1_SSEC | DMA_CTR1_DSEC), tmpreg);
 8004396:	6c19      	ldr	r1, [r3, #64]	@ 0x40
 8004398:	f001 2180 	and.w	r1, r1, #2147516416	@ 0x80008000
 800439c:	430a      	orrs	r2, r1
 800439e:	641a      	str	r2, [r3, #64]	@ 0x40

  /* Prepare DMA Channel Transfer Register 2 (CTR2) value *************************************************************/
  tmpreg = hdma->Init.BlkHWRequest | (hdma->Init.Request & DMA_CTR2_REQSEL) | hdma->Init.TransferEventMode;
 80043a0:	68a1      	ldr	r1, [r4, #8]
 80043a2:	6b22      	ldr	r2, [r4, #48]	@ 0x30
 80043a4:	4311      	orrs	r1, r2
 80043a6:	6862      	ldr	r2, [r4, #4]
 80043a8:	f002 027f 	and.w	r2, r2, #127	@ 0x7f
 80043ac:	4311      	orrs	r1, r2

  /* Memory to Peripheral Transfer */
  if ((hdma->Init.Direction) == DMA_MEMORY_TO_PERIPH)
 80043ae:	68e2      	ldr	r2, [r4, #12]
 80043b0:	f5b2 6f80 	cmp.w	r2, #1024	@ 0x400
 80043b4:	f040 80da 	bne.w	800456c <HAL_DMA_Init+0x358>
  {
    if (IS_GPDMA_INSTANCE(hdma->Instance) != 0U)
 80043b8:	42ab      	cmp	r3, r5
 80043ba:	f000 8087 	beq.w	80044cc <HAL_DMA_Init+0x2b8>
 80043be:	4a57      	ldr	r2, [pc, #348]	@ (800451c <HAL_DMA_Init+0x308>)
 80043c0:	4293      	cmp	r3, r2
 80043c2:	f000 8083 	beq.w	80044cc <HAL_DMA_Init+0x2b8>
 80043c6:	f102 4270 	add.w	r2, r2, #4026531840	@ 0xf0000000
 80043ca:	3280      	adds	r2, #128	@ 0x80
 80043cc:	4293      	cmp	r3, r2
 80043ce:	d07d      	beq.n	80044cc <HAL_DMA_Init+0x2b8>
 80043d0:	f102 5280 	add.w	r2, r2, #268435456	@ 0x10000000
 80043d4:	4293      	cmp	r3, r2
 80043d6:	d079      	beq.n	80044cc <HAL_DMA_Init+0x2b8>
 80043d8:	f102 4270 	add.w	r2, r2, #4026531840	@ 0xf0000000
 80043dc:	3280      	adds	r2, #128	@ 0x80
 80043de:	4293      	cmp	r3, r2
 80043e0:	d074      	beq.n	80044cc <HAL_DMA_Init+0x2b8>
 80043e2:	f102 5280 	add.w	r2, r2, #268435456	@ 0x10000000
 80043e6:	4293      	cmp	r3, r2
 80043e8:	d070      	beq.n	80044cc <HAL_DMA_Init+0x2b8>
 80043ea:	f102 4270 	add.w	r2, r2, #4026531840	@ 0xf0000000
 80043ee:	3280      	adds	r2, #128	@ 0x80
 80043f0:	4293      	cmp	r3, r2
 80043f2:	d06b      	beq.n	80044cc <HAL_DMA_Init+0x2b8>
 80043f4:	f102 5280 	add.w	r2, r2, #268435456	@ 0x10000000
 80043f8:	4293      	cmp	r3, r2
 80043fa:	d067      	beq.n	80044cc <HAL_DMA_Init+0x2b8>
 80043fc:	f102 4270 	add.w	r2, r2, #4026531840	@ 0xf0000000
 8004400:	3280      	adds	r2, #128	@ 0x80
 8004402:	4293      	cmp	r3, r2
 8004404:	d062      	beq.n	80044cc <HAL_DMA_Init+0x2b8>
 8004406:	f102 5280 	add.w	r2, r2, #268435456	@ 0x10000000
 800440a:	4293      	cmp	r3, r2
 800440c:	d05e      	beq.n	80044cc <HAL_DMA_Init+0x2b8>
 800440e:	f102 4270 	add.w	r2, r2, #4026531840	@ 0xf0000000
 8004412:	3280      	adds	r2, #128	@ 0x80
 8004414:	4293      	cmp	r3, r2
 8004416:	d059      	beq.n	80044cc <HAL_DMA_Init+0x2b8>
 8004418:	f102 5280 	add.w	r2, r2, #268435456	@ 0x10000000
 800441c:	4293      	cmp	r3, r2
 800441e:	d055      	beq.n	80044cc <HAL_DMA_Init+0x2b8>
 8004420:	f102 4270 	add.w	r2, r2, #4026531840	@ 0xf0000000
 8004424:	3280      	adds	r2, #128	@ 0x80
 8004426:	4293      	cmp	r3, r2
 8004428:	d050      	beq.n	80044cc <HAL_DMA_Init+0x2b8>
 800442a:	f102 5280 	add.w	r2, r2, #268435456	@ 0x10000000
 800442e:	4293      	cmp	r3, r2
 8004430:	d04c      	beq.n	80044cc <HAL_DMA_Init+0x2b8>
 8004432:	f102 4270 	add.w	r2, r2, #4026531840	@ 0xf0000000
 8004436:	3280      	adds	r2, #128	@ 0x80
 8004438:	4293      	cmp	r3, r2
 800443a:	d047      	beq.n	80044cc <HAL_DMA_Init+0x2b8>
 800443c:	f102 5280 	add.w	r2, r2, #268435456	@ 0x10000000
 8004440:	4293      	cmp	r3, r2
 8004442:	d043      	beq.n	80044cc <HAL_DMA_Init+0x2b8>
 8004444:	f102 4270 	add.w	r2, r2, #4026531840	@ 0xf0000000
 8004448:	3280      	adds	r2, #128	@ 0x80
 800444a:	4293      	cmp	r3, r2
 800444c:	d03e      	beq.n	80044cc <HAL_DMA_Init+0x2b8>
 800444e:	f102 5280 	add.w	r2, r2, #268435456	@ 0x10000000
 8004452:	4293      	cmp	r3, r2
 8004454:	d03a      	beq.n	80044cc <HAL_DMA_Init+0x2b8>
 8004456:	f102 4270 	add.w	r2, r2, #4026531840	@ 0xf0000000
 800445a:	3280      	adds	r2, #128	@ 0x80
 800445c:	4293      	cmp	r3, r2
 800445e:	d035      	beq.n	80044cc <HAL_DMA_Init+0x2b8>
 8004460:	f102 5280 	add.w	r2, r2, #268435456	@ 0x10000000
 8004464:	4293      	cmp	r3, r2
 8004466:	d031      	beq.n	80044cc <HAL_DMA_Init+0x2b8>
 8004468:	f102 4270 	add.w	r2, r2, #4026531840	@ 0xf0000000
 800446c:	3280      	adds	r2, #128	@ 0x80
 800446e:	4293      	cmp	r3, r2
 8004470:	d02c      	beq.n	80044cc <HAL_DMA_Init+0x2b8>
 8004472:	f102 5280 	add.w	r2, r2, #268435456	@ 0x10000000
 8004476:	4293      	cmp	r3, r2
 8004478:	d028      	beq.n	80044cc <HAL_DMA_Init+0x2b8>
 800447a:	f102 4270 	add.w	r2, r2, #4026531840	@ 0xf0000000
 800447e:	3280      	adds	r2, #128	@ 0x80
 8004480:	4293      	cmp	r3, r2
 8004482:	d023      	beq.n	80044cc <HAL_DMA_Init+0x2b8>
 8004484:	f102 5280 	add.w	r2, r2, #268435456	@ 0x10000000
 8004488:	4293      	cmp	r3, r2
 800448a:	d01f      	beq.n	80044cc <HAL_DMA_Init+0x2b8>
 800448c:	4283      	cmp	r3, r0
 800448e:	d01d      	beq.n	80044cc <HAL_DMA_Init+0x2b8>
 8004490:	3280      	adds	r2, #128	@ 0x80
 8004492:	4293      	cmp	r3, r2
 8004494:	d01a      	beq.n	80044cc <HAL_DMA_Init+0x2b8>
 8004496:	f102 4270 	add.w	r2, r2, #4026531840	@ 0xf0000000
 800449a:	3280      	adds	r2, #128	@ 0x80
 800449c:	4293      	cmp	r3, r2
 800449e:	d015      	beq.n	80044cc <HAL_DMA_Init+0x2b8>
 80044a0:	f102 5280 	add.w	r2, r2, #268435456	@ 0x10000000
 80044a4:	4293      	cmp	r3, r2
 80044a6:	d011      	beq.n	80044cc <HAL_DMA_Init+0x2b8>
 80044a8:	f102 4270 	add.w	r2, r2, #4026531840	@ 0xf0000000
 80044ac:	3280      	adds	r2, #128	@ 0x80
 80044ae:	4293      	cmp	r3, r2
 80044b0:	d00c      	beq.n	80044cc <HAL_DMA_Init+0x2b8>
 80044b2:	f102 5280 	add.w	r2, r2, #268435456	@ 0x10000000
 80044b6:	4293      	cmp	r3, r2
 80044b8:	d008      	beq.n	80044cc <HAL_DMA_Init+0x2b8>
 80044ba:	f102 4270 	add.w	r2, r2, #4026531840	@ 0xf0000000
 80044be:	3280      	adds	r2, #128	@ 0x80
 80044c0:	4293      	cmp	r3, r2
 80044c2:	d003      	beq.n	80044cc <HAL_DMA_Init+0x2b8>
 80044c4:	f102 5280 	add.w	r2, r2, #268435456	@ 0x10000000
 80044c8:	4293      	cmp	r3, r2
 80044ca:	d101      	bne.n	80044d0 <HAL_DMA_Init+0x2bc>
    {
      tmpreg |= DMA_CTR2_DREQ;
 80044cc:	f441 6180 	orr.w	r1, r1, #1024	@ 0x400
  {
    /* Nothing to do */
  }

  /* Write DMA Channel Transfer Register 2 (CTR2) */
  MODIFY_REG(hdma->Instance->CTR2, (DMA_CTR2_TCEM  | DMA_CTR2_TRIGPOL | DMA_CTR2_TRIGSEL | DMA_CTR2_TRIGM |
 80044d0:	6c5d      	ldr	r5, [r3, #68]	@ 0x44
 80044d2:	4a13      	ldr	r2, [pc, #76]	@ (8004520 <HAL_DMA_Init+0x30c>)

  /* Write DMA Channel Block Register 1 (CBR1) ************************************************************************/
  WRITE_REG(hdma->Instance->CBR1, 0U);

  /* If 2D Addressing is supported by current channel */
  if (IS_DMA_2D_ADDRESSING_INSTANCE(hdma->Instance) != 0U)
 80044d4:	4283      	cmp	r3, r0
  MODIFY_REG(hdma->Instance->CTR2, (DMA_CTR2_TCEM  | DMA_CTR2_TRIGPOL | DMA_CTR2_TRIGSEL | DMA_CTR2_TRIGM |
 80044d6:	ea02 0205 	and.w	r2, r2, r5
 80044da:	ea42 0201 	orr.w	r2, r2, r1
 80044de:	645a      	str	r2, [r3, #68]	@ 0x44
  WRITE_REG(hdma->Instance->CBR1, 0U);
 80044e0:	f04f 0200 	mov.w	r2, #0
 80044e4:	649a      	str	r2, [r3, #72]	@ 0x48
  if (IS_DMA_2D_ADDRESSING_INSTANCE(hdma->Instance) != 0U)
 80044e6:	d028      	beq.n	800453a <HAL_DMA_Init+0x326>
 80044e8:	4a0e      	ldr	r2, [pc, #56]	@ (8004524 <HAL_DMA_Init+0x310>)
 80044ea:	4293      	cmp	r3, r2
 80044ec:	d025      	beq.n	800453a <HAL_DMA_Init+0x326>
 80044ee:	f102 4270 	add.w	r2, r2, #4026531840	@ 0xf0000000
 80044f2:	3280      	adds	r2, #128	@ 0x80
 80044f4:	4293      	cmp	r3, r2
 80044f6:	d020      	beq.n	800453a <HAL_DMA_Init+0x326>
 80044f8:	f102 5280 	add.w	r2, r2, #268435456	@ 0x10000000
 80044fc:	4293      	cmp	r3, r2
 80044fe:	d01c      	beq.n	800453a <HAL_DMA_Init+0x326>
 8004500:	f102 4270 	add.w	r2, r2, #4026531840	@ 0xf0000000
 8004504:	3280      	adds	r2, #128	@ 0x80
 8004506:	4293      	cmp	r3, r2
 8004508:	d017      	beq.n	800453a <HAL_DMA_Init+0x326>
 800450a:	f102 5280 	add.w	r2, r2, #268435456	@ 0x10000000
 800450e:	4293      	cmp	r3, r2
 8004510:	d013      	beq.n	800453a <HAL_DMA_Init+0x326>
 8004512:	e009      	b.n	8004528 <HAL_DMA_Init+0x314>
 8004514:	40020050 	.word	0x40020050
 8004518:	40020650 	.word	0x40020650
 800451c:	50020050 	.word	0x50020050
 8004520:	3c803180 	.word	0x3c803180
 8004524:	50020650 	.word	0x50020650
 8004528:	f102 4270 	add.w	r2, r2, #4026531840	@ 0xf0000000
 800452c:	3280      	adds	r2, #128	@ 0x80
 800452e:	4293      	cmp	r3, r2
 8004530:	d003      	beq.n	800453a <HAL_DMA_Init+0x326>
 8004532:	f102 5280 	add.w	r2, r2, #268435456	@ 0x10000000
 8004536:	4293      	cmp	r3, r2
 8004538:	d102      	bne.n	8004540 <HAL_DMA_Init+0x32c>
  {
    /* Write DMA Channel Transfer Register 3 (CTR3) *******************************************************************/
    WRITE_REG(hdma->Instance->CTR3, 0U);
 800453a:	2200      	movs	r2, #0
 800453c:	655a      	str	r2, [r3, #84]	@ 0x54

    /* Write DMA Channel Block Register 2 (CBR2) **********************************************************************/
    WRITE_REG(hdma->Instance->CBR2, 0U);
 800453e:	659a      	str	r2, [r3, #88]	@ 0x58
  }

  /* Write DMA Channel linked-list address register (CLLR) ************************************************************/
  WRITE_REG(hdma->Instance->CLLR, 0U);
 8004540:	2000      	movs	r0, #0
 8004542:	67d8      	str	r0, [r3, #124]	@ 0x7c
  hdma->Mode = hdma->Init.Mode;
 8004544:	6b63      	ldr	r3, [r4, #52]	@ 0x34
  hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 8004546:	65a0      	str	r0, [r4, #88]	@ 0x58
  hdma->Mode = hdma->Init.Mode;
 8004548:	6523      	str	r3, [r4, #80]	@ 0x50
  hdma->State = HAL_DMA_STATE_READY;
 800454a:	2301      	movs	r3, #1
 800454c:	f884 3054 	strb.w	r3, [r4, #84]	@ 0x54
  return HAL_OK;
 8004550:	e00b      	b.n	800456a <HAL_DMA_Init+0x356>
    if ((HAL_GetTick() - tickstart) > HAL_TIMEOUT_DMA_ABORT)
 8004552:	f7ff fd07 	bl	8003f64 <HAL_GetTick>
 8004556:	1b40      	subs	r0, r0, r5
 8004558:	2805      	cmp	r0, #5
 800455a:	f67f ae6e 	bls.w	800423a <HAL_DMA_Init+0x26>
      hdma->ErrorCode = HAL_DMA_ERROR_TIMEOUT;
 800455e:	2310      	movs	r3, #16
 8004560:	65a3      	str	r3, [r4, #88]	@ 0x58
      hdma->State = HAL_DMA_STATE_ERROR;
 8004562:	2303      	movs	r3, #3
 8004564:	f884 3054 	strb.w	r3, [r4, #84]	@ 0x54
    return HAL_ERROR;
 8004568:	2001      	movs	r0, #1
}
 800456a:	bd38      	pop	{r3, r4, r5, pc}
  else if ((hdma->Init.Direction) == DMA_MEMORY_TO_MEMORY)
 800456c:	f5b2 7f00 	cmp.w	r2, #512	@ 0x200
    tmpreg |= DMA_CTR2_SWREQ;
 8004570:	bf08      	it	eq
 8004572:	f441 7100 	orreq.w	r1, r1, #512	@ 0x200
 8004576:	e7ab      	b.n	80044d0 <HAL_DMA_Init+0x2bc>

08004578 <HAL_DMA_Start_IT>:
{
 8004578:	b530      	push	{r4, r5, lr}
  if (hdma == NULL)
 800457a:	2800      	cmp	r0, #0
 800457c:	d036      	beq.n	80045ec <HAL_DMA_Start_IT+0x74>
  __HAL_LOCK(hdma);
 800457e:	f890 404c 	ldrb.w	r4, [r0, #76]	@ 0x4c
 8004582:	2c01      	cmp	r4, #1
 8004584:	d034      	beq.n	80045f0 <HAL_DMA_Start_IT+0x78>
 8004586:	2401      	movs	r4, #1
 8004588:	f880 404c 	strb.w	r4, [r0, #76]	@ 0x4c
  if (hdma->State == HAL_DMA_STATE_READY)
 800458c:	f890 4054 	ldrb.w	r4, [r0, #84]	@ 0x54
 8004590:	2c01      	cmp	r4, #1
 8004592:	f04f 0400 	mov.w	r4, #0
 8004596:	d125      	bne.n	80045e4 <HAL_DMA_Start_IT+0x6c>
    hdma->State = HAL_DMA_STATE_BUSY;
 8004598:	2502      	movs	r5, #2
 800459a:	f880 5054 	strb.w	r5, [r0, #84]	@ 0x54
    hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 800459e:	6584      	str	r4, [r0, #88]	@ 0x58
  MODIFY_REG(hdma->Instance->CBR1, DMA_CBR1_BNDT, (SrcDataSize & DMA_CBR1_BNDT));
 80045a0:	6804      	ldr	r4, [r0, #0]
 80045a2:	b29b      	uxth	r3, r3
 80045a4:	6ca5      	ldr	r5, [r4, #72]	@ 0x48
 80045a6:	0c2d      	lsrs	r5, r5, #16
 80045a8:	042d      	lsls	r5, r5, #16
 80045aa:	431d      	orrs	r5, r3
  __HAL_DMA_CLEAR_FLAG(hdma, DMA_FLAG_TC | DMA_FLAG_HT | DMA_FLAG_DTE | DMA_FLAG_ULE | DMA_FLAG_USE | DMA_FLAG_SUSP |
 80045ac:	f44f 43fe 	mov.w	r3, #32512	@ 0x7f00
  MODIFY_REG(hdma->Instance->CBR1, DMA_CBR1_BNDT, (SrcDataSize & DMA_CBR1_BNDT));
 80045b0:	64a5      	str	r5, [r4, #72]	@ 0x48
  __HAL_DMA_CLEAR_FLAG(hdma, DMA_FLAG_TC | DMA_FLAG_HT | DMA_FLAG_DTE | DMA_FLAG_ULE | DMA_FLAG_USE | DMA_FLAG_SUSP |
 80045b2:	60e3      	str	r3, [r4, #12]
  hdma->Instance->CSAR = SrcAddress;
 80045b4:	64e1      	str	r1, [r4, #76]	@ 0x4c
  hdma->Instance->CDAR = DstAddress;
 80045b6:	6522      	str	r2, [r4, #80]	@ 0x50
    __HAL_DMA_ENABLE_IT(hdma, (DMA_IT_TC | DMA_IT_DTE | DMA_IT_ULE | DMA_IT_USE | DMA_IT_TO));
 80045b8:	6963      	ldr	r3, [r4, #20]
 80045ba:	f443 43ba 	orr.w	r3, r3, #23808	@ 0x5d00
 80045be:	6163      	str	r3, [r4, #20]
    if (hdma->XferHalfCpltCallback != NULL)
 80045c0:	6e43      	ldr	r3, [r0, #100]	@ 0x64
 80045c2:	b11b      	cbz	r3, 80045cc <HAL_DMA_Start_IT+0x54>
      __HAL_DMA_ENABLE_IT(hdma, DMA_IT_HT);
 80045c4:	6963      	ldr	r3, [r4, #20]
 80045c6:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 80045ca:	6163      	str	r3, [r4, #20]
    if (hdma->XferSuspendCallback != NULL)
 80045cc:	6f03      	ldr	r3, [r0, #112]	@ 0x70
 80045ce:	b11b      	cbz	r3, 80045d8 <HAL_DMA_Start_IT+0x60>
      __HAL_DMA_ENABLE_IT(hdma, DMA_IT_SUSP);
 80045d0:	6963      	ldr	r3, [r4, #20]
 80045d2:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
 80045d6:	6163      	str	r3, [r4, #20]
  return HAL_OK;
 80045d8:	2000      	movs	r0, #0
    __HAL_DMA_ENABLE(hdma);
 80045da:	6963      	ldr	r3, [r4, #20]
 80045dc:	f043 0301 	orr.w	r3, r3, #1
 80045e0:	6163      	str	r3, [r4, #20]
}
 80045e2:	bd30      	pop	{r4, r5, pc}
    hdma->ErrorCode = HAL_DMA_ERROR_BUSY;
 80045e4:	2340      	movs	r3, #64	@ 0x40
    __HAL_UNLOCK(hdma);
 80045e6:	f880 404c 	strb.w	r4, [r0, #76]	@ 0x4c
    hdma->ErrorCode = HAL_DMA_ERROR_BUSY;
 80045ea:	6583      	str	r3, [r0, #88]	@ 0x58
    return HAL_ERROR;
 80045ec:	2001      	movs	r0, #1
 80045ee:	e7f8      	b.n	80045e2 <HAL_DMA_Start_IT+0x6a>
  __HAL_LOCK(hdma);
 80045f0:	2002      	movs	r0, #2
 80045f2:	e7f6      	b.n	80045e2 <HAL_DMA_Start_IT+0x6a>

080045f4 <HAL_DMA_Abort>:
{
 80045f4:	b538      	push	{r3, r4, r5, lr}
 80045f6:	4604      	mov	r4, r0
  uint32_t tickstart =  HAL_GetTick();
 80045f8:	f7ff fcb4 	bl	8003f64 <HAL_GetTick>
 80045fc:	4605      	mov	r5, r0
  if (hdma == NULL)
 80045fe:	b144      	cbz	r4, 8004612 <HAL_DMA_Abort+0x1e>
  if (hdma->State != HAL_DMA_STATE_BUSY)
 8004600:	f894 3054 	ldrb.w	r3, [r4, #84]	@ 0x54
 8004604:	2b02      	cmp	r3, #2
 8004606:	d006      	beq.n	8004616 <HAL_DMA_Abort+0x22>
    hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 8004608:	2320      	movs	r3, #32
 800460a:	65a3      	str	r3, [r4, #88]	@ 0x58
    __HAL_UNLOCK(hdma);
 800460c:	2300      	movs	r3, #0
 800460e:	f884 304c 	strb.w	r3, [r4, #76]	@ 0x4c
    return HAL_ERROR;
 8004612:	2001      	movs	r0, #1
}
 8004614:	bd38      	pop	{r3, r4, r5, pc}
    hdma->Instance->CCR |= DMA_CCR_SUSP;
 8004616:	6822      	ldr	r2, [r4, #0]
 8004618:	6953      	ldr	r3, [r2, #20]
 800461a:	f043 0304 	orr.w	r3, r3, #4
 800461e:	6153      	str	r3, [r2, #20]
    hdma->State = HAL_DMA_STATE_SUSPEND;
 8004620:	2305      	movs	r3, #5
 8004622:	f884 3054 	strb.w	r3, [r4, #84]	@ 0x54
    while ((hdma->Instance->CSR & DMA_CSR_SUSPF) == 0U)
 8004626:	6823      	ldr	r3, [r4, #0]
 8004628:	691a      	ldr	r2, [r3, #16]
 800462a:	0490      	lsls	r0, r2, #18
 800462c:	d519      	bpl.n	8004662 <HAL_DMA_Abort+0x6e>
    hdma->Instance->CCR |= DMA_CCR_RESET;
 800462e:	695a      	ldr	r2, [r3, #20]
    if ((hdma->Mode & DMA_LINKEDLIST) == DMA_LINKEDLIST)
 8004630:	6d21      	ldr	r1, [r4, #80]	@ 0x50
    hdma->Instance->CCR |= DMA_CCR_RESET;
 8004632:	f042 0202 	orr.w	r2, r2, #2
 8004636:	615a      	str	r2, [r3, #20]
    hdma->State = HAL_DMA_STATE_ABORT;
 8004638:	2204      	movs	r2, #4
 800463a:	f884 2054 	strb.w	r2, [r4, #84]	@ 0x54
    __HAL_DMA_CLEAR_FLAG(hdma, (DMA_FLAG_TC | DMA_FLAG_HT | DMA_FLAG_DTE | DMA_FLAG_ULE | DMA_FLAG_USE | DMA_FLAG_SUSP |
 800463e:	f44f 42fe 	mov.w	r2, #32512	@ 0x7f00
 8004642:	60da      	str	r2, [r3, #12]
    hdma->State = HAL_DMA_STATE_READY;
 8004644:	2201      	movs	r2, #1
    if ((hdma->Mode & DMA_LINKEDLIST) == DMA_LINKEDLIST)
 8004646:	0609      	lsls	r1, r1, #24
      hdma->LinkedListQueue->State = HAL_DMA_QUEUE_STATE_READY;
 8004648:	bf48      	it	mi
 800464a:	6f61      	ldrmi	r1, [r4, #116]	@ 0x74
    hdma->State = HAL_DMA_STATE_READY;
 800464c:	f884 2054 	strb.w	r2, [r4, #84]	@ 0x54
    __HAL_UNLOCK(hdma);
 8004650:	f04f 0000 	mov.w	r0, #0
      hdma->LinkedListQueue->State = HAL_DMA_QUEUE_STATE_READY;
 8004654:	bf42      	ittt	mi
 8004656:	730a      	strbmi	r2, [r1, #12]
      hdma->Instance->CBR1 = 0U;
 8004658:	2200      	movmi	r2, #0
 800465a:	649a      	strmi	r2, [r3, #72]	@ 0x48
    __HAL_UNLOCK(hdma);
 800465c:	f884 004c 	strb.w	r0, [r4, #76]	@ 0x4c
  return HAL_OK;
 8004660:	e7d8      	b.n	8004614 <HAL_DMA_Abort+0x20>
      if ((HAL_GetTick() - tickstart) > HAL_TIMEOUT_DMA_ABORT)
 8004662:	f7ff fc7f 	bl	8003f64 <HAL_GetTick>
 8004666:	1b40      	subs	r0, r0, r5
 8004668:	2805      	cmp	r0, #5
 800466a:	d9dc      	bls.n	8004626 <HAL_DMA_Abort+0x32>
        hdma->ErrorCode |= HAL_DMA_ERROR_TIMEOUT;
 800466c:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 800466e:	f043 0310 	orr.w	r3, r3, #16
 8004672:	65a3      	str	r3, [r4, #88]	@ 0x58
        hdma->State = HAL_DMA_STATE_ERROR;
 8004674:	2303      	movs	r3, #3
 8004676:	f884 3054 	strb.w	r3, [r4, #84]	@ 0x54
        if ((hdma->Mode & DMA_LINKEDLIST) == DMA_LINKEDLIST)
 800467a:	6d23      	ldr	r3, [r4, #80]	@ 0x50
 800467c:	061d      	lsls	r5, r3, #24
 800467e:	d5c5      	bpl.n	800460c <HAL_DMA_Abort+0x18>
          hdma->LinkedListQueue->State = HAL_DMA_QUEUE_STATE_READY;
 8004680:	2201      	movs	r2, #1
 8004682:	6f63      	ldr	r3, [r4, #116]	@ 0x74
 8004684:	731a      	strb	r2, [r3, #12]
        __HAL_UNLOCK(hdma);
 8004686:	e7c1      	b.n	800460c <HAL_DMA_Abort+0x18>

08004688 <HAL_DMA_Abort_IT>:
  if (hdma == NULL)
 8004688:	b128      	cbz	r0, 8004696 <HAL_DMA_Abort_IT+0xe>
  if (hdma->State != HAL_DMA_STATE_BUSY)
 800468a:	f890 3054 	ldrb.w	r3, [r0, #84]	@ 0x54
 800468e:	2b02      	cmp	r3, #2
 8004690:	d003      	beq.n	800469a <HAL_DMA_Abort_IT+0x12>
    hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 8004692:	2320      	movs	r3, #32
 8004694:	6583      	str	r3, [r0, #88]	@ 0x58
    return HAL_ERROR;
 8004696:	2001      	movs	r0, #1
 8004698:	4770      	bx	lr
    hdma->State = HAL_DMA_STATE_ABORT;
 800469a:	2304      	movs	r3, #4
    hdma->Instance->CCR |= (DMA_CCR_SUSP | DMA_CCR_SUSPIE);
 800469c:	6802      	ldr	r2, [r0, #0]
    hdma->State = HAL_DMA_STATE_ABORT;
 800469e:	f880 3054 	strb.w	r3, [r0, #84]	@ 0x54
    hdma->Instance->CCR |= (DMA_CCR_SUSP | DMA_CCR_SUSPIE);
 80046a2:	6953      	ldr	r3, [r2, #20]
  return HAL_OK;
 80046a4:	2000      	movs	r0, #0
    hdma->Instance->CCR |= (DMA_CCR_SUSP | DMA_CCR_SUSPIE);
 80046a6:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
 80046aa:	f043 0304 	orr.w	r3, r3, #4
 80046ae:	6153      	str	r3, [r2, #20]
}
 80046b0:	4770      	bx	lr

080046b2 <HAL_DMA_IRQHandler>:
  uint32_t global_it_flag =  1UL << (GET_DMA_CHANNEL(hdma) & 0x1FU);
 80046b2:	2101      	movs	r1, #1
  const DMA_TypeDef *p_dma_instance = GET_DMA_INSTANCE(hdma);
 80046b4:	6803      	ldr	r3, [r0, #0]
{
 80046b6:	b510      	push	{r4, lr}
  const DMA_TypeDef *p_dma_instance = GET_DMA_INSTANCE(hdma);
 80046b8:	f423 627f 	bic.w	r2, r3, #4080	@ 0xff0
 80046bc:	f022 020f 	bic.w	r2, r2, #15
{
 80046c0:	4604      	mov	r4, r0
  uint32_t global_active_flag_ns = IS_DMA_GLOBAL_ACTIVE_FLAG_NS(p_dma_instance, global_it_flag);
 80046c2:	68d0      	ldr	r0, [r2, #12]
  uint32_t global_it_flag =  1UL << (GET_DMA_CHANNEL(hdma) & 0x1FU);
 80046c4:	f3c3 020b 	ubfx	r2, r3, #0, #12
 80046c8:	3a50      	subs	r2, #80	@ 0x50
 80046ca:	f3c2 12c4 	ubfx	r2, r2, #7, #5
 80046ce:	fa01 f202 	lsl.w	r2, r1, r2
  if (global_active_flag_ns == 0U)
 80046d2:	4202      	tst	r2, r0
 80046d4:	f000 80ab 	beq.w	800482e <HAL_DMA_IRQHandler+0x17c>
  if ((__HAL_DMA_GET_FLAG(hdma, DMA_FLAG_DTE) != 0U))
 80046d8:	691a      	ldr	r2, [r3, #16]
 80046da:	0550      	lsls	r0, r2, #21
 80046dc:	d508      	bpl.n	80046f0 <HAL_DMA_IRQHandler+0x3e>
    if (__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_DTE) != 0U)
 80046de:	695a      	ldr	r2, [r3, #20]
 80046e0:	0552      	lsls	r2, r2, #21
 80046e2:	d505      	bpl.n	80046f0 <HAL_DMA_IRQHandler+0x3e>
      __HAL_DMA_CLEAR_FLAG(hdma, DMA_FLAG_DTE);
 80046e4:	f44f 6280 	mov.w	r2, #1024	@ 0x400
 80046e8:	60da      	str	r2, [r3, #12]
      hdma->ErrorCode |= HAL_DMA_ERROR_DTE;
 80046ea:	6da2      	ldr	r2, [r4, #88]	@ 0x58
 80046ec:	430a      	orrs	r2, r1
 80046ee:	65a2      	str	r2, [r4, #88]	@ 0x58
  if ((__HAL_DMA_GET_FLAG(hdma, DMA_FLAG_ULE) != 0U))
 80046f0:	691a      	ldr	r2, [r3, #16]
 80046f2:	0510      	lsls	r0, r2, #20
 80046f4:	d509      	bpl.n	800470a <HAL_DMA_IRQHandler+0x58>
    if (__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_ULE) != 0U)
 80046f6:	695a      	ldr	r2, [r3, #20]
 80046f8:	0511      	lsls	r1, r2, #20
 80046fa:	d506      	bpl.n	800470a <HAL_DMA_IRQHandler+0x58>
      __HAL_DMA_CLEAR_FLAG(hdma, DMA_FLAG_ULE);
 80046fc:	f44f 6200 	mov.w	r2, #2048	@ 0x800
 8004700:	60da      	str	r2, [r3, #12]
      hdma->ErrorCode |= HAL_DMA_ERROR_ULE;
 8004702:	6da2      	ldr	r2, [r4, #88]	@ 0x58
 8004704:	f042 0202 	orr.w	r2, r2, #2
 8004708:	65a2      	str	r2, [r4, #88]	@ 0x58
  if ((__HAL_DMA_GET_FLAG(hdma, DMA_FLAG_USE) != 0U))
 800470a:	691a      	ldr	r2, [r3, #16]
 800470c:	04d2      	lsls	r2, r2, #19
 800470e:	d509      	bpl.n	8004724 <HAL_DMA_IRQHandler+0x72>
    if (__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_USE) != 0U)
 8004710:	695a      	ldr	r2, [r3, #20]
 8004712:	04d0      	lsls	r0, r2, #19
 8004714:	d506      	bpl.n	8004724 <HAL_DMA_IRQHandler+0x72>
      __HAL_DMA_CLEAR_FLAG(hdma, DMA_FLAG_USE);
 8004716:	f44f 5280 	mov.w	r2, #4096	@ 0x1000
 800471a:	60da      	str	r2, [r3, #12]
      hdma->ErrorCode |= HAL_DMA_ERROR_USE;
 800471c:	6da2      	ldr	r2, [r4, #88]	@ 0x58
 800471e:	f042 0204 	orr.w	r2, r2, #4
 8004722:	65a2      	str	r2, [r4, #88]	@ 0x58
  if ((__HAL_DMA_GET_FLAG(hdma, DMA_FLAG_TO) != 0U))
 8004724:	691a      	ldr	r2, [r3, #16]
 8004726:	0451      	lsls	r1, r2, #17
 8004728:	d509      	bpl.n	800473e <HAL_DMA_IRQHandler+0x8c>
    if (__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_TO) != 0U)
 800472a:	695a      	ldr	r2, [r3, #20]
 800472c:	0452      	lsls	r2, r2, #17
 800472e:	d506      	bpl.n	800473e <HAL_DMA_IRQHandler+0x8c>
      __HAL_DMA_CLEAR_FLAG(hdma, DMA_FLAG_TO);
 8004730:	f44f 4280 	mov.w	r2, #16384	@ 0x4000
 8004734:	60da      	str	r2, [r3, #12]
      hdma->ErrorCode |= HAL_DMA_ERROR_TO;
 8004736:	6da2      	ldr	r2, [r4, #88]	@ 0x58
 8004738:	f042 0208 	orr.w	r2, r2, #8
 800473c:	65a2      	str	r2, [r4, #88]	@ 0x58
  if ((__HAL_DMA_GET_FLAG(hdma, DMA_FLAG_HT) != 0U))
 800473e:	691a      	ldr	r2, [r3, #16]
 8004740:	0590      	lsls	r0, r2, #22
 8004742:	d509      	bpl.n	8004758 <HAL_DMA_IRQHandler+0xa6>
    if (__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_HT) != 0U)
 8004744:	695a      	ldr	r2, [r3, #20]
 8004746:	0591      	lsls	r1, r2, #22
 8004748:	d506      	bpl.n	8004758 <HAL_DMA_IRQHandler+0xa6>
      __HAL_DMA_CLEAR_FLAG(hdma, DMA_FLAG_HT);
 800474a:	f44f 7200 	mov.w	r2, #512	@ 0x200
 800474e:	60da      	str	r2, [r3, #12]
      if (hdma->XferHalfCpltCallback != NULL)
 8004750:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8004752:	b10b      	cbz	r3, 8004758 <HAL_DMA_IRQHandler+0xa6>
        hdma->XferHalfCpltCallback(hdma);
 8004754:	4620      	mov	r0, r4
 8004756:	4798      	blx	r3
  if ((__HAL_DMA_GET_FLAG(hdma, DMA_FLAG_SUSP) != 0U))
 8004758:	6823      	ldr	r3, [r4, #0]
 800475a:	691a      	ldr	r2, [r3, #16]
 800475c:	0492      	lsls	r2, r2, #18
 800475e:	d52e      	bpl.n	80047be <HAL_DMA_IRQHandler+0x10c>
    if (__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_SUSP) != 0U)
 8004760:	695a      	ldr	r2, [r3, #20]
 8004762:	0490      	lsls	r0, r2, #18
 8004764:	d52b      	bpl.n	80047be <HAL_DMA_IRQHandler+0x10c>
      __HAL_DMA_CLEAR_FLAG(hdma, DMA_FLAG_SUSP);
 8004766:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
 800476a:	60da      	str	r2, [r3, #12]
      if (hdma->State == HAL_DMA_STATE_ABORT)
 800476c:	f894 2054 	ldrb.w	r2, [r4, #84]	@ 0x54
 8004770:	2a04      	cmp	r2, #4
 8004772:	d11d      	bne.n	80047b0 <HAL_DMA_IRQHandler+0xfe>
        __HAL_DMA_DISABLE_IT(hdma, DMA_IT_SUSP);
 8004774:	695a      	ldr	r2, [r3, #20]
        if ((hdma->Mode & DMA_LINKEDLIST) == DMA_LINKEDLIST)
 8004776:	6d21      	ldr	r1, [r4, #80]	@ 0x50
        __HAL_DMA_DISABLE_IT(hdma, DMA_IT_SUSP);
 8004778:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
 800477c:	615a      	str	r2, [r3, #20]
        hdma->Instance->CCR |= DMA_CCR_RESET;
 800477e:	695a      	ldr	r2, [r3, #20]
        if ((hdma->Mode & DMA_LINKEDLIST) == DMA_LINKEDLIST)
 8004780:	0609      	lsls	r1, r1, #24
        hdma->Instance->CCR |= DMA_CCR_RESET;
 8004782:	f042 0202 	orr.w	r2, r2, #2
 8004786:	615a      	str	r2, [r3, #20]
        hdma->State = HAL_DMA_STATE_READY;
 8004788:	f04f 0201 	mov.w	r2, #1
          hdma->LinkedListQueue->State = HAL_DMA_QUEUE_STATE_READY;
 800478c:	bf48      	it	mi
 800478e:	6f61      	ldrmi	r1, [r4, #116]	@ 0x74
        hdma->State = HAL_DMA_STATE_READY;
 8004790:	f884 2054 	strb.w	r2, [r4, #84]	@ 0x54
          hdma->LinkedListQueue->State = HAL_DMA_QUEUE_STATE_READY;
 8004794:	bf42      	ittt	mi
 8004796:	730a      	strbmi	r2, [r1, #12]
          hdma->Instance->CBR1 = 0U;
 8004798:	2200      	movmi	r2, #0
 800479a:	649a      	strmi	r2, [r3, #72]	@ 0x48
        __HAL_UNLOCK(hdma);
 800479c:	2300      	movs	r3, #0
 800479e:	f884 304c 	strb.w	r3, [r4, #76]	@ 0x4c
        if (hdma->XferAbortCallback != NULL)
 80047a2:	6ee3      	ldr	r3, [r4, #108]	@ 0x6c
    if (hdma->XferErrorCallback != NULL)
 80047a4:	2b00      	cmp	r3, #0
 80047a6:	d042      	beq.n	800482e <HAL_DMA_IRQHandler+0x17c>
      hdma->XferErrorCallback(hdma);
 80047a8:	4620      	mov	r0, r4
}
 80047aa:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
      hdma->XferErrorCallback(hdma);
 80047ae:	4718      	bx	r3
        hdma->State = HAL_DMA_STATE_SUSPEND;
 80047b0:	2305      	movs	r3, #5
 80047b2:	f884 3054 	strb.w	r3, [r4, #84]	@ 0x54
        if (hdma->XferSuspendCallback != NULL)
 80047b6:	6f23      	ldr	r3, [r4, #112]	@ 0x70
 80047b8:	b10b      	cbz	r3, 80047be <HAL_DMA_IRQHandler+0x10c>
          hdma->XferSuspendCallback(hdma);
 80047ba:	4620      	mov	r0, r4
 80047bc:	4798      	blx	r3
  if ((__HAL_DMA_GET_FLAG(hdma, DMA_FLAG_TC) != 0U))
 80047be:	6823      	ldr	r3, [r4, #0]
 80047c0:	691a      	ldr	r2, [r3, #16]
 80047c2:	05d2      	lsls	r2, r2, #23
 80047c4:	d518      	bpl.n	80047f8 <HAL_DMA_IRQHandler+0x146>
    if (__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_TC) != 0U)
 80047c6:	695a      	ldr	r2, [r3, #20]
 80047c8:	05d0      	lsls	r0, r2, #23
 80047ca:	d515      	bpl.n	80047f8 <HAL_DMA_IRQHandler+0x146>
      if ((hdma->Mode & DMA_LINKEDLIST) == DMA_LINKEDLIST)
 80047cc:	6d22      	ldr	r2, [r4, #80]	@ 0x50
 80047ce:	0611      	lsls	r1, r2, #24
 80047d0:	d526      	bpl.n	8004820 <HAL_DMA_IRQHandler+0x16e>
        if (hdma->Instance->CLLR == 0U)
 80047d2:	6fda      	ldr	r2, [r3, #124]	@ 0x7c
 80047d4:	b932      	cbnz	r2, 80047e4 <HAL_DMA_IRQHandler+0x132>
          if (hdma->Instance->CBR1 == 0U)
 80047d6:	6c9a      	ldr	r2, [r3, #72]	@ 0x48
 80047d8:	b922      	cbnz	r2, 80047e4 <HAL_DMA_IRQHandler+0x132>
            hdma->State = HAL_DMA_STATE_READY;
 80047da:	2201      	movs	r2, #1
            hdma->LinkedListQueue->State = HAL_DMA_QUEUE_STATE_READY;
 80047dc:	6f61      	ldr	r1, [r4, #116]	@ 0x74
            hdma->State = HAL_DMA_STATE_READY;
 80047de:	f884 2054 	strb.w	r2, [r4, #84]	@ 0x54
            hdma->LinkedListQueue->State = HAL_DMA_QUEUE_STATE_READY;
 80047e2:	730a      	strb	r2, [r1, #12]
      __HAL_DMA_CLEAR_FLAG(hdma, (DMA_FLAG_TC | DMA_FLAG_HT));
 80047e4:	f44f 7240 	mov.w	r2, #768	@ 0x300
 80047e8:	60da      	str	r2, [r3, #12]
      __HAL_UNLOCK(hdma);
 80047ea:	2300      	movs	r3, #0
 80047ec:	f884 304c 	strb.w	r3, [r4, #76]	@ 0x4c
      if (hdma->XferCpltCallback != NULL)
 80047f0:	6e23      	ldr	r3, [r4, #96]	@ 0x60
 80047f2:	b10b      	cbz	r3, 80047f8 <HAL_DMA_IRQHandler+0x146>
        hdma->XferCpltCallback(hdma);
 80047f4:	4620      	mov	r0, r4
 80047f6:	4798      	blx	r3
  if (hdma->ErrorCode != HAL_DMA_ERROR_NONE)
 80047f8:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 80047fa:	b1c3      	cbz	r3, 800482e <HAL_DMA_IRQHandler+0x17c>
    hdma->Instance->CCR |= DMA_CCR_RESET;
 80047fc:	6822      	ldr	r2, [r4, #0]
 80047fe:	6953      	ldr	r3, [r2, #20]
 8004800:	f043 0302 	orr.w	r3, r3, #2
 8004804:	6153      	str	r3, [r2, #20]
    hdma->State = HAL_DMA_STATE_READY;
 8004806:	2301      	movs	r3, #1
    if ((hdma->Mode & DMA_LINKEDLIST) == DMA_LINKEDLIST)
 8004808:	6d22      	ldr	r2, [r4, #80]	@ 0x50
    hdma->State = HAL_DMA_STATE_READY;
 800480a:	f884 3054 	strb.w	r3, [r4, #84]	@ 0x54
    if ((hdma->Mode & DMA_LINKEDLIST) == DMA_LINKEDLIST)
 800480e:	0612      	lsls	r2, r2, #24
      hdma->LinkedListQueue->State = HAL_DMA_QUEUE_STATE_READY;
 8004810:	bf44      	itt	mi
 8004812:	6f62      	ldrmi	r2, [r4, #116]	@ 0x74
 8004814:	7313      	strbmi	r3, [r2, #12]
    __HAL_UNLOCK(hdma);
 8004816:	2300      	movs	r3, #0
 8004818:	f884 304c 	strb.w	r3, [r4, #76]	@ 0x4c
    if (hdma->XferErrorCallback != NULL)
 800481c:	6ea3      	ldr	r3, [r4, #104]	@ 0x68
 800481e:	e7c1      	b.n	80047a4 <HAL_DMA_IRQHandler+0xf2>
        if (hdma->Instance->CBR1 == 0U)
 8004820:	6c9a      	ldr	r2, [r3, #72]	@ 0x48
 8004822:	2a00      	cmp	r2, #0
 8004824:	d1de      	bne.n	80047e4 <HAL_DMA_IRQHandler+0x132>
          hdma->State = HAL_DMA_STATE_READY;
 8004826:	2201      	movs	r2, #1
 8004828:	f884 2054 	strb.w	r2, [r4, #84]	@ 0x54
 800482c:	e7da      	b.n	80047e4 <HAL_DMA_IRQHandler+0x132>
}
 800482e:	bd10      	pop	{r4, pc}

08004830 <HAL_DMA_GetError>:
  return hdma->ErrorCode;
 8004830:	6d80      	ldr	r0, [r0, #88]	@ 0x58
}
 8004832:	4770      	bx	lr

08004834 <HAL_DMA_ConfigChannelAttributes>:
  if (hdma == NULL)
 8004834:	b1d0      	cbz	r0, 800486c <HAL_DMA_ConfigChannelAttributes+0x38>
  if ((ChannelAttributes & DMA_CHANNEL_ATTR_PRIV_MASK) == DMA_CHANNEL_ATTR_PRIV_MASK)
 8004836:	06cb      	lsls	r3, r1, #27
 8004838:	d401      	bmi.n	800483e <HAL_DMA_ConfigChannelAttributes+0xa>
  return HAL_OK;
 800483a:	2000      	movs	r0, #0
 800483c:	4770      	bx	lr
  p_dma_instance = GET_DMA_INSTANCE(hdma);
 800483e:	6803      	ldr	r3, [r0, #0]
  channel_idx = 1UL << (GET_DMA_CHANNEL(hdma) & 0x1FU);
 8004840:	2001      	movs	r0, #1
  p_dma_instance = GET_DMA_INSTANCE(hdma);
 8004842:	f423 627f 	bic.w	r2, r3, #4080	@ 0xff0
  channel_idx = 1UL << (GET_DMA_CHANNEL(hdma) & 0x1FU);
 8004846:	f3c3 030b 	ubfx	r3, r3, #0, #12
  p_dma_instance = GET_DMA_INSTANCE(hdma);
 800484a:	f022 020f 	bic.w	r2, r2, #15
    if ((ChannelAttributes & DMA_CHANNEL_PRIV) == DMA_CHANNEL_PRIV)
 800484e:	f001 0111 	and.w	r1, r1, #17
  channel_idx = 1UL << (GET_DMA_CHANNEL(hdma) & 0x1FU);
 8004852:	3b50      	subs	r3, #80	@ 0x50
    if ((ChannelAttributes & DMA_CHANNEL_PRIV) == DMA_CHANNEL_PRIV)
 8004854:	2911      	cmp	r1, #17
  channel_idx = 1UL << (GET_DMA_CHANNEL(hdma) & 0x1FU);
 8004856:	f3c3 13c4 	ubfx	r3, r3, #7, #5
      p_dma_instance->PRIVCFGR |= channel_idx;
 800485a:	6851      	ldr	r1, [r2, #4]
  channel_idx = 1UL << (GET_DMA_CHANNEL(hdma) & 0x1FU);
 800485c:	fa00 f303 	lsl.w	r3, r0, r3
      p_dma_instance->PRIVCFGR |= channel_idx;
 8004860:	bf0c      	ite	eq
 8004862:	430b      	orreq	r3, r1
      p_dma_instance->PRIVCFGR &= (~channel_idx);
 8004864:	ea21 0303 	bicne.w	r3, r1, r3
 8004868:	6053      	str	r3, [r2, #4]
 800486a:	e7e6      	b.n	800483a <HAL_DMA_ConfigChannelAttributes+0x6>
    return HAL_ERROR;
 800486c:	2001      	movs	r0, #1
}
 800486e:	4770      	bx	lr

08004870 <HAL_DMA2D_Init>:
  * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_Init(DMA2D_HandleTypeDef *hdma2d)
{
 8004870:	b510      	push	{r4, lr}
  /* Check the DMA2D peripheral state */
  if (hdma2d == NULL)
 8004872:	4604      	mov	r4, r0
 8004874:	2800      	cmp	r0, #0
 8004876:	d036      	beq.n	80048e6 <HAL_DMA2D_Init+0x76>

    /* Init the low level hardware */
    hdma2d->MspInitCallback(hdma2d);
  }
#else
  if (hdma2d->State == HAL_DMA2D_STATE_RESET)
 8004878:	f890 3061 	ldrb.w	r3, [r0, #97]	@ 0x61
 800487c:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 8004880:	b91b      	cbnz	r3, 800488a <HAL_DMA2D_Init+0x1a>
  {
    /* Allocate lock resource and initialize it */
    hdma2d->Lock = HAL_UNLOCKED;
 8004882:	f880 2060 	strb.w	r2, [r0, #96]	@ 0x60
    /* Init the low level hardware */
    HAL_DMA2D_MspInit(hdma2d);
 8004886:	f7fc f80b 	bl	80008a0 <HAL_DMA2D_MspInit>
  }
#endif /* (USE_HAL_DMA2D_REGISTER_CALLBACKS) */

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 800488a:	2302      	movs	r3, #2
 800488c:	f884 3061 	strb.w	r3, [r4, #97]	@ 0x61

  /* DMA2D CR register configuration -------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE | DMA2D_CR_LOM, hdma2d->Init.Mode | hdma2d->Init.LineOffsetMode);
 8004890:	6823      	ldr	r3, [r4, #0]
 8004892:	69e0      	ldr	r0, [r4, #28]
 8004894:	6819      	ldr	r1, [r3, #0]
 8004896:	6862      	ldr	r2, [r4, #4]
 8004898:	f421 21e0 	bic.w	r1, r1, #458752	@ 0x70000
 800489c:	4302      	orrs	r2, r0
 800489e:	f021 0140 	bic.w	r1, r1, #64	@ 0x40
 80048a2:	430a      	orrs	r2, r1
 80048a4:	601a      	str	r2, [r3, #0]

  /* DMA2D OPFCCR register configuration ---------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM | DMA2D_OPFCCR_SB,
 80048a6:	6b59      	ldr	r1, [r3, #52]	@ 0x34
 80048a8:	69a0      	ldr	r0, [r4, #24]
 80048aa:	68a2      	ldr	r2, [r4, #8]
 80048ac:	f421 7183 	bic.w	r1, r1, #262	@ 0x106
 80048b0:	4302      	orrs	r2, r0
 80048b2:	f021 0101 	bic.w	r1, r1, #1
 80048b6:	430a      	orrs	r2, r1
 80048b8:	635a      	str	r2, [r3, #52]	@ 0x34
             hdma2d->Init.ColorMode | hdma2d->Init.BytesSwap);

  /* DMA2D OOR register configuration ------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
 80048ba:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 80048bc:	68e1      	ldr	r1, [r4, #12]
 80048be:	0c12      	lsrs	r2, r2, #16
 80048c0:	0412      	lsls	r2, r2, #16
 80048c2:	430a      	orrs	r2, r1
 80048c4:	641a      	str	r2, [r3, #64]	@ 0x40
  /* DMA2D OPFCCR AI and RBS fields setting (Output Alpha Inversion)*/
  MODIFY_REG(hdma2d->Instance->OPFCCR, (DMA2D_OPFCCR_AI | DMA2D_OPFCCR_RBS),
 80048c6:	6b59      	ldr	r1, [r3, #52]	@ 0x34
 80048c8:	e9d4 0204 	ldrd	r0, r2, [r4, #16]
 80048cc:	0552      	lsls	r2, r2, #21
 80048ce:	ea42 5200 	orr.w	r2, r2, r0, lsl #20
 80048d2:	f421 1140 	bic.w	r1, r1, #3145728	@ 0x300000
 80048d6:	430a      	orrs	r2, r1
 80048d8:	635a      	str	r2, [r3, #52]	@ 0x34
             ((hdma2d->Init.AlphaInverted << DMA2D_OPFCCR_AI_Pos) | \
              (hdma2d->Init.RedBlueSwap << DMA2D_OPFCCR_RBS_Pos)));


  /* Update error code */
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 80048da:	2000      	movs	r0, #0

  /* Initialize the DMA2D state*/
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 80048dc:	2301      	movs	r3, #1
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 80048de:	6660      	str	r0, [r4, #100]	@ 0x64
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 80048e0:	f884 3061 	strb.w	r3, [r4, #97]	@ 0x61

  return HAL_OK;
}
 80048e4:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 80048e6:	2001      	movs	r0, #1
 80048e8:	e7fc      	b.n	80048e4 <HAL_DMA2D_Init+0x74>

080048ea <HAL_DMA2D_LineEventCallback>:
  * @brief  Transfer watermark callback.
  * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval None
  */
__weak void HAL_DMA2D_LineEventCallback(DMA2D_HandleTypeDef *hdma2d)
 80048ea:	4770      	bx	lr

080048ec <HAL_DMA2D_CLUTLoadingCpltCallback>:
  * @brief  CLUT Transfer Complete callback.
  * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval None
  */
__weak void HAL_DMA2D_CLUTLoadingCpltCallback(DMA2D_HandleTypeDef *hdma2d)
 80048ec:	4770      	bx	lr

080048ee <HAL_DMA2D_IRQHandler>:
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 80048ee:	6803      	ldr	r3, [r0, #0]
{
 80048f0:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 80048f2:	685e      	ldr	r6, [r3, #4]
{
 80048f4:	4604      	mov	r4, r0
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
 80048f6:	07f2      	lsls	r2, r6, #31
  uint32_t crflags = READ_REG(hdma2d->Instance->CR);
 80048f8:	681d      	ldr	r5, [r3, #0]
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
 80048fa:	d514      	bpl.n	8004926 <HAL_DMA2D_IRQHandler+0x38>
    if ((crflags & DMA2D_IT_TE) != 0U)
 80048fc:	05e9      	lsls	r1, r5, #23
 80048fe:	d512      	bpl.n	8004926 <HAL_DMA2D_IRQHandler+0x38>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TE);
 8004900:	681a      	ldr	r2, [r3, #0]
 8004902:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
 8004906:	601a      	str	r2, [r3, #0]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TE;
 8004908:	6e42      	ldr	r2, [r0, #100]	@ 0x64
 800490a:	f042 0201 	orr.w	r2, r2, #1
 800490e:	6642      	str	r2, [r0, #100]	@ 0x64
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TE);
 8004910:	2201      	movs	r2, #1
 8004912:	609a      	str	r2, [r3, #8]
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 8004914:	2304      	movs	r3, #4
 8004916:	f880 3061 	strb.w	r3, [r0, #97]	@ 0x61
      __HAL_UNLOCK(hdma2d);
 800491a:	2300      	movs	r3, #0
 800491c:	f880 3060 	strb.w	r3, [r0, #96]	@ 0x60
      if (hdma2d->XferErrorCallback != NULL)
 8004920:	6a43      	ldr	r3, [r0, #36]	@ 0x24
 8004922:	b103      	cbz	r3, 8004926 <HAL_DMA2D_IRQHandler+0x38>
        hdma2d->XferErrorCallback(hdma2d);
 8004924:	4798      	blx	r3
  if ((isrflags & DMA2D_FLAG_CE) != 0U)
 8004926:	06b2      	lsls	r2, r6, #26
 8004928:	d516      	bpl.n	8004958 <HAL_DMA2D_IRQHandler+0x6a>
    if ((crflags & DMA2D_IT_CE) != 0U)
 800492a:	04ab      	lsls	r3, r5, #18
 800492c:	d514      	bpl.n	8004958 <HAL_DMA2D_IRQHandler+0x6a>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CE);
 800492e:	6823      	ldr	r3, [r4, #0]
 8004930:	681a      	ldr	r2, [r3, #0]
 8004932:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
 8004936:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CE);
 8004938:	2220      	movs	r2, #32
 800493a:	609a      	str	r2, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CE;
 800493c:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 800493e:	f043 0302 	orr.w	r3, r3, #2
 8004942:	6663      	str	r3, [r4, #100]	@ 0x64
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 8004944:	2304      	movs	r3, #4
 8004946:	f884 3061 	strb.w	r3, [r4, #97]	@ 0x61
      __HAL_UNLOCK(hdma2d);
 800494a:	2300      	movs	r3, #0
 800494c:	f884 3060 	strb.w	r3, [r4, #96]	@ 0x60
      if (hdma2d->XferErrorCallback != NULL)
 8004950:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8004952:	b10b      	cbz	r3, 8004958 <HAL_DMA2D_IRQHandler+0x6a>
        hdma2d->XferErrorCallback(hdma2d);
 8004954:	4620      	mov	r0, r4
 8004956:	4798      	blx	r3
  if ((isrflags & DMA2D_FLAG_CAE) != 0U)
 8004958:	0730      	lsls	r0, r6, #28
 800495a:	d516      	bpl.n	800498a <HAL_DMA2D_IRQHandler+0x9c>
    if ((crflags & DMA2D_IT_CAE) != 0U)
 800495c:	0529      	lsls	r1, r5, #20
 800495e:	d514      	bpl.n	800498a <HAL_DMA2D_IRQHandler+0x9c>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CAE);
 8004960:	6823      	ldr	r3, [r4, #0]
 8004962:	681a      	ldr	r2, [r3, #0]
 8004964:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 8004968:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CAE);
 800496a:	2208      	movs	r2, #8
 800496c:	609a      	str	r2, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CAE;
 800496e:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8004970:	f043 0304 	orr.w	r3, r3, #4
 8004974:	6663      	str	r3, [r4, #100]	@ 0x64
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 8004976:	2304      	movs	r3, #4
 8004978:	f884 3061 	strb.w	r3, [r4, #97]	@ 0x61
      __HAL_UNLOCK(hdma2d);
 800497c:	2300      	movs	r3, #0
 800497e:	f884 3060 	strb.w	r3, [r4, #96]	@ 0x60
      if (hdma2d->XferErrorCallback != NULL)
 8004982:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8004984:	b10b      	cbz	r3, 800498a <HAL_DMA2D_IRQHandler+0x9c>
        hdma2d->XferErrorCallback(hdma2d);
 8004986:	4620      	mov	r0, r4
 8004988:	4798      	blx	r3
  if ((isrflags & DMA2D_FLAG_TW) != 0U)
 800498a:	0772      	lsls	r2, r6, #29
 800498c:	d50b      	bpl.n	80049a6 <HAL_DMA2D_IRQHandler+0xb8>
    if ((crflags & DMA2D_IT_TW) != 0U)
 800498e:	056b      	lsls	r3, r5, #21
 8004990:	d509      	bpl.n	80049a6 <HAL_DMA2D_IRQHandler+0xb8>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TW);
 8004992:	6823      	ldr	r3, [r4, #0]
      HAL_DMA2D_LineEventCallback(hdma2d);
 8004994:	4620      	mov	r0, r4
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TW);
 8004996:	681a      	ldr	r2, [r3, #0]
 8004998:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 800499c:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TW);
 800499e:	2204      	movs	r2, #4
 80049a0:	609a      	str	r2, [r3, #8]
      HAL_DMA2D_LineEventCallback(hdma2d);
 80049a2:	f7ff ffa2 	bl	80048ea <HAL_DMA2D_LineEventCallback>
  if ((isrflags & DMA2D_FLAG_TC) != 0U)
 80049a6:	07b0      	lsls	r0, r6, #30
 80049a8:	d514      	bpl.n	80049d4 <HAL_DMA2D_IRQHandler+0xe6>
    if ((crflags & DMA2D_IT_TC) != 0U)
 80049aa:	05a9      	lsls	r1, r5, #22
 80049ac:	d512      	bpl.n	80049d4 <HAL_DMA2D_IRQHandler+0xe6>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TC);
 80049ae:	6823      	ldr	r3, [r4, #0]
 80049b0:	681a      	ldr	r2, [r3, #0]
 80049b2:	f422 7200 	bic.w	r2, r2, #512	@ 0x200
 80049b6:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TC);
 80049b8:	2202      	movs	r2, #2
 80049ba:	609a      	str	r2, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 80049bc:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 80049be:	6663      	str	r3, [r4, #100]	@ 0x64
      hdma2d->State = HAL_DMA2D_STATE_READY;
 80049c0:	2301      	movs	r3, #1
 80049c2:	f884 3061 	strb.w	r3, [r4, #97]	@ 0x61
      __HAL_UNLOCK(hdma2d);
 80049c6:	2300      	movs	r3, #0
 80049c8:	f884 3060 	strb.w	r3, [r4, #96]	@ 0x60
      if (hdma2d->XferCpltCallback != NULL)
 80049cc:	6a23      	ldr	r3, [r4, #32]
 80049ce:	b10b      	cbz	r3, 80049d4 <HAL_DMA2D_IRQHandler+0xe6>
        hdma2d->XferCpltCallback(hdma2d);
 80049d0:	4620      	mov	r0, r4
 80049d2:	4798      	blx	r3
  if ((isrflags & DMA2D_FLAG_CTC) != 0U)
 80049d4:	06f2      	lsls	r2, r6, #27
 80049d6:	d513      	bpl.n	8004a00 <HAL_DMA2D_IRQHandler+0x112>
    if ((crflags & DMA2D_IT_CTC) != 0U)
 80049d8:	04eb      	lsls	r3, r5, #19
 80049da:	d511      	bpl.n	8004a00 <HAL_DMA2D_IRQHandler+0x112>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC);
 80049dc:	6823      	ldr	r3, [r4, #0]
      HAL_DMA2D_CLUTLoadingCpltCallback(hdma2d);
 80049de:	4620      	mov	r0, r4
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC);
 80049e0:	681a      	ldr	r2, [r3, #0]
 80049e2:	f422 5280 	bic.w	r2, r2, #4096	@ 0x1000
 80049e6:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CTC);
 80049e8:	2210      	movs	r2, #16
 80049ea:	609a      	str	r2, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 80049ec:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 80049ee:	6663      	str	r3, [r4, #100]	@ 0x64
      hdma2d->State = HAL_DMA2D_STATE_READY;
 80049f0:	2301      	movs	r3, #1
 80049f2:	f884 3061 	strb.w	r3, [r4, #97]	@ 0x61
      __HAL_UNLOCK(hdma2d);
 80049f6:	2300      	movs	r3, #0
 80049f8:	f884 3060 	strb.w	r3, [r4, #96]	@ 0x60
      HAL_DMA2D_CLUTLoadingCpltCallback(hdma2d);
 80049fc:	f7ff ff76 	bl	80048ec <HAL_DMA2D_CLUTLoadingCpltCallback>
}
 8004a00:	bd70      	pop	{r4, r5, r6, pc}
	...

08004a04 <DMA_List_GetCLLRNodeInfo.isra.0>:
static void DMA_List_GetCLLRNodeInfo(DMA_NodeTypeDef const *const pNode,
                                     uint32_t *const cllr_mask,
                                     uint32_t *const cllr_offset)
{
  /* Check node type */
  if ((pNode->NodeInfo & DMA_CHANNEL_TYPE_2D_ADDR) == DMA_CHANNEL_TYPE_2D_ADDR)
 8004a04:	0783      	lsls	r3, r0, #30
 8004a06:	d506      	bpl.n	8004a16 <DMA_List_GetCLLRNodeInfo.isra.0+0x12>
  {
    /* Update CLLR register mask value */
    if (cllr_mask != NULL)
 8004a08:	b109      	cbz	r1, 8004a0e <DMA_List_GetCLLRNodeInfo.isra.0+0xa>
    {
      *cllr_mask = DMA_CLLR_UT1 | DMA_CLLR_UT2 | DMA_CLLR_UB1 | DMA_CLLR_USA | DMA_CLLR_UDA | DMA_CLLR_UT3 |
 8004a0a:	4b06      	ldr	r3, [pc, #24]	@ (8004a24 <DMA_List_GetCLLRNodeInfo.isra.0+0x20>)
 8004a0c:	600b      	str	r3, [r1, #0]
                   DMA_CLLR_UB2 | DMA_CLLR_ULL;
    }

    /* Update CLLR register offset */
    if (cllr_offset != NULL)
 8004a0e:	b10a      	cbz	r2, 8004a14 <DMA_List_GetCLLRNodeInfo.isra.0+0x10>
    {
      *cllr_offset = NODE_CLLR_2D_DEFAULT_OFFSET;
 8004a10:	2307      	movs	r3, #7
    }

    /* Update CLLR register offset */
    if (cllr_offset != NULL)
    {
      *cllr_offset = NODE_CLLR_LINEAR_DEFAULT_OFFSET;
 8004a12:	6013      	str	r3, [r2, #0]
    }
  }
}
 8004a14:	4770      	bx	lr
    if (cllr_mask != NULL)
 8004a16:	b109      	cbz	r1, 8004a1c <DMA_List_GetCLLRNodeInfo.isra.0+0x18>
      *cllr_mask = DMA_CLLR_UT1 | DMA_CLLR_UT2 | DMA_CLLR_UB1 | DMA_CLLR_USA | DMA_CLLR_UDA | DMA_CLLR_ULL;
 8004a18:	4b03      	ldr	r3, [pc, #12]	@ (8004a28 <DMA_List_GetCLLRNodeInfo.isra.0+0x24>)
 8004a1a:	600b      	str	r3, [r1, #0]
    if (cllr_offset != NULL)
 8004a1c:	2a00      	cmp	r2, #0
 8004a1e:	d0f9      	beq.n	8004a14 <DMA_List_GetCLLRNodeInfo.isra.0+0x10>
      *cllr_offset = NODE_CLLR_LINEAR_DEFAULT_OFFSET;
 8004a20:	2305      	movs	r3, #5
 8004a22:	e7f6      	b.n	8004a12 <DMA_List_GetCLLRNodeInfo.isra.0+0xe>
 8004a24:	fe010000 	.word	0xfe010000
 8004a28:	f8010000 	.word	0xf8010000

08004a2c <HAL_DMAEx_List_Start_IT>:
  if ((hdma == NULL) || (hdma->LinkedListQueue == NULL))
 8004a2c:	4603      	mov	r3, r0
{
 8004a2e:	b537      	push	{r0, r1, r2, r4, r5, lr}
  if ((hdma == NULL) || (hdma->LinkedListQueue == NULL))
 8004a30:	2800      	cmp	r0, #0
 8004a32:	d04b      	beq.n	8004acc <HAL_DMAEx_List_Start_IT+0xa0>
 8004a34:	6f42      	ldr	r2, [r0, #116]	@ 0x74
 8004a36:	2a00      	cmp	r2, #0
 8004a38:	d048      	beq.n	8004acc <HAL_DMAEx_List_Start_IT+0xa0>
  dma_state = hdma->State;
 8004a3a:	f890 1054 	ldrb.w	r1, [r0, #84]	@ 0x54
  ccr_value = hdma->Instance->CCR & DMA_CCR_LSM;
 8004a3e:	6804      	ldr	r4, [r0, #0]
  if ((dma_state == HAL_DMA_STATE_READY) || ((dma_state == HAL_DMA_STATE_BUSY) && (ccr_value != 0U)))
 8004a40:	2901      	cmp	r1, #1
  ccr_value = hdma->Instance->CCR & DMA_CCR_LSM;
 8004a42:	6960      	ldr	r0, [r4, #20]
  dma_state = hdma->State;
 8004a44:	b2cd      	uxtb	r5, r1
  if ((dma_state == HAL_DMA_STATE_READY) || ((dma_state == HAL_DMA_STATE_BUSY) && (ccr_value != 0U)))
 8004a46:	d003      	beq.n	8004a50 <HAL_DMAEx_List_Start_IT+0x24>
 8004a48:	2d02      	cmp	r5, #2
 8004a4a:	d13a      	bne.n	8004ac2 <HAL_DMAEx_List_Start_IT+0x96>
 8004a4c:	03c1      	lsls	r1, r0, #15
 8004a4e:	d538      	bpl.n	8004ac2 <HAL_DMAEx_List_Start_IT+0x96>
    if (hdma->State == HAL_DMA_STATE_READY)
 8004a50:	f893 1054 	ldrb.w	r1, [r3, #84]	@ 0x54
 8004a54:	2901      	cmp	r1, #1
 8004a56:	b2cd      	uxtb	r5, r1
 8004a58:	d12c      	bne.n	8004ab4 <HAL_DMAEx_List_Start_IT+0x88>
      __HAL_LOCK(hdma);
 8004a5a:	f893 104c 	ldrb.w	r1, [r3, #76]	@ 0x4c
 8004a5e:	2002      	movs	r0, #2
 8004a60:	2901      	cmp	r1, #1
 8004a62:	d02c      	beq.n	8004abe <HAL_DMAEx_List_Start_IT+0x92>
      hdma->ErrorCode                  = HAL_DMA_ERROR_NONE;
 8004a64:	2100      	movs	r1, #0
      hdma->State                  = HAL_DMA_STATE_BUSY;
 8004a66:	f883 0054 	strb.w	r0, [r3, #84]	@ 0x54
      __HAL_LOCK(hdma);
 8004a6a:	f883 504c 	strb.w	r5, [r3, #76]	@ 0x4c
      hdma->LinkedListQueue->State = HAL_DMA_QUEUE_STATE_BUSY;
 8004a6e:	7310      	strb	r0, [r2, #12]
      hdma->ErrorCode                  = HAL_DMA_ERROR_NONE;
 8004a70:	6599      	str	r1, [r3, #88]	@ 0x58
      hdma->LinkedListQueue->ErrorCode = HAL_DMA_QUEUE_ERROR_NONE;
 8004a72:	6111      	str	r1, [r2, #16]
      __HAL_DMA_ENABLE_IT(hdma, (DMA_IT_TC | DMA_IT_DTE | DMA_IT_ULE | DMA_IT_USE | DMA_IT_TO));
 8004a74:	6961      	ldr	r1, [r4, #20]
 8004a76:	f441 41ba 	orr.w	r1, r1, #23808	@ 0x5d00
 8004a7a:	6161      	str	r1, [r4, #20]
      if (hdma->XferHalfCpltCallback != NULL)
 8004a7c:	6e59      	ldr	r1, [r3, #100]	@ 0x64
 8004a7e:	b119      	cbz	r1, 8004a88 <HAL_DMAEx_List_Start_IT+0x5c>
        __HAL_DMA_ENABLE_IT(hdma, DMA_IT_HT);
 8004a80:	6961      	ldr	r1, [r4, #20]
 8004a82:	f441 7100 	orr.w	r1, r1, #512	@ 0x200
 8004a86:	6161      	str	r1, [r4, #20]
      if (hdma->XferSuspendCallback != NULL)
 8004a88:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8004a8a:	b11b      	cbz	r3, 8004a94 <HAL_DMAEx_List_Start_IT+0x68>
        __HAL_DMA_ENABLE_IT(hdma, DMA_IT_SUSP);
 8004a8c:	6963      	ldr	r3, [r4, #20]
 8004a8e:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
 8004a92:	6163      	str	r3, [r4, #20]
      DMA_List_GetCLLRNodeInfo(hdma->LinkedListQueue->Head, &cllr_mask, NULL);
 8004a94:	6815      	ldr	r5, [r2, #0]
 8004a96:	a901      	add	r1, sp, #4
 8004a98:	6a28      	ldr	r0, [r5, #32]
 8004a9a:	2200      	movs	r2, #0
 8004a9c:	f7ff ffb2 	bl	8004a04 <DMA_List_GetCLLRNodeInfo.isra.0>
      hdma->Instance->CLBAR = ((uint32_t)hdma->LinkedListQueue->Head & DMA_CLBAR_LBA);
 8004aa0:	0c2b      	lsrs	r3, r5, #16
 8004aa2:	041b      	lsls	r3, r3, #16
      hdma->Instance->CLLR  = ((uint32_t)hdma->LinkedListQueue->Head & DMA_CLLR_LA) | cllr_mask;
 8004aa4:	f025 0503 	bic.w	r5, r5, #3
      hdma->Instance->CLBAR = ((uint32_t)hdma->LinkedListQueue->Head & DMA_CLBAR_LBA);
 8004aa8:	6023      	str	r3, [r4, #0]
      hdma->Instance->CLLR  = ((uint32_t)hdma->LinkedListQueue->Head & DMA_CLLR_LA) | cllr_mask;
 8004aaa:	042d      	lsls	r5, r5, #16
 8004aac:	9b01      	ldr	r3, [sp, #4]
 8004aae:	0c2d      	lsrs	r5, r5, #16
 8004ab0:	431d      	orrs	r5, r3
 8004ab2:	67e5      	str	r5, [r4, #124]	@ 0x7c
  return HAL_OK;
 8004ab4:	2000      	movs	r0, #0
    __HAL_DMA_ENABLE(hdma);
 8004ab6:	6963      	ldr	r3, [r4, #20]
 8004ab8:	f043 0301 	orr.w	r3, r3, #1
 8004abc:	6163      	str	r3, [r4, #20]
}
 8004abe:	b003      	add	sp, #12
 8004ac0:	bd30      	pop	{r4, r5, pc}
    hdma->ErrorCode = HAL_DMA_ERROR_BUSY;
 8004ac2:	2240      	movs	r2, #64	@ 0x40
 8004ac4:	659a      	str	r2, [r3, #88]	@ 0x58
    __HAL_UNLOCK(hdma);
 8004ac6:	2200      	movs	r2, #0
 8004ac8:	f883 204c 	strb.w	r2, [r3, #76]	@ 0x4c
    return HAL_ERROR;
 8004acc:	2001      	movs	r0, #1
 8004ace:	e7f6      	b.n	8004abe <HAL_DMAEx_List_Start_IT+0x92>

08004ad0 <HAL_DMAEx_ConfigDataHandling>:
  if ((hdma == NULL) || (pConfigDataHandling == NULL))
 8004ad0:	b1b0      	cbz	r0, 8004b00 <HAL_DMAEx_ConfigDataHandling+0x30>
 8004ad2:	b1a9      	cbz	r1, 8004b00 <HAL_DMAEx_ConfigDataHandling+0x30>
  if (hdma->State == HAL_DMA_STATE_READY)
 8004ad4:	f890 3054 	ldrb.w	r3, [r0, #84]	@ 0x54
 8004ad8:	2b01      	cmp	r3, #1
 8004ada:	d10c      	bne.n	8004af6 <HAL_DMAEx_ConfigDataHandling+0x26>
    MODIFY_REG(hdma->Instance->CTR1, (DMA_CTR1_DHX | DMA_CTR1_DBX | DMA_CTR1_SBX | DMA_CTR1_PAM),
 8004adc:	e9d1 1300 	ldrd	r1, r3, [r1]
 8004ae0:	6800      	ldr	r0, [r0, #0]
 8004ae2:	430b      	orrs	r3, r1
 8004ae4:	6c02      	ldr	r2, [r0, #64]	@ 0x40
 8004ae6:	f022 6240 	bic.w	r2, r2, #201326592	@ 0xc000000
 8004aea:	f422 5260 	bic.w	r2, r2, #14336	@ 0x3800
 8004aee:	4313      	orrs	r3, r2
 8004af0:	6403      	str	r3, [r0, #64]	@ 0x40
  return HAL_OK;
 8004af2:	2000      	movs	r0, #0
 8004af4:	4770      	bx	lr
    hdma->ErrorCode = HAL_DMA_ERROR_BUSY;
 8004af6:	2340      	movs	r3, #64	@ 0x40
 8004af8:	6583      	str	r3, [r0, #88]	@ 0x58
    __HAL_UNLOCK(hdma);
 8004afa:	2300      	movs	r3, #0
 8004afc:	f880 304c 	strb.w	r3, [r0, #76]	@ 0x4c
    return HAL_ERROR;
 8004b00:	2001      	movs	r0, #1
}
 8004b02:	4770      	bx	lr

08004b04 <HAL_DMAEx_GetFifoLevel>:
  return ((hdma->Instance->CSR & DMA_CSR_FIFOL) >> DMA_CSR_FIFOL_Pos);
 8004b04:	6803      	ldr	r3, [r0, #0]
 8004b06:	6918      	ldr	r0, [r3, #16]
}
 8004b08:	f3c0 4007 	ubfx	r0, r0, #16, #8
 8004b0c:	4770      	bx	lr
	...

08004b10 <HAL_GPIO_Init>:
  * @param  pGPIO_Init: pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, const GPIO_InitTypeDef *pGPIO_Init)
{
 8004b10:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
      /* Configure the External Interrupt or event for the current IO */
      if ((pGPIO_Init->Mode & EXTI_MODE) == EXTI_MODE)
      {
        tmp = EXTI->EXTICR[position >> 2U];
        tmp &= ~((0x0FUL) << (EXTI_EXTICR1_EXTI1_Pos * (position & 0x03U)));
        tmp |= (GPIO_GET_INDEX(GPIOx) << (EXTI_EXTICR1_EXTI1_Pos * (position & 0x03U)));
 8004b14:	4b81      	ldr	r3, [pc, #516]	@ (8004d1c <HAL_GPIO_Init+0x20c>)
{
 8004b16:	b085      	sub	sp, #20
        tmp |= (GPIO_GET_INDEX(GPIOx) << (EXTI_EXTICR1_EXTI1_Pos * (position & 0x03U)));
 8004b18:	ea03 2390 	and.w	r3, r3, r0, lsr #10
 8004b1c:	9303      	str	r3, [sp, #12]
 8004b1e:	4b80      	ldr	r3, [pc, #512]	@ (8004d20 <HAL_GPIO_Init+0x210>)
  uint32_t position = 0U;
 8004b20:	2200      	movs	r2, #0
 8004b22:	9302      	str	r3, [sp, #8]
        tmp &= ~(GPIO_PUPDR_PUPD0 << (pin_position * GPIO_PUPDR_PUPD1_Pos));
 8004b24:	f04f 0e03 	mov.w	lr, #3
  while (((pGPIO_Init->Pin) >> position) != 0U)
 8004b28:	4603      	mov	r3, r0
        EXTI->EXTICR[position >> 2U] = tmp;

        /* Clear Rising Falling edge configuration */
        tmp = EXTI->RTSR1;
 8004b2a:	4f7e      	ldr	r7, [pc, #504]	@ (8004d24 <HAL_GPIO_Init+0x214>)
  while (((pGPIO_Init->Pin) >> position) != 0U)
 8004b2c:	680e      	ldr	r6, [r1, #0]
 8004b2e:	fa36 f402 	lsrs.w	r4, r6, r2
 8004b32:	d102      	bne.n	8004b3a <HAL_GPIO_Init+0x2a>
        EXTI->IMR1 = tmp;
      }
    }
    position++;
  }
}
 8004b34:	b005      	add	sp, #20
 8004b36:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    iocurrent = (pGPIO_Init->Pin) & (1UL << position);
 8004b3a:	2401      	movs	r4, #1
 8004b3c:	fa04 fc02 	lsl.w	ip, r4, r2
    if (iocurrent != 0U)
 8004b40:	ea1c 0406 	ands.w	r4, ip, r6
 8004b44:	9401      	str	r4, [sp, #4]
 8004b46:	f000 808e 	beq.w	8004c66 <HAL_GPIO_Init+0x156>
      if (GPIOx == LPGPIO1)
 8004b4a:	4c77      	ldr	r4, [pc, #476]	@ (8004d28 <HAL_GPIO_Init+0x218>)
        tmp |= ((pGPIO_Init->Mode & GPIO_MODE_OUTPUT_PP) << position);
 8004b4c:	684d      	ldr	r5, [r1, #4]
      if (GPIOx == LPGPIO1)
 8004b4e:	42a0      	cmp	r0, r4
      else if ((pGPIO_Init->Mode == GPIO_MODE_AF_PP) || (pGPIO_Init->Mode == GPIO_MODE_AF_OD))
 8004b50:	f025 0810 	bic.w	r8, r5, #16
      if (GPIOx == LPGPIO1)
 8004b54:	f040 808c 	bne.w	8004c70 <HAL_GPIO_Init+0x160>
        tmp &= ~(0x0FUL << (((pin_position) & 0x07U) * 4U));
 8004b58:	260f      	movs	r6, #15
        tmp = GPIOx->MODER;
 8004b5a:	6804      	ldr	r4, [r0, #0]
        tmp |= ((pGPIO_Init->Mode & GPIO_MODE_OUTPUT_PP) << position);
 8004b5c:	f005 0301 	and.w	r3, r5, #1
        tmp &= ~(LPGPIO_MODER_MOD0 << position);
 8004b60:	ea24 040c 	bic.w	r4, r4, ip
        tmp |= ((pGPIO_Init->Mode & GPIO_MODE_OUTPUT_PP) << position);
 8004b64:	4093      	lsls	r3, r2
 8004b66:	4323      	orrs	r3, r4
        pin_position = LPGPIO_Map[position].Pin_Pos;
 8004b68:	9c02      	ldr	r4, [sp, #8]
        GPIOx->MODER = tmp;
 8004b6a:	6003      	str	r3, [r0, #0]
        pin_position = LPGPIO_Map[position].Pin_Pos;
 8004b6c:	6864      	ldr	r4, [r4, #4]
        p_gpio = LPGPIO_Map[position].GPIO_PORT;
 8004b6e:	9b02      	ldr	r3, [sp, #8]
        tmp &= ~(0x0FUL << (((pin_position) & 0x07U) * 4U));
 8004b70:	f004 0c07 	and.w	ip, r4, #7
 8004b74:	ea4f 0c8c 	mov.w	ip, ip, lsl #2
 8004b78:	fa06 fa0c 	lsl.w	sl, r6, ip
        tmp |= ((GPIO_AF11_LPGPIO1 & 0x0FUL) << (((pin_position) & 0x07U) * 4U));
 8004b7c:	260b      	movs	r6, #11
 8004b7e:	fa06 fc0c 	lsl.w	ip, r6, ip
        tmp |= ((GPIO_MODE_AF_PP & 0x0FUL) << (pin_position * GPIO_MODER_MODE1_Pos));
 8004b82:	2602      	movs	r6, #2
        p_gpio = LPGPIO_Map[position].GPIO_PORT;
 8004b84:	681b      	ldr	r3, [r3, #0]
        tmp = p_gpio->AFR[(pin_position) >> 3U];
 8004b86:	ea4f 09d4 	mov.w	r9, r4, lsr #3
 8004b8a:	eb03 0989 	add.w	r9, r3, r9, lsl #2
 8004b8e:	f8d9 b020 	ldr.w	fp, [r9, #32]
        tmp &= ~(0x0FUL << (((pin_position) & 0x07U) * 4U));
 8004b92:	ea2b 0a0a 	bic.w	sl, fp, sl
        tmp |= ((GPIO_AF11_LPGPIO1 & 0x0FUL) << (((pin_position) & 0x07U) * 4U));
 8004b96:	ea4c 0c0a 	orr.w	ip, ip, sl
        p_gpio->AFR[(pin_position) >> 3U] = tmp;
 8004b9a:	f8c9 c020 	str.w	ip, [r9, #32]
        tmp = p_gpio->MODER;
 8004b9e:	f8d3 9000 	ldr.w	r9, [r3]
        tmp &= ~(GPIO_MODER_MODE0 << (pin_position * GPIO_MODER_MODE1_Pos));
 8004ba2:	ea4f 0c44 	mov.w	ip, r4, lsl #1
 8004ba6:	fa0e fa0c 	lsl.w	sl, lr, ip
 8004baa:	ea29 090a 	bic.w	r9, r9, sl
        tmp |= ((GPIO_MODE_AF_PP & 0x0FUL) << (pin_position * GPIO_MODER_MODE1_Pos));
 8004bae:	fa06 fc0c 	lsl.w	ip, r6, ip
 8004bb2:	ea4c 0c09 	orr.w	ip, ip, r9
        p_gpio->MODER = tmp;
 8004bb6:	f8c3 c000 	str.w	ip, [r3]
      if ((pGPIO_Init->Mode == GPIO_MODE_OUTPUT_PP) || (pGPIO_Init->Mode == GPIO_MODE_AF_PP) ||
 8004bba:	f108 38ff 	add.w	r8, r8, #4294967295
 8004bbe:	f1b8 0f01 	cmp.w	r8, #1
 8004bc2:	f240 8082 	bls.w	8004cca <HAL_GPIO_Init+0x1ba>
      if (pGPIO_Init->Mode != GPIO_MODE_ANALOG)
 8004bc6:	2d03      	cmp	r5, #3
 8004bc8:	d04d      	beq.n	8004c66 <HAL_GPIO_Init+0x156>
        tmp = p_gpio->PUPDR;
 8004bca:	f8d3 800c 	ldr.w	r8, [r3, #12]
        tmp |= ((pGPIO_Init->Pull) << (pin_position * GPIO_PUPDR_PUPD1_Pos));
 8004bce:	688e      	ldr	r6, [r1, #8]
        tmp &= ~(GPIO_PUPDR_PUPD0 << (pin_position * GPIO_PUPDR_PUPD1_Pos));
 8004bd0:	0064      	lsls	r4, r4, #1
 8004bd2:	fa0e fc04 	lsl.w	ip, lr, r4
 8004bd6:	ea28 0c0c 	bic.w	ip, r8, ip
        tmp |= ((pGPIO_Init->Pull) << (pin_position * GPIO_PUPDR_PUPD1_Pos));
 8004bda:	fa06 f404 	lsl.w	r4, r6, r4
 8004bde:	ea44 040c 	orr.w	r4, r4, ip
        p_gpio->PUPDR = tmp;
 8004be2:	60dc      	str	r4, [r3, #12]
      if ((pGPIO_Init->Mode & EXTI_MODE) == EXTI_MODE)
 8004be4:	00ec      	lsls	r4, r5, #3
 8004be6:	d53e      	bpl.n	8004c66 <HAL_GPIO_Init+0x156>
        tmp &= ~((0x0FUL) << (EXTI_EXTICR1_EXTI1_Pos * (position & 0x03U)));
 8004be8:	260f      	movs	r6, #15
 8004bea:	f022 0c03 	bic.w	ip, r2, #3
 8004bee:	f10c 4c8c 	add.w	ip, ip, #1174405120	@ 0x46000000
 8004bf2:	f002 0403 	and.w	r4, r2, #3
 8004bf6:	f50c 3c08 	add.w	ip, ip, #139264	@ 0x22000
 8004bfa:	00e4      	lsls	r4, r4, #3
        tmp = EXTI->EXTICR[position >> 2U];
 8004bfc:	f8dc 9060 	ldr.w	r9, [ip, #96]	@ 0x60
        tmp &= ~((0x0FUL) << (EXTI_EXTICR1_EXTI1_Pos * (position & 0x03U)));
 8004c00:	fa06 f804 	lsl.w	r8, r6, r4
        tmp |= (GPIO_GET_INDEX(GPIOx) << (EXTI_EXTICR1_EXTI1_Pos * (position & 0x03U)));
 8004c04:	9e03      	ldr	r6, [sp, #12]
        tmp &= ~((0x0FUL) << (EXTI_EXTICR1_EXTI1_Pos * (position & 0x03U)));
 8004c06:	ea29 0808 	bic.w	r8, r9, r8
        tmp |= (GPIO_GET_INDEX(GPIOx) << (EXTI_EXTICR1_EXTI1_Pos * (position & 0x03U)));
 8004c0a:	fa06 f404 	lsl.w	r4, r6, r4
        tmp &= ~((uint32_t)iocurrent);
 8004c0e:	9e01      	ldr	r6, [sp, #4]
        tmp |= (GPIO_GET_INDEX(GPIOx) << (EXTI_EXTICR1_EXTI1_Pos * (position & 0x03U)));
 8004c10:	ea44 0408 	orr.w	r4, r4, r8
        EXTI->EXTICR[position >> 2U] = tmp;
 8004c14:	f8cc 4060 	str.w	r4, [ip, #96]	@ 0x60
        tmp &= ~((uint32_t)iocurrent);
 8004c18:	ea6f 0c06 	mvn.w	ip, r6
        if ((pGPIO_Init->Mode & RISING_EDGE) == RISING_EDGE)
 8004c1c:	02ee      	lsls	r6, r5, #11
          tmp |= iocurrent;
 8004c1e:	bf48      	it	mi
 8004c20:	9e01      	ldrmi	r6, [sp, #4]
        tmp = EXTI->RTSR1;
 8004c22:	683c      	ldr	r4, [r7, #0]
          tmp |= iocurrent;
 8004c24:	bf4c      	ite	mi
 8004c26:	4334      	orrmi	r4, r6
        tmp &= ~((uint32_t)iocurrent);
 8004c28:	ea0c 0404 	andpl.w	r4, ip, r4
        EXTI->RTSR1 = tmp;
 8004c2c:	603c      	str	r4, [r7, #0]
        if ((pGPIO_Init->Mode & FALLING_EDGE) == FALLING_EDGE)
 8004c2e:	02ae      	lsls	r6, r5, #10
        tmp = EXTI->FTSR1;
 8004c30:	687c      	ldr	r4, [r7, #4]
          tmp |= iocurrent;
 8004c32:	bf4a      	itet	mi
 8004c34:	9e01      	ldrmi	r6, [sp, #4]
        tmp &= ~((uint32_t)iocurrent);
 8004c36:	ea0c 0404 	andpl.w	r4, ip, r4
          tmp |= iocurrent;
 8004c3a:	4334      	orrmi	r4, r6
        EXTI->FTSR1 = tmp;
 8004c3c:	607c      	str	r4, [r7, #4]
        if ((pGPIO_Init->Mode & GPIO_MODE_EVT) == GPIO_MODE_EVT)
 8004c3e:	03ae      	lsls	r6, r5, #14
        tmp = EXTI->EMR1;
 8004c40:	f8d7 4084 	ldr.w	r4, [r7, #132]	@ 0x84
          tmp |= iocurrent;
 8004c44:	bf4a      	itet	mi
 8004c46:	9e01      	ldrmi	r6, [sp, #4]
        tmp &= ~((uint32_t)iocurrent);
 8004c48:	ea0c 0404 	andpl.w	r4, ip, r4
          tmp |= iocurrent;
 8004c4c:	4334      	orrmi	r4, r6
        EXTI->EMR1 = tmp;
 8004c4e:	f8c7 4084 	str.w	r4, [r7, #132]	@ 0x84
        if ((pGPIO_Init->Mode & GPIO_MODE_IT) == GPIO_MODE_IT)
 8004c52:	03ed      	lsls	r5, r5, #15
        tmp = EXTI->IMR1;
 8004c54:	f8d7 4080 	ldr.w	r4, [r7, #128]	@ 0x80
          tmp |= iocurrent;
 8004c58:	bf4a      	itet	mi
 8004c5a:	9d01      	ldrmi	r5, [sp, #4]
        tmp &= ~((uint32_t)iocurrent);
 8004c5c:	ea0c 0404 	andpl.w	r4, ip, r4
          tmp |= iocurrent;
 8004c60:	432c      	orrmi	r4, r5
        EXTI->IMR1 = tmp;
 8004c62:	f8c7 4080 	str.w	r4, [r7, #128]	@ 0x80
    position++;
 8004c66:	9c02      	ldr	r4, [sp, #8]
 8004c68:	3201      	adds	r2, #1
 8004c6a:	3408      	adds	r4, #8
 8004c6c:	9402      	str	r4, [sp, #8]
 8004c6e:	e75d      	b.n	8004b2c <HAL_GPIO_Init+0x1c>
      else if ((pGPIO_Init->Mode == GPIO_MODE_AF_PP) || (pGPIO_Init->Mode == GPIO_MODE_AF_OD))
 8004c70:	ea4f 0942 	mov.w	r9, r2, lsl #1
        tmp &= ~(GPIO_MODER_MODE0 << (pin_position * GPIO_MODER_MODE1_Pos));
 8004c74:	fa0e f409 	lsl.w	r4, lr, r9
        tmp |= ((pGPIO_Init->Mode & GPIO_MODE) << (pin_position * GPIO_MODER_MODE1_Pos));
 8004c78:	f005 0c03 	and.w	ip, r5, #3
      else if ((pGPIO_Init->Mode == GPIO_MODE_AF_PP) || (pGPIO_Init->Mode == GPIO_MODE_AF_OD))
 8004c7c:	f1b8 0f02 	cmp.w	r8, #2
        tmp &= ~(GPIO_MODER_MODE0 << (pin_position * GPIO_MODER_MODE1_Pos));
 8004c80:	ea6f 0404 	mvn.w	r4, r4
        tmp |= ((pGPIO_Init->Mode & GPIO_MODE) << (pin_position * GPIO_MODER_MODE1_Pos));
 8004c84:	fa0c fc09 	lsl.w	ip, ip, r9
      else if ((pGPIO_Init->Mode == GPIO_MODE_AF_PP) || (pGPIO_Init->Mode == GPIO_MODE_AF_OD))
 8004c88:	d13e      	bne.n	8004d08 <HAL_GPIO_Init+0x1f8>
        tmp &= ~(0x0FUL << ((position & 0x07U) * GPIO_AFRL_AFSEL1_Pos));
 8004c8a:	260f      	movs	r6, #15
        tmp = GPIOx->AFR[position >> 3U];
 8004c8c:	ea4f 08d2 	mov.w	r8, r2, lsr #3
        tmp &= ~(0x0FUL << ((position & 0x07U) * GPIO_AFRL_AFSEL1_Pos));
 8004c90:	f002 0907 	and.w	r9, r2, #7
 8004c94:	eb00 0888 	add.w	r8, r0, r8, lsl #2
 8004c98:	ea4f 0989 	mov.w	r9, r9, lsl #2
        tmp = GPIOx->AFR[position >> 3U];
 8004c9c:	f8d8 a020 	ldr.w	sl, [r8, #32]
        tmp &= ~(0x0FUL << ((position & 0x07U) * GPIO_AFRL_AFSEL1_Pos));
 8004ca0:	fa06 fb09 	lsl.w	fp, r6, r9
        tmp |= ((pGPIO_Init->Alternate & 0x0FUL) << ((position & 0x07U) * GPIO_AFRL_AFSEL1_Pos));
 8004ca4:	690e      	ldr	r6, [r1, #16]
        tmp &= ~(0x0FUL << ((position & 0x07U) * GPIO_AFRL_AFSEL1_Pos));
 8004ca6:	ea2a 0a0b 	bic.w	sl, sl, fp
        tmp |= ((pGPIO_Init->Alternate & 0x0FUL) << ((position & 0x07U) * GPIO_AFRL_AFSEL1_Pos));
 8004caa:	f006 0b0f 	and.w	fp, r6, #15
 8004cae:	fa0b fb09 	lsl.w	fp, fp, r9
 8004cb2:	ea4b 0b0a 	orr.w	fp, fp, sl
        GPIOx->AFR[position >> 3U] = tmp;
 8004cb6:	f8c8 b020 	str.w	fp, [r8, #32]
        tmp = p_gpio->MODER;
 8004cba:	f8d3 8000 	ldr.w	r8, [r3]
        tmp &= ~(GPIO_MODER_MODE0 << (pin_position * GPIO_MODER_MODE1_Pos));
 8004cbe:	ea04 0808 	and.w	r8, r4, r8
        tmp |= ((pGPIO_Init->Mode & GPIO_MODE) << (pin_position * GPIO_MODER_MODE1_Pos));
 8004cc2:	ea48 040c 	orr.w	r4, r8, ip
        p_gpio->MODER = tmp;
 8004cc6:	601c      	str	r4, [r3, #0]
    pin_position = position;
 8004cc8:	4614      	mov	r4, r2
        tmp |= (pGPIO_Init->Speed << (pin_position * GPIO_OSPEEDR_OSPEED1_Pos));
 8004cca:	68ce      	ldr	r6, [r1, #12]
        tmp &= ~(GPIO_OSPEEDR_OSPEED0 << (pin_position * GPIO_OSPEEDR_OSPEED1_Pos));
 8004ccc:	ea4f 0844 	mov.w	r8, r4, lsl #1
 8004cd0:	fa0e f908 	lsl.w	r9, lr, r8
        tmp |= (pGPIO_Init->Speed << (pin_position * GPIO_OSPEEDR_OSPEED1_Pos));
 8004cd4:	fa06 f808 	lsl.w	r8, r6, r8
        tmp &= ~(GPIO_OTYPER_OT0 << pin_position);
 8004cd8:	2601      	movs	r6, #1
        tmp = p_gpio->OSPEEDR;
 8004cda:	f8d3 c008 	ldr.w	ip, [r3, #8]
        tmp &= ~(GPIO_OSPEEDR_OSPEED0 << (pin_position * GPIO_OSPEEDR_OSPEED1_Pos));
 8004cde:	ea2c 0c09 	bic.w	ip, ip, r9
        tmp |= (pGPIO_Init->Speed << (pin_position * GPIO_OSPEEDR_OSPEED1_Pos));
 8004ce2:	ea48 080c 	orr.w	r8, r8, ip
        p_gpio->OSPEEDR = tmp;
 8004ce6:	f8c3 8008 	str.w	r8, [r3, #8]
        tmp = p_gpio->OTYPER;
 8004cea:	f8d3 8004 	ldr.w	r8, [r3, #4]
        tmp &= ~(GPIO_OTYPER_OT0 << pin_position);
 8004cee:	fa06 fc04 	lsl.w	ip, r6, r4
 8004cf2:	ea28 080c 	bic.w	r8, r8, ip
        tmp |= (((pGPIO_Init->Mode & GPIO_OUTPUT_TYPE) >> 4U) << pin_position);
 8004cf6:	f3c5 1c00 	ubfx	ip, r5, #4, #1
 8004cfa:	fa0c fc04 	lsl.w	ip, ip, r4
 8004cfe:	ea4c 0c08 	orr.w	ip, ip, r8
        p_gpio->OTYPER = tmp;
 8004d02:	f8c3 c004 	str.w	ip, [r3, #4]
 8004d06:	e75e      	b.n	8004bc6 <HAL_GPIO_Init+0xb6>
        tmp = p_gpio->MODER;
 8004d08:	f8d3 9000 	ldr.w	r9, [r3]
        tmp &= ~(GPIO_MODER_MODE0 << (pin_position * GPIO_MODER_MODE1_Pos));
 8004d0c:	ea04 0409 	and.w	r4, r4, r9
        tmp |= ((pGPIO_Init->Mode & GPIO_MODE) << (pin_position * GPIO_MODER_MODE1_Pos));
 8004d10:	ea44 040c 	orr.w	r4, r4, ip
        p_gpio->MODER = tmp;
 8004d14:	601c      	str	r4, [r3, #0]
    pin_position = position;
 8004d16:	4614      	mov	r4, r2
 8004d18:	e74f      	b.n	8004bba <HAL_GPIO_Init+0xaa>
 8004d1a:	bf00      	nop
 8004d1c:	002f7f7f 	.word	0x002f7f7f
 8004d20:	080358b4 	.word	0x080358b4
 8004d24:	46022000 	.word	0x46022000
 8004d28:	46020000 	.word	0x46020000

08004d2c <HAL_GPIO_ReadPin>:
  GPIO_PinState bitstatus;

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  if ((GPIOx->IDR & GPIO_Pin) != 0U)
 8004d2c:	6903      	ldr	r3, [r0, #16]
 8004d2e:	4219      	tst	r1, r3
  {
    bitstatus = GPIO_PIN_RESET;
  }

  return bitstatus;
}
 8004d30:	bf14      	ite	ne
 8004d32:	2001      	movne	r0, #1
 8004d34:	2000      	moveq	r0, #0
 8004d36:	4770      	bx	lr

08004d38 <HAL_GPIO_WritePin>:
{
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if (PinState != GPIO_PIN_RESET)
 8004d38:	b10a      	cbz	r2, 8004d3e <HAL_GPIO_WritePin+0x6>
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin;
 8004d3a:	6181      	str	r1, [r0, #24]
 8004d3c:	4770      	bx	lr
  }
  else
  {
    GPIOx->BRR  = (uint32_t)GPIO_Pin;
 8004d3e:	6281      	str	r1, [r0, #40]	@ 0x28
  }
}
 8004d40:	4770      	bx	lr

08004d42 <HAL_GPIO_TogglePin>:

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  /* get current Output Data Register value */
  odr = GPIOx->ODR;
 8004d42:	6943      	ldr	r3, [r0, #20]

  /* Set selected pins that were at low level, and reset ones that were high */
  GPIOx->BSRR = ((odr & GPIO_Pin) << GPIO_NUMBER) | (~odr & GPIO_Pin);
 8004d44:	ea01 0203 	and.w	r2, r1, r3
 8004d48:	ea21 0103 	bic.w	r1, r1, r3
 8004d4c:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
 8004d50:	6181      	str	r1, [r0, #24]
}
 8004d52:	4770      	bx	lr

08004d54 <HAL_GPIO_EXTI_Rising_Callback>:
  UNUSED(GPIO_Pin);

  /* NOTE: This function should not be modified, when the callback is needed,
           the HAL_GPIO_EXTI_Rising_Callback could be implemented in the user file
   */
}
 8004d54:	4770      	bx	lr
	...

08004d58 <HAL_GPIO_EXTI_IRQHandler>:
{
 8004d58:	b538      	push	{r3, r4, r5, lr}
  if (__HAL_GPIO_EXTI_GET_RISING_IT(GPIO_Pin) != 0U)
 8004d5a:	4d08      	ldr	r5, [pc, #32]	@ (8004d7c <HAL_GPIO_EXTI_IRQHandler+0x24>)
{
 8004d5c:	4604      	mov	r4, r0
  if (__HAL_GPIO_EXTI_GET_RISING_IT(GPIO_Pin) != 0U)
 8004d5e:	68eb      	ldr	r3, [r5, #12]
 8004d60:	4203      	tst	r3, r0
 8004d62:	d002      	beq.n	8004d6a <HAL_GPIO_EXTI_IRQHandler+0x12>
    __HAL_GPIO_EXTI_CLEAR_RISING_IT(GPIO_Pin);
 8004d64:	60e8      	str	r0, [r5, #12]
    HAL_GPIO_EXTI_Rising_Callback(GPIO_Pin);
 8004d66:	f7ff fff5 	bl	8004d54 <HAL_GPIO_EXTI_Rising_Callback>
  if (__HAL_GPIO_EXTI_GET_FALLING_IT(GPIO_Pin) != 0U)
 8004d6a:	692b      	ldr	r3, [r5, #16]
 8004d6c:	421c      	tst	r4, r3
 8004d6e:	d003      	beq.n	8004d78 <HAL_GPIO_EXTI_IRQHandler+0x20>
    HAL_GPIO_EXTI_Falling_Callback(GPIO_Pin);
 8004d70:	4620      	mov	r0, r4
    __HAL_GPIO_EXTI_CLEAR_FALLING_IT(GPIO_Pin);
 8004d72:	612c      	str	r4, [r5, #16]
    HAL_GPIO_EXTI_Falling_Callback(GPIO_Pin);
 8004d74:	f7fc f9e2 	bl	800113c <HAL_GPIO_EXTI_Falling_Callback>
}
 8004d78:	bd38      	pop	{r3, r4, r5, pc}
 8004d7a:	bf00      	nop
 8004d7c:	46022000 	.word	0x46022000

08004d80 <HAL_GPU2D_Init>:
  * @param  hgpu2d pointer to a GPU2D_HandleTypeDef structure that contains
  *                the configuration information for the GPU2D.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_GPU2D_Init(GPU2D_HandleTypeDef *hgpu2d)
{
 8004d80:	b510      	push	{r4, lr}
  /* Check the GPU2D handle validity */
  if (hgpu2d == NULL)
 8004d82:	4604      	mov	r4, r0
 8004d84:	b170      	cbz	r0, 8004da4 <HAL_GPU2D_Init+0x24>
  }

  /* Check the parameters */
  assert_param(IS_GPU2D_ALL_INSTANCE(hgpu2d->Instance));

  if (hgpu2d->State == HAL_GPU2D_STATE_RESET)
 8004d86:	7943      	ldrb	r3, [r0, #5]
 8004d88:	b93b      	cbnz	r3, 8004d9a <HAL_GPU2D_Init+0x1a>

    /* Init the low level hardware */
    hgpu2d->MspInitCallback(hgpu2d);
#else /* USE_HAL_GPU2D_REGISTER_CALLBACKS = 0 */
    /* Init the low level hardware */
    HAL_GPU2D_MspInit(hgpu2d);
 8004d8a:	f7fb fdad 	bl	80008e8 <HAL_GPU2D_MspInit>
  /* Reset the CommandListCpltCallback handler */
  hgpu2d->CommandListCpltCallback = NULL;
#endif /* USE_HAL_GPU2D_REGISTER_CALLBACKS = 1 */

  /* Update error code */
  hgpu2d->ErrorCode = HAL_GPU2D_ERROR_NONE;
 8004d8e:	2000      	movs	r0, #0

  /* Initialize the GPU2D state*/
  hgpu2d->State = HAL_GPU2D_STATE_READY;

  /* Release Lock */
  __HAL_UNLOCK(hgpu2d);
 8004d90:	f44f 7380 	mov.w	r3, #256	@ 0x100
  hgpu2d->ErrorCode = HAL_GPU2D_ERROR_NONE;
 8004d94:	60a0      	str	r0, [r4, #8]
  __HAL_UNLOCK(hgpu2d);
 8004d96:	80a3      	strh	r3, [r4, #4]

  return HAL_OK;
}
 8004d98:	bd10      	pop	{r4, pc}
  __HAL_LOCK(hgpu2d);
 8004d9a:	7903      	ldrb	r3, [r0, #4]
 8004d9c:	2b01      	cmp	r3, #1
 8004d9e:	d1f6      	bne.n	8004d8e <HAL_GPU2D_Init+0xe>
 8004da0:	2002      	movs	r0, #2
 8004da2:	e7f9      	b.n	8004d98 <HAL_GPU2D_Init+0x18>
    return HAL_ERROR;
 8004da4:	2001      	movs	r0, #1
 8004da6:	e7f7      	b.n	8004d98 <HAL_GPU2D_Init+0x18>

08004da8 <HAL_GPU2D_ReadRegister>:
  assert_param(IS_GPU2D_ALL_INSTANCE(hgpu2d->Instance));
  assert_param(IS_GPU2D_OFFSET(offset));

  /* No locking is required since reading a register is an atomic operation
   * and doesn't incur a state change in hal_gpu2d. */
  value = GPU2D_ReadReg(hgpu2d->Instance, offset);
 8004da8:	6803      	ldr	r3, [r0, #0]
 8004daa:	58c8      	ldr	r0, [r1, r3]

  return value;
}
 8004dac:	4770      	bx	lr

08004dae <HAL_GPU2D_WriteRegister>:
  assert_param(IS_GPU2D_ALL_INSTANCE(hgpu2d->Instance));
  assert_param(IS_GPU2D_OFFSET(offset));

  /* No locking is required since writing a register is an atomic operation
   * and doesn't incur a state change in hal_gpu2d. */
  GPU2D_WriteReg(hgpu2d->Instance, offset, value);
 8004dae:	6803      	ldr	r3, [r0, #0]

  return HAL_OK;
}
 8004db0:	2000      	movs	r0, #0
  GPU2D_WriteReg(hgpu2d->Instance, offset, value);
 8004db2:	50ca      	str	r2, [r1, r3]
}
 8004db4:	4770      	bx	lr

08004db6 <HAL_GPU2D_IRQHandler>:
  *                the configuration information for the GPU2D.
  * @retval None
  */
void HAL_GPU2D_IRQHandler(GPU2D_HandleTypeDef *hgpu2d)
{
  uint32_t isr_flags = GPU2D_ReadReg(hgpu2d->Instance, GPU2D_ITCTRL);
 8004db6:	6802      	ldr	r2, [r0, #0]
{
 8004db8:	b508      	push	{r3, lr}
  uint32_t isr_flags = GPU2D_ReadReg(hgpu2d->Instance, GPU2D_ITCTRL);
 8004dba:	f8d2 10f8 	ldr.w	r1, [r2, #248]	@ 0xf8

  /* Command List Complete Interrupt management */
  if ((isr_flags & GPU2D_FLAG_CLC) != 0U)
 8004dbe:	07c9      	lsls	r1, r1, #31
 8004dc0:	d50a      	bpl.n	8004dd8 <HAL_GPU2D_IRQHandler+0x22>
  {
    uint32_t last_cl_id;

    /* Clear the completion flag */
    __HAL_GPU2D_CLEAR_FLAG(hgpu2d, GPU2D_FLAG_CLC);
 8004dc2:	f8d2 10f8 	ldr.w	r1, [r2, #248]	@ 0xf8
 8004dc6:	f021 0101 	bic.w	r1, r1, #1
 8004dca:	f8c2 10f8 	str.w	r1, [r2, #248]	@ 0xf8

    last_cl_id = GPU2D_ReadReg(hgpu2d->Instance, GPU2D_CLID);
 8004dce:	6803      	ldr	r3, [r0, #0]
 8004dd0:	f8d3 1148 	ldr.w	r1, [r3, #328]	@ 0x148
    if (hgpu2d->CommandListCpltCallback != NULL)
    {
      hgpu2d->CommandListCpltCallback(hgpu2d, last_cl_id);
    }
#else /* USE_HAL_GPU2D_REGISTER_CALLBACKS = 0 */
    HAL_GPU2D_CommandListCpltCallback(hgpu2d, last_cl_id);
 8004dd4:	f7fd ff8e 	bl	8002cf4 <HAL_GPU2D_CommandListCpltCallback>
#endif /* USE_HAL_GPU2D_REGISTER_CALLBACKS = 1 */
  }
}
 8004dd8:	bd08      	pop	{r3, pc}

08004dda <HAL_GPU2D_ErrorCallback>:
            the HAL_GPU2D_ErrorCallback can be implemented in the user file.
            The default implementation stops the execution as an error is considered
            fatal and non recoverable.
   */

  for (;;)
 8004dda:	e7fe      	b.n	8004dda <HAL_GPU2D_ErrorCallback>

08004ddc <HAL_GPU2D_ER_IRQHandler>:
{
 8004ddc:	b508      	push	{r3, lr}
  HAL_GPU2D_ErrorCallback(hgpu2d);
 8004dde:	f7ff fffc 	bl	8004dda <HAL_GPU2D_ErrorCallback>
}
 8004de2:	bd08      	pop	{r3, pc}

08004de4 <I2C_Flush_TXDR>:
  */
static void I2C_Flush_TXDR(I2C_HandleTypeDef *hi2c)
{
  /* If a pending TXIS flag is set */
  /* Write a dummy data in TXDR to clear it */
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) != RESET)
 8004de4:	6803      	ldr	r3, [r0, #0]
 8004de6:	699a      	ldr	r2, [r3, #24]
 8004de8:	0791      	lsls	r1, r2, #30
  {
    hi2c->Instance->TXDR = 0x00U;
 8004dea:	bf44      	itt	mi
 8004dec:	2200      	movmi	r2, #0
 8004dee:	629a      	strmi	r2, [r3, #40]	@ 0x28
  }

  /* Flush TX register if not empty */
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8004df0:	699a      	ldr	r2, [r3, #24]
 8004df2:	07d2      	lsls	r2, r2, #31
  {
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_TXE);
 8004df4:	bf5e      	ittt	pl
 8004df6:	699a      	ldrpl	r2, [r3, #24]
 8004df8:	f042 0201 	orrpl.w	r2, r2, #1
 8004dfc:	619a      	strpl	r2, [r3, #24]
  }
}
 8004dfe:	4770      	bx	lr

08004e00 <I2C_TransferConfig>:
  *     @arg @ref I2C_GENERATE_START_WRITE Generate Restart for write request.
  * @retval None
  */
static void I2C_TransferConfig(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint8_t Size, uint32_t Mode,
                               uint32_t Request)
{
 8004e00:	b530      	push	{r4, r5, lr}
 8004e02:	9d03      	ldr	r5, [sp, #12]
  uint32_t tmp = ((uint32_t)(((uint32_t)DevAddress & I2C_CR2_SADD) | \
                             (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
                             (uint32_t)Mode | (uint32_t)Request) & (~0x80000000U));

  /* update CR2 register */
  MODIFY_REG(hi2c->Instance->CR2, \
 8004e04:	6804      	ldr	r4, [r0, #0]
  uint32_t tmp = ((uint32_t)(((uint32_t)DevAddress & I2C_CR2_SADD) | \
 8004e06:	432b      	orrs	r3, r5
 8004e08:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
  MODIFY_REG(hi2c->Instance->CR2, \
 8004e0c:	4a06      	ldr	r2, [pc, #24]	@ (8004e28 <I2C_TransferConfig+0x28>)
 8004e0e:	6860      	ldr	r0, [r4, #4]
  uint32_t tmp = ((uint32_t)(((uint32_t)DevAddress & I2C_CR2_SADD) | \
 8004e10:	f3c1 0109 	ubfx	r1, r1, #0, #10
 8004e14:	430b      	orrs	r3, r1
  MODIFY_REG(hi2c->Instance->CR2, \
 8004e16:	ea42 5255 	orr.w	r2, r2, r5, lsr #21
  uint32_t tmp = ((uint32_t)(((uint32_t)DevAddress & I2C_CR2_SADD) | \
 8004e1a:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
  MODIFY_REG(hi2c->Instance->CR2, \
 8004e1e:	ea20 0002 	bic.w	r0, r0, r2
 8004e22:	4303      	orrs	r3, r0
 8004e24:	6063      	str	r3, [r4, #4]
             ((I2C_CR2_SADD | I2C_CR2_NBYTES | I2C_CR2_RELOAD | I2C_CR2_AUTOEND | \
               (I2C_CR2_RD_WRN & (uint32_t)(Request >> (31U - I2C_CR2_RD_WRN_Pos))) | \
               I2C_CR2_START | I2C_CR2_STOP)), tmp);
}
 8004e26:	bd30      	pop	{r4, r5, pc}
 8004e28:	03ff63ff 	.word	0x03ff63ff

08004e2c <I2C_IsErrorOccurred>:
  uint32_t itflag   = hi2c->Instance->ISR;
 8004e2c:	6803      	ldr	r3, [r0, #0]
{
 8004e2e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  uint32_t itflag   = hi2c->Instance->ISR;
 8004e32:	699c      	ldr	r4, [r3, #24]
{
 8004e34:	4605      	mov	r5, r0
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_AF))
 8004e36:	f014 0410 	ands.w	r4, r4, #16
{
 8004e3a:	460f      	mov	r7, r1
 8004e3c:	4616      	mov	r6, r2
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_AF))
 8004e3e:	d06f      	beq.n	8004f20 <I2C_IsErrorOccurred+0xf4>
  uint32_t error_code = 0;
 8004e40:	2400      	movs	r4, #0
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8004e42:	2210      	movs	r2, #16
  HAL_StatusTypeDef status = HAL_OK;
 8004e44:	46a0      	mov	r8, r4
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8004e46:	61da      	str	r2, [r3, #28]
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
 8004e48:	682b      	ldr	r3, [r5, #0]
 8004e4a:	699a      	ldr	r2, [r3, #24]
 8004e4c:	0690      	lsls	r0, r2, #26
 8004e4e:	d461      	bmi.n	8004f14 <I2C_IsErrorOccurred+0xe8>
 8004e50:	f1b8 0f00 	cmp.w	r8, #0
 8004e54:	d035      	beq.n	8004ec2 <I2C_IsErrorOccurred+0x96>
    status = HAL_ERROR;
 8004e56:	2001      	movs	r0, #1
    error_code |= HAL_I2C_ERROR_AF;
 8004e58:	f044 0404 	orr.w	r4, r4, #4
  itflag = hi2c->Instance->ISR;
 8004e5c:	682e      	ldr	r6, [r5, #0]
 8004e5e:	69b3      	ldr	r3, [r6, #24]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_BERR))
 8004e60:	05d9      	lsls	r1, r3, #23
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_BERR);
 8004e62:	bf41      	itttt	mi
 8004e64:	f44f 7280 	movmi.w	r2, #256	@ 0x100
    status = HAL_ERROR;
 8004e68:	2001      	movmi	r0, #1
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_BERR);
 8004e6a:	61f2      	strmi	r2, [r6, #28]
    error_code |= HAL_I2C_ERROR_BERR;
 8004e6c:	f044 0401 	orrmi.w	r4, r4, #1
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
 8004e70:	055a      	lsls	r2, r3, #21
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_OVR);
 8004e72:	bf41      	itttt	mi
 8004e74:	f44f 6280 	movmi.w	r2, #1024	@ 0x400
    status = HAL_ERROR;
 8004e78:	2001      	movmi	r0, #1
    error_code |= HAL_I2C_ERROR_OVR;
 8004e7a:	f044 0408 	orrmi.w	r4, r4, #8
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_OVR);
 8004e7e:	61f2      	strmi	r2, [r6, #28]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_ARLO))
 8004e80:	059b      	lsls	r3, r3, #22
 8004e82:	d54f      	bpl.n	8004f24 <I2C_IsErrorOccurred+0xf8>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ARLO);
 8004e84:	f44f 7300 	mov.w	r3, #512	@ 0x200
    error_code |= HAL_I2C_ERROR_ARLO;
 8004e88:	f044 0402 	orr.w	r4, r4, #2
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ARLO);
 8004e8c:	61f3      	str	r3, [r6, #28]
    I2C_Flush_TXDR(hi2c);
 8004e8e:	4628      	mov	r0, r5
 8004e90:	f7ff ffa8 	bl	8004de4 <I2C_Flush_TXDR>
    I2C_RESET_CR2(hi2c);
 8004e94:	6873      	ldr	r3, [r6, #4]
    __HAL_UNLOCK(hi2c);
 8004e96:	2001      	movs	r0, #1
    I2C_RESET_CR2(hi2c);
 8004e98:	f023 73ff 	bic.w	r3, r3, #33423360	@ 0x1fe0000
 8004e9c:	f423 338b 	bic.w	r3, r3, #71168	@ 0x11600
 8004ea0:	f423 73ff 	bic.w	r3, r3, #510	@ 0x1fe
 8004ea4:	f023 0301 	bic.w	r3, r3, #1
 8004ea8:	6073      	str	r3, [r6, #4]
    hi2c->ErrorCode |= error_code;
 8004eaa:	6c6b      	ldr	r3, [r5, #68]	@ 0x44
 8004eac:	4323      	orrs	r3, r4
 8004eae:	646b      	str	r3, [r5, #68]	@ 0x44
    hi2c->State = HAL_I2C_STATE_READY;
 8004eb0:	2320      	movs	r3, #32
 8004eb2:	f885 3041 	strb.w	r3, [r5, #65]	@ 0x41
    hi2c->Mode = HAL_I2C_MODE_NONE;
 8004eb6:	2300      	movs	r3, #0
 8004eb8:	f885 3042 	strb.w	r3, [r5, #66]	@ 0x42
    __HAL_UNLOCK(hi2c);
 8004ebc:	f885 3040 	strb.w	r3, [r5, #64]	@ 0x40
 8004ec0:	e032      	b.n	8004f28 <I2C_IsErrorOccurred+0xfc>
      if (Timeout != HAL_MAX_DELAY)
 8004ec2:	1c7a      	adds	r2, r7, #1
 8004ec4:	d0c1      	beq.n	8004e4a <I2C_IsErrorOccurred+0x1e>
        if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
 8004ec6:	f7ff f84d 	bl	8003f64 <HAL_GetTick>
 8004eca:	1b80      	subs	r0, r0, r6
 8004ecc:	42b8      	cmp	r0, r7
 8004ece:	d801      	bhi.n	8004ed4 <I2C_IsErrorOccurred+0xa8>
 8004ed0:	2f00      	cmp	r7, #0
 8004ed2:	d1b9      	bne.n	8004e48 <I2C_IsErrorOccurred+0x1c>
          tmp1 = (uint32_t)(hi2c->Instance->CR2 & I2C_CR2_STOP);
 8004ed4:	682b      	ldr	r3, [r5, #0]
 8004ed6:	6859      	ldr	r1, [r3, #4]
          tmp2 = hi2c->Mode;
 8004ed8:	f895 2042 	ldrb.w	r2, [r5, #66]	@ 0x42
          if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) != RESET) && \
 8004edc:	6998      	ldr	r0, [r3, #24]
          tmp2 = hi2c->Mode;
 8004ede:	b2d2      	uxtb	r2, r2
          if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) != RESET) && \
 8004ee0:	0400      	lsls	r0, r0, #16
 8004ee2:	d50a      	bpl.n	8004efa <I2C_IsErrorOccurred+0xce>
 8004ee4:	0449      	lsls	r1, r1, #17
 8004ee6:	d408      	bmi.n	8004efa <I2C_IsErrorOccurred+0xce>
              (tmp1 != I2C_CR2_STOP) && \
 8004ee8:	2a20      	cmp	r2, #32
 8004eea:	d006      	beq.n	8004efa <I2C_IsErrorOccurred+0xce>
            hi2c->Instance->CR2 |= I2C_CR2_STOP;
 8004eec:	685a      	ldr	r2, [r3, #4]
 8004eee:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
 8004ef2:	605a      	str	r2, [r3, #4]
            tickstart = HAL_GetTick();
 8004ef4:	f7ff f836 	bl	8003f64 <HAL_GetTick>
 8004ef8:	4606      	mov	r6, r0
          while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
 8004efa:	682b      	ldr	r3, [r5, #0]
 8004efc:	699b      	ldr	r3, [r3, #24]
 8004efe:	069b      	lsls	r3, r3, #26
 8004f00:	d4a2      	bmi.n	8004e48 <I2C_IsErrorOccurred+0x1c>
            if ((HAL_GetTick() - tickstart) > I2C_TIMEOUT_STOPF)
 8004f02:	f7ff f82f 	bl	8003f64 <HAL_GetTick>
 8004f06:	1b80      	subs	r0, r0, r6
 8004f08:	2819      	cmp	r0, #25
 8004f0a:	d9f6      	bls.n	8004efa <I2C_IsErrorOccurred+0xce>
              error_code |= HAL_I2C_ERROR_TIMEOUT;
 8004f0c:	2420      	movs	r4, #32
              status = HAL_ERROR;
 8004f0e:	f04f 0801 	mov.w	r8, #1
 8004f12:	e799      	b.n	8004e48 <I2C_IsErrorOccurred+0x1c>
    if (status == HAL_OK)
 8004f14:	f1b8 0f00 	cmp.w	r8, #0
 8004f18:	d19d      	bne.n	8004e56 <I2C_IsErrorOccurred+0x2a>
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 8004f1a:	2220      	movs	r2, #32
 8004f1c:	61da      	str	r2, [r3, #28]
 8004f1e:	e79a      	b.n	8004e56 <I2C_IsErrorOccurred+0x2a>
  HAL_StatusTypeDef status = HAL_OK;
 8004f20:	4620      	mov	r0, r4
 8004f22:	e79b      	b.n	8004e5c <I2C_IsErrorOccurred+0x30>
  if (status != HAL_OK)
 8004f24:	2800      	cmp	r0, #0
 8004f26:	d1b2      	bne.n	8004e8e <I2C_IsErrorOccurred+0x62>
}
 8004f28:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08004f2c <I2C_WaitOnTXISFlagUntilTimeout>:
{
 8004f2c:	b570      	push	{r4, r5, r6, lr}
 8004f2e:	4604      	mov	r4, r0
 8004f30:	460d      	mov	r5, r1
 8004f32:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) == RESET)
 8004f34:	6823      	ldr	r3, [r4, #0]
 8004f36:	699b      	ldr	r3, [r3, #24]
 8004f38:	079b      	lsls	r3, r3, #30
 8004f3a:	d501      	bpl.n	8004f40 <I2C_WaitOnTXISFlagUntilTimeout+0x14>
  return HAL_OK;
 8004f3c:	2000      	movs	r0, #0
 8004f3e:	e01f      	b.n	8004f80 <I2C_WaitOnTXISFlagUntilTimeout+0x54>
    if (I2C_IsErrorOccurred(hi2c, Timeout, Tickstart) != HAL_OK)
 8004f40:	4632      	mov	r2, r6
 8004f42:	4629      	mov	r1, r5
 8004f44:	4620      	mov	r0, r4
 8004f46:	f7ff ff71 	bl	8004e2c <I2C_IsErrorOccurred>
 8004f4a:	b9c0      	cbnz	r0, 8004f7e <I2C_WaitOnTXISFlagUntilTimeout+0x52>
    if (Timeout != HAL_MAX_DELAY)
 8004f4c:	1c6a      	adds	r2, r5, #1
 8004f4e:	d0f1      	beq.n	8004f34 <I2C_WaitOnTXISFlagUntilTimeout+0x8>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8004f50:	f7ff f808 	bl	8003f64 <HAL_GetTick>
 8004f54:	1b80      	subs	r0, r0, r6
 8004f56:	42a8      	cmp	r0, r5
 8004f58:	d801      	bhi.n	8004f5e <I2C_WaitOnTXISFlagUntilTimeout+0x32>
 8004f5a:	2d00      	cmp	r5, #0
 8004f5c:	d1ea      	bne.n	8004f34 <I2C_WaitOnTXISFlagUntilTimeout+0x8>
        if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) == RESET))
 8004f5e:	6823      	ldr	r3, [r4, #0]
 8004f60:	699b      	ldr	r3, [r3, #24]
 8004f62:	f013 0302 	ands.w	r3, r3, #2
 8004f66:	d1e5      	bne.n	8004f34 <I2C_WaitOnTXISFlagUntilTimeout+0x8>
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 8004f68:	6c62      	ldr	r2, [r4, #68]	@ 0x44
          __HAL_UNLOCK(hi2c);
 8004f6a:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 8004f6e:	f042 0220 	orr.w	r2, r2, #32
 8004f72:	6462      	str	r2, [r4, #68]	@ 0x44
          hi2c->State = HAL_I2C_STATE_READY;
 8004f74:	2220      	movs	r2, #32
 8004f76:	f884 2041 	strb.w	r2, [r4, #65]	@ 0x41
          hi2c->Mode = HAL_I2C_MODE_NONE;
 8004f7a:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
      return HAL_ERROR;
 8004f7e:	2001      	movs	r0, #1
}
 8004f80:	bd70      	pop	{r4, r5, r6, pc}

08004f82 <I2C_WaitOnFlagUntilTimeout>:
{
 8004f82:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8004f86:	4604      	mov	r4, r0
 8004f88:	460f      	mov	r7, r1
 8004f8a:	4616      	mov	r6, r2
 8004f8c:	461d      	mov	r5, r3
 8004f8e:	f8dd 8018 	ldr.w	r8, [sp, #24]
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8004f92:	6823      	ldr	r3, [r4, #0]
 8004f94:	699b      	ldr	r3, [r3, #24]
 8004f96:	ea37 0303 	bics.w	r3, r7, r3
 8004f9a:	bf0c      	ite	eq
 8004f9c:	2301      	moveq	r3, #1
 8004f9e:	2300      	movne	r3, #0
 8004fa0:	42b3      	cmp	r3, r6
 8004fa2:	d001      	beq.n	8004fa8 <I2C_WaitOnFlagUntilTimeout+0x26>
  return HAL_OK;
 8004fa4:	2000      	movs	r0, #0
 8004fa6:	e025      	b.n	8004ff4 <I2C_WaitOnFlagUntilTimeout+0x72>
    if (I2C_IsErrorOccurred(hi2c, Timeout, Tickstart) != HAL_OK)
 8004fa8:	4642      	mov	r2, r8
 8004faa:	4629      	mov	r1, r5
 8004fac:	4620      	mov	r0, r4
 8004fae:	f7ff ff3d 	bl	8004e2c <I2C_IsErrorOccurred>
 8004fb2:	b9f0      	cbnz	r0, 8004ff2 <I2C_WaitOnFlagUntilTimeout+0x70>
    if (Timeout != HAL_MAX_DELAY)
 8004fb4:	1c6b      	adds	r3, r5, #1
 8004fb6:	d0ec      	beq.n	8004f92 <I2C_WaitOnFlagUntilTimeout+0x10>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8004fb8:	f7fe ffd4 	bl	8003f64 <HAL_GetTick>
 8004fbc:	eba0 0008 	sub.w	r0, r0, r8
 8004fc0:	42a8      	cmp	r0, r5
 8004fc2:	d801      	bhi.n	8004fc8 <I2C_WaitOnFlagUntilTimeout+0x46>
 8004fc4:	2d00      	cmp	r5, #0
 8004fc6:	d1e4      	bne.n	8004f92 <I2C_WaitOnFlagUntilTimeout+0x10>
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
 8004fc8:	6823      	ldr	r3, [r4, #0]
 8004fca:	699b      	ldr	r3, [r3, #24]
 8004fcc:	ea37 0303 	bics.w	r3, r7, r3
 8004fd0:	bf0c      	ite	eq
 8004fd2:	2301      	moveq	r3, #1
 8004fd4:	2300      	movne	r3, #0
 8004fd6:	42b3      	cmp	r3, r6
 8004fd8:	d1db      	bne.n	8004f92 <I2C_WaitOnFlagUntilTimeout+0x10>
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 8004fda:	6c63      	ldr	r3, [r4, #68]	@ 0x44
 8004fdc:	f043 0320 	orr.w	r3, r3, #32
 8004fe0:	6463      	str	r3, [r4, #68]	@ 0x44
          hi2c->State = HAL_I2C_STATE_READY;
 8004fe2:	2320      	movs	r3, #32
 8004fe4:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
          hi2c->Mode = HAL_I2C_MODE_NONE;
 8004fe8:	2300      	movs	r3, #0
 8004fea:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
          __HAL_UNLOCK(hi2c);
 8004fee:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
      return HAL_ERROR;
 8004ff2:	2001      	movs	r0, #1
}
 8004ff4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08004ff8 <I2C_WaitOnSTOPFlagUntilTimeout>:
{
 8004ff8:	b570      	push	{r4, r5, r6, lr}
 8004ffa:	4604      	mov	r4, r0
 8004ffc:	460d      	mov	r5, r1
 8004ffe:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
 8005000:	6823      	ldr	r3, [r4, #0]
 8005002:	699b      	ldr	r3, [r3, #24]
 8005004:	069b      	lsls	r3, r3, #26
 8005006:	d501      	bpl.n	800500c <I2C_WaitOnSTOPFlagUntilTimeout+0x14>
  return HAL_OK;
 8005008:	2000      	movs	r0, #0
 800500a:	e01d      	b.n	8005048 <I2C_WaitOnSTOPFlagUntilTimeout+0x50>
    if (I2C_IsErrorOccurred(hi2c, Timeout, Tickstart) != HAL_OK)
 800500c:	4632      	mov	r2, r6
 800500e:	4629      	mov	r1, r5
 8005010:	4620      	mov	r0, r4
 8005012:	f7ff ff0b 	bl	8004e2c <I2C_IsErrorOccurred>
 8005016:	b9b0      	cbnz	r0, 8005046 <I2C_WaitOnSTOPFlagUntilTimeout+0x4e>
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8005018:	f7fe ffa4 	bl	8003f64 <HAL_GetTick>
 800501c:	1b80      	subs	r0, r0, r6
 800501e:	42a8      	cmp	r0, r5
 8005020:	d801      	bhi.n	8005026 <I2C_WaitOnSTOPFlagUntilTimeout+0x2e>
 8005022:	2d00      	cmp	r5, #0
 8005024:	d1ec      	bne.n	8005000 <I2C_WaitOnSTOPFlagUntilTimeout+0x8>
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET))
 8005026:	6823      	ldr	r3, [r4, #0]
 8005028:	699b      	ldr	r3, [r3, #24]
 800502a:	f013 0320 	ands.w	r3, r3, #32
 800502e:	d1e7      	bne.n	8005000 <I2C_WaitOnSTOPFlagUntilTimeout+0x8>
        hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 8005030:	6c62      	ldr	r2, [r4, #68]	@ 0x44
        __HAL_UNLOCK(hi2c);
 8005032:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
        hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 8005036:	f042 0220 	orr.w	r2, r2, #32
 800503a:	6462      	str	r2, [r4, #68]	@ 0x44
        hi2c->State = HAL_I2C_STATE_READY;
 800503c:	2220      	movs	r2, #32
 800503e:	f884 2041 	strb.w	r2, [r4, #65]	@ 0x41
        hi2c->Mode = HAL_I2C_MODE_NONE;
 8005042:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
      return HAL_ERROR;
 8005046:	2001      	movs	r0, #1
}
 8005048:	bd70      	pop	{r4, r5, r6, pc}

0800504a <HAL_I2C_Init>:
{
 800504a:	b510      	push	{r4, lr}
  if (hi2c == NULL)
 800504c:	4604      	mov	r4, r0
 800504e:	2800      	cmp	r0, #0
 8005050:	d04e      	beq.n	80050f0 <HAL_I2C_Init+0xa6>
  if (hi2c->State == HAL_I2C_STATE_RESET)
 8005052:	f890 3041 	ldrb.w	r3, [r0, #65]	@ 0x41
 8005056:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 800505a:	b91b      	cbnz	r3, 8005064 <HAL_I2C_Init+0x1a>
    hi2c->Lock = HAL_UNLOCKED;
 800505c:	f880 2040 	strb.w	r2, [r0, #64]	@ 0x40
    HAL_I2C_MspInit(hi2c);
 8005060:	f7fb fcf6 	bl	8000a50 <HAL_I2C_MspInit>
  hi2c->State = HAL_I2C_STATE_BUSY;
 8005064:	2324      	movs	r3, #36	@ 0x24
 8005066:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
  __HAL_I2C_DISABLE(hi2c);
 800506a:	6823      	ldr	r3, [r4, #0]
 800506c:	681a      	ldr	r2, [r3, #0]
 800506e:	f022 0201 	bic.w	r2, r2, #1
 8005072:	601a      	str	r2, [r3, #0]
  hi2c->Instance->TIMINGR = hi2c->Init.Timing & TIMING_CLEAR_MASK;
 8005074:	6862      	ldr	r2, [r4, #4]
 8005076:	f022 6270 	bic.w	r2, r2, #251658240	@ 0xf000000
 800507a:	611a      	str	r2, [r3, #16]
  hi2c->Instance->OAR1 &= ~I2C_OAR1_OA1EN;
 800507c:	689a      	ldr	r2, [r3, #8]
 800507e:	f422 4200 	bic.w	r2, r2, #32768	@ 0x8000
 8005082:	609a      	str	r2, [r3, #8]
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | hi2c->Init.OwnAddress1);
 8005084:	e9d4 2102 	ldrd	r2, r1, [r4, #8]
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
 8005088:	2901      	cmp	r1, #1
 800508a:	d106      	bne.n	800509a <HAL_I2C_Init+0x50>
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | hi2c->Init.OwnAddress1);
 800508c:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 8005090:	609a      	str	r2, [r3, #8]
    CLEAR_BIT(hi2c->Instance->CR2, I2C_CR2_ADD10);
 8005092:	685a      	ldr	r2, [r3, #4]
 8005094:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 8005098:	e007      	b.n	80050aa <HAL_I2C_Init+0x60>
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | I2C_OAR1_OA1MODE | hi2c->Init.OwnAddress1);
 800509a:	f442 4204 	orr.w	r2, r2, #33792	@ 0x8400
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_10BIT)
 800509e:	2902      	cmp	r1, #2
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | I2C_OAR1_OA1MODE | hi2c->Init.OwnAddress1);
 80050a0:	609a      	str	r2, [r3, #8]
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_10BIT)
 80050a2:	d1f6      	bne.n	8005092 <HAL_I2C_Init+0x48>
    SET_BIT(hi2c->Instance->CR2, I2C_CR2_ADD10);
 80050a4:	685a      	ldr	r2, [r3, #4]
 80050a6:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
    CLEAR_BIT(hi2c->Instance->CR2, I2C_CR2_ADD10);
 80050aa:	605a      	str	r2, [r3, #4]
  hi2c->Instance->CR2 |= (I2C_CR2_AUTOEND | I2C_CR2_NACK);
 80050ac:	685a      	ldr	r2, [r3, #4]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 80050ae:	2000      	movs	r0, #0
  hi2c->Instance->CR2 |= (I2C_CR2_AUTOEND | I2C_CR2_NACK);
 80050b0:	f042 7200 	orr.w	r2, r2, #33554432	@ 0x2000000
 80050b4:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 80050b8:	605a      	str	r2, [r3, #4]
  hi2c->Instance->OAR2 &= ~I2C_DUALADDRESS_ENABLE;
 80050ba:	68da      	ldr	r2, [r3, #12]
 80050bc:	f422 4200 	bic.w	r2, r2, #32768	@ 0x8000
 80050c0:	60da      	str	r2, [r3, #12]
  hi2c->Instance->OAR2 = (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2 | \
 80050c2:	e9d4 2104 	ldrd	r2, r1, [r4, #16]
 80050c6:	430a      	orrs	r2, r1
                          (hi2c->Init.OwnAddress2Masks << 8));
 80050c8:	69a1      	ldr	r1, [r4, #24]
  hi2c->Instance->OAR2 = (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2 | \
 80050ca:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 80050ce:	60da      	str	r2, [r3, #12]
  hi2c->Instance->CR1 = (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode);
 80050d0:	e9d4 2107 	ldrd	r2, r1, [r4, #28]
 80050d4:	430a      	orrs	r2, r1
 80050d6:	601a      	str	r2, [r3, #0]
  __HAL_I2C_ENABLE(hi2c);
 80050d8:	681a      	ldr	r2, [r3, #0]
 80050da:	f042 0201 	orr.w	r2, r2, #1
 80050de:	601a      	str	r2, [r3, #0]
  hi2c->State = HAL_I2C_STATE_READY;
 80050e0:	2320      	movs	r3, #32
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 80050e2:	6460      	str	r0, [r4, #68]	@ 0x44
  hi2c->State = HAL_I2C_STATE_READY;
 80050e4:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
  hi2c->PreviousState = I2C_STATE_NONE;
 80050e8:	6320      	str	r0, [r4, #48]	@ 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
 80050ea:	f884 0042 	strb.w	r0, [r4, #66]	@ 0x42
}
 80050ee:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 80050f0:	2001      	movs	r0, #1
 80050f2:	e7fc      	b.n	80050ee <HAL_I2C_Init+0xa4>

080050f4 <HAL_I2C_Mem_Write>:
{
 80050f4:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80050f8:	4699      	mov	r9, r3
  if (hi2c->State == HAL_I2C_STATE_READY)
 80050fa:	f890 3041 	ldrb.w	r3, [r0, #65]	@ 0x41
{
 80050fe:	4604      	mov	r4, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 8005100:	2b20      	cmp	r3, #32
{
 8005102:	460f      	mov	r7, r1
 8005104:	4616      	mov	r6, r2
 8005106:	f8bd a034 	ldrh.w	sl, [sp, #52]	@ 0x34
 800510a:	f8dd 8038 	ldr.w	r8, [sp, #56]	@ 0x38
  if (hi2c->State == HAL_I2C_STATE_READY)
 800510e:	f040 80c6 	bne.w	800529e <HAL_I2C_Mem_Write+0x1aa>
    if ((pData == NULL) || (Size == 0U))
 8005112:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8005114:	b113      	cbz	r3, 800511c <HAL_I2C_Mem_Write+0x28>
 8005116:	f1ba 0f00 	cmp.w	sl, #0
 800511a:	d106      	bne.n	800512a <HAL_I2C_Mem_Write+0x36>
      hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
 800511c:	f44f 7300 	mov.w	r3, #512	@ 0x200
 8005120:	6463      	str	r3, [r4, #68]	@ 0x44
      return  HAL_ERROR;
 8005122:	2001      	movs	r0, #1
}
 8005124:	b003      	add	sp, #12
 8005126:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    __HAL_LOCK(hi2c);
 800512a:	f890 3040 	ldrb.w	r3, [r0, #64]	@ 0x40
 800512e:	2b01      	cmp	r3, #1
 8005130:	f000 80b5 	beq.w	800529e <HAL_I2C_Mem_Write+0x1aa>
 8005134:	f04f 0b01 	mov.w	fp, #1
 8005138:	f880 b040 	strb.w	fp, [r0, #64]	@ 0x40
    tickstart = HAL_GetTick();
 800513c:	f7fe ff12 	bl	8003f64 <HAL_GetTick>
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY, tickstart) != HAL_OK)
 8005140:	2319      	movs	r3, #25
    tickstart = HAL_GetTick();
 8005142:	4605      	mov	r5, r0
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY, tickstart) != HAL_OK)
 8005144:	9000      	str	r0, [sp, #0]
 8005146:	465a      	mov	r2, fp
 8005148:	f44f 4100 	mov.w	r1, #32768	@ 0x8000
 800514c:	4620      	mov	r0, r4
 800514e:	f7ff ff18 	bl	8004f82 <I2C_WaitOnFlagUntilTimeout>
 8005152:	2800      	cmp	r0, #0
 8005154:	d1e5      	bne.n	8005122 <HAL_I2C_Mem_Write+0x2e>
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 8005156:	2321      	movs	r3, #33	@ 0x21
 8005158:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 800515c:	2340      	movs	r3, #64	@ 0x40
 800515e:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
    hi2c->pBuffPtr  = pData;
 8005162:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8005164:	6460      	str	r0, [r4, #68]	@ 0x44
    hi2c->pBuffPtr  = pData;
 8005166:	6263      	str	r3, [r4, #36]	@ 0x24
  I2C_TransferConfig(hi2c, DevAddress, (uint8_t)MemAddSize, I2C_RELOAD_MODE, I2C_GENERATE_START_WRITE);
 8005168:	4b4e      	ldr	r3, [pc, #312]	@ (80052a4 <HAL_I2C_Mem_Write+0x1b0>)
    hi2c->XferISR   = NULL;
 800516a:	6360      	str	r0, [r4, #52]	@ 0x34
  I2C_TransferConfig(hi2c, DevAddress, (uint8_t)MemAddSize, I2C_RELOAD_MODE, I2C_GENERATE_START_WRITE);
 800516c:	4639      	mov	r1, r7
 800516e:	4620      	mov	r0, r4
    hi2c->XferCount = Size;
 8005170:	f8a4 a02a 	strh.w	sl, [r4, #42]	@ 0x2a
  I2C_TransferConfig(hi2c, DevAddress, (uint8_t)MemAddSize, I2C_RELOAD_MODE, I2C_GENERATE_START_WRITE);
 8005174:	fa5f f289 	uxtb.w	r2, r9
 8005178:	9300      	str	r3, [sp, #0]
 800517a:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
 800517e:	f7ff fe3f 	bl	8004e00 <I2C_TransferConfig>
  if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8005182:	462a      	mov	r2, r5
 8005184:	4641      	mov	r1, r8
 8005186:	4620      	mov	r0, r4
 8005188:	f7ff fed0 	bl	8004f2c <I2C_WaitOnTXISFlagUntilTimeout>
 800518c:	bb18      	cbnz	r0, 80051d6 <HAL_I2C_Mem_Write+0xe2>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 800518e:	f1b9 0f01 	cmp.w	r9, #1
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
 8005192:	6823      	ldr	r3, [r4, #0]
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8005194:	d115      	bne.n	80051c2 <HAL_I2C_Mem_Write+0xce>
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
 8005196:	b2f6      	uxtb	r6, r6
 8005198:	629e      	str	r6, [r3, #40]	@ 0x28
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, Tickstart) != HAL_OK)
 800519a:	2200      	movs	r2, #0
 800519c:	4643      	mov	r3, r8
 800519e:	2180      	movs	r1, #128	@ 0x80
 80051a0:	4620      	mov	r0, r4
 80051a2:	9500      	str	r5, [sp, #0]
 80051a4:	f7ff feed 	bl	8004f82 <I2C_WaitOnFlagUntilTimeout>
 80051a8:	b9a8      	cbnz	r0, 80051d6 <HAL_I2C_Mem_Write+0xe2>
    if (hi2c->XferCount > MAX_NBYTE_SIZE)
 80051aa:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 80051ac:	b29b      	uxth	r3, r3
 80051ae:	2bff      	cmp	r3, #255	@ 0xff
 80051b0:	d815      	bhi.n	80051de <HAL_I2C_Mem_Write+0xea>
      hi2c->XferSize = hi2c->XferCount;
 80051b2:	8d62      	ldrh	r2, [r4, #42]	@ 0x2a
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_NO_STARTSTOP);
 80051b4:	f04f 7300 	mov.w	r3, #33554432	@ 0x2000000
      hi2c->XferSize = hi2c->XferCount;
 80051b8:	b292      	uxth	r2, r2
 80051ba:	8522      	strh	r2, [r4, #40]	@ 0x28
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_NO_STARTSTOP);
 80051bc:	9000      	str	r0, [sp, #0]
 80051be:	b2d2      	uxtb	r2, r2
 80051c0:	e012      	b.n	80051e8 <HAL_I2C_Mem_Write+0xf4>
    hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
 80051c2:	0a32      	lsrs	r2, r6, #8
 80051c4:	629a      	str	r2, [r3, #40]	@ 0x28
    if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 80051c6:	4641      	mov	r1, r8
 80051c8:	462a      	mov	r2, r5
 80051ca:	4620      	mov	r0, r4
 80051cc:	f7ff feae 	bl	8004f2c <I2C_WaitOnTXISFlagUntilTimeout>
 80051d0:	b908      	cbnz	r0, 80051d6 <HAL_I2C_Mem_Write+0xe2>
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
 80051d2:	6823      	ldr	r3, [r4, #0]
 80051d4:	e7df      	b.n	8005196 <HAL_I2C_Mem_Write+0xa2>
      __HAL_UNLOCK(hi2c);
 80051d6:	2300      	movs	r3, #0
 80051d8:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
      return HAL_ERROR;
 80051dc:	e7a1      	b.n	8005122 <HAL_I2C_Mem_Write+0x2e>
      hi2c->XferSize = MAX_NBYTE_SIZE;
 80051de:	22ff      	movs	r2, #255	@ 0xff
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE, I2C_NO_STARTSTOP);
 80051e0:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
      hi2c->XferSize = MAX_NBYTE_SIZE;
 80051e4:	8522      	strh	r2, [r4, #40]	@ 0x28
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE, I2C_NO_STARTSTOP);
 80051e6:	9000      	str	r0, [sp, #0]
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_NO_STARTSTOP);
 80051e8:	4639      	mov	r1, r7
 80051ea:	4620      	mov	r0, r4
 80051ec:	f7ff fe08 	bl	8004e00 <I2C_TransferConfig>
      if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 80051f0:	462a      	mov	r2, r5
 80051f2:	4641      	mov	r1, r8
 80051f4:	4620      	mov	r0, r4
 80051f6:	f7ff fe99 	bl	8004f2c <I2C_WaitOnTXISFlagUntilTimeout>
 80051fa:	2800      	cmp	r0, #0
 80051fc:	d191      	bne.n	8005122 <HAL_I2C_Mem_Write+0x2e>
      hi2c->Instance->TXDR = *hi2c->pBuffPtr;
 80051fe:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8005200:	6822      	ldr	r2, [r4, #0]
 8005202:	f813 1b01 	ldrb.w	r1, [r3], #1
 8005206:	6291      	str	r1, [r2, #40]	@ 0x28
      hi2c->pBuffPtr++;
 8005208:	6263      	str	r3, [r4, #36]	@ 0x24
      hi2c->XferCount--;
 800520a:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
      hi2c->XferSize--;
 800520c:	8d22      	ldrh	r2, [r4, #40]	@ 0x28
      hi2c->XferCount--;
 800520e:	3b01      	subs	r3, #1
 8005210:	b29b      	uxth	r3, r3
 8005212:	8563      	strh	r3, [r4, #42]	@ 0x2a
      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
 8005214:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
      hi2c->XferSize--;
 8005216:	3a01      	subs	r2, #1
 8005218:	b292      	uxth	r2, r2
      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
 800521a:	b29b      	uxth	r3, r3
      hi2c->XferSize--;
 800521c:	8522      	strh	r2, [r4, #40]	@ 0x28
      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
 800521e:	b1b3      	cbz	r3, 800524e <HAL_I2C_Mem_Write+0x15a>
 8005220:	b9aa      	cbnz	r2, 800524e <HAL_I2C_Mem_Write+0x15a>
        if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, tickstart) != HAL_OK)
 8005222:	4643      	mov	r3, r8
 8005224:	2180      	movs	r1, #128	@ 0x80
 8005226:	4620      	mov	r0, r4
 8005228:	9500      	str	r5, [sp, #0]
 800522a:	f7ff feaa 	bl	8004f82 <I2C_WaitOnFlagUntilTimeout>
 800522e:	2800      	cmp	r0, #0
 8005230:	f47f af77 	bne.w	8005122 <HAL_I2C_Mem_Write+0x2e>
        if (hi2c->XferCount > MAX_NBYTE_SIZE)
 8005234:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 8005236:	b29b      	uxth	r3, r3
 8005238:	2bff      	cmp	r3, #255	@ 0xff
 800523a:	d928      	bls.n	800528e <HAL_I2C_Mem_Write+0x19a>
          hi2c->XferSize = MAX_NBYTE_SIZE;
 800523c:	22ff      	movs	r2, #255	@ 0xff
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE,
 800523e:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
          hi2c->XferSize = MAX_NBYTE_SIZE;
 8005242:	8522      	strh	r2, [r4, #40]	@ 0x28
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE,
 8005244:	9000      	str	r0, [sp, #0]
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
 8005246:	4639      	mov	r1, r7
 8005248:	4620      	mov	r0, r4
 800524a:	f7ff fdd9 	bl	8004e00 <I2C_TransferConfig>
    } while (hi2c->XferCount > 0U);
 800524e:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 8005250:	b29b      	uxth	r3, r3
 8005252:	2b00      	cmp	r3, #0
 8005254:	d1cc      	bne.n	80051f0 <HAL_I2C_Mem_Write+0xfc>
    if (I2C_WaitOnSTOPFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8005256:	462a      	mov	r2, r5
 8005258:	4641      	mov	r1, r8
 800525a:	4620      	mov	r0, r4
 800525c:	f7ff fecc 	bl	8004ff8 <I2C_WaitOnSTOPFlagUntilTimeout>
 8005260:	2800      	cmp	r0, #0
 8005262:	f47f af5e 	bne.w	8005122 <HAL_I2C_Mem_Write+0x2e>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 8005266:	2120      	movs	r1, #32
 8005268:	6823      	ldr	r3, [r4, #0]
 800526a:	61d9      	str	r1, [r3, #28]
    I2C_RESET_CR2(hi2c);
 800526c:	685a      	ldr	r2, [r3, #4]
 800526e:	f022 72ff 	bic.w	r2, r2, #33423360	@ 0x1fe0000
 8005272:	f422 328b 	bic.w	r2, r2, #71168	@ 0x11600
 8005276:	f422 72ff 	bic.w	r2, r2, #510	@ 0x1fe
 800527a:	f022 0201 	bic.w	r2, r2, #1
 800527e:	605a      	str	r2, [r3, #4]
    hi2c->State = HAL_I2C_STATE_READY;
 8005280:	f884 1041 	strb.w	r1, [r4, #65]	@ 0x41
    __HAL_UNLOCK(hi2c);
 8005284:	f884 0040 	strb.w	r0, [r4, #64]	@ 0x40
    hi2c->Mode  = HAL_I2C_MODE_NONE;
 8005288:	f884 0042 	strb.w	r0, [r4, #66]	@ 0x42
    return HAL_OK;
 800528c:	e74a      	b.n	8005124 <HAL_I2C_Mem_Write+0x30>
          hi2c->XferSize = hi2c->XferCount;
 800528e:	8d62      	ldrh	r2, [r4, #42]	@ 0x2a
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
 8005290:	f04f 7300 	mov.w	r3, #33554432	@ 0x2000000
          hi2c->XferSize = hi2c->XferCount;
 8005294:	b292      	uxth	r2, r2
 8005296:	8522      	strh	r2, [r4, #40]	@ 0x28
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
 8005298:	9000      	str	r0, [sp, #0]
 800529a:	b2d2      	uxtb	r2, r2
 800529c:	e7d3      	b.n	8005246 <HAL_I2C_Mem_Write+0x152>
    __HAL_LOCK(hi2c);
 800529e:	2002      	movs	r0, #2
 80052a0:	e740      	b.n	8005124 <HAL_I2C_Mem_Write+0x30>
 80052a2:	bf00      	nop
 80052a4:	80002000 	.word	0x80002000

080052a8 <HAL_I2C_Mem_Read>:
{
 80052a8:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80052ac:	4699      	mov	r9, r3
  if (hi2c->State == HAL_I2C_STATE_READY)
 80052ae:	f890 3041 	ldrb.w	r3, [r0, #65]	@ 0x41
{
 80052b2:	4604      	mov	r4, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 80052b4:	2b20      	cmp	r3, #32
{
 80052b6:	460f      	mov	r7, r1
 80052b8:	4616      	mov	r6, r2
 80052ba:	f8bd a034 	ldrh.w	sl, [sp, #52]	@ 0x34
 80052be:	f8dd 8038 	ldr.w	r8, [sp, #56]	@ 0x38
  if (hi2c->State == HAL_I2C_STATE_READY)
 80052c2:	f040 80c9 	bne.w	8005458 <HAL_I2C_Mem_Read+0x1b0>
    if ((pData == NULL) || (Size == 0U))
 80052c6:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80052c8:	b113      	cbz	r3, 80052d0 <HAL_I2C_Mem_Read+0x28>
 80052ca:	f1ba 0f00 	cmp.w	sl, #0
 80052ce:	d106      	bne.n	80052de <HAL_I2C_Mem_Read+0x36>
      hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
 80052d0:	f44f 7300 	mov.w	r3, #512	@ 0x200
 80052d4:	6463      	str	r3, [r4, #68]	@ 0x44
      return  HAL_ERROR;
 80052d6:	2001      	movs	r0, #1
}
 80052d8:	b003      	add	sp, #12
 80052da:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    __HAL_LOCK(hi2c);
 80052de:	f890 3040 	ldrb.w	r3, [r0, #64]	@ 0x40
 80052e2:	2b01      	cmp	r3, #1
 80052e4:	f000 80b8 	beq.w	8005458 <HAL_I2C_Mem_Read+0x1b0>
 80052e8:	f04f 0b01 	mov.w	fp, #1
 80052ec:	f880 b040 	strb.w	fp, [r0, #64]	@ 0x40
    tickstart = HAL_GetTick();
 80052f0:	f7fe fe38 	bl	8003f64 <HAL_GetTick>
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY, tickstart) != HAL_OK)
 80052f4:	2319      	movs	r3, #25
 80052f6:	9000      	str	r0, [sp, #0]
    tickstart = HAL_GetTick();
 80052f8:	4605      	mov	r5, r0
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY, tickstart) != HAL_OK)
 80052fa:	465a      	mov	r2, fp
 80052fc:	f44f 4100 	mov.w	r1, #32768	@ 0x8000
 8005300:	4620      	mov	r0, r4
 8005302:	f7ff fe3e 	bl	8004f82 <I2C_WaitOnFlagUntilTimeout>
 8005306:	4603      	mov	r3, r0
 8005308:	2800      	cmp	r0, #0
 800530a:	d1e4      	bne.n	80052d6 <HAL_I2C_Mem_Read+0x2e>
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 800530c:	2222      	movs	r2, #34	@ 0x22
 800530e:	f884 2041 	strb.w	r2, [r4, #65]	@ 0x41
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 8005312:	2240      	movs	r2, #64	@ 0x40
 8005314:	f884 2042 	strb.w	r2, [r4, #66]	@ 0x42
    hi2c->pBuffPtr  = pData;
 8005318:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800531a:	6460      	str	r0, [r4, #68]	@ 0x44
    hi2c->pBuffPtr  = pData;
 800531c:	6262      	str	r2, [r4, #36]	@ 0x24
  I2C_TransferConfig(hi2c, DevAddress, (uint8_t)MemAddSize, I2C_SOFTEND_MODE, I2C_GENERATE_START_WRITE);
 800531e:	4a4f      	ldr	r2, [pc, #316]	@ (800545c <HAL_I2C_Mem_Read+0x1b4>)
    hi2c->XferISR   = NULL;
 8005320:	6360      	str	r0, [r4, #52]	@ 0x34
  I2C_TransferConfig(hi2c, DevAddress, (uint8_t)MemAddSize, I2C_SOFTEND_MODE, I2C_GENERATE_START_WRITE);
 8005322:	4639      	mov	r1, r7
 8005324:	4620      	mov	r0, r4
    hi2c->XferCount = Size;
 8005326:	f8a4 a02a 	strh.w	sl, [r4, #42]	@ 0x2a
  I2C_TransferConfig(hi2c, DevAddress, (uint8_t)MemAddSize, I2C_SOFTEND_MODE, I2C_GENERATE_START_WRITE);
 800532a:	9200      	str	r2, [sp, #0]
 800532c:	fa5f f289 	uxtb.w	r2, r9
 8005330:	f7ff fd66 	bl	8004e00 <I2C_TransferConfig>
  if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8005334:	462a      	mov	r2, r5
 8005336:	4641      	mov	r1, r8
 8005338:	4620      	mov	r0, r4
 800533a:	f7ff fdf7 	bl	8004f2c <I2C_WaitOnTXISFlagUntilTimeout>
 800533e:	bb20      	cbnz	r0, 800538a <HAL_I2C_Mem_Read+0xe2>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8005340:	f1b9 0f01 	cmp.w	r9, #1
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
 8005344:	6823      	ldr	r3, [r4, #0]
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8005346:	d116      	bne.n	8005376 <HAL_I2C_Mem_Read+0xce>
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
 8005348:	b2f6      	uxtb	r6, r6
 800534a:	629e      	str	r6, [r3, #40]	@ 0x28
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TC, RESET, Timeout, Tickstart) != HAL_OK)
 800534c:	2200      	movs	r2, #0
 800534e:	4643      	mov	r3, r8
 8005350:	2140      	movs	r1, #64	@ 0x40
 8005352:	4620      	mov	r0, r4
 8005354:	9500      	str	r5, [sp, #0]
 8005356:	f7ff fe14 	bl	8004f82 <I2C_WaitOnFlagUntilTimeout>
 800535a:	b9b0      	cbnz	r0, 800538a <HAL_I2C_Mem_Read+0xe2>
    if (hi2c->XferCount > MAX_NBYTE_SIZE)
 800535c:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 800535e:	b29b      	uxth	r3, r3
 8005360:	2bff      	cmp	r3, #255	@ 0xff
 8005362:	4b3f      	ldr	r3, [pc, #252]	@ (8005460 <HAL_I2C_Mem_Read+0x1b8>)
 8005364:	d815      	bhi.n	8005392 <HAL_I2C_Mem_Read+0xea>
      hi2c->XferSize = hi2c->XferCount;
 8005366:	8d62      	ldrh	r2, [r4, #42]	@ 0x2a
 8005368:	b292      	uxth	r2, r2
 800536a:	8522      	strh	r2, [r4, #40]	@ 0x28
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
 800536c:	9300      	str	r3, [sp, #0]
 800536e:	b2d2      	uxtb	r2, r2
 8005370:	f04f 7300 	mov.w	r3, #33554432	@ 0x2000000
 8005374:	e012      	b.n	800539c <HAL_I2C_Mem_Read+0xf4>
    hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
 8005376:	0a32      	lsrs	r2, r6, #8
 8005378:	629a      	str	r2, [r3, #40]	@ 0x28
    if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 800537a:	4641      	mov	r1, r8
 800537c:	462a      	mov	r2, r5
 800537e:	4620      	mov	r0, r4
 8005380:	f7ff fdd4 	bl	8004f2c <I2C_WaitOnTXISFlagUntilTimeout>
 8005384:	b908      	cbnz	r0, 800538a <HAL_I2C_Mem_Read+0xe2>
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
 8005386:	6823      	ldr	r3, [r4, #0]
 8005388:	e7de      	b.n	8005348 <HAL_I2C_Mem_Read+0xa0>
      __HAL_UNLOCK(hi2c);
 800538a:	2300      	movs	r3, #0
 800538c:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
      return HAL_ERROR;
 8005390:	e7a1      	b.n	80052d6 <HAL_I2C_Mem_Read+0x2e>
      hi2c->XferSize = MAX_NBYTE_SIZE;
 8005392:	22ff      	movs	r2, #255	@ 0xff
 8005394:	8522      	strh	r2, [r4, #40]	@ 0x28
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE,
 8005396:	9300      	str	r3, [sp, #0]
 8005398:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
 800539c:	4639      	mov	r1, r7
 800539e:	4620      	mov	r0, r4
 80053a0:	f7ff fd2e 	bl	8004e00 <I2C_TransferConfig>
      if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_RXNE, RESET, Timeout, tickstart) != HAL_OK)
 80053a4:	4643      	mov	r3, r8
 80053a6:	2200      	movs	r2, #0
 80053a8:	2104      	movs	r1, #4
 80053aa:	4620      	mov	r0, r4
 80053ac:	9500      	str	r5, [sp, #0]
 80053ae:	f7ff fde8 	bl	8004f82 <I2C_WaitOnFlagUntilTimeout>
 80053b2:	2800      	cmp	r0, #0
 80053b4:	d18f      	bne.n	80052d6 <HAL_I2C_Mem_Read+0x2e>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->RXDR;
 80053b6:	6823      	ldr	r3, [r4, #0]
 80053b8:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 80053ba:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 80053bc:	701a      	strb	r2, [r3, #0]
      hi2c->pBuffPtr++;
 80053be:	6a63      	ldr	r3, [r4, #36]	@ 0x24
      hi2c->XferSize--;
 80053c0:	8d22      	ldrh	r2, [r4, #40]	@ 0x28
      hi2c->pBuffPtr++;
 80053c2:	3301      	adds	r3, #1
 80053c4:	6263      	str	r3, [r4, #36]	@ 0x24
      hi2c->XferCount--;
 80053c6:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
      hi2c->XferSize--;
 80053c8:	3a01      	subs	r2, #1
      hi2c->XferCount--;
 80053ca:	3b01      	subs	r3, #1
 80053cc:	b29b      	uxth	r3, r3
 80053ce:	8563      	strh	r3, [r4, #42]	@ 0x2a
      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
 80053d0:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
      hi2c->XferSize--;
 80053d2:	b292      	uxth	r2, r2
      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
 80053d4:	b29b      	uxth	r3, r3
      hi2c->XferSize--;
 80053d6:	8522      	strh	r2, [r4, #40]	@ 0x28
      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
 80053d8:	b1b3      	cbz	r3, 8005408 <HAL_I2C_Mem_Read+0x160>
 80053da:	b9aa      	cbnz	r2, 8005408 <HAL_I2C_Mem_Read+0x160>
        if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, tickstart) != HAL_OK)
 80053dc:	4643      	mov	r3, r8
 80053de:	2180      	movs	r1, #128	@ 0x80
 80053e0:	4620      	mov	r0, r4
 80053e2:	9500      	str	r5, [sp, #0]
 80053e4:	f7ff fdcd 	bl	8004f82 <I2C_WaitOnFlagUntilTimeout>
 80053e8:	2800      	cmp	r0, #0
 80053ea:	f47f af74 	bne.w	80052d6 <HAL_I2C_Mem_Read+0x2e>
        if (hi2c->XferCount > MAX_NBYTE_SIZE)
 80053ee:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 80053f0:	b29b      	uxth	r3, r3
 80053f2:	2bff      	cmp	r3, #255	@ 0xff
 80053f4:	d928      	bls.n	8005448 <HAL_I2C_Mem_Read+0x1a0>
          hi2c->XferSize = MAX_NBYTE_SIZE;
 80053f6:	22ff      	movs	r2, #255	@ 0xff
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t) hi2c->XferSize, I2C_RELOAD_MODE,
 80053f8:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
          hi2c->XferSize = MAX_NBYTE_SIZE;
 80053fc:	8522      	strh	r2, [r4, #40]	@ 0x28
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t) hi2c->XferSize, I2C_RELOAD_MODE,
 80053fe:	9000      	str	r0, [sp, #0]
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
 8005400:	4639      	mov	r1, r7
 8005402:	4620      	mov	r0, r4
 8005404:	f7ff fcfc 	bl	8004e00 <I2C_TransferConfig>
    } while (hi2c->XferCount > 0U);
 8005408:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 800540a:	b29b      	uxth	r3, r3
 800540c:	2b00      	cmp	r3, #0
 800540e:	d1c9      	bne.n	80053a4 <HAL_I2C_Mem_Read+0xfc>
    if (I2C_WaitOnSTOPFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8005410:	462a      	mov	r2, r5
 8005412:	4641      	mov	r1, r8
 8005414:	4620      	mov	r0, r4
 8005416:	f7ff fdef 	bl	8004ff8 <I2C_WaitOnSTOPFlagUntilTimeout>
 800541a:	2800      	cmp	r0, #0
 800541c:	f47f af5b 	bne.w	80052d6 <HAL_I2C_Mem_Read+0x2e>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 8005420:	2120      	movs	r1, #32
 8005422:	6823      	ldr	r3, [r4, #0]
 8005424:	61d9      	str	r1, [r3, #28]
    I2C_RESET_CR2(hi2c);
 8005426:	685a      	ldr	r2, [r3, #4]
 8005428:	f022 72ff 	bic.w	r2, r2, #33423360	@ 0x1fe0000
 800542c:	f422 328b 	bic.w	r2, r2, #71168	@ 0x11600
 8005430:	f422 72ff 	bic.w	r2, r2, #510	@ 0x1fe
 8005434:	f022 0201 	bic.w	r2, r2, #1
 8005438:	605a      	str	r2, [r3, #4]
    hi2c->State = HAL_I2C_STATE_READY;
 800543a:	f884 1041 	strb.w	r1, [r4, #65]	@ 0x41
    __HAL_UNLOCK(hi2c);
 800543e:	f884 0040 	strb.w	r0, [r4, #64]	@ 0x40
    hi2c->Mode  = HAL_I2C_MODE_NONE;
 8005442:	f884 0042 	strb.w	r0, [r4, #66]	@ 0x42
    return HAL_OK;
 8005446:	e747      	b.n	80052d8 <HAL_I2C_Mem_Read+0x30>
          hi2c->XferSize = hi2c->XferCount;
 8005448:	8d62      	ldrh	r2, [r4, #42]	@ 0x2a
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
 800544a:	f04f 7300 	mov.w	r3, #33554432	@ 0x2000000
          hi2c->XferSize = hi2c->XferCount;
 800544e:	b292      	uxth	r2, r2
 8005450:	8522      	strh	r2, [r4, #40]	@ 0x28
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
 8005452:	9000      	str	r0, [sp, #0]
 8005454:	b2d2      	uxtb	r2, r2
 8005456:	e7d3      	b.n	8005400 <HAL_I2C_Mem_Read+0x158>
    __HAL_LOCK(hi2c);
 8005458:	2002      	movs	r0, #2
 800545a:	e73d      	b.n	80052d8 <HAL_I2C_Mem_Read+0x30>
 800545c:	80002000 	.word	0x80002000
 8005460:	80002400 	.word	0x80002400

08005464 <HAL_I2CEx_ConfigAnalogFilter>:
  *                the configuration information for the specified I2Cx peripheral.
  * @param  AnalogFilter New state of the Analog filter.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2CEx_ConfigAnalogFilter(I2C_HandleTypeDef *hi2c, uint32_t AnalogFilter)
{
 8005464:	b510      	push	{r4, lr}
  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_ANALOG_FILTER(AnalogFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 8005466:	f890 2041 	ldrb.w	r2, [r0, #65]	@ 0x41
{
 800546a:	4603      	mov	r3, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 800546c:	2a20      	cmp	r2, #32
 800546e:	b2d4      	uxtb	r4, r2
 8005470:	d11c      	bne.n	80054ac <HAL_I2CEx_ConfigAnalogFilter+0x48>
  {
    /* Process Locked */
    __HAL_LOCK(hi2c);
 8005472:	f890 2040 	ldrb.w	r2, [r0, #64]	@ 0x40
 8005476:	2a01      	cmp	r2, #1
 8005478:	d018      	beq.n	80054ac <HAL_I2CEx_ConfigAnalogFilter+0x48>

    hi2c->State = HAL_I2C_STATE_BUSY;
 800547a:	2224      	movs	r2, #36	@ 0x24
 800547c:	f880 2041 	strb.w	r2, [r0, #65]	@ 0x41

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
 8005480:	6802      	ldr	r2, [r0, #0]
 8005482:	6810      	ldr	r0, [r2, #0]
 8005484:	f020 0001 	bic.w	r0, r0, #1
 8005488:	6010      	str	r0, [r2, #0]

    /* Reset I2Cx ANOFF bit */
    hi2c->Instance->CR1 &= ~(I2C_CR1_ANFOFF);
 800548a:	6810      	ldr	r0, [r2, #0]
 800548c:	f420 5080 	bic.w	r0, r0, #4096	@ 0x1000
 8005490:	6010      	str	r0, [r2, #0]

    /* Set analog filter bit*/
    hi2c->Instance->CR1 |= AnalogFilter;
 8005492:	6810      	ldr	r0, [r2, #0]
 8005494:	4301      	orrs	r1, r0
    __HAL_I2C_ENABLE(hi2c);

    hi2c->State = HAL_I2C_STATE_READY;

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 8005496:	2000      	movs	r0, #0
    hi2c->Instance->CR1 |= AnalogFilter;
 8005498:	6011      	str	r1, [r2, #0]
    __HAL_I2C_ENABLE(hi2c);
 800549a:	6811      	ldr	r1, [r2, #0]
 800549c:	f041 0101 	orr.w	r1, r1, #1
 80054a0:	6011      	str	r1, [r2, #0]
    hi2c->State = HAL_I2C_STATE_READY;
 80054a2:	f883 4041 	strb.w	r4, [r3, #65]	@ 0x41
    __HAL_UNLOCK(hi2c);
 80054a6:	f883 0040 	strb.w	r0, [r3, #64]	@ 0x40
  }
  else
  {
    return HAL_BUSY;
  }
}
 80054aa:	bd10      	pop	{r4, pc}
    __HAL_LOCK(hi2c);
 80054ac:	2002      	movs	r0, #2
 80054ae:	e7fc      	b.n	80054aa <HAL_I2CEx_ConfigAnalogFilter+0x46>

080054b0 <HAL_I2CEx_ConfigDigitalFilter>:
  *                the configuration information for the specified I2Cx peripheral.
  * @param  DigitalFilter Coefficient of digital noise filter between Min_Data=0x00 and Max_Data=0x0F.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2CEx_ConfigDigitalFilter(I2C_HandleTypeDef *hi2c, uint32_t DigitalFilter)
{
 80054b0:	b510      	push	{r4, lr}

  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_DIGITAL_FILTER(DigitalFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 80054b2:	f890 2041 	ldrb.w	r2, [r0, #65]	@ 0x41
{
 80054b6:	4603      	mov	r3, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 80054b8:	2a20      	cmp	r2, #32
 80054ba:	b2d4      	uxtb	r4, r2
 80054bc:	d11b      	bne.n	80054f6 <HAL_I2CEx_ConfigDigitalFilter+0x46>
  {
    /* Process Locked */
    __HAL_LOCK(hi2c);
 80054be:	f890 2040 	ldrb.w	r2, [r0, #64]	@ 0x40
 80054c2:	2a01      	cmp	r2, #1
 80054c4:	d017      	beq.n	80054f6 <HAL_I2CEx_ConfigDigitalFilter+0x46>

    hi2c->State = HAL_I2C_STATE_BUSY;
 80054c6:	2224      	movs	r2, #36	@ 0x24
 80054c8:	f880 2041 	strb.w	r2, [r0, #65]	@ 0x41

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
 80054cc:	6802      	ldr	r2, [r0, #0]
 80054ce:	6810      	ldr	r0, [r2, #0]
 80054d0:	f020 0001 	bic.w	r0, r0, #1
 80054d4:	6010      	str	r0, [r2, #0]

    /* Get the old register value */
    tmpreg = hi2c->Instance->CR1;
 80054d6:	6810      	ldr	r0, [r2, #0]

    /* Reset I2Cx DNF bits [11:8] */
    tmpreg &= ~(I2C_CR1_DNF);
 80054d8:	f420 6070 	bic.w	r0, r0, #3840	@ 0xf00

    /* Set I2Cx DNF coefficient */
    tmpreg |= DigitalFilter << 8U;
 80054dc:	ea40 2101 	orr.w	r1, r0, r1, lsl #8
    __HAL_I2C_ENABLE(hi2c);

    hi2c->State = HAL_I2C_STATE_READY;

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 80054e0:	2000      	movs	r0, #0
    hi2c->Instance->CR1 = tmpreg;
 80054e2:	6011      	str	r1, [r2, #0]
    __HAL_I2C_ENABLE(hi2c);
 80054e4:	6811      	ldr	r1, [r2, #0]
 80054e6:	f041 0101 	orr.w	r1, r1, #1
 80054ea:	6011      	str	r1, [r2, #0]
    hi2c->State = HAL_I2C_STATE_READY;
 80054ec:	f883 4041 	strb.w	r4, [r3, #65]	@ 0x41
    __HAL_UNLOCK(hi2c);
 80054f0:	f883 0040 	strb.w	r0, [r3, #64]	@ 0x40
  }
  else
  {
    return HAL_BUSY;
  }
}
 80054f4:	bd10      	pop	{r4, pc}
    __HAL_LOCK(hi2c);
 80054f6:	2002      	movs	r0, #2
 80054f8:	e7fc      	b.n	80054f4 <HAL_I2CEx_ConfigDigitalFilter+0x44>
	...

080054fc <HAL_ICACHE_ConfigAssociativityMode>:
  *            @arg ICACHE_1WAY   1-way cache (direct mapped cache)
  *            @arg ICACHE_2WAYS  2-ways set associative cache (default)
  * @retval HAL status (HAL_OK/HAL_ERROR)
  */
HAL_StatusTypeDef HAL_ICACHE_ConfigAssociativityMode(uint32_t AssociativityMode)
{
 80054fc:	4601      	mov	r1, r0

  /* Check the parameters */
  assert_param(IS_ICACHE_ASSOCIATIVITY_MODE(AssociativityMode));

  /* Check cache is not enabled */
  if (READ_BIT(ICACHE->CR, ICACHE_CR_EN) != 0U)
 80054fe:	4a06      	ldr	r2, [pc, #24]	@ (8005518 <HAL_ICACHE_ConfigAssociativityMode+0x1c>)
 8005500:	6810      	ldr	r0, [r2, #0]
 8005502:	f010 0001 	ands.w	r0, r0, #1
  {
    status = HAL_ERROR;
  }
  else
  {
    MODIFY_REG(ICACHE->CR, ICACHE_CR_WAYSEL, AssociativityMode);
 8005506:	bf09      	itett	eq
 8005508:	6813      	ldreq	r3, [r2, #0]
    status = HAL_ERROR;
 800550a:	2001      	movne	r0, #1
    MODIFY_REG(ICACHE->CR, ICACHE_CR_WAYSEL, AssociativityMode);
 800550c:	f023 0304 	biceq.w	r3, r3, #4
 8005510:	430b      	orreq	r3, r1
 8005512:	bf08      	it	eq
 8005514:	6013      	streq	r3, [r2, #0]
  }

  return status;
}
 8005516:	4770      	bx	lr
 8005518:	40030400 	.word	0x40030400

0800551c <HAL_ICACHE_Enable>:
  *         cache operation completes.
  * @retval HAL status (HAL_OK)
  */
HAL_StatusTypeDef HAL_ICACHE_Enable(void)
{
  SET_BIT(ICACHE->CR, ICACHE_CR_EN);
 800551c:	4a03      	ldr	r2, [pc, #12]	@ (800552c <HAL_ICACHE_Enable+0x10>)

  return HAL_OK;
}
 800551e:	2000      	movs	r0, #0
  SET_BIT(ICACHE->CR, ICACHE_CR_EN);
 8005520:	6813      	ldr	r3, [r2, #0]
 8005522:	f043 0301 	orr.w	r3, r3, #1
 8005526:	6013      	str	r3, [r2, #0]
}
 8005528:	4770      	bx	lr
 800552a:	bf00      	nop
 800552c:	40030400 	.word	0x40030400

08005530 <JPEG_Bits_To_SizeCodes>:
  * @param  LastK pointer to last Coeff (table dimension)
  * @retval HAL status
  */
static HAL_StatusTypeDef JPEG_Bits_To_SizeCodes(const uint8_t *Bits, uint8_t *Huffsize, uint32_t *Huffcode,
                                                uint32_t *LastK)
{
 8005530:	b5f0      	push	{r4, r5, r6, r7, lr}

  /* Figure C.1: Generation of table of Huffman code sizes */
  j = 0;
  for (k = 0; k < 16UL; k++)
  {
    i = (uint32_t)Bits[k];
 8005532:	2401      	movs	r4, #1
  j = 0;
 8005534:	2500      	movs	r5, #0
    i = (uint32_t)Bits[k];
 8005536:	7807      	ldrb	r7, [r0, #0]
    if ((j + i) > 256UL)
 8005538:	194e      	adds	r6, r1, r5
 800553a:	443d      	add	r5, r7
 800553c:	194f      	adds	r7, r1, r5
    {
      /* check for table overflow */
      return HAL_ERROR;
    }
    while (i != 0UL)
 800553e:	42be      	cmp	r6, r7
 8005540:	d112      	bne.n	8005568 <JPEG_Bits_To_SizeCodes+0x38>
  for (k = 0; k < 16UL; k++)
 8005542:	2c10      	cmp	r4, #16
 8005544:	d108      	bne.n	8005558 <JPEG_Bits_To_SizeCodes+0x28>
      Huffsize[j] = (uint8_t) k + 1U;
      j++;
      i--;
    }
  }
  Huffsize[j] = 0;
 8005546:	2400      	movs	r4, #0
    /* code must fit in "size" bits (si), no code is allowed to be all ones*/
    if (si > 31UL)
    {
      return HAL_ERROR;
    }
    if (((uint32_t) code) >= (((uint32_t) 1) << si))
 8005548:	2601      	movs	r6, #1
  Huffsize[j] = 0;
 800554a:	554c      	strb	r4, [r1, r5]
  *LastK = j;
 800554c:	601d      	str	r5, [r3, #0]
  j = 0;
 800554e:	4623      	mov	r3, r4
  si = Huffsize[0];
 8005550:	780d      	ldrb	r5, [r1, #0]
  while (Huffsize[j] != 0U)
 8005552:	5cc8      	ldrb	r0, [r1, r3]
 8005554:	b9d8      	cbnz	r0, 800558e <JPEG_Bits_To_SizeCodes+0x5e>
    code <<= 1;
    si++;
  }
  /* Return function status */
  return HAL_OK;
}
 8005556:	bdf0      	pop	{r4, r5, r6, r7, pc}
    i = (uint32_t)Bits[k];
 8005558:	5d07      	ldrb	r7, [r0, r4]
    if ((j + i) > 256UL)
 800555a:	3401      	adds	r4, #1
 800555c:	19ee      	adds	r6, r5, r7
 800555e:	f5b6 7f80 	cmp.w	r6, #256	@ 0x100
 8005562:	d9e9      	bls.n	8005538 <JPEG_Bits_To_SizeCodes+0x8>
      return HAL_ERROR;
 8005564:	2001      	movs	r0, #1
 8005566:	e7f6      	b.n	8005556 <JPEG_Bits_To_SizeCodes+0x26>
      Huffsize[j] = (uint8_t) k + 1U;
 8005568:	f806 4b01 	strb.w	r4, [r6], #1
      i--;
 800556c:	e7e7      	b.n	800553e <JPEG_Bits_To_SizeCodes+0xe>
      Huffcode[j] = code;
 800556e:	f842 4023 	str.w	r4, [r2, r3, lsl #2]
      j++;
 8005572:	3301      	adds	r3, #1
    while (((uint32_t) Huffsize[j]) == si)
 8005574:	5cc8      	ldrb	r0, [r1, r3]
 8005576:	19dc      	adds	r4, r3, r7
 8005578:	42a8      	cmp	r0, r5
 800557a:	d0f8      	beq.n	800556e <JPEG_Bits_To_SizeCodes+0x3e>
    if (si > 31UL)
 800557c:	2d1f      	cmp	r5, #31
 800557e:	d8f1      	bhi.n	8005564 <JPEG_Bits_To_SizeCodes+0x34>
    if (((uint32_t) code) >= (((uint32_t) 1) << si))
 8005580:	fa06 f005 	lsl.w	r0, r6, r5
 8005584:	42a0      	cmp	r0, r4
 8005586:	d9ed      	bls.n	8005564 <JPEG_Bits_To_SizeCodes+0x34>
    code <<= 1;
 8005588:	0064      	lsls	r4, r4, #1
    si++;
 800558a:	3501      	adds	r5, #1
 800558c:	e7e1      	b.n	8005552 <JPEG_Bits_To_SizeCodes+0x22>
 800558e:	1ae7      	subs	r7, r4, r3
 8005590:	e7f0      	b.n	8005574 <JPEG_Bits_To_SizeCodes+0x44>

08005592 <JPEG_DCHuff_BitsVals_To_SizeCodes>:
  * @param  DC_SizeCodesTable pointer to DC huffman Sizes/Codes table
  * @retval HAL status
  */
static HAL_StatusTypeDef JPEG_DCHuff_BitsVals_To_SizeCodes(JPEG_DCHuffTableTypeDef *DC_BitsValsTable,
                                                           JPEG_DC_HuffCodeTableTypeDef *DC_SizeCodesTable)
{
 8005592:	b5f0      	push	{r4, r5, r6, r7, lr}
 8005594:	f2ad 5d14 	subw	sp, sp, #1300	@ 0x514
 8005598:	460d      	mov	r5, r1
  uint32_t k;
  uint32_t i;
  uint32_t lastK;
  uint8_t huffsize[257];
  uint32_t huffcode[257];
  error = JPEG_Bits_To_SizeCodes(DC_BitsValsTable->Bits, huffsize, huffcode, &lastK);
 800559a:	ab01      	add	r3, sp, #4
 800559c:	aa43      	add	r2, sp, #268	@ 0x10c
 800559e:	a902      	add	r1, sp, #8
{
 80055a0:	4604      	mov	r4, r0
  error = JPEG_Bits_To_SizeCodes(DC_BitsValsTable->Bits, huffsize, huffcode, &lastK);
 80055a2:	f7ff ffc5 	bl	8005530 <JPEG_Bits_To_SizeCodes>
  if (error != HAL_OK)
 80055a6:	b938      	cbnz	r0, 80055b8 <JPEG_DCHuff_BitsVals_To_SizeCodes+0x26>
 80055a8:	9e01      	ldr	r6, [sp, #4]
 80055aa:	460b      	mov	r3, r1
 80055ac:	360f      	adds	r6, #15
 80055ae:	f104 010f 	add.w	r1, r4, #15
 80055b2:	4434      	add	r4, r6
    return  error;
  }
  /* Figure C.3: ordering procedure for encoding procedure code tables */
  k = 0;

  while (k < lastK)
 80055b4:	42a1      	cmp	r1, r4
 80055b6:	d102      	bne.n	80055be <JPEG_DCHuff_BitsVals_To_SizeCodes+0x2c>
    }
  }

  /* Return function status */
  return HAL_OK;
}
 80055b8:	f20d 5d14 	addw	sp, sp, #1300	@ 0x514
 80055bc:	bdf0      	pop	{r4, r5, r6, r7, pc}
    i = DC_BitsValsTable->HuffVal[k];
 80055be:	f811 6f01 	ldrb.w	r6, [r1, #1]!
    if (i >= JPEG_DC_HUFF_TABLE_SIZE)
 80055c2:	2e0b      	cmp	r6, #11
 80055c4:	d80a      	bhi.n	80055dc <JPEG_DCHuff_BitsVals_To_SizeCodes+0x4a>
      DC_SizeCodesTable->HuffmanCode[i] = huffcode[k];
 80055c6:	f852 cb04 	ldr.w	ip, [r2], #4
 80055ca:	eb05 0786 	add.w	r7, r5, r6, lsl #2
 80055ce:	f8c7 c00c 	str.w	ip, [r7, #12]
      DC_SizeCodesTable->CodeLength[i] = huffsize[k] - 1U;
 80055d2:	f813 7b01 	ldrb.w	r7, [r3], #1
 80055d6:	3f01      	subs	r7, #1
 80055d8:	55af      	strb	r7, [r5, r6]
      k++;
 80055da:	e7eb      	b.n	80055b4 <JPEG_DCHuff_BitsVals_To_SizeCodes+0x22>
      return HAL_ERROR; /* Huffman Table overflow error*/
 80055dc:	2001      	movs	r0, #1
 80055de:	e7eb      	b.n	80055b8 <JPEG_DCHuff_BitsVals_To_SizeCodes+0x26>

080055e0 <JPEG_Set_HuffDC_Mem>:
  * @param  DCTableAddress Encoder DC huffman table address it could be HUFFENC_DC0 or HUFFENC_DC1.
  * @retval HAL status
  */
static HAL_StatusTypeDef JPEG_Set_HuffDC_Mem(const JPEG_HandleTypeDef *hjpeg, JPEG_DCHuffTableTypeDef *HuffTableDC,
                                             const __IO uint32_t *DCTableAddress)
{
 80055e0:	4603      	mov	r3, r0
 80055e2:	b5f0      	push	{r4, r5, r6, r7, lr}
  uint32_t lsb;
  uint32_t msb;
  __IO uint32_t *address;
  __IO uint32_t *addressDef;

  if (DCTableAddress == (hjpeg->Instance->HUFFENC_DC0))
 80055e4:	681c      	ldr	r4, [r3, #0]
{
 80055e6:	4608      	mov	r0, r1
  if (DCTableAddress == (hjpeg->Instance->HUFFENC_DC0))
 80055e8:	f504 63f8 	add.w	r3, r4, #1984	@ 0x7c0
 80055ec:	429a      	cmp	r2, r3
{
 80055ee:	b091      	sub	sp, #68	@ 0x44
  if (DCTableAddress == (hjpeg->Instance->HUFFENC_DC0))
 80055f0:	d127      	bne.n	8005642 <JPEG_Set_HuffDC_Mem+0x62>
  {
    address = (hjpeg->Instance->HUFFENC_DC0 + (JPEG_DC_HUFF_TABLE_SIZE / 2UL));
 80055f2:	f504 64fb 	add.w	r4, r4, #2008	@ 0x7d8
    return HAL_ERROR;
  }

  if (HuffTableDC != NULL)
  {
    error = JPEG_DCHuff_BitsVals_To_SizeCodes(HuffTableDC, &dcSizeCodesTable);
 80055f6:	a901      	add	r1, sp, #4
 80055f8:	f7ff ffcb 	bl	8005592 <JPEG_DCHuff_BitsVals_To_SizeCodes>
    if (error != HAL_OK)
 80055fc:	b9f8      	cbnz	r0, 800563e <JPEG_Set_HuffDC_Mem+0x5e>
    {
      return  error;
    }
    addressDef = address;
    *addressDef = 0x0FFF0FFF;
 80055fe:	f06f 23f0 	mvn.w	r3, #4026593280	@ 0xf000f000
 8005602:	aa01      	add	r2, sp, #4
    addressDef++;
    *addressDef = 0x0FFF0FFF;
 8005604:	4615      	mov	r5, r2
    *addressDef = 0x0FFF0FFF;
 8005606:	6023      	str	r3, [r4, #0]
    *addressDef = 0x0FFF0FFF;
 8005608:	f1a4 0618 	sub.w	r6, r4, #24
 800560c:	6063      	str	r3, [r4, #4]
    i = JPEG_DC_HUFF_TABLE_SIZE;
    while (i > 1UL)
    {
      i--;
      address --;
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) |
 800560e:	7ad1      	ldrb	r1, [r2, #11]
            ((uint32_t)dcSizeCodesTable.HuffmanCode[i] & 0xFFUL);
 8005610:	f895 3038 	ldrb.w	r3, [r5, #56]	@ 0x38
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) |
 8005614:	0209      	lsls	r1, r1, #8
 8005616:	f401 6170 	and.w	r1, r1, #3840	@ 0xf00
 800561a:	4319      	orrs	r1, r3
      i--;
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) |
 800561c:	7a93      	ldrb	r3, [r2, #10]
            ((uint32_t)dcSizeCodesTable.HuffmanCode[i] & 0xFFUL);
 800561e:	f895 7034 	ldrb.w	r7, [r5, #52]	@ 0x34
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) |
 8005622:	021b      	lsls	r3, r3, #8
 8005624:	f403 6370 	and.w	r3, r3, #3840	@ 0xf00
 8005628:	433b      	orrs	r3, r7

      *address = lsb | (msb << 16);
 800562a:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 800562e:	f844 3d04 	str.w	r3, [r4, #-4]!
    while (i > 1UL)
 8005632:	42b4      	cmp	r4, r6
 8005634:	f1a2 0202 	sub.w	r2, r2, #2
 8005638:	f1a5 0508 	sub.w	r5, r5, #8
 800563c:	d1e7      	bne.n	800560e <JPEG_Set_HuffDC_Mem+0x2e>
    }
  }

  /* Return function status */
  return HAL_OK;
}
 800563e:	b011      	add	sp, #68	@ 0x44
 8005640:	bdf0      	pop	{r4, r5, r6, r7, pc}
  else if (DCTableAddress == (hjpeg->Instance->HUFFENC_DC1))
 8005642:	f504 63fc 	add.w	r3, r4, #2016	@ 0x7e0
 8005646:	429a      	cmp	r2, r3
 8005648:	d102      	bne.n	8005650 <JPEG_Set_HuffDC_Mem+0x70>
    address = (hjpeg->Instance->HUFFENC_DC1 + (JPEG_DC_HUFF_TABLE_SIZE / 2UL));
 800564a:	f504 64ff 	add.w	r4, r4, #2040	@ 0x7f8
  if (HuffTableDC != NULL)
 800564e:	e7d2      	b.n	80055f6 <JPEG_Set_HuffDC_Mem+0x16>
    return HAL_ERROR;
 8005650:	2001      	movs	r0, #1
 8005652:	e7f4      	b.n	800563e <JPEG_Set_HuffDC_Mem+0x5e>

08005654 <JPEG_Set_HuffAC_Mem>:
  * @param  ACTableAddress Encoder AC huffman table address it could be HUFFENC_AC0 or HUFFENC_AC1.
  * @retval HAL status
  */
static HAL_StatusTypeDef JPEG_Set_HuffAC_Mem(const JPEG_HandleTypeDef *hjpeg, JPEG_ACHuffTableTypeDef *HuffTableAC,
                                             const __IO uint32_t *ACTableAddress)
{
 8005654:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  uint32_t lsb;
  uint32_t msb;
  __IO uint32_t *address;
  __IO uint32_t *addressDef;

  if (ACTableAddress == (hjpeg->Instance->HUFFENC_AC0))
 8005658:	6804      	ldr	r4, [r0, #0]
{
 800565a:	460e      	mov	r6, r1
  if (ACTableAddress == (hjpeg->Instance->HUFFENC_AC0))
 800565c:	f504 63a0 	add.w	r3, r4, #1280	@ 0x500
 8005660:	429a      	cmp	r2, r3
{
 8005662:	f6ad 0d38 	subw	sp, sp, #2104	@ 0x838
  if (ACTableAddress == (hjpeg->Instance->HUFFENC_AC0))
 8005666:	d14b      	bne.n	8005700 <JPEG_Set_HuffAC_Mem+0xac>
  {
    address = (hjpeg->Instance->HUFFENC_AC0 + (JPEG_AC_HUFF_TABLE_SIZE / 2UL));
 8005668:	f204 6444 	addw	r4, r4, #1604	@ 0x644
  error = JPEG_Bits_To_SizeCodes(AC_BitsValsTable->Bits, huffsize, huffcode, &lastK);
 800566c:	466b      	mov	r3, sp
 800566e:	4630      	mov	r0, r6
 8005670:	f20d 4234 	addw	r2, sp, #1076	@ 0x434
 8005674:	a901      	add	r1, sp, #4
 8005676:	f7ff ff5b 	bl	8005530 <JPEG_Bits_To_SizeCodes>
  if (error != HAL_OK)
 800567a:	2800      	cmp	r0, #0
 800567c:	d13c      	bne.n	80056f8 <JPEG_Set_HuffAC_Mem+0xa4>
 800567e:	4617      	mov	r7, r2
      i = (msb * 10UL) + lsb - 1UL;
 8005680:	f04f 0e0a 	mov.w	lr, #10
 8005684:	9b00      	ldr	r3, [sp, #0]
 8005686:	460d      	mov	r5, r1
 8005688:	330f      	adds	r3, #15
 800568a:	f106 0c0f 	add.w	ip, r6, #15
 800568e:	18f1      	adds	r1, r6, r3
      AC_SizeCodesTable->HuffmanCode[i] = huffcode[k];
 8005690:	ae42      	add	r6, sp, #264	@ 0x108
  while (k < lastK)
 8005692:	4561      	cmp	r1, ip
 8005694:	d13b      	bne.n	800570e <JPEG_Set_HuffAC_Mem+0xba>
    /* Locations 162:175 of each AC table contain information used internally by the core */

    addressDef = address;
    for (i = 0; i < 3UL; i++)
    {
      *addressDef = 0x0FFF0FFF;
 8005696:	f06f 23f0 	mvn.w	r3, #4026593280	@ 0xf000f000
 800569a:	a942      	add	r1, sp, #264	@ 0x108
    addressDef++;
    *addressDef = 0x0FD30FD2;
    addressDef++;
    *addressDef = 0x0FD50FD4;
    addressDef++;
    *addressDef = 0x0FD70FD6;
 800569c:	460d      	mov	r5, r1
      *addressDef = 0x0FFF0FFF;
 800569e:	6023      	str	r3, [r4, #0]
 80056a0:	6063      	str	r3, [r4, #4]
 80056a2:	60a3      	str	r3, [r4, #8]
    *addressDef = 0x0FD10FD0;
 80056a4:	f103 33d1 	add.w	r3, r3, #3520188881	@ 0xd1d1d1d1
 80056a8:	f103 232e 	add.w	r3, r3, #771763712	@ 0x2e002e00
 80056ac:	60e3      	str	r3, [r4, #12]
    *addressDef = 0x0FD30FD2;
 80056ae:	f103 1302 	add.w	r3, r3, #131074	@ 0x20002
 80056b2:	6123      	str	r3, [r4, #16]
    *addressDef = 0x0FD50FD4;
 80056b4:	f103 1302 	add.w	r3, r3, #131074	@ 0x20002
 80056b8:	6163      	str	r3, [r4, #20]
    *addressDef = 0x0FD70FD6;
 80056ba:	f103 1302 	add.w	r3, r3, #131074	@ 0x20002
 80056be:	61a3      	str	r3, [r4, #24]
    /* end of Locations 162:175  */


    i = JPEG_AC_HUFF_TABLE_SIZE;
    while (i > 1UL)
 80056c0:	f5a4 76a2 	sub.w	r6, r4, #324	@ 0x144
    {
      i--;
      address--;
      msb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) |
 80056c4:	f891 20a1 	ldrb.w	r2, [r1, #161]	@ 0xa1
            ((uint32_t)acSizeCodesTable.HuffmanCode[i] & 0xFFUL);
 80056c8:	f895 3328 	ldrb.w	r3, [r5, #808]	@ 0x328
      msb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) |
 80056cc:	0212      	lsls	r2, r2, #8
 80056ce:	f402 6270 	and.w	r2, r2, #3840	@ 0xf00
 80056d2:	431a      	orrs	r2, r3
      i--;
      lsb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) |
 80056d4:	f891 30a0 	ldrb.w	r3, [r1, #160]	@ 0xa0
            ((uint32_t)acSizeCodesTable.HuffmanCode[i] & 0xFFUL);
 80056d8:	f895 7324 	ldrb.w	r7, [r5, #804]	@ 0x324
      lsb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) |
 80056dc:	021b      	lsls	r3, r3, #8
 80056de:	f403 6370 	and.w	r3, r3, #3840	@ 0xf00
 80056e2:	433b      	orrs	r3, r7

      *address = lsb | (msb << 16);
 80056e4:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 80056e8:	f844 3d04 	str.w	r3, [r4, #-4]!
    while (i > 1UL)
 80056ec:	42b4      	cmp	r4, r6
 80056ee:	f1a1 0102 	sub.w	r1, r1, #2
 80056f2:	f1a5 0508 	sub.w	r5, r5, #8
 80056f6:	d1e5      	bne.n	80056c4 <JPEG_Set_HuffAC_Mem+0x70>
    }
  }

  /* Return function status */
  return HAL_OK;
}
 80056f8:	f60d 0d38 	addw	sp, sp, #2104	@ 0x838
 80056fc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  else if (ACTableAddress == (hjpeg->Instance->HUFFENC_AC1))
 8005700:	f504 63cc 	add.w	r3, r4, #1632	@ 0x660
 8005704:	429a      	cmp	r2, r3
 8005706:	d10f      	bne.n	8005728 <JPEG_Set_HuffAC_Mem+0xd4>
    address = (hjpeg->Instance->HUFFENC_AC1 + (JPEG_AC_HUFF_TABLE_SIZE / 2UL));
 8005708:	f204 74a4 	addw	r4, r4, #1956	@ 0x7a4
  if (HuffTableAC != NULL)
 800570c:	e7ae      	b.n	800566c <JPEG_Set_HuffAC_Mem+0x18>
    i = AC_BitsValsTable->HuffVal[k];
 800570e:	f81c 3f01 	ldrb.w	r3, [ip, #1]!
    if (i == 0UL)
 8005712:	b15b      	cbz	r3, 800572c <JPEG_Set_HuffAC_Mem+0xd8>
    else if (i == 0xF0UL) /* i = 0xF0 ZRL code*/
 8005714:	2bf0      	cmp	r3, #240	@ 0xf0
 8005716:	d015      	beq.n	8005744 <JPEG_Set_HuffAC_Mem+0xf0>
      msb = (i & 0xF0UL) >> 4;
 8005718:	091a      	lsrs	r2, r3, #4
      lsb = (i & 0x0FUL);
 800571a:	f003 030f 	and.w	r3, r3, #15
      i = (msb * 10UL) + lsb - 1UL;
 800571e:	3b01      	subs	r3, #1
 8005720:	fb0e 3302 	mla	r3, lr, r2, r3
    if (i >= JPEG_AC_HUFF_TABLE_SIZE)
 8005724:	2ba1      	cmp	r3, #161	@ 0xa1
 8005726:	d902      	bls.n	800572e <JPEG_Set_HuffAC_Mem+0xda>
    return HAL_ERROR;
 8005728:	2001      	movs	r0, #1
 800572a:	e7e5      	b.n	80056f8 <JPEG_Set_HuffAC_Mem+0xa4>
      i = JPEG_AC_HUFF_TABLE_SIZE - 2UL; /*i = 0x00 EOB code*/
 800572c:	23a0      	movs	r3, #160	@ 0xa0
      AC_SizeCodesTable->HuffmanCode[i] = huffcode[k];
 800572e:	f857 8b04 	ldr.w	r8, [r7], #4
 8005732:	eb06 0283 	add.w	r2, r6, r3, lsl #2
 8005736:	f8c2 80a4 	str.w	r8, [r2, #164]	@ 0xa4
      AC_SizeCodesTable->CodeLength[i] = huffsize[k] - 1U;
 800573a:	f815 2b01 	ldrb.w	r2, [r5], #1
 800573e:	3a01      	subs	r2, #1
 8005740:	54f2      	strb	r2, [r6, r3]
      k++;
 8005742:	e7a6      	b.n	8005692 <JPEG_Set_HuffAC_Mem+0x3e>
      i = JPEG_AC_HUFF_TABLE_SIZE - 1UL;
 8005744:	23a1      	movs	r3, #161	@ 0xa1
 8005746:	e7f2      	b.n	800572e <JPEG_Set_HuffAC_Mem+0xda>

08005748 <JPEG_Init_Process>:
  * @retval None
  */
static void JPEG_Init_Process(JPEG_HandleTypeDef *hjpeg)
{
  /*Reset pause*/
  hjpeg->Context &= (~(JPEG_CONTEXT_PAUSE_INPUT | JPEG_CONTEXT_PAUSE_OUTPUT));
 8005748:	6d43      	ldr	r3, [r0, #84]	@ 0x54
 800574a:	f423 5340 	bic.w	r3, r3, #12288	@ 0x3000
 800574e:	6543      	str	r3, [r0, #84]	@ 0x54

  if ((hjpeg->Context & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
 8005750:	6d42      	ldr	r2, [r0, #84]	@ 0x54
  {
    /*Set JPEG Codec to Decoding mode */
    hjpeg->Instance->CONFR1 |= JPEG_CONFR1_DE;
 8005752:	6803      	ldr	r3, [r0, #0]
  if ((hjpeg->Context & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
 8005754:	f002 0203 	and.w	r2, r2, #3
 8005758:	2a02      	cmp	r2, #2
    hjpeg->Instance->CONFR1 |= JPEG_CONFR1_DE;
 800575a:	685a      	ldr	r2, [r3, #4]
 800575c:	bf0c      	ite	eq
 800575e:	f042 0208 	orreq.w	r2, r2, #8
  }
  else /* JPEG_CONTEXT_ENCODE */
  {
    /*Set JPEG Codec to Encoding mode */
    hjpeg->Instance->CONFR1 &= ~JPEG_CONFR1_DE;
 8005762:	f022 0208 	bicne.w	r2, r2, #8
 8005766:	605a      	str	r2, [r3, #4]
  }

  /*Stop JPEG processing */
  hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
 8005768:	681a      	ldr	r2, [r3, #0]
 800576a:	f022 0201 	bic.w	r2, r2, #1
 800576e:	601a      	str	r2, [r3, #0]

  /* Disable All Interrupts */
  __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
 8005770:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8005772:	f022 027e 	bic.w	r2, r2, #126	@ 0x7e
 8005776:	631a      	str	r2, [r3, #48]	@ 0x30

  /* Disable All DMA requests */
  JPEG_DISABLE_DMA(hjpeg, JPEG_DMA_MASK);
 8005778:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 800577a:	f422 52c0 	bic.w	r2, r2, #6144	@ 0x1800
 800577e:	631a      	str	r2, [r3, #48]	@ 0x30
  /* Flush input and output FIFOs*/
  hjpeg->Instance->CR |= JPEG_CR_IFF;
 8005780:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8005782:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
 8005786:	631a      	str	r2, [r3, #48]	@ 0x30
  hjpeg->Instance->CR |= JPEG_CR_OFF;
 8005788:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 800578a:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
 800578e:	631a      	str	r2, [r3, #48]	@ 0x30

  /* Clear all flags */
  __HAL_JPEG_CLEAR_FLAG(hjpeg, JPEG_FLAG_ALL);
 8005790:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
 8005792:	f042 0260 	orr.w	r2, r2, #96	@ 0x60
 8005796:	639a      	str	r2, [r3, #56]	@ 0x38

  /*Start Encoding/Decoding*/
  hjpeg->Instance->CONFR0 |=  JPEG_CONFR0_START;
 8005798:	681a      	ldr	r2, [r3, #0]
 800579a:	f042 0201 	orr.w	r2, r2, #1
 800579e:	601a      	str	r2, [r3, #0]

  if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
 80057a0:	6d42      	ldr	r2, [r0, #84]	@ 0x54
 80057a2:	f002 020c 	and.w	r2, r2, #12
 80057a6:	2a08      	cmp	r2, #8
 80057a8:	d104      	bne.n	80057b4 <JPEG_Init_Process+0x6c>
  {
    /*Enable IN/OUT, end of Conversation, and end of header parsing interruptions*/
    __HAL_JPEG_ENABLE_IT(hjpeg, JPEG_IT_IFT | JPEG_IT_IFNF | JPEG_IT_OFT | JPEG_IT_OFNE | JPEG_IT_EOC | JPEG_IT_HPD);
 80057aa:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80057ac:	f042 026e 	orr.w	r2, r2, #110	@ 0x6e
  }
  else if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
  {
    /*Enable End Of Conversation, and End Of Header parsing interruptions*/
    __HAL_JPEG_ENABLE_IT(hjpeg, JPEG_IT_EOC | JPEG_IT_HPD);
 80057b0:	631a      	str	r2, [r3, #48]	@ 0x30
  }
  else
  {
    /* Nothing to do */
  }
}
 80057b2:	4770      	bx	lr
  else if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
 80057b4:	6d42      	ldr	r2, [r0, #84]	@ 0x54
 80057b6:	f002 020c 	and.w	r2, r2, #12
 80057ba:	2a0c      	cmp	r2, #12
 80057bc:	d1f9      	bne.n	80057b2 <JPEG_Init_Process+0x6a>
    __HAL_JPEG_ENABLE_IT(hjpeg, JPEG_IT_EOC | JPEG_IT_HPD);
 80057be:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80057c0:	f042 0260 	orr.w	r2, r2, #96	@ 0x60
 80057c4:	e7f4      	b.n	80057b0 <JPEG_Init_Process+0x68>
	...

080057c8 <JPEG_DMA_StartProcess>:
  * @param  hjpeg pointer to a JPEG_HandleTypeDef structure that contains
  *         the configuration information for JPEG module
  * @retval JPEG_PROCESS_DONE if process ends else JPEG_PROCESS_ONGOING
  */
static HAL_StatusTypeDef JPEG_DMA_StartProcess(JPEG_HandleTypeDef *hjpeg)
{
 80057c8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  if ((hjpeg->InDataLength < 4UL) || (hjpeg->OutDataLength < 4UL))
 80057ca:	6a83      	ldr	r3, [r0, #40]	@ 0x28
{
 80057cc:	4604      	mov	r4, r0
  if ((hjpeg->InDataLength < 4UL) || (hjpeg->OutDataLength < 4UL))
 80057ce:	2b03      	cmp	r3, #3
 80057d0:	d92a      	bls.n	8005828 <JPEG_DMA_StartProcess+0x60>
 80057d2:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
 80057d4:	2903      	cmp	r1, #3
 80057d6:	d927      	bls.n	8005828 <JPEG_DMA_StartProcess+0x60>
  {
    return HAL_ERROR;
  }
  /* Reset Ending DMA internal context flag*/
  hjpeg->Context &= ~JPEG_CONTEXT_ENDING_DMA;
 80057d8:	6d42      	ldr	r2, [r0, #84]	@ 0x54

  /* Disable DMA In/Out Request*/
  JPEG_DISABLE_DMA(hjpeg, JPEG_DMA_ODMA | JPEG_DMA_IDMA);

  /* Set the JPEG DMA In transfer complete callback */
  hjpeg->hdmain->XferCpltCallback = JPEG_DMAInCpltCallback;
 80057da:	4d34      	ldr	r5, [pc, #208]	@ (80058ac <JPEG_DMA_StartProcess+0xe4>)
  hjpeg->Context &= ~JPEG_CONTEXT_ENDING_DMA;
 80057dc:	f422 4200 	bic.w	r2, r2, #32768	@ 0x8000
 80057e0:	6542      	str	r2, [r0, #84]	@ 0x54
  JPEG_DISABLE_DMA(hjpeg, JPEG_DMA_ODMA | JPEG_DMA_IDMA);
 80057e2:	6802      	ldr	r2, [r0, #0]
  /* Set the DMA In error callback */
  hjpeg->hdmain->XferErrorCallback = JPEG_DMAErrorCallback;
 80057e4:	4e32      	ldr	r6, [pc, #200]	@ (80058b0 <JPEG_DMA_StartProcess+0xe8>)
  JPEG_DISABLE_DMA(hjpeg, JPEG_DMA_ODMA | JPEG_DMA_IDMA);
 80057e6:	6b10      	ldr	r0, [r2, #48]	@ 0x30

  /* Set the JPEG DMA Out transfer complete callback */
  hjpeg->hdmaout->XferCpltCallback = JPEG_DMAOutCpltCallback;
 80057e8:	4f32      	ldr	r7, [pc, #200]	@ (80058b4 <JPEG_DMA_StartProcess+0xec>)
  JPEG_DISABLE_DMA(hjpeg, JPEG_DMA_ODMA | JPEG_DMA_IDMA);
 80057ea:	f420 50c0 	bic.w	r0, r0, #6144	@ 0x1800
 80057ee:	6310      	str	r0, [r2, #48]	@ 0x30
  hjpeg->hdmain->XferCpltCallback = JPEG_DMAInCpltCallback;
 80057f0:	6b20      	ldr	r0, [r4, #48]	@ 0x30

  /*DMA transfer size must be a multiple of 4 bytes i.e multiple of 32bits words*/
  hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % 4UL);

  /*DMA transfer size must be a multiple of 4 bytes i.e multiple of 32bits words*/
  hjpeg->OutDataLength = hjpeg->OutDataLength - (hjpeg->OutDataLength % 4UL);
 80057f2:	f021 0103 	bic.w	r1, r1, #3
  hjpeg->hdmain->XferCpltCallback = JPEG_DMAInCpltCallback;
 80057f6:	6605      	str	r5, [r0, #96]	@ 0x60
  hjpeg->hdmaout->XferCpltCallback = JPEG_DMAOutCpltCallback;
 80057f8:	6b65      	ldr	r5, [r4, #52]	@ 0x34
  hjpeg->hdmain->XferErrorCallback = JPEG_DMAErrorCallback;
 80057fa:	6686      	str	r6, [r0, #104]	@ 0x68
  hjpeg->hdmaout->XferErrorCallback = JPEG_DMAErrorCallback;
 80057fc:	66ae      	str	r6, [r5, #104]	@ 0x68
  hjpeg->hdmaout->XferAbortCallback = JPEG_DMAOutAbortCallback;
 80057fe:	4e2e      	ldr	r6, [pc, #184]	@ (80058b8 <JPEG_DMA_StartProcess+0xf0>)
  hjpeg->hdmaout->XferCpltCallback = JPEG_DMAOutCpltCallback;
 8005800:	662f      	str	r7, [r5, #96]	@ 0x60
  hjpeg->hdmaout->XferAbortCallback = JPEG_DMAOutAbortCallback;
 8005802:	66ee      	str	r6, [r5, #108]	@ 0x6c
  hjpeg->OutDataLength = hjpeg->OutDataLength - (hjpeg->OutDataLength % 4UL);
 8005804:	62e1      	str	r1, [r4, #44]	@ 0x2c

  if ((hjpeg->hdmain->Mode & DMA_LINKEDLIST) == DMA_LINKEDLIST)
 8005806:	6d01      	ldr	r1, [r0, #80]	@ 0x50
  hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % 4UL);
 8005808:	f023 0303 	bic.w	r3, r3, #3
  if ((hjpeg->hdmain->Mode & DMA_LINKEDLIST) == DMA_LINKEDLIST)
 800580c:	0609      	lsls	r1, r1, #24
  hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % 4UL);
 800580e:	62a3      	str	r3, [r4, #40]	@ 0x28
  if ((hjpeg->hdmain->Mode & DMA_LINKEDLIST) == DMA_LINKEDLIST)
 8005810:	d516      	bpl.n	8005840 <JPEG_DMA_StartProcess+0x78>
  {
    if (hjpeg->hdmain->LinkedListQueue != NULL)
 8005812:	6f41      	ldr	r1, [r0, #116]	@ 0x74
 8005814:	b151      	cbz	r1, 800582c <JPEG_DMA_StartProcess+0x64>
    {
      /* Set DMA data size */
      hjpeg->hdmain->LinkedListQueue->Head->LinkRegisters[NODE_CBR1_DEFAULT_OFFSET] = hjpeg->InDataLength;
 8005816:	6809      	ldr	r1, [r1, #0]

      /* Set DMA source address */
      hjpeg->hdmain->LinkedListQueue->Head->LinkRegisters[NODE_CSAR_DEFAULT_OFFSET] = (uint32_t)hjpeg->pJpegInBuffPtr;

      /* Set DMA destination address */
      hjpeg->hdmain->LinkedListQueue->Head->LinkRegisters[NODE_CDAR_DEFAULT_OFFSET] = (uint32_t)&hjpeg->Instance->DIR;
 8005818:	3240      	adds	r2, #64	@ 0x40
      hjpeg->hdmain->LinkedListQueue->Head->LinkRegisters[NODE_CBR1_DEFAULT_OFFSET] = hjpeg->InDataLength;
 800581a:	608b      	str	r3, [r1, #8]
      hjpeg->hdmain->LinkedListQueue->Head->LinkRegisters[NODE_CSAR_DEFAULT_OFFSET] = (uint32_t)hjpeg->pJpegInBuffPtr;
 800581c:	69a3      	ldr	r3, [r4, #24]
      hjpeg->hdmain->LinkedListQueue->Head->LinkRegisters[NODE_CDAR_DEFAULT_OFFSET] = (uint32_t)&hjpeg->Instance->DIR;
 800581e:	610a      	str	r2, [r1, #16]
      hjpeg->hdmain->LinkedListQueue->Head->LinkRegisters[NODE_CSAR_DEFAULT_OFFSET] = (uint32_t)hjpeg->pJpegInBuffPtr;
 8005820:	60cb      	str	r3, [r1, #12]

      if (HAL_DMAEx_List_Start_IT(hjpeg->hdmain) != HAL_OK)
 8005822:	f7ff f903 	bl	8004a2c <HAL_DMAEx_List_Start_IT>
 8005826:	b1a8      	cbz	r0, 8005854 <JPEG_DMA_StartProcess+0x8c>
    return HAL_ERROR;
 8005828:	2001      	movs	r0, #1

  /* Enable JPEG In/Out DMA requests*/
  JPEG_ENABLE_DMA(hjpeg, JPEG_DMA_IDMA | JPEG_DMA_ODMA);

  return HAL_OK;
}
 800582a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
      hjpeg->State = HAL_JPEG_STATE_READY;
 800582c:	2301      	movs	r3, #1
 800582e:	f884 304d 	strb.w	r3, [r4, #77]	@ 0x4d
      hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
 8005832:	6d23      	ldr	r3, [r4, #80]	@ 0x50
      __HAL_UNLOCK(hjpeg);
 8005834:	f884 104c 	strb.w	r1, [r4, #76]	@ 0x4c
      hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
 8005838:	f043 0304 	orr.w	r3, r3, #4
 800583c:	6523      	str	r3, [r4, #80]	@ 0x50
      return HAL_ERROR;
 800583e:	e7f3      	b.n	8005828 <JPEG_DMA_StartProcess+0x60>
    if (HAL_DMA_Start_IT(hjpeg->hdmain, (uint32_t)hjpeg->pJpegInBuffPtr, (uint32_t)&hjpeg->Instance->DIR,
 8005840:	69a1      	ldr	r1, [r4, #24]
 8005842:	3240      	adds	r2, #64	@ 0x40
 8005844:	f7fe fe98 	bl	8004578 <HAL_DMA_Start_IT>
 8005848:	b120      	cbz	r0, 8005854 <JPEG_DMA_StartProcess+0x8c>
      hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
 800584a:	6d23      	ldr	r3, [r4, #80]	@ 0x50
 800584c:	f043 0304 	orr.w	r3, r3, #4
 8005850:	6523      	str	r3, [r4, #80]	@ 0x50
      return HAL_ERROR;
 8005852:	e7e9      	b.n	8005828 <JPEG_DMA_StartProcess+0x60>
  if ((hjpeg->hdmaout->Mode & DMA_LINKEDLIST) == DMA_LINKEDLIST)
 8005854:	6b60      	ldr	r0, [r4, #52]	@ 0x34
 8005856:	6d03      	ldr	r3, [r0, #80]	@ 0x50
 8005858:	061b      	lsls	r3, r3, #24
 800585a:	d51e      	bpl.n	800589a <JPEG_DMA_StartProcess+0xd2>
    if (hjpeg->hdmaout->LinkedListQueue != NULL)
 800585c:	6f43      	ldr	r3, [r0, #116]	@ 0x74
 800585e:	b193      	cbz	r3, 8005886 <JPEG_DMA_StartProcess+0xbe>
      hjpeg->hdmaout->LinkedListQueue->Head->LinkRegisters[NODE_CBR1_DEFAULT_OFFSET] = hjpeg->OutDataLength;
 8005860:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
 8005862:	681b      	ldr	r3, [r3, #0]
 8005864:	609a      	str	r2, [r3, #8]
      hjpeg->hdmaout->LinkedListQueue->Head->LinkRegisters[NODE_CSAR_DEFAULT_OFFSET] = (uint32_t)&hjpeg->Instance->DOR;
 8005866:	6822      	ldr	r2, [r4, #0]
 8005868:	3244      	adds	r2, #68	@ 0x44
 800586a:	60da      	str	r2, [r3, #12]
      hjpeg->hdmaout->LinkedListQueue->Head->LinkRegisters[NODE_CDAR_DEFAULT_OFFSET] = (uint32_t)hjpeg->pJpegOutBuffPtr;
 800586c:	69e2      	ldr	r2, [r4, #28]
 800586e:	611a      	str	r2, [r3, #16]
      if (HAL_DMAEx_List_Start_IT(hjpeg->hdmaout) != HAL_OK)
 8005870:	f7ff f8dc 	bl	8004a2c <HAL_DMAEx_List_Start_IT>
 8005874:	2800      	cmp	r0, #0
 8005876:	d1d7      	bne.n	8005828 <JPEG_DMA_StartProcess+0x60>
  JPEG_ENABLE_DMA(hjpeg, JPEG_DMA_IDMA | JPEG_DMA_ODMA);
 8005878:	6822      	ldr	r2, [r4, #0]
  return HAL_OK;
 800587a:	2000      	movs	r0, #0
  JPEG_ENABLE_DMA(hjpeg, JPEG_DMA_IDMA | JPEG_DMA_ODMA);
 800587c:	6b13      	ldr	r3, [r2, #48]	@ 0x30
 800587e:	f443 53c0 	orr.w	r3, r3, #6144	@ 0x1800
 8005882:	6313      	str	r3, [r2, #48]	@ 0x30
  return HAL_OK;
 8005884:	e7d1      	b.n	800582a <JPEG_DMA_StartProcess+0x62>
      hjpeg->State = HAL_JPEG_STATE_READY;
 8005886:	2201      	movs	r2, #1
 8005888:	f884 204d 	strb.w	r2, [r4, #77]	@ 0x4d
      hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
 800588c:	6d22      	ldr	r2, [r4, #80]	@ 0x50
      __HAL_UNLOCK(hjpeg);
 800588e:	f884 304c 	strb.w	r3, [r4, #76]	@ 0x4c
      hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
 8005892:	f042 0204 	orr.w	r2, r2, #4
 8005896:	6522      	str	r2, [r4, #80]	@ 0x50
      return HAL_ERROR;
 8005898:	e7c6      	b.n	8005828 <JPEG_DMA_StartProcess+0x60>
    if (HAL_DMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
 800589a:	6821      	ldr	r1, [r4, #0]
 800589c:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 800589e:	69e2      	ldr	r2, [r4, #28]
 80058a0:	3144      	adds	r1, #68	@ 0x44
 80058a2:	f7fe fe69 	bl	8004578 <HAL_DMA_Start_IT>
 80058a6:	2800      	cmp	r0, #0
 80058a8:	d0e6      	beq.n	8005878 <JPEG_DMA_StartProcess+0xb0>
 80058aa:	e7ce      	b.n	800584a <JPEG_DMA_StartProcess+0x82>
 80058ac:	08005edd 	.word	0x08005edd
 80058b0:	08005dcf 	.word	0x08005dcf
 80058b4:	0800637b 	.word	0x0800637b
 80058b8:	0800636d 	.word	0x0800636d

080058bc <HAL_JPEG_Init>:
{
 80058bc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  if (hjpeg == NULL)
 80058be:	4605      	mov	r5, r0
 80058c0:	2800      	cmp	r0, #0
 80058c2:	f000 80f6 	beq.w	8005ab2 <HAL_JPEG_Init+0x1f6>
  if (hjpeg->State == HAL_JPEG_STATE_RESET)
 80058c6:	f890 304d 	ldrb.w	r3, [r0, #77]	@ 0x4d
 80058ca:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 80058ce:	b91b      	cbnz	r3, 80058d8 <HAL_JPEG_Init+0x1c>
    hjpeg->Lock = HAL_UNLOCKED;
 80058d0:	f880 204c 	strb.w	r2, [r0, #76]	@ 0x4c
    HAL_JPEG_MspInit(hjpeg);
 80058d4:	f7fb f906 	bl	8000ae4 <HAL_JPEG_MspInit>
  hjpeg->State = HAL_JPEG_STATE_BUSY;
 80058d8:	2302      	movs	r3, #2
  __HAL_JPEG_ENABLE(hjpeg);
 80058da:	682c      	ldr	r4, [r5, #0]
  hjpeg->State = HAL_JPEG_STATE_BUSY;
 80058dc:	f885 304d 	strb.w	r3, [r5, #77]	@ 0x4d
  __HAL_JPEG_ENABLE(hjpeg);
 80058e0:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 80058e2:	4a87      	ldr	r2, [pc, #540]	@ (8005b00 <HAL_JPEG_Init+0x244>)
 80058e4:	f043 0301 	orr.w	r3, r3, #1
 80058e8:	6323      	str	r3, [r4, #48]	@ 0x30
  hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
 80058ea:	6823      	ldr	r3, [r4, #0]
  address = (hjpeg->Instance->DHTMEM + 3);
 80058ec:	f504 715b 	add.w	r1, r4, #876	@ 0x36c
  hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
 80058f0:	f023 0301 	bic.w	r3, r3, #1
 80058f4:	6023      	str	r3, [r4, #0]
  __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
 80058f6:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 80058f8:	f504 7057 	add.w	r0, r4, #860	@ 0x35c
 80058fc:	f023 037e 	bic.w	r3, r3, #126	@ 0x7e
 8005900:	6323      	str	r3, [r4, #48]	@ 0x30
  JPEG_DISABLE_DMA(hjpeg, JPEG_DMA_MASK);
 8005902:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8005904:	f423 53c0 	bic.w	r3, r3, #6144	@ 0x1800
 8005908:	6323      	str	r3, [r4, #48]	@ 0x30
  hjpeg->Instance->CR |= JPEG_CR_IFF;
 800590a:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 800590c:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
 8005910:	6323      	str	r3, [r4, #48]	@ 0x30
  hjpeg->Instance->CR |= JPEG_CR_OFF;
 8005912:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8005914:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 8005918:	6323      	str	r3, [r4, #48]	@ 0x30
  __HAL_JPEG_CLEAR_FLAG(hjpeg, JPEG_FLAG_ALL);
 800591a:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 800591c:	f043 0360 	orr.w	r3, r3, #96	@ 0x60
 8005920:	63a3      	str	r3, [r4, #56]	@ 0x38
  hjpeg->QuantTable0 = (uint8_t *)((uint32_t)JPEG_LUM_QuantTable);
 8005922:	4b78      	ldr	r3, [pc, #480]	@ (8005b04 <HAL_JPEG_Init+0x248>)
 8005924:	63eb      	str	r3, [r5, #60]	@ 0x3c
  hjpeg->QuantTable1 = (uint8_t *)((uint32_t)JPEG_CHROM_QuantTable);
 8005926:	4b78      	ldr	r3, [pc, #480]	@ (8005b08 <HAL_JPEG_Init+0x24c>)
 8005928:	642b      	str	r3, [r5, #64]	@ 0x40
  hjpeg->QuantTable2 = NULL;
 800592a:	2300      	movs	r3, #0
  hjpeg->QuantTable3 = NULL;
 800592c:	e9c5 3311 	strd	r3, r3, [r5, #68]	@ 0x44
               (((uint32_t)HuffTableDC0->Bits[index - 2UL] & 0xFFUL) << 16) |
 8005930:	7b93      	ldrb	r3, [r2, #14]
    *address = (((uint32_t)HuffTableDC0->Bits[index - 1UL] & 0xFFUL) << 24) |
 8005932:	7bd6      	ldrb	r6, [r2, #15]
               (((uint32_t)HuffTableDC0->Bits[index - 2UL] & 0xFFUL) << 16) |
 8005934:	041b      	lsls	r3, r3, #16
    *address = (((uint32_t)HuffTableDC0->Bits[index - 1UL] & 0xFFUL) << 24) |
 8005936:	ea43 6306 	orr.w	r3, r3, r6, lsl #24
               ((uint32_t)HuffTableDC0->Bits[index - 4UL] & 0xFFUL);
 800593a:	7b16      	ldrb	r6, [r2, #12]
  while (index > 3UL)
 800593c:	3a04      	subs	r2, #4
               (((uint32_t)HuffTableDC0->Bits[index - 3UL] & 0xFFUL) << 8) |
 800593e:	4333      	orrs	r3, r6
 8005940:	7c56      	ldrb	r6, [r2, #17]
 8005942:	ea43 2306 	orr.w	r3, r3, r6, lsl #8
    *address = (((uint32_t)HuffTableDC0->Bits[index - 1UL] & 0xFFUL) << 24) |
 8005946:	f841 3904 	str.w	r3, [r1], #-4
  while (index > 3UL)
 800594a:	4281      	cmp	r1, r0
 800594c:	d1f0      	bne.n	8005930 <HAL_JPEG_Init+0x74>
    *address = (((uint32_t)HuffTableDC0->HuffVal[index - 1UL] & 0xFFUL) << 24) |
 800594e:	4a6f      	ldr	r2, [pc, #444]	@ (8005b0c <HAL_JPEG_Init+0x250>)
  address = (hjpeg->Instance->DHTMEM + 10UL);
 8005950:	f504 7162 	add.w	r1, r4, #904	@ 0x388
 8005954:	4610      	mov	r0, r2
 8005956:	460e      	mov	r6, r1
    *address = (((uint32_t)HuffTableDC0->HuffVal[index - 1UL] & 0xFFUL) << 24) |
 8005958:	4b6d      	ldr	r3, [pc, #436]	@ (8005b10 <HAL_JPEG_Init+0x254>)
 800595a:	f504 775e 	add.w	r7, r4, #888	@ 0x378
 800595e:	f8c4 3378 	str.w	r3, [r4, #888]	@ 0x378
 8005962:	f1a3 3304 	sub.w	r3, r3, #67372036	@ 0x4040404
 8005966:	f8c4 3374 	str.w	r3, [r4, #884]	@ 0x374
 800596a:	f1a3 3304 	sub.w	r3, r3, #67372036	@ 0x4040404
 800596e:	f8c4 3370 	str.w	r3, [r4, #880]	@ 0x370
               (((uint32_t)HuffTableAC0->Bits[index - 2UL] & 0xFFUL) << 16) |
 8005972:	7b83      	ldrb	r3, [r0, #14]
    *address = (((uint32_t)HuffTableAC0->Bits[index - 1UL] & 0xFFUL) << 24) |
 8005974:	f890 c00f 	ldrb.w	ip, [r0, #15]
               (((uint32_t)HuffTableAC0->Bits[index - 2UL] & 0xFFUL) << 16) |
 8005978:	041b      	lsls	r3, r3, #16
    *address = (((uint32_t)HuffTableAC0->Bits[index - 1UL] & 0xFFUL) << 24) |
 800597a:	ea43 630c 	orr.w	r3, r3, ip, lsl #24
               ((uint32_t)HuffTableAC0->Bits[index - 4UL] & 0xFFUL);
 800597e:	f890 c00c 	ldrb.w	ip, [r0, #12]
  while (index > 3UL)
 8005982:	3804      	subs	r0, #4
               (((uint32_t)HuffTableAC0->Bits[index - 3UL] & 0xFFUL) << 8) |
 8005984:	ea43 030c 	orr.w	r3, r3, ip
 8005988:	f890 c011 	ldrb.w	ip, [r0, #17]
 800598c:	ea43 230c 	orr.w	r3, r3, ip, lsl #8
    *address = (((uint32_t)HuffTableAC0->Bits[index - 1UL] & 0xFFUL) << 24) |
 8005990:	f846 3904 	str.w	r3, [r6], #-4
  while (index > 3UL)
 8005994:	42be      	cmp	r6, r7
 8005996:	d1ec      	bne.n	8005972 <HAL_JPEG_Init+0xb6>
  value = *address & 0xFFFF0000U;
 8005998:	f8d4 342c 	ldr.w	r3, [r4, #1068]	@ 0x42c
  address--; /* address = hjpeg->Instance->DHTMEM + 50*/
 800599c:	f504 6085 	add.w	r0, r4, #1064	@ 0x428
  value = *address & 0xFFFF0000U;
 80059a0:	0c1b      	lsrs	r3, r3, #16
 80059a2:	041b      	lsls	r3, r3, #16
  value = value | (((uint32_t)HuffTableAC0->HuffVal[161] & 0xFFUL) << 8) |
 80059a4:	f443 437a 	orr.w	r3, r3, #64000	@ 0xfa00
 80059a8:	f043 03f9 	orr.w	r3, r3, #249	@ 0xf9
  *address = value;
 80059ac:	f8c4 342c 	str.w	r3, [r4, #1068]	@ 0x42c
               (((uint32_t)HuffTableAC0->HuffVal[index - 2UL] & 0xFFUL) << 16) |
 80059b0:	f892 30ae 	ldrb.w	r3, [r2, #174]	@ 0xae
    *address = (((uint32_t)HuffTableAC0->HuffVal[index - 1UL] & 0xFFUL) << 24) |
 80059b4:	f892 60af 	ldrb.w	r6, [r2, #175]	@ 0xaf
               (((uint32_t)HuffTableAC0->HuffVal[index - 2UL] & 0xFFUL) << 16) |
 80059b8:	041b      	lsls	r3, r3, #16
    *address = (((uint32_t)HuffTableAC0->HuffVal[index - 1UL] & 0xFFUL) << 24) |
 80059ba:	ea43 6306 	orr.w	r3, r3, r6, lsl #24
               ((uint32_t)HuffTableAC0->HuffVal[index - 4UL] & 0xFFUL);
 80059be:	f892 60ac 	ldrb.w	r6, [r2, #172]	@ 0xac
  while (index > 3UL)
 80059c2:	3a04      	subs	r2, #4
               (((uint32_t)HuffTableAC0->HuffVal[index - 3UL] & 0xFFUL) << 8) |
 80059c4:	4333      	orrs	r3, r6
 80059c6:	f892 60b1 	ldrb.w	r6, [r2, #177]	@ 0xb1
 80059ca:	ea43 2306 	orr.w	r3, r3, r6, lsl #8
    *address = (((uint32_t)HuffTableAC0->HuffVal[index - 1UL] & 0xFFUL) << 24) |
 80059ce:	f840 3904 	str.w	r3, [r0], #-4
  while (index > 3UL)
 80059d2:	4281      	cmp	r1, r0
 80059d4:	d1ec      	bne.n	80059b0 <HAL_JPEG_Init+0xf4>
  value = *address & 0x0000FFFFU;
 80059d6:	f8d4 342c 	ldr.w	r3, [r4, #1068]	@ 0x42c
  value = *address & 0xFFFF0000U;
 80059da:	4a4e      	ldr	r2, [pc, #312]	@ (8005b14 <HAL_JPEG_Init+0x258>)
  value = *address & 0x0000FFFFU;
 80059dc:	b29b      	uxth	r3, r3
  value = value | (((uint32_t)HuffTableDC1->Bits[1] & 0xFFUL) << 24) |
 80059de:	f043 7340 	orr.w	r3, r3, #50331648	@ 0x3000000
  *address = value;
 80059e2:	f8c4 342c 	str.w	r3, [r4, #1068]	@ 0x42c
  value = *address & 0xFFFF0000U;
 80059e6:	f8d4 343c 	ldr.w	r3, [r4, #1084]	@ 0x43c
  address = (hjpeg->Instance->DHTMEM + 102);
 80059ea:	f504 619f 	add.w	r1, r4, #1272	@ 0x4f8
  value = *address & 0xFFFF0000U;
 80059ee:	4013      	ands	r3, r2
  *address = value;
 80059f0:	f8c4 343c 	str.w	r3, [r4, #1084]	@ 0x43c
    *address = (((uint32_t)HuffTableDC1->Bits[index + 1UL] & 0xFFUL) << 24) |
 80059f4:	2301      	movs	r3, #1
 80059f6:	f8c4 3438 	str.w	r3, [r4, #1080]	@ 0x438
 80059fa:	f04f 3301 	mov.w	r3, #16843009	@ 0x1010101
 80059fe:	f8c4 3434 	str.w	r3, [r4, #1076]	@ 0x434
 8005a02:	f8c4 3430 	str.w	r3, [r4, #1072]	@ 0x430
  value = *address & 0x0000FFFFUL;
 8005a06:	f8d4 343c 	ldr.w	r3, [r4, #1084]	@ 0x43c
  value = value | (((uint32_t)HuffTableDC1->HuffVal[1] & 0xFFUL) << 24) |
 8005a0a:	f504 608b 	add.w	r0, r4, #1112	@ 0x458
  value = *address & 0x0000FFFFUL;
 8005a0e:	b29b      	uxth	r3, r3
  value = value | (((uint32_t)HuffTableDC1->HuffVal[1] & 0xFFUL) << 24) |
 8005a10:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
  *address = value;
 8005a14:	f8c4 343c 	str.w	r3, [r4, #1084]	@ 0x43c
  value = *address & 0xFFFF0000UL;
 8005a18:	f8d4 3448 	ldr.w	r3, [r4, #1096]	@ 0x448
 8005a1c:	4013      	ands	r3, r2
  value = value | (((uint32_t)HuffTableDC1->HuffVal[11] & 0xFFUL) << 8) |
 8005a1e:	f443 6330 	orr.w	r3, r3, #2816	@ 0xb00
 8005a22:	f043 030a 	orr.w	r3, r3, #10
  *address = value;
 8005a26:	f8c4 3448 	str.w	r3, [r4, #1096]	@ 0x448
    *address = (((uint32_t)HuffTableDC1->HuffVal[index + 1UL] & 0xFFUL) << 24) |
 8005a2a:	4b3b      	ldr	r3, [pc, #236]	@ (8005b18 <HAL_JPEG_Init+0x25c>)
 8005a2c:	f8c4 3444 	str.w	r3, [r4, #1092]	@ 0x444
 8005a30:	f1a3 3304 	sub.w	r3, r3, #67372036	@ 0x4040404
 8005a34:	f8c4 3440 	str.w	r3, [r4, #1088]	@ 0x440
  value = *address & 0x0000FFFFU;
 8005a38:	f8d4 3448 	ldr.w	r3, [r4, #1096]	@ 0x448
 8005a3c:	b29b      	uxth	r3, r3
  value = value | (((uint32_t)HuffTableAC1->Bits[1] & 0xFFUL) << 24) |
 8005a3e:	f043 7300 	orr.w	r3, r3, #33554432	@ 0x2000000
  *address = value;
 8005a42:	f8c4 3448 	str.w	r3, [r4, #1096]	@ 0x448
  value = *address & 0xFFFF0000U;
 8005a46:	f8d4 3458 	ldr.w	r3, [r4, #1112]	@ 0x458
 8005a4a:	4013      	ands	r3, r2
  value = value | (((uint32_t)HuffTableAC1->Bits[15] & 0xFFUL) << 8) | ((uint32_t)HuffTableAC1->Bits[14] & 0xFFUL);
 8005a4c:	f443 43ee 	orr.w	r3, r3, #30464	@ 0x7700
 8005a50:	f043 0302 	orr.w	r3, r3, #2
  *address = value;
 8005a54:	f8c4 3458 	str.w	r3, [r4, #1112]	@ 0x458
    *address = (((uint32_t)HuffTableAC1->Bits[index + 1UL] & 0xFFUL) << 24) |
 8005a58:	4b30      	ldr	r3, [pc, #192]	@ (8005b1c <HAL_JPEG_Init+0x260>)
 8005a5a:	4a31      	ldr	r2, [pc, #196]	@ (8005b20 <HAL_JPEG_Init+0x264>)
 8005a5c:	f8c4 3454 	str.w	r3, [r4, #1108]	@ 0x454
 8005a60:	4b30      	ldr	r3, [pc, #192]	@ (8005b24 <HAL_JPEG_Init+0x268>)
 8005a62:	f8c4 3450 	str.w	r3, [r4, #1104]	@ 0x450
 8005a66:	4b30      	ldr	r3, [pc, #192]	@ (8005b28 <HAL_JPEG_Init+0x26c>)
 8005a68:	f8c4 344c 	str.w	r3, [r4, #1100]	@ 0x44c
  value = *address & 0x0000FFFFUL;
 8005a6c:	f8d4 3458 	ldr.w	r3, [r4, #1112]	@ 0x458
 8005a70:	b29b      	uxth	r3, r3
  value = value | (((uint32_t)HuffTableAC1->HuffVal[1] & 0xFFUL) << 24) |
 8005a72:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
  *address = value;
 8005a76:	f8c4 3458 	str.w	r3, [r4, #1112]	@ 0x458
               (((uint32_t)HuffTableAC1->HuffVal[index] & 0xFFUL) << 16) |
 8005a7a:	f892 30b0 	ldrb.w	r3, [r2, #176]	@ 0xb0
    *address = (((uint32_t)HuffTableAC1->HuffVal[index + 1UL] & 0xFFUL) << 24) |
 8005a7e:	f892 60b1 	ldrb.w	r6, [r2, #177]	@ 0xb1
               (((uint32_t)HuffTableAC1->HuffVal[index] & 0xFFUL) << 16) |
 8005a82:	041b      	lsls	r3, r3, #16
               (((uint32_t)HuffTableAC1->HuffVal[index - 1UL] & 0xFFUL) << 8) |
 8005a84:	ea43 6306 	orr.w	r3, r3, r6, lsl #24
               ((uint32_t)HuffTableAC1->HuffVal[index - 2UL] & 0xFFUL);
 8005a88:	f892 60ae 	ldrb.w	r6, [r2, #174]	@ 0xae
  while (index > 3UL)
 8005a8c:	3a04      	subs	r2, #4
               (((uint32_t)HuffTableAC1->HuffVal[index - 1UL] & 0xFFUL) << 8) |
 8005a8e:	4333      	orrs	r3, r6
 8005a90:	f892 60b3 	ldrb.w	r6, [r2, #179]	@ 0xb3
 8005a94:	ea43 2306 	orr.w	r3, r3, r6, lsl #8
    *address = (((uint32_t)HuffTableAC1->HuffVal[index + 1UL] & 0xFFUL) << 24) |
 8005a98:	f841 3904 	str.w	r3, [r1], #-4
  while (index > 3UL)
 8005a9c:	4281      	cmp	r1, r0
 8005a9e:	d1ec      	bne.n	8005a7a <HAL_JPEG_Init+0x1be>
  error = JPEG_Set_HuffAC_Mem(hjpeg, (JPEG_ACHuffTableTypeDef *)(uint32_t)&JPEG_ACLUM_HuffTable,
 8005aa0:	4628      	mov	r0, r5
 8005aa2:	491a      	ldr	r1, [pc, #104]	@ (8005b0c <HAL_JPEG_Init+0x250>)
 8005aa4:	f504 62a0 	add.w	r2, r4, #1280	@ 0x500
 8005aa8:	f7ff fdd4 	bl	8005654 <JPEG_Set_HuffAC_Mem>
  if (error != HAL_OK)
 8005aac:	b118      	cbz	r0, 8005ab6 <HAL_JPEG_Init+0x1fa>
    hjpeg->ErrorCode = HAL_JPEG_ERROR_HUFF_TABLE;
 8005aae:	2301      	movs	r3, #1
 8005ab0:	652b      	str	r3, [r5, #80]	@ 0x50
    return HAL_ERROR;
 8005ab2:	2001      	movs	r0, #1
}
 8005ab4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  error = JPEG_Set_HuffAC_Mem(hjpeg, (JPEG_ACHuffTableTypeDef *)(uint32_t)&JPEG_ACCHROM_HuffTable,
 8005ab6:	4628      	mov	r0, r5
 8005ab8:	4919      	ldr	r1, [pc, #100]	@ (8005b20 <HAL_JPEG_Init+0x264>)
 8005aba:	f504 62cc 	add.w	r2, r4, #1632	@ 0x660
 8005abe:	f7ff fdc9 	bl	8005654 <JPEG_Set_HuffAC_Mem>
  if (error != HAL_OK)
 8005ac2:	2800      	cmp	r0, #0
 8005ac4:	d1f3      	bne.n	8005aae <HAL_JPEG_Init+0x1f2>
  error = JPEG_Set_HuffDC_Mem(hjpeg, (JPEG_DCHuffTableTypeDef *)(uint32_t)&JPEG_DCLUM_HuffTable,
 8005ac6:	4628      	mov	r0, r5
 8005ac8:	490d      	ldr	r1, [pc, #52]	@ (8005b00 <HAL_JPEG_Init+0x244>)
 8005aca:	f504 62f8 	add.w	r2, r4, #1984	@ 0x7c0
 8005ace:	f7ff fd87 	bl	80055e0 <JPEG_Set_HuffDC_Mem>
  if (error != HAL_OK)
 8005ad2:	2800      	cmp	r0, #0
 8005ad4:	d1eb      	bne.n	8005aae <HAL_JPEG_Init+0x1f2>
  error = JPEG_Set_HuffDC_Mem(hjpeg, (JPEG_DCHuffTableTypeDef *)(uint32_t)&JPEG_DCCHROM_HuffTable,
 8005ad6:	4628      	mov	r0, r5
 8005ad8:	4914      	ldr	r1, [pc, #80]	@ (8005b2c <HAL_JPEG_Init+0x270>)
 8005ada:	f504 62fc 	add.w	r2, r4, #2016	@ 0x7e0
 8005ade:	f7ff fd7f 	bl	80055e0 <JPEG_Set_HuffDC_Mem>
  if (JPEG_Set_HuffEnc_Mem(hjpeg) != HAL_OK)
 8005ae2:	2800      	cmp	r0, #0
 8005ae4:	d1e3      	bne.n	8005aae <HAL_JPEG_Init+0x1f2>
  hjpeg->Instance->CONFR1 |= JPEG_CONFR1_HDR;
 8005ae6:	6863      	ldr	r3, [r4, #4]
 8005ae8:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8005aec:	6063      	str	r3, [r4, #4]
  hjpeg->State = HAL_JPEG_STATE_READY;
 8005aee:	2301      	movs	r3, #1
  hjpeg->JpegInCount = 0;
 8005af0:	6228      	str	r0, [r5, #32]
  hjpeg->JpegOutCount = 0;
 8005af2:	6268      	str	r0, [r5, #36]	@ 0x24
  hjpeg->State = HAL_JPEG_STATE_READY;
 8005af4:	f885 304d 	strb.w	r3, [r5, #77]	@ 0x4d
  hjpeg->ErrorCode = HAL_JPEG_ERROR_NONE;
 8005af8:	6528      	str	r0, [r5, #80]	@ 0x50
  hjpeg->Context = 0;
 8005afa:	6568      	str	r0, [r5, #84]	@ 0x54
  return HAL_OK;
 8005afc:	e7da      	b.n	8005ab4 <HAL_JPEG_Init+0x1f8>
 8005afe:	bf00      	nop
 8005b00:	08035b74 	.word	0x08035b74
 8005b04:	08035974 	.word	0x08035974
 8005b08:	08035934 	.word	0x08035934
 8005b0c:	08035aa6 	.word	0x08035aa6
 8005b10:	0b0a0908 	.word	0x0b0a0908
 8005b14:	ffff0000 	.word	0xffff0000
 8005b18:	09080706 	.word	0x09080706
 8005b1c:	01000404 	.word	0x01000404
 8005b20:	080359f4 	.word	0x080359f4
 8005b24:	05070403 	.word	0x05070403
 8005b28:	04040201 	.word	0x04040201
 8005b2c:	08035b58 	.word	0x08035b58

08005b30 <HAL_JPEG_GetInfo>:
{
 8005b30:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  if ((hjpeg == NULL) || (pInfo == NULL))
 8005b34:	2800      	cmp	r0, #0
 8005b36:	d070      	beq.n	8005c1a <HAL_JPEG_GetInfo+0xea>
 8005b38:	2900      	cmp	r1, #0
 8005b3a:	d06e      	beq.n	8005c1a <HAL_JPEG_GetInfo+0xea>
  if ((hjpeg->Instance->CONFR1 & JPEG_CONFR1_NF) == JPEG_CONFR1_NF_1)
 8005b3c:	6804      	ldr	r4, [r0, #0]
 8005b3e:	6863      	ldr	r3, [r4, #4]
 8005b40:	f003 0303 	and.w	r3, r3, #3
 8005b44:	2b02      	cmp	r3, #2
 8005b46:	d048      	beq.n	8005bda <HAL_JPEG_GetInfo+0xaa>
  else if ((hjpeg->Instance->CONFR1 & JPEG_CONFR1_NF) == 0UL)
 8005b48:	6863      	ldr	r3, [r4, #4]
 8005b4a:	f013 0303 	ands.w	r3, r3, #3
 8005b4e:	d005      	beq.n	8005b5c <HAL_JPEG_GetInfo+0x2c>
  else if ((hjpeg->Instance->CONFR1 & JPEG_CONFR1_NF) == JPEG_CONFR1_NF)
 8005b50:	6863      	ldr	r3, [r4, #4]
 8005b52:	f003 0303 	and.w	r3, r3, #3
 8005b56:	2b03      	cmp	r3, #3
 8005b58:	d15f      	bne.n	8005c1a <HAL_JPEG_GetInfo+0xea>
 8005b5a:	2330      	movs	r3, #48	@ 0x30
  pInfo->ImageHeight = (hjpeg->Instance->CONFR1 & 0xFFFF0000UL) >> 16;
 8005b5c:	6862      	ldr	r2, [r4, #4]
    pInfo->ColorSpace = JPEG_YCBCR_COLORSPACE;
 8005b5e:	600b      	str	r3, [r1, #0]
  pInfo->ImageHeight = (hjpeg->Instance->CONFR1 & 0xFFFF0000UL) >> 16;
 8005b60:	0c12      	lsrs	r2, r2, #16
 8005b62:	608a      	str	r2, [r1, #8]
  pInfo->ImageWidth  = (hjpeg->Instance->CONFR3 & 0xFFFF0000UL) >> 16;
 8005b64:	68e2      	ldr	r2, [r4, #12]
  if ((pInfo->ColorSpace == JPEG_YCBCR_COLORSPACE) || (pInfo->ColorSpace == JPEG_CMYK_COLORSPACE))
 8005b66:	f023 0320 	bic.w	r3, r3, #32
  pInfo->ImageWidth  = (hjpeg->Instance->CONFR3 & 0xFFFF0000UL) >> 16;
 8005b6a:	0c12      	lsrs	r2, r2, #16
  if ((pInfo->ColorSpace == JPEG_YCBCR_COLORSPACE) || (pInfo->ColorSpace == JPEG_CMYK_COLORSPACE))
 8005b6c:	2b10      	cmp	r3, #16
  pInfo->ImageWidth  = (hjpeg->Instance->CONFR3 & 0xFFFF0000UL) >> 16;
 8005b6e:	60ca      	str	r2, [r1, #12]
  if ((pInfo->ColorSpace == JPEG_YCBCR_COLORSPACE) || (pInfo->ColorSpace == JPEG_CMYK_COLORSPACE))
 8005b70:	d13e      	bne.n	8005bf0 <HAL_JPEG_GetInfo+0xc0>
    yblockNb  = (hjpeg->Instance->CONFR4 & JPEG_CONFR4_NB) >> 4;
 8005b72:	6925      	ldr	r5, [r4, #16]
    cBblockNb = (hjpeg->Instance->CONFR5 & JPEG_CONFR5_NB) >> 4;
 8005b74:	6963      	ldr	r3, [r4, #20]
    yblockNb  = (hjpeg->Instance->CONFR4 & JPEG_CONFR4_NB) >> 4;
 8005b76:	f3c5 1503 	ubfx	r5, r5, #4, #4
    cRblockNb = (hjpeg->Instance->CONFR6 & JPEG_CONFR6_NB) >> 4;
 8005b7a:	69a2      	ldr	r2, [r4, #24]
    if ((yblockNb == 1UL) && (cBblockNb == 0UL) && (cRblockNb == 0UL))
 8005b7c:	2d01      	cmp	r5, #1
    cBblockNb = (hjpeg->Instance->CONFR5 & JPEG_CONFR5_NB) >> 4;
 8005b7e:	ea4f 1313 	mov.w	r3, r3, lsr #4
    cRblockNb = (hjpeg->Instance->CONFR6 & JPEG_CONFR6_NB) >> 4;
 8005b82:	ea4f 1212 	mov.w	r2, r2, lsr #4
    if ((yblockNb == 1UL) && (cBblockNb == 0UL) && (cRblockNb == 0UL))
 8005b86:	d12a      	bne.n	8005bde <HAL_JPEG_GetInfo+0xae>
 8005b88:	4313      	orrs	r3, r2
 8005b8a:	f013 0f0f 	tst.w	r3, #15
 8005b8e:	bf0c      	ite	eq
 8005b90:	2301      	moveq	r3, #1
 8005b92:	2300      	movne	r3, #0
 8005b94:	005b      	lsls	r3, r3, #1
      pInfo->ChromaSubsampling = JPEG_422_SUBSAMPLING; /*16x8 block*/
 8005b96:	604b      	str	r3, [r1, #4]
  *         the configuration information for JPEG module
  * @retval JPEG image quality from 1 to 100.
  */
static uint32_t JPEG_GetQuality(const JPEG_HandleTypeDef *hjpeg)
{
  uint32_t quality = 0;
 8005b98:	2300      	movs	r3, #0
        quality += 100UL;
      }
      else
      {
        /* Note that the quantization coefficients must be specified in the table in zigzag order */
        scale = (quantVal * 100UL) / ((uint32_t) hjpeg->QuantTable0[JPEG_ZIGZAG_ORDER[i + j]]);
 8005b9a:	f04f 0e64 	mov.w	lr, #100	@ 0x64
  i = 0;
 8005b9e:	461d      	mov	r5, r3
        {
          quality += (200UL - scale) / 2UL;
        }
        else
        {
          quality += 5000UL / scale;
 8005ba0:	f241 3888 	movw	r8, #5000	@ 0x1388
 8005ba4:	f8df c078 	ldr.w	ip, [pc, #120]	@ 8005c20 <HAL_JPEG_GetInfo+0xf0>
 8005ba8:	3450      	adds	r4, #80	@ 0x50
    quantRow = *tableAddress;
 8005baa:	2600      	movs	r6, #0
 8005bac:	f854 9005 	ldr.w	r9, [r4, r5]
    for (j = 0; j < 4UL; j++)
 8005bb0:	eb05 070c 	add.w	r7, r5, ip
      quantVal = (quantRow >> (8UL * j)) & 0xFFUL;
 8005bb4:	fa29 f206 	lsr.w	r2, r9, r6
 8005bb8:	b2d2      	uxtb	r2, r2
      if (quantVal == 1UL)
 8005bba:	2a01      	cmp	r2, #1
 8005bbc:	d11a      	bne.n	8005bf4 <HAL_JPEG_GetInfo+0xc4>
        quality += 100UL;
 8005bbe:	3364      	adds	r3, #100	@ 0x64
    for (j = 0; j < 4UL; j++)
 8005bc0:	3608      	adds	r6, #8
 8005bc2:	2e20      	cmp	r6, #32
 8005bc4:	f107 0701 	add.w	r7, r7, #1
 8005bc8:	d1f4      	bne.n	8005bb4 <HAL_JPEG_GetInfo+0x84>
        }
      }
    }

    i += 4UL;
 8005bca:	3504      	adds	r5, #4
  while (i < (JPEG_QUANT_TABLE_SIZE - 3UL))
 8005bcc:	2d40      	cmp	r5, #64	@ 0x40
 8005bce:	d1ec      	bne.n	8005baa <HAL_JPEG_GetInfo+0x7a>
  return HAL_OK;
 8005bd0:	2000      	movs	r0, #0
    tableAddress ++;
  }

  return (quality / 64UL);
 8005bd2:	099b      	lsrs	r3, r3, #6
  pInfo->ImageQuality = JPEG_GetQuality(hjpeg);
 8005bd4:	610b      	str	r3, [r1, #16]
}
 8005bd6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8005bda:	2310      	movs	r3, #16
 8005bdc:	e7be      	b.n	8005b5c <HAL_JPEG_GetInfo+0x2c>
    else if ((yblockNb == 0UL) && (cBblockNb == 0UL) && (cRblockNb == 0UL))
 8005bde:	2d03      	cmp	r5, #3
 8005be0:	d106      	bne.n	8005bf0 <HAL_JPEG_GetInfo+0xc0>
    else if ((yblockNb == 3UL) && (cBblockNb == 0UL) && (cRblockNb == 0UL))
 8005be2:	4313      	orrs	r3, r2
 8005be4:	f013 0f0f 	tst.w	r3, #15
 8005be8:	bf0c      	ite	eq
 8005bea:	2301      	moveq	r3, #1
 8005bec:	2300      	movne	r3, #0
 8005bee:	e7d2      	b.n	8005b96 <HAL_JPEG_GetInfo+0x66>
 8005bf0:	2300      	movs	r3, #0
 8005bf2:	e7d0      	b.n	8005b96 <HAL_JPEG_GetInfo+0x66>
        scale = (quantVal * 100UL) / ((uint32_t) hjpeg->QuantTable0[JPEG_ZIGZAG_ORDER[i + j]]);
 8005bf4:	fb0e fb02 	mul.w	fp, lr, r2
 8005bf8:	f897 a000 	ldrb.w	sl, [r7]
 8005bfc:	6bc2      	ldr	r2, [r0, #60]	@ 0x3c
 8005bfe:	f812 a00a 	ldrb.w	sl, [r2, sl]
 8005c02:	fbbb f2fa 	udiv	r2, fp, sl
        if (scale <= 100UL)
 8005c06:	2a64      	cmp	r2, #100	@ 0x64
          quality += 5000UL / scale;
 8005c08:	bf8d      	iteet	hi
 8005c0a:	fbb8 f2f2 	udivhi	r2, r8, r2
          quality += (200UL - scale) / 2UL;
 8005c0e:	f1c2 02c8 	rsbls	r2, r2, #200	@ 0xc8
 8005c12:	eb03 0352 	addls.w	r3, r3, r2, lsr #1
          quality += 5000UL / scale;
 8005c16:	189b      	addhi	r3, r3, r2
 8005c18:	e7d2      	b.n	8005bc0 <HAL_JPEG_GetInfo+0x90>
    return HAL_ERROR;
 8005c1a:	2001      	movs	r0, #1
 8005c1c:	e7db      	b.n	8005bd6 <HAL_JPEG_GetInfo+0xa6>
 8005c1e:	bf00      	nop
 8005c20:	080359b4 	.word	0x080359b4

08005c24 <HAL_JPEG_Decode_DMA>:
{
 8005c24:	b538      	push	{r3, r4, r5, lr}
  if ((hjpeg == NULL) || (pDataIn == NULL) || (pDataOutMCU == NULL))
 8005c26:	4604      	mov	r4, r0
 8005c28:	b348      	cbz	r0, 8005c7e <HAL_JPEG_Decode_DMA+0x5a>
 8005c2a:	b341      	cbz	r1, 8005c7e <HAL_JPEG_Decode_DMA+0x5a>
 8005c2c:	b33b      	cbz	r3, 8005c7e <HAL_JPEG_Decode_DMA+0x5a>
  __HAL_LOCK(hjpeg);
 8005c2e:	f890 504c 	ldrb.w	r5, [r0, #76]	@ 0x4c
 8005c32:	2d01      	cmp	r5, #1
 8005c34:	d028      	beq.n	8005c88 <HAL_JPEG_Decode_DMA+0x64>
 8005c36:	2501      	movs	r5, #1
 8005c38:	f880 504c 	strb.w	r5, [r0, #76]	@ 0x4c
  if (hjpeg->State == HAL_JPEG_STATE_READY)
 8005c3c:	f890 504d 	ldrb.w	r5, [r0, #77]	@ 0x4d
 8005c40:	2d01      	cmp	r5, #1
 8005c42:	d11e      	bne.n	8005c82 <HAL_JPEG_Decode_DMA+0x5e>
    hjpeg->State = HAL_JPEG_STATE_BUSY_DECODING;
 8005c44:	2504      	movs	r5, #4
 8005c46:	f880 504d 	strb.w	r5, [r0, #77]	@ 0x4d
    hjpeg->Context &= ~(JPEG_CONTEXT_OPERATION_MASK | JPEG_CONTEXT_METHOD_MASK);
 8005c4a:	6d45      	ldr	r5, [r0, #84]	@ 0x54
    hjpeg->pJpegOutBuffPtr = pDataOutMCU;
 8005c4c:	e9c0 1306 	strd	r1, r3, [r0, #24]
    hjpeg->Context &= ~(JPEG_CONTEXT_OPERATION_MASK | JPEG_CONTEXT_METHOD_MASK);
 8005c50:	f025 050f 	bic.w	r5, r5, #15
 8005c54:	6545      	str	r5, [r0, #84]	@ 0x54
    hjpeg->Context |= (JPEG_CONTEXT_DECODE | JPEG_CONTEXT_DMA);
 8005c56:	6d45      	ldr	r5, [r0, #84]	@ 0x54
    hjpeg->OutDataLength = OutDataLength;
 8005c58:	9b04      	ldr	r3, [sp, #16]
    hjpeg->Context |= (JPEG_CONTEXT_DECODE | JPEG_CONTEXT_DMA);
 8005c5a:	f045 050e 	orr.w	r5, r5, #14
 8005c5e:	6545      	str	r5, [r0, #84]	@ 0x54
    hjpeg->JpegInCount = 0;
 8005c60:	2500      	movs	r5, #0
    hjpeg->InDataLength = InDataLength;
 8005c62:	6282      	str	r2, [r0, #40]	@ 0x28
    hjpeg->JpegInCount = 0;
 8005c64:	6205      	str	r5, [r0, #32]
    hjpeg->OutDataLength = OutDataLength;
 8005c66:	62c3      	str	r3, [r0, #44]	@ 0x2c
    hjpeg->JpegOutCount = 0;
 8005c68:	6245      	str	r5, [r0, #36]	@ 0x24
    JPEG_Init_Process(hjpeg);
 8005c6a:	f7ff fd6d 	bl	8005748 <JPEG_Init_Process>
    if (JPEG_DMA_StartProcess(hjpeg) != HAL_OK)
 8005c6e:	f7ff fdab 	bl	80057c8 <JPEG_DMA_StartProcess>
 8005c72:	b128      	cbz	r0, 8005c80 <HAL_JPEG_Decode_DMA+0x5c>
      hjpeg->State = HAL_JPEG_STATE_ERROR;
 8005c74:	2306      	movs	r3, #6
      __HAL_UNLOCK(hjpeg);
 8005c76:	f884 504c 	strb.w	r5, [r4, #76]	@ 0x4c
      hjpeg->State = HAL_JPEG_STATE_ERROR;
 8005c7a:	f884 304d 	strb.w	r3, [r4, #77]	@ 0x4d
    return HAL_ERROR;
 8005c7e:	2001      	movs	r0, #1
}
 8005c80:	bd38      	pop	{r3, r4, r5, pc}
    __HAL_UNLOCK(hjpeg);
 8005c82:	2300      	movs	r3, #0
 8005c84:	f880 304c 	strb.w	r3, [r0, #76]	@ 0x4c
  __HAL_LOCK(hjpeg);
 8005c88:	2002      	movs	r0, #2
 8005c8a:	e7f9      	b.n	8005c80 <HAL_JPEG_Decode_DMA+0x5c>

08005c8c <HAL_JPEG_Pause>:
  if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
 8005c8c:	6d43      	ldr	r3, [r0, #84]	@ 0x54
 8005c8e:	f003 030c 	and.w	r3, r3, #12
 8005c92:	2b0c      	cmp	r3, #12
 8005c94:	d117      	bne.n	8005cc6 <HAL_JPEG_Pause+0x3a>
    if ((XferSelection & JPEG_PAUSE_RESUME_INPUT) == JPEG_PAUSE_RESUME_INPUT)
 8005c96:	f011 0301 	ands.w	r3, r1, #1
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_INPUT;
 8005c9a:	bf1f      	itttt	ne
 8005c9c:	6d43      	ldrne	r3, [r0, #84]	@ 0x54
 8005c9e:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
 8005ca2:	6543      	strne	r3, [r0, #84]	@ 0x54
      mask |= JPEG_DMA_IDMA;
 8005ca4:	f44f 6300 	movne.w	r3, #2048	@ 0x800
    if ((XferSelection & JPEG_PAUSE_RESUME_OUTPUT) == JPEG_PAUSE_RESUME_OUTPUT)
 8005ca8:	0789      	lsls	r1, r1, #30
 8005caa:	d505      	bpl.n	8005cb8 <HAL_JPEG_Pause+0x2c>
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_OUTPUT;
 8005cac:	6d42      	ldr	r2, [r0, #84]	@ 0x54
      mask |= JPEG_DMA_ODMA;
 8005cae:	f443 5380 	orr.w	r3, r3, #4096	@ 0x1000
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_OUTPUT;
 8005cb2:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
 8005cb6:	6542      	str	r2, [r0, #84]	@ 0x54
    __HAL_JPEG_DISABLE_IT(hjpeg, mask);
 8005cb8:	6801      	ldr	r1, [r0, #0]
 8005cba:	6b0a      	ldr	r2, [r1, #48]	@ 0x30
 8005cbc:	ea22 0303 	bic.w	r3, r2, r3
 8005cc0:	630b      	str	r3, [r1, #48]	@ 0x30
}
 8005cc2:	2000      	movs	r0, #0
 8005cc4:	4770      	bx	lr
  else if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
 8005cc6:	6d43      	ldr	r3, [r0, #84]	@ 0x54
 8005cc8:	f003 030c 	and.w	r3, r3, #12
 8005ccc:	2b08      	cmp	r3, #8
 8005cce:	d1f8      	bne.n	8005cc2 <HAL_JPEG_Pause+0x36>
    if ((XferSelection & JPEG_PAUSE_RESUME_INPUT) == JPEG_PAUSE_RESUME_INPUT)
 8005cd0:	f011 0301 	ands.w	r3, r1, #1
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_INPUT;
 8005cd4:	bf1f      	itttt	ne
 8005cd6:	6d43      	ldrne	r3, [r0, #84]	@ 0x54
 8005cd8:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
 8005cdc:	6543      	strne	r3, [r0, #84]	@ 0x54
      mask |= (JPEG_IT_IFT | JPEG_IT_IFNF);
 8005cde:	2306      	movne	r3, #6
    if ((XferSelection & JPEG_PAUSE_RESUME_OUTPUT) == JPEG_PAUSE_RESUME_OUTPUT)
 8005ce0:	078a      	lsls	r2, r1, #30
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_OUTPUT;
 8005ce2:	bf41      	itttt	mi
 8005ce4:	6d42      	ldrmi	r2, [r0, #84]	@ 0x54
      mask |= (JPEG_IT_OFT | JPEG_IT_OFNE | JPEG_IT_EOC);
 8005ce6:	f043 0328 	orrmi.w	r3, r3, #40	@ 0x28
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_OUTPUT;
 8005cea:	f442 5200 	orrmi.w	r2, r2, #8192	@ 0x2000
 8005cee:	6542      	strmi	r2, [r0, #84]	@ 0x54
      mask |= (JPEG_IT_OFT | JPEG_IT_OFNE | JPEG_IT_EOC);
 8005cf0:	e7e2      	b.n	8005cb8 <HAL_JPEG_Pause+0x2c>

08005cf2 <HAL_JPEG_ConfigInputBuffer>:
  hjpeg->pJpegInBuffPtr =  pNewInputBuffer;
 8005cf2:	6181      	str	r1, [r0, #24]
  hjpeg->InDataLength = InDataLength;
 8005cf4:	6282      	str	r2, [r0, #40]	@ 0x28
}
 8005cf6:	4770      	bx	lr

08005cf8 <HAL_JPEG_ConfigOutputBuffer>:
  hjpeg->pJpegOutBuffPtr = pNewOutputBuffer;
 8005cf8:	61c1      	str	r1, [r0, #28]
  hjpeg->OutDataLength = OutDataLength;
 8005cfa:	62c2      	str	r2, [r0, #44]	@ 0x2c
}
 8005cfc:	4770      	bx	lr

08005cfe <HAL_JPEG_Abort>:
{
 8005cfe:	b538      	push	{r3, r4, r5, lr}
  tmpContext = hjpeg->Context;
 8005d00:	6d42      	ldr	r2, [r0, #84]	@ 0x54
  hjpeg->Context &= ~(JPEG_CONTEXT_OPERATION_MASK | JPEG_CONTEXT_METHOD_MASK | JPEG_CONTEXT_ENDING_DMA);
 8005d02:	6d43      	ldr	r3, [r0, #84]	@ 0x54
{
 8005d04:	4604      	mov	r4, r0
  hjpeg->Context &= ~(JPEG_CONTEXT_OPERATION_MASK | JPEG_CONTEXT_METHOD_MASK | JPEG_CONTEXT_ENDING_DMA);
 8005d06:	f423 4300 	bic.w	r3, r3, #32768	@ 0x8000
 8005d0a:	f023 030f 	bic.w	r3, r3, #15
 8005d0e:	6543      	str	r3, [r0, #84]	@ 0x54
  if ((tmpContext & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
 8005d10:	f002 030c 	and.w	r3, r2, #12
 8005d14:	2b0c      	cmp	r3, #12
 8005d16:	d117      	bne.n	8005d48 <HAL_JPEG_Abort+0x4a>
    if (HAL_DMA_Abort(hjpeg->hdmaout) != HAL_OK)
 8005d18:	6b40      	ldr	r0, [r0, #52]	@ 0x34
 8005d1a:	f7fe fc6b 	bl	80045f4 <HAL_DMA_Abort>
 8005d1e:	b138      	cbz	r0, 8005d30 <HAL_JPEG_Abort+0x32>
      if (hjpeg->hdmaout->ErrorCode == HAL_DMA_ERROR_TIMEOUT)
 8005d20:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 8005d22:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8005d24:	2b10      	cmp	r3, #16
        hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
 8005d26:	bf02      	ittt	eq
 8005d28:	6d23      	ldreq	r3, [r4, #80]	@ 0x50
 8005d2a:	f043 0304 	orreq.w	r3, r3, #4
 8005d2e:	6523      	streq	r3, [r4, #80]	@ 0x50
    if (HAL_DMA_Abort(hjpeg->hdmain) != HAL_OK)
 8005d30:	6b20      	ldr	r0, [r4, #48]	@ 0x30
 8005d32:	f7fe fc5f 	bl	80045f4 <HAL_DMA_Abort>
 8005d36:	b138      	cbz	r0, 8005d48 <HAL_JPEG_Abort+0x4a>
      if (hjpeg->hdmain->ErrorCode == HAL_DMA_ERROR_TIMEOUT)
 8005d38:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8005d3a:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8005d3c:	2b10      	cmp	r3, #16
        hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
 8005d3e:	bf02      	ittt	eq
 8005d40:	6d23      	ldreq	r3, [r4, #80]	@ 0x50
 8005d42:	f043 0304 	orreq.w	r3, r3, #4
 8005d46:	6523      	streq	r3, [r4, #80]	@ 0x50
  hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
 8005d48:	6822      	ldr	r2, [r4, #0]
 8005d4a:	6813      	ldr	r3, [r2, #0]
 8005d4c:	f023 0301 	bic.w	r3, r3, #1
 8005d50:	6013      	str	r3, [r2, #0]
  tickstart = HAL_GetTick();
 8005d52:	f7fe f907 	bl	8003f64 <HAL_GetTick>
 8005d56:	4605      	mov	r5, r0
  while (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_COF) != 0UL)
 8005d58:	6823      	ldr	r3, [r4, #0]
 8005d5a:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8005d5c:	061b      	lsls	r3, r3, #24
 8005d5e:	d50c      	bpl.n	8005d7a <HAL_JPEG_Abort+0x7c>
    if ((HAL_GetTick() - tickstart) > JPEG_TIMEOUT_VALUE)
 8005d60:	f7fe f900 	bl	8003f64 <HAL_GetTick>
 8005d64:	1b40      	subs	r0, r0, r5
 8005d66:	f5b0 7f7a 	cmp.w	r0, #1000	@ 0x3e8
 8005d6a:	d9f5      	bls.n	8005d58 <HAL_JPEG_Abort+0x5a>
      hjpeg->ErrorCode |= HAL_JPEG_ERROR_TIMEOUT;
 8005d6c:	6d23      	ldr	r3, [r4, #80]	@ 0x50
 8005d6e:	f043 0308 	orr.w	r3, r3, #8
 8005d72:	6523      	str	r3, [r4, #80]	@ 0x50
      hjpeg->State = HAL_JPEG_STATE_ERROR;
 8005d74:	2306      	movs	r3, #6
 8005d76:	f884 304d 	strb.w	r3, [r4, #77]	@ 0x4d
  __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
 8005d7a:	6823      	ldr	r3, [r4, #0]
 8005d7c:	2001      	movs	r0, #1
 8005d7e:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8005d80:	f022 027e 	bic.w	r2, r2, #126	@ 0x7e
 8005d84:	631a      	str	r2, [r3, #48]	@ 0x30
  JPEG_DISABLE_DMA(hjpeg, JPEG_DMA_MASK);
 8005d86:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8005d88:	f422 52c0 	bic.w	r2, r2, #6144	@ 0x1800
 8005d8c:	631a      	str	r2, [r3, #48]	@ 0x30
  hjpeg->Instance->CR |= JPEG_CR_IFF;
 8005d8e:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8005d90:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
 8005d94:	631a      	str	r2, [r3, #48]	@ 0x30
  hjpeg->Instance->CR |= JPEG_CR_OFF;
 8005d96:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8005d98:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
 8005d9c:	631a      	str	r2, [r3, #48]	@ 0x30
  __HAL_JPEG_CLEAR_FLAG(hjpeg, JPEG_FLAG_ALL);
 8005d9e:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
 8005da0:	f042 0260 	orr.w	r2, r2, #96	@ 0x60
 8005da4:	639a      	str	r2, [r3, #56]	@ 0x38
  hjpeg->JpegInCount = 0;
 8005da6:	2300      	movs	r3, #0
 8005da8:	6223      	str	r3, [r4, #32]
  hjpeg->JpegOutCount = 0;
 8005daa:	6263      	str	r3, [r4, #36]	@ 0x24
  hjpeg->Context &= ~(JPEG_CONTEXT_PAUSE_INPUT | JPEG_CONTEXT_PAUSE_OUTPUT);
 8005dac:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 8005dae:	f422 5240 	bic.w	r2, r2, #12288	@ 0x3000
 8005db2:	6562      	str	r2, [r4, #84]	@ 0x54
  if (hjpeg->ErrorCode != HAL_JPEG_ERROR_NONE)
 8005db4:	6d22      	ldr	r2, [r4, #80]	@ 0x50
 8005db6:	b12a      	cbz	r2, 8005dc4 <HAL_JPEG_Abort+0xc6>
    hjpeg->State = HAL_JPEG_STATE_ERROR;
 8005db8:	2206      	movs	r2, #6
 8005dba:	f884 204d 	strb.w	r2, [r4, #77]	@ 0x4d
    __HAL_UNLOCK(hjpeg);
 8005dbe:	f884 304c 	strb.w	r3, [r4, #76]	@ 0x4c
}
 8005dc2:	bd38      	pop	{r3, r4, r5, pc}
    hjpeg->State = HAL_JPEG_STATE_READY;
 8005dc4:	f884 004d 	strb.w	r0, [r4, #77]	@ 0x4d
    return HAL_OK;
 8005dc8:	4618      	mov	r0, r3
 8005dca:	e7f8      	b.n	8005dbe <HAL_JPEG_Abort+0xc0>

08005dcc <HAL_JPEG_EncodeCpltCallback>:
__weak void HAL_JPEG_EncodeCpltCallback(JPEG_HandleTypeDef *hjpeg)
 8005dcc:	4770      	bx	lr

08005dce <JPEG_DMAErrorCallback>:
{
 8005dce:	b510      	push	{r4, lr}
  JPEG_HandleTypeDef *hjpeg = (JPEG_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 8005dd0:	6dc4      	ldr	r4, [r0, #92]	@ 0x5c
  if (HAL_DMA_GetError(hdma) != HAL_DMA_ERROR_NONE)
 8005dd2:	f7fe fd2d 	bl	8004830 <HAL_DMA_GetError>
 8005dd6:	b1b0      	cbz	r0, 8005e06 <JPEG_DMAErrorCallback+0x38>
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
 8005dd8:	6823      	ldr	r3, [r4, #0]
    HAL_JPEG_ErrorCallback(hjpeg);
 8005dda:	4620      	mov	r0, r4
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
 8005ddc:	681a      	ldr	r2, [r3, #0]
 8005dde:	f022 0201 	bic.w	r2, r2, #1
 8005de2:	601a      	str	r2, [r3, #0]
    __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
 8005de4:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8005de6:	f022 027e 	bic.w	r2, r2, #126	@ 0x7e
 8005dea:	631a      	str	r2, [r3, #48]	@ 0x30
    JPEG_DISABLE_DMA(hjpeg, JPEG_DMA_MASK);
 8005dec:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8005dee:	f422 52c0 	bic.w	r2, r2, #6144	@ 0x1800
 8005df2:	631a      	str	r2, [r3, #48]	@ 0x30
    hjpeg->State = HAL_JPEG_STATE_READY;
 8005df4:	2301      	movs	r3, #1
 8005df6:	f884 304d 	strb.w	r3, [r4, #77]	@ 0x4d
    hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
 8005dfa:	6d23      	ldr	r3, [r4, #80]	@ 0x50
 8005dfc:	f043 0304 	orr.w	r3, r3, #4
 8005e00:	6523      	str	r3, [r4, #80]	@ 0x50
    HAL_JPEG_ErrorCallback(hjpeg);
 8005e02:	f7fb fe47 	bl	8001a94 <HAL_JPEG_ErrorCallback>
}
 8005e06:	bd10      	pop	{r4, pc}

08005e08 <JPEG_ReadInputData>:
  if ((hjpeg->InDataLength == 0UL) || (nbRequestWords == 0UL))
 8005e08:	6a82      	ldr	r2, [r0, #40]	@ 0x28
{
 8005e0a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8005e0c:	4604      	mov	r4, r0
 8005e0e:	460d      	mov	r5, r1
  if ((hjpeg->InDataLength == 0UL) || (nbRequestWords == 0UL))
 8005e10:	b922      	cbnz	r2, 8005e1c <JPEG_ReadInputData+0x14>
    (void) HAL_JPEG_Pause(hjpeg, JPEG_PAUSE_RESUME_INPUT);
 8005e12:	2101      	movs	r1, #1
 8005e14:	f7ff ff3a 	bl	8005c8c <HAL_JPEG_Pause>
  uint32_t nb_bytes = 0;
 8005e18:	2200      	movs	r2, #0
 8005e1a:	e004      	b.n	8005e26 <JPEG_ReadInputData+0x1e>
  else if (hjpeg->InDataLength > hjpeg->JpegInCount)
 8005e1c:	6a03      	ldr	r3, [r0, #32]
 8005e1e:	429a      	cmp	r2, r3
    nb_bytes = hjpeg->InDataLength - hjpeg->JpegInCount;
 8005e20:	6a03      	ldr	r3, [r0, #32]
  else if (hjpeg->InDataLength > hjpeg->JpegInCount)
 8005e22:	d922      	bls.n	8005e6a <JPEG_ReadInputData+0x62>
    nb_bytes = hjpeg->InDataLength - hjpeg->JpegInCount;
 8005e24:	1ad2      	subs	r2, r2, r3
  if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (nb_bytes > 0UL))
 8005e26:	6d63      	ldr	r3, [r4, #84]	@ 0x54
 8005e28:	f413 5380 	ands.w	r3, r3, #4096	@ 0x1000
 8005e2c:	d11c      	bne.n	8005e68 <JPEG_ReadInputData+0x60>
 8005e2e:	b1da      	cbz	r2, 8005e68 <JPEG_ReadInputData+0x60>
    if (nb_words >= nbRequestWords)
 8005e30:	ebb5 0f92 	cmp.w	r5, r2, lsr #2
 8005e34:	69a1      	ldr	r1, [r4, #24]
    nb_words = nb_bytes / 4UL;
 8005e36:	ea4f 0692 	mov.w	r6, r2, lsr #2
    if (nb_words >= nbRequestWords)
 8005e3a:	d826      	bhi.n	8005e8a <JPEG_ReadInputData+0x82>
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
 8005e3c:	6827      	ldr	r7, [r4, #0]
        input_count = hjpeg->JpegInCount;
 8005e3e:	6a26      	ldr	r6, [r4, #32]
      for (index = 0; index < nbRequestWords; index++)
 8005e40:	3301      	adds	r3, #1
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
 8005e42:	1988      	adds	r0, r1, r6
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
 8005e44:	7882      	ldrb	r2, [r0, #2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
 8005e46:	f890 c001 	ldrb.w	ip, [r0, #1]
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
 8005e4a:	5d8e      	ldrb	r6, [r1, r6]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
 8005e4c:	0412      	lsls	r2, r2, #16
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
 8005e4e:	78c0      	ldrb	r0, [r0, #3]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
 8005e50:	ea42 220c 	orr.w	r2, r2, ip, lsl #8
 8005e54:	4332      	orrs	r2, r6
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
 8005e56:	ea42 6200 	orr.w	r2, r2, r0, lsl #24
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
 8005e5a:	643a      	str	r2, [r7, #64]	@ 0x40
        hjpeg->JpegInCount += 4UL;
 8005e5c:	6a22      	ldr	r2, [r4, #32]
      for (index = 0; index < nbRequestWords; index++)
 8005e5e:	429d      	cmp	r5, r3
        hjpeg->JpegInCount += 4UL;
 8005e60:	f102 0204 	add.w	r2, r2, #4
 8005e64:	6222      	str	r2, [r4, #32]
      for (index = 0; index < nbRequestWords; index++)
 8005e66:	d1ea      	bne.n	8005e3e <JPEG_ReadInputData+0x36>
}
 8005e68:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  else if (hjpeg->InDataLength == hjpeg->JpegInCount)
 8005e6a:	429a      	cmp	r2, r3
 8005e6c:	d1d4      	bne.n	8005e18 <JPEG_ReadInputData+0x10>
    HAL_JPEG_GetDataCallback(hjpeg, hjpeg->JpegInCount);
 8005e6e:	6a01      	ldr	r1, [r0, #32]
 8005e70:	f7fb fd52 	bl	8001918 <HAL_JPEG_GetDataCallback>
    if (hjpeg->InDataLength > 4UL)
 8005e74:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
 8005e76:	2b04      	cmp	r3, #4
      hjpeg->InDataLength = ((hjpeg->InDataLength + 3UL) / 4UL) * 4UL;
 8005e78:	bf82      	ittt	hi
 8005e7a:	3303      	addhi	r3, #3
 8005e7c:	f023 0303 	bichi.w	r3, r3, #3
 8005e80:	62a3      	strhi	r3, [r4, #40]	@ 0x28
    hjpeg->JpegInCount = 0;
 8005e82:	2300      	movs	r3, #0
    nb_bytes = hjpeg->InDataLength;
 8005e84:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
    hjpeg->JpegInCount = 0;
 8005e86:	6223      	str	r3, [r4, #32]
    nb_bytes = hjpeg->InDataLength;
 8005e88:	e7cd      	b.n	8005e26 <JPEG_ReadInputData+0x1e>
      if (nb_words > 0UL)
 8005e8a:	2a03      	cmp	r2, #3
 8005e8c:	d916      	bls.n	8005ebc <JPEG_ReadInputData+0xb4>
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
 8005e8e:	6827      	ldr	r7, [r4, #0]
          input_count = hjpeg->JpegInCount;
 8005e90:	6a25      	ldr	r5, [r4, #32]
        for (index = 0; index < nb_words; index++)
 8005e92:	3301      	adds	r3, #1
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
 8005e94:	1948      	adds	r0, r1, r5
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
 8005e96:	7882      	ldrb	r2, [r0, #2]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
 8005e98:	f890 c001 	ldrb.w	ip, [r0, #1]
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
 8005e9c:	5d4d      	ldrb	r5, [r1, r5]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
 8005e9e:	0412      	lsls	r2, r2, #16
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
 8005ea0:	78c0      	ldrb	r0, [r0, #3]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
 8005ea2:	ea42 220c 	orr.w	r2, r2, ip, lsl #8
 8005ea6:	432a      	orrs	r2, r5
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
 8005ea8:	ea42 6200 	orr.w	r2, r2, r0, lsl #24
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
 8005eac:	643a      	str	r2, [r7, #64]	@ 0x40
          hjpeg->JpegInCount += 4UL;
 8005eae:	6a22      	ldr	r2, [r4, #32]
        for (index = 0; index < nb_words; index++)
 8005eb0:	429e      	cmp	r6, r3
          hjpeg->JpegInCount += 4UL;
 8005eb2:	f102 0204 	add.w	r2, r2, #4
 8005eb6:	6222      	str	r2, [r4, #32]
        for (index = 0; index < nb_words; index++)
 8005eb8:	d1ea      	bne.n	8005e90 <JPEG_ReadInputData+0x88>
 8005eba:	e7d5      	b.n	8005e68 <JPEG_ReadInputData+0x60>
        for (index = 0; index < nb_bytes; index++)
 8005ebc:	4618      	mov	r0, r3
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
 8005ebe:	6a25      	ldr	r5, [r4, #32]
 8005ec0:	00c6      	lsls	r6, r0, #3
 8005ec2:	5d4d      	ldrb	r5, [r1, r5]
        for (index = 0; index < nb_bytes; index++)
 8005ec4:	3001      	adds	r0, #1
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
 8005ec6:	40b5      	lsls	r5, r6
 8005ec8:	432b      	orrs	r3, r5
          hjpeg->JpegInCount++;
 8005eca:	6a25      	ldr	r5, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
 8005ecc:	4282      	cmp	r2, r0
          hjpeg->JpegInCount++;
 8005ece:	f105 0501 	add.w	r5, r5, #1
 8005ed2:	6225      	str	r5, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
 8005ed4:	d1f3      	bne.n	8005ebe <JPEG_ReadInputData+0xb6>
        hjpeg->Instance->DIR = dataword;
 8005ed6:	6822      	ldr	r2, [r4, #0]
 8005ed8:	6413      	str	r3, [r2, #64]	@ 0x40
}
 8005eda:	e7c5      	b.n	8005e68 <JPEG_ReadInputData+0x60>

08005edc <JPEG_DMAInCpltCallback>:
{
 8005edc:	b570      	push	{r4, r5, r6, lr}
  JPEG_HandleTypeDef *hjpeg = (JPEG_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 8005ede:	6dc4      	ldr	r4, [r0, #92]	@ 0x5c
  __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
 8005ee0:	6822      	ldr	r2, [r4, #0]
 8005ee2:	6b11      	ldr	r1, [r2, #48]	@ 0x30
 8005ee4:	f021 017e 	bic.w	r1, r1, #126	@ 0x7e
 8005ee8:	6311      	str	r1, [r2, #48]	@ 0x30
  if ((hjpeg->Context & (JPEG_CONTEXT_METHOD_MASK | JPEG_CONTEXT_ENDING_DMA)) ==
 8005eea:	6d61      	ldr	r1, [r4, #84]	@ 0x54
 8005eec:	f421 41ff 	bic.w	r1, r1, #32640	@ 0x7f80
 8005ef0:	f021 0173 	bic.w	r1, r1, #115	@ 0x73
 8005ef4:	0409      	lsls	r1, r1, #16
 8005ef6:	0c09      	lsrs	r1, r1, #16
 8005ef8:	290c      	cmp	r1, #12
 8005efa:	d12d      	bne.n	8005f58 <JPEG_DMAInCpltCallback+0x7c>
    JPEG_DISABLE_DMA(hjpeg, JPEG_DMA_IDMA);
 8005efc:	6b11      	ldr	r1, [r2, #48]	@ 0x30
    hjpeg->JpegInCount = hjpeg->InDataLength - JPEG_GET_DMA_REMAIN_DATA(hdma);
 8005efe:	6803      	ldr	r3, [r0, #0]
    JPEG_DISABLE_DMA(hjpeg, JPEG_DMA_IDMA);
 8005f00:	f421 6100 	bic.w	r1, r1, #2048	@ 0x800
 8005f04:	6311      	str	r1, [r2, #48]	@ 0x30
    hjpeg->JpegInCount = hjpeg->InDataLength - JPEG_GET_DMA_REMAIN_DATA(hdma);
 8005f06:	6c9e      	ldr	r6, [r3, #72]	@ 0x48
 8005f08:	6aa5      	ldr	r5, [r4, #40]	@ 0x28
 8005f0a:	f7fe fdfb 	bl	8004b04 <HAL_DMAEx_GetFifoLevel>
 8005f0e:	b2b6      	uxth	r6, r6
 8005f10:	1bad      	subs	r5, r5, r6
 8005f12:	1a2d      	subs	r5, r5, r0
 8005f14:	6225      	str	r5, [r4, #32]
    HAL_JPEG_GetDataCallback(hjpeg, hjpeg->JpegInCount);
 8005f16:	4620      	mov	r0, r4
 8005f18:	6a21      	ldr	r1, [r4, #32]
 8005f1a:	f7fb fcfd 	bl	8001918 <HAL_JPEG_GetDataCallback>
    if (hjpeg->InDataLength >= 4UL)
 8005f1e:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
      if (HAL_DMA_Start_IT(hjpeg->hdmain, (uint32_t)hjpeg->pJpegInBuffPtr, (uint32_t)&hjpeg->Instance->DIR,
 8005f20:	6822      	ldr	r2, [r4, #0]
    if (hjpeg->InDataLength >= 4UL)
 8005f22:	2b03      	cmp	r3, #3
      hjpeg->InDataLength = ((hjpeg->InDataLength + 3UL) / 4UL) * 4UL;
 8005f24:	bf82      	ittt	hi
 8005f26:	3303      	addhi	r3, #3
 8005f28:	f023 0303 	bichi.w	r3, r3, #3
 8005f2c:	62a3      	strhi	r3, [r4, #40]	@ 0x28
    if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (hjpeg->InDataLength > 0UL))
 8005f2e:	6d63      	ldr	r3, [r4, #84]	@ 0x54
 8005f30:	04db      	lsls	r3, r3, #19
 8005f32:	d417      	bmi.n	8005f64 <JPEG_DMAInCpltCallback+0x88>
 8005f34:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
 8005f36:	b1ab      	cbz	r3, 8005f64 <JPEG_DMAInCpltCallback+0x88>
      if (HAL_DMA_Start_IT(hjpeg->hdmain, (uint32_t)hjpeg->pJpegInBuffPtr, (uint32_t)&hjpeg->Instance->DIR,
 8005f38:	69a1      	ldr	r1, [r4, #24]
 8005f3a:	6b20      	ldr	r0, [r4, #48]	@ 0x30
 8005f3c:	3240      	adds	r2, #64	@ 0x40
 8005f3e:	f7fe fb1b 	bl	8004578 <HAL_DMA_Start_IT>
 8005f42:	b150      	cbz	r0, 8005f5a <JPEG_DMAInCpltCallback+0x7e>
        hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
 8005f44:	6d23      	ldr	r3, [r4, #80]	@ 0x50
        HAL_JPEG_ErrorCallback(hjpeg);
 8005f46:	4620      	mov	r0, r4
        hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
 8005f48:	f043 0304 	orr.w	r3, r3, #4
 8005f4c:	6523      	str	r3, [r4, #80]	@ 0x50
        hjpeg->State = HAL_JPEG_STATE_ERROR;
 8005f4e:	2306      	movs	r3, #6
 8005f50:	f884 304d 	strb.w	r3, [r4, #77]	@ 0x4d
        HAL_JPEG_ErrorCallback(hjpeg);
 8005f54:	f7fb fd9e 	bl	8001a94 <HAL_JPEG_ErrorCallback>
}
 8005f58:	bd70      	pop	{r4, r5, r6, pc}
      JPEG_ENABLE_DMA(hjpeg, JPEG_DMA_IDMA);
 8005f5a:	6822      	ldr	r2, [r4, #0]
 8005f5c:	6b13      	ldr	r3, [r2, #48]	@ 0x30
 8005f5e:	f443 6300 	orr.w	r3, r3, #2048	@ 0x800
 8005f62:	6313      	str	r3, [r2, #48]	@ 0x30
    __HAL_JPEG_ENABLE_IT(hjpeg, JPEG_IT_EOC | JPEG_IT_HPD);
 8005f64:	6822      	ldr	r2, [r4, #0]
 8005f66:	6b13      	ldr	r3, [r2, #48]	@ 0x30
 8005f68:	f043 0360 	orr.w	r3, r3, #96	@ 0x60
 8005f6c:	6313      	str	r3, [r2, #48]	@ 0x30
 8005f6e:	e7f3      	b.n	8005f58 <JPEG_DMAInCpltCallback+0x7c>

08005f70 <JPEG_StoreOutputData>:
  if (hjpeg->OutDataLength >= (hjpeg->JpegOutCount + (nbOutputWords * 4UL)))
 8005f70:	6a42      	ldr	r2, [r0, #36]	@ 0x24
{
 8005f72:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  if (hjpeg->OutDataLength >= (hjpeg->JpegOutCount + (nbOutputWords * 4UL)))
 8005f74:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 8005f76:	eb02 0281 	add.w	r2, r2, r1, lsl #2
 8005f7a:	4293      	cmp	r3, r2
{
 8005f7c:	4604      	mov	r4, r0
  if (hjpeg->OutDataLength >= (hjpeg->JpegOutCount + (nbOutputWords * 4UL)))
 8005f7e:	d32a      	bcc.n	8005fd6 <JPEG_StoreOutputData+0x66>
    for (index = 0; index < nbOutputWords; index++)
 8005f80:	2200      	movs	r2, #0
      dataword = hjpeg->Instance->DOR;
 8005f82:	6823      	ldr	r3, [r4, #0]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
 8005f84:	69e5      	ldr	r5, [r4, #28]
      dataword = hjpeg->Instance->DOR;
 8005f86:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
 8005f88:	6a60      	ldr	r0, [r4, #36]	@ 0x24
    for (index = 0; index < nbOutputWords; index++)
 8005f8a:	3201      	adds	r2, #1
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
 8005f8c:	542b      	strb	r3, [r5, r0]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
 8005f8e:	6a65      	ldr	r5, [r4, #36]	@ 0x24
 8005f90:	69e0      	ldr	r0, [r4, #28]
    for (index = 0; index < nbOutputWords; index++)
 8005f92:	4291      	cmp	r1, r2
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
 8005f94:	4428      	add	r0, r5
 8005f96:	ea4f 2513 	mov.w	r5, r3, lsr #8
 8005f9a:	7045      	strb	r5, [r0, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
 8005f9c:	6a65      	ldr	r5, [r4, #36]	@ 0x24
 8005f9e:	69e0      	ldr	r0, [r4, #28]
 8005fa0:	4428      	add	r0, r5
 8005fa2:	ea4f 4513 	mov.w	r5, r3, lsr #16
 8005fa6:	7085      	strb	r5, [r0, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
 8005fa8:	6a65      	ldr	r5, [r4, #36]	@ 0x24
 8005faa:	69e0      	ldr	r0, [r4, #28]
 8005fac:	ea4f 6313 	mov.w	r3, r3, lsr #24
 8005fb0:	4428      	add	r0, r5
 8005fb2:	70c3      	strb	r3, [r0, #3]
      hjpeg->JpegOutCount += 4UL;
 8005fb4:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8005fb6:	f103 0304 	add.w	r3, r3, #4
 8005fba:	6263      	str	r3, [r4, #36]	@ 0x24
    for (index = 0; index < nbOutputWords; index++)
 8005fbc:	d1e1      	bne.n	8005f82 <JPEG_StoreOutputData+0x12>
    if (hjpeg->OutDataLength == hjpeg->JpegOutCount)
 8005fbe:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8005fc0:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
 8005fc2:	429a      	cmp	r2, r3
 8005fc4:	d106      	bne.n	8005fd4 <JPEG_StoreOutputData+0x64>
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
 8005fc6:	6a62      	ldr	r2, [r4, #36]	@ 0x24
 8005fc8:	69e1      	ldr	r1, [r4, #28]
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
 8005fca:	4620      	mov	r0, r4
 8005fcc:	f7fb fcc2 	bl	8001954 <HAL_JPEG_DataReadyCallback>
      hjpeg->JpegOutCount = 0;
 8005fd0:	2300      	movs	r3, #0
 8005fd2:	6263      	str	r3, [r4, #36]	@ 0x24
}
 8005fd4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  else if (hjpeg->OutDataLength > hjpeg->JpegOutCount)
 8005fd6:	6a42      	ldr	r2, [r0, #36]	@ 0x24
 8005fd8:	4293      	cmp	r3, r2
 8005fda:	d9fb      	bls.n	8005fd4 <JPEG_StoreOutputData+0x64>
    nb_words = (hjpeg->OutDataLength - hjpeg->JpegOutCount) / 4UL;
 8005fdc:	6a42      	ldr	r2, [r0, #36]	@ 0x24
    for (index = 0; index < nb_words; index++)
 8005fde:	2000      	movs	r0, #0
    nb_words = (hjpeg->OutDataLength - hjpeg->JpegOutCount) / 4UL;
 8005fe0:	1a9b      	subs	r3, r3, r2
 8005fe2:	089a      	lsrs	r2, r3, #2
    for (index = 0; index < nb_words; index++)
 8005fe4:	4290      	cmp	r0, r2
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
 8005fe6:	69e1      	ldr	r1, [r4, #28]
    for (index = 0; index < nb_words; index++)
 8005fe8:	d105      	bne.n	8005ff6 <JPEG_StoreOutputData+0x86>
    if (hjpeg->OutDataLength == hjpeg->JpegOutCount)
 8005fea:	6ae7      	ldr	r7, [r4, #44]	@ 0x2c
 8005fec:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8005fee:	429f      	cmp	r7, r3
 8005ff0:	d119      	bne.n	8006026 <JPEG_StoreOutputData+0xb6>
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
 8005ff2:	6a62      	ldr	r2, [r4, #36]	@ 0x24
 8005ff4:	e7e9      	b.n	8005fca <JPEG_StoreOutputData+0x5a>
      dataword = hjpeg->Instance->DOR;
 8005ff6:	6823      	ldr	r3, [r4, #0]
    for (index = 0; index < nb_words; index++)
 8005ff8:	3001      	adds	r0, #1
      dataword = hjpeg->Instance->DOR;
 8005ffa:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
 8005ffc:	6a65      	ldr	r5, [r4, #36]	@ 0x24
 8005ffe:	554b      	strb	r3, [r1, r5]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
 8006000:	6a65      	ldr	r5, [r4, #36]	@ 0x24
 8006002:	69e1      	ldr	r1, [r4, #28]
 8006004:	4429      	add	r1, r5
 8006006:	0a1d      	lsrs	r5, r3, #8
 8006008:	704d      	strb	r5, [r1, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
 800600a:	6a65      	ldr	r5, [r4, #36]	@ 0x24
 800600c:	69e1      	ldr	r1, [r4, #28]
 800600e:	4429      	add	r1, r5
 8006010:	0c1d      	lsrs	r5, r3, #16
 8006012:	708d      	strb	r5, [r1, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
 8006014:	6a65      	ldr	r5, [r4, #36]	@ 0x24
 8006016:	69e1      	ldr	r1, [r4, #28]
 8006018:	0e1b      	lsrs	r3, r3, #24
 800601a:	4429      	add	r1, r5
 800601c:	70cb      	strb	r3, [r1, #3]
      hjpeg->JpegOutCount += 4UL;
 800601e:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8006020:	3304      	adds	r3, #4
 8006022:	6263      	str	r3, [r4, #36]	@ 0x24
    for (index = 0; index < nb_words; index++)
 8006024:	e7de      	b.n	8005fe4 <JPEG_StoreOutputData+0x74>
      for (index = 0; index < nb_bytes; index++)
 8006026:	2200      	movs	r2, #0
      dataword = hjpeg->Instance->DOR;
 8006028:	6823      	ldr	r3, [r4, #0]
      nb_bytes = hjpeg->OutDataLength - hjpeg->JpegOutCount;
 800602a:	6a65      	ldr	r5, [r4, #36]	@ 0x24
      dataword = hjpeg->Instance->DOR;
 800602c:	6c5e      	ldr	r6, [r3, #68]	@ 0x44
      nb_bytes = hjpeg->OutDataLength - hjpeg->JpegOutCount;
 800602e:	1b78      	subs	r0, r7, r5
      for (index = 0; index < nb_bytes; index++)
 8006030:	4282      	cmp	r2, r0
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * (index & 0x3UL))) & 0xFFUL);
 8006032:	69e1      	ldr	r1, [r4, #28]
      for (index = 0; index < nb_bytes; index++)
 8006034:	d114      	bne.n	8006060 <JPEG_StoreOutputData+0xf0>
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
 8006036:	4620      	mov	r0, r4
 8006038:	6a62      	ldr	r2, [r4, #36]	@ 0x24
 800603a:	f7fb fc8b 	bl	8001954 <HAL_JPEG_DataReadyCallback>
      hjpeg->JpegOutCount = 0;
 800603e:	2300      	movs	r3, #0
 8006040:	6263      	str	r3, [r4, #36]	@ 0x24
      nb_bytes = 4UL - nb_bytes;
 8006042:	1d2b      	adds	r3, r5, #4
 8006044:	1bdb      	subs	r3, r3, r7
      for (index = nb_bytes; index < 4UL; index++)
 8006046:	2b03      	cmp	r3, #3
 8006048:	d8c4      	bhi.n	8005fd4 <JPEG_StoreOutputData+0x64>
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
 800604a:	6a61      	ldr	r1, [r4, #36]	@ 0x24
 800604c:	00da      	lsls	r2, r3, #3
 800604e:	69e0      	ldr	r0, [r4, #28]
 8006050:	fa26 f202 	lsr.w	r2, r6, r2
 8006054:	5442      	strb	r2, [r0, r1]
        hjpeg->JpegOutCount++;
 8006056:	6a62      	ldr	r2, [r4, #36]	@ 0x24
      for (index = nb_bytes; index < 4UL; index++)
 8006058:	3301      	adds	r3, #1
        hjpeg->JpegOutCount++;
 800605a:	3201      	adds	r2, #1
 800605c:	6262      	str	r2, [r4, #36]	@ 0x24
      for (index = nb_bytes; index < 4UL; index++)
 800605e:	e7f2      	b.n	8006046 <JPEG_StoreOutputData+0xd6>
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * (index & 0x3UL))) & 0xFFUL);
 8006060:	f002 0303 	and.w	r3, r2, #3
 8006064:	f8d4 c024 	ldr.w	ip, [r4, #36]	@ 0x24
 8006068:	00db      	lsls	r3, r3, #3
 800606a:	fa26 f303 	lsr.w	r3, r6, r3
 800606e:	f801 300c 	strb.w	r3, [r1, ip]
        hjpeg->JpegOutCount++;
 8006072:	6a63      	ldr	r3, [r4, #36]	@ 0x24
      for (index = 0; index < nb_bytes; index++)
 8006074:	3201      	adds	r2, #1
        hjpeg->JpegOutCount++;
 8006076:	3301      	adds	r3, #1
 8006078:	6263      	str	r3, [r4, #36]	@ 0x24
      for (index = 0; index < nb_bytes; index++)
 800607a:	e7d9      	b.n	8006030 <JPEG_StoreOutputData+0xc0>

0800607c <JPEG_Process>:
  if ((hjpeg->Context & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
 800607c:	6d43      	ldr	r3, [r0, #84]	@ 0x54
{
 800607e:	b510      	push	{r4, lr}
  if ((hjpeg->Context & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
 8006080:	f003 0303 	and.w	r3, r3, #3
 8006084:	2b02      	cmp	r3, #2
{
 8006086:	4604      	mov	r4, r0
  if ((hjpeg->Context & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
 8006088:	d114      	bne.n	80060b4 <JPEG_Process+0x38>
    if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_HPDF) != 0UL)
 800608a:	6803      	ldr	r3, [r0, #0]
 800608c:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800608e:	065b      	lsls	r3, r3, #25
 8006090:	d510      	bpl.n	80060b4 <JPEG_Process+0x38>
      (void) HAL_JPEG_GetInfo(hjpeg, &hjpeg->Conf);
 8006092:	1d01      	adds	r1, r0, #4
 8006094:	f7ff fd4c 	bl	8005b30 <HAL_JPEG_GetInfo>
      hjpeg->Conf.ImageQuality = 0;
 8006098:	2300      	movs	r3, #0
      HAL_JPEG_InfoReadyCallback(hjpeg, &hjpeg->Conf);
 800609a:	4620      	mov	r0, r4
      hjpeg->Conf.ImageQuality = 0;
 800609c:	6163      	str	r3, [r4, #20]
      HAL_JPEG_InfoReadyCallback(hjpeg, &hjpeg->Conf);
 800609e:	f7fb fc0f 	bl	80018c0 <HAL_JPEG_InfoReadyCallback>
      __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_IT_HPD);
 80060a2:	6823      	ldr	r3, [r4, #0]
 80060a4:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80060a6:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 80060aa:	631a      	str	r2, [r3, #48]	@ 0x30
      __HAL_JPEG_CLEAR_FLAG(hjpeg, JPEG_FLAG_HPDF);
 80060ac:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
 80060ae:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 80060b2:	639a      	str	r2, [r3, #56]	@ 0x38
  if ((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL)
 80060b4:	6d63      	ldr	r3, [r4, #84]	@ 0x54
 80060b6:	04d9      	lsls	r1, r3, #19
 80060b8:	d407      	bmi.n	80060ca <JPEG_Process+0x4e>
    if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_IFTF) != 0UL)
 80060ba:	6823      	ldr	r3, [r4, #0]
 80060bc:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 80060be:	0792      	lsls	r2, r2, #30
 80060c0:	d542      	bpl.n	8006148 <JPEG_Process+0xcc>
      JPEG_ReadInputData(hjpeg, JPEG_FIFO_TH_SIZE);
 80060c2:	2104      	movs	r1, #4
      JPEG_ReadInputData(hjpeg, 1);
 80060c4:	4620      	mov	r0, r4
 80060c6:	f7ff fe9f 	bl	8005e08 <JPEG_ReadInputData>
  if ((hjpeg->Context &  JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL)
 80060ca:	6d63      	ldr	r3, [r4, #84]	@ 0x54
 80060cc:	0499      	lsls	r1, r3, #18
 80060ce:	d407      	bmi.n	80060e0 <JPEG_Process+0x64>
    if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFTF) != 0UL)
 80060d0:	6823      	ldr	r3, [r4, #0]
 80060d2:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 80060d4:	0712      	lsls	r2, r2, #28
 80060d6:	d53c      	bpl.n	8006152 <JPEG_Process+0xd6>
      JPEG_StoreOutputData(hjpeg, JPEG_FIFO_TH_SIZE);
 80060d8:	2104      	movs	r1, #4
      JPEG_StoreOutputData(hjpeg, 1);
 80060da:	4620      	mov	r0, r4
 80060dc:	f7ff ff48 	bl	8005f70 <JPEG_StoreOutputData>
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
 80060e0:	6823      	ldr	r3, [r4, #0]
 80060e2:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 80060e4:	f002 0238 	and.w	r2, r2, #56	@ 0x38
 80060e8:	2a20      	cmp	r2, #32
 80060ea:	d13a      	bne.n	8006162 <JPEG_Process+0xe6>
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
 80060ec:	681a      	ldr	r2, [r3, #0]
 80060ee:	f022 0201 	bic.w	r2, r2, #1
 80060f2:	601a      	str	r2, [r3, #0]
    if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
 80060f4:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 80060f6:	f002 020c 	and.w	r2, r2, #12
 80060fa:	2a08      	cmp	r2, #8
      __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
 80060fc:	bf02      	ittt	eq
 80060fe:	6b1a      	ldreq	r2, [r3, #48]	@ 0x30
 8006100:	f022 027e 	biceq.w	r2, r2, #126	@ 0x7e
 8006104:	631a      	streq	r2, [r3, #48]	@ 0x30
    __HAL_JPEG_CLEAR_FLAG(hjpeg, JPEG_FLAG_ALL);
 8006106:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
 8006108:	f042 0260 	orr.w	r2, r2, #96	@ 0x60
 800610c:	639a      	str	r2, [r3, #56]	@ 0x38
    if (hjpeg->JpegOutCount > 0UL)
 800610e:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8006110:	b133      	cbz	r3, 8006120 <JPEG_Process+0xa4>
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
 8006112:	4620      	mov	r0, r4
 8006114:	6a62      	ldr	r2, [r4, #36]	@ 0x24
 8006116:	69e1      	ldr	r1, [r4, #28]
 8006118:	f7fb fc1c 	bl	8001954 <HAL_JPEG_DataReadyCallback>
      hjpeg->JpegOutCount = 0;
 800611c:	2300      	movs	r3, #0
 800611e:	6263      	str	r3, [r4, #36]	@ 0x24
    tmpContext = hjpeg->Context;
 8006120:	6d63      	ldr	r3, [r4, #84]	@ 0x54
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
 8006122:	6d62      	ldr	r2, [r4, #84]	@ 0x54
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
 8006124:	f003 0303 	and.w	r3, r3, #3
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
 8006128:	f402 4282 	and.w	r2, r2, #16640	@ 0x4100
 800612c:	6562      	str	r2, [r4, #84]	@ 0x54
    __HAL_UNLOCK(hjpeg);
 800612e:	2200      	movs	r2, #0
 8006130:	f884 204c 	strb.w	r2, [r4, #76]	@ 0x4c
    hjpeg->State = HAL_JPEG_STATE_READY;
 8006134:	2201      	movs	r2, #1
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
 8006136:	2b02      	cmp	r3, #2
      HAL_JPEG_DecodeCpltCallback(hjpeg);
 8006138:	4620      	mov	r0, r4
    hjpeg->State = HAL_JPEG_STATE_READY;
 800613a:	f884 204d 	strb.w	r2, [r4, #77]	@ 0x4d
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
 800613e:	d10d      	bne.n	800615c <JPEG_Process+0xe0>
      HAL_JPEG_DecodeCpltCallback(hjpeg);
 8006140:	f7fb fcaa 	bl	8001a98 <HAL_JPEG_DecodeCpltCallback>
    return JPEG_PROCESS_DONE;
 8006144:	2001      	movs	r0, #1
}
 8006146:	bd10      	pop	{r4, pc}
    else if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_IFNFF) != 0UL)
 8006148:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800614a:	0758      	lsls	r0, r3, #29
 800614c:	d5bd      	bpl.n	80060ca <JPEG_Process+0x4e>
      JPEG_ReadInputData(hjpeg, 1);
 800614e:	2101      	movs	r1, #1
 8006150:	e7b8      	b.n	80060c4 <JPEG_Process+0x48>
    else if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) != 0UL)
 8006152:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8006154:	06db      	lsls	r3, r3, #27
 8006156:	d5c3      	bpl.n	80060e0 <JPEG_Process+0x64>
      JPEG_StoreOutputData(hjpeg, 1);
 8006158:	2101      	movs	r1, #1
 800615a:	e7be      	b.n	80060da <JPEG_Process+0x5e>
      HAL_JPEG_EncodeCpltCallback(hjpeg);
 800615c:	f7ff fe36 	bl	8005dcc <HAL_JPEG_EncodeCpltCallback>
 8006160:	e7f0      	b.n	8006144 <JPEG_Process+0xc8>
  return JPEG_PROCESS_ONGOING;
 8006162:	2000      	movs	r0, #0
 8006164:	e7ef      	b.n	8006146 <JPEG_Process+0xca>

08006166 <JPEG_DMA_PollResidualData>:
{
 8006166:	b570      	push	{r4, r5, r6, lr}
 8006168:	4604      	mov	r4, r0
 800616a:	2610      	movs	r6, #16
    if ((hjpeg->Context &  JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL)
 800616c:	6d65      	ldr	r5, [r4, #84]	@ 0x54
      if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) != 0UL)
 800616e:	6823      	ldr	r3, [r4, #0]
    if ((hjpeg->Context &  JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL)
 8006170:	f415 5500 	ands.w	r5, r5, #8192	@ 0x2000
 8006174:	d122      	bne.n	80061bc <JPEG_DMA_PollResidualData+0x56>
      if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) != 0UL)
 8006176:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8006178:	06d0      	lsls	r0, r2, #27
 800617a:	d51f      	bpl.n	80061bc <JPEG_DMA_PollResidualData+0x56>
        dataOut = hjpeg->Instance->DOR;
 800617c:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataOut & 0x000000FFUL);
 800617e:	69e1      	ldr	r1, [r4, #28]
 8006180:	6a62      	ldr	r2, [r4, #36]	@ 0x24
 8006182:	548b      	strb	r3, [r1, r2]
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataOut & 0x0000FF00UL) >> 8);
 8006184:	6a61      	ldr	r1, [r4, #36]	@ 0x24
 8006186:	69e2      	ldr	r2, [r4, #28]
 8006188:	440a      	add	r2, r1
 800618a:	0a19      	lsrs	r1, r3, #8
 800618c:	7051      	strb	r1, [r2, #1]
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataOut & 0x00FF0000UL) >> 16);
 800618e:	6a61      	ldr	r1, [r4, #36]	@ 0x24
 8006190:	69e2      	ldr	r2, [r4, #28]
 8006192:	440a      	add	r2, r1
 8006194:	0c19      	lsrs	r1, r3, #16
 8006196:	7091      	strb	r1, [r2, #2]
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataOut & 0xFF000000UL) >> 24);
 8006198:	6a61      	ldr	r1, [r4, #36]	@ 0x24
 800619a:	69e2      	ldr	r2, [r4, #28]
 800619c:	0e1b      	lsrs	r3, r3, #24
 800619e:	440a      	add	r2, r1
 80061a0:	70d3      	strb	r3, [r2, #3]
        hjpeg->JpegOutCount += 4UL;
 80061a2:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 80061a4:	3304      	adds	r3, #4
 80061a6:	6263      	str	r3, [r4, #36]	@ 0x24
        if (hjpeg->JpegOutCount == hjpeg->OutDataLength)
 80061a8:	6a62      	ldr	r2, [r4, #36]	@ 0x24
 80061aa:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 80061ac:	429a      	cmp	r2, r3
 80061ae:	d105      	bne.n	80061bc <JPEG_DMA_PollResidualData+0x56>
          HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
 80061b0:	4620      	mov	r0, r4
 80061b2:	6a62      	ldr	r2, [r4, #36]	@ 0x24
 80061b4:	69e1      	ldr	r1, [r4, #28]
 80061b6:	f7fb fbcd 	bl	8001954 <HAL_JPEG_DataReadyCallback>
          hjpeg->JpegOutCount = 0;
 80061ba:	6265      	str	r5, [r4, #36]	@ 0x24
  for (count = JPEG_FIFO_SIZE; count > 0UL; count--)
 80061bc:	3e01      	subs	r6, #1
 80061be:	d1d5      	bne.n	800616c <JPEG_DMA_PollResidualData+0x6>
  if ((__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) == 0UL) || ((tmpContext & JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL))
 80061c0:	6823      	ldr	r3, [r4, #0]
  tmpContext = hjpeg->Context;
 80061c2:	6d62      	ldr	r2, [r4, #84]	@ 0x54
  if ((__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) == 0UL) || ((tmpContext & JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL))
 80061c4:	6b59      	ldr	r1, [r3, #52]	@ 0x34
 80061c6:	06c9      	lsls	r1, r1, #27
 80061c8:	d501      	bpl.n	80061ce <JPEG_DMA_PollResidualData+0x68>
 80061ca:	0492      	lsls	r2, r2, #18
 80061cc:	d41e      	bmi.n	800620c <JPEG_DMA_PollResidualData+0xa6>
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
 80061ce:	681a      	ldr	r2, [r3, #0]
 80061d0:	f022 0201 	bic.w	r2, r2, #1
 80061d4:	601a      	str	r2, [r3, #0]
    if (hjpeg->JpegOutCount > 0UL)
 80061d6:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 80061d8:	b133      	cbz	r3, 80061e8 <JPEG_DMA_PollResidualData+0x82>
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
 80061da:	4620      	mov	r0, r4
 80061dc:	6a62      	ldr	r2, [r4, #36]	@ 0x24
 80061de:	69e1      	ldr	r1, [r4, #28]
 80061e0:	f7fb fbb8 	bl	8001954 <HAL_JPEG_DataReadyCallback>
      hjpeg->JpegOutCount = 0;
 80061e4:	2300      	movs	r3, #0
 80061e6:	6263      	str	r3, [r4, #36]	@ 0x24
    tmpContext = hjpeg->Context;
 80061e8:	6d63      	ldr	r3, [r4, #84]	@ 0x54
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
 80061ea:	6d62      	ldr	r2, [r4, #84]	@ 0x54
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
 80061ec:	f003 0303 	and.w	r3, r3, #3
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
 80061f0:	f402 4282 	and.w	r2, r2, #16640	@ 0x4100
 80061f4:	6562      	str	r2, [r4, #84]	@ 0x54
    __HAL_UNLOCK(hjpeg);
 80061f6:	2200      	movs	r2, #0
 80061f8:	f884 204c 	strb.w	r2, [r4, #76]	@ 0x4c
    hjpeg->State = HAL_JPEG_STATE_READY;
 80061fc:	2201      	movs	r2, #1
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
 80061fe:	2b02      	cmp	r3, #2
      HAL_JPEG_DecodeCpltCallback(hjpeg);
 8006200:	4620      	mov	r0, r4
    hjpeg->State = HAL_JPEG_STATE_READY;
 8006202:	f884 204d 	strb.w	r2, [r4, #77]	@ 0x4d
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
 8006206:	d102      	bne.n	800620e <JPEG_DMA_PollResidualData+0xa8>
      HAL_JPEG_DecodeCpltCallback(hjpeg);
 8006208:	f7fb fc46 	bl	8001a98 <HAL_JPEG_DecodeCpltCallback>
}
 800620c:	bd70      	pop	{r4, r5, r6, pc}
      HAL_JPEG_EncodeCpltCallback(hjpeg);
 800620e:	f7ff fddd 	bl	8005dcc <HAL_JPEG_EncodeCpltCallback>
}
 8006212:	e7fb      	b.n	800620c <JPEG_DMA_PollResidualData+0xa6>

08006214 <HAL_JPEG_Resume>:
  if ((hjpeg->Context & (JPEG_CONTEXT_PAUSE_INPUT | JPEG_CONTEXT_PAUSE_OUTPUT)) == 0UL)
 8006214:	6d43      	ldr	r3, [r0, #84]	@ 0x54
{
 8006216:	b570      	push	{r4, r5, r6, lr}
  if ((hjpeg->Context & (JPEG_CONTEXT_PAUSE_INPUT | JPEG_CONTEXT_PAUSE_OUTPUT)) == 0UL)
 8006218:	f413 5f40 	tst.w	r3, #12288	@ 0x3000
{
 800621c:	4604      	mov	r4, r0
 800621e:	460d      	mov	r5, r1
  if ((hjpeg->Context & (JPEG_CONTEXT_PAUSE_INPUT | JPEG_CONTEXT_PAUSE_OUTPUT)) == 0UL)
 8006220:	d033      	beq.n	800628a <HAL_JPEG_Resume+0x76>
  if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
 8006222:	6d43      	ldr	r3, [r0, #84]	@ 0x54
 8006224:	f003 030c 	and.w	r3, r3, #12
 8006228:	2b0c      	cmp	r3, #12
 800622a:	d13c      	bne.n	80062a6 <HAL_JPEG_Resume+0x92>
    if ((XferSelection & JPEG_PAUSE_RESUME_INPUT) == JPEG_PAUSE_RESUME_INPUT)
 800622c:	f011 0601 	ands.w	r6, r1, #1
 8006230:	d00a      	beq.n	8006248 <HAL_JPEG_Resume+0x34>
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_INPUT);
 8006232:	6d43      	ldr	r3, [r0, #84]	@ 0x54
 8006234:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 8006238:	6543      	str	r3, [r0, #84]	@ 0x54
      hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % 4UL);
 800623a:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 800623c:	f023 0303 	bic.w	r3, r3, #3
 8006240:	6283      	str	r3, [r0, #40]	@ 0x28
      if (hjpeg->InDataLength > 0UL)
 8006242:	b99b      	cbnz	r3, 800626c <HAL_JPEG_Resume+0x58>
      mask |= JPEG_DMA_IDMA;
 8006244:	f44f 6600 	mov.w	r6, #2048	@ 0x800
    if ((XferSelection & JPEG_PAUSE_RESUME_OUTPUT) == JPEG_PAUSE_RESUME_OUTPUT)
 8006248:	07a8      	lsls	r0, r5, #30
 800624a:	d509      	bpl.n	8006260 <HAL_JPEG_Resume+0x4c>
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_OUTPUT);
 800624c:	6d63      	ldr	r3, [r4, #84]	@ 0x54
 800624e:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
 8006252:	6563      	str	r3, [r4, #84]	@ 0x54
      if ((hjpeg->Context & JPEG_CONTEXT_ENDING_DMA) != 0UL)
 8006254:	6d63      	ldr	r3, [r4, #84]	@ 0x54
 8006256:	0419      	lsls	r1, r3, #16
 8006258:	d519      	bpl.n	800628e <HAL_JPEG_Resume+0x7a>
        JPEG_DMA_PollResidualData(hjpeg);
 800625a:	4620      	mov	r0, r4
 800625c:	f7ff ff83 	bl	8006166 <JPEG_DMA_PollResidualData>
    JPEG_ENABLE_DMA(hjpeg, mask);
 8006260:	6822      	ldr	r2, [r4, #0]
 8006262:	6b13      	ldr	r3, [r2, #48]	@ 0x30
 8006264:	4333      	orrs	r3, r6
 8006266:	6313      	str	r3, [r2, #48]	@ 0x30
  return HAL_OK;
 8006268:	2000      	movs	r0, #0
}
 800626a:	bd70      	pop	{r4, r5, r6, pc}
        if (HAL_DMA_Start_IT(hjpeg->hdmain, (uint32_t)hjpeg->pJpegInBuffPtr, (uint32_t)&hjpeg->Instance->DIR,
 800626c:	6802      	ldr	r2, [r0, #0]
 800626e:	6981      	ldr	r1, [r0, #24]
 8006270:	3240      	adds	r2, #64	@ 0x40
 8006272:	6b00      	ldr	r0, [r0, #48]	@ 0x30
 8006274:	f7fe f980 	bl	8004578 <HAL_DMA_Start_IT>
 8006278:	2800      	cmp	r0, #0
 800627a:	d0e3      	beq.n	8006244 <HAL_JPEG_Resume+0x30>
          hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
 800627c:	6d23      	ldr	r3, [r4, #80]	@ 0x50
 800627e:	f043 0304 	orr.w	r3, r3, #4
 8006282:	6523      	str	r3, [r4, #80]	@ 0x50
          hjpeg->State = HAL_JPEG_STATE_ERROR;
 8006284:	2306      	movs	r3, #6
 8006286:	f884 304d 	strb.w	r3, [r4, #77]	@ 0x4d
    return HAL_ERROR;
 800628a:	2001      	movs	r0, #1
 800628c:	e7ed      	b.n	800626a <HAL_JPEG_Resume+0x56>
        if (HAL_DMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
 800628e:	6821      	ldr	r1, [r4, #0]
 8006290:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 8006292:	69e2      	ldr	r2, [r4, #28]
 8006294:	6b60      	ldr	r0, [r4, #52]	@ 0x34
 8006296:	3144      	adds	r1, #68	@ 0x44
 8006298:	f7fe f96e 	bl	8004578 <HAL_DMA_Start_IT>
 800629c:	2800      	cmp	r0, #0
 800629e:	d1ed      	bne.n	800627c <HAL_JPEG_Resume+0x68>
        mask |= JPEG_DMA_ODMA;
 80062a0:	f446 5680 	orr.w	r6, r6, #4096	@ 0x1000
 80062a4:	e7dc      	b.n	8006260 <HAL_JPEG_Resume+0x4c>
  else if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
 80062a6:	6d43      	ldr	r3, [r0, #84]	@ 0x54
 80062a8:	f003 030c 	and.w	r3, r3, #12
 80062ac:	2b08      	cmp	r3, #8
 80062ae:	d1db      	bne.n	8006268 <HAL_JPEG_Resume+0x54>
    if ((XferSelection & JPEG_PAUSE_RESUME_INPUT) == JPEG_PAUSE_RESUME_INPUT)
 80062b0:	f011 0301 	ands.w	r3, r1, #1
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_INPUT);
 80062b4:	bf1f      	itttt	ne
 80062b6:	6d43      	ldrne	r3, [r0, #84]	@ 0x54
 80062b8:	f423 5380 	bicne.w	r3, r3, #4096	@ 0x1000
 80062bc:	6543      	strne	r3, [r0, #84]	@ 0x54
      mask |= (JPEG_IT_IFT | JPEG_IT_IFNF);
 80062be:	2306      	movne	r3, #6
    if ((XferSelection & JPEG_PAUSE_RESUME_OUTPUT) == JPEG_PAUSE_RESUME_OUTPUT)
 80062c0:	078a      	lsls	r2, r1, #30
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_OUTPUT);
 80062c2:	bf48      	it	mi
 80062c4:	6d42      	ldrmi	r2, [r0, #84]	@ 0x54
    __HAL_JPEG_ENABLE_IT(hjpeg, mask);
 80062c6:	6801      	ldr	r1, [r0, #0]
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_OUTPUT);
 80062c8:	bf44      	itt	mi
 80062ca:	f422 5200 	bicmi.w	r2, r2, #8192	@ 0x2000
 80062ce:	6542      	strmi	r2, [r0, #84]	@ 0x54
    __HAL_JPEG_ENABLE_IT(hjpeg, mask);
 80062d0:	6b0a      	ldr	r2, [r1, #48]	@ 0x30
      mask |= (JPEG_IT_OFT | JPEG_IT_OFNE | JPEG_IT_EOC);
 80062d2:	bf48      	it	mi
 80062d4:	f043 0328 	orrmi.w	r3, r3, #40	@ 0x28
    __HAL_JPEG_ENABLE_IT(hjpeg, mask);
 80062d8:	4313      	orrs	r3, r2
 80062da:	630b      	str	r3, [r1, #48]	@ 0x30
 80062dc:	e7c4      	b.n	8006268 <HAL_JPEG_Resume+0x54>

080062de <JPEG_DMA_EndProcess>:
{
 80062de:	b570      	push	{r4, r5, r6, lr}
 80062e0:	4604      	mov	r4, r0
  hjpeg->JpegOutCount = hjpeg->OutDataLength - JPEG_GET_DMA_REMAIN_DATA(hjpeg->hdmaout);
 80062e2:	6ac5      	ldr	r5, [r0, #44]	@ 0x2c
 80062e4:	6b40      	ldr	r0, [r0, #52]	@ 0x34
 80062e6:	6803      	ldr	r3, [r0, #0]
 80062e8:	6c9e      	ldr	r6, [r3, #72]	@ 0x48
 80062ea:	f7fe fc0b 	bl	8004b04 <HAL_DMAEx_GetFifoLevel>
 80062ee:	b2b6      	uxth	r6, r6
 80062f0:	1bad      	subs	r5, r5, r6
 80062f2:	1a2d      	subs	r5, r5, r0
 80062f4:	6265      	str	r5, [r4, #36]	@ 0x24
  if (hjpeg->JpegOutCount == hjpeg->OutDataLength)
 80062f6:	6a62      	ldr	r2, [r4, #36]	@ 0x24
 80062f8:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 80062fa:	429a      	cmp	r2, r3
 80062fc:	d106      	bne.n	800630c <JPEG_DMA_EndProcess+0x2e>
    HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
 80062fe:	4620      	mov	r0, r4
 8006300:	6a62      	ldr	r2, [r4, #36]	@ 0x24
 8006302:	69e1      	ldr	r1, [r4, #28]
 8006304:	f7fb fb26 	bl	8001954 <HAL_JPEG_DataReadyCallback>
    hjpeg->JpegOutCount = 0;
 8006308:	2300      	movs	r3, #0
 800630a:	6263      	str	r3, [r4, #36]	@ 0x24
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) == 0UL)
 800630c:	6823      	ldr	r3, [r4, #0]
 800630e:	6b5d      	ldr	r5, [r3, #52]	@ 0x34
 8006310:	f015 0510 	ands.w	r5, r5, #16
 8006314:	d122      	bne.n	800635c <JPEG_DMA_EndProcess+0x7e>
    if (hjpeg->JpegOutCount > 0UL)
 8006316:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8006318:	b12b      	cbz	r3, 8006326 <JPEG_DMA_EndProcess+0x48>
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
 800631a:	4620      	mov	r0, r4
 800631c:	6a62      	ldr	r2, [r4, #36]	@ 0x24
 800631e:	69e1      	ldr	r1, [r4, #28]
 8006320:	f7fb fb18 	bl	8001954 <HAL_JPEG_DataReadyCallback>
      hjpeg->JpegOutCount = 0;
 8006324:	6265      	str	r5, [r4, #36]	@ 0x24
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
 8006326:	6822      	ldr	r2, [r4, #0]
      HAL_JPEG_DecodeCpltCallback(hjpeg);
 8006328:	4620      	mov	r0, r4
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
 800632a:	6813      	ldr	r3, [r2, #0]
 800632c:	f023 0301 	bic.w	r3, r3, #1
 8006330:	6013      	str	r3, [r2, #0]
    tmpContext = hjpeg->Context;
 8006332:	6d63      	ldr	r3, [r4, #84]	@ 0x54
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
 8006334:	6d62      	ldr	r2, [r4, #84]	@ 0x54
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
 8006336:	f003 0303 	and.w	r3, r3, #3
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
 800633a:	f402 4282 	and.w	r2, r2, #16640	@ 0x4100
 800633e:	6562      	str	r2, [r4, #84]	@ 0x54
    __HAL_UNLOCK(hjpeg);
 8006340:	2200      	movs	r2, #0
 8006342:	f884 204c 	strb.w	r2, [r4, #76]	@ 0x4c
    hjpeg->State = HAL_JPEG_STATE_READY;
 8006346:	2201      	movs	r2, #1
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
 8006348:	2b02      	cmp	r3, #2
    hjpeg->State = HAL_JPEG_STATE_READY;
 800634a:	f884 204d 	strb.w	r2, [r4, #77]	@ 0x4d
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
 800634e:	d102      	bne.n	8006356 <JPEG_DMA_EndProcess+0x78>
      HAL_JPEG_DecodeCpltCallback(hjpeg);
 8006350:	f7fb fba2 	bl	8001a98 <HAL_JPEG_DecodeCpltCallback>
}
 8006354:	bd70      	pop	{r4, r5, r6, pc}
      HAL_JPEG_EncodeCpltCallback(hjpeg);
 8006356:	f7ff fd39 	bl	8005dcc <HAL_JPEG_EncodeCpltCallback>
 800635a:	e7fb      	b.n	8006354 <JPEG_DMA_EndProcess+0x76>
  else if ((hjpeg->Context &  JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL)
 800635c:	6d63      	ldr	r3, [r4, #84]	@ 0x54
 800635e:	049b      	lsls	r3, r3, #18
 8006360:	d4f8      	bmi.n	8006354 <JPEG_DMA_EndProcess+0x76>
    JPEG_DMA_PollResidualData(hjpeg);
 8006362:	4620      	mov	r0, r4
}
 8006364:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    JPEG_DMA_PollResidualData(hjpeg);
 8006368:	f7ff befd 	b.w	8006166 <JPEG_DMA_PollResidualData>

0800636c <JPEG_DMAOutAbortCallback>:
  JPEG_HandleTypeDef *hjpeg = (JPEG_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 800636c:	6dc0      	ldr	r0, [r0, #92]	@ 0x5c
  if ((hjpeg->Context & JPEG_CONTEXT_ENDING_DMA) != 0UL)
 800636e:	6d43      	ldr	r3, [r0, #84]	@ 0x54
 8006370:	041b      	lsls	r3, r3, #16
 8006372:	d501      	bpl.n	8006378 <JPEG_DMAOutAbortCallback+0xc>
    JPEG_DMA_EndProcess(hjpeg);
 8006374:	f7ff bfb3 	b.w	80062de <JPEG_DMA_EndProcess>
}
 8006378:	4770      	bx	lr

0800637a <JPEG_DMAOutCpltCallback>:
{
 800637a:	b570      	push	{r4, r5, r6, lr}
  JPEG_HandleTypeDef *hjpeg = (JPEG_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 800637c:	6dc4      	ldr	r4, [r0, #92]	@ 0x5c
  __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
 800637e:	6823      	ldr	r3, [r4, #0]
 8006380:	6b19      	ldr	r1, [r3, #48]	@ 0x30
 8006382:	f021 017e 	bic.w	r1, r1, #126	@ 0x7e
 8006386:	6319      	str	r1, [r3, #48]	@ 0x30
  if ((hjpeg->Context & (JPEG_CONTEXT_METHOD_MASK | JPEG_CONTEXT_ENDING_DMA)) ==
 8006388:	6d61      	ldr	r1, [r4, #84]	@ 0x54
 800638a:	f421 41ff 	bic.w	r1, r1, #32640	@ 0x7f80
 800638e:	f021 0173 	bic.w	r1, r1, #115	@ 0x73
 8006392:	0409      	lsls	r1, r1, #16
 8006394:	0c09      	lsrs	r1, r1, #16
 8006396:	290c      	cmp	r1, #12
 8006398:	d129      	bne.n	80063ee <JPEG_DMAOutCpltCallback+0x74>
    if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF) == 0UL)
 800639a:	6b59      	ldr	r1, [r3, #52]	@ 0x34
 800639c:	0689      	lsls	r1, r1, #26
 800639e:	d42c      	bmi.n	80063fa <JPEG_DMAOutCpltCallback+0x80>
      JPEG_DISABLE_DMA(hjpeg, JPEG_DMA_ODMA);
 80063a0:	6b19      	ldr	r1, [r3, #48]	@ 0x30
      hjpeg->JpegOutCount = hjpeg->OutDataLength - JPEG_GET_DMA_REMAIN_DATA(hdma);
 80063a2:	6ae5      	ldr	r5, [r4, #44]	@ 0x2c
      JPEG_DISABLE_DMA(hjpeg, JPEG_DMA_ODMA);
 80063a4:	f421 5180 	bic.w	r1, r1, #4096	@ 0x1000
 80063a8:	6319      	str	r1, [r3, #48]	@ 0x30
      hjpeg->JpegOutCount = hjpeg->OutDataLength - JPEG_GET_DMA_REMAIN_DATA(hdma);
 80063aa:	6803      	ldr	r3, [r0, #0]
 80063ac:	6c9e      	ldr	r6, [r3, #72]	@ 0x48
 80063ae:	f7fe fba9 	bl	8004b04 <HAL_DMAEx_GetFifoLevel>
 80063b2:	b2b6      	uxth	r6, r6
 80063b4:	1bad      	subs	r5, r5, r6
 80063b6:	1a2d      	subs	r5, r5, r0
 80063b8:	6265      	str	r5, [r4, #36]	@ 0x24
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
 80063ba:	4620      	mov	r0, r4
 80063bc:	6a62      	ldr	r2, [r4, #36]	@ 0x24
 80063be:	69e1      	ldr	r1, [r4, #28]
 80063c0:	f7fb fac8 	bl	8001954 <HAL_JPEG_DataReadyCallback>
      if ((hjpeg->Context &  JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL)
 80063c4:	6d63      	ldr	r3, [r4, #84]	@ 0x54
 80063c6:	049b      	lsls	r3, r3, #18
 80063c8:	d417      	bmi.n	80063fa <JPEG_DMAOutCpltCallback+0x80>
        if (HAL_DMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
 80063ca:	6821      	ldr	r1, [r4, #0]
 80063cc:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 80063ce:	69e2      	ldr	r2, [r4, #28]
 80063d0:	6b60      	ldr	r0, [r4, #52]	@ 0x34
 80063d2:	3144      	adds	r1, #68	@ 0x44
 80063d4:	f7fe f8d0 	bl	8004578 <HAL_DMA_Start_IT>
 80063d8:	b150      	cbz	r0, 80063f0 <JPEG_DMAOutCpltCallback+0x76>
          hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
 80063da:	6d23      	ldr	r3, [r4, #80]	@ 0x50
          HAL_JPEG_ErrorCallback(hjpeg);
 80063dc:	4620      	mov	r0, r4
          hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
 80063de:	f043 0304 	orr.w	r3, r3, #4
 80063e2:	6523      	str	r3, [r4, #80]	@ 0x50
          hjpeg->State = HAL_JPEG_STATE_ERROR;
 80063e4:	2306      	movs	r3, #6
 80063e6:	f884 304d 	strb.w	r3, [r4, #77]	@ 0x4d
          HAL_JPEG_ErrorCallback(hjpeg);
 80063ea:	f7fb fb53 	bl	8001a94 <HAL_JPEG_ErrorCallback>
}
 80063ee:	bd70      	pop	{r4, r5, r6, pc}
        JPEG_ENABLE_DMA(hjpeg, JPEG_DMA_ODMA);
 80063f0:	6822      	ldr	r2, [r4, #0]
 80063f2:	6b13      	ldr	r3, [r2, #48]	@ 0x30
 80063f4:	f443 5380 	orr.w	r3, r3, #4096	@ 0x1000
 80063f8:	6313      	str	r3, [r2, #48]	@ 0x30
    __HAL_JPEG_ENABLE_IT(hjpeg, JPEG_IT_EOC | JPEG_IT_HPD);
 80063fa:	6822      	ldr	r2, [r4, #0]
 80063fc:	6b13      	ldr	r3, [r2, #48]	@ 0x30
 80063fe:	f043 0360 	orr.w	r3, r3, #96	@ 0x60
 8006402:	6313      	str	r3, [r2, #48]	@ 0x30
 8006404:	e7f3      	b.n	80063ee <JPEG_DMAOutCpltCallback+0x74>

08006406 <HAL_JPEG_IRQHandler>:
{
 8006406:	b510      	push	{r4, lr}
  switch (hjpeg->State)
 8006408:	f890 304d 	ldrb.w	r3, [r0, #77]	@ 0x4d
{
 800640c:	4604      	mov	r4, r0
  switch (hjpeg->State)
 800640e:	3b03      	subs	r3, #3
 8006410:	2b01      	cmp	r3, #1
 8006412:	d852      	bhi.n	80064ba <HAL_JPEG_IRQHandler+0xb4>
      if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
 8006414:	6d43      	ldr	r3, [r0, #84]	@ 0x54
 8006416:	f003 030c 	and.w	r3, r3, #12
 800641a:	2b08      	cmp	r3, #8
 800641c:	d103      	bne.n	8006426 <HAL_JPEG_IRQHandler+0x20>
}
 800641e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        (void) JPEG_Process(hjpeg);
 8006422:	f7ff be2b 	b.w	800607c <JPEG_Process>
      else if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
 8006426:	6d43      	ldr	r3, [r0, #84]	@ 0x54
 8006428:	f003 030c 	and.w	r3, r3, #12
 800642c:	2b0c      	cmp	r3, #12
 800642e:	d144      	bne.n	80064ba <HAL_JPEG_IRQHandler+0xb4>
  if ((hjpeg->Context & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
 8006430:	6d43      	ldr	r3, [r0, #84]	@ 0x54
 8006432:	f003 0303 	and.w	r3, r3, #3
 8006436:	2b02      	cmp	r3, #2
 8006438:	d114      	bne.n	8006464 <HAL_JPEG_IRQHandler+0x5e>
    if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_HPDF) != 0UL)
 800643a:	6803      	ldr	r3, [r0, #0]
 800643c:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800643e:	0659      	lsls	r1, r3, #25
 8006440:	d510      	bpl.n	8006464 <HAL_JPEG_IRQHandler+0x5e>
      (void) HAL_JPEG_GetInfo(hjpeg, &hjpeg->Conf);
 8006442:	1d01      	adds	r1, r0, #4
 8006444:	f7ff fb74 	bl	8005b30 <HAL_JPEG_GetInfo>
      hjpeg->Conf.ImageQuality = 0;
 8006448:	2300      	movs	r3, #0
      HAL_JPEG_InfoReadyCallback(hjpeg, &hjpeg->Conf);
 800644a:	4620      	mov	r0, r4
      hjpeg->Conf.ImageQuality = 0;
 800644c:	6163      	str	r3, [r4, #20]
      HAL_JPEG_InfoReadyCallback(hjpeg, &hjpeg->Conf);
 800644e:	f7fb fa37 	bl	80018c0 <HAL_JPEG_InfoReadyCallback>
      __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_IT_HPD);
 8006452:	6823      	ldr	r3, [r4, #0]
 8006454:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8006456:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 800645a:	631a      	str	r2, [r3, #48]	@ 0x30
      __HAL_JPEG_CLEAR_FLAG(hjpeg, JPEG_FLAG_HPDF);
 800645c:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
 800645e:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 8006462:	639a      	str	r2, [r3, #56]	@ 0x38
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF) != 0UL)
 8006464:	6823      	ldr	r3, [r4, #0]
 8006466:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8006468:	0692      	lsls	r2, r2, #26
 800646a:	d526      	bpl.n	80064ba <HAL_JPEG_IRQHandler+0xb4>
    JPEG_DISABLE_DMA(hjpeg, JPEG_DMA_ODMA | JPEG_DMA_IDMA);
 800646c:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
    if (hjpeg->hdmain->State == HAL_DMA_STATE_BUSY)
 800646e:	6b20      	ldr	r0, [r4, #48]	@ 0x30
    JPEG_DISABLE_DMA(hjpeg, JPEG_DMA_ODMA | JPEG_DMA_IDMA);
 8006470:	f422 52c0 	bic.w	r2, r2, #6144	@ 0x1800
 8006474:	631a      	str	r2, [r3, #48]	@ 0x30
    hjpeg->Context |= JPEG_CONTEXT_ENDING_DMA;
 8006476:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 8006478:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 800647c:	6562      	str	r2, [r4, #84]	@ 0x54
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
 800647e:	681a      	ldr	r2, [r3, #0]
 8006480:	f022 0201 	bic.w	r2, r2, #1
 8006484:	601a      	str	r2, [r3, #0]
    __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
 8006486:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8006488:	f022 027e 	bic.w	r2, r2, #126	@ 0x7e
 800648c:	631a      	str	r2, [r3, #48]	@ 0x30
    __HAL_JPEG_CLEAR_FLAG(hjpeg, JPEG_FLAG_ALL);
 800648e:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
 8006490:	f042 0260 	orr.w	r2, r2, #96	@ 0x60
 8006494:	639a      	str	r2, [r3, #56]	@ 0x38
    if (hjpeg->hdmain->State == HAL_DMA_STATE_BUSY)
 8006496:	f890 3054 	ldrb.w	r3, [r0, #84]	@ 0x54
 800649a:	2b02      	cmp	r3, #2
 800649c:	d101      	bne.n	80064a2 <HAL_JPEG_IRQHandler+0x9c>
      (void) HAL_DMA_Abort(hjpeg->hdmain);
 800649e:	f7fe f8a9 	bl	80045f4 <HAL_DMA_Abort>
    if (hjpeg->hdmaout->State == HAL_DMA_STATE_BUSY)
 80064a2:	6b60      	ldr	r0, [r4, #52]	@ 0x34
 80064a4:	f890 3054 	ldrb.w	r3, [r0, #84]	@ 0x54
 80064a8:	2b02      	cmp	r3, #2
 80064aa:	d101      	bne.n	80064b0 <HAL_JPEG_IRQHandler+0xaa>
      (void) HAL_DMA_Abort(hjpeg->hdmaout);
 80064ac:	f7fe f8a2 	bl	80045f4 <HAL_DMA_Abort>
    JPEG_DMA_EndProcess(hjpeg);
 80064b0:	4620      	mov	r0, r4
}
 80064b2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    JPEG_DMA_EndProcess(hjpeg);
 80064b6:	f7ff bf12 	b.w	80062de <JPEG_DMA_EndProcess>
}
 80064ba:	bd10      	pop	{r4, pc}

080064bc <HAL_JPEG_GetState>:
  return hjpeg->State;
 80064bc:	f890 004d 	ldrb.w	r0, [r0, #77]	@ 0x4d
}
 80064c0:	4770      	bx	lr

080064c2 <LTDC_SetConfig>:
  uint32_t tmp;
  uint32_t tmp1;
  uint32_t tmp2;

  /* Configure the horizontal start and stop position */
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 80064c2:	6800      	ldr	r0, [r0, #0]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 80064c4:	01d2      	lsls	r2, r2, #7
 80064c6:	3284      	adds	r2, #132	@ 0x84
 80064c8:	1883      	adds	r3, r0, r2
{
 80064ca:	b5f0      	push	{r4, r5, r6, r7, lr}
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 80064cc:	68c7      	ldr	r7, [r0, #12]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 80064ce:	685d      	ldr	r5, [r3, #4]
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 80064d0:	684c      	ldr	r4, [r1, #4]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 80064d2:	f005 25f0 	and.w	r5, r5, #4026593280	@ 0xf000f000
 80064d6:	605d      	str	r5, [r3, #4]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 80064d8:	68c5      	ldr	r5, [r0, #12]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
 80064da:	680e      	ldr	r6, [r1, #0]
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 80064dc:	f3c5 450b 	ubfx	r5, r5, #16, #12
 80064e0:	f106 0c01 	add.w	ip, r6, #1
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 80064e4:	f3c7 470b 	ubfx	r7, r7, #16, #12
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 80064e8:	4465      	add	r5, ip
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 80064ea:	4427      	add	r7, r4
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 80064ec:	ea45 4507 	orr.w	r5, r5, r7, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
 80064f0:	605d      	str	r5, [r3, #4]

  /* Configure the vertical start and stop position */
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 80064f2:	68c7      	ldr	r7, [r0, #12]
 80064f4:	68cd      	ldr	r5, [r1, #12]
 80064f6:	f3c7 070a 	ubfx	r7, r7, #0, #11
 80064fa:	442f      	add	r7, r5
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
 80064fc:	689d      	ldr	r5, [r3, #8]
 80064fe:	f005 25f0 	and.w	r5, r5, #4026593280	@ 0xf000f000
 8006502:	609d      	str	r5, [r3, #8]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
 8006504:	f8d0 c00c 	ldr.w	ip, [r0, #12]
 8006508:	688d      	ldr	r5, [r1, #8]
 800650a:	f3cc 0c0a 	ubfx	ip, ip, #0, #11
 800650e:	3501      	adds	r5, #1
 8006510:	4465      	add	r5, ip
 8006512:	ea45 4507 	orr.w	r5, r5, r7, lsl #16
 8006516:	609d      	str	r5, [r3, #8]

  /* Specifies the pixel format */
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 8006518:	691d      	ldr	r5, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 800651a:	f8d1 c010 	ldr.w	ip, [r1, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 800651e:	f025 0507 	bic.w	r5, r5, #7
 8006522:	611d      	str	r5, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 8006524:	f8c3 c010 	str.w	ip, [r3, #16]

  /* Configure the default color values */
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
  tmp2 = (pLayerCfg->Alpha0 << 24U);
 8006528:	698f      	ldr	r7, [r1, #24]
  WRITE_REG(LTDC_LAYER(hltdc, LayerIdx)->DCCR, (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2));
 800652a:	f891 5030 	ldrb.w	r5, [r1, #48]	@ 0x30
 800652e:	ea45 6507 	orr.w	r5, r5, r7, lsl #24
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
 8006532:	f891 7031 	ldrb.w	r7, [r1, #49]	@ 0x31
  WRITE_REG(LTDC_LAYER(hltdc, LayerIdx)->DCCR, (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2));
 8006536:	ea45 2507 	orr.w	r5, r5, r7, lsl #8
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
 800653a:	f891 7032 	ldrb.w	r7, [r1, #50]	@ 0x32
  WRITE_REG(LTDC_LAYER(hltdc, LayerIdx)->DCCR, (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2));
 800653e:	ea45 4507 	orr.w	r5, r5, r7, lsl #16
 8006542:	619d      	str	r5, [r3, #24]

  /* Specifies the constant alpha value */
  LTDC_LAYER(hltdc, LayerIdx)->CACR &= ~(LTDC_LxCACR_CONSTA);
 8006544:	695d      	ldr	r5, [r3, #20]
 8006546:	f025 05ff 	bic.w	r5, r5, #255	@ 0xff
 800654a:	615d      	str	r5, [r3, #20]
  LTDC_LAYER(hltdc, LayerIdx)->CACR = (pLayerCfg->Alpha);
 800654c:	694d      	ldr	r5, [r1, #20]
 800654e:	615d      	str	r5, [r3, #20]

  /* Specifies the blending factors */
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
 8006550:	69dd      	ldr	r5, [r3, #28]
 8006552:	f425 65e0 	bic.w	r5, r5, #1792	@ 0x700
 8006556:	f025 0507 	bic.w	r5, r5, #7
 800655a:	61dd      	str	r5, [r3, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
 800655c:	e9d1 5707 	ldrd	r5, r7, [r1, #28]
 8006560:	433d      	orrs	r5, r7
 8006562:	61dd      	str	r5, [r3, #28]

  /* Configure the color frame buffer start address */
  WRITE_REG(LTDC_LAYER(hltdc, LayerIdx)->CFBAR, pLayerCfg->FBStartAdress);
 8006564:	6a4d      	ldr	r5, [r1, #36]	@ 0x24
 8006566:	629d      	str	r5, [r3, #40]	@ 0x28

  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 8006568:	f1bc 0f00 	cmp.w	ip, #0
 800656c:	d024      	beq.n	80065b8 <LTDC_SetConfig+0xf6>
  {
    tmp = 4U;
  }
  else if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB888)
 800656e:	f1bc 0f01 	cmp.w	ip, #1
 8006572:	d023      	beq.n	80065bc <LTDC_SetConfig+0xfa>
  {
    tmp = 3U;
  }
  else if ((pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB4444) || \
 8006574:	f1ac 0502 	sub.w	r5, ip, #2
 8006578:	2d02      	cmp	r5, #2
 800657a:	d921      	bls.n	80065c0 <LTDC_SetConfig+0xfe>
           (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB565)   || \
           (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB1555) || \
           (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_AL88))
  {
    tmp = 2U;
 800657c:	f1bc 0f07 	cmp.w	ip, #7
 8006580:	bf14      	ite	ne
 8006582:	2501      	movne	r5, #1
 8006584:	2502      	moveq	r5, #2
  {
    tmp = 1U;
  }

  /* Configure the color frame buffer pitch in byte */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 8006586:	6adf      	ldr	r7, [r3, #44]	@ 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 8006588:	1ba4      	subs	r4, r4, r6
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 800658a:	f007 27e0 	and.w	r7, r7, #3758153728	@ 0xe000e000
 800658e:	62df      	str	r7, [r3, #44]	@ 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 8006590:	6a8f      	ldr	r7, [r1, #40]	@ 0x28
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 8006592:	436c      	muls	r4, r5
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 8006594:	436f      	muls	r7, r5
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 8006596:	3403      	adds	r4, #3
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 8006598:	ea44 4407 	orr.w	r4, r4, r7, lsl #16
 800659c:	62dc      	str	r4, [r3, #44]	@ 0x2c
  /* Configure the frame buffer line number */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
 800659e:	6b1c      	ldr	r4, [r3, #48]	@ 0x30
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 80065a0:	6ac9      	ldr	r1, [r1, #44]	@ 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
 80065a2:	f424 64ff 	bic.w	r4, r4, #2040	@ 0x7f8
 80065a6:	f024 0407 	bic.w	r4, r4, #7
 80065aa:	631c      	str	r4, [r3, #48]	@ 0x30
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 80065ac:	6319      	str	r1, [r3, #48]	@ 0x30

  /* Enable LTDC_Layer by setting LEN bit */
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
 80065ae:	5883      	ldr	r3, [r0, r2]
 80065b0:	f043 0301 	orr.w	r3, r3, #1
 80065b4:	5083      	str	r3, [r0, r2]
}
 80065b6:	bdf0      	pop	{r4, r5, r6, r7, pc}
    tmp = 4U;
 80065b8:	2504      	movs	r5, #4
 80065ba:	e7e4      	b.n	8006586 <LTDC_SetConfig+0xc4>
    tmp = 3U;
 80065bc:	2503      	movs	r5, #3
 80065be:	e7e2      	b.n	8006586 <LTDC_SetConfig+0xc4>
    tmp = 2U;
 80065c0:	2502      	movs	r5, #2
 80065c2:	e7e0      	b.n	8006586 <LTDC_SetConfig+0xc4>

080065c4 <HAL_LTDC_Init>:
{
 80065c4:	b538      	push	{r3, r4, r5, lr}
  if (hltdc == NULL)
 80065c6:	4604      	mov	r4, r0
 80065c8:	2800      	cmp	r0, #0
 80065ca:	d063      	beq.n	8006694 <HAL_LTDC_Init+0xd0>
  if (hltdc->State == HAL_LTDC_STATE_RESET)
 80065cc:	f890 30a1 	ldrb.w	r3, [r0, #161]	@ 0xa1
 80065d0:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 80065d4:	b91b      	cbnz	r3, 80065de <HAL_LTDC_Init+0x1a>
    hltdc->Lock = HAL_UNLOCKED;
 80065d6:	f880 20a0 	strb.w	r2, [r0, #160]	@ 0xa0
    HAL_LTDC_MspInit(hltdc);
 80065da:	f7fa fb0d 	bl	8000bf8 <HAL_LTDC_MspInit>
  hltdc->State = HAL_LTDC_STATE_BUSY;
 80065de:	2302      	movs	r3, #2
 80065e0:	f884 30a1 	strb.w	r3, [r4, #161]	@ 0xa1
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 80065e4:	6823      	ldr	r3, [r4, #0]
 80065e6:	699a      	ldr	r2, [r3, #24]
 80065e8:	f022 4270 	bic.w	r2, r2, #4026531840	@ 0xf0000000
 80065ec:	619a      	str	r2, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 80065ee:	e9d4 2001 	ldrd	r2, r0, [r4, #4]
 80065f2:	4302      	orrs	r2, r0
 80065f4:	68e0      	ldr	r0, [r4, #12]
 80065f6:	6999      	ldr	r1, [r3, #24]
 80065f8:	4302      	orrs	r2, r0
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
 80065fa:	6920      	ldr	r0, [r4, #16]
 80065fc:	4302      	orrs	r2, r0
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 80065fe:	430a      	orrs	r2, r1
 8006600:	619a      	str	r2, [r3, #24]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 8006602:	689a      	ldr	r2, [r3, #8]
 8006604:	4924      	ldr	r1, [pc, #144]	@ (8006698 <HAL_LTDC_Init+0xd4>)
  tmp = (hltdc->Init.HorizontalSync << 16U);
 8006606:	6960      	ldr	r0, [r4, #20]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 8006608:	400a      	ands	r2, r1
 800660a:	609a      	str	r2, [r3, #8]
  hltdc->Instance->SSCR |= (tmp | hltdc->Init.VerticalSync);
 800660c:	689a      	ldr	r2, [r3, #8]
 800660e:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8006612:	69a0      	ldr	r0, [r4, #24]
 8006614:	4302      	orrs	r2, r0
 8006616:	609a      	str	r2, [r3, #8]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 8006618:	68da      	ldr	r2, [r3, #12]
  tmp = (hltdc->Init.AccumulatedHBP << 16U);
 800661a:	69e0      	ldr	r0, [r4, #28]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 800661c:	400a      	ands	r2, r1
 800661e:	60da      	str	r2, [r3, #12]
  hltdc->Instance->BPCR |= (tmp | hltdc->Init.AccumulatedVBP);
 8006620:	68da      	ldr	r2, [r3, #12]
 8006622:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8006626:	6a20      	ldr	r0, [r4, #32]
 8006628:	4302      	orrs	r2, r0
 800662a:	60da      	str	r2, [r3, #12]
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 800662c:	691a      	ldr	r2, [r3, #16]
  tmp = (hltdc->Init.AccumulatedActiveW << 16U);
 800662e:	6a60      	ldr	r0, [r4, #36]	@ 0x24
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 8006630:	400a      	ands	r2, r1
 8006632:	611a      	str	r2, [r3, #16]
  hltdc->Instance->AWCR |= (tmp | hltdc->Init.AccumulatedActiveH);
 8006634:	691a      	ldr	r2, [r3, #16]
 8006636:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800663a:	6aa0      	ldr	r0, [r4, #40]	@ 0x28
 800663c:	4302      	orrs	r2, r0
 800663e:	611a      	str	r2, [r3, #16]
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
 8006640:	695a      	ldr	r2, [r3, #20]
 8006642:	400a      	ands	r2, r1
 8006644:	615a      	str	r2, [r3, #20]
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 8006646:	695a      	ldr	r2, [r3, #20]
  tmp = (hltdc->Init.TotalWidth << 16U);
 8006648:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 800664a:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 800664e:	6b21      	ldr	r1, [r4, #48]	@ 0x30
 8006650:	430a      	orrs	r2, r1
 8006652:	615a      	str	r2, [r3, #20]
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 8006654:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
 8006656:	f894 0035 	ldrb.w	r0, [r4, #53]	@ 0x35
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 800665a:	f002 427f 	and.w	r2, r2, #4278190080	@ 0xff000000
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
 800665e:	f894 1036 	ldrb.w	r1, [r4, #54]	@ 0x36
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 8006662:	62da      	str	r2, [r3, #44]	@ 0x2c
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
 8006664:	6add      	ldr	r5, [r3, #44]	@ 0x2c
 8006666:	f894 2034 	ldrb.w	r2, [r4, #52]	@ 0x34
 800666a:	432a      	orrs	r2, r5
 800666c:	ea42 2200 	orr.w	r2, r2, r0, lsl #8
 8006670:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8006674:	62da      	str	r2, [r3, #44]	@ 0x2c
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_TE | LTDC_IT_FU);
 8006676:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 8006678:	2000      	movs	r0, #0
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_TE | LTDC_IT_FU);
 800667a:	f042 0206 	orr.w	r2, r2, #6
 800667e:	635a      	str	r2, [r3, #52]	@ 0x34
  __HAL_LTDC_ENABLE(hltdc);
 8006680:	699a      	ldr	r2, [r3, #24]
 8006682:	f042 0201 	orr.w	r2, r2, #1
 8006686:	619a      	str	r2, [r3, #24]
  hltdc->State = HAL_LTDC_STATE_READY;
 8006688:	2301      	movs	r3, #1
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 800668a:	f8c4 00a4 	str.w	r0, [r4, #164]	@ 0xa4
  hltdc->State = HAL_LTDC_STATE_READY;
 800668e:	f884 30a1 	strb.w	r3, [r4, #161]	@ 0xa1
}
 8006692:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 8006694:	2001      	movs	r0, #1
 8006696:	e7fc      	b.n	8006692 <HAL_LTDC_Init+0xce>
 8006698:	f000f800 	.word	0xf000f800

0800669c <HAL_LTDC_ErrorCallback>:
__weak void HAL_LTDC_ErrorCallback(LTDC_HandleTypeDef *hltdc)
 800669c:	4770      	bx	lr

0800669e <HAL_LTDC_ReloadEventCallback>:
__weak void HAL_LTDC_ReloadEventCallback(LTDC_HandleTypeDef *hltdc)
 800669e:	4770      	bx	lr

080066a0 <HAL_LTDC_IRQHandler>:
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 80066a0:	6803      	ldr	r3, [r0, #0]
{
 80066a2:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 80066a4:	6b9e      	ldr	r6, [r3, #56]	@ 0x38
{
 80066a6:	4604      	mov	r4, r0
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 80066a8:	0772      	lsls	r2, r6, #29
  uint32_t itsources = READ_REG(hltdc->Instance->IER);
 80066aa:	6b5d      	ldr	r5, [r3, #52]	@ 0x34
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 80066ac:	d514      	bpl.n	80066d8 <HAL_LTDC_IRQHandler+0x38>
 80066ae:	0769      	lsls	r1, r5, #29
 80066b0:	d512      	bpl.n	80066d8 <HAL_LTDC_IRQHandler+0x38>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_TE);
 80066b2:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 80066b4:	f022 0204 	bic.w	r2, r2, #4
 80066b8:	635a      	str	r2, [r3, #52]	@ 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_TE);
 80066ba:	2204      	movs	r2, #4
 80066bc:	63da      	str	r2, [r3, #60]	@ 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_TE;
 80066be:	f8d0 30a4 	ldr.w	r3, [r0, #164]	@ 0xa4
 80066c2:	f043 0301 	orr.w	r3, r3, #1
 80066c6:	f8c0 30a4 	str.w	r3, [r0, #164]	@ 0xa4
    __HAL_UNLOCK(hltdc);
 80066ca:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
 80066cc:	f880 20a1 	strb.w	r2, [r0, #161]	@ 0xa1
    __HAL_UNLOCK(hltdc);
 80066d0:	f880 30a0 	strb.w	r3, [r0, #160]	@ 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 80066d4:	f7ff ffe2 	bl	800669c <HAL_LTDC_ErrorCallback>
  if (((isrflags & LTDC_ISR_FUIF) != 0U) && ((itsources & LTDC_IER_FUIE) != 0U))
 80066d8:	07b2      	lsls	r2, r6, #30
 80066da:	d516      	bpl.n	800670a <HAL_LTDC_IRQHandler+0x6a>
 80066dc:	07ab      	lsls	r3, r5, #30
 80066de:	d514      	bpl.n	800670a <HAL_LTDC_IRQHandler+0x6a>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
 80066e0:	6823      	ldr	r3, [r4, #0]
    HAL_LTDC_ErrorCallback(hltdc);
 80066e2:	4620      	mov	r0, r4
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
 80066e4:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 80066e6:	f022 0202 	bic.w	r2, r2, #2
 80066ea:	635a      	str	r2, [r3, #52]	@ 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_FU);
 80066ec:	2202      	movs	r2, #2
 80066ee:	63da      	str	r2, [r3, #60]	@ 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_FU;
 80066f0:	f8d4 30a4 	ldr.w	r3, [r4, #164]	@ 0xa4
 80066f4:	4313      	orrs	r3, r2
 80066f6:	f8c4 30a4 	str.w	r3, [r4, #164]	@ 0xa4
    hltdc->State = HAL_LTDC_STATE_ERROR;
 80066fa:	2304      	movs	r3, #4
 80066fc:	f884 30a1 	strb.w	r3, [r4, #161]	@ 0xa1
    __HAL_UNLOCK(hltdc);
 8006700:	2300      	movs	r3, #0
 8006702:	f884 30a0 	strb.w	r3, [r4, #160]	@ 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 8006706:	f7ff ffc9 	bl	800669c <HAL_LTDC_ErrorCallback>
  if (((isrflags & LTDC_ISR_LIF) != 0U) && ((itsources & LTDC_IER_LIE) != 0U))
 800670a:	07f0      	lsls	r0, r6, #31
 800670c:	d510      	bpl.n	8006730 <HAL_LTDC_IRQHandler+0x90>
 800670e:	07e9      	lsls	r1, r5, #31
 8006710:	d50e      	bpl.n	8006730 <HAL_LTDC_IRQHandler+0x90>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 8006712:	6823      	ldr	r3, [r4, #0]
    HAL_LTDC_LineEventCallback(hltdc);
 8006714:	4620      	mov	r0, r4
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 8006716:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8006718:	f022 0201 	bic.w	r2, r2, #1
 800671c:	635a      	str	r2, [r3, #52]	@ 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_LI);
 800671e:	2201      	movs	r2, #1
 8006720:	63da      	str	r2, [r3, #60]	@ 0x3c
    __HAL_UNLOCK(hltdc);
 8006722:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_READY;
 8006724:	f884 20a1 	strb.w	r2, [r4, #161]	@ 0xa1
    __HAL_UNLOCK(hltdc);
 8006728:	f884 30a0 	strb.w	r3, [r4, #160]	@ 0xa0
    HAL_LTDC_LineEventCallback(hltdc);
 800672c:	f7fc fa92 	bl	8002c54 <HAL_LTDC_LineEventCallback>
  if (((isrflags & LTDC_ISR_RRIF) != 0U) && ((itsources & LTDC_IER_RRIE) != 0U))
 8006730:	0732      	lsls	r2, r6, #28
 8006732:	d511      	bpl.n	8006758 <HAL_LTDC_IRQHandler+0xb8>
 8006734:	072b      	lsls	r3, r5, #28
 8006736:	d50f      	bpl.n	8006758 <HAL_LTDC_IRQHandler+0xb8>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
 8006738:	6823      	ldr	r3, [r4, #0]
    HAL_LTDC_ReloadEventCallback(hltdc);
 800673a:	4620      	mov	r0, r4
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
 800673c:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 800673e:	f022 0208 	bic.w	r2, r2, #8
 8006742:	635a      	str	r2, [r3, #52]	@ 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
 8006744:	2208      	movs	r2, #8
 8006746:	63da      	str	r2, [r3, #60]	@ 0x3c
    hltdc->State = HAL_LTDC_STATE_READY;
 8006748:	2301      	movs	r3, #1
 800674a:	f884 30a1 	strb.w	r3, [r4, #161]	@ 0xa1
    __HAL_UNLOCK(hltdc);
 800674e:	2300      	movs	r3, #0
 8006750:	f884 30a0 	strb.w	r3, [r4, #160]	@ 0xa0
    HAL_LTDC_ReloadEventCallback(hltdc);
 8006754:	f7ff ffa3 	bl	800669e <HAL_LTDC_ReloadEventCallback>
}
 8006758:	bd70      	pop	{r4, r5, r6, pc}

0800675a <HAL_LTDC_ConfigLayer>:
{
 800675a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  __HAL_LOCK(hltdc);
 800675e:	f890 30a0 	ldrb.w	r3, [r0, #160]	@ 0xa0
{
 8006762:	4606      	mov	r6, r0
  __HAL_LOCK(hltdc);
 8006764:	2b01      	cmp	r3, #1
{
 8006766:	460f      	mov	r7, r1
 8006768:	4694      	mov	ip, r2
 800676a:	f04f 0002 	mov.w	r0, #2
  __HAL_LOCK(hltdc);
 800676e:	d01f      	beq.n	80067b0 <HAL_LTDC_ConfigLayer+0x56>
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 8006770:	2434      	movs	r4, #52	@ 0x34
  __HAL_LOCK(hltdc);
 8006772:	f04f 0801 	mov.w	r8, #1
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 8006776:	460d      	mov	r5, r1
 8006778:	fb04 6402 	mla	r4, r4, r2, r6
  __HAL_LOCK(hltdc);
 800677c:	f886 80a0 	strb.w	r8, [r6, #160]	@ 0xa0
  hltdc->State = HAL_LTDC_STATE_BUSY;
 8006780:	f886 00a1 	strb.w	r0, [r6, #161]	@ 0xa1
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 8006784:	3438      	adds	r4, #56	@ 0x38
 8006786:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8006788:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800678a:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800678c:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800678e:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8006790:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8006792:	682b      	ldr	r3, [r5, #0]
  LTDC_SetConfig(hltdc, pLayerCfg, LayerIdx);
 8006794:	4630      	mov	r0, r6
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 8006796:	6023      	str	r3, [r4, #0]
  LTDC_SetConfig(hltdc, pLayerCfg, LayerIdx);
 8006798:	4662      	mov	r2, ip
 800679a:	4639      	mov	r1, r7
 800679c:	f7ff fe91 	bl	80064c2 <LTDC_SetConfig>
  __HAL_UNLOCK(hltdc);
 80067a0:	2000      	movs	r0, #0
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 80067a2:	6833      	ldr	r3, [r6, #0]
 80067a4:	f8c3 8024 	str.w	r8, [r3, #36]	@ 0x24
  hltdc->State  = HAL_LTDC_STATE_READY;
 80067a8:	f886 80a1 	strb.w	r8, [r6, #161]	@ 0xa1
  __HAL_UNLOCK(hltdc);
 80067ac:	f886 00a0 	strb.w	r0, [r6, #160]	@ 0xa0
}
 80067b0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080067b4 <HAL_LTDC_ProgramLineEvent>:
  __HAL_LOCK(hltdc);
 80067b4:	f890 20a0 	ldrb.w	r2, [r0, #160]	@ 0xa0
{
 80067b8:	4603      	mov	r3, r0
  __HAL_LOCK(hltdc);
 80067ba:	2a01      	cmp	r2, #1
 80067bc:	f04f 0002 	mov.w	r0, #2
 80067c0:	d012      	beq.n	80067e8 <HAL_LTDC_ProgramLineEvent+0x34>
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 80067c2:	681a      	ldr	r2, [r3, #0]
  hltdc->State = HAL_LTDC_STATE_BUSY;
 80067c4:	f883 00a1 	strb.w	r0, [r3, #161]	@ 0xa1
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 80067c8:	6b50      	ldr	r0, [r2, #52]	@ 0x34
 80067ca:	f020 0001 	bic.w	r0, r0, #1
 80067ce:	6350      	str	r0, [r2, #52]	@ 0x34
  LTDC->LIPCR = (uint32_t)Line;
 80067d0:	4806      	ldr	r0, [pc, #24]	@ (80067ec <HAL_LTDC_ProgramLineEvent+0x38>)
 80067d2:	6401      	str	r1, [r0, #64]	@ 0x40
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
 80067d4:	6b51      	ldr	r1, [r2, #52]	@ 0x34
  __HAL_UNLOCK(hltdc);
 80067d6:	2000      	movs	r0, #0
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
 80067d8:	f041 0101 	orr.w	r1, r1, #1
 80067dc:	6351      	str	r1, [r2, #52]	@ 0x34
  hltdc->State = HAL_LTDC_STATE_READY;
 80067de:	2201      	movs	r2, #1
  __HAL_UNLOCK(hltdc);
 80067e0:	f883 00a0 	strb.w	r0, [r3, #160]	@ 0xa0
  hltdc->State = HAL_LTDC_STATE_READY;
 80067e4:	f883 20a1 	strb.w	r2, [r3, #161]	@ 0xa1
}
 80067e8:	4770      	bx	lr
 80067ea:	bf00      	nop
 80067ec:	40016800 	.word	0x40016800

080067f0 <HAL_PWREx_ControlVoltageScaling>:

  /* Check the parameter */
  assert_param(IS_PWR_VOLTAGE_SCALING_RANGE(VoltageScaling));

  /* Get the current voltage scale applied */
  vos_old = READ_BIT(PWR->SVMSR, PWR_SVMSR_ACTVOS);
 80067f0:	4b1d      	ldr	r3, [pc, #116]	@ (8006868 <HAL_PWREx_ControlVoltageScaling+0x78>)
 80067f2:	6bda      	ldr	r2, [r3, #60]	@ 0x3c
 80067f4:	f402 3240 	and.w	r2, r2, #196608	@ 0x30000

  /* No change, nothing to do */
  if (vos_old == VoltageScaling)
 80067f8:	4282      	cmp	r2, r0
 80067fa:	d108      	bne.n	800680e <HAL_PWREx_ControlVoltageScaling+0x1e>
  {
    /* Enable USB BOOST after wake up from Stop mode */
    if (VoltageScaling > PWR_REGULATOR_VOLTAGE_SCALE3)
 80067fc:	f5b2 3f80 	cmp.w	r2, #65536	@ 0x10000
 8006800:	d903      	bls.n	800680a <HAL_PWREx_ControlVoltageScaling+0x1a>
    {
      /* Enable USB BOOST */
      SET_BIT(PWR->VOSR, PWR_VOSR_BOOSTEN);
 8006802:	68da      	ldr	r2, [r3, #12]
 8006804:	f442 2280 	orr.w	r2, r2, #262144	@ 0x40000
 8006808:	60da      	str	r2, [r3, #12]
    }

    return HAL_OK;
 800680a:	2000      	movs	r0, #0
 800680c:	4770      	bx	lr
   *  The Embedded power distribution (EPOD) must be enabled before switching to
   *  voltage scale 1 / 2 from voltage scale lower.
   */
  if (VoltageScaling > PWR_REGULATOR_VOLTAGE_SCALE3)
  {
    MODIFY_REG(PWR->VOSR, (PWR_VOSR_VOS | PWR_VOSR_BOOSTEN), (VoltageScaling | PWR_VOSR_BOOSTEN));
 800680e:	68da      	ldr	r2, [r3, #12]
  if (VoltageScaling > PWR_REGULATOR_VOLTAGE_SCALE3)
 8006810:	f5b0 3f80 	cmp.w	r0, #65536	@ 0x10000
    MODIFY_REG(PWR->VOSR, (PWR_VOSR_VOS | PWR_VOSR_BOOSTEN), (VoltageScaling | PWR_VOSR_BOOSTEN));
 8006814:	f422 22e0 	bic.w	r2, r2, #458752	@ 0x70000
 8006818:	ea42 0200 	orr.w	r2, r2, r0
 800681c:	bf88      	it	hi
 800681e:	f442 2280 	orrhi.w	r2, r2, #262144	@ 0x40000
  }
  else
  {
    MODIFY_REG(PWR->VOSR, (PWR_VOSR_VOS | PWR_VOSR_BOOSTEN), VoltageScaling);
 8006822:	60da      	str	r2, [r3, #12]
  }

  /* Wait until VOSRDY is raised */
  timeout = ((PWR_FLAG_SETTING_DELAY * (SystemCoreClock / 1000U)) / 1000U) + 1U;
 8006824:	f44f 727a 	mov.w	r2, #1000	@ 0x3e8
 8006828:	4b10      	ldr	r3, [pc, #64]	@ (800686c <HAL_PWREx_ControlVoltageScaling+0x7c>)
 800682a:	2132      	movs	r1, #50	@ 0x32
 800682c:	681b      	ldr	r3, [r3, #0]
 800682e:	fbb3 f3f2 	udiv	r3, r3, r2
 8006832:	434b      	muls	r3, r1
 8006834:	fbb3 f3f2 	udiv	r3, r3, r2
 8006838:	3301      	adds	r3, #1
 800683a:	461a      	mov	r2, r3
  while (HAL_IS_BIT_CLR(PWR->VOSR, PWR_VOSR_VOSRDY) && (timeout != 0U))
 800683c:	490a      	ldr	r1, [pc, #40]	@ (8006868 <HAL_PWREx_ControlVoltageScaling+0x78>)
 800683e:	68c8      	ldr	r0, [r1, #12]
 8006840:	0400      	lsls	r0, r0, #16
 8006842:	d404      	bmi.n	800684e <HAL_PWREx_ControlVoltageScaling+0x5e>
 8006844:	b90a      	cbnz	r2, 800684a <HAL_PWREx_ControlVoltageScaling+0x5a>
  }

  /* Check time out */
  if (timeout == 0U)
  {
    return HAL_TIMEOUT;
 8006846:	2003      	movs	r0, #3
  }

  return HAL_OK;
}
 8006848:	4770      	bx	lr
    timeout--;
 800684a:	3a01      	subs	r2, #1
 800684c:	e7f7      	b.n	800683e <HAL_PWREx_ControlVoltageScaling+0x4e>
  if (timeout != 0U)
 800684e:	2a00      	cmp	r2, #0
 8006850:	d0f9      	beq.n	8006846 <HAL_PWREx_ControlVoltageScaling+0x56>
    while ((HAL_IS_BIT_CLR(PWR->SVMSR, PWR_SVMSR_ACTVOSRDY)) && (timeout != 0U))
 8006852:	4a05      	ldr	r2, [pc, #20]	@ (8006868 <HAL_PWREx_ControlVoltageScaling+0x78>)
 8006854:	6bd1      	ldr	r1, [r2, #60]	@ 0x3c
 8006856:	0409      	lsls	r1, r1, #16
 8006858:	d403      	bmi.n	8006862 <HAL_PWREx_ControlVoltageScaling+0x72>
 800685a:	2b00      	cmp	r3, #0
 800685c:	d0f3      	beq.n	8006846 <HAL_PWREx_ControlVoltageScaling+0x56>
      timeout--;
 800685e:	3b01      	subs	r3, #1
 8006860:	e7f8      	b.n	8006854 <HAL_PWREx_ControlVoltageScaling+0x64>
  if (timeout == 0U)
 8006862:	2b00      	cmp	r3, #0
 8006864:	d1d1      	bne.n	800680a <HAL_PWREx_ControlVoltageScaling+0x1a>
 8006866:	e7ee      	b.n	8006846 <HAL_PWREx_ControlVoltageScaling+0x56>
 8006868:	46020800 	.word	0x46020800
 800686c:	2000004c 	.word	0x2000004c

08006870 <HAL_PWREx_GetVoltageRange>:
  * @brief  Return Voltage Scaling Range.
  * @retval Applied voltage scaling value.
  */
uint32_t HAL_PWREx_GetVoltageRange(void)
{
  return (PWR->SVMSR & PWR_SVMSR_ACTVOS);
 8006870:	4b02      	ldr	r3, [pc, #8]	@ (800687c <HAL_PWREx_GetVoltageRange+0xc>)
 8006872:	6bd8      	ldr	r0, [r3, #60]	@ 0x3c
}
 8006874:	f400 3040 	and.w	r0, r0, #196608	@ 0x30000
 8006878:	4770      	bx	lr
 800687a:	bf00      	nop
 800687c:	46020800 	.word	0x46020800

08006880 <HAL_PWREx_ConfigSupply>:

  /* Check the parameter */
  assert_param(IS_PWR_SUPPLY(SupplySource));

  /* Set maximum time out */
  timeout = ((PWR_FLAG_SETTING_DELAY * (SystemCoreClock / 1000U)) / 1000U) + 1U;
 8006880:	f44f 727a 	mov.w	r2, #1000	@ 0x3e8
 8006884:	4b12      	ldr	r3, [pc, #72]	@ (80068d0 <HAL_PWREx_ConfigSupply+0x50>)
 8006886:	2132      	movs	r1, #50	@ 0x32
 8006888:	681b      	ldr	r3, [r3, #0]
 800688a:	fbb3 f3f2 	udiv	r3, r3, r2
 800688e:	434b      	muls	r3, r1
 8006890:	fbb3 f3f2 	udiv	r3, r3, r2
 8006894:	4a0f      	ldr	r2, [pc, #60]	@ (80068d4 <HAL_PWREx_ConfigSupply+0x54>)
 8006896:	3301      	adds	r3, #1

  /* Configure the LDO as system regulator supply */
  if (SupplySource == PWR_LDO_SUPPLY)
  {
    /* Set the power supply configuration */
    CLEAR_BIT(PWR->CR3, PWR_CR3_REGSEL);
 8006898:	6891      	ldr	r1, [r2, #8]
  if (SupplySource == PWR_LDO_SUPPLY)
 800689a:	b950      	cbnz	r0, 80068b2 <HAL_PWREx_ConfigSupply+0x32>
    CLEAR_BIT(PWR->CR3, PWR_CR3_REGSEL);
 800689c:	f021 0102 	bic.w	r1, r1, #2
 80068a0:	6091      	str	r1, [r2, #8]

    /* Wait until system switch on new regulator */
    while (HAL_IS_BIT_SET(PWR->SVMSR, PWR_SVMSR_REGS) && (timeout != 0U))
 80068a2:	6bd1      	ldr	r1, [r2, #60]	@ 0x3c
 80068a4:	0788      	lsls	r0, r1, #30
 80068a6:	d50e      	bpl.n	80068c6 <HAL_PWREx_ConfigSupply+0x46>
 80068a8:	b90b      	cbnz	r3, 80068ae <HAL_PWREx_ConfigSupply+0x2e>
  }

  /* Check time out */
  if (timeout == 0U)
  {
    return HAL_TIMEOUT;
 80068aa:	2003      	movs	r0, #3
 80068ac:	4770      	bx	lr
      timeout--;
 80068ae:	3b01      	subs	r3, #1
 80068b0:	e7f7      	b.n	80068a2 <HAL_PWREx_ConfigSupply+0x22>
    SET_BIT(PWR->CR3, PWR_CR3_REGSEL);
 80068b2:	f041 0102 	orr.w	r1, r1, #2
 80068b6:	6091      	str	r1, [r2, #8]
    while (HAL_IS_BIT_CLR(PWR->SVMSR, PWR_SVMSR_REGS) && (timeout != 0U))
 80068b8:	6bd1      	ldr	r1, [r2, #60]	@ 0x3c
 80068ba:	0789      	lsls	r1, r1, #30
 80068bc:	d403      	bmi.n	80068c6 <HAL_PWREx_ConfigSupply+0x46>
 80068be:	2b00      	cmp	r3, #0
 80068c0:	d0f3      	beq.n	80068aa <HAL_PWREx_ConfigSupply+0x2a>
      timeout--;
 80068c2:	3b01      	subs	r3, #1
 80068c4:	e7f8      	b.n	80068b8 <HAL_PWREx_ConfigSupply+0x38>
  if (timeout == 0U)
 80068c6:	2b00      	cmp	r3, #0
 80068c8:	d0ef      	beq.n	80068aa <HAL_PWREx_ConfigSupply+0x2a>
  }

  return HAL_OK;
 80068ca:	2000      	movs	r0, #0
}
 80068cc:	4770      	bx	lr
 80068ce:	bf00      	nop
 80068d0:	2000004c 	.word	0x2000004c
 80068d4:	46020800 	.word	0x46020800

080068d8 <HAL_PWREx_DisableUCPDDeadBattery>:
  *         initialized before doing the disable).
  * @retval None.
  */
void HAL_PWREx_DisableUCPDDeadBattery(void)
{
  SET_BIT(PWR->UCPDR, PWR_UCPDR_UCPD_DBDIS);
 80068d8:	4a02      	ldr	r2, [pc, #8]	@ (80068e4 <HAL_PWREx_DisableUCPDDeadBattery+0xc>)
 80068da:	6ad3      	ldr	r3, [r2, #44]	@ 0x2c
 80068dc:	f043 0301 	orr.w	r3, r3, #1
 80068e0:	62d3      	str	r3, [r2, #44]	@ 0x2c
}
 80068e2:	4770      	bx	lr
 80068e4:	46020800 	.word	0x46020800

080068e8 <RCC_SetFlashLatencyFromMSIRange>:
            voltage range.
  * @param  msirange  MSI range value from RCC_MSIRANGE_0 to RCC_MSIRANGE_15
  * @retval HAL status
  */
static HAL_StatusTypeDef RCC_SetFlashLatencyFromMSIRange(uint32_t msirange)
{
 80068e8:	b537      	push	{r0, r1, r2, r4, r5, lr}
  uint32_t vos;
  uint32_t latency;  /* default value 0WS */

  if (__HAL_RCC_PWR_IS_CLK_ENABLED())
 80068ea:	4d2b      	ldr	r5, [pc, #172]	@ (8006998 <RCC_SetFlashLatencyFromMSIRange+0xb0>)
{
 80068ec:	4604      	mov	r4, r0
  if (__HAL_RCC_PWR_IS_CLK_ENABLED())
 80068ee:	f8d5 3094 	ldr.w	r3, [r5, #148]	@ 0x94
 80068f2:	075b      	lsls	r3, r3, #29
 80068f4:	d518      	bpl.n	8006928 <RCC_SetFlashLatencyFromMSIRange+0x40>
  {
    vos = HAL_PWREx_GetVoltageRange();
 80068f6:	f7ff ffbb 	bl	8006870 <HAL_PWREx_GetVoltageRange>
    __HAL_RCC_PWR_CLK_ENABLE();
    vos = HAL_PWREx_GetVoltageRange();
    __HAL_RCC_PWR_CLK_DISABLE();
  }

  if ((vos == PWR_REGULATOR_VOLTAGE_SCALE1) || (vos == PWR_REGULATOR_VOLTAGE_SCALE2))
 80068fa:	f420 3380 	bic.w	r3, r0, #65536	@ 0x10000
 80068fe:	f5b3 3f00 	cmp.w	r3, #131072	@ 0x20000
 8006902:	d126      	bne.n	8006952 <RCC_SetFlashLatencyFromMSIRange+0x6a>
  {

    if (msirange < RCC_MSIRANGE_1)
 8006904:	f1b4 5f80 	cmp.w	r4, #268435456	@ 0x10000000
 8006908:	bf2c      	ite	cs
 800690a:	2000      	movcs	r0, #0
 800690c:	2001      	movcc	r0, #1
        }
      }
    }
  }

  __HAL_FLASH_SET_LATENCY(latency);
 800690e:	4a23      	ldr	r2, [pc, #140]	@ (800699c <RCC_SetFlashLatencyFromMSIRange+0xb4>)
 8006910:	6813      	ldr	r3, [r2, #0]
 8006912:	f023 030f 	bic.w	r3, r3, #15
 8006916:	4303      	orrs	r3, r0
 8006918:	6013      	str	r3, [r2, #0]

  /* Check that the new number of wait states is taken into account to access the Flash
  memory by reading the FLASH_ACR register */
  if ((FLASH->ACR & FLASH_ACR_LATENCY) != latency)
 800691a:	6813      	ldr	r3, [r2, #0]
 800691c:	f003 030f 	and.w	r3, r3, #15
 8006920:	1a18      	subs	r0, r3, r0
 8006922:	bf18      	it	ne
 8006924:	2001      	movne	r0, #1
 8006926:	e01b      	b.n	8006960 <RCC_SetFlashLatencyFromMSIRange+0x78>
    __HAL_RCC_PWR_CLK_ENABLE();
 8006928:	f8d5 3094 	ldr.w	r3, [r5, #148]	@ 0x94
 800692c:	f043 0304 	orr.w	r3, r3, #4
 8006930:	f8c5 3094 	str.w	r3, [r5, #148]	@ 0x94
 8006934:	f8d5 3094 	ldr.w	r3, [r5, #148]	@ 0x94
 8006938:	f003 0304 	and.w	r3, r3, #4
 800693c:	9301      	str	r3, [sp, #4]
 800693e:	9b01      	ldr	r3, [sp, #4]
    vos = HAL_PWREx_GetVoltageRange();
 8006940:	f7ff ff96 	bl	8006870 <HAL_PWREx_GetVoltageRange>
    __HAL_RCC_PWR_CLK_DISABLE();
 8006944:	f8d5 3094 	ldr.w	r3, [r5, #148]	@ 0x94
 8006948:	f023 0304 	bic.w	r3, r3, #4
 800694c:	f8c5 3094 	str.w	r3, [r5, #148]	@ 0x94
 8006950:	e7d3      	b.n	80068fa <RCC_SetFlashLatencyFromMSIRange+0x12>
    if (msirange < RCC_MSIRANGE_1)
 8006952:	f1b4 5f80 	cmp.w	r4, #268435456	@ 0x10000000
 8006956:	d205      	bcs.n	8006964 <RCC_SetFlashLatencyFromMSIRange+0x7c>
      if (vos == PWR_REGULATOR_VOLTAGE_SCALE3)
 8006958:	f5b0 3f80 	cmp.w	r0, #65536	@ 0x10000
 800695c:	d015      	beq.n	800698a <RCC_SetFlashLatencyFromMSIRange+0xa2>
        return HAL_ERROR;
 800695e:	2001      	movs	r0, #1
  {
    return HAL_ERROR;
  }

  return HAL_OK;
}
 8006960:	b003      	add	sp, #12
 8006962:	bd30      	pop	{r4, r5, pc}
      if (msirange > RCC_MSIRANGE_2)
 8006964:	f1b4 5f00 	cmp.w	r4, #536870912	@ 0x20000000
 8006968:	d906      	bls.n	8006978 <RCC_SetFlashLatencyFromMSIRange+0x90>
        if (vos == PWR_REGULATOR_VOLTAGE_SCALE4)
 800696a:	b980      	cbnz	r0, 800698e <RCC_SetFlashLatencyFromMSIRange+0xa6>
          if (msirange > RCC_MSIRANGE_3)
 800696c:	f1b4 5f40 	cmp.w	r4, #805306368	@ 0x30000000
 8006970:	bf8c      	ite	hi
 8006972:	2000      	movhi	r0, #0
 8006974:	2001      	movls	r0, #1
 8006976:	e7ca      	b.n	800690e <RCC_SetFlashLatencyFromMSIRange+0x26>
        if (msirange == RCC_MSIRANGE_1)
 8006978:	f1b4 5f80 	cmp.w	r4, #268435456	@ 0x10000000
 800697c:	d109      	bne.n	8006992 <RCC_SetFlashLatencyFromMSIRange+0xaa>
          latency = FLASH_LATENCY_1; /* 1WS */
 800697e:	f5b0 3f80 	cmp.w	r0, #65536	@ 0x10000
 8006982:	bf14      	ite	ne
 8006984:	2002      	movne	r0, #2
 8006986:	2001      	moveq	r0, #1
 8006988:	e7c1      	b.n	800690e <RCC_SetFlashLatencyFromMSIRange+0x26>
        latency = FLASH_LATENCY_3; /* 3WS */
 800698a:	2003      	movs	r0, #3
 800698c:	e7bf      	b.n	800690e <RCC_SetFlashLatencyFromMSIRange+0x26>
      latency = FLASH_LATENCY_0; /* 0WS */
 800698e:	2000      	movs	r0, #0
 8006990:	e7bd      	b.n	800690e <RCC_SetFlashLatencyFromMSIRange+0x26>
          latency = FLASH_LATENCY_1; /* 1WS */
 8006992:	2001      	movs	r0, #1
 8006994:	e7bb      	b.n	800690e <RCC_SetFlashLatencyFromMSIRange+0x26>
 8006996:	bf00      	nop
 8006998:	46020c00 	.word	0x46020c00
 800699c:	40022000 	.word	0x40022000

080069a0 <HAL_RCC_GetSysClockFreq>:
  sysclk_source = __HAL_RCC_GET_SYSCLK_SOURCE();
 80069a0:	4a40      	ldr	r2, [pc, #256]	@ (8006aa4 <HAL_RCC_GetSysClockFreq+0x104>)
{
 80069a2:	b510      	push	{r4, lr}
  sysclk_source = __HAL_RCC_GET_SYSCLK_SOURCE();
 80069a4:	69d3      	ldr	r3, [r2, #28]
  pll_oscsource = __HAL_RCC_GET_PLL_OSCSOURCE();
 80069a6:	6a91      	ldr	r1, [r2, #40]	@ 0x28
  if ((sysclk_source == RCC_SYSCLKSOURCE_STATUS_MSI) ||
 80069a8:	f013 030c 	ands.w	r3, r3, #12
 80069ac:	d005      	beq.n	80069ba <HAL_RCC_GetSysClockFreq+0x1a>
 80069ae:	2b0c      	cmp	r3, #12
 80069b0:	d148      	bne.n	8006a44 <HAL_RCC_GetSysClockFreq+0xa4>
  pll_oscsource = __HAL_RCC_GET_PLL_OSCSOURCE();
 80069b2:	f001 0103 	and.w	r1, r1, #3
      ((sysclk_source == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (pll_oscsource == RCC_PLLSOURCE_MSI)))
 80069b6:	2901      	cmp	r1, #1
 80069b8:	d144      	bne.n	8006a44 <HAL_RCC_GetSysClockFreq+0xa4>
    if (READ_BIT(RCC->ICSCR1, RCC_ICSCR1_MSIRGSEL) == 0U)
 80069ba:	6891      	ldr	r1, [r2, #8]
 80069bc:	0209      	lsls	r1, r1, #8
      msirange = (RCC->CSR & RCC_CSR_MSISSRANGE) >> RCC_CSR_MSISSRANGE_Pos;
 80069be:	bf54      	ite	pl
 80069c0:	f8d2 20f4 	ldrpl.w	r2, [r2, #244]	@ 0xf4
      msirange = (RCC->ICSCR1 & RCC_ICSCR1_MSISRANGE) >> RCC_ICSCR1_MSISRANGE_Pos;
 80069c4:	6892      	ldrmi	r2, [r2, #8]
    msirange = MSIRangeTable[msirange];
 80069c6:	4938      	ldr	r1, [pc, #224]	@ (8006aa8 <HAL_RCC_GetSysClockFreq+0x108>)
      msirange = (RCC->CSR & RCC_CSR_MSISSRANGE) >> RCC_CSR_MSISSRANGE_Pos;
 80069c8:	bf54      	ite	pl
 80069ca:	f3c2 3203 	ubfxpl	r2, r2, #12, #4
      msirange = (RCC->ICSCR1 & RCC_ICSCR1_MSISRANGE) >> RCC_ICSCR1_MSISRANGE_Pos;
 80069ce:	0f12      	lsrmi	r2, r2, #28
    msirange = MSIRangeTable[msirange];
 80069d0:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
    if (sysclk_source == RCC_SYSCLKSOURCE_STATUS_MSI)
 80069d4:	2b00      	cmp	r3, #0
 80069d6:	d063      	beq.n	8006aa0 <HAL_RCC_GetSysClockFreq+0x100>
  uint32_t sysclockfreq = 0U;
 80069d8:	2000      	movs	r0, #0
  if (sysclk_source == RCC_SYSCLKSOURCE_STATUS_PLLCLK)
 80069da:	2b0c      	cmp	r3, #12
 80069dc:	d15e      	bne.n	8006a9c <HAL_RCC_GetSysClockFreq+0xfc>
    pllsource = (RCC->PLL1CFGR & RCC_PLL1CFGR_PLL1SRC);
 80069de:	4931      	ldr	r1, [pc, #196]	@ (8006aa4 <HAL_RCC_GetSysClockFreq+0x104>)
 80069e0:	eddf 5a32 	vldr	s11, [pc, #200]	@ 8006aac <HAL_RCC_GetSysClockFreq+0x10c>
 80069e4:	6a88      	ldr	r0, [r1, #40]	@ 0x28
    pllm = ((RCC->PLL1CFGR & RCC_PLL1CFGR_PLL1M) >> RCC_PLL1CFGR_PLL1M_Pos) + 1U;
 80069e6:	6a8b      	ldr	r3, [r1, #40]	@ 0x28
    pllfracen = ((RCC->PLL1CFGR & RCC_PLL1CFGR_PLL1FRACEN) >> RCC_PLL1CFGR_PLL1FRACEN_Pos);
 80069e8:	6a8c      	ldr	r4, [r1, #40]	@ 0x28
    pllm = ((RCC->PLL1CFGR & RCC_PLL1CFGR_PLL1M) >> RCC_PLL1CFGR_PLL1M_Pos) + 1U;
 80069ea:	f3c3 2303 	ubfx	r3, r3, #8, #4
 80069ee:	3301      	adds	r3, #1
 80069f0:	ee07 3a90 	vmov	s15, r3
    fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_PLL1FRACN) >> \
 80069f4:	6b8b      	ldr	r3, [r1, #56]	@ 0x38
    pllfracen = ((RCC->PLL1CFGR & RCC_PLL1CFGR_PLL1FRACEN) >> RCC_PLL1CFGR_PLL1FRACEN_Pos);
 80069f6:	f3c4 1400 	ubfx	r4, r4, #4, #1
    fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_PLL1FRACN) >> \
 80069fa:	f3c3 03cc 	ubfx	r3, r3, #3, #13
 80069fe:	4363      	muls	r3, r4
 8006a00:	ee07 3a10 	vmov	s14, r3
    pllsource = (RCC->PLL1CFGR & RCC_PLL1CFGR_PLL1SRC);
 8006a04:	f000 0003 	and.w	r0, r0, #3
    switch (pllsource)
 8006a08:	2802      	cmp	r0, #2
    fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_PLL1FRACN) >> \
 8006a0a:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
    switch (pllsource)
 8006a0e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8006a12:	eeb7 6a00 	vmov.f32	s12, #112	@ 0x3f800000  1.0
 8006a16:	d021      	beq.n	8006a5c <HAL_RCC_GetSysClockFreq+0xbc>
 8006a18:	2803      	cmp	r0, #3
 8006a1a:	d01f      	beq.n	8006a5c <HAL_RCC_GetSysClockFreq+0xbc>
        pllvco = ((float_t) msirange / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_PLL1N) + \
 8006a1c:	ee06 2a90 	vmov	s13, r2
 8006a20:	eef8 6a66 	vcvt.f32.u32	s13, s13
 8006a24:	6b4b      	ldr	r3, [r1, #52]	@ 0x34
 8006a26:	ee86 5aa7 	vdiv.f32	s10, s13, s15
 8006a2a:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8006a2e:	ee07 3a90 	vmov	s15, r3
 8006a32:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8006a36:	eee7 7a25 	vfma.f32	s15, s14, s11
                                                         (fracn1 / (float_t)0x2000) + (float_t)1U);
 8006a3a:	ee77 7a86 	vadd.f32	s15, s15, s12
        pllvco = ((float_t) msirange / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_PLL1N) + \
 8006a3e:	ee67 7a85 	vmul.f32	s15, s15, s10
        break;
 8006a42:	e01c      	b.n	8006a7e <HAL_RCC_GetSysClockFreq+0xde>
  else if (__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSI)
 8006a44:	69d2      	ldr	r2, [r2, #28]
 8006a46:	f002 020c 	and.w	r2, r2, #12
 8006a4a:	2a04      	cmp	r2, #4
 8006a4c:	d004      	beq.n	8006a58 <HAL_RCC_GetSysClockFreq+0xb8>
  else if (sysclk_source == RCC_SYSCLKSOURCE_STATUS_HSE)
 8006a4e:	2b08      	cmp	r3, #8
 8006a50:	d025      	beq.n	8006a9e <HAL_RCC_GetSysClockFreq+0xfe>
  uint32_t sysclockfreq = 0U;
 8006a52:	2000      	movs	r0, #0
  uint32_t msirange = 0U;
 8006a54:	2200      	movs	r2, #0
 8006a56:	e7c0      	b.n	80069da <HAL_RCC_GetSysClockFreq+0x3a>
    sysclockfreq = HSI_VALUE;
 8006a58:	4815      	ldr	r0, [pc, #84]	@ (8006ab0 <HAL_RCC_GetSysClockFreq+0x110>)
 8006a5a:	e7fb      	b.n	8006a54 <HAL_RCC_GetSysClockFreq+0xb4>
        pllvco = ((float_t)HSE_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_PLL1N) + \
 8006a5c:	ed9f 5a15 	vldr	s10, [pc, #84]	@ 8006ab4 <HAL_RCC_GetSysClockFreq+0x114>
 8006a60:	6b4b      	ldr	r3, [r1, #52]	@ 0x34
 8006a62:	eec5 6a27 	vdiv.f32	s13, s10, s15
 8006a66:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8006a6a:	ee07 3a90 	vmov	s15, r3
 8006a6e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8006a72:	eee7 7a25 	vfma.f32	s15, s14, s11
                                                         (fracn1 / (float_t)0x2000) + (float_t)1U);
 8006a76:	ee77 7a86 	vadd.f32	s15, s15, s12
        pllvco = ((float_t)HSE_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_PLL1N) + \
 8006a7a:	ee67 7aa6 	vmul.f32	s15, s15, s13
    pllr = (((RCC->PLL1DIVR & RCC_PLL1DIVR_PLL1R) >> RCC_PLL1DIVR_PLL1R_Pos) + 1U);
 8006a7e:	4b09      	ldr	r3, [pc, #36]	@ (8006aa4 <HAL_RCC_GetSysClockFreq+0x104>)
 8006a80:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8006a82:	f3c3 6306 	ubfx	r3, r3, #24, #7
 8006a86:	3301      	adds	r3, #1
    sysclockfreq = (uint32_t)(float_t)((float_t)pllvco / (float_t)pllr);
 8006a88:	ee07 3a10 	vmov	s14, r3
 8006a8c:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8006a90:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 8006a94:	eefc 7ac7 	vcvt.u32.f32	s15, s14
 8006a98:	ee17 0a90 	vmov	r0, s15
}
 8006a9c:	bd10      	pop	{r4, pc}
    sysclockfreq = HSE_VALUE;
 8006a9e:	4a04      	ldr	r2, [pc, #16]	@ (8006ab0 <HAL_RCC_GetSysClockFreq+0x110>)
  uint32_t msirange = 0U;
 8006aa0:	4610      	mov	r0, r2
 8006aa2:	e7fb      	b.n	8006a9c <HAL_RCC_GetSysClockFreq+0xfc>
 8006aa4:	46020c00 	.word	0x46020c00
 8006aa8:	0803585c 	.word	0x0803585c
 8006aac:	39000000 	.word	0x39000000
 8006ab0:	00f42400 	.word	0x00f42400
 8006ab4:	4b742400 	.word	0x4b742400

08006ab8 <HAL_RCC_ClockConfig>:
{
 8006ab8:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8006abc:	460d      	mov	r5, r1
  if (pRCC_ClkInitStruct == NULL)
 8006abe:	4604      	mov	r4, r0
 8006ac0:	b918      	cbnz	r0, 8006aca <HAL_RCC_ClockConfig+0x12>
    return HAL_ERROR;
 8006ac2:	2001      	movs	r0, #1
}
 8006ac4:	b002      	add	sp, #8
 8006ac6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if (FLatency > __HAL_FLASH_GET_LATENCY())
 8006aca:	4a9c      	ldr	r2, [pc, #624]	@ (8006d3c <HAL_RCC_ClockConfig+0x284>)
 8006acc:	6813      	ldr	r3, [r2, #0]
 8006ace:	f003 030f 	and.w	r3, r3, #15
 8006ad2:	428b      	cmp	r3, r1
 8006ad4:	d36e      	bcc.n	8006bb4 <HAL_RCC_ClockConfig+0xfc>
  if (((pRCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK3) == RCC_CLOCKTYPE_PCLK3)
 8006ad6:	6823      	ldr	r3, [r4, #0]
 8006ad8:	06d8      	lsls	r0, r3, #27
 8006ada:	d477      	bmi.n	8006bcc <HAL_RCC_ClockConfig+0x114>
  if (((pRCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 8006adc:	0719      	lsls	r1, r3, #28
 8006ade:	d50d      	bpl.n	8006afc <HAL_RCC_ClockConfig+0x44>
    if ((pRCC_ClkInitStruct->APB2CLKDivider) > ((RCC->CFGR2 & RCC_CFGR2_PPRE2) >> 4))
 8006ae0:	4997      	ldr	r1, [pc, #604]	@ (8006d40 <HAL_RCC_ClockConfig+0x288>)
 8006ae2:	6920      	ldr	r0, [r4, #16]
 8006ae4:	6a0a      	ldr	r2, [r1, #32]
 8006ae6:	0912      	lsrs	r2, r2, #4
 8006ae8:	f002 0270 	and.w	r2, r2, #112	@ 0x70
 8006aec:	4290      	cmp	r0, r2
      MODIFY_REG(RCC->CFGR2, RCC_CFGR2_PPRE2, ((pRCC_ClkInitStruct->APB2CLKDivider) << 4));
 8006aee:	bf81      	itttt	hi
 8006af0:	6a0a      	ldrhi	r2, [r1, #32]
 8006af2:	f422 62e0 	bichi.w	r2, r2, #1792	@ 0x700
 8006af6:	ea42 1200 	orrhi.w	r2, r2, r0, lsl #4
 8006afa:	620a      	strhi	r2, [r1, #32]
  if (((pRCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8006afc:	075a      	lsls	r2, r3, #29
 8006afe:	d50b      	bpl.n	8006b18 <HAL_RCC_ClockConfig+0x60>
    if ((pRCC_ClkInitStruct->APB1CLKDivider) > (RCC->CFGR2 & RCC_CFGR2_PPRE1))
 8006b00:	498f      	ldr	r1, [pc, #572]	@ (8006d40 <HAL_RCC_ClockConfig+0x288>)
 8006b02:	68e0      	ldr	r0, [r4, #12]
 8006b04:	6a0a      	ldr	r2, [r1, #32]
 8006b06:	f002 0270 	and.w	r2, r2, #112	@ 0x70
 8006b0a:	4290      	cmp	r0, r2
      MODIFY_REG(RCC->CFGR2, RCC_CFGR2_PPRE1, pRCC_ClkInitStruct->APB1CLKDivider);
 8006b0c:	bf81      	itttt	hi
 8006b0e:	6a0a      	ldrhi	r2, [r1, #32]
 8006b10:	f022 0270 	bichi.w	r2, r2, #112	@ 0x70
 8006b14:	4302      	orrhi	r2, r0
 8006b16:	620a      	strhi	r2, [r1, #32]
  if (((pRCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 8006b18:	079f      	lsls	r7, r3, #30
 8006b1a:	d50b      	bpl.n	8006b34 <HAL_RCC_ClockConfig+0x7c>
    if ((pRCC_ClkInitStruct->AHBCLKDivider) > (RCC->CFGR2 & RCC_CFGR2_HPRE))
 8006b1c:	4988      	ldr	r1, [pc, #544]	@ (8006d40 <HAL_RCC_ClockConfig+0x288>)
 8006b1e:	68a0      	ldr	r0, [r4, #8]
 8006b20:	6a0a      	ldr	r2, [r1, #32]
 8006b22:	f002 020f 	and.w	r2, r2, #15
 8006b26:	4290      	cmp	r0, r2
      MODIFY_REG(RCC->CFGR2, RCC_CFGR2_HPRE, pRCC_ClkInitStruct->AHBCLKDivider);
 8006b28:	bf81      	itttt	hi
 8006b2a:	6a0a      	ldrhi	r2, [r1, #32]
 8006b2c:	f022 020f 	bichi.w	r2, r2, #15
 8006b30:	4302      	orrhi	r2, r0
 8006b32:	620a      	strhi	r2, [r1, #32]
  if (((pRCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 8006b34:	07de      	lsls	r6, r3, #31
 8006b36:	d456      	bmi.n	8006be6 <HAL_RCC_ClockConfig+0x12e>
  if (((pRCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 8006b38:	6822      	ldr	r2, [r4, #0]
 8006b3a:	0790      	lsls	r0, r2, #30
 8006b3c:	f100 80d8 	bmi.w	8006cf0 <HAL_RCC_ClockConfig+0x238>
  if (FLatency < __HAL_FLASH_GET_LATENCY())
 8006b40:	497e      	ldr	r1, [pc, #504]	@ (8006d3c <HAL_RCC_ClockConfig+0x284>)
 8006b42:	680b      	ldr	r3, [r1, #0]
 8006b44:	f003 030f 	and.w	r3, r3, #15
 8006b48:	42ab      	cmp	r3, r5
 8006b4a:	f200 80de 	bhi.w	8006d0a <HAL_RCC_ClockConfig+0x252>
  if (((pRCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8006b4e:	0750      	lsls	r0, r2, #29
 8006b50:	f100 80e7 	bmi.w	8006d22 <HAL_RCC_ClockConfig+0x26a>
  if (((pRCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 8006b54:	0711      	lsls	r1, r2, #28
 8006b56:	d50d      	bpl.n	8006b74 <HAL_RCC_ClockConfig+0xbc>
    if ((pRCC_ClkInitStruct->APB2CLKDivider) < ((RCC->CFGR2 & RCC_CFGR2_PPRE2) >> 4))
 8006b58:	4979      	ldr	r1, [pc, #484]	@ (8006d40 <HAL_RCC_ClockConfig+0x288>)
 8006b5a:	6920      	ldr	r0, [r4, #16]
 8006b5c:	6a0b      	ldr	r3, [r1, #32]
 8006b5e:	091b      	lsrs	r3, r3, #4
 8006b60:	f003 0370 	and.w	r3, r3, #112	@ 0x70
 8006b64:	4298      	cmp	r0, r3
      MODIFY_REG(RCC->CFGR2, RCC_CFGR2_PPRE2, ((pRCC_ClkInitStruct->APB2CLKDivider) << 4));
 8006b66:	bf3f      	itttt	cc
 8006b68:	6a0b      	ldrcc	r3, [r1, #32]
 8006b6a:	f423 63e0 	biccc.w	r3, r3, #1792	@ 0x700
 8006b6e:	ea43 1300 	orrcc.w	r3, r3, r0, lsl #4
 8006b72:	620b      	strcc	r3, [r1, #32]
  if (((pRCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK3) == RCC_CLOCKTYPE_PCLK3)
 8006b74:	06d3      	lsls	r3, r2, #27
 8006b76:	d50b      	bpl.n	8006b90 <HAL_RCC_ClockConfig+0xd8>
    if ((pRCC_ClkInitStruct->APB3CLKDivider) < (RCC->CFGR3 & RCC_CFGR3_PPRE3))
 8006b78:	4a71      	ldr	r2, [pc, #452]	@ (8006d40 <HAL_RCC_ClockConfig+0x288>)
 8006b7a:	6961      	ldr	r1, [r4, #20]
 8006b7c:	6a53      	ldr	r3, [r2, #36]	@ 0x24
 8006b7e:	f003 0370 	and.w	r3, r3, #112	@ 0x70
 8006b82:	4299      	cmp	r1, r3
      MODIFY_REG(RCC->CFGR3, RCC_CFGR3_PPRE3, (pRCC_ClkInitStruct->APB3CLKDivider));
 8006b84:	bf3f      	itttt	cc
 8006b86:	6a53      	ldrcc	r3, [r2, #36]	@ 0x24
 8006b88:	f023 0370 	biccc.w	r3, r3, #112	@ 0x70
 8006b8c:	430b      	orrcc	r3, r1
 8006b8e:	6253      	strcc	r3, [r2, #36]	@ 0x24
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR2 & RCC_CFGR2_HPRE) >> RCC_CFGR2_HPRE_Pos];
 8006b90:	f7ff ff06 	bl	80069a0 <HAL_RCC_GetSysClockFreq>
 8006b94:	4b6a      	ldr	r3, [pc, #424]	@ (8006d40 <HAL_RCC_ClockConfig+0x288>)
 8006b96:	4a6b      	ldr	r2, [pc, #428]	@ (8006d44 <HAL_RCC_ClockConfig+0x28c>)
 8006b98:	6a1b      	ldr	r3, [r3, #32]
 8006b9a:	f003 030f 	and.w	r3, r3, #15
 8006b9e:	5cd3      	ldrb	r3, [r2, r3]
 8006ba0:	40d8      	lsrs	r0, r3
 8006ba2:	4b69      	ldr	r3, [pc, #420]	@ (8006d48 <HAL_RCC_ClockConfig+0x290>)
 8006ba4:	6018      	str	r0, [r3, #0]
  status = HAL_InitTick(uwTickPrio);
 8006ba6:	4b69      	ldr	r3, [pc, #420]	@ (8006d4c <HAL_RCC_ClockConfig+0x294>)
 8006ba8:	6818      	ldr	r0, [r3, #0]
}
 8006baa:	b002      	add	sp, #8
 8006bac:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  status = HAL_InitTick(uwTickPrio);
 8006bb0:	f7fa b8ee 	b.w	8000d90 <HAL_InitTick>
    __HAL_FLASH_SET_LATENCY(FLatency);
 8006bb4:	6813      	ldr	r3, [r2, #0]
 8006bb6:	f023 030f 	bic.w	r3, r3, #15
 8006bba:	430b      	orrs	r3, r1
 8006bbc:	6013      	str	r3, [r2, #0]
    if (__HAL_FLASH_GET_LATENCY() != FLatency)
 8006bbe:	6813      	ldr	r3, [r2, #0]
 8006bc0:	f003 030f 	and.w	r3, r3, #15
 8006bc4:	428b      	cmp	r3, r1
 8006bc6:	f47f af7c 	bne.w	8006ac2 <HAL_RCC_ClockConfig+0xa>
 8006bca:	e784      	b.n	8006ad6 <HAL_RCC_ClockConfig+0x1e>
    if ((pRCC_ClkInitStruct->APB3CLKDivider) > (RCC->CFGR3 & RCC_CFGR3_PPRE3))
 8006bcc:	495c      	ldr	r1, [pc, #368]	@ (8006d40 <HAL_RCC_ClockConfig+0x288>)
 8006bce:	6960      	ldr	r0, [r4, #20]
 8006bd0:	6a4a      	ldr	r2, [r1, #36]	@ 0x24
 8006bd2:	f002 0270 	and.w	r2, r2, #112	@ 0x70
 8006bd6:	4290      	cmp	r0, r2
      MODIFY_REG(RCC->CFGR3, RCC_CFGR3_PPRE3, pRCC_ClkInitStruct->APB3CLKDivider);
 8006bd8:	bf81      	itttt	hi
 8006bda:	6a4a      	ldrhi	r2, [r1, #36]	@ 0x24
 8006bdc:	f022 0270 	bichi.w	r2, r2, #112	@ 0x70
 8006be0:	4302      	orrhi	r2, r0
 8006be2:	624a      	strhi	r2, [r1, #36]	@ 0x24
 8006be4:	e77a      	b.n	8006adc <HAL_RCC_ClockConfig+0x24>
    if (pRCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
 8006be6:	6862      	ldr	r2, [r4, #4]
 8006be8:	4b55      	ldr	r3, [pc, #340]	@ (8006d40 <HAL_RCC_ClockConfig+0x288>)
 8006bea:	2a03      	cmp	r2, #3
 8006bec:	d14e      	bne.n	8006c8c <HAL_RCC_ClockConfig+0x1d4>
      if (__HAL_RCC_PWR_IS_CLK_DISABLED())
 8006bee:	f8d3 2094 	ldr.w	r2, [r3, #148]	@ 0x94
 8006bf2:	0751      	lsls	r1, r2, #29
 8006bf4:	d43d      	bmi.n	8006c72 <HAL_RCC_ClockConfig+0x1ba>
        pwrclkchanged = SET;
 8006bf6:	2701      	movs	r7, #1
        __HAL_RCC_PWR_CLK_ENABLE();
 8006bf8:	f8d3 2094 	ldr.w	r2, [r3, #148]	@ 0x94
 8006bfc:	f042 0204 	orr.w	r2, r2, #4
 8006c00:	f8c3 2094 	str.w	r2, [r3, #148]	@ 0x94
 8006c04:	f8d3 3094 	ldr.w	r3, [r3, #148]	@ 0x94
 8006c08:	f003 0304 	and.w	r3, r3, #4
 8006c0c:	9301      	str	r3, [sp, #4]
 8006c0e:	9b01      	ldr	r3, [sp, #4]
      tickstart = HAL_GetTick();
 8006c10:	f7fd f9a8 	bl	8003f64 <HAL_GetTick>
      if (READ_BIT(PWR->VOSR, PWR_VOSR_BOOSTEN) != 0U)
 8006c14:	f8df 8138 	ldr.w	r8, [pc, #312]	@ 8006d50 <HAL_RCC_ClockConfig+0x298>
      tickstart = HAL_GetTick();
 8006c18:	4606      	mov	r6, r0
      if (READ_BIT(PWR->VOSR, PWR_VOSR_BOOSTEN) != 0U)
 8006c1a:	f8d8 300c 	ldr.w	r3, [r8, #12]
 8006c1e:	035a      	lsls	r2, r3, #13
 8006c20:	d429      	bmi.n	8006c76 <HAL_RCC_ClockConfig+0x1be>
      if (pwrclkchanged == SET)
 8006c22:	4b47      	ldr	r3, [pc, #284]	@ (8006d40 <HAL_RCC_ClockConfig+0x288>)
 8006c24:	b12f      	cbz	r7, 8006c32 <HAL_RCC_ClockConfig+0x17a>
        __HAL_RCC_PWR_CLK_DISABLE();
 8006c26:	f8d3 2094 	ldr.w	r2, [r3, #148]	@ 0x94
 8006c2a:	f022 0204 	bic.w	r2, r2, #4
 8006c2e:	f8c3 2094 	str.w	r2, [r3, #148]	@ 0x94
      if (READ_BIT(RCC->CR, RCC_CR_PLL1RDY) == 0U)
 8006c32:	681b      	ldr	r3, [r3, #0]
 8006c34:	f013 7f00 	tst.w	r3, #33554432	@ 0x2000000
        if (READ_BIT(RCC->CR, RCC_CR_HSIRDY) == 0U)
 8006c38:	f43f af43 	beq.w	8006ac2 <HAL_RCC_ClockConfig+0xa>
    MODIFY_REG(RCC->CFGR1, RCC_CFGR1_SW, pRCC_ClkInitStruct->SYSCLKSource);
 8006c3c:	4e40      	ldr	r6, [pc, #256]	@ (8006d40 <HAL_RCC_ClockConfig+0x288>)
 8006c3e:	6862      	ldr	r2, [r4, #4]
 8006c40:	69f3      	ldr	r3, [r6, #28]
        if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 8006c42:	f241 3888 	movw	r8, #5000	@ 0x1388
    MODIFY_REG(RCC->CFGR1, RCC_CFGR1_SW, pRCC_ClkInitStruct->SYSCLKSource);
 8006c46:	f023 0303 	bic.w	r3, r3, #3
 8006c4a:	4313      	orrs	r3, r2
 8006c4c:	61f3      	str	r3, [r6, #28]
    tickstart = HAL_GetTick();
 8006c4e:	f7fd f989 	bl	8003f64 <HAL_GetTick>
    if (pRCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
 8006c52:	6863      	ldr	r3, [r4, #4]
    tickstart = HAL_GetTick();
 8006c54:	4607      	mov	r7, r0
    if (pRCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
 8006c56:	2b03      	cmp	r3, #3
 8006c58:	d125      	bne.n	8006ca6 <HAL_RCC_ClockConfig+0x1ee>
      while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_PLLCLK)
 8006c5a:	69f3      	ldr	r3, [r6, #28]
 8006c5c:	f003 030c 	and.w	r3, r3, #12
 8006c60:	2b0c      	cmp	r3, #12
 8006c62:	f43f af69 	beq.w	8006b38 <HAL_RCC_ClockConfig+0x80>
        if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 8006c66:	f7fd f97d 	bl	8003f64 <HAL_GetTick>
 8006c6a:	1bc0      	subs	r0, r0, r7
 8006c6c:	4540      	cmp	r0, r8
 8006c6e:	d9f4      	bls.n	8006c5a <HAL_RCC_ClockConfig+0x1a2>
 8006c70:	e00a      	b.n	8006c88 <HAL_RCC_ClockConfig+0x1d0>
    FlagStatus  pwrclkchanged = RESET;
 8006c72:	2700      	movs	r7, #0
 8006c74:	e7cc      	b.n	8006c10 <HAL_RCC_ClockConfig+0x158>
        while (READ_BIT(PWR->VOSR, PWR_VOSR_BOOSTRDY) == 0U)
 8006c76:	f8d8 300c 	ldr.w	r3, [r8, #12]
 8006c7a:	045b      	lsls	r3, r3, #17
 8006c7c:	d4d1      	bmi.n	8006c22 <HAL_RCC_ClockConfig+0x16a>
          if ((HAL_GetTick() - tickstart) > EPOD_TIMEOUT_VALUE)
 8006c7e:	f7fd f971 	bl	8003f64 <HAL_GetTick>
 8006c82:	1b80      	subs	r0, r0, r6
 8006c84:	2802      	cmp	r0, #2
 8006c86:	d9f6      	bls.n	8006c76 <HAL_RCC_ClockConfig+0x1be>
            return HAL_TIMEOUT;
 8006c88:	2003      	movs	r0, #3
 8006c8a:	e71b      	b.n	8006ac4 <HAL_RCC_ClockConfig+0xc>
      if (pRCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 8006c8c:	2a02      	cmp	r2, #2
        if (READ_BIT(RCC->CR, RCC_CR_HSERDY) == 0U)
 8006c8e:	681b      	ldr	r3, [r3, #0]
      if (pRCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 8006c90:	d102      	bne.n	8006c98 <HAL_RCC_ClockConfig+0x1e0>
        if (READ_BIT(RCC->CR, RCC_CR_HSERDY) == 0U)
 8006c92:	f413 3f00 	tst.w	r3, #131072	@ 0x20000
 8006c96:	e7cf      	b.n	8006c38 <HAL_RCC_ClockConfig+0x180>
      else if (pRCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_MSI)
 8006c98:	b912      	cbnz	r2, 8006ca0 <HAL_RCC_ClockConfig+0x1e8>
        if (READ_BIT(RCC->CR, RCC_CR_MSISRDY) == 0U)
 8006c9a:	f013 0f04 	tst.w	r3, #4
 8006c9e:	e7cb      	b.n	8006c38 <HAL_RCC_ClockConfig+0x180>
        if (READ_BIT(RCC->CR, RCC_CR_HSIRDY) == 0U)
 8006ca0:	f413 6f80 	tst.w	r3, #1024	@ 0x400
 8006ca4:	e7c8      	b.n	8006c38 <HAL_RCC_ClockConfig+0x180>
      if (pRCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 8006ca6:	2b02      	cmp	r3, #2
 8006ca8:	d10b      	bne.n	8006cc2 <HAL_RCC_ClockConfig+0x20a>
        while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_HSE)
 8006caa:	69f3      	ldr	r3, [r6, #28]
 8006cac:	f003 030c 	and.w	r3, r3, #12
 8006cb0:	2b08      	cmp	r3, #8
 8006cb2:	f43f af41 	beq.w	8006b38 <HAL_RCC_ClockConfig+0x80>
          if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 8006cb6:	f7fd f955 	bl	8003f64 <HAL_GetTick>
 8006cba:	1bc0      	subs	r0, r0, r7
 8006cbc:	4540      	cmp	r0, r8
 8006cbe:	d9f4      	bls.n	8006caa <HAL_RCC_ClockConfig+0x1f2>
 8006cc0:	e7e2      	b.n	8006c88 <HAL_RCC_ClockConfig+0x1d0>
      else if (pRCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_MSI)
 8006cc2:	b97b      	cbnz	r3, 8006ce4 <HAL_RCC_ClockConfig+0x22c>
        while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_MSI)
 8006cc4:	69f3      	ldr	r3, [r6, #28]
 8006cc6:	f013 0f0c 	tst.w	r3, #12
 8006cca:	f43f af35 	beq.w	8006b38 <HAL_RCC_ClockConfig+0x80>
          if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 8006cce:	f7fd f949 	bl	8003f64 <HAL_GetTick>
 8006cd2:	1bc0      	subs	r0, r0, r7
 8006cd4:	4540      	cmp	r0, r8
 8006cd6:	d9f5      	bls.n	8006cc4 <HAL_RCC_ClockConfig+0x20c>
 8006cd8:	e7d6      	b.n	8006c88 <HAL_RCC_ClockConfig+0x1d0>
          if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 8006cda:	f7fd f943 	bl	8003f64 <HAL_GetTick>
 8006cde:	1bc0      	subs	r0, r0, r7
 8006ce0:	4540      	cmp	r0, r8
 8006ce2:	d8d1      	bhi.n	8006c88 <HAL_RCC_ClockConfig+0x1d0>
        while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_HSI)
 8006ce4:	69f3      	ldr	r3, [r6, #28]
 8006ce6:	f003 030c 	and.w	r3, r3, #12
 8006cea:	2b04      	cmp	r3, #4
 8006cec:	d1f5      	bne.n	8006cda <HAL_RCC_ClockConfig+0x222>
 8006cee:	e723      	b.n	8006b38 <HAL_RCC_ClockConfig+0x80>
    if ((pRCC_ClkInitStruct->AHBCLKDivider) < (RCC->CFGR2 & RCC_CFGR2_HPRE))
 8006cf0:	4913      	ldr	r1, [pc, #76]	@ (8006d40 <HAL_RCC_ClockConfig+0x288>)
 8006cf2:	68a0      	ldr	r0, [r4, #8]
 8006cf4:	6a0b      	ldr	r3, [r1, #32]
 8006cf6:	f003 030f 	and.w	r3, r3, #15
 8006cfa:	4298      	cmp	r0, r3
      MODIFY_REG(RCC->CFGR2, RCC_CFGR2_HPRE, pRCC_ClkInitStruct->AHBCLKDivider);
 8006cfc:	bf3f      	itttt	cc
 8006cfe:	6a0b      	ldrcc	r3, [r1, #32]
 8006d00:	f023 030f 	biccc.w	r3, r3, #15
 8006d04:	4303      	orrcc	r3, r0
 8006d06:	620b      	strcc	r3, [r1, #32]
 8006d08:	e71a      	b.n	8006b40 <HAL_RCC_ClockConfig+0x88>
    __HAL_FLASH_SET_LATENCY(FLatency);
 8006d0a:	680b      	ldr	r3, [r1, #0]
 8006d0c:	f023 030f 	bic.w	r3, r3, #15
 8006d10:	432b      	orrs	r3, r5
 8006d12:	600b      	str	r3, [r1, #0]
    if (__HAL_FLASH_GET_LATENCY() != FLatency)
 8006d14:	680b      	ldr	r3, [r1, #0]
 8006d16:	f003 030f 	and.w	r3, r3, #15
 8006d1a:	42ab      	cmp	r3, r5
 8006d1c:	f47f aed1 	bne.w	8006ac2 <HAL_RCC_ClockConfig+0xa>
 8006d20:	e715      	b.n	8006b4e <HAL_RCC_ClockConfig+0x96>
    if ((pRCC_ClkInitStruct->APB1CLKDivider) < (RCC->CFGR2 & RCC_CFGR2_PPRE1))
 8006d22:	4907      	ldr	r1, [pc, #28]	@ (8006d40 <HAL_RCC_ClockConfig+0x288>)
 8006d24:	68e0      	ldr	r0, [r4, #12]
 8006d26:	6a0b      	ldr	r3, [r1, #32]
 8006d28:	f003 0370 	and.w	r3, r3, #112	@ 0x70
 8006d2c:	4298      	cmp	r0, r3
      MODIFY_REG(RCC->CFGR2, RCC_CFGR2_PPRE1, pRCC_ClkInitStruct->APB1CLKDivider);
 8006d2e:	bf3f      	itttt	cc
 8006d30:	6a0b      	ldrcc	r3, [r1, #32]
 8006d32:	f023 0370 	biccc.w	r3, r3, #112	@ 0x70
 8006d36:	4303      	orrcc	r3, r0
 8006d38:	620b      	strcc	r3, [r1, #32]
 8006d3a:	e70b      	b.n	8006b54 <HAL_RCC_ClockConfig+0x9c>
 8006d3c:	40022000 	.word	0x40022000
 8006d40:	46020c00 	.word	0x46020c00
 8006d44:	080358a4 	.word	0x080358a4
 8006d48:	2000004c 	.word	0x2000004c
 8006d4c:	20000054 	.word	0x20000054
 8006d50:	46020800 	.word	0x46020800

08006d54 <HAL_RCC_GetHCLKFreq>:
{
 8006d54:	b508      	push	{r3, lr}
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR2 & RCC_CFGR2_HPRE) >> RCC_CFGR2_HPRE_Pos];
 8006d56:	f7ff fe23 	bl	80069a0 <HAL_RCC_GetSysClockFreq>
 8006d5a:	4b05      	ldr	r3, [pc, #20]	@ (8006d70 <HAL_RCC_GetHCLKFreq+0x1c>)
 8006d5c:	4a05      	ldr	r2, [pc, #20]	@ (8006d74 <HAL_RCC_GetHCLKFreq+0x20>)
 8006d5e:	6a1b      	ldr	r3, [r3, #32]
 8006d60:	f003 030f 	and.w	r3, r3, #15
 8006d64:	5cd3      	ldrb	r3, [r2, r3]
 8006d66:	40d8      	lsrs	r0, r3
 8006d68:	4b03      	ldr	r3, [pc, #12]	@ (8006d78 <HAL_RCC_GetHCLKFreq+0x24>)
 8006d6a:	6018      	str	r0, [r3, #0]
}
 8006d6c:	bd08      	pop	{r3, pc}
 8006d6e:	bf00      	nop
 8006d70:	46020c00 	.word	0x46020c00
 8006d74:	080358a4 	.word	0x080358a4
 8006d78:	2000004c 	.word	0x2000004c

08006d7c <HAL_RCC_OscConfig>:
{
 8006d7c:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
  if (pRCC_OscInitStruct == NULL)
 8006d80:	4604      	mov	r4, r0
 8006d82:	2800      	cmp	r0, #0
 8006d84:	d039      	beq.n	8006dfa <HAL_RCC_OscConfig+0x7e>
  sysclk_source = __HAL_RCC_GET_SYSCLK_SOURCE();
 8006d86:	4ba3      	ldr	r3, [pc, #652]	@ (8007014 <HAL_RCC_OscConfig+0x298>)
 8006d88:	69de      	ldr	r6, [r3, #28]
  pll_config = __HAL_RCC_GET_PLL_OSCSOURCE();
 8006d8a:	6a9f      	ldr	r7, [r3, #40]	@ 0x28
  if (((pRCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_MSI) == RCC_OSCILLATORTYPE_MSI)
 8006d8c:	6803      	ldr	r3, [r0, #0]
  sysclk_source = __HAL_RCC_GET_SYSCLK_SOURCE();
 8006d8e:	f006 060c 	and.w	r6, r6, #12
  if (((pRCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_MSI) == RCC_OSCILLATORTYPE_MSI)
 8006d92:	06d8      	lsls	r0, r3, #27
  pll_config = __HAL_RCC_GET_PLL_OSCSOURCE();
 8006d94:	f007 0703 	and.w	r7, r7, #3
  if (((pRCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_MSI) == RCC_OSCILLATORTYPE_MSI)
 8006d98:	f140 809a 	bpl.w	8006ed0 <HAL_RCC_OscConfig+0x154>
    if ((sysclk_source == RCC_SYSCLKSOURCE_STATUS_MSI) ||
 8006d9c:	69e3      	ldr	r3, [r4, #28]
 8006d9e:	b11e      	cbz	r6, 8006da8 <HAL_RCC_OscConfig+0x2c>
 8006da0:	2e0c      	cmp	r6, #12
 8006da2:	d175      	bne.n	8006e90 <HAL_RCC_OscConfig+0x114>
        ((sysclk_source == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (pll_config == RCC_PLLSOURCE_MSI)))
 8006da4:	2f01      	cmp	r7, #1
 8006da6:	d173      	bne.n	8006e90 <HAL_RCC_OscConfig+0x114>
      if (pRCC_OscInitStruct->MSIState == RCC_MSI_OFF)
 8006da8:	b33b      	cbz	r3, 8006dfa <HAL_RCC_OscConfig+0x7e>
        if (pRCC_OscInitStruct->MSIClockRange > __HAL_RCC_GET_MSI_RANGE())
 8006daa:	4d9a      	ldr	r5, [pc, #616]	@ (8007014 <HAL_RCC_OscConfig+0x298>)
 8006dac:	6a60      	ldr	r0, [r4, #36]	@ 0x24
 8006dae:	68ab      	ldr	r3, [r5, #8]
 8006db0:	0219      	lsls	r1, r3, #8
 8006db2:	bf56      	itet	pl
 8006db4:	f8d5 30f4 	ldrpl.w	r3, [r5, #244]	@ 0xf4
 8006db8:	68ab      	ldrmi	r3, [r5, #8]
 8006dba:	041b      	lslpl	r3, r3, #16
 8006dbc:	f003 4370 	and.w	r3, r3, #4026531840	@ 0xf0000000
 8006dc0:	4298      	cmp	r0, r3
 8006dc2:	d938      	bls.n	8006e36 <HAL_RCC_OscConfig+0xba>
          if (sysclk_source == RCC_SYSCLKSOURCE_STATUS_MSI)
 8006dc4:	b1ae      	cbz	r6, 8006df2 <HAL_RCC_OscConfig+0x76>
          __HAL_RCC_MSI_RANGE_CONFIG(pRCC_OscInitStruct->MSIClockRange);
 8006dc6:	68ab      	ldr	r3, [r5, #8]
 8006dc8:	f443 0300 	orr.w	r3, r3, #8388608	@ 0x800000
 8006dcc:	60ab      	str	r3, [r5, #8]
 8006dce:	68ab      	ldr	r3, [r5, #8]
 8006dd0:	6a61      	ldr	r1, [r4, #36]	@ 0x24
 8006dd2:	f023 4370 	bic.w	r3, r3, #4026531840	@ 0xf0000000
 8006dd6:	430b      	orrs	r3, r1
 8006dd8:	60ab      	str	r3, [r5, #8]
          __HAL_RCC_MSI_CALIBRATIONVALUE_ADJUST((pRCC_OscInitStruct->MSICalibrationValue), \
 8006dda:	f1b1 4f40 	cmp.w	r1, #3221225472	@ 0xc0000000
 8006dde:	6a22      	ldr	r2, [r4, #32]
 8006de0:	d20d      	bcs.n	8006dfe <HAL_RCC_OscConfig+0x82>
 8006de2:	2900      	cmp	r1, #0
 8006de4:	68eb      	ldr	r3, [r5, #12]
 8006de6:	da1a      	bge.n	8006e1e <HAL_RCC_OscConfig+0xa2>
 8006de8:	f423 7378 	bic.w	r3, r3, #992	@ 0x3e0
 8006dec:	ea43 1342 	orr.w	r3, r3, r2, lsl #5
 8006df0:	e009      	b.n	8006e06 <HAL_RCC_OscConfig+0x8a>
            if (RCC_SetFlashLatencyFromMSIRange(pRCC_OscInitStruct->MSIClockRange) != HAL_OK)
 8006df2:	f7ff fd79 	bl	80068e8 <RCC_SetFlashLatencyFromMSIRange>
 8006df6:	2800      	cmp	r0, #0
 8006df8:	d0e5      	beq.n	8006dc6 <HAL_RCC_OscConfig+0x4a>
    return HAL_ERROR;
 8006dfa:	2001      	movs	r0, #1
 8006dfc:	e00c      	b.n	8006e18 <HAL_RCC_OscConfig+0x9c>
          __HAL_RCC_MSI_CALIBRATIONVALUE_ADJUST((pRCC_OscInitStruct->MSICalibrationValue), \
 8006dfe:	68eb      	ldr	r3, [r5, #12]
 8006e00:	f023 031f 	bic.w	r3, r3, #31
 8006e04:	4313      	orrs	r3, r2
 8006e06:	60eb      	str	r3, [r5, #12]
        (void) HAL_RCC_GetHCLKFreq();
 8006e08:	f7ff ffa4 	bl	8006d54 <HAL_RCC_GetHCLKFreq>
        status = HAL_InitTick(uwTickPrio);
 8006e0c:	4b82      	ldr	r3, [pc, #520]	@ (8007018 <HAL_RCC_OscConfig+0x29c>)
 8006e0e:	6818      	ldr	r0, [r3, #0]
 8006e10:	f7f9 ffbe 	bl	8000d90 <HAL_InitTick>
        if (status != HAL_OK)
 8006e14:	2800      	cmp	r0, #0
 8006e16:	d05b      	beq.n	8006ed0 <HAL_RCC_OscConfig+0x154>
}
 8006e18:	b004      	add	sp, #16
 8006e1a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
          __HAL_RCC_MSI_CALIBRATIONVALUE_ADJUST((pRCC_OscInitStruct->MSICalibrationValue), \
 8006e1e:	f1b1 4f80 	cmp.w	r1, #1073741824	@ 0x40000000
 8006e22:	bf2b      	itete	cs
 8006e24:	f423 43f8 	biccs.w	r3, r3, #31744	@ 0x7c00
 8006e28:	f423 2378 	biccc.w	r3, r3, #1015808	@ 0xf8000
 8006e2c:	ea43 2382 	orrcs.w	r3, r3, r2, lsl #10
 8006e30:	ea43 33c2 	orrcc.w	r3, r3, r2, lsl #15
 8006e34:	e7e7      	b.n	8006e06 <HAL_RCC_OscConfig+0x8a>
          __HAL_RCC_MSI_RANGE_CONFIG(pRCC_OscInitStruct->MSIClockRange);
 8006e36:	68ab      	ldr	r3, [r5, #8]
          __HAL_RCC_MSI_CALIBRATIONVALUE_ADJUST((pRCC_OscInitStruct->MSICalibrationValue), \
 8006e38:	f1b0 4f40 	cmp.w	r0, #3221225472	@ 0xc0000000
          __HAL_RCC_MSI_RANGE_CONFIG(pRCC_OscInitStruct->MSIClockRange);
 8006e3c:	f443 0300 	orr.w	r3, r3, #8388608	@ 0x800000
 8006e40:	60ab      	str	r3, [r5, #8]
 8006e42:	68ab      	ldr	r3, [r5, #8]
 8006e44:	f023 4370 	bic.w	r3, r3, #4026531840	@ 0xf0000000
 8006e48:	ea43 0300 	orr.w	r3, r3, r0
 8006e4c:	60ab      	str	r3, [r5, #8]
          __HAL_RCC_MSI_CALIBRATIONVALUE_ADJUST((pRCC_OscInitStruct->MSICalibrationValue), \
 8006e4e:	6a22      	ldr	r2, [r4, #32]
 8006e50:	68eb      	ldr	r3, [r5, #12]
 8006e52:	d30a      	bcc.n	8006e6a <HAL_RCC_OscConfig+0xee>
 8006e54:	f023 031f 	bic.w	r3, r3, #31
 8006e58:	4313      	orrs	r3, r2
 8006e5a:	60eb      	str	r3, [r5, #12]
          if (sysclk_source == RCC_SYSCLKSOURCE_STATUS_MSI)
 8006e5c:	2e00      	cmp	r6, #0
 8006e5e:	d1d3      	bne.n	8006e08 <HAL_RCC_OscConfig+0x8c>
            if (RCC_SetFlashLatencyFromMSIRange(pRCC_OscInitStruct->MSIClockRange) != HAL_OK)
 8006e60:	f7ff fd42 	bl	80068e8 <RCC_SetFlashLatencyFromMSIRange>
 8006e64:	2800      	cmp	r0, #0
 8006e66:	d0cf      	beq.n	8006e08 <HAL_RCC_OscConfig+0x8c>
 8006e68:	e7c7      	b.n	8006dfa <HAL_RCC_OscConfig+0x7e>
          __HAL_RCC_MSI_CALIBRATIONVALUE_ADJUST((pRCC_OscInitStruct->MSICalibrationValue), \
 8006e6a:	2800      	cmp	r0, #0
 8006e6c:	da04      	bge.n	8006e78 <HAL_RCC_OscConfig+0xfc>
 8006e6e:	f423 7378 	bic.w	r3, r3, #992	@ 0x3e0
 8006e72:	ea43 1342 	orr.w	r3, r3, r2, lsl #5
 8006e76:	e7f0      	b.n	8006e5a <HAL_RCC_OscConfig+0xde>
 8006e78:	f1b0 4f80 	cmp.w	r0, #1073741824	@ 0x40000000
 8006e7c:	bf2b      	itete	cs
 8006e7e:	f423 43f8 	biccs.w	r3, r3, #31744	@ 0x7c00
 8006e82:	f423 2378 	biccc.w	r3, r3, #1015808	@ 0xf8000
 8006e86:	ea43 2382 	orrcs.w	r3, r3, r2, lsl #10
 8006e8a:	ea43 33c2 	orrcc.w	r3, r3, r2, lsl #15
 8006e8e:	e7e4      	b.n	8006e5a <HAL_RCC_OscConfig+0xde>
      if (pRCC_OscInitStruct->MSIState != RCC_MSI_OFF)
 8006e90:	4d60      	ldr	r5, [pc, #384]	@ (8007014 <HAL_RCC_OscConfig+0x298>)
 8006e92:	2b00      	cmp	r3, #0
 8006e94:	d074      	beq.n	8006f80 <HAL_RCC_OscConfig+0x204>
        __HAL_RCC_MSI_ENABLE();
 8006e96:	682b      	ldr	r3, [r5, #0]
 8006e98:	f043 0301 	orr.w	r3, r3, #1
 8006e9c:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
 8006e9e:	f7fd f861 	bl	8003f64 <HAL_GetTick>
 8006ea2:	4680      	mov	r8, r0
        while (READ_BIT(RCC->CR, RCC_CR_MSISRDY) == 0U)
 8006ea4:	682b      	ldr	r3, [r5, #0]
 8006ea6:	075a      	lsls	r2, r3, #29
 8006ea8:	d54e      	bpl.n	8006f48 <HAL_RCC_OscConfig+0x1cc>
        __HAL_RCC_MSI_RANGE_CONFIG(pRCC_OscInitStruct->MSIClockRange);
 8006eaa:	68ab      	ldr	r3, [r5, #8]
 8006eac:	f443 0300 	orr.w	r3, r3, #8388608	@ 0x800000
 8006eb0:	60ab      	str	r3, [r5, #8]
 8006eb2:	68ab      	ldr	r3, [r5, #8]
 8006eb4:	6a61      	ldr	r1, [r4, #36]	@ 0x24
 8006eb6:	f023 4370 	bic.w	r3, r3, #4026531840	@ 0xf0000000
 8006eba:	430b      	orrs	r3, r1
 8006ebc:	60ab      	str	r3, [r5, #8]
        __HAL_RCC_MSI_CALIBRATIONVALUE_ADJUST((pRCC_OscInitStruct->MSICalibrationValue), \
 8006ebe:	f1b1 4f40 	cmp.w	r1, #3221225472	@ 0xc0000000
 8006ec2:	6a22      	ldr	r2, [r4, #32]
 8006ec4:	68eb      	ldr	r3, [r5, #12]
 8006ec6:	d347      	bcc.n	8006f58 <HAL_RCC_OscConfig+0x1dc>
 8006ec8:	f023 031f 	bic.w	r3, r3, #31
 8006ecc:	4313      	orrs	r3, r2
 8006ece:	60eb      	str	r3, [r5, #12]
  if (((pRCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 8006ed0:	6823      	ldr	r3, [r4, #0]
 8006ed2:	07dd      	lsls	r5, r3, #31
 8006ed4:	d465      	bmi.n	8006fa2 <HAL_RCC_OscConfig+0x226>
  if (((pRCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 8006ed6:	6823      	ldr	r3, [r4, #0]
 8006ed8:	0798      	lsls	r0, r3, #30
 8006eda:	f100 80bd 	bmi.w	8007058 <HAL_RCC_OscConfig+0x2dc>
  if (((pRCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 8006ede:	6823      	ldr	r3, [r4, #0]
 8006ee0:	0718      	lsls	r0, r3, #28
 8006ee2:	f140 8138 	bpl.w	8007156 <HAL_RCC_OscConfig+0x3da>
    if (__HAL_RCC_PWR_IS_CLK_DISABLED())
 8006ee6:	4b4b      	ldr	r3, [pc, #300]	@ (8007014 <HAL_RCC_OscConfig+0x298>)
 8006ee8:	f8d3 2094 	ldr.w	r2, [r3, #148]	@ 0x94
 8006eec:	0751      	lsls	r1, r2, #29
 8006eee:	f100 80f1 	bmi.w	80070d4 <HAL_RCC_OscConfig+0x358>
      pwrclkchanged = SET;
 8006ef2:	2701      	movs	r7, #1
      __HAL_RCC_PWR_CLK_ENABLE();
 8006ef4:	f8d3 2094 	ldr.w	r2, [r3, #148]	@ 0x94
 8006ef8:	f042 0204 	orr.w	r2, r2, #4
 8006efc:	f8c3 2094 	str.w	r2, [r3, #148]	@ 0x94
 8006f00:	f8d3 3094 	ldr.w	r3, [r3, #148]	@ 0x94
 8006f04:	f003 0304 	and.w	r3, r3, #4
 8006f08:	9301      	str	r3, [sp, #4]
 8006f0a:	9b01      	ldr	r3, [sp, #4]
    if (HAL_IS_BIT_CLR(PWR->DBPR, PWR_DBPR_DBP))
 8006f0c:	4d43      	ldr	r5, [pc, #268]	@ (800701c <HAL_RCC_OscConfig+0x2a0>)
 8006f0e:	6aab      	ldr	r3, [r5, #40]	@ 0x28
 8006f10:	07da      	lsls	r2, r3, #31
 8006f12:	f140 80e1 	bpl.w	80070d8 <HAL_RCC_OscConfig+0x35c>
    if (pRCC_OscInitStruct->LSIState != RCC_LSI_OFF)
 8006f16:	6963      	ldr	r3, [r4, #20]
 8006f18:	4d3e      	ldr	r5, [pc, #248]	@ (8007014 <HAL_RCC_OscConfig+0x298>)
 8006f1a:	2b00      	cmp	r3, #0
 8006f1c:	f040 80ed 	bne.w	80070fa <HAL_RCC_OscConfig+0x37e>
      __HAL_RCC_LSI_DISABLE();
 8006f20:	f8d5 30f0 	ldr.w	r3, [r5, #240]	@ 0xf0
 8006f24:	f023 53a0 	bic.w	r3, r3, #335544320	@ 0x14000000
 8006f28:	f8c5 30f0 	str.w	r3, [r5, #240]	@ 0xf0
      tickstart = HAL_GetTick();
 8006f2c:	f7fd f81a 	bl	8003f64 <HAL_GetTick>
 8006f30:	4606      	mov	r6, r0
      while (READ_BIT(RCC->BDCR, RCC_BDCR_LSIRDY) != 0U)
 8006f32:	f8d5 30f0 	ldr.w	r3, [r5, #240]	@ 0xf0
 8006f36:	011b      	lsls	r3, r3, #4
 8006f38:	f140 8105 	bpl.w	8007146 <HAL_RCC_OscConfig+0x3ca>
        if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
 8006f3c:	f7fd f812 	bl	8003f64 <HAL_GetTick>
 8006f40:	1b80      	subs	r0, r0, r6
 8006f42:	2805      	cmp	r0, #5
 8006f44:	d9f5      	bls.n	8006f32 <HAL_RCC_OscConfig+0x1b6>
 8006f46:	e005      	b.n	8006f54 <HAL_RCC_OscConfig+0x1d8>
          if ((HAL_GetTick() - tickstart) > MSI_TIMEOUT_VALUE)
 8006f48:	f7fd f80c 	bl	8003f64 <HAL_GetTick>
 8006f4c:	eba0 0008 	sub.w	r0, r0, r8
 8006f50:	2802      	cmp	r0, #2
 8006f52:	d9a7      	bls.n	8006ea4 <HAL_RCC_OscConfig+0x128>
            return HAL_TIMEOUT;
 8006f54:	2003      	movs	r0, #3
 8006f56:	e75f      	b.n	8006e18 <HAL_RCC_OscConfig+0x9c>
        __HAL_RCC_MSI_CALIBRATIONVALUE_ADJUST((pRCC_OscInitStruct->MSICalibrationValue), \
 8006f58:	2900      	cmp	r1, #0
 8006f5a:	da04      	bge.n	8006f66 <HAL_RCC_OscConfig+0x1ea>
 8006f5c:	f423 7378 	bic.w	r3, r3, #992	@ 0x3e0
 8006f60:	ea43 1342 	orr.w	r3, r3, r2, lsl #5
 8006f64:	e7b3      	b.n	8006ece <HAL_RCC_OscConfig+0x152>
 8006f66:	f1b1 4f80 	cmp.w	r1, #1073741824	@ 0x40000000
 8006f6a:	d304      	bcc.n	8006f76 <HAL_RCC_OscConfig+0x1fa>
 8006f6c:	f423 43f8 	bic.w	r3, r3, #31744	@ 0x7c00
 8006f70:	ea43 2382 	orr.w	r3, r3, r2, lsl #10
 8006f74:	e7ab      	b.n	8006ece <HAL_RCC_OscConfig+0x152>
 8006f76:	f423 2378 	bic.w	r3, r3, #1015808	@ 0xf8000
 8006f7a:	ea43 33c2 	orr.w	r3, r3, r2, lsl #15
 8006f7e:	e7a6      	b.n	8006ece <HAL_RCC_OscConfig+0x152>
        __HAL_RCC_MSI_DISABLE();
 8006f80:	682b      	ldr	r3, [r5, #0]
 8006f82:	f023 0301 	bic.w	r3, r3, #1
 8006f86:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
 8006f88:	f7fc ffec 	bl	8003f64 <HAL_GetTick>
 8006f8c:	4680      	mov	r8, r0
        while (READ_BIT(RCC->CR, RCC_CR_MSISRDY) != 0U)
 8006f8e:	682b      	ldr	r3, [r5, #0]
 8006f90:	075b      	lsls	r3, r3, #29
 8006f92:	d59d      	bpl.n	8006ed0 <HAL_RCC_OscConfig+0x154>
          if ((HAL_GetTick() - tickstart) > MSI_TIMEOUT_VALUE)
 8006f94:	f7fc ffe6 	bl	8003f64 <HAL_GetTick>
 8006f98:	eba0 0008 	sub.w	r0, r0, r8
 8006f9c:	2802      	cmp	r0, #2
 8006f9e:	d9f6      	bls.n	8006f8e <HAL_RCC_OscConfig+0x212>
 8006fa0:	e7d8      	b.n	8006f54 <HAL_RCC_OscConfig+0x1d8>
    if ((sysclk_source == RCC_SYSCLKSOURCE_STATUS_HSE) ||
 8006fa2:	2e08      	cmp	r6, #8
 8006fa4:	6863      	ldr	r3, [r4, #4]
 8006fa6:	d003      	beq.n	8006fb0 <HAL_RCC_OscConfig+0x234>
 8006fa8:	2e0c      	cmp	r6, #12
 8006faa:	d104      	bne.n	8006fb6 <HAL_RCC_OscConfig+0x23a>
        ((sysclk_source == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (pll_config == RCC_PLLSOURCE_HSE)))
 8006fac:	2f03      	cmp	r7, #3
 8006fae:	d102      	bne.n	8006fb6 <HAL_RCC_OscConfig+0x23a>
      if (pRCC_OscInitStruct->HSEState == RCC_HSE_OFF)
 8006fb0:	2b00      	cmp	r3, #0
 8006fb2:	d190      	bne.n	8006ed6 <HAL_RCC_OscConfig+0x15a>
 8006fb4:	e721      	b.n	8006dfa <HAL_RCC_OscConfig+0x7e>
      __HAL_RCC_HSE_CONFIG(pRCC_OscInitStruct->HSEState);
 8006fb6:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8006fba:	4d16      	ldr	r5, [pc, #88]	@ (8007014 <HAL_RCC_OscConfig+0x298>)
 8006fbc:	d113      	bne.n	8006fe6 <HAL_RCC_OscConfig+0x26a>
 8006fbe:	682b      	ldr	r3, [r5, #0]
 8006fc0:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8006fc4:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
 8006fc6:	f7fc ffcd 	bl	8003f64 <HAL_GetTick>
 8006fca:	4605      	mov	r5, r0
        while (READ_BIT(RCC->CR, RCC_CR_HSERDY) == 0U)
 8006fcc:	f8df 8044 	ldr.w	r8, [pc, #68]	@ 8007014 <HAL_RCC_OscConfig+0x298>
 8006fd0:	f8d8 3000 	ldr.w	r3, [r8]
 8006fd4:	0399      	lsls	r1, r3, #14
 8006fd6:	f53f af7e 	bmi.w	8006ed6 <HAL_RCC_OscConfig+0x15a>
          if ((HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
 8006fda:	f7fc ffc3 	bl	8003f64 <HAL_GetTick>
 8006fde:	1b40      	subs	r0, r0, r5
 8006fe0:	2864      	cmp	r0, #100	@ 0x64
 8006fe2:	d9f5      	bls.n	8006fd0 <HAL_RCC_OscConfig+0x254>
 8006fe4:	e7b6      	b.n	8006f54 <HAL_RCC_OscConfig+0x1d8>
      __HAL_RCC_HSE_CONFIG(pRCC_OscInitStruct->HSEState);
 8006fe6:	f5b3 2fa0 	cmp.w	r3, #327680	@ 0x50000
 8006fea:	d108      	bne.n	8006ffe <HAL_RCC_OscConfig+0x282>
 8006fec:	682b      	ldr	r3, [r5, #0]
 8006fee:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 8006ff2:	602b      	str	r3, [r5, #0]
 8006ff4:	682b      	ldr	r3, [r5, #0]
 8006ff6:	f423 1380 	bic.w	r3, r3, #1048576	@ 0x100000
 8006ffa:	602b      	str	r3, [r5, #0]
 8006ffc:	e7df      	b.n	8006fbe <HAL_RCC_OscConfig+0x242>
 8006ffe:	f5b3 1fa8 	cmp.w	r3, #1376256	@ 0x150000
 8007002:	d10d      	bne.n	8007020 <HAL_RCC_OscConfig+0x2a4>
 8007004:	682b      	ldr	r3, [r5, #0]
 8007006:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 800700a:	602b      	str	r3, [r5, #0]
 800700c:	682b      	ldr	r3, [r5, #0]
 800700e:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 8007012:	e7f2      	b.n	8006ffa <HAL_RCC_OscConfig+0x27e>
 8007014:	46020c00 	.word	0x46020c00
 8007018:	20000054 	.word	0x20000054
 800701c:	46020800 	.word	0x46020800
 8007020:	682a      	ldr	r2, [r5, #0]
 8007022:	f422 3280 	bic.w	r2, r2, #65536	@ 0x10000
 8007026:	602a      	str	r2, [r5, #0]
 8007028:	682a      	ldr	r2, [r5, #0]
 800702a:	f422 2280 	bic.w	r2, r2, #262144	@ 0x40000
 800702e:	602a      	str	r2, [r5, #0]
 8007030:	682a      	ldr	r2, [r5, #0]
 8007032:	f422 1280 	bic.w	r2, r2, #1048576	@ 0x100000
 8007036:	602a      	str	r2, [r5, #0]
      if (pRCC_OscInitStruct->HSEState != RCC_HSE_OFF)
 8007038:	2b00      	cmp	r3, #0
 800703a:	d1c4      	bne.n	8006fc6 <HAL_RCC_OscConfig+0x24a>
        tickstart = HAL_GetTick();
 800703c:	f7fc ff92 	bl	8003f64 <HAL_GetTick>
 8007040:	4680      	mov	r8, r0
        while (READ_BIT(RCC->CR, RCC_CR_HSERDY) != 0U)
 8007042:	682b      	ldr	r3, [r5, #0]
 8007044:	039a      	lsls	r2, r3, #14
 8007046:	f57f af46 	bpl.w	8006ed6 <HAL_RCC_OscConfig+0x15a>
          if ((HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
 800704a:	f7fc ff8b 	bl	8003f64 <HAL_GetTick>
 800704e:	eba0 0008 	sub.w	r0, r0, r8
 8007052:	2864      	cmp	r0, #100	@ 0x64
 8007054:	d9f5      	bls.n	8007042 <HAL_RCC_OscConfig+0x2c6>
 8007056:	e77d      	b.n	8006f54 <HAL_RCC_OscConfig+0x1d8>
    if ((sysclk_source == RCC_SYSCLKSOURCE_STATUS_HSI) ||
 8007058:	2e04      	cmp	r6, #4
 800705a:	68e3      	ldr	r3, [r4, #12]
 800705c:	d003      	beq.n	8007066 <HAL_RCC_OscConfig+0x2ea>
 800705e:	2e0c      	cmp	r6, #12
 8007060:	d10d      	bne.n	800707e <HAL_RCC_OscConfig+0x302>
        ((sysclk_source == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (pll_config == RCC_PLLSOURCE_HSI)))
 8007062:	2f02      	cmp	r7, #2
 8007064:	d10b      	bne.n	800707e <HAL_RCC_OscConfig+0x302>
      if (pRCC_OscInitStruct->HSIState == RCC_HSI_OFF)
 8007066:	2b00      	cmp	r3, #0
 8007068:	f43f aec7 	beq.w	8006dfa <HAL_RCC_OscConfig+0x7e>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(pRCC_OscInitStruct->HSICalibrationValue);
 800706c:	4aa9      	ldr	r2, [pc, #676]	@ (8007314 <HAL_RCC_OscConfig+0x598>)
 800706e:	6921      	ldr	r1, [r4, #16]
 8007070:	6913      	ldr	r3, [r2, #16]
 8007072:	f423 13f8 	bic.w	r3, r3, #2031616	@ 0x1f0000
 8007076:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 800707a:	6113      	str	r3, [r2, #16]
      if (pRCC_OscInitStruct->HSIState == RCC_HSI_OFF)
 800707c:	e72f      	b.n	8006ede <HAL_RCC_OscConfig+0x162>
      if (pRCC_OscInitStruct->HSIState != RCC_HSI_OFF)
 800707e:	4da5      	ldr	r5, [pc, #660]	@ (8007314 <HAL_RCC_OscConfig+0x598>)
 8007080:	b1bb      	cbz	r3, 80070b2 <HAL_RCC_OscConfig+0x336>
        __HAL_RCC_HSI_ENABLE();
 8007082:	682b      	ldr	r3, [r5, #0]
 8007084:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8007088:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
 800708a:	f7fc ff6b 	bl	8003f64 <HAL_GetTick>
 800708e:	4606      	mov	r6, r0
        while (READ_BIT(RCC->CR, RCC_CR_HSIRDY) == 0U)
 8007090:	682b      	ldr	r3, [r5, #0]
 8007092:	055b      	lsls	r3, r3, #21
 8007094:	d507      	bpl.n	80070a6 <HAL_RCC_OscConfig+0x32a>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(pRCC_OscInitStruct->HSICalibrationValue);
 8007096:	692b      	ldr	r3, [r5, #16]
 8007098:	6922      	ldr	r2, [r4, #16]
 800709a:	f423 13f8 	bic.w	r3, r3, #2031616	@ 0x1f0000
 800709e:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 80070a2:	612b      	str	r3, [r5, #16]
 80070a4:	e71b      	b.n	8006ede <HAL_RCC_OscConfig+0x162>
          if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
 80070a6:	f7fc ff5d 	bl	8003f64 <HAL_GetTick>
 80070aa:	1b80      	subs	r0, r0, r6
 80070ac:	2802      	cmp	r0, #2
 80070ae:	d9ef      	bls.n	8007090 <HAL_RCC_OscConfig+0x314>
 80070b0:	e750      	b.n	8006f54 <HAL_RCC_OscConfig+0x1d8>
        __HAL_RCC_HSI_DISABLE();
 80070b2:	682b      	ldr	r3, [r5, #0]
 80070b4:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 80070b8:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
 80070ba:	f7fc ff53 	bl	8003f64 <HAL_GetTick>
 80070be:	4606      	mov	r6, r0
        while (READ_BIT(RCC->CR, RCC_CR_HSIRDY) != 0U)
 80070c0:	682b      	ldr	r3, [r5, #0]
 80070c2:	055f      	lsls	r7, r3, #21
 80070c4:	f57f af0b 	bpl.w	8006ede <HAL_RCC_OscConfig+0x162>
          if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
 80070c8:	f7fc ff4c 	bl	8003f64 <HAL_GetTick>
 80070cc:	1b80      	subs	r0, r0, r6
 80070ce:	2802      	cmp	r0, #2
 80070d0:	d9f6      	bls.n	80070c0 <HAL_RCC_OscConfig+0x344>
 80070d2:	e73f      	b.n	8006f54 <HAL_RCC_OscConfig+0x1d8>
    FlagStatus  pwrclkchanged = RESET;
 80070d4:	2700      	movs	r7, #0
 80070d6:	e719      	b.n	8006f0c <HAL_RCC_OscConfig+0x190>
      SET_BIT(PWR->DBPR, PWR_DBPR_DBP);
 80070d8:	6aab      	ldr	r3, [r5, #40]	@ 0x28
 80070da:	f043 0301 	orr.w	r3, r3, #1
 80070de:	62ab      	str	r3, [r5, #40]	@ 0x28
      tickstart = HAL_GetTick();
 80070e0:	f7fc ff40 	bl	8003f64 <HAL_GetTick>
 80070e4:	4606      	mov	r6, r0
      while (HAL_IS_BIT_CLR(PWR->DBPR, PWR_DBPR_DBP))
 80070e6:	6aab      	ldr	r3, [r5, #40]	@ 0x28
 80070e8:	07db      	lsls	r3, r3, #31
 80070ea:	f53f af14 	bmi.w	8006f16 <HAL_RCC_OscConfig+0x19a>
        if ((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 80070ee:	f7fc ff39 	bl	8003f64 <HAL_GetTick>
 80070f2:	1b80      	subs	r0, r0, r6
 80070f4:	2802      	cmp	r0, #2
 80070f6:	d9f6      	bls.n	80070e6 <HAL_RCC_OscConfig+0x36a>
 80070f8:	e72c      	b.n	8006f54 <HAL_RCC_OscConfig+0x1d8>
      uint32_t bdcr_temp = RCC->BDCR;
 80070fa:	f8d5 30f0 	ldr.w	r3, [r5, #240]	@ 0xf0
      if (pRCC_OscInitStruct->LSIDiv != (bdcr_temp & RCC_BDCR_LSIPREDIV))
 80070fe:	69a1      	ldr	r1, [r4, #24]
 8007100:	f003 5280 	and.w	r2, r3, #268435456	@ 0x10000000
 8007104:	4291      	cmp	r1, r2
 8007106:	d010      	beq.n	800712a <HAL_RCC_OscConfig+0x3ae>
        if (((bdcr_temp & RCC_BDCR_LSIRDY) == RCC_BDCR_LSIRDY) && \
 8007108:	f003 6240 	and.w	r2, r3, #201326592	@ 0xc000000
 800710c:	f1b2 6f00 	cmp.w	r2, #134217728	@ 0x8000000
 8007110:	f43f ae73 	beq.w	8006dfa <HAL_RCC_OscConfig+0x7e>
        if ((bdcr_temp & RCC_BDCR_LSION) == RCC_BDCR_LSION)
 8007114:	0158      	lsls	r0, r3, #5
 8007116:	d46c      	bmi.n	80071f2 <HAL_RCC_OscConfig+0x476>
        MODIFY_REG(RCC->BDCR, RCC_BDCR_LSIPREDIV, pRCC_OscInitStruct->LSIDiv);
 8007118:	4a7e      	ldr	r2, [pc, #504]	@ (8007314 <HAL_RCC_OscConfig+0x598>)
 800711a:	69a1      	ldr	r1, [r4, #24]
 800711c:	f8d2 30f0 	ldr.w	r3, [r2, #240]	@ 0xf0
 8007120:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 8007124:	430b      	orrs	r3, r1
 8007126:	f8c2 30f0 	str.w	r3, [r2, #240]	@ 0xf0
      __HAL_RCC_LSI_ENABLE();
 800712a:	4d7a      	ldr	r5, [pc, #488]	@ (8007314 <HAL_RCC_OscConfig+0x598>)
 800712c:	f8d5 30f0 	ldr.w	r3, [r5, #240]	@ 0xf0
 8007130:	f043 6380 	orr.w	r3, r3, #67108864	@ 0x4000000
 8007134:	f8c5 30f0 	str.w	r3, [r5, #240]	@ 0xf0
      tickstart = HAL_GetTick();
 8007138:	f7fc ff14 	bl	8003f64 <HAL_GetTick>
 800713c:	4606      	mov	r6, r0
      while (READ_BIT(RCC->BDCR, RCC_BDCR_LSIRDY) == 0U)
 800713e:	f8d5 30f0 	ldr.w	r3, [r5, #240]	@ 0xf0
 8007142:	011a      	lsls	r2, r3, #4
 8007144:	d568      	bpl.n	8007218 <HAL_RCC_OscConfig+0x49c>
    if (pwrclkchanged == SET)
 8007146:	b137      	cbz	r7, 8007156 <HAL_RCC_OscConfig+0x3da>
      __HAL_RCC_PWR_CLK_DISABLE();
 8007148:	4a72      	ldr	r2, [pc, #456]	@ (8007314 <HAL_RCC_OscConfig+0x598>)
 800714a:	f8d2 3094 	ldr.w	r3, [r2, #148]	@ 0x94
 800714e:	f023 0304 	bic.w	r3, r3, #4
 8007152:	f8c2 3094 	str.w	r3, [r2, #148]	@ 0x94
  if (((pRCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 8007156:	6823      	ldr	r3, [r4, #0]
 8007158:	075d      	lsls	r5, r3, #29
 800715a:	f140 80a7 	bpl.w	80072ac <HAL_RCC_OscConfig+0x530>
    if (__HAL_RCC_PWR_IS_CLK_DISABLED())
 800715e:	4b6d      	ldr	r3, [pc, #436]	@ (8007314 <HAL_RCC_OscConfig+0x598>)
 8007160:	f8d3 2094 	ldr.w	r2, [r3, #148]	@ 0x94
 8007164:	0750      	lsls	r0, r2, #29
 8007166:	d45d      	bmi.n	8007224 <HAL_RCC_OscConfig+0x4a8>
      pwrclkchanged = SET;
 8007168:	2701      	movs	r7, #1
      __HAL_RCC_PWR_CLK_ENABLE();
 800716a:	f8d3 2094 	ldr.w	r2, [r3, #148]	@ 0x94
 800716e:	f042 0204 	orr.w	r2, r2, #4
 8007172:	f8c3 2094 	str.w	r2, [r3, #148]	@ 0x94
 8007176:	f8d3 3094 	ldr.w	r3, [r3, #148]	@ 0x94
 800717a:	f003 0304 	and.w	r3, r3, #4
 800717e:	9302      	str	r3, [sp, #8]
 8007180:	9b02      	ldr	r3, [sp, #8]
    if (HAL_IS_BIT_CLR(PWR->DBPR, PWR_DBPR_DBP))
 8007182:	4d65      	ldr	r5, [pc, #404]	@ (8007318 <HAL_RCC_OscConfig+0x59c>)
 8007184:	6aab      	ldr	r3, [r5, #40]	@ 0x28
 8007186:	07d9      	lsls	r1, r3, #31
 8007188:	d54e      	bpl.n	8007228 <HAL_RCC_OscConfig+0x4ac>
    if ((pRCC_OscInitStruct->LSEState & RCC_BDCR_LSEON) != 0U)
 800718a:	68a3      	ldr	r3, [r4, #8]
 800718c:	4d61      	ldr	r5, [pc, #388]	@ (8007314 <HAL_RCC_OscConfig+0x598>)
 800718e:	f013 0f01 	tst.w	r3, #1
 8007192:	d159      	bne.n	8007248 <HAL_RCC_OscConfig+0x4cc>
      CLEAR_BIT(RCC->BDCR, RCC_BDCR_LSEON);
 8007194:	f8d5 20f0 	ldr.w	r2, [r5, #240]	@ 0xf0
 8007198:	f022 0201 	bic.w	r2, r2, #1
 800719c:	f8c5 20f0 	str.w	r2, [r5, #240]	@ 0xf0
      CLEAR_BIT(RCC->BDCR, RCC_BDCR_LSEBYP);
 80071a0:	f8d5 20f0 	ldr.w	r2, [r5, #240]	@ 0xf0
 80071a4:	f022 0204 	bic.w	r2, r2, #4
 80071a8:	f8c5 20f0 	str.w	r2, [r5, #240]	@ 0xf0
    if (pRCC_OscInitStruct->LSEState != RCC_LSE_OFF)
 80071ac:	2b00      	cmp	r3, #0
 80071ae:	d15a      	bne.n	8007266 <HAL_RCC_OscConfig+0x4ea>
      tickstart = HAL_GetTick();
 80071b0:	f7fc fed8 	bl	8003f64 <HAL_GetTick>
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 80071b4:	f241 3888 	movw	r8, #5000	@ 0x1388
      tickstart = HAL_GetTick();
 80071b8:	4606      	mov	r6, r0
      while (READ_BIT(RCC->BDCR, RCC_BDCR_LSERDY) != 0U)
 80071ba:	f8d5 30f0 	ldr.w	r3, [r5, #240]	@ 0xf0
 80071be:	079a      	lsls	r2, r3, #30
 80071c0:	f100 80a0 	bmi.w	8007304 <HAL_RCC_OscConfig+0x588>
      if (READ_BIT(RCC->BDCR, RCC_BDCR_LSESYSEN) != 0U)
 80071c4:	f8d5 30f0 	ldr.w	r3, [r5, #240]	@ 0xf0
 80071c8:	061b      	lsls	r3, r3, #24
 80071ca:	d567      	bpl.n	800729c <HAL_RCC_OscConfig+0x520>
          if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 80071cc:	f241 3888 	movw	r8, #5000	@ 0x1388
        CLEAR_BIT(RCC->BDCR, RCC_BDCR_LSESYSEN);
 80071d0:	f8d5 30f0 	ldr.w	r3, [r5, #240]	@ 0xf0
 80071d4:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 80071d8:	f8c5 30f0 	str.w	r3, [r5, #240]	@ 0xf0
        while (READ_BIT(RCC->BDCR, RCC_BDCR_LSESYSRDY) != 0U)
 80071dc:	4d4d      	ldr	r5, [pc, #308]	@ (8007314 <HAL_RCC_OscConfig+0x598>)
 80071de:	f8d5 30f0 	ldr.w	r3, [r5, #240]	@ 0xf0
 80071e2:	0518      	lsls	r0, r3, #20
 80071e4:	d55a      	bpl.n	800729c <HAL_RCC_OscConfig+0x520>
          if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 80071e6:	f7fc febd 	bl	8003f64 <HAL_GetTick>
 80071ea:	1b80      	subs	r0, r0, r6
 80071ec:	4540      	cmp	r0, r8
 80071ee:	d9f6      	bls.n	80071de <HAL_RCC_OscConfig+0x462>
 80071f0:	e6b0      	b.n	8006f54 <HAL_RCC_OscConfig+0x1d8>
          __HAL_RCC_LSI_DISABLE();
 80071f2:	f8d5 30f0 	ldr.w	r3, [r5, #240]	@ 0xf0
 80071f6:	f023 53a0 	bic.w	r3, r3, #335544320	@ 0x14000000
 80071fa:	f8c5 30f0 	str.w	r3, [r5, #240]	@ 0xf0
          tickstart = HAL_GetTick();
 80071fe:	f7fc feb1 	bl	8003f64 <HAL_GetTick>
 8007202:	4606      	mov	r6, r0
          while (READ_BIT(RCC->BDCR, RCC_BDCR_LSIRDY) != 0U)
 8007204:	f8d5 30f0 	ldr.w	r3, [r5, #240]	@ 0xf0
 8007208:	0119      	lsls	r1, r3, #4
 800720a:	d585      	bpl.n	8007118 <HAL_RCC_OscConfig+0x39c>
            if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
 800720c:	f7fc feaa 	bl	8003f64 <HAL_GetTick>
 8007210:	1b80      	subs	r0, r0, r6
 8007212:	2805      	cmp	r0, #5
 8007214:	d9f6      	bls.n	8007204 <HAL_RCC_OscConfig+0x488>
 8007216:	e69d      	b.n	8006f54 <HAL_RCC_OscConfig+0x1d8>
        if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
 8007218:	f7fc fea4 	bl	8003f64 <HAL_GetTick>
 800721c:	1b80      	subs	r0, r0, r6
 800721e:	2805      	cmp	r0, #5
 8007220:	d98d      	bls.n	800713e <HAL_RCC_OscConfig+0x3c2>
 8007222:	e697      	b.n	8006f54 <HAL_RCC_OscConfig+0x1d8>
    FlagStatus pwrclkchanged = RESET;
 8007224:	2700      	movs	r7, #0
 8007226:	e7ac      	b.n	8007182 <HAL_RCC_OscConfig+0x406>
      SET_BIT(PWR->DBPR, PWR_DBPR_DBP);
 8007228:	6aab      	ldr	r3, [r5, #40]	@ 0x28
 800722a:	f043 0301 	orr.w	r3, r3, #1
 800722e:	62ab      	str	r3, [r5, #40]	@ 0x28
      tickstart = HAL_GetTick();
 8007230:	f7fc fe98 	bl	8003f64 <HAL_GetTick>
 8007234:	4606      	mov	r6, r0
      while (HAL_IS_BIT_CLR(PWR->DBPR, PWR_DBPR_DBP))
 8007236:	6aab      	ldr	r3, [r5, #40]	@ 0x28
 8007238:	07da      	lsls	r2, r3, #31
 800723a:	d4a6      	bmi.n	800718a <HAL_RCC_OscConfig+0x40e>
        if ((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 800723c:	f7fc fe92 	bl	8003f64 <HAL_GetTick>
 8007240:	1b80      	subs	r0, r0, r6
 8007242:	2802      	cmp	r0, #2
 8007244:	d9f7      	bls.n	8007236 <HAL_RCC_OscConfig+0x4ba>
 8007246:	e685      	b.n	8006f54 <HAL_RCC_OscConfig+0x1d8>
      if ((pRCC_OscInitStruct->LSEState & RCC_BDCR_LSEBYP) != 0U)
 8007248:	f013 0f04 	tst.w	r3, #4
        SET_BIT(RCC->BDCR, RCC_BDCR_LSEBYP);
 800724c:	f8d5 30f0 	ldr.w	r3, [r5, #240]	@ 0xf0
 8007250:	bf1e      	ittt	ne
 8007252:	f043 0304 	orrne.w	r3, r3, #4
 8007256:	f8c5 30f0 	strne.w	r3, [r5, #240]	@ 0xf0
        SET_BIT(RCC->BDCR, RCC_BDCR_LSEON);
 800725a:	f8d5 30f0 	ldrne.w	r3, [r5, #240]	@ 0xf0
        SET_BIT(RCC->BDCR, RCC_BDCR_LSEON);
 800725e:	f043 0301 	orr.w	r3, r3, #1
 8007262:	f8c5 30f0 	str.w	r3, [r5, #240]	@ 0xf0
      tickstart = HAL_GetTick();
 8007266:	f7fc fe7d 	bl	8003f64 <HAL_GetTick>
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 800726a:	f241 3888 	movw	r8, #5000	@ 0x1388
      tickstart = HAL_GetTick();
 800726e:	4605      	mov	r5, r0
      while (READ_BIT(RCC->BDCR, RCC_BDCR_LSERDY) == 0U)
 8007270:	4e28      	ldr	r6, [pc, #160]	@ (8007314 <HAL_RCC_OscConfig+0x598>)
 8007272:	f8d6 30f0 	ldr.w	r3, [r6, #240]	@ 0xf0
 8007276:	079b      	lsls	r3, r3, #30
 8007278:	d527      	bpl.n	80072ca <HAL_RCC_OscConfig+0x54e>
      if ((pRCC_OscInitStruct->LSEState & RCC_BDCR_LSESYSEN) != 0U)
 800727a:	68a3      	ldr	r3, [r4, #8]
 800727c:	f013 0f80 	tst.w	r3, #128	@ 0x80
        SET_BIT(RCC->BDCR, RCC_BDCR_LSESYSEN);
 8007280:	f8d6 30f0 	ldr.w	r3, [r6, #240]	@ 0xf0
      if ((pRCC_OscInitStruct->LSEState & RCC_BDCR_LSESYSEN) != 0U)
 8007284:	d02d      	beq.n	80072e2 <HAL_RCC_OscConfig+0x566>
          if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8007286:	f241 3888 	movw	r8, #5000	@ 0x1388
        SET_BIT(RCC->BDCR, RCC_BDCR_LSESYSEN);
 800728a:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 800728e:	f8c6 30f0 	str.w	r3, [r6, #240]	@ 0xf0
        while (READ_BIT(RCC->BDCR, RCC_BDCR_LSESYSRDY) == 0U)
 8007292:	4e20      	ldr	r6, [pc, #128]	@ (8007314 <HAL_RCC_OscConfig+0x598>)
 8007294:	f8d6 30f0 	ldr.w	r3, [r6, #240]	@ 0xf0
 8007298:	0518      	lsls	r0, r3, #20
 800729a:	d51c      	bpl.n	80072d6 <HAL_RCC_OscConfig+0x55a>
    if (pwrclkchanged == SET)
 800729c:	b137      	cbz	r7, 80072ac <HAL_RCC_OscConfig+0x530>
      __HAL_RCC_PWR_CLK_DISABLE();
 800729e:	4a1d      	ldr	r2, [pc, #116]	@ (8007314 <HAL_RCC_OscConfig+0x598>)
 80072a0:	f8d2 3094 	ldr.w	r3, [r2, #148]	@ 0x94
 80072a4:	f023 0304 	bic.w	r3, r3, #4
 80072a8:	f8c2 3094 	str.w	r3, [r2, #148]	@ 0x94
  if (((pRCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI48) == RCC_OSCILLATORTYPE_HSI48)
 80072ac:	6823      	ldr	r3, [r4, #0]
 80072ae:	0699      	lsls	r1, r3, #26
 80072b0:	d434      	bmi.n	800731c <HAL_RCC_OscConfig+0x5a0>
  if (((pRCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_SHSI) == RCC_OSCILLATORTYPE_SHSI)
 80072b2:	6823      	ldr	r3, [r4, #0]
 80072b4:	061a      	lsls	r2, r3, #24
 80072b6:	d454      	bmi.n	8007362 <HAL_RCC_OscConfig+0x5e6>
  if (((pRCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_MSIK) == RCC_OSCILLATORTYPE_MSIK)
 80072b8:	6823      	ldr	r3, [r4, #0]
 80072ba:	0658      	lsls	r0, r3, #25
 80072bc:	d474      	bmi.n	80073a8 <HAL_RCC_OscConfig+0x62c>
  if ((pRCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 80072be:	6ba1      	ldr	r1, [r4, #56]	@ 0x38
 80072c0:	2900      	cmp	r1, #0
 80072c2:	f040 80c1 	bne.w	8007448 <HAL_RCC_OscConfig+0x6cc>
  return HAL_OK;
 80072c6:	2000      	movs	r0, #0
 80072c8:	e5a6      	b.n	8006e18 <HAL_RCC_OscConfig+0x9c>
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 80072ca:	f7fc fe4b 	bl	8003f64 <HAL_GetTick>
 80072ce:	1b40      	subs	r0, r0, r5
 80072d0:	4540      	cmp	r0, r8
 80072d2:	d9ce      	bls.n	8007272 <HAL_RCC_OscConfig+0x4f6>
 80072d4:	e63e      	b.n	8006f54 <HAL_RCC_OscConfig+0x1d8>
          if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 80072d6:	f7fc fe45 	bl	8003f64 <HAL_GetTick>
 80072da:	1b40      	subs	r0, r0, r5
 80072dc:	4540      	cmp	r0, r8
 80072de:	d9d9      	bls.n	8007294 <HAL_RCC_OscConfig+0x518>
 80072e0:	e638      	b.n	8006f54 <HAL_RCC_OscConfig+0x1d8>
          if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 80072e2:	f241 3888 	movw	r8, #5000	@ 0x1388
        CLEAR_BIT(RCC->BDCR, RCC_BDCR_LSESYSEN);
 80072e6:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 80072ea:	f8c6 30f0 	str.w	r3, [r6, #240]	@ 0xf0
        while (READ_BIT(RCC->BDCR, RCC_BDCR_LSESYSRDY) != 0U)
 80072ee:	4e09      	ldr	r6, [pc, #36]	@ (8007314 <HAL_RCC_OscConfig+0x598>)
 80072f0:	f8d6 30f0 	ldr.w	r3, [r6, #240]	@ 0xf0
 80072f4:	0519      	lsls	r1, r3, #20
 80072f6:	d5d1      	bpl.n	800729c <HAL_RCC_OscConfig+0x520>
          if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 80072f8:	f7fc fe34 	bl	8003f64 <HAL_GetTick>
 80072fc:	1b40      	subs	r0, r0, r5
 80072fe:	4540      	cmp	r0, r8
 8007300:	d9f6      	bls.n	80072f0 <HAL_RCC_OscConfig+0x574>
 8007302:	e627      	b.n	8006f54 <HAL_RCC_OscConfig+0x1d8>
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8007304:	f7fc fe2e 	bl	8003f64 <HAL_GetTick>
 8007308:	1b80      	subs	r0, r0, r6
 800730a:	4540      	cmp	r0, r8
 800730c:	f67f af55 	bls.w	80071ba <HAL_RCC_OscConfig+0x43e>
 8007310:	e620      	b.n	8006f54 <HAL_RCC_OscConfig+0x1d8>
 8007312:	bf00      	nop
 8007314:	46020c00 	.word	0x46020c00
 8007318:	46020800 	.word	0x46020800
    if (pRCC_OscInitStruct->HSI48State != RCC_HSI48_OFF)
 800731c:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 800731e:	4d9b      	ldr	r5, [pc, #620]	@ (800758c <HAL_RCC_OscConfig+0x810>)
 8007320:	b17b      	cbz	r3, 8007342 <HAL_RCC_OscConfig+0x5c6>
      __HAL_RCC_HSI48_ENABLE();
 8007322:	682b      	ldr	r3, [r5, #0]
 8007324:	f443 5380 	orr.w	r3, r3, #4096	@ 0x1000
 8007328:	602b      	str	r3, [r5, #0]
      tickstart = HAL_GetTick();
 800732a:	f7fc fe1b 	bl	8003f64 <HAL_GetTick>
 800732e:	4606      	mov	r6, r0
      while (READ_BIT(RCC->CR, RCC_CR_HSI48RDY) == 0U)
 8007330:	682b      	ldr	r3, [r5, #0]
 8007332:	049b      	lsls	r3, r3, #18
 8007334:	d4bd      	bmi.n	80072b2 <HAL_RCC_OscConfig+0x536>
        if ((HAL_GetTick() - tickstart) > HSI48_TIMEOUT_VALUE)
 8007336:	f7fc fe15 	bl	8003f64 <HAL_GetTick>
 800733a:	1b80      	subs	r0, r0, r6
 800733c:	2802      	cmp	r0, #2
 800733e:	d9f7      	bls.n	8007330 <HAL_RCC_OscConfig+0x5b4>
 8007340:	e608      	b.n	8006f54 <HAL_RCC_OscConfig+0x1d8>
      __HAL_RCC_HSI48_DISABLE();
 8007342:	682b      	ldr	r3, [r5, #0]
 8007344:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 8007348:	602b      	str	r3, [r5, #0]
      tickstart = HAL_GetTick();
 800734a:	f7fc fe0b 	bl	8003f64 <HAL_GetTick>
 800734e:	4606      	mov	r6, r0
      while (READ_BIT(RCC->CR, RCC_CR_HSI48RDY) != 0U)
 8007350:	682b      	ldr	r3, [r5, #0]
 8007352:	049f      	lsls	r7, r3, #18
 8007354:	d5ad      	bpl.n	80072b2 <HAL_RCC_OscConfig+0x536>
        if ((HAL_GetTick() - tickstart) > HSI48_TIMEOUT_VALUE)
 8007356:	f7fc fe05 	bl	8003f64 <HAL_GetTick>
 800735a:	1b80      	subs	r0, r0, r6
 800735c:	2802      	cmp	r0, #2
 800735e:	d9f7      	bls.n	8007350 <HAL_RCC_OscConfig+0x5d4>
 8007360:	e5f8      	b.n	8006f54 <HAL_RCC_OscConfig+0x1d8>
    if (pRCC_OscInitStruct->SHSIState != RCC_SHSI_OFF)
 8007362:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8007364:	4d89      	ldr	r5, [pc, #548]	@ (800758c <HAL_RCC_OscConfig+0x810>)
 8007366:	b17b      	cbz	r3, 8007388 <HAL_RCC_OscConfig+0x60c>
      __HAL_RCC_SHSI_ENABLE();
 8007368:	682b      	ldr	r3, [r5, #0]
 800736a:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 800736e:	602b      	str	r3, [r5, #0]
      tickstart = HAL_GetTick();
 8007370:	f7fc fdf8 	bl	8003f64 <HAL_GetTick>
 8007374:	4606      	mov	r6, r0
      while (READ_BIT(RCC->CR, RCC_CR_SHSIRDY) == 0U)
 8007376:	682b      	ldr	r3, [r5, #0]
 8007378:	0419      	lsls	r1, r3, #16
 800737a:	d49d      	bmi.n	80072b8 <HAL_RCC_OscConfig+0x53c>
        if ((HAL_GetTick() - tickstart) > SHSI_TIMEOUT_VALUE)
 800737c:	f7fc fdf2 	bl	8003f64 <HAL_GetTick>
 8007380:	1b80      	subs	r0, r0, r6
 8007382:	2802      	cmp	r0, #2
 8007384:	d9f7      	bls.n	8007376 <HAL_RCC_OscConfig+0x5fa>
 8007386:	e5e5      	b.n	8006f54 <HAL_RCC_OscConfig+0x1d8>
      __HAL_RCC_SHSI_DISABLE();
 8007388:	682b      	ldr	r3, [r5, #0]
 800738a:	f423 4380 	bic.w	r3, r3, #16384	@ 0x4000
 800738e:	602b      	str	r3, [r5, #0]
      tickstart = HAL_GetTick();
 8007390:	f7fc fde8 	bl	8003f64 <HAL_GetTick>
 8007394:	4606      	mov	r6, r0
      while (READ_BIT(RCC->CR, RCC_CR_SHSIRDY) != 0U)
 8007396:	682b      	ldr	r3, [r5, #0]
 8007398:	041a      	lsls	r2, r3, #16
 800739a:	d58d      	bpl.n	80072b8 <HAL_RCC_OscConfig+0x53c>
        if ((HAL_GetTick() - tickstart) > SHSI_TIMEOUT_VALUE)
 800739c:	f7fc fde2 	bl	8003f64 <HAL_GetTick>
 80073a0:	1b80      	subs	r0, r0, r6
 80073a2:	2802      	cmp	r0, #2
 80073a4:	d9f7      	bls.n	8007396 <HAL_RCC_OscConfig+0x61a>
 80073a6:	e5d5      	b.n	8006f54 <HAL_RCC_OscConfig+0x1d8>
    if (pRCC_OscInitStruct->MSIKState != RCC_MSIK_OFF)
 80073a8:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 80073aa:	4d78      	ldr	r5, [pc, #480]	@ (800758c <HAL_RCC_OscConfig+0x810>)
 80073ac:	2b00      	cmp	r3, #0
 80073ae:	d03a      	beq.n	8007426 <HAL_RCC_OscConfig+0x6aa>
      __HAL_RCC_MSIK_RANGE_CONFIG(pRCC_OscInitStruct->MSIKClockRange);
 80073b0:	68ab      	ldr	r3, [r5, #8]
 80073b2:	f443 0300 	orr.w	r3, r3, #8388608	@ 0x800000
 80073b6:	60ab      	str	r3, [r5, #8]
 80073b8:	68ab      	ldr	r3, [r5, #8]
 80073ba:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
 80073bc:	f023 6370 	bic.w	r3, r3, #251658240	@ 0xf000000
 80073c0:	4313      	orrs	r3, r2
 80073c2:	60ab      	str	r3, [r5, #8]
      __HAL_RCC_MSI_CALIBRATIONVALUE_ADJUST((pRCC_OscInitStruct->MSICalibrationValue), \
 80073c4:	e9d4 2308 	ldrd	r2, r3, [r4, #32]
 80073c8:	f1b3 4f40 	cmp.w	r3, #3221225472	@ 0xc0000000
 80073cc:	d316      	bcc.n	80073fc <HAL_RCC_OscConfig+0x680>
 80073ce:	68eb      	ldr	r3, [r5, #12]
 80073d0:	f023 031f 	bic.w	r3, r3, #31
 80073d4:	4313      	orrs	r3, r2
 80073d6:	60eb      	str	r3, [r5, #12]
      __HAL_RCC_MSIK_ENABLE();
 80073d8:	4d6c      	ldr	r5, [pc, #432]	@ (800758c <HAL_RCC_OscConfig+0x810>)
 80073da:	682b      	ldr	r3, [r5, #0]
 80073dc:	f043 0310 	orr.w	r3, r3, #16
 80073e0:	602b      	str	r3, [r5, #0]
      tickstart = HAL_GetTick();
 80073e2:	f7fc fdbf 	bl	8003f64 <HAL_GetTick>
 80073e6:	4606      	mov	r6, r0
      while (READ_BIT(RCC->CR, RCC_CR_MSIKRDY) == 0U)
 80073e8:	682b      	ldr	r3, [r5, #0]
 80073ea:	069b      	lsls	r3, r3, #26
 80073ec:	f53f af67 	bmi.w	80072be <HAL_RCC_OscConfig+0x542>
        if ((HAL_GetTick() - tickstart) > MSIK_TIMEOUT_VALUE)
 80073f0:	f7fc fdb8 	bl	8003f64 <HAL_GetTick>
 80073f4:	1b80      	subs	r0, r0, r6
 80073f6:	2802      	cmp	r0, #2
 80073f8:	d9f6      	bls.n	80073e8 <HAL_RCC_OscConfig+0x66c>
 80073fa:	e5ab      	b.n	8006f54 <HAL_RCC_OscConfig+0x1d8>
      __HAL_RCC_MSI_CALIBRATIONVALUE_ADJUST((pRCC_OscInitStruct->MSICalibrationValue), \
 80073fc:	2b00      	cmp	r3, #0
 80073fe:	da05      	bge.n	800740c <HAL_RCC_OscConfig+0x690>
 8007400:	68eb      	ldr	r3, [r5, #12]
 8007402:	f423 7378 	bic.w	r3, r3, #992	@ 0x3e0
 8007406:	ea43 1342 	orr.w	r3, r3, r2, lsl #5
 800740a:	e7e4      	b.n	80073d6 <HAL_RCC_OscConfig+0x65a>
 800740c:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8007410:	68eb      	ldr	r3, [r5, #12]
 8007412:	bf2b      	itete	cs
 8007414:	f423 43f8 	biccs.w	r3, r3, #31744	@ 0x7c00
 8007418:	f423 2378 	biccc.w	r3, r3, #1015808	@ 0xf8000
 800741c:	ea43 2382 	orrcs.w	r3, r3, r2, lsl #10
 8007420:	ea43 33c2 	orrcc.w	r3, r3, r2, lsl #15
 8007424:	e7d7      	b.n	80073d6 <HAL_RCC_OscConfig+0x65a>
      __HAL_RCC_MSIK_DISABLE();
 8007426:	682b      	ldr	r3, [r5, #0]
 8007428:	f023 0310 	bic.w	r3, r3, #16
 800742c:	602b      	str	r3, [r5, #0]
      tickstart = HAL_GetTick();
 800742e:	f7fc fd99 	bl	8003f64 <HAL_GetTick>
 8007432:	4606      	mov	r6, r0
      while (READ_BIT(RCC->CR, RCC_CR_MSIKRDY) != 0U)
 8007434:	682b      	ldr	r3, [r5, #0]
 8007436:	069f      	lsls	r7, r3, #26
 8007438:	f57f af41 	bpl.w	80072be <HAL_RCC_OscConfig+0x542>
        if ((HAL_GetTick() - tickstart) > MSIK_TIMEOUT_VALUE)
 800743c:	f7fc fd92 	bl	8003f64 <HAL_GetTick>
 8007440:	1b80      	subs	r0, r0, r6
 8007442:	2802      	cmp	r0, #2
 8007444:	d9f6      	bls.n	8007434 <HAL_RCC_OscConfig+0x6b8>
 8007446:	e585      	b.n	8006f54 <HAL_RCC_OscConfig+0x1d8>
    if (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_PLLCLK)
 8007448:	4d50      	ldr	r5, [pc, #320]	@ (800758c <HAL_RCC_OscConfig+0x810>)
 800744a:	69eb      	ldr	r3, [r5, #28]
 800744c:	f003 030c 	and.w	r3, r3, #12
 8007450:	2b0c      	cmp	r3, #12
 8007452:	f000 80a1 	beq.w	8007598 <HAL_RCC_OscConfig+0x81c>
        __HAL_RCC_PLL_DISABLE();
 8007456:	682b      	ldr	r3, [r5, #0]
      if ((pRCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 8007458:	2902      	cmp	r1, #2
        __HAL_RCC_PLL_DISABLE();
 800745a:	f023 7380 	bic.w	r3, r3, #16777216	@ 0x1000000
 800745e:	602b      	str	r3, [r5, #0]
      if ((pRCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 8007460:	f040 8081 	bne.w	8007566 <HAL_RCC_OscConfig+0x7ea>
        tickstart = HAL_GetTick();
 8007464:	f7fc fd7e 	bl	8003f64 <HAL_GetTick>
 8007468:	4606      	mov	r6, r0
        while (READ_BIT(RCC->CR, RCC_CR_PLL1RDY) != 0U)
 800746a:	6829      	ldr	r1, [r5, #0]
 800746c:	f011 7100 	ands.w	r1, r1, #33554432	@ 0x2000000
 8007470:	d16d      	bne.n	800754e <HAL_RCC_OscConfig+0x7d2>
        if (__HAL_RCC_PWR_IS_CLK_DISABLED())
 8007472:	f8d5 3094 	ldr.w	r3, [r5, #148]	@ 0x94
 8007476:	075e      	lsls	r6, r3, #29
 8007478:	d40c      	bmi.n	8007494 <HAL_RCC_OscConfig+0x718>
          pwrclkchanged = SET;
 800747a:	2101      	movs	r1, #1
          __HAL_RCC_PWR_CLK_ENABLE();
 800747c:	f8d5 3094 	ldr.w	r3, [r5, #148]	@ 0x94
 8007480:	f043 0304 	orr.w	r3, r3, #4
 8007484:	f8c5 3094 	str.w	r3, [r5, #148]	@ 0x94
 8007488:	f8d5 3094 	ldr.w	r3, [r5, #148]	@ 0x94
 800748c:	f003 0304 	and.w	r3, r3, #4
 8007490:	9303      	str	r3, [sp, #12]
 8007492:	9b03      	ldr	r3, [sp, #12]
        if (READ_BIT(PWR->VOSR, PWR_VOSR_BOOSTEN) == PWR_VOSR_BOOSTEN)
 8007494:	4d3e      	ldr	r5, [pc, #248]	@ (8007590 <HAL_RCC_OscConfig+0x814>)
 8007496:	68ee      	ldr	r6, [r5, #12]
        CLEAR_BIT(PWR->VOSR, PWR_VOSR_BOOSTEN);
 8007498:	68eb      	ldr	r3, [r5, #12]
 800749a:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 800749e:	60eb      	str	r3, [r5, #12]
        __HAL_RCC_PLL_CONFIG(pRCC_OscInitStruct->PLL.PLLSource,
 80074a0:	4b3a      	ldr	r3, [pc, #232]	@ (800758c <HAL_RCC_OscConfig+0x810>)
 80074a2:	6c67      	ldr	r7, [r4, #68]	@ 0x44
 80074a4:	6a98      	ldr	r0, [r3, #40]	@ 0x28
 80074a6:	6be2      	ldr	r2, [r4, #60]	@ 0x3c
 80074a8:	f420 407f 	bic.w	r0, r0, #65280	@ 0xff00
 80074ac:	433a      	orrs	r2, r7
 80074ae:	f020 0003 	bic.w	r0, r0, #3
 80074b2:	4302      	orrs	r2, r0
 80074b4:	6c20      	ldr	r0, [r4, #64]	@ 0x40
 80074b6:	3801      	subs	r0, #1
 80074b8:	ea42 2200 	orr.w	r2, r2, r0, lsl #8
 80074bc:	629a      	str	r2, [r3, #40]	@ 0x28
 80074be:	6ca2      	ldr	r2, [r4, #72]	@ 0x48
 80074c0:	6b5f      	ldr	r7, [r3, #52]	@ 0x34
 80074c2:	4834      	ldr	r0, [pc, #208]	@ (8007594 <HAL_RCC_OscConfig+0x818>)
 80074c4:	3a01      	subs	r2, #1
 80074c6:	4038      	ands	r0, r7
 80074c8:	f3c2 0208 	ubfx	r2, r2, #0, #9
 80074cc:	4302      	orrs	r2, r0
 80074ce:	6ce0      	ldr	r0, [r4, #76]	@ 0x4c
 80074d0:	3801      	subs	r0, #1
 80074d2:	0240      	lsls	r0, r0, #9
 80074d4:	b280      	uxth	r0, r0
 80074d6:	4302      	orrs	r2, r0
 80074d8:	6d20      	ldr	r0, [r4, #80]	@ 0x50
 80074da:	3801      	subs	r0, #1
 80074dc:	0400      	lsls	r0, r0, #16
 80074de:	f400 00fe 	and.w	r0, r0, #8323072	@ 0x7f0000
 80074e2:	4302      	orrs	r2, r0
 80074e4:	6d60      	ldr	r0, [r4, #84]	@ 0x54
 80074e6:	3801      	subs	r0, #1
 80074e8:	0600      	lsls	r0, r0, #24
 80074ea:	f000 40fe 	and.w	r0, r0, #2130706432	@ 0x7f000000
 80074ee:	4302      	orrs	r2, r0
 80074f0:	635a      	str	r2, [r3, #52]	@ 0x34
        __HAL_RCC_PLL_FRACN_DISABLE();
 80074f2:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
 80074f4:	f022 0210 	bic.w	r2, r2, #16
 80074f8:	629a      	str	r2, [r3, #40]	@ 0x28
        __HAL_RCC_PLL_FRACN_CONFIG(pRCC_OscInitStruct->PLL.PLLFRACN);
 80074fa:	6de2      	ldr	r2, [r4, #92]	@ 0x5c
 80074fc:	00d2      	lsls	r2, r2, #3
 80074fe:	639a      	str	r2, [r3, #56]	@ 0x38
        __HAL_RCC_PLL_FRACN_ENABLE();
 8007500:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
 8007502:	f042 0210 	orr.w	r2, r2, #16
 8007506:	629a      	str	r2, [r3, #40]	@ 0x28
        __HAL_RCC_PLL_VCIRANGE(pRCC_OscInitStruct->PLL.PLLRGE);
 8007508:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
 800750a:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 800750c:	f022 020c 	bic.w	r2, r2, #12
 8007510:	4302      	orrs	r2, r0
 8007512:	629a      	str	r2, [r3, #40]	@ 0x28
        if (pwrboosten == SET)
 8007514:	0370      	lsls	r0, r6, #13
          SET_BIT(PWR->VOSR, PWR_VOSR_BOOSTEN);
 8007516:	bf42      	ittt	mi
 8007518:	68ea      	ldrmi	r2, [r5, #12]
 800751a:	f442 2280 	orrmi.w	r2, r2, #262144	@ 0x40000
 800751e:	60ea      	strmi	r2, [r5, #12]
        if (pwrclkchanged == SET)
 8007520:	b129      	cbz	r1, 800752e <HAL_RCC_OscConfig+0x7b2>
          __HAL_RCC_PWR_CLK_DISABLE();
 8007522:	f8d3 2094 	ldr.w	r2, [r3, #148]	@ 0x94
 8007526:	f022 0204 	bic.w	r2, r2, #4
 800752a:	f8c3 2094 	str.w	r2, [r3, #148]	@ 0x94
        __HAL_RCC_PLL_ENABLE();
 800752e:	681a      	ldr	r2, [r3, #0]
        while (READ_BIT(RCC->CR, RCC_CR_PLL1RDY) == 0U)
 8007530:	4c16      	ldr	r4, [pc, #88]	@ (800758c <HAL_RCC_OscConfig+0x810>)
        __HAL_RCC_PLL_ENABLE();
 8007532:	f042 7280 	orr.w	r2, r2, #16777216	@ 0x1000000
 8007536:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 8007538:	f7fc fd14 	bl	8003f64 <HAL_GetTick>
 800753c:	4605      	mov	r5, r0
        while (READ_BIT(RCC->CR, RCC_CR_PLL1RDY) == 0U)
 800753e:	6823      	ldr	r3, [r4, #0]
 8007540:	019a      	lsls	r2, r3, #6
 8007542:	d50a      	bpl.n	800755a <HAL_RCC_OscConfig+0x7de>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVR);
 8007544:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
 8007546:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 800754a:	62a3      	str	r3, [r4, #40]	@ 0x28
 800754c:	e6bb      	b.n	80072c6 <HAL_RCC_OscConfig+0x54a>
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 800754e:	f7fc fd09 	bl	8003f64 <HAL_GetTick>
 8007552:	1b80      	subs	r0, r0, r6
 8007554:	2802      	cmp	r0, #2
 8007556:	d988      	bls.n	800746a <HAL_RCC_OscConfig+0x6ee>
 8007558:	e4fc      	b.n	8006f54 <HAL_RCC_OscConfig+0x1d8>
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 800755a:	f7fc fd03 	bl	8003f64 <HAL_GetTick>
 800755e:	1b40      	subs	r0, r0, r5
 8007560:	2802      	cmp	r0, #2
 8007562:	d9ec      	bls.n	800753e <HAL_RCC_OscConfig+0x7c2>
 8007564:	e4f6      	b.n	8006f54 <HAL_RCC_OscConfig+0x1d8>
        tickstart = HAL_GetTick();
 8007566:	f7fc fcfd 	bl	8003f64 <HAL_GetTick>
 800756a:	4604      	mov	r4, r0
        while (READ_BIT(RCC->CR, RCC_CR_PLL1RDY) != 0U)
 800756c:	682b      	ldr	r3, [r5, #0]
 800756e:	019b      	lsls	r3, r3, #6
 8007570:	d406      	bmi.n	8007580 <HAL_RCC_OscConfig+0x804>
        RCC->PLL1CFGR &= ~(RCC_PLL1CFGR_PLL1SRC | RCC_PLL1CFGR_PLL1PEN | RCC_PLL1CFGR_PLL1QEN | RCC_PLL1CFGR_PLL1REN);
 8007572:	6aab      	ldr	r3, [r5, #40]	@ 0x28
 8007574:	f423 23e0 	bic.w	r3, r3, #458752	@ 0x70000
 8007578:	f023 0303 	bic.w	r3, r3, #3
 800757c:	62ab      	str	r3, [r5, #40]	@ 0x28
 800757e:	e6a2      	b.n	80072c6 <HAL_RCC_OscConfig+0x54a>
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 8007580:	f7fc fcf0 	bl	8003f64 <HAL_GetTick>
 8007584:	1b00      	subs	r0, r0, r4
 8007586:	2802      	cmp	r0, #2
 8007588:	d9f0      	bls.n	800756c <HAL_RCC_OscConfig+0x7f0>
 800758a:	e4e3      	b.n	8006f54 <HAL_RCC_OscConfig+0x1d8>
 800758c:	46020c00 	.word	0x46020c00
 8007590:	46020800 	.word	0x46020800
 8007594:	80800000 	.word	0x80800000
      if (((pRCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 8007598:	2901      	cmp	r1, #1
      temp1_pllckcfg = RCC->PLL1CFGR;
 800759a:	6aaa      	ldr	r2, [r5, #40]	@ 0x28
      temp2_pllckcfg = RCC->PLL1DIVR;
 800759c:	6b6b      	ldr	r3, [r5, #52]	@ 0x34
      if (((pRCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 800759e:	f43f ac2c 	beq.w	8006dfa <HAL_RCC_OscConfig+0x7e>
 80075a2:	6be0      	ldr	r0, [r4, #60]	@ 0x3c
          (READ_BIT(temp1_pllckcfg, RCC_PLL1CFGR_PLL1SRC) != pRCC_OscInitStruct->PLL.PLLSource) ||
 80075a4:	f002 0103 	and.w	r1, r2, #3
      if (((pRCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 80075a8:	4281      	cmp	r1, r0
 80075aa:	f47f ac26 	bne.w	8006dfa <HAL_RCC_OscConfig+0x7e>
            RCC_PLL1CFGR_PLL1M_Pos) != (pRCC_OscInitStruct->PLL.PLLM - 1U)) ||
 80075ae:	6c21      	ldr	r1, [r4, #64]	@ 0x40
          ((READ_BIT(temp1_pllckcfg, RCC_PLL1CFGR_PLL1M) >> \
 80075b0:	f3c2 2003 	ubfx	r0, r2, #8, #4
            RCC_PLL1CFGR_PLL1M_Pos) != (pRCC_OscInitStruct->PLL.PLLM - 1U)) ||
 80075b4:	3901      	subs	r1, #1
          (READ_BIT(temp1_pllckcfg, RCC_PLL1CFGR_PLL1SRC) != pRCC_OscInitStruct->PLL.PLLSource) ||
 80075b6:	4288      	cmp	r0, r1
 80075b8:	f47f ac1f 	bne.w	8006dfa <HAL_RCC_OscConfig+0x7e>
            RCC_PLL1CFGR_PLL1M_Pos) != (pRCC_OscInitStruct->PLL.PLLM - 1U)) ||
 80075bc:	6c61      	ldr	r1, [r4, #68]	@ 0x44
          (READ_BIT(temp1_pllckcfg, RCC_PLL1CFGR_PLL1MBOOST) != pRCC_OscInitStruct->PLL.PLLMBOOST) ||
 80075be:	f402 4270 	and.w	r2, r2, #61440	@ 0xf000
            RCC_PLL1CFGR_PLL1M_Pos) != (pRCC_OscInitStruct->PLL.PLLM - 1U)) ||
 80075c2:	428a      	cmp	r2, r1
 80075c4:	f47f ac19 	bne.w	8006dfa <HAL_RCC_OscConfig+0x7e>
          (READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_PLL1N) != (pRCC_OscInitStruct->PLL.PLLN - 1U)) ||
 80075c8:	6ca2      	ldr	r2, [r4, #72]	@ 0x48
 80075ca:	f3c3 0108 	ubfx	r1, r3, #0, #9
 80075ce:	3a01      	subs	r2, #1
          (READ_BIT(temp1_pllckcfg, RCC_PLL1CFGR_PLL1MBOOST) != pRCC_OscInitStruct->PLL.PLLMBOOST) ||
 80075d0:	4291      	cmp	r1, r2
 80075d2:	f47f ac12 	bne.w	8006dfa <HAL_RCC_OscConfig+0x7e>
            RCC_PLL1DIVR_PLL1P_Pos) != (pRCC_OscInitStruct->PLL.PLLP - 1U)) ||
 80075d6:	6ce2      	ldr	r2, [r4, #76]	@ 0x4c
          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_PLL1P) >> \
 80075d8:	f3c3 2146 	ubfx	r1, r3, #9, #7
            RCC_PLL1DIVR_PLL1P_Pos) != (pRCC_OscInitStruct->PLL.PLLP - 1U)) ||
 80075dc:	3a01      	subs	r2, #1
          (READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_PLL1N) != (pRCC_OscInitStruct->PLL.PLLN - 1U)) ||
 80075de:	4291      	cmp	r1, r2
 80075e0:	f47f ac0b 	bne.w	8006dfa <HAL_RCC_OscConfig+0x7e>
            RCC_PLL1DIVR_PLL1Q_Pos) != (pRCC_OscInitStruct->PLL.PLLQ - 1U)) ||
 80075e4:	6d22      	ldr	r2, [r4, #80]	@ 0x50
          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_PLL1Q) >> \
 80075e6:	f3c3 4106 	ubfx	r1, r3, #16, #7
            RCC_PLL1DIVR_PLL1Q_Pos) != (pRCC_OscInitStruct->PLL.PLLQ - 1U)) ||
 80075ea:	3a01      	subs	r2, #1
            RCC_PLL1DIVR_PLL1P_Pos) != (pRCC_OscInitStruct->PLL.PLLP - 1U)) ||
 80075ec:	4291      	cmp	r1, r2
 80075ee:	f47f ac04 	bne.w	8006dfa <HAL_RCC_OscConfig+0x7e>
            RCC_PLL1DIVR_PLL1R_Pos) != (pRCC_OscInitStruct->PLL.PLLR - 1U)))
 80075f2:	6d62      	ldr	r2, [r4, #84]	@ 0x54
          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_PLL1R) >> \
 80075f4:	f3c3 6306 	ubfx	r3, r3, #24, #7
            RCC_PLL1DIVR_PLL1R_Pos) != (pRCC_OscInitStruct->PLL.PLLR - 1U)))
 80075f8:	3a01      	subs	r2, #1
            RCC_PLL1DIVR_PLL1Q_Pos) != (pRCC_OscInitStruct->PLL.PLLQ - 1U)) ||
 80075fa:	4293      	cmp	r3, r2
 80075fc:	f47f abfd 	bne.w	8006dfa <HAL_RCC_OscConfig+0x7e>
      if ((READ_BIT(RCC->PLL1FRACR, RCC_PLL1FRACR_PLL1FRACN) >> \
 8007600:	4b0d      	ldr	r3, [pc, #52]	@ (8007638 <HAL_RCC_OscConfig+0x8bc>)
 8007602:	6de1      	ldr	r1, [r4, #92]	@ 0x5c
 8007604:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
 8007606:	f3c2 02cc 	ubfx	r2, r2, #3, #13
 800760a:	428a      	cmp	r2, r1
 800760c:	f43f ae5b 	beq.w	80072c6 <HAL_RCC_OscConfig+0x54a>
        __HAL_RCC_PLL_FRACN_DISABLE();
 8007610:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
 8007612:	f022 0210 	bic.w	r2, r2, #16
 8007616:	629a      	str	r2, [r3, #40]	@ 0x28
        tickstart = HAL_GetTick();
 8007618:	f7fc fca4 	bl	8003f64 <HAL_GetTick>
 800761c:	4605      	mov	r5, r0
        while ((HAL_GetTick() - tickstart) < PLL_FRAC_WAIT_VALUE)
 800761e:	f7fc fca1 	bl	8003f64 <HAL_GetTick>
 8007622:	42a8      	cmp	r0, r5
 8007624:	d0fb      	beq.n	800761e <HAL_RCC_OscConfig+0x8a2>
        __HAL_RCC_PLL_FRACN_CONFIG(pRCC_OscInitStruct->PLL.PLLFRACN);
 8007626:	6de2      	ldr	r2, [r4, #92]	@ 0x5c
 8007628:	4b03      	ldr	r3, [pc, #12]	@ (8007638 <HAL_RCC_OscConfig+0x8bc>)
 800762a:	00d2      	lsls	r2, r2, #3
 800762c:	639a      	str	r2, [r3, #56]	@ 0x38
        __HAL_RCC_PLL_FRACN_ENABLE();
 800762e:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
 8007630:	f042 0210 	orr.w	r2, r2, #16
 8007634:	629a      	str	r2, [r3, #40]	@ 0x28
 8007636:	e646      	b.n	80072c6 <HAL_RCC_OscConfig+0x54a>
 8007638:	46020c00 	.word	0x46020c00

0800763c <HAL_RCC_GetPCLK1Freq>:
{
 800763c:	b508      	push	{r3, lr}
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR2 & RCC_CFGR2_PPRE1) >> RCC_CFGR2_PPRE1_Pos]);
 800763e:	f7ff fb89 	bl	8006d54 <HAL_RCC_GetHCLKFreq>
 8007642:	4b04      	ldr	r3, [pc, #16]	@ (8007654 <HAL_RCC_GetPCLK1Freq+0x18>)
 8007644:	4a04      	ldr	r2, [pc, #16]	@ (8007658 <HAL_RCC_GetPCLK1Freq+0x1c>)
 8007646:	6a1b      	ldr	r3, [r3, #32]
 8007648:	f3c3 1302 	ubfx	r3, r3, #4, #3
 800764c:	5cd3      	ldrb	r3, [r2, r3]
}
 800764e:	40d8      	lsrs	r0, r3
 8007650:	bd08      	pop	{r3, pc}
 8007652:	bf00      	nop
 8007654:	46020c00 	.word	0x46020c00
 8007658:	0803589c 	.word	0x0803589c

0800765c <HAL_RCC_GetClockConfig>:
  pRCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | \
 800765c:	231f      	movs	r3, #31
 800765e:	6003      	str	r3, [r0, #0]
  pRCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR1 & RCC_CFGR1_SW);
 8007660:	4b0d      	ldr	r3, [pc, #52]	@ (8007698 <HAL_RCC_GetClockConfig+0x3c>)
 8007662:	69da      	ldr	r2, [r3, #28]
 8007664:	f002 0203 	and.w	r2, r2, #3
 8007668:	6042      	str	r2, [r0, #4]
  pRCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->CFGR2 & RCC_CFGR2_HPRE);
 800766a:	6a1a      	ldr	r2, [r3, #32]
 800766c:	f002 020f 	and.w	r2, r2, #15
 8007670:	6082      	str	r2, [r0, #8]
  pRCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->CFGR2 & RCC_CFGR2_PPRE1);
 8007672:	6a1a      	ldr	r2, [r3, #32]
 8007674:	f002 0270 	and.w	r2, r2, #112	@ 0x70
 8007678:	60c2      	str	r2, [r0, #12]
  pRCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR2 & RCC_CFGR2_PPRE2) >> 4);
 800767a:	6a1a      	ldr	r2, [r3, #32]
 800767c:	0912      	lsrs	r2, r2, #4
 800767e:	f002 0270 	and.w	r2, r2, #112	@ 0x70
 8007682:	6102      	str	r2, [r0, #16]
  pRCC_ClkInitStruct->APB3CLKDivider = (uint32_t)(RCC->CFGR3 & RCC_CFGR3_PPRE3);
 8007684:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8007686:	f003 0370 	and.w	r3, r3, #112	@ 0x70
 800768a:	6143      	str	r3, [r0, #20]
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 800768c:	4b03      	ldr	r3, [pc, #12]	@ (800769c <HAL_RCC_GetClockConfig+0x40>)
 800768e:	681b      	ldr	r3, [r3, #0]
 8007690:	f003 030f 	and.w	r3, r3, #15
 8007694:	600b      	str	r3, [r1, #0]
}
 8007696:	4770      	bx	lr
 8007698:	46020c00 	.word	0x46020c00
 800769c:	40022000 	.word	0x40022000

080076a0 <RCCEx_PLL2_Config>:
  * @note   PLL2 is temporary disabled to apply new parameters
  *
  * @retval HAL status
  */
static HAL_StatusTypeDef RCCEx_PLL2_Config(const RCC_PLL2InitTypeDef *pll2)
{
 80076a0:	b570      	push	{r4, r5, r6, lr}
  assert_param(IS_RCC_PLLP_VALUE(pll2->PLL2P));
  assert_param(IS_RCC_PLLQ_VALUE(pll2->PLL2Q));
  assert_param(IS_RCC_PLLR_VALUE(pll2->PLL2R));

  /* Disable  PLL2 */
  __HAL_RCC_PLL2_DISABLE();
 80076a2:	4c33      	ldr	r4, [pc, #204]	@ (8007770 <RCCEx_PLL2_Config+0xd0>)
{
 80076a4:	4605      	mov	r5, r0
  __HAL_RCC_PLL2_DISABLE();
 80076a6:	6823      	ldr	r3, [r4, #0]
 80076a8:	f023 6380 	bic.w	r3, r3, #67108864	@ 0x4000000
 80076ac:	6023      	str	r3, [r4, #0]

  /* Get Start Tick*/
  tickstart = HAL_GetTick();
 80076ae:	f7fc fc59 	bl	8003f64 <HAL_GetTick>
 80076b2:	4606      	mov	r6, r0

  /* Wait till PLL is ready */
  while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL2RDY) != 0U)
 80076b4:	6823      	ldr	r3, [r4, #0]
 80076b6:	011a      	lsls	r2, r3, #4
 80076b8:	d44d      	bmi.n	8007756 <RCCEx_PLL2_Config+0xb6>
      return HAL_TIMEOUT;
    }
  }

  /* Configure PLL2 multiplication and division factors */
  __HAL_RCC_PLL2_CONFIG(pll2->PLL2Source,
 80076ba:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 80076bc:	6829      	ldr	r1, [r5, #0]
 80076be:	686a      	ldr	r2, [r5, #4]
 80076c0:	f423 6370 	bic.w	r3, r3, #3840	@ 0xf00
 80076c4:	f023 0303 	bic.w	r3, r3, #3
 80076c8:	3a01      	subs	r2, #1
 80076ca:	430b      	orrs	r3, r1
 80076cc:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 80076d0:	62e3      	str	r3, [r4, #44]	@ 0x2c
 80076d2:	68ab      	ldr	r3, [r5, #8]
 80076d4:	6be1      	ldr	r1, [r4, #60]	@ 0x3c
 80076d6:	4a27      	ldr	r2, [pc, #156]	@ (8007774 <RCCEx_PLL2_Config+0xd4>)
 80076d8:	3b01      	subs	r3, #1
 80076da:	400a      	ands	r2, r1
 80076dc:	f3c3 0308 	ubfx	r3, r3, #0, #9
 80076e0:	4313      	orrs	r3, r2
 80076e2:	68ea      	ldr	r2, [r5, #12]
 80076e4:	3a01      	subs	r2, #1
 80076e6:	0252      	lsls	r2, r2, #9
 80076e8:	b292      	uxth	r2, r2
 80076ea:	4313      	orrs	r3, r2
 80076ec:	692a      	ldr	r2, [r5, #16]
 80076ee:	3a01      	subs	r2, #1
 80076f0:	0412      	lsls	r2, r2, #16
 80076f2:	f402 02fe 	and.w	r2, r2, #8323072	@ 0x7f0000
 80076f6:	4313      	orrs	r3, r2
 80076f8:	696a      	ldr	r2, [r5, #20]
 80076fa:	3a01      	subs	r2, #1
 80076fc:	0612      	lsls	r2, r2, #24
 80076fe:	f002 42fe 	and.w	r2, r2, #2130706432	@ 0x7f000000
 8007702:	4313      	orrs	r3, r2
 8007704:	63e3      	str	r3, [r4, #60]	@ 0x3c
                        pll2->PLL2P,
                        pll2->PLL2Q,
                        pll2->PLL2R);

  /* Select PLL2 input reference frequency range: VCI */
  __HAL_RCC_PLL2_VCIRANGE(pll2->PLL2RGE);
 8007706:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 8007708:	69aa      	ldr	r2, [r5, #24]
 800770a:	f023 030c 	bic.w	r3, r3, #12
 800770e:	4313      	orrs	r3, r2
 8007710:	62e3      	str	r3, [r4, #44]	@ 0x2c

  /* Configure the PLL2 Clock output(s) */
  __HAL_RCC_PLL2CLKOUT_ENABLE(pll2->PLL2ClockOut);
 8007712:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 8007714:	6a2a      	ldr	r2, [r5, #32]
 8007716:	4313      	orrs	r3, r2
 8007718:	62e3      	str	r3, [r4, #44]	@ 0x2c

  /* Disable PLL2FRACN  */
  __HAL_RCC_PLL2FRACN_DISABLE();
 800771a:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 800771c:	f023 0310 	bic.w	r3, r3, #16
 8007720:	62e3      	str	r3, [r4, #44]	@ 0x2c

  /* Configures PLL2 clock Fractional Part Of The Multiplication Factor */
  __HAL_RCC_PLL2FRACN_CONFIG(pll2->PLL2FRACN);
 8007722:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8007724:	69ea      	ldr	r2, [r5, #28]
 8007726:	f423 437f 	bic.w	r3, r3, #65280	@ 0xff00
 800772a:	f023 03f8 	bic.w	r3, r3, #248	@ 0xf8
 800772e:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 8007732:	6423      	str	r3, [r4, #64]	@ 0x40

  /* Enable PLL2FRACN  */
  __HAL_RCC_PLL2FRACN_ENABLE();
 8007734:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c

  /* Get Start Tick*/
  tickstart = HAL_GetTick();

  /* Wait till PLL2 is ready */
  while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL2RDY) == 0U)
 8007736:	4d0e      	ldr	r5, [pc, #56]	@ (8007770 <RCCEx_PLL2_Config+0xd0>)
  __HAL_RCC_PLL2FRACN_ENABLE();
 8007738:	f043 0310 	orr.w	r3, r3, #16
 800773c:	62e3      	str	r3, [r4, #44]	@ 0x2c
  __HAL_RCC_PLL2_ENABLE();
 800773e:	6823      	ldr	r3, [r4, #0]
 8007740:	f043 6380 	orr.w	r3, r3, #67108864	@ 0x4000000
 8007744:	6023      	str	r3, [r4, #0]
  tickstart = HAL_GetTick();
 8007746:	f7fc fc0d 	bl	8003f64 <HAL_GetTick>
 800774a:	4604      	mov	r4, r0
  while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL2RDY) == 0U)
 800774c:	682b      	ldr	r3, [r5, #0]
 800774e:	011b      	lsls	r3, r3, #4
 8007750:	d508      	bpl.n	8007764 <RCCEx_PLL2_Config+0xc4>
    if ((HAL_GetTick() - tickstart) > PLL2_TIMEOUT_VALUE)
    {
      return HAL_TIMEOUT;
    }
  }
  return HAL_OK;
 8007752:	2000      	movs	r0, #0
 8007754:	e005      	b.n	8007762 <RCCEx_PLL2_Config+0xc2>
    if ((HAL_GetTick() - tickstart) > PLL2_TIMEOUT_VALUE)
 8007756:	f7fc fc05 	bl	8003f64 <HAL_GetTick>
 800775a:	1b80      	subs	r0, r0, r6
 800775c:	2802      	cmp	r0, #2
 800775e:	d9a9      	bls.n	80076b4 <RCCEx_PLL2_Config+0x14>
      return HAL_TIMEOUT;
 8007760:	2003      	movs	r0, #3

}
 8007762:	bd70      	pop	{r4, r5, r6, pc}
    if ((HAL_GetTick() - tickstart) > PLL2_TIMEOUT_VALUE)
 8007764:	f7fc fbfe 	bl	8003f64 <HAL_GetTick>
 8007768:	1b00      	subs	r0, r0, r4
 800776a:	2802      	cmp	r0, #2
 800776c:	d9ee      	bls.n	800774c <RCCEx_PLL2_Config+0xac>
 800776e:	e7f7      	b.n	8007760 <RCCEx_PLL2_Config+0xc0>
 8007770:	46020c00 	.word	0x46020c00
 8007774:	80800000 	.word	0x80800000

08007778 <RCCEx_PLL3_Config>:
  *         contains the configuration parameters as well as VCI clock ranges.
  * @note   PLL3 is temporary disabled to apply new parameters
  * @retval HAL status
  */
static HAL_StatusTypeDef RCCEx_PLL3_Config(const RCC_PLL3InitTypeDef *pll3)
{
 8007778:	b570      	push	{r4, r5, r6, lr}
  assert_param(IS_RCC_PLLP_VALUE(pll3->PLL3P));
  assert_param(IS_RCC_PLLQ_VALUE(pll3->PLL3Q));
  assert_param(IS_RCC_PLLR_VALUE(pll3->PLL3R));

  /* Disable  PLL3 */
  __HAL_RCC_PLL3_DISABLE();
 800777a:	4c33      	ldr	r4, [pc, #204]	@ (8007848 <RCCEx_PLL3_Config+0xd0>)
{
 800777c:	4605      	mov	r5, r0
  __HAL_RCC_PLL3_DISABLE();
 800777e:	6823      	ldr	r3, [r4, #0]
 8007780:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 8007784:	6023      	str	r3, [r4, #0]

  /* Get Start Tick*/
  tickstart = HAL_GetTick();
 8007786:	f7fc fbed 	bl	8003f64 <HAL_GetTick>
 800778a:	4606      	mov	r6, r0

  /* Wait till PLL is ready */
  while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL3RDY) != 0U)
 800778c:	6823      	ldr	r3, [r4, #0]
 800778e:	009a      	lsls	r2, r3, #2
 8007790:	d44d      	bmi.n	800782e <RCCEx_PLL3_Config+0xb6>
      return HAL_TIMEOUT;
    }
  }

  /* Configure PLL3 multiplication and division factors */
  __HAL_RCC_PLL3_CONFIG(pll3->PLL3Source,
 8007792:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8007794:	6829      	ldr	r1, [r5, #0]
 8007796:	686a      	ldr	r2, [r5, #4]
 8007798:	f423 6370 	bic.w	r3, r3, #3840	@ 0xf00
 800779c:	f023 0303 	bic.w	r3, r3, #3
 80077a0:	3a01      	subs	r2, #1
 80077a2:	430b      	orrs	r3, r1
 80077a4:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 80077a8:	6323      	str	r3, [r4, #48]	@ 0x30
 80077aa:	68ab      	ldr	r3, [r5, #8]
 80077ac:	6c61      	ldr	r1, [r4, #68]	@ 0x44
 80077ae:	4a27      	ldr	r2, [pc, #156]	@ (800784c <RCCEx_PLL3_Config+0xd4>)
 80077b0:	3b01      	subs	r3, #1
 80077b2:	400a      	ands	r2, r1
 80077b4:	f3c3 0308 	ubfx	r3, r3, #0, #9
 80077b8:	4313      	orrs	r3, r2
 80077ba:	68ea      	ldr	r2, [r5, #12]
 80077bc:	3a01      	subs	r2, #1
 80077be:	0252      	lsls	r2, r2, #9
 80077c0:	b292      	uxth	r2, r2
 80077c2:	4313      	orrs	r3, r2
 80077c4:	692a      	ldr	r2, [r5, #16]
 80077c6:	3a01      	subs	r2, #1
 80077c8:	0412      	lsls	r2, r2, #16
 80077ca:	f402 02fe 	and.w	r2, r2, #8323072	@ 0x7f0000
 80077ce:	4313      	orrs	r3, r2
 80077d0:	696a      	ldr	r2, [r5, #20]
 80077d2:	3a01      	subs	r2, #1
 80077d4:	0612      	lsls	r2, r2, #24
 80077d6:	f002 42fe 	and.w	r2, r2, #2130706432	@ 0x7f000000
 80077da:	4313      	orrs	r3, r2
 80077dc:	6463      	str	r3, [r4, #68]	@ 0x44
                        pll3->PLL3P,
                        pll3->PLL3Q,
                        pll3->PLL3R);

  /* Select PLL3 input reference frequency range: VCI */
  __HAL_RCC_PLL3_VCIRANGE(pll3->PLL3RGE);
 80077de:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 80077e0:	69aa      	ldr	r2, [r5, #24]
 80077e2:	f023 030c 	bic.w	r3, r3, #12
 80077e6:	4313      	orrs	r3, r2
 80077e8:	6323      	str	r3, [r4, #48]	@ 0x30

  /* Configure the PLL3 Clock output(s) */
  __HAL_RCC_PLL3CLKOUT_ENABLE(pll3->PLL3ClockOut);
 80077ea:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 80077ec:	6a2a      	ldr	r2, [r5, #32]
 80077ee:	4313      	orrs	r3, r2
 80077f0:	6323      	str	r3, [r4, #48]	@ 0x30

  /* Disable PLL3FRACN  */
  __HAL_RCC_PLL3FRACN_DISABLE();
 80077f2:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 80077f4:	f023 0310 	bic.w	r3, r3, #16
 80077f8:	6323      	str	r3, [r4, #48]	@ 0x30

  /* Configures PLL3 clock Fractional Part Of The Multiplication Factor */
  __HAL_RCC_PLL3FRACN_CONFIG(pll3->PLL3FRACN);
 80077fa:	6ca3      	ldr	r3, [r4, #72]	@ 0x48
 80077fc:	69ea      	ldr	r2, [r5, #28]
 80077fe:	f423 437f 	bic.w	r3, r3, #65280	@ 0xff00
 8007802:	f023 03f8 	bic.w	r3, r3, #248	@ 0xf8
 8007806:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 800780a:	64a3      	str	r3, [r4, #72]	@ 0x48

  /* Enable PLL3FRACN  */
  __HAL_RCC_PLL3FRACN_ENABLE();
 800780c:	6b23      	ldr	r3, [r4, #48]	@ 0x30

  /* Get Start Tick*/
  tickstart = HAL_GetTick();

  /* Wait till PLL3 is ready */
  while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL3RDY) == 0U)
 800780e:	4d0e      	ldr	r5, [pc, #56]	@ (8007848 <RCCEx_PLL3_Config+0xd0>)
  __HAL_RCC_PLL3FRACN_ENABLE();
 8007810:	f043 0310 	orr.w	r3, r3, #16
 8007814:	6323      	str	r3, [r4, #48]	@ 0x30
  __HAL_RCC_PLL3_ENABLE();
 8007816:	6823      	ldr	r3, [r4, #0]
 8007818:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 800781c:	6023      	str	r3, [r4, #0]
  tickstart = HAL_GetTick();
 800781e:	f7fc fba1 	bl	8003f64 <HAL_GetTick>
 8007822:	4604      	mov	r4, r0
  while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL3RDY) == 0U)
 8007824:	682b      	ldr	r3, [r5, #0]
 8007826:	009b      	lsls	r3, r3, #2
 8007828:	d508      	bpl.n	800783c <RCCEx_PLL3_Config+0xc4>
    if ((HAL_GetTick() - tickstart) > PLL3_TIMEOUT_VALUE)
    {
      return HAL_TIMEOUT;
    }
  }
  return HAL_OK;
 800782a:	2000      	movs	r0, #0
 800782c:	e005      	b.n	800783a <RCCEx_PLL3_Config+0xc2>
    if ((HAL_GetTick() - tickstart) > PLL3_TIMEOUT_VALUE)
 800782e:	f7fc fb99 	bl	8003f64 <HAL_GetTick>
 8007832:	1b80      	subs	r0, r0, r6
 8007834:	2802      	cmp	r0, #2
 8007836:	d9a9      	bls.n	800778c <RCCEx_PLL3_Config+0x14>
      return HAL_TIMEOUT;
 8007838:	2003      	movs	r0, #3
}
 800783a:	bd70      	pop	{r4, r5, r6, pc}
    if ((HAL_GetTick() - tickstart) > PLL3_TIMEOUT_VALUE)
 800783c:	f7fc fb92 	bl	8003f64 <HAL_GetTick>
 8007840:	1b00      	subs	r0, r0, r4
 8007842:	2802      	cmp	r0, #2
 8007844:	d9ee      	bls.n	8007824 <RCCEx_PLL3_Config+0xac>
 8007846:	e7f7      	b.n	8007838 <RCCEx_PLL3_Config+0xc0>
 8007848:	46020c00 	.word	0x46020c00
 800784c:	80800000 	.word	0x80800000

08007850 <HAL_RCCEx_PeriphCLKConfig>:
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART1) == RCC_PERIPHCLK_USART1)
 8007850:	6803      	ldr	r3, [r0, #0]
{
 8007852:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART1) == RCC_PERIPHCLK_USART1)
 8007856:	07da      	lsls	r2, r3, #31
{
 8007858:	4605      	mov	r5, r0
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART1) == RCC_PERIPHCLK_USART1)
 800785a:	d508      	bpl.n	800786e <HAL_RCCEx_PeriphCLKConfig+0x1e>
    __HAL_RCC_USART1_CONFIG(pPeriphClkInit->Usart1ClockSelection);
 800785c:	49a5      	ldr	r1, [pc, #660]	@ (8007af4 <HAL_RCCEx_PeriphCLKConfig+0x2a4>)
 800785e:	6d00      	ldr	r0, [r0, #80]	@ 0x50
 8007860:	f8d1 20e0 	ldr.w	r2, [r1, #224]	@ 0xe0
 8007864:	f022 0203 	bic.w	r2, r2, #3
 8007868:	4302      	orrs	r2, r0
 800786a:	f8c1 20e0 	str.w	r2, [r1, #224]	@ 0xe0
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART2) == RCC_PERIPHCLK_USART2)
 800786e:	079f      	lsls	r7, r3, #30
 8007870:	d508      	bpl.n	8007884 <HAL_RCCEx_PeriphCLKConfig+0x34>
    __HAL_RCC_USART2_CONFIG(pPeriphClkInit->Usart2ClockSelection);
 8007872:	49a0      	ldr	r1, [pc, #640]	@ (8007af4 <HAL_RCCEx_PeriphCLKConfig+0x2a4>)
 8007874:	6d68      	ldr	r0, [r5, #84]	@ 0x54
 8007876:	f8d1 20e0 	ldr.w	r2, [r1, #224]	@ 0xe0
 800787a:	f022 020c 	bic.w	r2, r2, #12
 800787e:	4302      	orrs	r2, r0
 8007880:	f8c1 20e0 	str.w	r2, [r1, #224]	@ 0xe0
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART3) == RCC_PERIPHCLK_USART3)
 8007884:	075e      	lsls	r6, r3, #29
 8007886:	d508      	bpl.n	800789a <HAL_RCCEx_PeriphCLKConfig+0x4a>
    __HAL_RCC_USART3_CONFIG(pPeriphClkInit->Usart3ClockSelection);
 8007888:	499a      	ldr	r1, [pc, #616]	@ (8007af4 <HAL_RCCEx_PeriphCLKConfig+0x2a4>)
 800788a:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 800788c:	f8d1 20e0 	ldr.w	r2, [r1, #224]	@ 0xe0
 8007890:	f022 0230 	bic.w	r2, r2, #48	@ 0x30
 8007894:	4302      	orrs	r2, r0
 8007896:	f8c1 20e0 	str.w	r2, [r1, #224]	@ 0xe0
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_UART4) == RCC_PERIPHCLK_UART4)
 800789a:	071c      	lsls	r4, r3, #28
 800789c:	d508      	bpl.n	80078b0 <HAL_RCCEx_PeriphCLKConfig+0x60>
    __HAL_RCC_UART4_CONFIG(pPeriphClkInit->Uart4ClockSelection);
 800789e:	4995      	ldr	r1, [pc, #596]	@ (8007af4 <HAL_RCCEx_PeriphCLKConfig+0x2a4>)
 80078a0:	6de8      	ldr	r0, [r5, #92]	@ 0x5c
 80078a2:	f8d1 20e0 	ldr.w	r2, [r1, #224]	@ 0xe0
 80078a6:	f022 02c0 	bic.w	r2, r2, #192	@ 0xc0
 80078aa:	4302      	orrs	r2, r0
 80078ac:	f8c1 20e0 	str.w	r2, [r1, #224]	@ 0xe0
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_UART5) == RCC_PERIPHCLK_UART5)
 80078b0:	06d8      	lsls	r0, r3, #27
 80078b2:	d508      	bpl.n	80078c6 <HAL_RCCEx_PeriphCLKConfig+0x76>
    __HAL_RCC_UART5_CONFIG(pPeriphClkInit->Uart5ClockSelection);
 80078b4:	498f      	ldr	r1, [pc, #572]	@ (8007af4 <HAL_RCCEx_PeriphCLKConfig+0x2a4>)
 80078b6:	6e28      	ldr	r0, [r5, #96]	@ 0x60
 80078b8:	f8d1 20e0 	ldr.w	r2, [r1, #224]	@ 0xe0
 80078bc:	f422 7240 	bic.w	r2, r2, #768	@ 0x300
 80078c0:	4302      	orrs	r2, r0
 80078c2:	f8c1 20e0 	str.w	r2, [r1, #224]	@ 0xe0
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART6) == RCC_PERIPHCLK_USART6)
 80078c6:	0099      	lsls	r1, r3, #2
 80078c8:	d508      	bpl.n	80078dc <HAL_RCCEx_PeriphCLKConfig+0x8c>
    __HAL_RCC_USART6_CONFIG(pPeriphClkInit->Usart6ClockSelection);
 80078ca:	498a      	ldr	r1, [pc, #552]	@ (8007af4 <HAL_RCCEx_PeriphCLKConfig+0x2a4>)
 80078cc:	6e68      	ldr	r0, [r5, #100]	@ 0x64
 80078ce:	f8d1 20e4 	ldr.w	r2, [r1, #228]	@ 0xe4
 80078d2:	f422 3240 	bic.w	r2, r2, #196608	@ 0x30000
 80078d6:	4302      	orrs	r2, r0
 80078d8:	f8c1 20e4 	str.w	r2, [r1, #228]	@ 0xe4
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPUART1) == RCC_PERIPHCLK_LPUART1)
 80078dc:	069a      	lsls	r2, r3, #26
 80078de:	d508      	bpl.n	80078f2 <HAL_RCCEx_PeriphCLKConfig+0xa2>
    __HAL_RCC_LPUART1_CONFIG(pPeriphClkInit->Lpuart1ClockSelection);
 80078e0:	4984      	ldr	r1, [pc, #528]	@ (8007af4 <HAL_RCCEx_PeriphCLKConfig+0x2a4>)
 80078e2:	6ea8      	ldr	r0, [r5, #104]	@ 0x68
 80078e4:	f8d1 20e8 	ldr.w	r2, [r1, #232]	@ 0xe8
 80078e8:	f022 0207 	bic.w	r2, r2, #7
 80078ec:	4302      	orrs	r2, r0
 80078ee:	f8c1 20e8 	str.w	r2, [r1, #232]	@ 0xe8
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C1) == RCC_PERIPHCLK_I2C1)
 80078f2:	065f      	lsls	r7, r3, #25
 80078f4:	d508      	bpl.n	8007908 <HAL_RCCEx_PeriphCLKConfig+0xb8>
    __HAL_RCC_I2C1_CONFIG(pPeriphClkInit->I2c1ClockSelection);
 80078f6:	497f      	ldr	r1, [pc, #508]	@ (8007af4 <HAL_RCCEx_PeriphCLKConfig+0x2a4>)
 80078f8:	6ee8      	ldr	r0, [r5, #108]	@ 0x6c
 80078fa:	f8d1 20e0 	ldr.w	r2, [r1, #224]	@ 0xe0
 80078fe:	f422 6240 	bic.w	r2, r2, #3072	@ 0xc00
 8007902:	4302      	orrs	r2, r0
 8007904:	f8c1 20e0 	str.w	r2, [r1, #224]	@ 0xe0
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C2) == RCC_PERIPHCLK_I2C2)
 8007908:	061e      	lsls	r6, r3, #24
 800790a:	d508      	bpl.n	800791e <HAL_RCCEx_PeriphCLKConfig+0xce>
    __HAL_RCC_I2C2_CONFIG(pPeriphClkInit->I2c2ClockSelection);
 800790c:	4979      	ldr	r1, [pc, #484]	@ (8007af4 <HAL_RCCEx_PeriphCLKConfig+0x2a4>)
 800790e:	6f28      	ldr	r0, [r5, #112]	@ 0x70
 8007910:	f8d1 20e0 	ldr.w	r2, [r1, #224]	@ 0xe0
 8007914:	f422 5240 	bic.w	r2, r2, #12288	@ 0x3000
 8007918:	4302      	orrs	r2, r0
 800791a:	f8c1 20e0 	str.w	r2, [r1, #224]	@ 0xe0
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C3) == RCC_PERIPHCLK_I2C3)
 800791e:	05dc      	lsls	r4, r3, #23
 8007920:	d508      	bpl.n	8007934 <HAL_RCCEx_PeriphCLKConfig+0xe4>
    __HAL_RCC_I2C3_CONFIG(pPeriphClkInit->I2c3ClockSelection);
 8007922:	4974      	ldr	r1, [pc, #464]	@ (8007af4 <HAL_RCCEx_PeriphCLKConfig+0x2a4>)
 8007924:	6f68      	ldr	r0, [r5, #116]	@ 0x74
 8007926:	f8d1 20e8 	ldr.w	r2, [r1, #232]	@ 0xe8
 800792a:	f022 02c0 	bic.w	r2, r2, #192	@ 0xc0
 800792e:	4302      	orrs	r2, r0
 8007930:	f8c1 20e8 	str.w	r2, [r1, #232]	@ 0xe8
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C4) == RCC_PERIPHCLK_I2C4)
 8007934:	0258      	lsls	r0, r3, #9
 8007936:	d508      	bpl.n	800794a <HAL_RCCEx_PeriphCLKConfig+0xfa>
    __HAL_RCC_I2C4_CONFIG(pPeriphClkInit->I2c4ClockSelection);
 8007938:	496e      	ldr	r1, [pc, #440]	@ (8007af4 <HAL_RCCEx_PeriphCLKConfig+0x2a4>)
 800793a:	6fa8      	ldr	r0, [r5, #120]	@ 0x78
 800793c:	f8d1 20e0 	ldr.w	r2, [r1, #224]	@ 0xe0
 8007940:	f422 4240 	bic.w	r2, r2, #49152	@ 0xc000
 8007944:	4302      	orrs	r2, r0
 8007946:	f8c1 20e0 	str.w	r2, [r1, #224]	@ 0xe0
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C5) == RCC_PERIPHCLK_I2C5)
 800794a:	0059      	lsls	r1, r3, #1
 800794c:	d508      	bpl.n	8007960 <HAL_RCCEx_PeriphCLKConfig+0x110>
    __HAL_RCC_I2C5_CONFIG(pPeriphClkInit->I2c5ClockSelection);
 800794e:	4969      	ldr	r1, [pc, #420]	@ (8007af4 <HAL_RCCEx_PeriphCLKConfig+0x2a4>)
 8007950:	6fe8      	ldr	r0, [r5, #124]	@ 0x7c
 8007952:	f8d1 20e4 	ldr.w	r2, [r1, #228]	@ 0xe4
 8007956:	f022 7240 	bic.w	r2, r2, #50331648	@ 0x3000000
 800795a:	4302      	orrs	r2, r0
 800795c:	f8c1 20e4 	str.w	r2, [r1, #228]	@ 0xe4
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C6) == RCC_PERIPHCLK_I2C6)
 8007960:	2b00      	cmp	r3, #0
 8007962:	da09      	bge.n	8007978 <HAL_RCCEx_PeriphCLKConfig+0x128>
    __HAL_RCC_I2C6_CONFIG(pPeriphClkInit->I2c6ClockSelection);
 8007964:	4963      	ldr	r1, [pc, #396]	@ (8007af4 <HAL_RCCEx_PeriphCLKConfig+0x2a4>)
 8007966:	f8d5 0080 	ldr.w	r0, [r5, #128]	@ 0x80
 800796a:	f8d1 20e4 	ldr.w	r2, [r1, #228]	@ 0xe4
 800796e:	f022 6240 	bic.w	r2, r2, #201326592	@ 0xc000000
 8007972:	4302      	orrs	r2, r0
 8007974:	f8c1 20e4 	str.w	r2, [r1, #228]	@ 0xe4
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM1) == (RCC_PERIPHCLK_LPTIM1))
 8007978:	059a      	lsls	r2, r3, #22
 800797a:	d509      	bpl.n	8007990 <HAL_RCCEx_PeriphCLKConfig+0x140>
    __HAL_RCC_LPTIM1_CONFIG(pPeriphClkInit->Lptim1ClockSelection);
 800797c:	495d      	ldr	r1, [pc, #372]	@ (8007af4 <HAL_RCCEx_PeriphCLKConfig+0x2a4>)
 800797e:	f8d5 0084 	ldr.w	r0, [r5, #132]	@ 0x84
 8007982:	f8d1 20e8 	ldr.w	r2, [r1, #232]	@ 0xe8
 8007986:	f422 6240 	bic.w	r2, r2, #3072	@ 0xc00
 800798a:	4302      	orrs	r2, r0
 800798c:	f8c1 20e8 	str.w	r2, [r1, #232]	@ 0xe8
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM2) == (RCC_PERIPHCLK_LPTIM2))
 8007990:	055f      	lsls	r7, r3, #21
 8007992:	d509      	bpl.n	80079a8 <HAL_RCCEx_PeriphCLKConfig+0x158>
    __HAL_RCC_LPTIM2_CONFIG(pPeriphClkInit->Lptim2ClockSelection);
 8007994:	4957      	ldr	r1, [pc, #348]	@ (8007af4 <HAL_RCCEx_PeriphCLKConfig+0x2a4>)
 8007996:	f8d5 0088 	ldr.w	r0, [r5, #136]	@ 0x88
 800799a:	f8d1 20e0 	ldr.w	r2, [r1, #224]	@ 0xe0
 800799e:	f422 2240 	bic.w	r2, r2, #786432	@ 0xc0000
 80079a2:	4302      	orrs	r2, r0
 80079a4:	f8c1 20e0 	str.w	r2, [r1, #224]	@ 0xe0
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM34) == (RCC_PERIPHCLK_LPTIM34))
 80079a8:	051e      	lsls	r6, r3, #20
 80079aa:	d509      	bpl.n	80079c0 <HAL_RCCEx_PeriphCLKConfig+0x170>
    __HAL_RCC_LPTIM34_CONFIG(pPeriphClkInit->Lptim34ClockSelection);
 80079ac:	4951      	ldr	r1, [pc, #324]	@ (8007af4 <HAL_RCCEx_PeriphCLKConfig+0x2a4>)
 80079ae:	f8d5 008c 	ldr.w	r0, [r5, #140]	@ 0x8c
 80079b2:	f8d1 20e8 	ldr.w	r2, [r1, #232]	@ 0xe8
 80079b6:	f422 7240 	bic.w	r2, r2, #768	@ 0x300
 80079ba:	4302      	orrs	r2, r0
 80079bc:	f8c1 20e8 	str.w	r2, [r1, #232]	@ 0xe8
  if ((((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI1) == RCC_PERIPHCLK_SAI1))
 80079c0:	049c      	lsls	r4, r3, #18
 80079c2:	d527      	bpl.n	8007a14 <HAL_RCCEx_PeriphCLKConfig+0x1c4>
    switch (pPeriphClkInit->Sai1ClockSelection)
 80079c4:	f8d5 309c 	ldr.w	r3, [r5, #156]	@ 0x9c
 80079c8:	2b40      	cmp	r3, #64	@ 0x40
 80079ca:	d025      	beq.n	8007a18 <HAL_RCCEx_PeriphCLKConfig+0x1c8>
 80079cc:	d814      	bhi.n	80079f8 <HAL_RCCEx_PeriphCLKConfig+0x1a8>
 80079ce:	b34b      	cbz	r3, 8007a24 <HAL_RCCEx_PeriphCLKConfig+0x1d4>
 80079d0:	2b20      	cmp	r3, #32
 80079d2:	d02f      	beq.n	8007a34 <HAL_RCCEx_PeriphCLKConfig+0x1e4>
 80079d4:	2601      	movs	r6, #1
  if ((((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI2) == RCC_PERIPHCLK_SAI2))
 80079d6:	682b      	ldr	r3, [r5, #0]
 80079d8:	0458      	lsls	r0, r3, #17
 80079da:	d50b      	bpl.n	80079f4 <HAL_RCCEx_PeriphCLKConfig+0x1a4>
    switch (pPeriphClkInit->Sai2ClockSelection)
 80079dc:	f8d5 30a0 	ldr.w	r3, [r5, #160]	@ 0xa0
 80079e0:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 80079e4:	d058      	beq.n	8007a98 <HAL_RCCEx_PeriphCLKConfig+0x248>
 80079e6:	d82a      	bhi.n	8007a3e <HAL_RCCEx_PeriphCLKConfig+0x1ee>
 80079e8:	2b00      	cmp	r3, #0
 80079ea:	d05b      	beq.n	8007aa4 <HAL_RCCEx_PeriphCLKConfig+0x254>
 80079ec:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 80079f0:	d05e      	beq.n	8007ab0 <HAL_RCCEx_PeriphCLKConfig+0x260>
 80079f2:	2601      	movs	r6, #1
 80079f4:	4634      	mov	r4, r6
 80079f6:	e035      	b.n	8007a64 <HAL_RCCEx_PeriphCLKConfig+0x214>
    switch (pPeriphClkInit->Sai1ClockSelection)
 80079f8:	2b60      	cmp	r3, #96	@ 0x60
 80079fa:	d001      	beq.n	8007a00 <HAL_RCCEx_PeriphCLKConfig+0x1b0>
 80079fc:	2b80      	cmp	r3, #128	@ 0x80
 80079fe:	d1e9      	bne.n	80079d4 <HAL_RCCEx_PeriphCLKConfig+0x184>
      __HAL_RCC_SAI1_CONFIG(pPeriphClkInit->Sai1ClockSelection);
 8007a00:	4a3c      	ldr	r2, [pc, #240]	@ (8007af4 <HAL_RCCEx_PeriphCLKConfig+0x2a4>)
 8007a02:	f8d5 109c 	ldr.w	r1, [r5, #156]	@ 0x9c
 8007a06:	f8d2 30e4 	ldr.w	r3, [r2, #228]	@ 0xe4
 8007a0a:	f023 03e0 	bic.w	r3, r3, #224	@ 0xe0
 8007a0e:	430b      	orrs	r3, r1
 8007a10:	f8c2 30e4 	str.w	r3, [r2, #228]	@ 0xe4
  HAL_StatusTypeDef ret = HAL_OK;      /* Intermediate status */
 8007a14:	2600      	movs	r6, #0
 8007a16:	e7de      	b.n	80079d6 <HAL_RCCEx_PeriphCLKConfig+0x186>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVP);
 8007a18:	4a36      	ldr	r2, [pc, #216]	@ (8007af4 <HAL_RCCEx_PeriphCLKConfig+0x2a4>)
 8007a1a:	6a93      	ldr	r3, [r2, #40]	@ 0x28
 8007a1c:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8007a20:	6293      	str	r3, [r2, #40]	@ 0x28
    if (ret == HAL_OK)
 8007a22:	e7ed      	b.n	8007a00 <HAL_RCCEx_PeriphCLKConfig+0x1b0>
        ret = RCCEx_PLL2_Config(&(pPeriphClkInit->PLL2));
 8007a24:	f105 0008 	add.w	r0, r5, #8
 8007a28:	f7ff fe3a 	bl	80076a0 <RCCEx_PLL2_Config>
        ret = RCCEx_PLL3_Config(&(pPeriphClkInit->PLL3));
 8007a2c:	4606      	mov	r6, r0
    if (ret == HAL_OK)
 8007a2e:	2800      	cmp	r0, #0
 8007a30:	d1d1      	bne.n	80079d6 <HAL_RCCEx_PeriphCLKConfig+0x186>
 8007a32:	e7e5      	b.n	8007a00 <HAL_RCCEx_PeriphCLKConfig+0x1b0>
        ret = RCCEx_PLL3_Config(&(pPeriphClkInit->PLL3));
 8007a34:	f105 002c 	add.w	r0, r5, #44	@ 0x2c
 8007a38:	f7ff fe9e 	bl	8007778 <RCCEx_PLL3_Config>
 8007a3c:	e7f6      	b.n	8007a2c <HAL_RCCEx_PeriphCLKConfig+0x1dc>
    switch (pPeriphClkInit->Sai2ClockSelection)
 8007a3e:	f5b3 7f40 	cmp.w	r3, #768	@ 0x300
 8007a42:	d002      	beq.n	8007a4a <HAL_RCCEx_PeriphCLKConfig+0x1fa>
 8007a44:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8007a48:	d1d3      	bne.n	80079f2 <HAL_RCCEx_PeriphCLKConfig+0x1a2>
    switch (pPeriphClkInit->Sai1ClockSelection)
 8007a4a:	4634      	mov	r4, r6
    if (ret == HAL_OK)
 8007a4c:	2c00      	cmp	r4, #0
 8007a4e:	d134      	bne.n	8007aba <HAL_RCCEx_PeriphCLKConfig+0x26a>
      __HAL_RCC_SAI2_CONFIG(pPeriphClkInit->Sai2ClockSelection);
 8007a50:	4a28      	ldr	r2, [pc, #160]	@ (8007af4 <HAL_RCCEx_PeriphCLKConfig+0x2a4>)
 8007a52:	f8d5 10a0 	ldr.w	r1, [r5, #160]	@ 0xa0
 8007a56:	f8d2 30e4 	ldr.w	r3, [r2, #228]	@ 0xe4
 8007a5a:	f423 63e0 	bic.w	r3, r3, #1792	@ 0x700
 8007a5e:	430b      	orrs	r3, r1
 8007a60:	f8c2 30e4 	str.w	r3, [r2, #228]	@ 0xe4
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_ADCDAC) == RCC_PERIPHCLK_ADCDAC)
 8007a64:	682b      	ldr	r3, [r5, #0]
 8007a66:	0419      	lsls	r1, r3, #16
 8007a68:	d50a      	bpl.n	8007a80 <HAL_RCCEx_PeriphCLKConfig+0x230>
    switch (pPeriphClkInit->AdcDacClockSelection)
 8007a6a:	f8d5 30b4 	ldr.w	r3, [r5, #180]	@ 0xb4
 8007a6e:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 8007a72:	d036      	beq.n	8007ae2 <HAL_RCCEx_PeriphCLKConfig+0x292>
 8007a74:	f423 5280 	bic.w	r2, r3, #4096	@ 0x1000
 8007a78:	d821      	bhi.n	8007abe <HAL_RCCEx_PeriphCLKConfig+0x26e>
 8007a7a:	b332      	cbz	r2, 8007aca <HAL_RCCEx_PeriphCLKConfig+0x27a>
 8007a7c:	2601      	movs	r6, #1
 8007a7e:	4634      	mov	r4, r6
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_MDF1) == RCC_PERIPHCLK_MDF1)
 8007a80:	682b      	ldr	r3, [r5, #0]
 8007a82:	03da      	lsls	r2, r3, #15
 8007a84:	d548      	bpl.n	8007b18 <HAL_RCCEx_PeriphCLKConfig+0x2c8>
    switch (pPeriphClkInit->Mdf1ClockSelection)
 8007a86:	f8d5 3094 	ldr.w	r3, [r5, #148]	@ 0x94
 8007a8a:	2b04      	cmp	r3, #4
 8007a8c:	d85a      	bhi.n	8007b44 <HAL_RCCEx_PeriphCLKConfig+0x2f4>
 8007a8e:	e8df f003 	tbb	[pc, r3]
 8007a92:	3338      	.short	0x3338
 8007a94:	3853      	.short	0x3853
 8007a96:	38          	.byte	0x38
 8007a97:	00          	.byte	0x00
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVP);
 8007a98:	4a16      	ldr	r2, [pc, #88]	@ (8007af4 <HAL_RCCEx_PeriphCLKConfig+0x2a4>)
 8007a9a:	6a93      	ldr	r3, [r2, #40]	@ 0x28
 8007a9c:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8007aa0:	6293      	str	r3, [r2, #40]	@ 0x28
        break;
 8007aa2:	e7d2      	b.n	8007a4a <HAL_RCCEx_PeriphCLKConfig+0x1fa>
        ret = RCCEx_PLL2_Config(&(pPeriphClkInit->PLL2));
 8007aa4:	f105 0008 	add.w	r0, r5, #8
 8007aa8:	f7ff fdfa 	bl	80076a0 <RCCEx_PLL2_Config>
        ret = RCCEx_PLL3_Config(&(pPeriphClkInit->PLL3));
 8007aac:	4604      	mov	r4, r0
        break;
 8007aae:	e7cd      	b.n	8007a4c <HAL_RCCEx_PeriphCLKConfig+0x1fc>
        ret = RCCEx_PLL3_Config(&(pPeriphClkInit->PLL3));
 8007ab0:	f105 002c 	add.w	r0, r5, #44	@ 0x2c
 8007ab4:	f7ff fe60 	bl	8007778 <RCCEx_PLL3_Config>
 8007ab8:	e7f8      	b.n	8007aac <HAL_RCCEx_PeriphCLKConfig+0x25c>
 8007aba:	4626      	mov	r6, r4
 8007abc:	e7d2      	b.n	8007a64 <HAL_RCCEx_PeriphCLKConfig+0x214>
    switch (pPeriphClkInit->AdcDacClockSelection)
 8007abe:	f5b2 4f80 	cmp.w	r2, #16384	@ 0x4000
 8007ac2:	d002      	beq.n	8007aca <HAL_RCCEx_PeriphCLKConfig+0x27a>
 8007ac4:	f5b3 5f40 	cmp.w	r3, #12288	@ 0x3000
 8007ac8:	d1d8      	bne.n	8007a7c <HAL_RCCEx_PeriphCLKConfig+0x22c>
    if (ret == HAL_OK)
 8007aca:	b984      	cbnz	r4, 8007aee <HAL_RCCEx_PeriphCLKConfig+0x29e>
      __HAL_RCC_ADCDAC_CONFIG(pPeriphClkInit->AdcDacClockSelection);
 8007acc:	4a09      	ldr	r2, [pc, #36]	@ (8007af4 <HAL_RCCEx_PeriphCLKConfig+0x2a4>)
 8007ace:	f8d5 10b4 	ldr.w	r1, [r5, #180]	@ 0xb4
 8007ad2:	f8d2 30e8 	ldr.w	r3, [r2, #232]	@ 0xe8
 8007ad6:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 8007ada:	430b      	orrs	r3, r1
 8007adc:	f8c2 30e8 	str.w	r3, [r2, #232]	@ 0xe8
 8007ae0:	e7ce      	b.n	8007a80 <HAL_RCCEx_PeriphCLKConfig+0x230>
        ret = RCCEx_PLL2_Config(&(pPeriphClkInit->PLL2));
 8007ae2:	f105 0008 	add.w	r0, r5, #8
 8007ae6:	f7ff fddb 	bl	80076a0 <RCCEx_PLL2_Config>
 8007aea:	4604      	mov	r4, r0
        break;
 8007aec:	e7ed      	b.n	8007aca <HAL_RCCEx_PeriphCLKConfig+0x27a>
 8007aee:	4626      	mov	r6, r4
 8007af0:	e7c6      	b.n	8007a80 <HAL_RCCEx_PeriphCLKConfig+0x230>
 8007af2:	bf00      	nop
 8007af4:	46020c00 	.word	0x46020c00
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVP);
 8007af8:	4a69      	ldr	r2, [pc, #420]	@ (8007ca0 <HAL_RCCEx_PeriphCLKConfig+0x450>)
 8007afa:	6a93      	ldr	r3, [r2, #40]	@ 0x28
 8007afc:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8007b00:	6293      	str	r3, [r2, #40]	@ 0x28
    if (ret == HAL_OK)
 8007b02:	bb14      	cbnz	r4, 8007b4a <HAL_RCCEx_PeriphCLKConfig+0x2fa>
      __HAL_RCC_MDF1_CONFIG(pPeriphClkInit->Mdf1ClockSelection);
 8007b04:	4a66      	ldr	r2, [pc, #408]	@ (8007ca0 <HAL_RCCEx_PeriphCLKConfig+0x450>)
 8007b06:	f8d5 1094 	ldr.w	r1, [r5, #148]	@ 0x94
 8007b0a:	f8d2 30e4 	ldr.w	r3, [r2, #228]	@ 0xe4
 8007b0e:	f023 0307 	bic.w	r3, r3, #7
 8007b12:	430b      	orrs	r3, r1
 8007b14:	f8c2 30e4 	str.w	r3, [r2, #228]	@ 0xe4
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_ADF1) == RCC_PERIPHCLK_ADF1)
 8007b18:	682b      	ldr	r3, [r5, #0]
 8007b1a:	039b      	lsls	r3, r3, #14
 8007b1c:	d529      	bpl.n	8007b72 <HAL_RCCEx_PeriphCLKConfig+0x322>
    switch (pPeriphClkInit->Adf1ClockSelection)
 8007b1e:	f8d5 3098 	ldr.w	r3, [r5, #152]	@ 0x98
 8007b22:	f5b3 3f00 	cmp.w	r3, #131072	@ 0x20000
 8007b26:	d07d      	beq.n	8007c24 <HAL_RCCEx_PeriphCLKConfig+0x3d4>
 8007b28:	d811      	bhi.n	8007b4e <HAL_RCCEx_PeriphCLKConfig+0x2fe>
 8007b2a:	b1b3      	cbz	r3, 8007b5a <HAL_RCCEx_PeriphCLKConfig+0x30a>
 8007b2c:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8007b30:	d072      	beq.n	8007c18 <HAL_RCCEx_PeriphCLKConfig+0x3c8>
 8007b32:	2601      	movs	r6, #1
 8007b34:	4634      	mov	r4, r6
 8007b36:	e01c      	b.n	8007b72 <HAL_RCCEx_PeriphCLKConfig+0x322>
        ret = RCCEx_PLL3_Config(&(pPeriphClkInit->PLL3));
 8007b38:	f105 002c 	add.w	r0, r5, #44	@ 0x2c
 8007b3c:	f7ff fe1c 	bl	8007778 <RCCEx_PLL3_Config>
 8007b40:	4604      	mov	r4, r0
        break;
 8007b42:	e7de      	b.n	8007b02 <HAL_RCCEx_PeriphCLKConfig+0x2b2>
    switch (pPeriphClkInit->Mdf1ClockSelection)
 8007b44:	2601      	movs	r6, #1
 8007b46:	4634      	mov	r4, r6
 8007b48:	e7e6      	b.n	8007b18 <HAL_RCCEx_PeriphCLKConfig+0x2c8>
 8007b4a:	4626      	mov	r6, r4
 8007b4c:	e7e4      	b.n	8007b18 <HAL_RCCEx_PeriphCLKConfig+0x2c8>
    switch (pPeriphClkInit->Adf1ClockSelection)
 8007b4e:	f5b3 3f40 	cmp.w	r3, #196608	@ 0x30000
 8007b52:	d002      	beq.n	8007b5a <HAL_RCCEx_PeriphCLKConfig+0x30a>
 8007b54:	f5b3 2f80 	cmp.w	r3, #262144	@ 0x40000
 8007b58:	d1eb      	bne.n	8007b32 <HAL_RCCEx_PeriphCLKConfig+0x2e2>
    if (ret == HAL_OK)
 8007b5a:	2c00      	cmp	r4, #0
 8007b5c:	d168      	bne.n	8007c30 <HAL_RCCEx_PeriphCLKConfig+0x3e0>
      __HAL_RCC_ADF1_CONFIG(pPeriphClkInit->Adf1ClockSelection);
 8007b5e:	4a50      	ldr	r2, [pc, #320]	@ (8007ca0 <HAL_RCCEx_PeriphCLKConfig+0x450>)
 8007b60:	f8d5 1098 	ldr.w	r1, [r5, #152]	@ 0x98
 8007b64:	f8d2 30e8 	ldr.w	r3, [r2, #232]	@ 0xe8
 8007b68:	f423 23e0 	bic.w	r3, r3, #458752	@ 0x70000
 8007b6c:	430b      	orrs	r3, r1
 8007b6e:	f8c2 30e8 	str.w	r3, [r2, #232]	@ 0xe8
  if ((pPeriphClkInit->PeriphClockSelection & RCC_PERIPHCLK_RTC) == RCC_PERIPHCLK_RTC)
 8007b72:	682b      	ldr	r3, [r5, #0]
 8007b74:	035f      	lsls	r7, r3, #13
 8007b76:	d53c      	bpl.n	8007bf2 <HAL_RCCEx_PeriphCLKConfig+0x3a2>
    if (__HAL_RCC_PWR_IS_CLK_DISABLED())
 8007b78:	4b49      	ldr	r3, [pc, #292]	@ (8007ca0 <HAL_RCCEx_PeriphCLKConfig+0x450>)
 8007b7a:	f8d3 2094 	ldr.w	r2, [r3, #148]	@ 0x94
 8007b7e:	0750      	lsls	r0, r2, #29
 8007b80:	d458      	bmi.n	8007c34 <HAL_RCCEx_PeriphCLKConfig+0x3e4>
      pwrclkchanged = SET;
 8007b82:	2701      	movs	r7, #1
      __HAL_RCC_PWR_CLK_ENABLE();
 8007b84:	f8d3 2094 	ldr.w	r2, [r3, #148]	@ 0x94
 8007b88:	f042 0204 	orr.w	r2, r2, #4
 8007b8c:	f8c3 2094 	str.w	r2, [r3, #148]	@ 0x94
 8007b90:	f8d3 3094 	ldr.w	r3, [r3, #148]	@ 0x94
 8007b94:	f003 0304 	and.w	r3, r3, #4
 8007b98:	9301      	str	r3, [sp, #4]
 8007b9a:	9b01      	ldr	r3, [sp, #4]
    SET_BIT(PWR->DBPR, PWR_DBPR_DBP);
 8007b9c:	f8df 8104 	ldr.w	r8, [pc, #260]	@ 8007ca4 <HAL_RCCEx_PeriphCLKConfig+0x454>
 8007ba0:	f8d8 3028 	ldr.w	r3, [r8, #40]	@ 0x28
 8007ba4:	f043 0301 	orr.w	r3, r3, #1
 8007ba8:	f8c8 3028 	str.w	r3, [r8, #40]	@ 0x28
    tickstart = HAL_GetTick();
 8007bac:	f7fc f9da 	bl	8003f64 <HAL_GetTick>
 8007bb0:	4681      	mov	r9, r0
    while (HAL_IS_BIT_CLR(PWR->DBPR, PWR_DBPR_DBP))
 8007bb2:	f8d8 3028 	ldr.w	r3, [r8, #40]	@ 0x28
 8007bb6:	07d9      	lsls	r1, r3, #31
 8007bb8:	d53e      	bpl.n	8007c38 <HAL_RCCEx_PeriphCLKConfig+0x3e8>
    if (ret == HAL_OK)
 8007bba:	2c00      	cmp	r4, #0
 8007bbc:	d16d      	bne.n	8007c9a <HAL_RCCEx_PeriphCLKConfig+0x44a>
      tmpregister = READ_BIT(RCC->BDCR, RCC_BDCR_RTCSEL);
 8007bbe:	4b38      	ldr	r3, [pc, #224]	@ (8007ca0 <HAL_RCCEx_PeriphCLKConfig+0x450>)
      if ((tmpregister != RCC_RTCCLKSOURCE_NO_CLK) && (tmpregister != pPeriphClkInit->RTCClockSelection))
 8007bc0:	f8d5 20d0 	ldr.w	r2, [r5, #208]	@ 0xd0
      tmpregister = READ_BIT(RCC->BDCR, RCC_BDCR_RTCSEL);
 8007bc4:	f8d3 10f0 	ldr.w	r1, [r3, #240]	@ 0xf0
      if ((tmpregister != RCC_RTCCLKSOURCE_NO_CLK) && (tmpregister != pPeriphClkInit->RTCClockSelection))
 8007bc8:	f411 7140 	ands.w	r1, r1, #768	@ 0x300
 8007bcc:	d13d      	bne.n	8007c4a <HAL_RCCEx_PeriphCLKConfig+0x3fa>
        __HAL_RCC_RTC_CONFIG(pPeriphClkInit->RTCClockSelection);
 8007bce:	4a34      	ldr	r2, [pc, #208]	@ (8007ca0 <HAL_RCCEx_PeriphCLKConfig+0x450>)
 8007bd0:	f8d5 10d0 	ldr.w	r1, [r5, #208]	@ 0xd0
 8007bd4:	f8d2 30f0 	ldr.w	r3, [r2, #240]	@ 0xf0
 8007bd8:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 8007bdc:	430b      	orrs	r3, r1
 8007bde:	f8c2 30f0 	str.w	r3, [r2, #240]	@ 0xf0
    if (pwrclkchanged == SET)
 8007be2:	b137      	cbz	r7, 8007bf2 <HAL_RCCEx_PeriphCLKConfig+0x3a2>
      __HAL_RCC_PWR_CLK_DISABLE();
 8007be4:	4a2e      	ldr	r2, [pc, #184]	@ (8007ca0 <HAL_RCCEx_PeriphCLKConfig+0x450>)
 8007be6:	f8d2 3094 	ldr.w	r3, [r2, #148]	@ 0x94
 8007bea:	f023 0304 	bic.w	r3, r3, #4
 8007bee:	f8c2 3094 	str.w	r3, [r2, #148]	@ 0x94
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_ICLK) == RCC_PERIPHCLK_ICLK)
 8007bf2:	682b      	ldr	r3, [r5, #0]
 8007bf4:	02df      	lsls	r7, r3, #11
 8007bf6:	d567      	bpl.n	8007cc8 <HAL_RCCEx_PeriphCLKConfig+0x478>
    switch (pPeriphClkInit->IclkClockSelection)
 8007bf8:	f8d5 30ac 	ldr.w	r3, [r5, #172]	@ 0xac
 8007bfc:	f1b3 6f00 	cmp.w	r3, #134217728	@ 0x8000000
 8007c00:	f000 8165 	beq.w	8007ece <HAL_RCCEx_PeriphCLKConfig+0x67e>
 8007c04:	d850      	bhi.n	8007ca8 <HAL_RCCEx_PeriphCLKConfig+0x458>
 8007c06:	2b00      	cmp	r3, #0
 8007c08:	d051      	beq.n	8007cae <HAL_RCCEx_PeriphCLKConfig+0x45e>
 8007c0a:	f1b3 6f80 	cmp.w	r3, #67108864	@ 0x4000000
 8007c0e:	f000 8158 	beq.w	8007ec2 <HAL_RCCEx_PeriphCLKConfig+0x672>
 8007c12:	2601      	movs	r6, #1
 8007c14:	4634      	mov	r4, r6
 8007c16:	e057      	b.n	8007cc8 <HAL_RCCEx_PeriphCLKConfig+0x478>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVP);
 8007c18:	4a21      	ldr	r2, [pc, #132]	@ (8007ca0 <HAL_RCCEx_PeriphCLKConfig+0x450>)
 8007c1a:	6a93      	ldr	r3, [r2, #40]	@ 0x28
 8007c1c:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8007c20:	6293      	str	r3, [r2, #40]	@ 0x28
        break;
 8007c22:	e79a      	b.n	8007b5a <HAL_RCCEx_PeriphCLKConfig+0x30a>
        ret = RCCEx_PLL3_Config(&(pPeriphClkInit->PLL3));
 8007c24:	f105 002c 	add.w	r0, r5, #44	@ 0x2c
 8007c28:	f7ff fda6 	bl	8007778 <RCCEx_PLL3_Config>
 8007c2c:	4604      	mov	r4, r0
        break;
 8007c2e:	e794      	b.n	8007b5a <HAL_RCCEx_PeriphCLKConfig+0x30a>
 8007c30:	4626      	mov	r6, r4
 8007c32:	e79e      	b.n	8007b72 <HAL_RCCEx_PeriphCLKConfig+0x322>
    FlagStatus       pwrclkchanged = RESET;
 8007c34:	2700      	movs	r7, #0
 8007c36:	e7b1      	b.n	8007b9c <HAL_RCCEx_PeriphCLKConfig+0x34c>
      if ((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 8007c38:	f7fc f994 	bl	8003f64 <HAL_GetTick>
 8007c3c:	eba0 0009 	sub.w	r0, r0, r9
 8007c40:	2802      	cmp	r0, #2
 8007c42:	d9b6      	bls.n	8007bb2 <HAL_RCCEx_PeriphCLKConfig+0x362>
        ret = HAL_TIMEOUT;
 8007c44:	2603      	movs	r6, #3
 8007c46:	4634      	mov	r4, r6
 8007c48:	e7cb      	b.n	8007be2 <HAL_RCCEx_PeriphCLKConfig+0x392>
      if ((tmpregister != RCC_RTCCLKSOURCE_NO_CLK) && (tmpregister != pPeriphClkInit->RTCClockSelection))
 8007c4a:	4291      	cmp	r1, r2
 8007c4c:	d011      	beq.n	8007c72 <HAL_RCCEx_PeriphCLKConfig+0x422>
        tmpregister = READ_BIT(RCC->BDCR, ~(RCC_BDCR_RTCSEL));
 8007c4e:	f8d3 20f0 	ldr.w	r2, [r3, #240]	@ 0xf0
        __HAL_RCC_BACKUPRESET_FORCE();
 8007c52:	f8d3 10f0 	ldr.w	r1, [r3, #240]	@ 0xf0
        tmpregister = READ_BIT(RCC->BDCR, ~(RCC_BDCR_RTCSEL));
 8007c56:	f422 7240 	bic.w	r2, r2, #768	@ 0x300
        __HAL_RCC_BACKUPRESET_FORCE();
 8007c5a:	f441 3180 	orr.w	r1, r1, #65536	@ 0x10000
 8007c5e:	f8c3 10f0 	str.w	r1, [r3, #240]	@ 0xf0
        __HAL_RCC_BACKUPRESET_RELEASE();
 8007c62:	f8d3 10f0 	ldr.w	r1, [r3, #240]	@ 0xf0
 8007c66:	f421 3180 	bic.w	r1, r1, #65536	@ 0x10000
 8007c6a:	f8c3 10f0 	str.w	r1, [r3, #240]	@ 0xf0
        RCC->BDCR = tmpregister;
 8007c6e:	f8c3 20f0 	str.w	r2, [r3, #240]	@ 0xf0
      if (HAL_IS_BIT_SET(tmpregister, RCC_BDCR_LSEON))
 8007c72:	07d2      	lsls	r2, r2, #31
 8007c74:	d5ab      	bpl.n	8007bce <HAL_RCCEx_PeriphCLKConfig+0x37e>
        tickstart = HAL_GetTick();
 8007c76:	f7fc f975 	bl	8003f64 <HAL_GetTick>
          if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8007c7a:	f241 3a88 	movw	sl, #5000	@ 0x1388
        tickstart = HAL_GetTick();
 8007c7e:	4680      	mov	r8, r0
        while (READ_BIT(RCC->BDCR, RCC_BDCR_LSERDY) == 0U)
 8007c80:	f8df 901c 	ldr.w	r9, [pc, #28]	@ 8007ca0 <HAL_RCCEx_PeriphCLKConfig+0x450>
 8007c84:	f8d9 30f0 	ldr.w	r3, [r9, #240]	@ 0xf0
 8007c88:	079b      	lsls	r3, r3, #30
 8007c8a:	d4a0      	bmi.n	8007bce <HAL_RCCEx_PeriphCLKConfig+0x37e>
          if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8007c8c:	f7fc f96a 	bl	8003f64 <HAL_GetTick>
 8007c90:	eba0 0008 	sub.w	r0, r0, r8
 8007c94:	4550      	cmp	r0, sl
 8007c96:	d9f5      	bls.n	8007c84 <HAL_RCCEx_PeriphCLKConfig+0x434>
 8007c98:	e7d4      	b.n	8007c44 <HAL_RCCEx_PeriphCLKConfig+0x3f4>
 8007c9a:	4626      	mov	r6, r4
 8007c9c:	e7a1      	b.n	8007be2 <HAL_RCCEx_PeriphCLKConfig+0x392>
 8007c9e:	bf00      	nop
 8007ca0:	46020c00 	.word	0x46020c00
 8007ca4:	46020800 	.word	0x46020800
    switch (pPeriphClkInit->IclkClockSelection)
 8007ca8:	f1b3 6f40 	cmp.w	r3, #201326592	@ 0xc000000
 8007cac:	d1b1      	bne.n	8007c12 <HAL_RCCEx_PeriphCLKConfig+0x3c2>
    if (ret == HAL_OK)
 8007cae:	2c00      	cmp	r4, #0
 8007cb0:	f040 8113 	bne.w	8007eda <HAL_RCCEx_PeriphCLKConfig+0x68a>
      __HAL_RCC_CLK48_CONFIG(pPeriphClkInit->IclkClockSelection);
 8007cb4:	4ab8      	ldr	r2, [pc, #736]	@ (8007f98 <HAL_RCCEx_PeriphCLKConfig+0x748>)
 8007cb6:	f8d5 10ac 	ldr.w	r1, [r5, #172]	@ 0xac
 8007cba:	f8d2 30e0 	ldr.w	r3, [r2, #224]	@ 0xe0
 8007cbe:	f023 6340 	bic.w	r3, r3, #201326592	@ 0xc000000
 8007cc2:	430b      	orrs	r3, r1
 8007cc4:	f8c2 30e0 	str.w	r3, [r2, #224]	@ 0xe0
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RNG) == RCC_PERIPHCLK_RNG)
 8007cc8:	682b      	ldr	r3, [r5, #0]
 8007cca:	0318      	lsls	r0, r3, #12
 8007ccc:	d513      	bpl.n	8007cf6 <HAL_RCCEx_PeriphCLKConfig+0x4a6>
    switch (pPeriphClkInit->RngClockSelection)
 8007cce:	f8d5 10a4 	ldr.w	r1, [r5, #164]	@ 0xa4
 8007cd2:	f431 5280 	bics.w	r2, r1, #4096	@ 0x1000
 8007cd6:	d003      	beq.n	8007ce0 <HAL_RCCEx_PeriphCLKConfig+0x490>
 8007cd8:	f5b1 5f00 	cmp.w	r1, #8192	@ 0x2000
 8007cdc:	f040 80ff 	bne.w	8007ede <HAL_RCCEx_PeriphCLKConfig+0x68e>
    if (ret == HAL_OK)
 8007ce0:	2c00      	cmp	r4, #0
 8007ce2:	f040 80ff 	bne.w	8007ee4 <HAL_RCCEx_PeriphCLKConfig+0x694>
      __HAL_RCC_RNG_CONFIG(pPeriphClkInit->RngClockSelection);
 8007ce6:	48ac      	ldr	r0, [pc, #688]	@ (8007f98 <HAL_RCCEx_PeriphCLKConfig+0x748>)
 8007ce8:	f8d0 20e4 	ldr.w	r2, [r0, #228]	@ 0xe4
 8007cec:	f422 5240 	bic.w	r2, r2, #12288	@ 0x3000
 8007cf0:	430a      	orrs	r2, r1
 8007cf2:	f8c0 20e4 	str.w	r2, [r0, #228]	@ 0xe4
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAES) == RCC_PERIPHCLK_SAES)
 8007cf6:	04d9      	lsls	r1, r3, #19
 8007cf8:	d509      	bpl.n	8007d0e <HAL_RCCEx_PeriphCLKConfig+0x4be>
    __HAL_RCC_SAES_CONFIG(pPeriphClkInit->SaesClockSelection);
 8007cfa:	49a7      	ldr	r1, [pc, #668]	@ (8007f98 <HAL_RCCEx_PeriphCLKConfig+0x748>)
 8007cfc:	f8d5 00a8 	ldr.w	r0, [r5, #168]	@ 0xa8
 8007d00:	f8d1 20e4 	ldr.w	r2, [r1, #228]	@ 0xe4
 8007d04:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 8007d08:	4302      	orrs	r2, r0
 8007d0a:	f8c1 20e4 	str.w	r2, [r1, #228]	@ 0xe4
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SDMMC) == (RCC_PERIPHCLK_SDMMC))
 8007d0e:	029a      	lsls	r2, r3, #10
 8007d10:	d510      	bpl.n	8007d34 <HAL_RCCEx_PeriphCLKConfig+0x4e4>
    if (pPeriphClkInit->SdmmcClockSelection == RCC_SDMMCCLKSOURCE_PLL1)
 8007d12:	f8d5 00b0 	ldr.w	r0, [r5, #176]	@ 0xb0
 8007d16:	49a0      	ldr	r1, [pc, #640]	@ (8007f98 <HAL_RCCEx_PeriphCLKConfig+0x748>)
 8007d18:	f5b0 4f80 	cmp.w	r0, #16384	@ 0x4000
      __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVP);
 8007d1c:	bf02      	ittt	eq
 8007d1e:	6a8a      	ldreq	r2, [r1, #40]	@ 0x28
 8007d20:	f442 3280 	orreq.w	r2, r2, #65536	@ 0x10000
 8007d24:	628a      	streq	r2, [r1, #40]	@ 0x28
    __HAL_RCC_SDMMC_CONFIG(pPeriphClkInit->SdmmcClockSelection);
 8007d26:	f8d1 20e4 	ldr.w	r2, [r1, #228]	@ 0xe4
 8007d2a:	f422 4280 	bic.w	r2, r2, #16384	@ 0x4000
 8007d2e:	4302      	orrs	r2, r0
 8007d30:	f8c1 20e4 	str.w	r2, [r1, #228]	@ 0xe4
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI1) == RCC_PERIPHCLK_SPI1)
 8007d34:	021f      	lsls	r7, r3, #8
 8007d36:	d509      	bpl.n	8007d4c <HAL_RCCEx_PeriphCLKConfig+0x4fc>
    __HAL_RCC_SPI1_CONFIG(pPeriphClkInit->Spi1ClockSelection);
 8007d38:	4997      	ldr	r1, [pc, #604]	@ (8007f98 <HAL_RCCEx_PeriphCLKConfig+0x748>)
 8007d3a:	f8d5 00c4 	ldr.w	r0, [r5, #196]	@ 0xc4
 8007d3e:	f8d1 20e0 	ldr.w	r2, [r1, #224]	@ 0xe0
 8007d42:	f422 1240 	bic.w	r2, r2, #3145728	@ 0x300000
 8007d46:	4302      	orrs	r2, r0
 8007d48:	f8c1 20e0 	str.w	r2, [r1, #224]	@ 0xe0
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI2) == RCC_PERIPHCLK_SPI2)
 8007d4c:	01d8      	lsls	r0, r3, #7
 8007d4e:	d509      	bpl.n	8007d64 <HAL_RCCEx_PeriphCLKConfig+0x514>
    __HAL_RCC_SPI2_CONFIG(pPeriphClkInit->Spi2ClockSelection);
 8007d50:	4991      	ldr	r1, [pc, #580]	@ (8007f98 <HAL_RCCEx_PeriphCLKConfig+0x748>)
 8007d52:	f8d5 00c8 	ldr.w	r0, [r5, #200]	@ 0xc8
 8007d56:	f8d1 20e0 	ldr.w	r2, [r1, #224]	@ 0xe0
 8007d5a:	f422 3240 	bic.w	r2, r2, #196608	@ 0x30000
 8007d5e:	4302      	orrs	r2, r0
 8007d60:	f8c1 20e0 	str.w	r2, [r1, #224]	@ 0xe0
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI3) == RCC_PERIPHCLK_SPI3)
 8007d64:	0199      	lsls	r1, r3, #6
 8007d66:	d509      	bpl.n	8007d7c <HAL_RCCEx_PeriphCLKConfig+0x52c>
    __HAL_RCC_SPI3_CONFIG(pPeriphClkInit->Spi3ClockSelection);
 8007d68:	498b      	ldr	r1, [pc, #556]	@ (8007f98 <HAL_RCCEx_PeriphCLKConfig+0x748>)
 8007d6a:	f8d5 00cc 	ldr.w	r0, [r5, #204]	@ 0xcc
 8007d6e:	f8d1 20e8 	ldr.w	r2, [r1, #232]	@ 0xe8
 8007d72:	f022 0218 	bic.w	r2, r2, #24
 8007d76:	4302      	orrs	r2, r0
 8007d78:	f8c1 20e8 	str.w	r2, [r1, #232]	@ 0xe8
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_OSPI) == RCC_PERIPHCLK_OSPI)
 8007d7c:	015a      	lsls	r2, r3, #5
 8007d7e:	d517      	bpl.n	8007db0 <HAL_RCCEx_PeriphCLKConfig+0x560>
    if (pPeriphClkInit->OspiClockSelection == RCC_OSPICLKSOURCE_PLL1)
 8007d80:	f8d5 30bc 	ldr.w	r3, [r5, #188]	@ 0xbc
 8007d84:	f5b3 1f00 	cmp.w	r3, #2097152	@ 0x200000
 8007d88:	f040 80ae 	bne.w	8007ee8 <HAL_RCCEx_PeriphCLKConfig+0x698>
      __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
 8007d8c:	4a82      	ldr	r2, [pc, #520]	@ (8007f98 <HAL_RCCEx_PeriphCLKConfig+0x748>)
 8007d8e:	6a93      	ldr	r3, [r2, #40]	@ 0x28
 8007d90:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8007d94:	6293      	str	r3, [r2, #40]	@ 0x28
    if (ret == HAL_OK)
 8007d96:	2c00      	cmp	r4, #0
 8007d98:	f040 80b0 	bne.w	8007efc <HAL_RCCEx_PeriphCLKConfig+0x6ac>
      __HAL_RCC_OSPI_CONFIG(pPeriphClkInit->OspiClockSelection);
 8007d9c:	4a7e      	ldr	r2, [pc, #504]	@ (8007f98 <HAL_RCCEx_PeriphCLKConfig+0x748>)
 8007d9e:	f8d5 10bc 	ldr.w	r1, [r5, #188]	@ 0xbc
 8007da2:	f8d2 30e4 	ldr.w	r3, [r2, #228]	@ 0xe4
 8007da6:	f423 1340 	bic.w	r3, r3, #3145728	@ 0x300000
 8007daa:	430b      	orrs	r3, r1
 8007dac:	f8c2 30e4 	str.w	r3, [r2, #228]	@ 0xe4
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_HSPI) == RCC_PERIPHCLK_HSPI)
 8007db0:	686b      	ldr	r3, [r5, #4]
 8007db2:	07db      	lsls	r3, r3, #31
 8007db4:	d510      	bpl.n	8007dd8 <HAL_RCCEx_PeriphCLKConfig+0x588>
    switch (pPeriphClkInit->HspiClockSelection)
 8007db6:	f8d5 30c0 	ldr.w	r3, [r5, #192]	@ 0xc0
 8007dba:	f5b3 0f00 	cmp.w	r3, #8388608	@ 0x800000
 8007dbe:	f000 80b9 	beq.w	8007f34 <HAL_RCCEx_PeriphCLKConfig+0x6e4>
 8007dc2:	f200 809d 	bhi.w	8007f00 <HAL_RCCEx_PeriphCLKConfig+0x6b0>
 8007dc6:	2b00      	cmp	r3, #0
 8007dc8:	f000 80a8 	beq.w	8007f1c <HAL_RCCEx_PeriphCLKConfig+0x6cc>
 8007dcc:	f5b3 0f80 	cmp.w	r3, #4194304	@ 0x400000
 8007dd0:	f000 809f 	beq.w	8007f12 <HAL_RCCEx_PeriphCLKConfig+0x6c2>
 8007dd4:	2601      	movs	r6, #1
 8007dd6:	4634      	mov	r4, r6
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_FDCAN1) == (RCC_PERIPHCLK_FDCAN1))
 8007dd8:	682b      	ldr	r3, [r5, #0]
 8007dda:	011f      	lsls	r7, r3, #4
 8007ddc:	d50e      	bpl.n	8007dfc <HAL_RCCEx_PeriphCLKConfig+0x5ac>
    switch (pPeriphClkInit->Fdcan1ClockSelection)
 8007dde:	f8d5 3090 	ldr.w	r3, [r5, #144]	@ 0x90
 8007de2:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 8007de6:	f000 80ad 	beq.w	8007f44 <HAL_RCCEx_PeriphCLKConfig+0x6f4>
 8007dea:	f1b3 7f00 	cmp.w	r3, #33554432	@ 0x2000000
 8007dee:	f000 80ba 	beq.w	8007f66 <HAL_RCCEx_PeriphCLKConfig+0x716>
 8007df2:	2b00      	cmp	r3, #0
 8007df4:	f000 80ab 	beq.w	8007f4e <HAL_RCCEx_PeriphCLKConfig+0x6fe>
 8007df8:	2601      	movs	r6, #1
 8007dfa:	4634      	mov	r4, r6
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_DAC1) == RCC_PERIPHCLK_DAC1)
 8007dfc:	e9d5 3100 	ldrd	r3, r1, [r5]
 8007e00:	00d8      	lsls	r0, r3, #3
 8007e02:	d509      	bpl.n	8007e18 <HAL_RCCEx_PeriphCLKConfig+0x5c8>
    __HAL_RCC_DAC1_CONFIG(pPeriphClkInit->Dac1ClockSelection);
 8007e04:	4a64      	ldr	r2, [pc, #400]	@ (8007f98 <HAL_RCCEx_PeriphCLKConfig+0x748>)
 8007e06:	f8d5 00b8 	ldr.w	r0, [r5, #184]	@ 0xb8
 8007e0a:	f8d2 30e8 	ldr.w	r3, [r2, #232]	@ 0xe8
 8007e0e:	f423 4300 	bic.w	r3, r3, #32768	@ 0x8000
 8007e12:	4303      	orrs	r3, r0
 8007e14:	f8c2 30e8 	str.w	r3, [r2, #232]	@ 0xe8
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == RCC_PERIPHCLK_LTDC)
 8007e18:	0789      	lsls	r1, r1, #30
 8007e1a:	d51a      	bpl.n	8007e52 <HAL_RCCEx_PeriphCLKConfig+0x602>
    switch (pPeriphClkInit->LtdcClockSelection)
 8007e1c:	f8d5 30d4 	ldr.w	r3, [r5, #212]	@ 0xd4
 8007e20:	2b00      	cmp	r3, #0
 8007e22:	f000 80a8 	beq.w	8007f76 <HAL_RCCEx_PeriphCLKConfig+0x726>
 8007e26:	f5b3 2f80 	cmp.w	r3, #262144	@ 0x40000
 8007e2a:	f040 80a9 	bne.w	8007f80 <HAL_RCCEx_PeriphCLKConfig+0x730>
        ret = RCCEx_PLL2_Config(&(pPeriphClkInit->PLL2));
 8007e2e:	f105 0008 	add.w	r0, r5, #8
 8007e32:	f7ff fc35 	bl	80076a0 <RCCEx_PLL2_Config>
        ret = RCCEx_PLL3_Config(&(pPeriphClkInit->PLL3));
 8007e36:	4604      	mov	r4, r0
    if (ret == HAL_OK)
 8007e38:	2800      	cmp	r0, #0
 8007e3a:	f040 80a4 	bne.w	8007f86 <HAL_RCCEx_PeriphCLKConfig+0x736>
      __HAL_RCC_LTDC_CONFIG(pPeriphClkInit->LtdcClockSelection);
 8007e3e:	4a56      	ldr	r2, [pc, #344]	@ (8007f98 <HAL_RCCEx_PeriphCLKConfig+0x748>)
 8007e40:	f8d5 10d4 	ldr.w	r1, [r5, #212]	@ 0xd4
 8007e44:	f8d2 30e4 	ldr.w	r3, [r2, #228]	@ 0xe4
 8007e48:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 8007e4c:	430b      	orrs	r3, r1
 8007e4e:	f8c2 30e4 	str.w	r3, [r2, #228]	@ 0xe4
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_DSI) == RCC_PERIPHCLK_DSI)
 8007e52:	686b      	ldr	r3, [r5, #4]
 8007e54:	075a      	lsls	r2, r3, #29
 8007e56:	d514      	bpl.n	8007e82 <HAL_RCCEx_PeriphCLKConfig+0x632>
    if (pPeriphClkInit->DsiClockSelection == RCC_DSICLKSOURCE_PLL3)
 8007e58:	f8d5 30d8 	ldr.w	r3, [r5, #216]	@ 0xd8
 8007e5c:	b923      	cbnz	r3, 8007e68 <HAL_RCCEx_PeriphCLKConfig+0x618>
      ret = RCCEx_PLL3_Config(&(pPeriphClkInit->PLL3));
 8007e5e:	f105 002c 	add.w	r0, r5, #44	@ 0x2c
 8007e62:	f7ff fc89 	bl	8007778 <RCCEx_PLL3_Config>
 8007e66:	4604      	mov	r4, r0
    if (ret == HAL_OK)
 8007e68:	2c00      	cmp	r4, #0
 8007e6a:	f040 808e 	bne.w	8007f8a <HAL_RCCEx_PeriphCLKConfig+0x73a>
      __HAL_RCC_DSI_CONFIG(pPeriphClkInit->DsiClockSelection);
 8007e6e:	4a4a      	ldr	r2, [pc, #296]	@ (8007f98 <HAL_RCCEx_PeriphCLKConfig+0x748>)
 8007e70:	f8d5 10d8 	ldr.w	r1, [r5, #216]	@ 0xd8
 8007e74:	f8d2 30e4 	ldr.w	r3, [r2, #228]	@ 0xe4
 8007e78:	f423 4300 	bic.w	r3, r3, #32768	@ 0x8000
 8007e7c:	430b      	orrs	r3, r1
 8007e7e:	f8c2 30e4 	str.w	r3, [r2, #228]	@ 0xe4
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USBPHY) == RCC_PERIPHCLK_USBPHY)
 8007e82:	686b      	ldr	r3, [r5, #4]
 8007e84:	071b      	lsls	r3, r3, #28
 8007e86:	d517      	bpl.n	8007eb8 <HAL_RCCEx_PeriphCLKConfig+0x668>
    switch (pPeriphClkInit->UsbPhyClockSelection)
 8007e88:	f8d5 20dc 	ldr.w	r2, [r5, #220]	@ 0xdc
 8007e8c:	f1b2 4f00 	cmp.w	r2, #2147483648	@ 0x80000000
 8007e90:	d009      	beq.n	8007ea6 <HAL_RCCEx_PeriphCLKConfig+0x656>
 8007e92:	d87c      	bhi.n	8007f8e <HAL_RCCEx_PeriphCLKConfig+0x73e>
 8007e94:	b13a      	cbz	r2, 8007ea6 <HAL_RCCEx_PeriphCLKConfig+0x656>
 8007e96:	f1b2 4f80 	cmp.w	r2, #1073741824	@ 0x40000000
 8007e9a:	d17b      	bne.n	8007f94 <HAL_RCCEx_PeriphCLKConfig+0x744>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVP);
 8007e9c:	493e      	ldr	r1, [pc, #248]	@ (8007f98 <HAL_RCCEx_PeriphCLKConfig+0x748>)
 8007e9e:	6a8b      	ldr	r3, [r1, #40]	@ 0x28
 8007ea0:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8007ea4:	628b      	str	r3, [r1, #40]	@ 0x28
    if (ret == HAL_OK)
 8007ea6:	b944      	cbnz	r4, 8007eba <HAL_RCCEx_PeriphCLKConfig+0x66a>
      __HAL_RCC_USBPHY_CONFIG(pPeriphClkInit->UsbPhyClockSelection);
 8007ea8:	493b      	ldr	r1, [pc, #236]	@ (8007f98 <HAL_RCCEx_PeriphCLKConfig+0x748>)
 8007eaa:	f8d1 30e4 	ldr.w	r3, [r1, #228]	@ 0xe4
 8007eae:	f023 4340 	bic.w	r3, r3, #3221225472	@ 0xc0000000
 8007eb2:	4313      	orrs	r3, r2
 8007eb4:	f8c1 30e4 	str.w	r3, [r1, #228]	@ 0xe4
 8007eb8:	4634      	mov	r4, r6
}
 8007eba:	4620      	mov	r0, r4
 8007ebc:	b002      	add	sp, #8
 8007ebe:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
        ret = RCCEx_PLL2_Config(&(pPeriphClkInit->PLL2));
 8007ec2:	f105 0008 	add.w	r0, r5, #8
 8007ec6:	f7ff fbeb 	bl	80076a0 <RCCEx_PLL2_Config>
 8007eca:	4604      	mov	r4, r0
        break;
 8007ecc:	e6ef      	b.n	8007cae <HAL_RCCEx_PeriphCLKConfig+0x45e>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
 8007ece:	4a32      	ldr	r2, [pc, #200]	@ (8007f98 <HAL_RCCEx_PeriphCLKConfig+0x748>)
 8007ed0:	6a93      	ldr	r3, [r2, #40]	@ 0x28
 8007ed2:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8007ed6:	6293      	str	r3, [r2, #40]	@ 0x28
        break;
 8007ed8:	e6e9      	b.n	8007cae <HAL_RCCEx_PeriphCLKConfig+0x45e>
 8007eda:	4626      	mov	r6, r4
 8007edc:	e6f4      	b.n	8007cc8 <HAL_RCCEx_PeriphCLKConfig+0x478>
    switch (pPeriphClkInit->RngClockSelection)
 8007ede:	2601      	movs	r6, #1
 8007ee0:	4634      	mov	r4, r6
 8007ee2:	e708      	b.n	8007cf6 <HAL_RCCEx_PeriphCLKConfig+0x4a6>
 8007ee4:	4626      	mov	r6, r4
 8007ee6:	e706      	b.n	8007cf6 <HAL_RCCEx_PeriphCLKConfig+0x4a6>
    if (pPeriphClkInit->OspiClockSelection == RCC_OSPICLKSOURCE_PLL2)
 8007ee8:	f5b3 1f40 	cmp.w	r3, #3145728	@ 0x300000
 8007eec:	f47f af53 	bne.w	8007d96 <HAL_RCCEx_PeriphCLKConfig+0x546>
      ret = RCCEx_PLL2_Config(&(pPeriphClkInit->PLL2));
 8007ef0:	f105 0008 	add.w	r0, r5, #8
 8007ef4:	f7ff fbd4 	bl	80076a0 <RCCEx_PLL2_Config>
 8007ef8:	4604      	mov	r4, r0
 8007efa:	e74c      	b.n	8007d96 <HAL_RCCEx_PeriphCLKConfig+0x546>
 8007efc:	4626      	mov	r6, r4
 8007efe:	e757      	b.n	8007db0 <HAL_RCCEx_PeriphCLKConfig+0x560>
    switch (pPeriphClkInit->HspiClockSelection)
 8007f00:	f5b3 0f40 	cmp.w	r3, #12582912	@ 0xc00000
 8007f04:	f47f af66 	bne.w	8007dd4 <HAL_RCCEx_PeriphCLKConfig+0x584>
        ret = RCCEx_PLL3_Config(&(pPeriphClkInit->PLL3));
 8007f08:	f105 002c 	add.w	r0, r5, #44	@ 0x2c
 8007f0c:	f7ff fc34 	bl	8007778 <RCCEx_PLL3_Config>
 8007f10:	e014      	b.n	8007f3c <HAL_RCCEx_PeriphCLKConfig+0x6ec>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
 8007f12:	4a21      	ldr	r2, [pc, #132]	@ (8007f98 <HAL_RCCEx_PeriphCLKConfig+0x748>)
 8007f14:	6a93      	ldr	r3, [r2, #40]	@ 0x28
 8007f16:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8007f1a:	6293      	str	r3, [r2, #40]	@ 0x28
    if (ret == HAL_OK)
 8007f1c:	b984      	cbnz	r4, 8007f40 <HAL_RCCEx_PeriphCLKConfig+0x6f0>
      __HAL_RCC_HSPI_CONFIG(pPeriphClkInit->HspiClockSelection);
 8007f1e:	4a1e      	ldr	r2, [pc, #120]	@ (8007f98 <HAL_RCCEx_PeriphCLKConfig+0x748>)
 8007f20:	f8d5 10c0 	ldr.w	r1, [r5, #192]	@ 0xc0
 8007f24:	f8d2 30e4 	ldr.w	r3, [r2, #228]	@ 0xe4
 8007f28:	f423 0340 	bic.w	r3, r3, #12582912	@ 0xc00000
 8007f2c:	430b      	orrs	r3, r1
 8007f2e:	f8c2 30e4 	str.w	r3, [r2, #228]	@ 0xe4
 8007f32:	e751      	b.n	8007dd8 <HAL_RCCEx_PeriphCLKConfig+0x588>
        ret = RCCEx_PLL2_Config(&(pPeriphClkInit->PLL2));
 8007f34:	f105 0008 	add.w	r0, r5, #8
 8007f38:	f7ff fbb2 	bl	80076a0 <RCCEx_PLL2_Config>
        ret = RCCEx_PLL3_Config(&(pPeriphClkInit->PLL3));
 8007f3c:	4604      	mov	r4, r0
        break;
 8007f3e:	e7ed      	b.n	8007f1c <HAL_RCCEx_PeriphCLKConfig+0x6cc>
 8007f40:	4626      	mov	r6, r4
 8007f42:	e749      	b.n	8007dd8 <HAL_RCCEx_PeriphCLKConfig+0x588>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
 8007f44:	4a14      	ldr	r2, [pc, #80]	@ (8007f98 <HAL_RCCEx_PeriphCLKConfig+0x748>)
 8007f46:	6a93      	ldr	r3, [r2, #40]	@ 0x28
 8007f48:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8007f4c:	6293      	str	r3, [r2, #40]	@ 0x28
    if (ret == HAL_OK)
 8007f4e:	b984      	cbnz	r4, 8007f72 <HAL_RCCEx_PeriphCLKConfig+0x722>
      __HAL_RCC_FDCAN1_CONFIG(pPeriphClkInit->Fdcan1ClockSelection);
 8007f50:	4a11      	ldr	r2, [pc, #68]	@ (8007f98 <HAL_RCCEx_PeriphCLKConfig+0x748>)
 8007f52:	f8d5 1090 	ldr.w	r1, [r5, #144]	@ 0x90
 8007f56:	f8d2 30e0 	ldr.w	r3, [r2, #224]	@ 0xe0
 8007f5a:	f023 7340 	bic.w	r3, r3, #50331648	@ 0x3000000
 8007f5e:	430b      	orrs	r3, r1
 8007f60:	f8c2 30e0 	str.w	r3, [r2, #224]	@ 0xe0
 8007f64:	e74a      	b.n	8007dfc <HAL_RCCEx_PeriphCLKConfig+0x5ac>
        ret = RCCEx_PLL2_Config(&(pPeriphClkInit->PLL2));
 8007f66:	f105 0008 	add.w	r0, r5, #8
 8007f6a:	f7ff fb99 	bl	80076a0 <RCCEx_PLL2_Config>
 8007f6e:	4604      	mov	r4, r0
        break;
 8007f70:	e7ed      	b.n	8007f4e <HAL_RCCEx_PeriphCLKConfig+0x6fe>
 8007f72:	4626      	mov	r6, r4
 8007f74:	e742      	b.n	8007dfc <HAL_RCCEx_PeriphCLKConfig+0x5ac>
        ret = RCCEx_PLL3_Config(&(pPeriphClkInit->PLL3));
 8007f76:	f105 002c 	add.w	r0, r5, #44	@ 0x2c
 8007f7a:	f7ff fbfd 	bl	8007778 <RCCEx_PLL3_Config>
 8007f7e:	e75a      	b.n	8007e36 <HAL_RCCEx_PeriphCLKConfig+0x5e6>
    switch (pPeriphClkInit->LtdcClockSelection)
 8007f80:	2601      	movs	r6, #1
 8007f82:	4634      	mov	r4, r6
 8007f84:	e765      	b.n	8007e52 <HAL_RCCEx_PeriphCLKConfig+0x602>
 8007f86:	4606      	mov	r6, r0
 8007f88:	e763      	b.n	8007e52 <HAL_RCCEx_PeriphCLKConfig+0x602>
 8007f8a:	4626      	mov	r6, r4
 8007f8c:	e779      	b.n	8007e82 <HAL_RCCEx_PeriphCLKConfig+0x632>
    switch (pPeriphClkInit->UsbPhyClockSelection)
 8007f8e:	f1b2 4f40 	cmp.w	r2, #3221225472	@ 0xc0000000
 8007f92:	e782      	b.n	8007e9a <HAL_RCCEx_PeriphCLKConfig+0x64a>
 8007f94:	2401      	movs	r4, #1
 8007f96:	e790      	b.n	8007eba <HAL_RCCEx_PeriphCLKConfig+0x66a>
 8007f98:	46020c00 	.word	0x46020c00

08007f9c <HAL_TIM_Base_MspInit>:
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_Base_MspInit could be implemented in the user file
   */
}
 8007f9c:	4770      	bx	lr
	...

08007fa0 <HAL_TIM_Base_Start_IT>:

  /* Check the parameters */
  assert_param(IS_TIM_INSTANCE(htim->Instance));

  /* Check the TIM state */
  if (htim->State != HAL_TIM_STATE_READY)
 8007fa0:	f890 303d 	ldrb.w	r3, [r0, #61]	@ 0x3d
 8007fa4:	2b01      	cmp	r3, #1
 8007fa6:	d145      	bne.n	8008034 <HAL_TIM_Base_Start_IT+0x94>
  {
    return HAL_ERROR;
  }

  /* Set the TIM state */
  htim->State = HAL_TIM_STATE_BUSY;
 8007fa8:	2302      	movs	r3, #2
 8007faa:	f880 303d 	strb.w	r3, [r0, #61]	@ 0x3d

  /* Enable the TIM Update interrupt */
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 8007fae:	6803      	ldr	r3, [r0, #0]
 8007fb0:	68da      	ldr	r2, [r3, #12]
 8007fb2:	f042 0201 	orr.w	r2, r2, #1
 8007fb6:	60da      	str	r2, [r3, #12]

  /* Enable the Peripheral, except in trigger mode where enable is automatically done with trigger */
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 8007fb8:	4a1f      	ldr	r2, [pc, #124]	@ (8008038 <HAL_TIM_Base_Start_IT+0x98>)
 8007fba:	4293      	cmp	r3, r2
 8007fbc:	d02c      	beq.n	8008018 <HAL_TIM_Base_Start_IT+0x78>
 8007fbe:	f102 5280 	add.w	r2, r2, #268435456	@ 0x10000000
 8007fc2:	4293      	cmp	r3, r2
 8007fc4:	d028      	beq.n	8008018 <HAL_TIM_Base_Start_IT+0x78>
 8007fc6:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8007fca:	d025      	beq.n	8008018 <HAL_TIM_Base_Start_IT+0x78>
 8007fcc:	f1b3 4fa0 	cmp.w	r3, #1342177280	@ 0x50000000
 8007fd0:	d022      	beq.n	8008018 <HAL_TIM_Base_Start_IT+0x78>
 8007fd2:	4a1a      	ldr	r2, [pc, #104]	@ (800803c <HAL_TIM_Base_Start_IT+0x9c>)
 8007fd4:	4293      	cmp	r3, r2
 8007fd6:	d01f      	beq.n	8008018 <HAL_TIM_Base_Start_IT+0x78>
 8007fd8:	f102 5280 	add.w	r2, r2, #268435456	@ 0x10000000
 8007fdc:	4293      	cmp	r3, r2
 8007fde:	d01b      	beq.n	8008018 <HAL_TIM_Base_Start_IT+0x78>
 8007fe0:	4a17      	ldr	r2, [pc, #92]	@ (8008040 <HAL_TIM_Base_Start_IT+0xa0>)
 8007fe2:	4293      	cmp	r3, r2
 8007fe4:	d018      	beq.n	8008018 <HAL_TIM_Base_Start_IT+0x78>
 8007fe6:	f102 5280 	add.w	r2, r2, #268435456	@ 0x10000000
 8007fea:	4293      	cmp	r3, r2
 8007fec:	d014      	beq.n	8008018 <HAL_TIM_Base_Start_IT+0x78>
 8007fee:	4a15      	ldr	r2, [pc, #84]	@ (8008044 <HAL_TIM_Base_Start_IT+0xa4>)
 8007ff0:	4293      	cmp	r3, r2
 8007ff2:	d011      	beq.n	8008018 <HAL_TIM_Base_Start_IT+0x78>
 8007ff4:	f102 5280 	add.w	r2, r2, #268435456	@ 0x10000000
 8007ff8:	4293      	cmp	r3, r2
 8007ffa:	d00d      	beq.n	8008018 <HAL_TIM_Base_Start_IT+0x78>
 8007ffc:	4a12      	ldr	r2, [pc, #72]	@ (8008048 <HAL_TIM_Base_Start_IT+0xa8>)
 8007ffe:	4293      	cmp	r3, r2
 8008000:	d00a      	beq.n	8008018 <HAL_TIM_Base_Start_IT+0x78>
 8008002:	f102 5280 	add.w	r2, r2, #268435456	@ 0x10000000
 8008006:	4293      	cmp	r3, r2
 8008008:	d006      	beq.n	8008018 <HAL_TIM_Base_Start_IT+0x78>
 800800a:	4a10      	ldr	r2, [pc, #64]	@ (800804c <HAL_TIM_Base_Start_IT+0xac>)
 800800c:	4293      	cmp	r3, r2
 800800e:	d003      	beq.n	8008018 <HAL_TIM_Base_Start_IT+0x78>
 8008010:	f102 5280 	add.w	r2, r2, #268435456	@ 0x10000000
 8008014:	4293      	cmp	r3, r2
 8008016:	d107      	bne.n	8008028 <HAL_TIM_Base_Start_IT+0x88>
  {
    tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 8008018:	6899      	ldr	r1, [r3, #8]
 800801a:	4a0d      	ldr	r2, [pc, #52]	@ (8008050 <HAL_TIM_Base_Start_IT+0xb0>)
 800801c:	400a      	ands	r2, r1
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 800801e:	2a06      	cmp	r2, #6
 8008020:	d006      	beq.n	8008030 <HAL_TIM_Base_Start_IT+0x90>
 8008022:	f5b2 3f80 	cmp.w	r2, #65536	@ 0x10000
 8008026:	d003      	beq.n	8008030 <HAL_TIM_Base_Start_IT+0x90>
    {
      __HAL_TIM_ENABLE(htim);
 8008028:	681a      	ldr	r2, [r3, #0]
 800802a:	f042 0201 	orr.w	r2, r2, #1
 800802e:	601a      	str	r2, [r3, #0]
  {
    __HAL_TIM_ENABLE(htim);
  }

  /* Return function status */
  return HAL_OK;
 8008030:	2000      	movs	r0, #0
 8008032:	4770      	bx	lr
    return HAL_ERROR;
 8008034:	2001      	movs	r0, #1
}
 8008036:	4770      	bx	lr
 8008038:	40012c00 	.word	0x40012c00
 800803c:	40000400 	.word	0x40000400
 8008040:	40000800 	.word	0x40000800
 8008044:	40000c00 	.word	0x40000c00
 8008048:	40013400 	.word	0x40013400
 800804c:	40014000 	.word	0x40014000
 8008050:	00010007 	.word	0x00010007

08008054 <HAL_TIM_OC_DelayElapsedCallback>:
/**
  * @brief  Output Compare callback in non-blocking mode
  * @param  htim TIM OC handle
  * @retval None
  */
__weak void HAL_TIM_OC_DelayElapsedCallback(TIM_HandleTypeDef *htim)
 8008054:	4770      	bx	lr

08008056 <HAL_TIM_IC_CaptureCallback>:
/**
  * @brief  Input Capture callback in non-blocking mode
  * @param  htim TIM IC handle
  * @retval None
  */
__weak void HAL_TIM_IC_CaptureCallback(TIM_HandleTypeDef *htim)
 8008056:	4770      	bx	lr

08008058 <HAL_TIM_PWM_PulseFinishedCallback>:
/**
  * @brief  PWM Pulse finished callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIM_PWM_PulseFinishedCallback(TIM_HandleTypeDef *htim)
 8008058:	4770      	bx	lr

0800805a <HAL_TIM_TriggerCallback>:
/**
  * @brief  Hall Trigger detection callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIM_TriggerCallback(TIM_HandleTypeDef *htim)
 800805a:	4770      	bx	lr

0800805c <HAL_TIM_IRQHandler>:
  uint32_t itsource = htim->Instance->DIER;
 800805c:	6803      	ldr	r3, [r0, #0]
{
 800805e:	b570      	push	{r4, r5, r6, lr}
  uint32_t itsource = htim->Instance->DIER;
 8008060:	68dd      	ldr	r5, [r3, #12]
  uint32_t itflag   = htim->Instance->SR;
 8008062:	691e      	ldr	r6, [r3, #16]
{
 8008064:	4604      	mov	r4, r0
  if ((itflag & (TIM_FLAG_CC1)) == (TIM_FLAG_CC1))
 8008066:	07b2      	lsls	r2, r6, #30
 8008068:	d50e      	bpl.n	8008088 <HAL_TIM_IRQHandler+0x2c>
    if ((itsource & (TIM_IT_CC1)) == (TIM_IT_CC1))
 800806a:	07a9      	lsls	r1, r5, #30
 800806c:	d50c      	bpl.n	8008088 <HAL_TIM_IRQHandler+0x2c>
        __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC1);
 800806e:	f06f 0202 	mvn.w	r2, #2
 8008072:	611a      	str	r2, [r3, #16]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 8008074:	2201      	movs	r2, #1
 8008076:	7702      	strb	r2, [r0, #28]
        if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
 8008078:	699b      	ldr	r3, [r3, #24]
 800807a:	079a      	lsls	r2, r3, #30
 800807c:	f000 80a4 	beq.w	80081c8 <HAL_TIM_IRQHandler+0x16c>
          HAL_TIM_IC_CaptureCallback(htim);
 8008080:	f7ff ffe9 	bl	8008056 <HAL_TIM_IC_CaptureCallback>
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8008084:	2300      	movs	r3, #0
 8008086:	7723      	strb	r3, [r4, #28]
  if ((itflag & (TIM_FLAG_CC2)) == (TIM_FLAG_CC2))
 8008088:	0773      	lsls	r3, r6, #29
 800808a:	d511      	bpl.n	80080b0 <HAL_TIM_IRQHandler+0x54>
    if ((itsource & (TIM_IT_CC2)) == (TIM_IT_CC2))
 800808c:	0768      	lsls	r0, r5, #29
 800808e:	d50f      	bpl.n	80080b0 <HAL_TIM_IRQHandler+0x54>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC2);
 8008090:	f06f 0204 	mvn.w	r2, #4
 8008094:	6823      	ldr	r3, [r4, #0]
        HAL_TIM_IC_CaptureCallback(htim);
 8008096:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC2);
 8008098:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 800809a:	2202      	movs	r2, #2
 800809c:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 800809e:	699b      	ldr	r3, [r3, #24]
 80080a0:	f413 7f40 	tst.w	r3, #768	@ 0x300
 80080a4:	f000 8096 	beq.w	80081d4 <HAL_TIM_IRQHandler+0x178>
        HAL_TIM_IC_CaptureCallback(htim);
 80080a8:	f7ff ffd5 	bl	8008056 <HAL_TIM_IC_CaptureCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 80080ac:	2300      	movs	r3, #0
 80080ae:	7723      	strb	r3, [r4, #28]
  if ((itflag & (TIM_FLAG_CC3)) == (TIM_FLAG_CC3))
 80080b0:	0731      	lsls	r1, r6, #28
 80080b2:	d510      	bpl.n	80080d6 <HAL_TIM_IRQHandler+0x7a>
    if ((itsource & (TIM_IT_CC3)) == (TIM_IT_CC3))
 80080b4:	072a      	lsls	r2, r5, #28
 80080b6:	d50e      	bpl.n	80080d6 <HAL_TIM_IRQHandler+0x7a>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC3);
 80080b8:	f06f 0208 	mvn.w	r2, #8
 80080bc:	6823      	ldr	r3, [r4, #0]
        HAL_TIM_IC_CaptureCallback(htim);
 80080be:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC3);
 80080c0:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 80080c2:	2204      	movs	r2, #4
 80080c4:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 80080c6:	69db      	ldr	r3, [r3, #28]
 80080c8:	079b      	lsls	r3, r3, #30
 80080ca:	f000 8089 	beq.w	80081e0 <HAL_TIM_IRQHandler+0x184>
        HAL_TIM_IC_CaptureCallback(htim);
 80080ce:	f7ff ffc2 	bl	8008056 <HAL_TIM_IC_CaptureCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 80080d2:	2300      	movs	r3, #0
 80080d4:	7723      	strb	r3, [r4, #28]
  if ((itflag & (TIM_FLAG_CC4)) == (TIM_FLAG_CC4))
 80080d6:	06f1      	lsls	r1, r6, #27
 80080d8:	d510      	bpl.n	80080fc <HAL_TIM_IRQHandler+0xa0>
    if ((itsource & (TIM_IT_CC4)) == (TIM_IT_CC4))
 80080da:	06ea      	lsls	r2, r5, #27
 80080dc:	d50e      	bpl.n	80080fc <HAL_TIM_IRQHandler+0xa0>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC4);
 80080de:	f06f 0210 	mvn.w	r2, #16
 80080e2:	6823      	ldr	r3, [r4, #0]
        HAL_TIM_IC_CaptureCallback(htim);
 80080e4:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC4);
 80080e6:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 80080e8:	2208      	movs	r2, #8
 80080ea:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 80080ec:	69db      	ldr	r3, [r3, #28]
 80080ee:	f413 7f40 	tst.w	r3, #768	@ 0x300
 80080f2:	d07b      	beq.n	80081ec <HAL_TIM_IRQHandler+0x190>
        HAL_TIM_IC_CaptureCallback(htim);
 80080f4:	f7ff ffaf 	bl	8008056 <HAL_TIM_IC_CaptureCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 80080f8:	2300      	movs	r3, #0
 80080fa:	7723      	strb	r3, [r4, #28]
  if ((itflag & (TIM_FLAG_UPDATE)) == (TIM_FLAG_UPDATE))
 80080fc:	07f3      	lsls	r3, r6, #31
 80080fe:	d508      	bpl.n	8008112 <HAL_TIM_IRQHandler+0xb6>
    if ((itsource & (TIM_IT_UPDATE)) == (TIM_IT_UPDATE))
 8008100:	07e8      	lsls	r0, r5, #31
 8008102:	d506      	bpl.n	8008112 <HAL_TIM_IRQHandler+0xb6>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_UPDATE);
 8008104:	f06f 0201 	mvn.w	r2, #1
 8008108:	6823      	ldr	r3, [r4, #0]
      HAL_TIM_PeriodElapsedCallback(htim);
 800810a:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_UPDATE);
 800810c:	611a      	str	r2, [r3, #16]
      HAL_TIM_PeriodElapsedCallback(htim);
 800810e:	f7f8 fb5f 	bl	80007d0 <HAL_TIM_PeriodElapsedCallback>
  if (((itflag & (TIM_FLAG_BREAK)) == (TIM_FLAG_BREAK)) || \
 8008112:	f416 5f02 	tst.w	r6, #8320	@ 0x2080
 8008116:	d008      	beq.n	800812a <HAL_TIM_IRQHandler+0xce>
    if ((itsource & (TIM_IT_BREAK)) == (TIM_IT_BREAK))
 8008118:	0629      	lsls	r1, r5, #24
 800811a:	d506      	bpl.n	800812a <HAL_TIM_IRQHandler+0xce>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_BREAK | TIM_FLAG_SYSTEM_BREAK);
 800811c:	f46f 5202 	mvn.w	r2, #8320	@ 0x2080
 8008120:	6823      	ldr	r3, [r4, #0]
      HAL_TIMEx_BreakCallback(htim);
 8008122:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_BREAK | TIM_FLAG_SYSTEM_BREAK);
 8008124:	611a      	str	r2, [r3, #16]
      HAL_TIMEx_BreakCallback(htim);
 8008126:	f000 f952 	bl	80083ce <HAL_TIMEx_BreakCallback>
  if ((itflag & (TIM_FLAG_BREAK2)) == (TIM_FLAG_BREAK2))
 800812a:	05f2      	lsls	r2, r6, #23
 800812c:	d508      	bpl.n	8008140 <HAL_TIM_IRQHandler+0xe4>
    if ((itsource & (TIM_IT_BREAK)) == (TIM_IT_BREAK))
 800812e:	062b      	lsls	r3, r5, #24
 8008130:	d506      	bpl.n	8008140 <HAL_TIM_IRQHandler+0xe4>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_BREAK2);
 8008132:	f46f 7280 	mvn.w	r2, #256	@ 0x100
 8008136:	6823      	ldr	r3, [r4, #0]
      HAL_TIMEx_Break2Callback(htim);
 8008138:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_BREAK2);
 800813a:	611a      	str	r2, [r3, #16]
      HAL_TIMEx_Break2Callback(htim);
 800813c:	f000 f948 	bl	80083d0 <HAL_TIMEx_Break2Callback>
  if ((itflag & (TIM_FLAG_TRIGGER)) == (TIM_FLAG_TRIGGER))
 8008140:	0670      	lsls	r0, r6, #25
 8008142:	d508      	bpl.n	8008156 <HAL_TIM_IRQHandler+0xfa>
    if ((itsource & (TIM_IT_TRIGGER)) == (TIM_IT_TRIGGER))
 8008144:	0669      	lsls	r1, r5, #25
 8008146:	d506      	bpl.n	8008156 <HAL_TIM_IRQHandler+0xfa>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_TRIGGER);
 8008148:	f06f 0240 	mvn.w	r2, #64	@ 0x40
 800814c:	6823      	ldr	r3, [r4, #0]
      HAL_TIM_TriggerCallback(htim);
 800814e:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_TRIGGER);
 8008150:	611a      	str	r2, [r3, #16]
      HAL_TIM_TriggerCallback(htim);
 8008152:	f7ff ff82 	bl	800805a <HAL_TIM_TriggerCallback>
  if ((itflag & (TIM_FLAG_COM)) == (TIM_FLAG_COM))
 8008156:	06b2      	lsls	r2, r6, #26
 8008158:	d508      	bpl.n	800816c <HAL_TIM_IRQHandler+0x110>
    if ((itsource & (TIM_IT_COM)) == (TIM_IT_COM))
 800815a:	06ab      	lsls	r3, r5, #26
 800815c:	d506      	bpl.n	800816c <HAL_TIM_IRQHandler+0x110>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_COM);
 800815e:	f06f 0220 	mvn.w	r2, #32
 8008162:	6823      	ldr	r3, [r4, #0]
      HAL_TIMEx_CommutCallback(htim);
 8008164:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_COM);
 8008166:	611a      	str	r2, [r3, #16]
      HAL_TIMEx_CommutCallback(htim);
 8008168:	f000 f930 	bl	80083cc <HAL_TIMEx_CommutCallback>
  if ((itflag & (TIM_FLAG_IDX)) == (TIM_FLAG_IDX))
 800816c:	02f0      	lsls	r0, r6, #11
 800816e:	d508      	bpl.n	8008182 <HAL_TIM_IRQHandler+0x126>
    if ((itsource & (TIM_IT_IDX)) == (TIM_IT_IDX))
 8008170:	02e9      	lsls	r1, r5, #11
 8008172:	d506      	bpl.n	8008182 <HAL_TIM_IRQHandler+0x126>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_IDX);
 8008174:	f46f 1280 	mvn.w	r2, #1048576	@ 0x100000
 8008178:	6823      	ldr	r3, [r4, #0]
      HAL_TIMEx_EncoderIndexCallback(htim);
 800817a:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_IDX);
 800817c:	611a      	str	r2, [r3, #16]
      HAL_TIMEx_EncoderIndexCallback(htim);
 800817e:	f000 f928 	bl	80083d2 <HAL_TIMEx_EncoderIndexCallback>
  if ((itflag & (TIM_FLAG_DIR)) == (TIM_FLAG_DIR))
 8008182:	02b2      	lsls	r2, r6, #10
 8008184:	d508      	bpl.n	8008198 <HAL_TIM_IRQHandler+0x13c>
    if ((itsource & (TIM_IT_DIR)) == (TIM_IT_DIR))
 8008186:	02ab      	lsls	r3, r5, #10
 8008188:	d506      	bpl.n	8008198 <HAL_TIM_IRQHandler+0x13c>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_DIR);
 800818a:	f46f 1200 	mvn.w	r2, #2097152	@ 0x200000
 800818e:	6823      	ldr	r3, [r4, #0]
      HAL_TIMEx_DirectionChangeCallback(htim);
 8008190:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_DIR);
 8008192:	611a      	str	r2, [r3, #16]
      HAL_TIMEx_DirectionChangeCallback(htim);
 8008194:	f000 f91e 	bl	80083d4 <HAL_TIMEx_DirectionChangeCallback>
  if ((itflag & (TIM_FLAG_IERR)) == (TIM_FLAG_IERR))
 8008198:	0270      	lsls	r0, r6, #9
 800819a:	d508      	bpl.n	80081ae <HAL_TIM_IRQHandler+0x152>
    if ((itsource & (TIM_IT_IERR)) == (TIM_IT_IERR))
 800819c:	0269      	lsls	r1, r5, #9
 800819e:	d506      	bpl.n	80081ae <HAL_TIM_IRQHandler+0x152>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_IERR);
 80081a0:	f46f 0280 	mvn.w	r2, #4194304	@ 0x400000
 80081a4:	6823      	ldr	r3, [r4, #0]
      HAL_TIMEx_IndexErrorCallback(htim);
 80081a6:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_IERR);
 80081a8:	611a      	str	r2, [r3, #16]
      HAL_TIMEx_IndexErrorCallback(htim);
 80081aa:	f000 f914 	bl	80083d6 <HAL_TIMEx_IndexErrorCallback>
  if ((itflag & (TIM_FLAG_TERR)) == (TIM_FLAG_TERR))
 80081ae:	0232      	lsls	r2, r6, #8
 80081b0:	d522      	bpl.n	80081f8 <HAL_TIM_IRQHandler+0x19c>
    if ((itsource & (TIM_IT_TERR)) == (TIM_IT_TERR))
 80081b2:	022b      	lsls	r3, r5, #8
 80081b4:	d520      	bpl.n	80081f8 <HAL_TIM_IRQHandler+0x19c>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_TERR);
 80081b6:	f46f 0200 	mvn.w	r2, #8388608	@ 0x800000
 80081ba:	6823      	ldr	r3, [r4, #0]
      HAL_TIMEx_TransitionErrorCallback(htim);
 80081bc:	4620      	mov	r0, r4
}
 80081be:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_TERR);
 80081c2:	611a      	str	r2, [r3, #16]
      HAL_TIMEx_TransitionErrorCallback(htim);
 80081c4:	f000 b908 	b.w	80083d8 <HAL_TIMEx_TransitionErrorCallback>
          HAL_TIM_OC_DelayElapsedCallback(htim);
 80081c8:	f7ff ff44 	bl	8008054 <HAL_TIM_OC_DelayElapsedCallback>
          HAL_TIM_PWM_PulseFinishedCallback(htim);
 80081cc:	4620      	mov	r0, r4
 80081ce:	f7ff ff43 	bl	8008058 <HAL_TIM_PWM_PulseFinishedCallback>
 80081d2:	e757      	b.n	8008084 <HAL_TIM_IRQHandler+0x28>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 80081d4:	f7ff ff3e 	bl	8008054 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 80081d8:	4620      	mov	r0, r4
 80081da:	f7ff ff3d 	bl	8008058 <HAL_TIM_PWM_PulseFinishedCallback>
 80081de:	e765      	b.n	80080ac <HAL_TIM_IRQHandler+0x50>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 80081e0:	f7ff ff38 	bl	8008054 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 80081e4:	4620      	mov	r0, r4
 80081e6:	f7ff ff37 	bl	8008058 <HAL_TIM_PWM_PulseFinishedCallback>
 80081ea:	e772      	b.n	80080d2 <HAL_TIM_IRQHandler+0x76>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 80081ec:	f7ff ff32 	bl	8008054 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 80081f0:	4620      	mov	r0, r4
 80081f2:	f7ff ff31 	bl	8008058 <HAL_TIM_PWM_PulseFinishedCallback>
 80081f6:	e77f      	b.n	80080f8 <HAL_TIM_IRQHandler+0x9c>
}
 80081f8:	bd70      	pop	{r4, r5, r6, pc}
	...

080081fc <TIM_Base_SetConfig>:
{
  uint32_t tmpcr1;
  tmpcr1 = TIMx->CR1;

  /* Set TIM Time Base Unit parameters ---------------------------------------*/
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 80081fc:	4a53      	ldr	r2, [pc, #332]	@ (800834c <TIM_Base_SetConfig+0x150>)
  tmpcr1 = TIMx->CR1;
 80081fe:	6803      	ldr	r3, [r0, #0]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 8008200:	4290      	cmp	r0, r2
 8008202:	d025      	beq.n	8008250 <TIM_Base_SetConfig+0x54>
 8008204:	f102 5280 	add.w	r2, r2, #268435456	@ 0x10000000
 8008208:	4290      	cmp	r0, r2
 800820a:	d021      	beq.n	8008250 <TIM_Base_SetConfig+0x54>
 800820c:	f1b0 4f80 	cmp.w	r0, #1073741824	@ 0x40000000
 8008210:	d01e      	beq.n	8008250 <TIM_Base_SetConfig+0x54>
 8008212:	f1b0 4fa0 	cmp.w	r0, #1342177280	@ 0x50000000
 8008216:	d01b      	beq.n	8008250 <TIM_Base_SetConfig+0x54>
 8008218:	4a4d      	ldr	r2, [pc, #308]	@ (8008350 <TIM_Base_SetConfig+0x154>)
 800821a:	4290      	cmp	r0, r2
 800821c:	d018      	beq.n	8008250 <TIM_Base_SetConfig+0x54>
 800821e:	f102 5280 	add.w	r2, r2, #268435456	@ 0x10000000
 8008222:	4290      	cmp	r0, r2
 8008224:	d014      	beq.n	8008250 <TIM_Base_SetConfig+0x54>
 8008226:	4a4b      	ldr	r2, [pc, #300]	@ (8008354 <TIM_Base_SetConfig+0x158>)
 8008228:	4290      	cmp	r0, r2
 800822a:	d011      	beq.n	8008250 <TIM_Base_SetConfig+0x54>
 800822c:	f102 5280 	add.w	r2, r2, #268435456	@ 0x10000000
 8008230:	4290      	cmp	r0, r2
 8008232:	d00d      	beq.n	8008250 <TIM_Base_SetConfig+0x54>
 8008234:	4a48      	ldr	r2, [pc, #288]	@ (8008358 <TIM_Base_SetConfig+0x15c>)
 8008236:	4290      	cmp	r0, r2
 8008238:	d00a      	beq.n	8008250 <TIM_Base_SetConfig+0x54>
 800823a:	f102 5280 	add.w	r2, r2, #268435456	@ 0x10000000
 800823e:	4290      	cmp	r0, r2
 8008240:	d006      	beq.n	8008250 <TIM_Base_SetConfig+0x54>
 8008242:	4a46      	ldr	r2, [pc, #280]	@ (800835c <TIM_Base_SetConfig+0x160>)
 8008244:	4290      	cmp	r0, r2
 8008246:	d003      	beq.n	8008250 <TIM_Base_SetConfig+0x54>
 8008248:	f102 5280 	add.w	r2, r2, #268435456	@ 0x10000000
 800824c:	4290      	cmp	r0, r2
 800824e:	d12c      	bne.n	80082aa <TIM_Base_SetConfig+0xae>
  {
    /* Select the Counter Mode */
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
    tmpcr1 |= Structure->CounterMode;
 8008250:	684a      	ldr	r2, [r1, #4]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 8008252:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
    tmpcr1 |= Structure->CounterMode;
 8008256:	4313      	orrs	r3, r2
  }

  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 8008258:	4a3c      	ldr	r2, [pc, #240]	@ (800834c <TIM_Base_SetConfig+0x150>)
 800825a:	4290      	cmp	r0, r2
 800825c:	d03a      	beq.n	80082d4 <TIM_Base_SetConfig+0xd8>
 800825e:	f102 5280 	add.w	r2, r2, #268435456	@ 0x10000000
 8008262:	4290      	cmp	r0, r2
 8008264:	d036      	beq.n	80082d4 <TIM_Base_SetConfig+0xd8>
 8008266:	f1b0 4f80 	cmp.w	r0, #1073741824	@ 0x40000000
 800826a:	d033      	beq.n	80082d4 <TIM_Base_SetConfig+0xd8>
 800826c:	f1b0 4fa0 	cmp.w	r0, #1342177280	@ 0x50000000
 8008270:	d030      	beq.n	80082d4 <TIM_Base_SetConfig+0xd8>
 8008272:	4a37      	ldr	r2, [pc, #220]	@ (8008350 <TIM_Base_SetConfig+0x154>)
 8008274:	4290      	cmp	r0, r2
 8008276:	d02d      	beq.n	80082d4 <TIM_Base_SetConfig+0xd8>
 8008278:	f102 5280 	add.w	r2, r2, #268435456	@ 0x10000000
 800827c:	4290      	cmp	r0, r2
 800827e:	d029      	beq.n	80082d4 <TIM_Base_SetConfig+0xd8>
 8008280:	4a34      	ldr	r2, [pc, #208]	@ (8008354 <TIM_Base_SetConfig+0x158>)
 8008282:	4290      	cmp	r0, r2
 8008284:	d026      	beq.n	80082d4 <TIM_Base_SetConfig+0xd8>
 8008286:	f102 5280 	add.w	r2, r2, #268435456	@ 0x10000000
 800828a:	4290      	cmp	r0, r2
 800828c:	d022      	beq.n	80082d4 <TIM_Base_SetConfig+0xd8>
 800828e:	4a32      	ldr	r2, [pc, #200]	@ (8008358 <TIM_Base_SetConfig+0x15c>)
 8008290:	4290      	cmp	r0, r2
 8008292:	d01f      	beq.n	80082d4 <TIM_Base_SetConfig+0xd8>
 8008294:	f102 5280 	add.w	r2, r2, #268435456	@ 0x10000000
 8008298:	4290      	cmp	r0, r2
 800829a:	d01b      	beq.n	80082d4 <TIM_Base_SetConfig+0xd8>
 800829c:	4a2f      	ldr	r2, [pc, #188]	@ (800835c <TIM_Base_SetConfig+0x160>)
 800829e:	4290      	cmp	r0, r2
 80082a0:	d018      	beq.n	80082d4 <TIM_Base_SetConfig+0xd8>
 80082a2:	f102 5280 	add.w	r2, r2, #268435456	@ 0x10000000
 80082a6:	4290      	cmp	r0, r2
 80082a8:	d014      	beq.n	80082d4 <TIM_Base_SetConfig+0xd8>
 80082aa:	4a2d      	ldr	r2, [pc, #180]	@ (8008360 <TIM_Base_SetConfig+0x164>)
 80082ac:	4290      	cmp	r0, r2
 80082ae:	d011      	beq.n	80082d4 <TIM_Base_SetConfig+0xd8>
 80082b0:	f102 5280 	add.w	r2, r2, #268435456	@ 0x10000000
 80082b4:	4290      	cmp	r0, r2
 80082b6:	d00d      	beq.n	80082d4 <TIM_Base_SetConfig+0xd8>
 80082b8:	4a2a      	ldr	r2, [pc, #168]	@ (8008364 <TIM_Base_SetConfig+0x168>)
 80082ba:	4290      	cmp	r0, r2
 80082bc:	d00a      	beq.n	80082d4 <TIM_Base_SetConfig+0xd8>
 80082be:	f102 5280 	add.w	r2, r2, #268435456	@ 0x10000000
 80082c2:	4290      	cmp	r0, r2
 80082c4:	d006      	beq.n	80082d4 <TIM_Base_SetConfig+0xd8>
 80082c6:	4a28      	ldr	r2, [pc, #160]	@ (8008368 <TIM_Base_SetConfig+0x16c>)
 80082c8:	4290      	cmp	r0, r2
 80082ca:	d003      	beq.n	80082d4 <TIM_Base_SetConfig+0xd8>
 80082cc:	f102 5280 	add.w	r2, r2, #268435456	@ 0x10000000
 80082d0:	4290      	cmp	r0, r2
 80082d2:	d103      	bne.n	80082dc <TIM_Base_SetConfig+0xe0>
  {
    /* Set the clock division */
    tmpcr1 &= ~TIM_CR1_CKD;
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 80082d4:	68ca      	ldr	r2, [r1, #12]
    tmpcr1 &= ~TIM_CR1_CKD;
 80082d6:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 80082da:	4313      	orrs	r3, r2
  }

  /* Set the auto-reload preload */
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 80082dc:	694a      	ldr	r2, [r1, #20]
 80082de:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 80082e2:	4313      	orrs	r3, r2

  TIMx->CR1 = tmpcr1;
 80082e4:	6003      	str	r3, [r0, #0]

  /* Set the Autoreload value */
  TIMx->ARR = (uint32_t)Structure->Period ;
 80082e6:	688b      	ldr	r3, [r1, #8]
 80082e8:	62c3      	str	r3, [r0, #44]	@ 0x2c

  /* Set the Prescaler value */
  TIMx->PSC = Structure->Prescaler;
 80082ea:	680b      	ldr	r3, [r1, #0]
 80082ec:	6283      	str	r3, [r0, #40]	@ 0x28

  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
 80082ee:	4b17      	ldr	r3, [pc, #92]	@ (800834c <TIM_Base_SetConfig+0x150>)
 80082f0:	4298      	cmp	r0, r3
 80082f2:	d01f      	beq.n	8008334 <TIM_Base_SetConfig+0x138>
 80082f4:	f103 5380 	add.w	r3, r3, #268435456	@ 0x10000000
 80082f8:	4298      	cmp	r0, r3
 80082fa:	d01b      	beq.n	8008334 <TIM_Base_SetConfig+0x138>
 80082fc:	4b17      	ldr	r3, [pc, #92]	@ (800835c <TIM_Base_SetConfig+0x160>)
 80082fe:	4298      	cmp	r0, r3
 8008300:	d018      	beq.n	8008334 <TIM_Base_SetConfig+0x138>
 8008302:	f103 5380 	add.w	r3, r3, #268435456	@ 0x10000000
 8008306:	4298      	cmp	r0, r3
 8008308:	d014      	beq.n	8008334 <TIM_Base_SetConfig+0x138>
 800830a:	4b15      	ldr	r3, [pc, #84]	@ (8008360 <TIM_Base_SetConfig+0x164>)
 800830c:	4298      	cmp	r0, r3
 800830e:	d011      	beq.n	8008334 <TIM_Base_SetConfig+0x138>
 8008310:	f103 5380 	add.w	r3, r3, #268435456	@ 0x10000000
 8008314:	4298      	cmp	r0, r3
 8008316:	d00d      	beq.n	8008334 <TIM_Base_SetConfig+0x138>
 8008318:	4b12      	ldr	r3, [pc, #72]	@ (8008364 <TIM_Base_SetConfig+0x168>)
 800831a:	4298      	cmp	r0, r3
 800831c:	d00a      	beq.n	8008334 <TIM_Base_SetConfig+0x138>
 800831e:	f103 5380 	add.w	r3, r3, #268435456	@ 0x10000000
 8008322:	4298      	cmp	r0, r3
 8008324:	d006      	beq.n	8008334 <TIM_Base_SetConfig+0x138>
 8008326:	4b10      	ldr	r3, [pc, #64]	@ (8008368 <TIM_Base_SetConfig+0x16c>)
 8008328:	4298      	cmp	r0, r3
 800832a:	d003      	beq.n	8008334 <TIM_Base_SetConfig+0x138>
 800832c:	f103 5380 	add.w	r3, r3, #268435456	@ 0x10000000
 8008330:	4298      	cmp	r0, r3
 8008332:	d101      	bne.n	8008338 <TIM_Base_SetConfig+0x13c>
  {
    /* Set the Repetition Counter value */
    TIMx->RCR = Structure->RepetitionCounter;
 8008334:	690b      	ldr	r3, [r1, #16]
 8008336:	6303      	str	r3, [r0, #48]	@ 0x30
  }

  /* Generate an update event to reload the Prescaler
     and the repetition counter (only for advanced timer) value immediately */
  TIMx->EGR = TIM_EGR_UG;
 8008338:	2301      	movs	r3, #1
 800833a:	6143      	str	r3, [r0, #20]

  /* Check if the update flag is set after the Update Generation, if so clear the UIF flag */
  if (HAL_IS_BIT_SET(TIMx->SR, TIM_FLAG_UPDATE))
 800833c:	6903      	ldr	r3, [r0, #16]
 800833e:	07db      	lsls	r3, r3, #31
  {
    /* Clear the update flag */
    CLEAR_BIT(TIMx->SR, TIM_FLAG_UPDATE);
 8008340:	bf42      	ittt	mi
 8008342:	6903      	ldrmi	r3, [r0, #16]
 8008344:	f023 0301 	bicmi.w	r3, r3, #1
 8008348:	6103      	strmi	r3, [r0, #16]
  }
}
 800834a:	4770      	bx	lr
 800834c:	40012c00 	.word	0x40012c00
 8008350:	40000400 	.word	0x40000400
 8008354:	40000800 	.word	0x40000800
 8008358:	40000c00 	.word	0x40000c00
 800835c:	40013400 	.word	0x40013400
 8008360:	40014000 	.word	0x40014000
 8008364:	40014400 	.word	0x40014400
 8008368:	40014800 	.word	0x40014800

0800836c <HAL_TIM_Base_Init>:
{
 800836c:	b510      	push	{r4, lr}
  if (htim == NULL)
 800836e:	4604      	mov	r4, r0
 8008370:	b350      	cbz	r0, 80083c8 <HAL_TIM_Base_Init+0x5c>
  if (htim->State == HAL_TIM_STATE_RESET)
 8008372:	f890 303d 	ldrb.w	r3, [r0, #61]	@ 0x3d
 8008376:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 800837a:	b91b      	cbnz	r3, 8008384 <HAL_TIM_Base_Init+0x18>
    htim->Lock = HAL_UNLOCKED;
 800837c:	f880 203c 	strb.w	r2, [r0, #60]	@ 0x3c
    HAL_TIM_Base_MspInit(htim);
 8008380:	f7ff fe0c 	bl	8007f9c <HAL_TIM_Base_MspInit>
  htim->State = HAL_TIM_STATE_BUSY;
 8008384:	2302      	movs	r3, #2
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 8008386:	6820      	ldr	r0, [r4, #0]
  htim->State = HAL_TIM_STATE_BUSY;
 8008388:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 800838c:	1d21      	adds	r1, r4, #4
 800838e:	f7ff ff35 	bl	80081fc <TIM_Base_SetConfig>
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
 8008392:	2301      	movs	r3, #1
  return HAL_OK;
 8008394:	2000      	movs	r0, #0
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
 8008396:	f884 3048 	strb.w	r3, [r4, #72]	@ 0x48
  TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 800839a:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
 800839e:	f884 303f 	strb.w	r3, [r4, #63]	@ 0x3f
 80083a2:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
 80083a6:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
 80083aa:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 80083ae:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
  TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 80083b2:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
 80083b6:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
 80083ba:	f884 3046 	strb.w	r3, [r4, #70]	@ 0x46
 80083be:	f884 3047 	strb.w	r3, [r4, #71]	@ 0x47
  htim->State = HAL_TIM_STATE_READY;
 80083c2:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
}
 80083c6:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 80083c8:	2001      	movs	r0, #1
 80083ca:	e7fc      	b.n	80083c6 <HAL_TIM_Base_Init+0x5a>

080083cc <HAL_TIMEx_CommutCallback>:
/**
  * @brief  Hall commutation changed callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_CommutCallback(TIM_HandleTypeDef *htim)
 80083cc:	4770      	bx	lr

080083ce <HAL_TIMEx_BreakCallback>:
/**
  * @brief  Hall Break detection callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_BreakCallback(TIM_HandleTypeDef *htim)
 80083ce:	4770      	bx	lr

080083d0 <HAL_TIMEx_Break2Callback>:
/**
  * @brief  Hall Break2 detection callback in non blocking mode
  * @param  htim: TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_Break2Callback(TIM_HandleTypeDef *htim)
 80083d0:	4770      	bx	lr

080083d2 <HAL_TIMEx_EncoderIndexCallback>:
/**
  * @brief  Encoder index callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_EncoderIndexCallback(TIM_HandleTypeDef *htim)
 80083d2:	4770      	bx	lr

080083d4 <HAL_TIMEx_DirectionChangeCallback>:
/**
  * @brief  Direction change callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_DirectionChangeCallback(TIM_HandleTypeDef *htim)
 80083d4:	4770      	bx	lr

080083d6 <HAL_TIMEx_IndexErrorCallback>:
/**
  * @brief  Index error callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_IndexErrorCallback(TIM_HandleTypeDef *htim)
 80083d6:	4770      	bx	lr

080083d8 <HAL_TIMEx_TransitionErrorCallback>:
/**
  * @brief  Transition error callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_TransitionErrorCallback(TIM_HandleTypeDef *htim)
 80083d8:	4770      	bx	lr
	...

080083dc <XSPI_ConfigCmd>:
  __IO uint32_t *tcr_reg;
  __IO uint32_t *ir_reg;
  __IO uint32_t *abr_reg;

  /* Re-initialize the value of the functional mode */
  MODIFY_REG(hxspi->Instance->CR, XSPI_CR_FMODE, 0U);
 80083dc:	6802      	ldr	r2, [r0, #0]
{
 80083de:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  MODIFY_REG(hxspi->Instance->CR, XSPI_CR_FMODE, 0U);
 80083e2:	6813      	ldr	r3, [r2, #0]
 80083e4:	f023 5340 	bic.w	r3, r3, #805306368	@ 0x30000000
 80083e8:	6013      	str	r3, [r2, #0]

  if (IS_OSPI_ALL_INSTANCE(hxspi->Instance))
 80083ea:	4b7e      	ldr	r3, [pc, #504]	@ (80085e4 <XSPI_ConfigCmd+0x208>)
 80083ec:	429a      	cmp	r2, r3
 80083ee:	d00d      	beq.n	800840c <XSPI_ConfigCmd+0x30>
 80083f0:	f103 5380 	add.w	r3, r3, #268435456	@ 0x10000000
 80083f4:	429a      	cmp	r2, r3
 80083f6:	d009      	beq.n	800840c <XSPI_ConfigCmd+0x30>
 80083f8:	f103 4370 	add.w	r3, r3, #4026531840	@ 0xf0000000
 80083fc:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 8008400:	429a      	cmp	r2, r3
 8008402:	d003      	beq.n	800840c <XSPI_ConfigCmd+0x30>
 8008404:	f103 5380 	add.w	r3, r3, #268435456	@ 0x10000000
 8008408:	429a      	cmp	r2, r3
 800840a:	d15c      	bne.n	80084c6 <XSPI_ConfigCmd+0xea>
  {
    if (hxspi->Init.MemoryMode == HAL_XSPI_SINGLE_MEM)
 800840c:	6883      	ldr	r3, [r0, #8]
 800840e:	b92b      	cbnz	r3, 800841c <XSPI_ConfigCmd+0x40>
    {
      assert_param(IS_OCTOSPI_IO_SELECT(pCmd->IOSelect));
      MODIFY_REG(hxspi->Instance->CR, OCTOSPI_CR_MSEL, pCmd->IOSelect);
 8008410:	6813      	ldr	r3, [r2, #0]
 8008412:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
  else if (IS_HSPI_ALL_INSTANCE(hxspi->Instance))
  {
    if (hxspi->Init.MemoryMode == HAL_XSPI_SINGLE_MEM)
    {
      assert_param(IS_HSPI_IO_SELECT(pCmd->IOSelect));
      MODIFY_REG(hxspi->Instance->CR, HSPI_CR_MSEL, pCmd->IOSelect);
 8008416:	684c      	ldr	r4, [r1, #4]
 8008418:	4323      	orrs	r3, r4
 800841a:	6013      	str	r3, [r2, #0]
  {
    hxspi->ErrorCode |= HAL_XSPI_ERROR_INVALID_PARAM;
    return HAL_ERROR;
  }

  if (pCmd->OperationType == HAL_XSPI_OPTYPE_WRITE_CFG)
 800841c:	680b      	ldr	r3, [r1, #0]
 800841e:	2b02      	cmp	r3, #2
 8008420:	d165      	bne.n	80084ee <XSPI_ConfigCmd+0x112>
  {
    ccr_reg = &(hxspi->Instance->WCCR);
 8008422:	f502 74c0 	add.w	r4, r2, #384	@ 0x180
    tcr_reg = &(hxspi->Instance->WTCR);
 8008426:	f502 76c4 	add.w	r6, r2, #392	@ 0x188
    ir_reg  = &(hxspi->Instance->WIR);
 800842a:	f502 75c8 	add.w	r5, r2, #400	@ 0x190
    abr_reg = &(hxspi->Instance->WABR);
 800842e:	f502 7cd0 	add.w	ip, r2, #416	@ 0x1a0
    ir_reg  = &(hxspi->Instance->IR);
    abr_reg = &(hxspi->Instance->ABR);
  }

  /* Configure the CCR register with DQS and SIOO modes */
  *ccr_reg = (pCmd->DQSMode | pCmd->SIOOMode);
 8008432:	e9d1 3712 	ldrd	r3, r7, [r1, #72]	@ 0x48
 8008436:	433b      	orrs	r3, r7
 8008438:	6023      	str	r3, [r4, #0]

  if (pCmd->AlternateBytesMode != HAL_XSPI_ALT_BYTES_NONE)
 800843a:	6acb      	ldr	r3, [r1, #44]	@ 0x2c
 800843c:	b16b      	cbz	r3, 800845a <XSPI_ConfigCmd+0x7e>
  {
    /* Configure the ABR register with alternate bytes value */
    *abr_reg = pCmd->AlternateBytes;
 800843e:	6a8b      	ldr	r3, [r1, #40]	@ 0x28
 8008440:	f8cc 3000 	str.w	r3, [ip]

    /* Configure the CCR register with alternate bytes communication parameters */
    MODIFY_REG((*ccr_reg), (XSPI_CCR_ABMODE | XSPI_CCR_ABDTR | XSPI_CCR_ABSIZE),
 8008444:	6b4f      	ldr	r7, [r1, #52]	@ 0x34
 8008446:	6acb      	ldr	r3, [r1, #44]	@ 0x2c
 8008448:	f8d4 c000 	ldr.w	ip, [r4]
 800844c:	433b      	orrs	r3, r7
 800844e:	6b0f      	ldr	r7, [r1, #48]	@ 0x30
 8008450:	433b      	orrs	r3, r7
 8008452:	f42c 177c 	bic.w	r7, ip, #4128768	@ 0x3f0000
 8008456:	433b      	orrs	r3, r7
 8008458:	6023      	str	r3, [r4, #0]
               (pCmd->AlternateBytesMode | pCmd->AlternateBytesDTRMode | pCmd->AlternateBytesWidth));
  }

  /* Configure the TCR register with the number of dummy cycles */
  MODIFY_REG((*tcr_reg), XSPI_TCR_DCYC, pCmd->DummyCycles);
 800845a:	6833      	ldr	r3, [r6, #0]
 800845c:	6c4f      	ldr	r7, [r1, #68]	@ 0x44
 800845e:	f023 031f 	bic.w	r3, r3, #31
 8008462:	433b      	orrs	r3, r7
 8008464:	6033      	str	r3, [r6, #0]

  if (pCmd->DataMode != HAL_XSPI_DATA_NONE)
 8008466:	f8d1 e038 	ldr.w	lr, [r1, #56]	@ 0x38
 800846a:	f1be 0f00 	cmp.w	lr, #0
 800846e:	d004      	beq.n	800847a <XSPI_ConfigCmd+0x9e>
  {
    if (pCmd->OperationType == HAL_XSPI_OPTYPE_COMMON_CFG)
 8008470:	680b      	ldr	r3, [r1, #0]
 8008472:	b913      	cbnz	r3, 800847a <XSPI_ConfigCmd+0x9e>
    {
      /* Configure the DLR register with the number of data */
      hxspi->Instance->DLR = (pCmd->DataLength - 1U);
 8008474:	6bcb      	ldr	r3, [r1, #60]	@ 0x3c
 8008476:	3b01      	subs	r3, #1
 8008478:	6413      	str	r3, [r2, #64]	@ 0x40
    }
  }

  if (pCmd->InstructionMode != HAL_XSPI_INSTRUCTION_NONE)
 800847a:	68cb      	ldr	r3, [r1, #12]
  {
    if (pCmd->AddressMode != HAL_XSPI_ADDRESS_NONE)
 800847c:	f8d1 901c 	ldr.w	r9, [r1, #28]
  if (pCmd->InstructionMode != HAL_XSPI_INSTRUCTION_NONE)
 8008480:	2b00      	cmp	r3, #0
 8008482:	f000 808e 	beq.w	80085a2 <XSPI_ConfigCmd+0x1c6>
      if (pCmd->DataMode != HAL_XSPI_DATA_NONE)
      {
        /* ---- Command with instruction, address and data ---- */

        /* Configure the CCR register with all communication parameters */
        MODIFY_REG((*ccr_reg), (XSPI_CCR_IMODE  | XSPI_CCR_IDTR  | XSPI_CCR_ISIZE  |
 8008486:	e9d1 c804 	ldrd	ip, r8, [r1, #16]
    if (pCmd->AddressMode != HAL_XSPI_ADDRESS_NONE)
 800848a:	f1b9 0f00 	cmp.w	r9, #0
 800848e:	d05e      	beq.n	800854e <XSPI_ConfigCmd+0x172>
        MODIFY_REG((*ccr_reg), (XSPI_CCR_IMODE  | XSPI_CCR_IDTR  | XSPI_CCR_ISIZE  |
 8008490:	e9d1 6708 	ldrd	r6, r7, [r1, #32]
      if (pCmd->DataMode != HAL_XSPI_DATA_NONE)
 8008494:	f1be 0f00 	cmp.w	lr, #0
 8008498:	d03d      	beq.n	8008516 <XSPI_ConfigCmd+0x13a>
        MODIFY_REG((*ccr_reg), (XSPI_CCR_IMODE  | XSPI_CCR_IDTR  | XSPI_CCR_ISIZE  |
 800849a:	ea4e 0303 	orr.w	r3, lr, r3
 800849e:	ea43 0309 	orr.w	r3, r3, r9
 80084a2:	ea43 0308 	orr.w	r3, r3, r8
 80084a6:	ea43 030c 	orr.w	r3, r3, ip
 80084aa:	433b      	orrs	r3, r7
 80084ac:	4333      	orrs	r3, r6
 80084ae:	6c0e      	ldr	r6, [r1, #64]	@ 0x40
 80084b0:	6820      	ldr	r0, [r4, #0]
 80084b2:	4333      	orrs	r3, r6
 80084b4:	4e4c      	ldr	r6, [pc, #304]	@ (80085e8 <XSPI_ConfigCmd+0x20c>)
 80084b6:	4006      	ands	r6, r0
 80084b8:	4333      	orrs	r3, r6

        /* The DHQC bit is linked with DDTR bit which should be activated */
        if ((hxspi->Init.DelayHoldQuarterCycle == HAL_XSPI_DHQC_ENABLE) &&
            (pCmd->InstructionDTRMode == HAL_XSPI_INSTRUCTION_DTR_ENABLE))
        {
          MODIFY_REG((*ccr_reg), XSPI_CCR_DDTR, HAL_XSPI_DATA_DTR_ENABLE);
 80084ba:	6023      	str	r3, [r4, #0]
        }
      }
      /* Configure the IR register with the instruction value */
      *ir_reg = pCmd->Instruction;
 80084bc:	688b      	ldr	r3, [r1, #8]
 80084be:	602b      	str	r3, [r5, #0]
        MODIFY_REG((*ccr_reg), (XSPI_CCR_ADMODE | XSPI_CCR_ADDTR | XSPI_CCR_ADSIZE),
                   (pCmd->AddressMode | pCmd->AddressDTRMode | pCmd->AddressWidth));
      }

      /* Configure the AR register with the instruction value */
      hxspi->Instance->AR = pCmd->Address;
 80084c0:	698b      	ldr	r3, [r1, #24]
 80084c2:	6493      	str	r3, [r2, #72]	@ 0x48
 80084c4:	e057      	b.n	8008576 <XSPI_ConfigCmd+0x19a>
  else if (IS_HSPI_ALL_INSTANCE(hxspi->Instance))
 80084c6:	4b49      	ldr	r3, [pc, #292]	@ (80085ec <XSPI_ConfigCmd+0x210>)
 80084c8:	429a      	cmp	r2, r3
 80084ca:	d003      	beq.n	80084d4 <XSPI_ConfigCmd+0xf8>
 80084cc:	f103 5380 	add.w	r3, r3, #268435456	@ 0x10000000
 80084d0:	429a      	cmp	r2, r3
 80084d2:	d106      	bne.n	80084e2 <XSPI_ConfigCmd+0x106>
    if (hxspi->Init.MemoryMode == HAL_XSPI_SINGLE_MEM)
 80084d4:	6883      	ldr	r3, [r0, #8]
 80084d6:	2b00      	cmp	r3, #0
 80084d8:	d1a0      	bne.n	800841c <XSPI_ConfigCmd+0x40>
      MODIFY_REG(hxspi->Instance->CR, HSPI_CR_MSEL, pCmd->IOSelect);
 80084da:	6813      	ldr	r3, [r2, #0]
 80084dc:	f023 4340 	bic.w	r3, r3, #3221225472	@ 0xc0000000
 80084e0:	e799      	b.n	8008416 <XSPI_ConfigCmd+0x3a>
    hxspi->ErrorCode |= HAL_XSPI_ERROR_INVALID_PARAM;
 80084e2:	6d83      	ldr	r3, [r0, #88]	@ 0x58
 80084e4:	f043 0308 	orr.w	r3, r3, #8
    }
    else
    {
      /* ---- Invalid command configuration (no instruction, no address) ---- */
      status = HAL_ERROR;
      hxspi->ErrorCode = HAL_XSPI_ERROR_INVALID_PARAM;
 80084e8:	6583      	str	r3, [r0, #88]	@ 0x58
    return HAL_ERROR;
 80084ea:	2001      	movs	r0, #1
 80084ec:	e044      	b.n	8008578 <XSPI_ConfigCmd+0x19c>
  else if (pCmd->OperationType == HAL_XSPI_OPTYPE_WRAP_CFG)
 80084ee:	2b03      	cmp	r3, #3
    ccr_reg = &(hxspi->Instance->WPCCR);
 80084f0:	bf01      	itttt	eq
 80084f2:	f502 74a0 	addeq.w	r4, r2, #320	@ 0x140
    tcr_reg = &(hxspi->Instance->WPTCR);
 80084f6:	f502 76a4 	addeq.w	r6, r2, #328	@ 0x148
    ir_reg  = &(hxspi->Instance->WPIR);
 80084fa:	f502 75a8 	addeq.w	r5, r2, #336	@ 0x150
    abr_reg = &(hxspi->Instance->WPABR);
 80084fe:	f502 7cb0 	addeq.w	ip, r2, #352	@ 0x160
    ccr_reg = &(hxspi->Instance->CCR);
 8008502:	bf1f      	itttt	ne
 8008504:	f502 7480 	addne.w	r4, r2, #256	@ 0x100
    tcr_reg = &(hxspi->Instance->TCR);
 8008508:	f502 7684 	addne.w	r6, r2, #264	@ 0x108
    ir_reg  = &(hxspi->Instance->IR);
 800850c:	f502 7588 	addne.w	r5, r2, #272	@ 0x110
    abr_reg = &(hxspi->Instance->ABR);
 8008510:	f502 7c90 	addne.w	ip, r2, #288	@ 0x120
 8008514:	e78d      	b.n	8008432 <XSPI_ConfigCmd+0x56>
        MODIFY_REG((*ccr_reg), (XSPI_CCR_IMODE  | XSPI_CCR_IDTR  | XSPI_CCR_ISIZE  |
 8008516:	ea43 0309 	orr.w	r3, r3, r9
 800851a:	f8d4 e000 	ldr.w	lr, [r4]
 800851e:	ea43 0308 	orr.w	r3, r3, r8
 8008522:	ea43 030c 	orr.w	r3, r3, ip
 8008526:	433b      	orrs	r3, r7
 8008528:	f42e 5e7c 	bic.w	lr, lr, #16128	@ 0x3f00
 800852c:	4333      	orrs	r3, r6
 800852e:	f02e 0e3f 	bic.w	lr, lr, #63	@ 0x3f
 8008532:	ea43 030e 	orr.w	r3, r3, lr
 8008536:	6023      	str	r3, [r4, #0]
        if ((hxspi->Init.DelayHoldQuarterCycle == HAL_XSPI_DHQC_ENABLE) &&
 8008538:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 800853a:	f1b3 5f80 	cmp.w	r3, #268435456	@ 0x10000000
 800853e:	d1bd      	bne.n	80084bc <XSPI_ConfigCmd+0xe0>
 8008540:	694b      	ldr	r3, [r1, #20]
 8008542:	2b08      	cmp	r3, #8
 8008544:	d1ba      	bne.n	80084bc <XSPI_ConfigCmd+0xe0>
          MODIFY_REG((*ccr_reg), XSPI_CCR_DDTR, HAL_XSPI_DATA_DTR_ENABLE);
 8008546:	6823      	ldr	r3, [r4, #0]
 8008548:	f043 6300 	orr.w	r3, r3, #134217728	@ 0x8000000
 800854c:	e7b5      	b.n	80084ba <XSPI_ConfigCmd+0xde>
        MODIFY_REG((*ccr_reg), (XSPI_CCR_IMODE | XSPI_CCR_IDTR | XSPI_CCR_ISIZE |
 800854e:	6822      	ldr	r2, [r4, #0]
      if (pCmd->DataMode != HAL_XSPI_DATA_NONE)
 8008550:	f1be 0f00 	cmp.w	lr, #0
 8008554:	d012      	beq.n	800857c <XSPI_ConfigCmd+0x1a0>
        MODIFY_REG((*ccr_reg), (XSPI_CCR_IMODE | XSPI_CCR_IDTR | XSPI_CCR_ISIZE |
 8008556:	ea4e 0303 	orr.w	r3, lr, r3
 800855a:	6c08      	ldr	r0, [r1, #64]	@ 0x40
 800855c:	ea43 0308 	orr.w	r3, r3, r8
 8008560:	ea43 030c 	orr.w	r3, r3, ip
 8008564:	f022 6270 	bic.w	r2, r2, #251658240	@ 0xf000000
 8008568:	4303      	orrs	r3, r0
 800856a:	f022 023f 	bic.w	r2, r2, #63	@ 0x3f
 800856e:	4313      	orrs	r3, r2
          MODIFY_REG((*ccr_reg), XSPI_CCR_DDTR, HAL_XSPI_DATA_DTR_ENABLE);
 8008570:	6023      	str	r3, [r4, #0]
      *ir_reg = pCmd->Instruction;
 8008572:	688b      	ldr	r3, [r1, #8]
 8008574:	602b      	str	r3, [r5, #0]
  HAL_StatusTypeDef status = HAL_OK;
 8008576:	2000      	movs	r0, #0
    }
  }

  return status;
}
 8008578:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
        MODIFY_REG((*ccr_reg), (XSPI_CCR_IMODE | XSPI_CCR_IDTR | XSPI_CCR_ISIZE),
 800857c:	ea43 0308 	orr.w	r3, r3, r8
 8008580:	ea43 030c 	orr.w	r3, r3, ip
 8008584:	f022 023f 	bic.w	r2, r2, #63	@ 0x3f
 8008588:	4313      	orrs	r3, r2
 800858a:	6023      	str	r3, [r4, #0]
        if ((hxspi->Init.DelayHoldQuarterCycle == HAL_XSPI_DHQC_ENABLE) &&
 800858c:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 800858e:	f1b3 5f80 	cmp.w	r3, #268435456	@ 0x10000000
 8008592:	d1ee      	bne.n	8008572 <XSPI_ConfigCmd+0x196>
 8008594:	694b      	ldr	r3, [r1, #20]
 8008596:	2b08      	cmp	r3, #8
 8008598:	d1eb      	bne.n	8008572 <XSPI_ConfigCmd+0x196>
          MODIFY_REG((*ccr_reg), XSPI_CCR_DDTR, HAL_XSPI_DATA_DTR_ENABLE);
 800859a:	6823      	ldr	r3, [r4, #0]
 800859c:	f043 6300 	orr.w	r3, r3, #134217728	@ 0x8000000
 80085a0:	e7e6      	b.n	8008570 <XSPI_ConfigCmd+0x194>
    if (pCmd->AddressMode != HAL_XSPI_ADDRESS_NONE)
 80085a2:	f1b9 0f00 	cmp.w	r9, #0
 80085a6:	d01b      	beq.n	80085e0 <XSPI_ConfigCmd+0x204>
        MODIFY_REG((*ccr_reg), (XSPI_CCR_IMODE  | XSPI_CCR_IDTR  | XSPI_CCR_ISIZE  |
 80085a8:	e9d1 6008 	ldrd	r6, r0, [r1, #32]
      if (pCmd->DataMode != HAL_XSPI_DATA_NONE)
 80085ac:	f1be 0f00 	cmp.w	lr, #0
 80085b0:	d00d      	beq.n	80085ce <XSPI_ConfigCmd+0x1f2>
        MODIFY_REG((*ccr_reg), (XSPI_CCR_ADMODE | XSPI_CCR_ADDTR | XSPI_CCR_ADSIZE |
 80085b2:	ea4e 0309 	orr.w	r3, lr, r9
 80085b6:	6825      	ldr	r5, [r4, #0]
 80085b8:	4303      	orrs	r3, r0
 80085ba:	6c08      	ldr	r0, [r1, #64]	@ 0x40
 80085bc:	4333      	orrs	r3, r6
 80085be:	4303      	orrs	r3, r0
 80085c0:	f025 6070 	bic.w	r0, r5, #251658240	@ 0xf000000
 80085c4:	f420 507c 	bic.w	r0, r0, #16128	@ 0x3f00
 80085c8:	4303      	orrs	r3, r0
 80085ca:	6023      	str	r3, [r4, #0]
 80085cc:	e778      	b.n	80084c0 <XSPI_ConfigCmd+0xe4>
        MODIFY_REG((*ccr_reg), (XSPI_CCR_ADMODE | XSPI_CCR_ADDTR | XSPI_CCR_ADSIZE),
 80085ce:	6823      	ldr	r3, [r4, #0]
 80085d0:	ea40 0009 	orr.w	r0, r0, r9
 80085d4:	4330      	orrs	r0, r6
 80085d6:	f423 537c 	bic.w	r3, r3, #16128	@ 0x3f00
 80085da:	4318      	orrs	r0, r3
 80085dc:	6020      	str	r0, [r4, #0]
 80085de:	e76f      	b.n	80084c0 <XSPI_ConfigCmd+0xe4>
      hxspi->ErrorCode = HAL_XSPI_ERROR_INVALID_PARAM;
 80085e0:	2308      	movs	r3, #8
 80085e2:	e781      	b.n	80084e8 <XSPI_ConfigCmd+0x10c>
 80085e4:	420d1400 	.word	0x420d1400
 80085e8:	f0ffc0c0 	.word	0xf0ffc0c0
 80085ec:	420d3400 	.word	0x420d3400

080085f0 <XSPI_WaitFlagStateUntilTimeout>:
{
 80085f0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80085f4:	4604      	mov	r4, r0
 80085f6:	460e      	mov	r6, r1
 80085f8:	4615      	mov	r5, r2
 80085fa:	461f      	mov	r7, r3
 80085fc:	f8dd 8018 	ldr.w	r8, [sp, #24]
  while ((HAL_XSPI_GET_FLAG(hxspi, Flag)) != State)
 8008600:	6822      	ldr	r2, [r4, #0]
 8008602:	6a13      	ldr	r3, [r2, #32]
 8008604:	4233      	tst	r3, r6
 8008606:	bf14      	ite	ne
 8008608:	2301      	movne	r3, #1
 800860a:	2300      	moveq	r3, #0
 800860c:	42ab      	cmp	r3, r5
 800860e:	d101      	bne.n	8008614 <XSPI_WaitFlagStateUntilTimeout+0x24>
  return HAL_OK;
 8008610:	2000      	movs	r0, #0
 8008612:	e012      	b.n	800863a <XSPI_WaitFlagStateUntilTimeout+0x4a>
    if (Timeout != HAL_MAX_DELAY)
 8008614:	f1b8 3fff 	cmp.w	r8, #4294967295
 8008618:	d0f3      	beq.n	8008602 <XSPI_WaitFlagStateUntilTimeout+0x12>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800861a:	f7fb fca3 	bl	8003f64 <HAL_GetTick>
 800861e:	1bc0      	subs	r0, r0, r7
 8008620:	4540      	cmp	r0, r8
 8008622:	d802      	bhi.n	800862a <XSPI_WaitFlagStateUntilTimeout+0x3a>
 8008624:	f1b8 0f00 	cmp.w	r8, #0
 8008628:	d1ea      	bne.n	8008600 <XSPI_WaitFlagStateUntilTimeout+0x10>
        hxspi->State     = HAL_XSPI_STATE_ERROR;
 800862a:	f44f 7300 	mov.w	r3, #512	@ 0x200
        hxspi->ErrorCode |= HAL_XSPI_ERROR_TIMEOUT;
 800862e:	2003      	movs	r0, #3
        hxspi->State     = HAL_XSPI_STATE_ERROR;
 8008630:	6563      	str	r3, [r4, #84]	@ 0x54
        hxspi->ErrorCode |= HAL_XSPI_ERROR_TIMEOUT;
 8008632:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 8008634:	f043 0301 	orr.w	r3, r3, #1
 8008638:	65a3      	str	r3, [r4, #88]	@ 0x58
}
 800863a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	...

08008640 <HAL_XSPI_Init>:
{
 8008640:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8008642:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 8008644:	f7fb fc8e 	bl	8003f64 <HAL_GetTick>
 8008648:	4605      	mov	r5, r0
  if (hxspi == NULL)
 800864a:	2c00      	cmp	r4, #0
 800864c:	f000 80a8 	beq.w	80087a0 <HAL_XSPI_Init+0x160>
    hxspi->ErrorCode = HAL_XSPI_ERROR_NONE;
 8008650:	2300      	movs	r3, #0
 8008652:	65a3      	str	r3, [r4, #88]	@ 0x58
    if (hxspi->State == HAL_XSPI_STATE_RESET)
 8008654:	6d63      	ldr	r3, [r4, #84]	@ 0x54
 8008656:	2b00      	cmp	r3, #0
 8008658:	f040 8094 	bne.w	8008784 <HAL_XSPI_Init+0x144>
      HAL_XSPI_MspInit(hxspi);
 800865c:	4620      	mov	r0, r4
 800865e:	f7f8 f97b 	bl	8000958 <HAL_XSPI_MspInit>
  hxspi->Timeout = Timeout;
 8008662:	f241 3388 	movw	r3, #5000	@ 0x1388
      MODIFY_REG(hxspi->Instance->DCR1,
 8008666:	68e1      	ldr	r1, [r4, #12]
  hxspi->Timeout = Timeout;
 8008668:	65e3      	str	r3, [r4, #92]	@ 0x5c
      MODIFY_REG(hxspi->Instance->DCR1,
 800866a:	69e3      	ldr	r3, [r4, #28]
 800866c:	6822      	ldr	r2, [r4, #0]
 800866e:	4319      	orrs	r1, r3
 8008670:	6923      	ldr	r3, [r4, #16]
 8008672:	6890      	ldr	r0, [r2, #8]
 8008674:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 8008678:	4b4a      	ldr	r3, [pc, #296]	@ (80087a4 <HAL_XSPI_Init+0x164>)
 800867a:	4003      	ands	r3, r0
 800867c:	4319      	orrs	r1, r3
 800867e:	6963      	ldr	r3, [r4, #20]
 8008680:	3b01      	subs	r3, #1
 8008682:	ea41 2103 	orr.w	r1, r1, r3, lsl #8
 8008686:	6091      	str	r1, [r2, #8]
      if (IS_OSPI_ALL_INSTANCE(hxspi->Instance))
 8008688:	4947      	ldr	r1, [pc, #284]	@ (80087a8 <HAL_XSPI_Init+0x168>)
 800868a:	428a      	cmp	r2, r1
 800868c:	d00c      	beq.n	80086a8 <HAL_XSPI_Init+0x68>
 800868e:	4b47      	ldr	r3, [pc, #284]	@ (80087ac <HAL_XSPI_Init+0x16c>)
 8008690:	429a      	cmp	r2, r3
 8008692:	d009      	beq.n	80086a8 <HAL_XSPI_Init+0x68>
 8008694:	f103 4370 	add.w	r3, r3, #4026531840	@ 0xf0000000
 8008698:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 800869c:	429a      	cmp	r2, r3
 800869e:	d003      	beq.n	80086a8 <HAL_XSPI_Init+0x68>
 80086a0:	f103 5380 	add.w	r3, r3, #268435456	@ 0x10000000
 80086a4:	429a      	cmp	r2, r3
 80086a6:	d105      	bne.n	80086b4 <HAL_XSPI_Init+0x74>
        MODIFY_REG(hxspi->Instance->DCR1, OCTOSPI_DCR1_DLYBYP, hxspi->Init.DelayBlockBypass);
 80086a8:	6893      	ldr	r3, [r2, #8]
 80086aa:	6b60      	ldr	r0, [r4, #52]	@ 0x34
 80086ac:	f023 0308 	bic.w	r3, r3, #8
 80086b0:	4303      	orrs	r3, r0
 80086b2:	6093      	str	r3, [r2, #8]
      MODIFY_REG(hxspi->Instance->DCR2, XSPI_DCR2_WRAPSIZE, hxspi->Init.WrapSize);
 80086b4:	68d3      	ldr	r3, [r2, #12]
 80086b6:	6a20      	ldr	r0, [r4, #32]
 80086b8:	f423 23e0 	bic.w	r3, r3, #458752	@ 0x70000
 80086bc:	4303      	orrs	r3, r0
 80086be:	60d3      	str	r3, [r2, #12]
      MODIFY_REG(hxspi->Instance->DCR3, XSPI_DCR3_CSBOUND, (hxspi->Init.ChipSelectBoundary << XSPI_DCR3_CSBOUND_Pos));
 80086c0:	6913      	ldr	r3, [r2, #16]
 80086c2:	6b20      	ldr	r0, [r4, #48]	@ 0x30
 80086c4:	f423 13f8 	bic.w	r3, r3, #2031616	@ 0x1f0000
 80086c8:	ea43 4300 	orr.w	r3, r3, r0, lsl #16
      if (IS_OSPI_ALL_INSTANCE(hxspi->Instance))
 80086cc:	428a      	cmp	r2, r1
      MODIFY_REG(hxspi->Instance->DCR3, XSPI_DCR3_CSBOUND, (hxspi->Init.ChipSelectBoundary << XSPI_DCR3_CSBOUND_Pos));
 80086ce:	6113      	str	r3, [r2, #16]
      if (IS_OSPI_ALL_INSTANCE(hxspi->Instance))
 80086d0:	d00c      	beq.n	80086ec <HAL_XSPI_Init+0xac>
 80086d2:	4b36      	ldr	r3, [pc, #216]	@ (80087ac <HAL_XSPI_Init+0x16c>)
 80086d4:	429a      	cmp	r2, r3
 80086d6:	d009      	beq.n	80086ec <HAL_XSPI_Init+0xac>
 80086d8:	f103 4370 	add.w	r3, r3, #4026531840	@ 0xf0000000
 80086dc:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 80086e0:	429a      	cmp	r2, r3
 80086e2:	d003      	beq.n	80086ec <HAL_XSPI_Init+0xac>
 80086e4:	f103 5380 	add.w	r3, r3, #268435456	@ 0x10000000
 80086e8:	429a      	cmp	r2, r3
 80086ea:	d105      	bne.n	80086f8 <HAL_XSPI_Init+0xb8>
        MODIFY_REG(hxspi->Instance->DCR3, OCTOSPI_DCR3_MAXTRAN, \
 80086ec:	6913      	ldr	r3, [r2, #16]
 80086ee:	6ba1      	ldr	r1, [r4, #56]	@ 0x38
 80086f0:	f023 03ff 	bic.w	r3, r3, #255	@ 0xff
 80086f4:	430b      	orrs	r3, r1
 80086f6:	6113      	str	r3, [r2, #16]
      hxspi->Instance->DCR4 = hxspi->Init.Refresh;
 80086f8:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
      MODIFY_REG(hxspi->Instance->CR, XSPI_CR_FTHRES, ((hxspi->Init.FifoThresholdByte - 1U) << XSPI_CR_FTHRES_Pos));
 80086fa:	6861      	ldr	r1, [r4, #4]
      hxspi->Instance->DCR4 = hxspi->Init.Refresh;
 80086fc:	6153      	str	r3, [r2, #20]
      MODIFY_REG(hxspi->Instance->CR, XSPI_CR_FTHRES, ((hxspi->Init.FifoThresholdByte - 1U) << XSPI_CR_FTHRES_Pos));
 80086fe:	6813      	ldr	r3, [r2, #0]
 8008700:	3901      	subs	r1, #1
 8008702:	f423 537c 	bic.w	r3, r3, #16128	@ 0x3f00
 8008706:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
 800870a:	6013      	str	r3, [r2, #0]
      status = XSPI_WaitFlagStateUntilTimeout(hxspi, HAL_XSPI_FLAG_BUSY, RESET, tickstart, hxspi->Timeout);
 800870c:	f241 3388 	movw	r3, #5000	@ 0x1388
 8008710:	2200      	movs	r2, #0
 8008712:	9300      	str	r3, [sp, #0]
 8008714:	2120      	movs	r1, #32
 8008716:	462b      	mov	r3, r5
 8008718:	4620      	mov	r0, r4
 800871a:	f7ff ff69 	bl	80085f0 <XSPI_WaitFlagStateUntilTimeout>
      if (status == HAL_OK)
 800871e:	2800      	cmp	r0, #0
 8008720:	d13c      	bne.n	800879c <HAL_XSPI_Init+0x15c>
        MODIFY_REG(hxspi->Instance->DCR2, XSPI_DCR2_PRESCALER,
 8008722:	6822      	ldr	r2, [r4, #0]
 8008724:	6a61      	ldr	r1, [r4, #36]	@ 0x24
 8008726:	68d3      	ldr	r3, [r2, #12]
 8008728:	f023 03ff 	bic.w	r3, r3, #255	@ 0xff
 800872c:	430b      	orrs	r3, r1
 800872e:	60d3      	str	r3, [r2, #12]
        if (IS_HSPI_ALL_INSTANCE(hxspi->Instance))
 8008730:	4b1f      	ldr	r3, [pc, #124]	@ (80087b0 <HAL_XSPI_Init+0x170>)
 8008732:	429a      	cmp	r2, r3
 8008734:	d028      	beq.n	8008788 <HAL_XSPI_Init+0x148>
 8008736:	f103 5380 	add.w	r3, r3, #268435456	@ 0x10000000
 800873a:	429a      	cmp	r2, r3
 800873c:	d024      	beq.n	8008788 <HAL_XSPI_Init+0x148>
        MODIFY_REG(hxspi->Instance->CR, XSPI_CR_DMM, hxspi->Init.MemoryMode);
 800873e:	6823      	ldr	r3, [r4, #0]
 8008740:	68a1      	ldr	r1, [r4, #8]
 8008742:	681a      	ldr	r2, [r3, #0]
 8008744:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 8008748:	430a      	orrs	r2, r1
 800874a:	601a      	str	r2, [r3, #0]
        MODIFY_REG(hxspi->Instance->TCR, (XSPI_TCR_SSHIFT | XSPI_TCR_DHQC),
 800874c:	f8d3 1108 	ldr.w	r1, [r3, #264]	@ 0x108
 8008750:	e9d4 200a 	ldrd	r2, r0, [r4, #40]	@ 0x28
 8008754:	f021 41a0 	bic.w	r1, r1, #1342177280	@ 0x50000000
 8008758:	4302      	orrs	r2, r0
 800875a:	430a      	orrs	r2, r1
 800875c:	f8c3 2108 	str.w	r2, [r3, #264]	@ 0x108
        HAL_XSPI_ENABLE(hxspi);
 8008760:	681a      	ldr	r2, [r3, #0]
 8008762:	f042 0201 	orr.w	r2, r2, #1
 8008766:	601a      	str	r2, [r3, #0]
        if (hxspi->Init.FreeRunningClock == HAL_XSPI_FREERUNCLK_ENABLE)
 8008768:	69a2      	ldr	r2, [r4, #24]
 800876a:	2a02      	cmp	r2, #2
 800876c:	d103      	bne.n	8008776 <HAL_XSPI_Init+0x136>
          SET_BIT(hxspi->Instance->DCR1, XSPI_DCR1_FRCK);
 800876e:	689a      	ldr	r2, [r3, #8]
 8008770:	f042 0202 	orr.w	r2, r2, #2
 8008774:	609a      	str	r2, [r3, #8]
        if (hxspi->Init.MemoryType == HAL_XSPI_MEMTYPE_HYPERBUS)
 8008776:	68e3      	ldr	r3, [r4, #12]
 8008778:	f1b3 6f80 	cmp.w	r3, #67108864	@ 0x4000000
          hxspi->State = HAL_XSPI_STATE_HYPERBUS_INIT;
 800877c:	bf0c      	ite	eq
 800877e:	2301      	moveq	r3, #1
          hxspi->State = HAL_XSPI_STATE_READY;
 8008780:	2302      	movne	r3, #2
 8008782:	6563      	str	r3, [r4, #84]	@ 0x54
  HAL_StatusTypeDef status = HAL_OK;
 8008784:	2000      	movs	r0, #0
 8008786:	e009      	b.n	800879c <HAL_XSPI_Init+0x15c>
          status = XSPI_WaitFlagStateUntilTimeout(hxspi, HAL_XSPI_FLAG_BUSY, RESET, tickstart, hxspi->Timeout);
 8008788:	6de3      	ldr	r3, [r4, #92]	@ 0x5c
 800878a:	2200      	movs	r2, #0
 800878c:	9300      	str	r3, [sp, #0]
 800878e:	2120      	movs	r1, #32
 8008790:	462b      	mov	r3, r5
 8008792:	4620      	mov	r0, r4
 8008794:	f7ff ff2c 	bl	80085f0 <XSPI_WaitFlagStateUntilTimeout>
          if (status != HAL_OK)
 8008798:	2800      	cmp	r0, #0
 800879a:	d0d0      	beq.n	800873e <HAL_XSPI_Init+0xfe>
}
 800879c:	b003      	add	sp, #12
 800879e:	bd30      	pop	{r4, r5, pc}
    status = HAL_ERROR;
 80087a0:	2001      	movs	r0, #1
 80087a2:	e7fb      	b.n	800879c <HAL_XSPI_Init+0x15c>
 80087a4:	f8e0c0fc 	.word	0xf8e0c0fc
 80087a8:	420d1400 	.word	0x420d1400
 80087ac:	520d1400 	.word	0x520d1400
 80087b0:	420d3400 	.word	0x420d3400

080087b4 <HAL_XSPI_Command>:
{
 80087b4:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 80087b8:	4604      	mov	r4, r0
 80087ba:	4690      	mov	r8, r2
 80087bc:	460e      	mov	r6, r1
  uint32_t tickstart = HAL_GetTick();
 80087be:	f7fb fbd1 	bl	8003f64 <HAL_GetTick>
  if (hxspi->Init.MemoryMode == HAL_XSPI_SINGLE_MEM)
 80087c2:	68a2      	ldr	r2, [r4, #8]
  uint32_t tickstart = HAL_GetTick();
 80087c4:	4607      	mov	r7, r0
  if (hxspi->Init.MemoryMode == HAL_XSPI_SINGLE_MEM)
 80087c6:	6825      	ldr	r5, [r4, #0]
 80087c8:	4b42      	ldr	r3, [pc, #264]	@ (80088d4 <HAL_XSPI_Command+0x120>)
 80087ca:	bb02      	cbnz	r2, 800880e <HAL_XSPI_Command+0x5a>
    if (IS_OSPI_ALL_INSTANCE(hxspi->Instance))
 80087cc:	429d      	cmp	r5, r3
 80087ce:	d037      	beq.n	8008840 <HAL_XSPI_Command+0x8c>
 80087d0:	4a41      	ldr	r2, [pc, #260]	@ (80088d8 <HAL_XSPI_Command+0x124>)
 80087d2:	4295      	cmp	r5, r2
 80087d4:	d01b      	beq.n	800880e <HAL_XSPI_Command+0x5a>
 80087d6:	f102 4270 	add.w	r2, r2, #4026531840	@ 0xf0000000
 80087da:	f502 5280 	add.w	r2, r2, #4096	@ 0x1000
 80087de:	4295      	cmp	r5, r2
 80087e0:	d015      	beq.n	800880e <HAL_XSPI_Command+0x5a>
 80087e2:	f102 5280 	add.w	r2, r2, #268435456	@ 0x10000000
 80087e6:	4295      	cmp	r5, r2
 80087e8:	d011      	beq.n	800880e <HAL_XSPI_Command+0x5a>
    else if (IS_HSPI_ALL_INSTANCE(hxspi->Instance))
 80087ea:	f102 4270 	add.w	r2, r2, #4026531840	@ 0xf0000000
 80087ee:	f502 5280 	add.w	r2, r2, #4096	@ 0x1000
 80087f2:	4295      	cmp	r5, r2
 80087f4:	d00b      	beq.n	800880e <HAL_XSPI_Command+0x5a>
 80087f6:	f102 5280 	add.w	r2, r2, #268435456	@ 0x10000000
 80087fa:	4295      	cmp	r5, r2
 80087fc:	d007      	beq.n	800880e <HAL_XSPI_Command+0x5a>
    hxspi->ErrorCode |= HAL_XSPI_ERROR_INVALID_PARAM;
 80087fe:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 8008800:	f043 0308 	orr.w	r3, r3, #8
      return HAL_ERROR;
 8008804:	2001      	movs	r0, #1
    hxspi->ErrorCode |= HAL_XSPI_ERROR_INVALID_PARAM;
 8008806:	65a3      	str	r3, [r4, #88]	@ 0x58
}
 8008808:	b002      	add	sp, #8
 800880a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if (IS_OSPI_ALL_INSTANCE(hxspi->Instance))
 800880e:	429d      	cmp	r5, r3
 8008810:	d016      	beq.n	8008840 <HAL_XSPI_Command+0x8c>
 8008812:	4b31      	ldr	r3, [pc, #196]	@ (80088d8 <HAL_XSPI_Command+0x124>)
 8008814:	429d      	cmp	r5, r3
 8008816:	d013      	beq.n	8008840 <HAL_XSPI_Command+0x8c>
 8008818:	f103 4370 	add.w	r3, r3, #4026531840	@ 0xf0000000
 800881c:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 8008820:	429d      	cmp	r5, r3
 8008822:	d00d      	beq.n	8008840 <HAL_XSPI_Command+0x8c>
 8008824:	f103 5380 	add.w	r3, r3, #268435456	@ 0x10000000
 8008828:	429d      	cmp	r5, r3
 800882a:	d009      	beq.n	8008840 <HAL_XSPI_Command+0x8c>
  else if (IS_HSPI_ALL_INSTANCE(hxspi->Instance))
 800882c:	f103 4370 	add.w	r3, r3, #4026531840	@ 0xf0000000
 8008830:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 8008834:	429d      	cmp	r5, r3
 8008836:	d003      	beq.n	8008840 <HAL_XSPI_Command+0x8c>
 8008838:	f103 5380 	add.w	r3, r3, #268435456	@ 0x10000000
 800883c:	429d      	cmp	r5, r3
 800883e:	d1de      	bne.n	80087fe <HAL_XSPI_Command+0x4a>
  state = hxspi->State;
 8008840:	6d63      	ldr	r3, [r4, #84]	@ 0x54
  if (((state == HAL_XSPI_STATE_READY)         && (hxspi->Init.MemoryType != HAL_XSPI_MEMTYPE_HYPERBUS)) ||
 8008842:	2b02      	cmp	r3, #2
 8008844:	d105      	bne.n	8008852 <HAL_XSPI_Command+0x9e>
 8008846:	68e3      	ldr	r3, [r4, #12]
 8008848:	f1b3 6f80 	cmp.w	r3, #67108864	@ 0x4000000
 800884c:	d107      	bne.n	800885e <HAL_XSPI_Command+0xaa>
    hxspi->ErrorCode = HAL_XSPI_ERROR_INVALID_SEQUENCE;
 800884e:	2310      	movs	r3, #16
 8008850:	e7d8      	b.n	8008804 <HAL_XSPI_Command+0x50>
  if (((state == HAL_XSPI_STATE_READY)         && (hxspi->Init.MemoryType != HAL_XSPI_MEMTYPE_HYPERBUS)) ||
 8008852:	2b14      	cmp	r3, #20
 8008854:	d121      	bne.n	800889a <HAL_XSPI_Command+0xe6>
      ((state == HAL_XSPI_STATE_READ_CMD_CFG)  && ((pCmd->OperationType == HAL_XSPI_OPTYPE_WRITE_CFG) ||
 8008856:	6833      	ldr	r3, [r6, #0]
 8008858:	3b02      	subs	r3, #2
 800885a:	2b01      	cmp	r3, #1
 800885c:	d8f7      	bhi.n	800884e <HAL_XSPI_Command+0x9a>
    status = XSPI_WaitFlagStateUntilTimeout(hxspi, HAL_XSPI_FLAG_BUSY, RESET, tickstart, Timeout);
 800885e:	463b      	mov	r3, r7
 8008860:	2200      	movs	r2, #0
 8008862:	2120      	movs	r1, #32
 8008864:	4620      	mov	r0, r4
 8008866:	f8cd 8000 	str.w	r8, [sp]
 800886a:	f7ff fec1 	bl	80085f0 <XSPI_WaitFlagStateUntilTimeout>
    if (status == HAL_OK)
 800886e:	bb78      	cbnz	r0, 80088d0 <HAL_XSPI_Command+0x11c>
      hxspi->ErrorCode = HAL_XSPI_ERROR_NONE;
 8008870:	65a0      	str	r0, [r4, #88]	@ 0x58
      status = XSPI_ConfigCmd(hxspi, pCmd);
 8008872:	4631      	mov	r1, r6
 8008874:	4620      	mov	r0, r4
 8008876:	f7ff fdb1 	bl	80083dc <XSPI_ConfigCmd>
      if (status == HAL_OK)
 800887a:	2800      	cmp	r0, #0
 800887c:	d1c4      	bne.n	8008808 <HAL_XSPI_Command+0x54>
        if (pCmd->DataMode == HAL_XSPI_DATA_NONE)
 800887e:	6bb3      	ldr	r3, [r6, #56]	@ 0x38
 8008880:	b99b      	cbnz	r3, 80088aa <HAL_XSPI_Command+0xf6>
          status = XSPI_WaitFlagStateUntilTimeout(hxspi, HAL_XSPI_FLAG_TC, SET, tickstart, Timeout);
 8008882:	463b      	mov	r3, r7
 8008884:	2201      	movs	r2, #1
 8008886:	2102      	movs	r1, #2
 8008888:	4620      	mov	r0, r4
 800888a:	f8cd 8000 	str.w	r8, [sp]
 800888e:	f7ff feaf 	bl	80085f0 <XSPI_WaitFlagStateUntilTimeout>
          HAL_XSPI_CLEAR_FLAG(hxspi, HAL_XSPI_FLAG_TC);
 8008892:	2202      	movs	r2, #2
 8008894:	6823      	ldr	r3, [r4, #0]
 8008896:	625a      	str	r2, [r3, #36]	@ 0x24
 8008898:	e7b6      	b.n	8008808 <HAL_XSPI_Command+0x54>
                                                   (pCmd->OperationType == HAL_XSPI_OPTYPE_WRAP_CFG))) ||
 800889a:	2b24      	cmp	r3, #36	@ 0x24
 800889c:	d1d7      	bne.n	800884e <HAL_XSPI_Command+0x9a>
      ((state == HAL_XSPI_STATE_WRITE_CMD_CFG) &&
 800889e:	6833      	ldr	r3, [r6, #0]
 80088a0:	f023 0302 	bic.w	r3, r3, #2
 80088a4:	2b01      	cmp	r3, #1
 80088a6:	d1d2      	bne.n	800884e <HAL_XSPI_Command+0x9a>
 80088a8:	e7d9      	b.n	800885e <HAL_XSPI_Command+0xaa>
          if (pCmd->OperationType == HAL_XSPI_OPTYPE_COMMON_CFG)
 80088aa:	6833      	ldr	r3, [r6, #0]
 80088ac:	b90b      	cbnz	r3, 80088b2 <HAL_XSPI_Command+0xfe>
              hxspi->State = HAL_XSPI_STATE_CMD_CFG;
 80088ae:	2304      	movs	r3, #4
 80088b0:	e005      	b.n	80088be <HAL_XSPI_Command+0x10a>
          else if (pCmd->OperationType == HAL_XSPI_OPTYPE_READ_CFG)
 80088b2:	2b01      	cmp	r3, #1
 80088b4:	d105      	bne.n	80088c2 <HAL_XSPI_Command+0x10e>
            if (hxspi->State == HAL_XSPI_STATE_WRITE_CMD_CFG)
 80088b6:	6d63      	ldr	r3, [r4, #84]	@ 0x54
 80088b8:	2b24      	cmp	r3, #36	@ 0x24
 80088ba:	d0f8      	beq.n	80088ae <HAL_XSPI_Command+0xfa>
              hxspi->State = HAL_XSPI_STATE_READ_CMD_CFG;
 80088bc:	2314      	movs	r3, #20
              hxspi->State = HAL_XSPI_STATE_WRITE_CMD_CFG;
 80088be:	6563      	str	r3, [r4, #84]	@ 0x54
 80088c0:	e7a2      	b.n	8008808 <HAL_XSPI_Command+0x54>
          else if (pCmd->OperationType == HAL_XSPI_OPTYPE_WRITE_CFG)
 80088c2:	2b02      	cmp	r3, #2
 80088c4:	d1a0      	bne.n	8008808 <HAL_XSPI_Command+0x54>
            if (hxspi->State == HAL_XSPI_STATE_READ_CMD_CFG)
 80088c6:	6d63      	ldr	r3, [r4, #84]	@ 0x54
 80088c8:	2b14      	cmp	r3, #20
 80088ca:	d0f0      	beq.n	80088ae <HAL_XSPI_Command+0xfa>
              hxspi->State = HAL_XSPI_STATE_WRITE_CMD_CFG;
 80088cc:	2324      	movs	r3, #36	@ 0x24
 80088ce:	e7f6      	b.n	80088be <HAL_XSPI_Command+0x10a>
      status = HAL_BUSY;
 80088d0:	2002      	movs	r0, #2
 80088d2:	e799      	b.n	8008808 <HAL_XSPI_Command+0x54>
 80088d4:	420d1400 	.word	0x420d1400
 80088d8:	520d1400 	.word	0x520d1400

080088dc <HAL_XSPI_Transmit>:
{
 80088dc:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 80088e0:	4604      	mov	r4, r0
 80088e2:	4688      	mov	r8, r1
 80088e4:	4616      	mov	r6, r2
  uint32_t tickstart = HAL_GetTick();
 80088e6:	f7fb fb3d 	bl	8003f64 <HAL_GetTick>
  __IO uint32_t *data_reg = &hxspi->Instance->DR;
 80088ea:	6827      	ldr	r7, [r4, #0]
  uint32_t tickstart = HAL_GetTick();
 80088ec:	4605      	mov	r5, r0
  if (pData == NULL)
 80088ee:	f1b8 0f00 	cmp.w	r8, #0
 80088f2:	d103      	bne.n	80088fc <HAL_XSPI_Transmit+0x20>
    hxspi->ErrorCode = HAL_XSPI_ERROR_INVALID_PARAM;
 80088f4:	2308      	movs	r3, #8
    status = HAL_ERROR;
 80088f6:	2001      	movs	r0, #1
      hxspi->ErrorCode = HAL_XSPI_ERROR_INVALID_SEQUENCE;
 80088f8:	65a3      	str	r3, [r4, #88]	@ 0x58
 80088fa:	e02e      	b.n	800895a <HAL_XSPI_Transmit+0x7e>
    if (hxspi->State == HAL_XSPI_STATE_CMD_CFG)
 80088fc:	6d63      	ldr	r3, [r4, #84]	@ 0x54
 80088fe:	2b04      	cmp	r3, #4
 8008900:	d12e      	bne.n	8008960 <HAL_XSPI_Transmit+0x84>
      hxspi->XferCount = READ_REG(hxspi->Instance->DLR) + 1U;
 8008902:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
      hxspi->pBuffPtr  = pData;
 8008904:	f8c4 8040 	str.w	r8, [r4, #64]	@ 0x40
      hxspi->XferCount = READ_REG(hxspi->Instance->DLR) + 1U;
 8008908:	3301      	adds	r3, #1
 800890a:	64a3      	str	r3, [r4, #72]	@ 0x48
      hxspi->XferSize  = hxspi->XferCount;
 800890c:	6ca3      	ldr	r3, [r4, #72]	@ 0x48
 800890e:	6463      	str	r3, [r4, #68]	@ 0x44
      MODIFY_REG(hxspi->Instance->CR, XSPI_CR_FMODE, XSPI_FUNCTIONAL_MODE_INDIRECT_WRITE);
 8008910:	683b      	ldr	r3, [r7, #0]
 8008912:	f023 5340 	bic.w	r3, r3, #805306368	@ 0x30000000
 8008916:	603b      	str	r3, [r7, #0]
        status = XSPI_WaitFlagStateUntilTimeout(hxspi, HAL_XSPI_FLAG_FT, SET, tickstart, Timeout);
 8008918:	462b      	mov	r3, r5
 800891a:	2201      	movs	r2, #1
 800891c:	2104      	movs	r1, #4
 800891e:	4620      	mov	r0, r4
 8008920:	9600      	str	r6, [sp, #0]
 8008922:	f7ff fe65 	bl	80085f0 <XSPI_WaitFlagStateUntilTimeout>
        if (status != HAL_OK)
 8008926:	b9c0      	cbnz	r0, 800895a <HAL_XSPI_Transmit+0x7e>
        *((__IO uint8_t *)data_reg) = *hxspi->pBuffPtr;
 8008928:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 800892a:	781b      	ldrb	r3, [r3, #0]
 800892c:	f887 3050 	strb.w	r3, [r7, #80]	@ 0x50
        hxspi->pBuffPtr++;
 8008930:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8008932:	3301      	adds	r3, #1
 8008934:	6423      	str	r3, [r4, #64]	@ 0x40
        hxspi->XferCount--;
 8008936:	6ca3      	ldr	r3, [r4, #72]	@ 0x48
 8008938:	3b01      	subs	r3, #1
 800893a:	64a3      	str	r3, [r4, #72]	@ 0x48
      } while (hxspi->XferCount > 0U);
 800893c:	6ca3      	ldr	r3, [r4, #72]	@ 0x48
 800893e:	2b00      	cmp	r3, #0
 8008940:	d1ea      	bne.n	8008918 <HAL_XSPI_Transmit+0x3c>
        status = XSPI_WaitFlagStateUntilTimeout(hxspi, HAL_XSPI_FLAG_TC, SET, tickstart, Timeout);
 8008942:	462b      	mov	r3, r5
 8008944:	2201      	movs	r2, #1
 8008946:	2102      	movs	r1, #2
 8008948:	4620      	mov	r0, r4
 800894a:	9600      	str	r6, [sp, #0]
 800894c:	f7ff fe50 	bl	80085f0 <XSPI_WaitFlagStateUntilTimeout>
        if (status == HAL_OK)
 8008950:	b918      	cbnz	r0, 800895a <HAL_XSPI_Transmit+0x7e>
          HAL_XSPI_CLEAR_FLAG(hxspi, HAL_XSPI_FLAG_TC);
 8008952:	2302      	movs	r3, #2
 8008954:	6822      	ldr	r2, [r4, #0]
 8008956:	6253      	str	r3, [r2, #36]	@ 0x24
          hxspi->State = HAL_XSPI_STATE_READY;
 8008958:	6563      	str	r3, [r4, #84]	@ 0x54
}
 800895a:	b002      	add	sp, #8
 800895c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      hxspi->ErrorCode = HAL_XSPI_ERROR_INVALID_SEQUENCE;
 8008960:	2310      	movs	r3, #16
 8008962:	e7c8      	b.n	80088f6 <HAL_XSPI_Transmit+0x1a>

08008964 <HAL_XSPI_AutoPolling>:
{
 8008964:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 8008968:	4604      	mov	r4, r0
 800896a:	460e      	mov	r6, r1
 800896c:	4617      	mov	r7, r2
  uint32_t tickstart = HAL_GetTick();
 800896e:	f7fb faf9 	bl	8003f64 <HAL_GetTick>
  uint32_t addr_reg = hxspi->Instance->AR;
 8008972:	6823      	ldr	r3, [r4, #0]
  uint32_t tickstart = HAL_GetTick();
 8008974:	4682      	mov	sl, r0
  uint32_t addr_reg = hxspi->Instance->AR;
 8008976:	f8d3 8048 	ldr.w	r8, [r3, #72]	@ 0x48
  uint32_t ir_reg = hxspi->Instance->IR;
 800897a:	f8d3 9110 	ldr.w	r9, [r3, #272]	@ 0x110
  if ((hxspi->State == HAL_XSPI_STATE_CMD_CFG) && (pCfg->AutomaticStop == HAL_XSPI_AUTOMATIC_STOP_ENABLE))
 800897e:	6d63      	ldr	r3, [r4, #84]	@ 0x54
 8008980:	2b04      	cmp	r3, #4
 8008982:	d13e      	bne.n	8008a02 <HAL_XSPI_AutoPolling+0x9e>
 8008984:	68f3      	ldr	r3, [r6, #12]
 8008986:	f5b3 0f80 	cmp.w	r3, #4194304	@ 0x400000
 800898a:	d13a      	bne.n	8008a02 <HAL_XSPI_AutoPolling+0x9e>
    status = XSPI_WaitFlagStateUntilTimeout(hxspi, HAL_XSPI_FLAG_BUSY, RESET, tickstart, Timeout);
 800898c:	4603      	mov	r3, r0
 800898e:	2200      	movs	r2, #0
 8008990:	2120      	movs	r1, #32
 8008992:	4620      	mov	r0, r4
 8008994:	9700      	str	r7, [sp, #0]
 8008996:	f7ff fe2b 	bl	80085f0 <XSPI_WaitFlagStateUntilTimeout>
    if (status == HAL_OK)
 800899a:	2800      	cmp	r0, #0
 800899c:	d135      	bne.n	8008a0a <HAL_XSPI_AutoPolling+0xa6>
      MODIFY_REG(hxspi->Instance->CR, (XSPI_CR_PMM | XSPI_CR_APMS | XSPI_CR_FMODE),
 800899e:	e9d6 1202 	ldrd	r1, r2, [r6, #8]
      WRITE_REG(hxspi->Instance->PSMAR, pCfg->MatchValue);
 80089a2:	6825      	ldr	r5, [r4, #0]
 80089a4:	6833      	ldr	r3, [r6, #0]
      MODIFY_REG(hxspi->Instance->CR, (XSPI_CR_PMM | XSPI_CR_APMS | XSPI_CR_FMODE),
 80089a6:	4311      	orrs	r1, r2
      WRITE_REG(hxspi->Instance->PSMAR, pCfg->MatchValue);
 80089a8:	f8c5 3088 	str.w	r3, [r5, #136]	@ 0x88
      WRITE_REG(hxspi->Instance->PSMKR, pCfg->MatchMask);
 80089ac:	6873      	ldr	r3, [r6, #4]
 80089ae:	f8c5 3080 	str.w	r3, [r5, #128]	@ 0x80
      WRITE_REG(hxspi->Instance->PIR,   pCfg->IntervalTime);
 80089b2:	6933      	ldr	r3, [r6, #16]
 80089b4:	f8c5 3090 	str.w	r3, [r5, #144]	@ 0x90
      MODIFY_REG(hxspi->Instance->CR, (XSPI_CR_PMM | XSPI_CR_APMS | XSPI_CR_FMODE),
 80089b8:	682b      	ldr	r3, [r5, #0]
 80089ba:	f023 5343 	bic.w	r3, r3, #817889280	@ 0x30c00000
 80089be:	4319      	orrs	r1, r3
      if (hxspi->Init.MemoryType == HAL_XSPI_MEMTYPE_HYPERBUS)
 80089c0:	68e3      	ldr	r3, [r4, #12]
      MODIFY_REG(hxspi->Instance->CR, (XSPI_CR_PMM | XSPI_CR_APMS | XSPI_CR_FMODE),
 80089c2:	f041 5100 	orr.w	r1, r1, #536870912	@ 0x20000000
      if (hxspi->Init.MemoryType == HAL_XSPI_MEMTYPE_HYPERBUS)
 80089c6:	f1b3 6f80 	cmp.w	r3, #67108864	@ 0x4000000
      MODIFY_REG(hxspi->Instance->CR, (XSPI_CR_PMM | XSPI_CR_APMS | XSPI_CR_FMODE),
 80089ca:	6029      	str	r1, [r5, #0]
      if (hxspi->Init.MemoryType == HAL_XSPI_MEMTYPE_HYPERBUS)
 80089cc:	d111      	bne.n	80089f2 <HAL_XSPI_AutoPolling+0x8e>
          WRITE_REG(hxspi->Instance->AR, addr_reg);
 80089ce:	f8c5 8048 	str.w	r8, [r5, #72]	@ 0x48
      status = XSPI_WaitFlagStateUntilTimeout(hxspi, HAL_XSPI_FLAG_SM, SET, tickstart, Timeout);
 80089d2:	4653      	mov	r3, sl
 80089d4:	2201      	movs	r2, #1
 80089d6:	2108      	movs	r1, #8
 80089d8:	4620      	mov	r0, r4
 80089da:	9700      	str	r7, [sp, #0]
 80089dc:	f7ff fe08 	bl	80085f0 <XSPI_WaitFlagStateUntilTimeout>
      if (status == HAL_OK)
 80089e0:	b920      	cbnz	r0, 80089ec <HAL_XSPI_AutoPolling+0x88>
        HAL_XSPI_CLEAR_FLAG(hxspi, HAL_XSPI_FLAG_SM);
 80089e2:	2208      	movs	r2, #8
 80089e4:	6823      	ldr	r3, [r4, #0]
 80089e6:	625a      	str	r2, [r3, #36]	@ 0x24
        hxspi->State = HAL_XSPI_STATE_READY;
 80089e8:	2302      	movs	r3, #2
 80089ea:	6563      	str	r3, [r4, #84]	@ 0x54
}
 80089ec:	b002      	add	sp, #8
 80089ee:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
        if (READ_BIT(hxspi->Instance->CCR, XSPI_CCR_ADMODE) != HAL_XSPI_ADDRESS_NONE)
 80089f2:	f8d5 3100 	ldr.w	r3, [r5, #256]	@ 0x100
 80089f6:	f413 6fe0 	tst.w	r3, #1792	@ 0x700
 80089fa:	d1e8      	bne.n	80089ce <HAL_XSPI_AutoPolling+0x6a>
          WRITE_REG(hxspi->Instance->IR, ir_reg);
 80089fc:	f8c5 9110 	str.w	r9, [r5, #272]	@ 0x110
 8008a00:	e7e7      	b.n	80089d2 <HAL_XSPI_AutoPolling+0x6e>
    hxspi->ErrorCode = HAL_XSPI_ERROR_INVALID_SEQUENCE;
 8008a02:	2310      	movs	r3, #16
    status = HAL_ERROR;
 8008a04:	2001      	movs	r0, #1
    hxspi->ErrorCode = HAL_XSPI_ERROR_INVALID_SEQUENCE;
 8008a06:	65a3      	str	r3, [r4, #88]	@ 0x58
 8008a08:	e7f0      	b.n	80089ec <HAL_XSPI_AutoPolling+0x88>
      status = HAL_BUSY;
 8008a0a:	2002      	movs	r0, #2
 8008a0c:	e7ee      	b.n	80089ec <HAL_XSPI_AutoPolling+0x88>

08008a0e <HAL_XSPI_MemoryMapped>:
{
 8008a0e:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8008a10:	4604      	mov	r4, r0
 8008a12:	460d      	mov	r5, r1
  uint32_t tickstart = HAL_GetTick();
 8008a14:	f7fb faa6 	bl	8003f64 <HAL_GetTick>
  if (hxspi->State == HAL_XSPI_STATE_CMD_CFG)
 8008a18:	6d62      	ldr	r2, [r4, #84]	@ 0x54
  uint32_t tickstart = HAL_GetTick();
 8008a1a:	4603      	mov	r3, r0
  if (hxspi->State == HAL_XSPI_STATE_CMD_CFG)
 8008a1c:	2a04      	cmp	r2, #4
 8008a1e:	d121      	bne.n	8008a64 <HAL_XSPI_MemoryMapped+0x56>
    status = XSPI_WaitFlagStateUntilTimeout(hxspi, HAL_XSPI_FLAG_BUSY, RESET, tickstart, hxspi->Timeout);
 8008a20:	6de2      	ldr	r2, [r4, #92]	@ 0x5c
 8008a22:	2120      	movs	r1, #32
 8008a24:	9200      	str	r2, [sp, #0]
 8008a26:	4620      	mov	r0, r4
 8008a28:	2200      	movs	r2, #0
 8008a2a:	f7ff fde1 	bl	80085f0 <XSPI_WaitFlagStateUntilTimeout>
    if (status == HAL_OK)
 8008a2e:	b9b8      	cbnz	r0, 8008a60 <HAL_XSPI_MemoryMapped+0x52>
      hxspi->State = HAL_XSPI_STATE_BUSY_MEM_MAPPED;
 8008a30:	2388      	movs	r3, #136	@ 0x88
      if (pCfg->TimeOutActivation == HAL_XSPI_TIMEOUT_COUNTER_ENABLE)
 8008a32:	6829      	ldr	r1, [r5, #0]
        WRITE_REG(hxspi->Instance->LPTR, pCfg->TimeoutPeriodClock);
 8008a34:	6822      	ldr	r2, [r4, #0]
      if (pCfg->TimeOutActivation == HAL_XSPI_TIMEOUT_COUNTER_ENABLE)
 8008a36:	2908      	cmp	r1, #8
      hxspi->State = HAL_XSPI_STATE_BUSY_MEM_MAPPED;
 8008a38:	6563      	str	r3, [r4, #84]	@ 0x54
      if (pCfg->TimeOutActivation == HAL_XSPI_TIMEOUT_COUNTER_ENABLE)
 8008a3a:	d108      	bne.n	8008a4e <HAL_XSPI_MemoryMapped+0x40>
        WRITE_REG(hxspi->Instance->LPTR, pCfg->TimeoutPeriodClock);
 8008a3c:	686b      	ldr	r3, [r5, #4]
 8008a3e:	f8c2 3130 	str.w	r3, [r2, #304]	@ 0x130
        HAL_XSPI_CLEAR_FLAG(hxspi, HAL_XSPI_FLAG_TO);
 8008a42:	2310      	movs	r3, #16
 8008a44:	6253      	str	r3, [r2, #36]	@ 0x24
        HAL_XSPI_ENABLE_IT(hxspi, HAL_XSPI_IT_TO);
 8008a46:	6813      	ldr	r3, [r2, #0]
 8008a48:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 8008a4c:	6013      	str	r3, [r2, #0]
      MODIFY_REG(hxspi->Instance->CR, (XSPI_CR_TCEN | XSPI_CR_FMODE),
 8008a4e:	6813      	ldr	r3, [r2, #0]
 8008a50:	f023 5340 	bic.w	r3, r3, #805306368	@ 0x30000000
 8008a54:	f023 0308 	bic.w	r3, r3, #8
 8008a58:	430b      	orrs	r3, r1
 8008a5a:	f043 5340 	orr.w	r3, r3, #805306368	@ 0x30000000
 8008a5e:	6013      	str	r3, [r2, #0]
}
 8008a60:	b003      	add	sp, #12
 8008a62:	bd30      	pop	{r4, r5, pc}
    hxspi->ErrorCode = HAL_XSPI_ERROR_INVALID_SEQUENCE;
 8008a64:	2310      	movs	r3, #16
    status = HAL_ERROR;
 8008a66:	2001      	movs	r0, #1
    hxspi->ErrorCode = HAL_XSPI_ERROR_INVALID_SEQUENCE;
 8008a68:	65a3      	str	r3, [r4, #88]	@ 0x58
 8008a6a:	e7f9      	b.n	8008a60 <HAL_XSPI_MemoryMapped+0x52>

08008a6c <HAL_XSPI_ErrorCallback>:
__weak void HAL_XSPI_ErrorCallback(XSPI_HandleTypeDef *hxspi)
 8008a6c:	4770      	bx	lr

08008a6e <HAL_XSPI_AbortCpltCallback>:
__weak void HAL_XSPI_AbortCpltCallback(XSPI_HandleTypeDef *hxspi)
 8008a6e:	4770      	bx	lr

08008a70 <XSPI_DMAAbortCplt>:
{
 8008a70:	b508      	push	{r3, lr}
  hxspi->XferCount = 0;
 8008a72:	2300      	movs	r3, #0
  XSPI_HandleTypeDef *hxspi = (XSPI_HandleTypeDef *)(hdma->Parent);
 8008a74:	6dc0      	ldr	r0, [r0, #92]	@ 0x5c
  hxspi->XferCount = 0;
 8008a76:	6483      	str	r3, [r0, #72]	@ 0x48
  if (hxspi->State == HAL_XSPI_STATE_ABORT)
 8008a78:	6d43      	ldr	r3, [r0, #84]	@ 0x54
 8008a7a:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 8008a7e:	d114      	bne.n	8008aaa <XSPI_DMAAbortCplt+0x3a>
    if (HAL_XSPI_GET_FLAG(hxspi, HAL_XSPI_FLAG_BUSY) != RESET)
 8008a80:	6803      	ldr	r3, [r0, #0]
 8008a82:	6a1a      	ldr	r2, [r3, #32]
 8008a84:	f012 0f20 	tst.w	r2, #32
 8008a88:	f04f 0202 	mov.w	r2, #2
 8008a8c:	d009      	beq.n	8008aa2 <XSPI_DMAAbortCplt+0x32>
      HAL_XSPI_CLEAR_FLAG(hxspi, HAL_XSPI_FLAG_TC);
 8008a8e:	625a      	str	r2, [r3, #36]	@ 0x24
      HAL_XSPI_ENABLE_IT(hxspi, HAL_XSPI_IT_TC);
 8008a90:	681a      	ldr	r2, [r3, #0]
 8008a92:	f442 3200 	orr.w	r2, r2, #131072	@ 0x20000
 8008a96:	601a      	str	r2, [r3, #0]
      SET_BIT(hxspi->Instance->CR, XSPI_CR_ABORT);
 8008a98:	681a      	ldr	r2, [r3, #0]
 8008a9a:	f042 0202 	orr.w	r2, r2, #2
 8008a9e:	601a      	str	r2, [r3, #0]
}
 8008aa0:	bd08      	pop	{r3, pc}
      hxspi->State = HAL_XSPI_STATE_READY;
 8008aa2:	6542      	str	r2, [r0, #84]	@ 0x54
      HAL_XSPI_AbortCpltCallback(hxspi);
 8008aa4:	f7ff ffe3 	bl	8008a6e <HAL_XSPI_AbortCpltCallback>
 8008aa8:	e7fa      	b.n	8008aa0 <XSPI_DMAAbortCplt+0x30>
    hxspi->State = HAL_XSPI_STATE_READY;
 8008aaa:	2302      	movs	r3, #2
 8008aac:	6543      	str	r3, [r0, #84]	@ 0x54
    HAL_XSPI_ErrorCallback(hxspi);
 8008aae:	f7ff ffdd 	bl	8008a6c <HAL_XSPI_ErrorCallback>
}
 8008ab2:	e7f5      	b.n	8008aa0 <XSPI_DMAAbortCplt+0x30>

08008ab4 <HAL_XSPI_FifoThresholdCallback>:
__weak void HAL_XSPI_FifoThresholdCallback(XSPI_HandleTypeDef *hxspi)
 8008ab4:	4770      	bx	lr

08008ab6 <HAL_XSPI_CmdCpltCallback>:
__weak void HAL_XSPI_CmdCpltCallback(XSPI_HandleTypeDef *hxspi)
 8008ab6:	4770      	bx	lr

08008ab8 <HAL_XSPI_RxCpltCallback>:
__weak void HAL_XSPI_RxCpltCallback(XSPI_HandleTypeDef *hxspi)
 8008ab8:	4770      	bx	lr

08008aba <HAL_XSPI_TxCpltCallback>:
__weak void HAL_XSPI_TxCpltCallback(XSPI_HandleTypeDef *hxspi)
 8008aba:	4770      	bx	lr

08008abc <HAL_XSPI_StatusMatchCallback>:
__weak void HAL_XSPI_StatusMatchCallback(XSPI_HandleTypeDef *hxspi)
 8008abc:	4770      	bx	lr

08008abe <HAL_XSPI_TimeOutCallback>:
__weak void HAL_XSPI_TimeOutCallback(XSPI_HandleTypeDef *hxspi)
 8008abe:	4770      	bx	lr

08008ac0 <HAL_XSPI_IRQHandler>:
{
 8008ac0:	b570      	push	{r4, r5, r6, lr}
 8008ac2:	4604      	mov	r4, r0
  __IO uint32_t *data_reg = &hxspi->Instance->DR;
 8008ac4:	6803      	ldr	r3, [r0, #0]
  uint32_t flag           = hxspi->Instance->SR;
 8008ac6:	6a1a      	ldr	r2, [r3, #32]
  uint32_t itsource       = hxspi->Instance->CR;
 8008ac8:	6818      	ldr	r0, [r3, #0]
  if (((flag & HAL_XSPI_FLAG_FT) != 0U) && ((itsource & HAL_XSPI_IT_FT) != 0U))
 8008aca:	0755      	lsls	r5, r2, #29
  uint32_t currentstate   = hxspi->State;
 8008acc:	6d61      	ldr	r1, [r4, #84]	@ 0x54
  if (((flag & HAL_XSPI_FLAG_FT) != 0U) && ((itsource & HAL_XSPI_IT_FT) != 0U))
 8008ace:	d51f      	bpl.n	8008b10 <HAL_XSPI_IRQHandler+0x50>
 8008ad0:	0346      	lsls	r6, r0, #13
 8008ad2:	d51d      	bpl.n	8008b10 <HAL_XSPI_IRQHandler+0x50>
    if (currentstate == HAL_XSPI_STATE_BUSY_TX)
 8008ad4:	2918      	cmp	r1, #24
 8008ad6:	d114      	bne.n	8008b02 <HAL_XSPI_IRQHandler+0x42>
      *((__IO uint8_t *)data_reg) = *hxspi->pBuffPtr;
 8008ad8:	6c22      	ldr	r2, [r4, #64]	@ 0x40
 8008ada:	7812      	ldrb	r2, [r2, #0]
 8008adc:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
      hxspi->pBuffPtr++;
 8008ae0:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8008ae2:	3301      	adds	r3, #1
 8008ae4:	6423      	str	r3, [r4, #64]	@ 0x40
      hxspi->XferCount--;
 8008ae6:	6ca3      	ldr	r3, [r4, #72]	@ 0x48
 8008ae8:	3b01      	subs	r3, #1
 8008aea:	64a3      	str	r3, [r4, #72]	@ 0x48
    if (hxspi->XferCount == 0U)
 8008aec:	6ca3      	ldr	r3, [r4, #72]	@ 0x48
 8008aee:	b923      	cbnz	r3, 8008afa <HAL_XSPI_IRQHandler+0x3a>
      HAL_XSPI_DISABLE_IT(hxspi, HAL_XSPI_IT_FT);
 8008af0:	6822      	ldr	r2, [r4, #0]
 8008af2:	6813      	ldr	r3, [r2, #0]
 8008af4:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 8008af8:	6013      	str	r3, [r2, #0]
    HAL_XSPI_FifoThresholdCallback(hxspi);
 8008afa:	4620      	mov	r0, r4
 8008afc:	f7ff ffda 	bl	8008ab4 <HAL_XSPI_FifoThresholdCallback>
}
 8008b00:	bd70      	pop	{r4, r5, r6, pc}
    else if (currentstate == HAL_XSPI_STATE_BUSY_RX)
 8008b02:	2928      	cmp	r1, #40	@ 0x28
 8008b04:	d1f2      	bne.n	8008aec <HAL_XSPI_IRQHandler+0x2c>
      *hxspi->pBuffPtr = *((__IO uint8_t *)data_reg);
 8008b06:	6c22      	ldr	r2, [r4, #64]	@ 0x40
 8008b08:	f893 3050 	ldrb.w	r3, [r3, #80]	@ 0x50
 8008b0c:	7013      	strb	r3, [r2, #0]
 8008b0e:	e7e7      	b.n	8008ae0 <HAL_XSPI_IRQHandler+0x20>
  else if (((flag & HAL_XSPI_FLAG_TC) != 0U) && ((itsource & HAL_XSPI_IT_TC) != 0U))
 8008b10:	0795      	lsls	r5, r2, #30
 8008b12:	d53e      	bpl.n	8008b92 <HAL_XSPI_IRQHandler+0xd2>
 8008b14:	0386      	lsls	r6, r0, #14
 8008b16:	d53c      	bpl.n	8008b92 <HAL_XSPI_IRQHandler+0xd2>
    if (currentstate == HAL_XSPI_STATE_BUSY_RX)
 8008b18:	2928      	cmp	r1, #40	@ 0x28
 8008b1a:	d11d      	bne.n	8008b58 <HAL_XSPI_IRQHandler+0x98>
      if ((hxspi->XferCount > 0U) && ((flag & XSPI_SR_FLEVEL) != 0U))
 8008b1c:	6ca1      	ldr	r1, [r4, #72]	@ 0x48
 8008b1e:	b169      	cbz	r1, 8008b3c <HAL_XSPI_IRQHandler+0x7c>
 8008b20:	f412 4ffe 	tst.w	r2, #32512	@ 0x7f00
 8008b24:	d00a      	beq.n	8008b3c <HAL_XSPI_IRQHandler+0x7c>
        *hxspi->pBuffPtr = *((__IO uint8_t *)data_reg);
 8008b26:	f893 3050 	ldrb.w	r3, [r3, #80]	@ 0x50
 8008b2a:	6c22      	ldr	r2, [r4, #64]	@ 0x40
 8008b2c:	7013      	strb	r3, [r2, #0]
        hxspi->pBuffPtr++;
 8008b2e:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8008b30:	3301      	adds	r3, #1
 8008b32:	6423      	str	r3, [r4, #64]	@ 0x40
        hxspi->XferCount--;
 8008b34:	6ca3      	ldr	r3, [r4, #72]	@ 0x48
 8008b36:	3b01      	subs	r3, #1
 8008b38:	64a3      	str	r3, [r4, #72]	@ 0x48
 8008b3a:	e7e1      	b.n	8008b00 <HAL_XSPI_IRQHandler+0x40>
      else if (hxspi->XferCount == 0U)
 8008b3c:	6ca2      	ldr	r2, [r4, #72]	@ 0x48
 8008b3e:	2a00      	cmp	r2, #0
 8008b40:	d1de      	bne.n	8008b00 <HAL_XSPI_IRQHandler+0x40>
        hxspi->Instance->FCR = HAL_XSPI_FLAG_TC;
 8008b42:	2102      	movs	r1, #2
 8008b44:	6259      	str	r1, [r3, #36]	@ 0x24
        HAL_XSPI_DISABLE_IT(hxspi, HAL_XSPI_IT_TC | HAL_XSPI_IT_FT | HAL_XSPI_IT_TE);
 8008b46:	681a      	ldr	r2, [r3, #0]
        HAL_XSPI_RxCpltCallback(hxspi);
 8008b48:	4620      	mov	r0, r4
        HAL_XSPI_DISABLE_IT(hxspi, HAL_XSPI_IT_TC | HAL_XSPI_IT_FT | HAL_XSPI_IT_TE);
 8008b4a:	f422 22e0 	bic.w	r2, r2, #458752	@ 0x70000
 8008b4e:	601a      	str	r2, [r3, #0]
        hxspi->State = HAL_XSPI_STATE_READY;
 8008b50:	6561      	str	r1, [r4, #84]	@ 0x54
        HAL_XSPI_RxCpltCallback(hxspi);
 8008b52:	f7ff ffb1 	bl	8008ab8 <HAL_XSPI_RxCpltCallback>
 8008b56:	e7d3      	b.n	8008b00 <HAL_XSPI_IRQHandler+0x40>
      hxspi->Instance->FCR = HAL_XSPI_FLAG_TC;
 8008b58:	2002      	movs	r0, #2
 8008b5a:	6258      	str	r0, [r3, #36]	@ 0x24
      HAL_XSPI_DISABLE_IT(hxspi, HAL_XSPI_IT_TC | HAL_XSPI_IT_FT | HAL_XSPI_IT_TE);
 8008b5c:	681a      	ldr	r2, [r3, #0]
      if (currentstate == HAL_XSPI_STATE_BUSY_TX)
 8008b5e:	2918      	cmp	r1, #24
      HAL_XSPI_DISABLE_IT(hxspi, HAL_XSPI_IT_TC | HAL_XSPI_IT_FT | HAL_XSPI_IT_TE);
 8008b60:	f422 22e0 	bic.w	r2, r2, #458752	@ 0x70000
 8008b64:	601a      	str	r2, [r3, #0]
      hxspi->State = HAL_XSPI_STATE_READY;
 8008b66:	6560      	str	r0, [r4, #84]	@ 0x54
      if (currentstate == HAL_XSPI_STATE_BUSY_TX)
 8008b68:	d103      	bne.n	8008b72 <HAL_XSPI_IRQHandler+0xb2>
        HAL_XSPI_TxCpltCallback(hxspi);
 8008b6a:	4620      	mov	r0, r4
 8008b6c:	f7ff ffa5 	bl	8008aba <HAL_XSPI_TxCpltCallback>
 8008b70:	e7c6      	b.n	8008b00 <HAL_XSPI_IRQHandler+0x40>
      else if (currentstate == HAL_XSPI_STATE_BUSY_CMD)
 8008b72:	2908      	cmp	r1, #8
 8008b74:	d103      	bne.n	8008b7e <HAL_XSPI_IRQHandler+0xbe>
        HAL_XSPI_CmdCpltCallback(hxspi);
 8008b76:	4620      	mov	r0, r4
 8008b78:	f7ff ff9d 	bl	8008ab6 <HAL_XSPI_CmdCpltCallback>
 8008b7c:	e7c0      	b.n	8008b00 <HAL_XSPI_IRQHandler+0x40>
      else if (currentstate == HAL_XSPI_STATE_ABORT)
 8008b7e:	f5b1 7f80 	cmp.w	r1, #256	@ 0x100
 8008b82:	d1bd      	bne.n	8008b00 <HAL_XSPI_IRQHandler+0x40>
        if (hxspi->ErrorCode == HAL_XSPI_ERROR_NONE)
 8008b84:	6da3      	ldr	r3, [r4, #88]	@ 0x58
          HAL_XSPI_AbortCpltCallback(hxspi);
 8008b86:	4620      	mov	r0, r4
        if (hxspi->ErrorCode == HAL_XSPI_ERROR_NONE)
 8008b88:	2b00      	cmp	r3, #0
 8008b8a:	d13b      	bne.n	8008c04 <HAL_XSPI_IRQHandler+0x144>
          HAL_XSPI_AbortCpltCallback(hxspi);
 8008b8c:	f7ff ff6f 	bl	8008a6e <HAL_XSPI_AbortCpltCallback>
 8008b90:	e7b6      	b.n	8008b00 <HAL_XSPI_IRQHandler+0x40>
  else if (((flag & HAL_XSPI_FLAG_SM) != 0U) && ((itsource & HAL_XSPI_IT_SM) != 0U))
 8008b92:	0715      	lsls	r5, r2, #28
 8008b94:	d510      	bpl.n	8008bb8 <HAL_XSPI_IRQHandler+0xf8>
 8008b96:	0301      	lsls	r1, r0, #12
 8008b98:	d50e      	bpl.n	8008bb8 <HAL_XSPI_IRQHandler+0xf8>
    hxspi->Instance->FCR = HAL_XSPI_FLAG_SM;
 8008b9a:	2208      	movs	r2, #8
 8008b9c:	625a      	str	r2, [r3, #36]	@ 0x24
    if ((hxspi->Instance->CR & XSPI_CR_APMS) != 0U)
 8008b9e:	681a      	ldr	r2, [r3, #0]
 8008ba0:	0252      	lsls	r2, r2, #9
 8008ba2:	d505      	bpl.n	8008bb0 <HAL_XSPI_IRQHandler+0xf0>
      HAL_XSPI_DISABLE_IT(hxspi, HAL_XSPI_IT_SM | HAL_XSPI_IT_TE);
 8008ba4:	681a      	ldr	r2, [r3, #0]
 8008ba6:	f422 2210 	bic.w	r2, r2, #589824	@ 0x90000
 8008baa:	601a      	str	r2, [r3, #0]
      hxspi->State = HAL_XSPI_STATE_READY;
 8008bac:	2302      	movs	r3, #2
 8008bae:	6563      	str	r3, [r4, #84]	@ 0x54
    HAL_XSPI_StatusMatchCallback(hxspi);
 8008bb0:	4620      	mov	r0, r4
 8008bb2:	f7ff ff83 	bl	8008abc <HAL_XSPI_StatusMatchCallback>
 8008bb6:	e7a3      	b.n	8008b00 <HAL_XSPI_IRQHandler+0x40>
  else if (((flag & HAL_XSPI_FLAG_TE) != 0U) && ((itsource & HAL_XSPI_IT_TE) != 0U))
 8008bb8:	07d6      	lsls	r6, r2, #31
 8008bba:	d528      	bpl.n	8008c0e <HAL_XSPI_IRQHandler+0x14e>
 8008bbc:	03c5      	lsls	r5, r0, #15
 8008bbe:	d526      	bpl.n	8008c0e <HAL_XSPI_IRQHandler+0x14e>
    hxspi->Instance->FCR = HAL_XSPI_FLAG_TE;
 8008bc0:	2201      	movs	r2, #1
    hxspi->ErrorCode = HAL_XSPI_ERROR_TRANSFER;
 8008bc2:	2502      	movs	r5, #2
    hxspi->Instance->FCR = HAL_XSPI_FLAG_TE;
 8008bc4:	625a      	str	r2, [r3, #36]	@ 0x24
    HAL_XSPI_DISABLE_IT(hxspi, (HAL_XSPI_IT_TO | HAL_XSPI_IT_SM | HAL_XSPI_IT_FT | HAL_XSPI_IT_TC | HAL_XSPI_IT_TE));
 8008bc6:	681a      	ldr	r2, [r3, #0]
 8008bc8:	f422 12f8 	bic.w	r2, r2, #2031616	@ 0x1f0000
 8008bcc:	601a      	str	r2, [r3, #0]
    hxspi->ErrorCode = HAL_XSPI_ERROR_TRANSFER;
 8008bce:	65a5      	str	r5, [r4, #88]	@ 0x58
    if ((hxspi->Instance->CR & XSPI_CR_DMAEN) != 0U)
 8008bd0:	681a      	ldr	r2, [r3, #0]
 8008bd2:	0750      	lsls	r0, r2, #29
 8008bd4:	d519      	bpl.n	8008c0a <HAL_XSPI_IRQHandler+0x14a>
      CLEAR_BIT(hxspi->Instance->CR, XSPI_CR_DMAEN);
 8008bd6:	681a      	ldr	r2, [r3, #0]
      hxspi->hdmatx->XferAbortCallback = XSPI_DMAAbortCplt;
 8008bd8:	6ce0      	ldr	r0, [r4, #76]	@ 0x4c
 8008bda:	4e13      	ldr	r6, [pc, #76]	@ (8008c28 <HAL_XSPI_IRQHandler+0x168>)
      CLEAR_BIT(hxspi->Instance->CR, XSPI_CR_DMAEN);
 8008bdc:	f022 0204 	bic.w	r2, r2, #4
 8008be0:	601a      	str	r2, [r3, #0]
      hxspi->hdmatx->XferAbortCallback = XSPI_DMAAbortCplt;
 8008be2:	66c6      	str	r6, [r0, #108]	@ 0x6c
      if (HAL_DMA_Abort_IT(hxspi->hdmatx) != HAL_OK)
 8008be4:	f7fb fd50 	bl	8004688 <HAL_DMA_Abort_IT>
 8008be8:	b118      	cbz	r0, 8008bf2 <HAL_XSPI_IRQHandler+0x132>
        HAL_XSPI_ErrorCallback(hxspi);
 8008bea:	4620      	mov	r0, r4
        hxspi->State = HAL_XSPI_STATE_READY;
 8008bec:	6565      	str	r5, [r4, #84]	@ 0x54
        HAL_XSPI_ErrorCallback(hxspi);
 8008bee:	f7ff ff3d 	bl	8008a6c <HAL_XSPI_ErrorCallback>
      hxspi->hdmarx->XferAbortCallback = XSPI_DMAAbortCplt;
 8008bf2:	6d20      	ldr	r0, [r4, #80]	@ 0x50
 8008bf4:	66c6      	str	r6, [r0, #108]	@ 0x6c
      if (HAL_DMA_Abort_IT(hxspi->hdmarx) != HAL_OK)
 8008bf6:	f7fb fd47 	bl	8004688 <HAL_DMA_Abort_IT>
 8008bfa:	2800      	cmp	r0, #0
 8008bfc:	d080      	beq.n	8008b00 <HAL_XSPI_IRQHandler+0x40>
        hxspi->State = HAL_XSPI_STATE_READY;
 8008bfe:	2302      	movs	r3, #2
 8008c00:	6563      	str	r3, [r4, #84]	@ 0x54
        HAL_XSPI_ErrorCallback(hxspi);
 8008c02:	4620      	mov	r0, r4
 8008c04:	f7ff ff32 	bl	8008a6c <HAL_XSPI_ErrorCallback>
 8008c08:	e77a      	b.n	8008b00 <HAL_XSPI_IRQHandler+0x40>
      hxspi->State = HAL_XSPI_STATE_READY;
 8008c0a:	6565      	str	r5, [r4, #84]	@ 0x54
      HAL_XSPI_ErrorCallback(hxspi);
 8008c0c:	e7f9      	b.n	8008c02 <HAL_XSPI_IRQHandler+0x142>
  else if (((flag & HAL_XSPI_FLAG_TO) != 0U) && ((itsource & HAL_XSPI_IT_TO) != 0U))
 8008c0e:	06d1      	lsls	r1, r2, #27
 8008c10:	f57f af76 	bpl.w	8008b00 <HAL_XSPI_IRQHandler+0x40>
 8008c14:	02c2      	lsls	r2, r0, #11
 8008c16:	f57f af73 	bpl.w	8008b00 <HAL_XSPI_IRQHandler+0x40>
    hxspi->Instance->FCR = HAL_XSPI_FLAG_TO;
 8008c1a:	2210      	movs	r2, #16
    HAL_XSPI_TimeOutCallback(hxspi);
 8008c1c:	4620      	mov	r0, r4
    hxspi->Instance->FCR = HAL_XSPI_FLAG_TO;
 8008c1e:	625a      	str	r2, [r3, #36]	@ 0x24
    HAL_XSPI_TimeOutCallback(hxspi);
 8008c20:	f7ff ff4d 	bl	8008abe <HAL_XSPI_TimeOutCallback>
}
 8008c24:	e76c      	b.n	8008b00 <HAL_XSPI_IRQHandler+0x40>
 8008c26:	bf00      	nop
 8008c28:	08008a71 	.word	0x08008a71

08008c2c <IRQ_Context>:
#endif

/*
  Determine if CPU executes from interrupt context or if interrupts are masked.
*/
__STATIC_INLINE uint32_t IRQ_Context (void) {
 8008c2c:	b510      	push	{r4, lr}
 */
__STATIC_FORCEINLINE uint32_t __get_IPSR(void)
{
  uint32_t result;

  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8008c2e:	f3ef 8405 	mrs	r4, IPSR
  uint32_t irq;
  BaseType_t state;

  irq = 0U;

  if (IS_IRQ_MODE()) {
 8008c32:	b114      	cbz	r4, 8008c3a <IRQ_Context+0xe>
    /* Called from interrupt context */
    irq = 1U;
 8008c34:	2401      	movs	r4, #1
    }
  }

  /* Return context, 0: thread context, 1: IRQ context */
  return (irq);
}
 8008c36:	4620      	mov	r0, r4
 8008c38:	bd10      	pop	{r4, pc}
    state = xTaskGetSchedulerState();
 8008c3a:	f001 fc4d 	bl	800a4d8 <xTaskGetSchedulerState>
    if (state != taskSCHEDULER_NOT_STARTED) {
 8008c3e:	2801      	cmp	r0, #1
 8008c40:	d0f9      	beq.n	8008c36 <IRQ_Context+0xa>
 */
__STATIC_FORCEINLINE uint32_t __get_PRIMASK(void)
{
  uint32_t result;

  __ASM volatile ("MRS %0, primask" : "=r" (result) );
 8008c42:	f3ef 8310 	mrs	r3, PRIMASK
      if (IS_IRQ_MASKED()) {
 8008c46:	2b00      	cmp	r3, #0
 8008c48:	d1f4      	bne.n	8008c34 <IRQ_Context+0x8>
 */
__STATIC_FORCEINLINE uint32_t __get_BASEPRI(void)
{
  uint32_t result;

  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 8008c4a:	f3ef 8411 	mrs	r4, BASEPRI
 8008c4e:	3c00      	subs	r4, #0
 8008c50:	bf18      	it	ne
 8008c52:	2401      	movne	r4, #1
  return (irq);
 8008c54:	e7ef      	b.n	8008c36 <IRQ_Context+0xa>

08008c56 <SysTick_Handler>:
void SysTick_Handler (void) {
 8008c56:	b508      	push	{r3, lr}
  SysTick->CTRL;
 8008c58:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8008c5c:	691b      	ldr	r3, [r3, #16]
  if (xTaskGetSchedulerState() != taskSCHEDULER_NOT_STARTED) {
 8008c5e:	f001 fc3b 	bl	800a4d8 <xTaskGetSchedulerState>
 8008c62:	2801      	cmp	r0, #1
 8008c64:	d003      	beq.n	8008c6e <SysTick_Handler+0x18>
}
 8008c66:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    xPortSysTickHandler();
 8008c6a:	f000 ba7d 	b.w	8009168 <xPortSysTickHandler>
}
 8008c6e:	bd08      	pop	{r3, pc}

08008c70 <osKernelInitialize>:
/* ==== Kernel Management Functions ==== */

/*
  Initialize the RTOS Kernel.
*/
osStatus_t osKernelInitialize (void) {
 8008c70:	b508      	push	{r3, lr}
  osStatus_t stat;
  BaseType_t state;

  if (IRQ_Context() != 0U) {
 8008c72:	f7ff ffdb 	bl	8008c2c <IRQ_Context>
 8008c76:	b948      	cbnz	r0, 8008c8c <osKernelInitialize+0x1c>
    stat = osErrorISR;
  }
  else {
    state = xTaskGetSchedulerState();
 8008c78:	f001 fc2e 	bl	800a4d8 <xTaskGetSchedulerState>

    /* Initialize if scheduler not started and not initialized before */
    if ((state == taskSCHEDULER_NOT_STARTED) && (KernelState == osKernelInactive)) {
 8008c7c:	2801      	cmp	r0, #1
    state = xTaskGetSchedulerState();
 8008c7e:	4603      	mov	r3, r0
    if ((state == taskSCHEDULER_NOT_STARTED) && (KernelState == osKernelInactive)) {
 8008c80:	d107      	bne.n	8008c92 <osKernelInitialize+0x22>
 8008c82:	4a05      	ldr	r2, [pc, #20]	@ (8008c98 <osKernelInitialize+0x28>)
 8008c84:	6810      	ldr	r0, [r2, #0]
 8008c86:	b920      	cbnz	r0, 8008c92 <osKernelInitialize+0x22>
      #endif
      #if defined(USE_FreeRTOS_HEAP_5) && (HEAP_5_REGION_SETUP == 1)
        /* Initialize the memory regions when using heap_5 variant */
        vPortDefineHeapRegions (configHEAP_5_REGIONS);
      #endif
      KernelState = osKernelReady;
 8008c88:	6013      	str	r3, [r2, #0]
    }
  }

  /* Return execution status */
  return (stat);
}
 8008c8a:	bd08      	pop	{r3, pc}
    stat = osErrorISR;
 8008c8c:	f06f 0005 	mvn.w	r0, #5
 8008c90:	e7fb      	b.n	8008c8a <osKernelInitialize+0x1a>
      stat = osError;
 8008c92:	f04f 30ff 	mov.w	r0, #4294967295
  return (stat);
 8008c96:	e7f8      	b.n	8008c8a <osKernelInitialize+0x1a>
 8008c98:	2006f18c 	.word	0x2006f18c

08008c9c <osKernelStart>:
}

/*
  Start the RTOS Kernel scheduler.
*/
osStatus_t osKernelStart (void) {
 8008c9c:	b510      	push	{r4, lr}
  osStatus_t stat;
  BaseType_t state;

  if (IRQ_Context() != 0U) {
 8008c9e:	f7ff ffc5 	bl	8008c2c <IRQ_Context>
 8008ca2:	4604      	mov	r4, r0
 8008ca4:	b978      	cbnz	r0, 8008cc6 <osKernelStart+0x2a>
    stat = osErrorISR;
  }
  else {
    state = xTaskGetSchedulerState();
 8008ca6:	f001 fc17 	bl	800a4d8 <xTaskGetSchedulerState>

    /* Start scheduler if initialized and not started before */
    if ((state == taskSCHEDULER_NOT_STARTED) && (KernelState == osKernelReady)) {
 8008caa:	2801      	cmp	r0, #1
 8008cac:	d10e      	bne.n	8008ccc <osKernelStart+0x30>
 8008cae:	4b09      	ldr	r3, [pc, #36]	@ (8008cd4 <osKernelStart+0x38>)
 8008cb0:	681a      	ldr	r2, [r3, #0]
 8008cb2:	2a01      	cmp	r2, #1
 8008cb4:	d10a      	bne.n	8008ccc <osKernelStart+0x30>
    SCB->SHPR[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8008cb6:	4a08      	ldr	r2, [pc, #32]	@ (8008cd8 <osKernelStart+0x3c>)
 8008cb8:	77d4      	strb	r4, [r2, #31]
      /* Ensure SVC priority is at the reset value */
      SVC_Setup();
      /* Change state to ensure correct API flow */
      KernelState = osKernelRunning;
 8008cba:	2202      	movs	r2, #2
 8008cbc:	601a      	str	r2, [r3, #0]
      /* Start the kernel scheduler */
      vTaskStartScheduler();
 8008cbe:	f001 faad 	bl	800a21c <vTaskStartScheduler>
      stat = osOK;
 8008cc2:	4620      	mov	r0, r4
    }
  }

  /* Return execution status */
  return (stat);
}
 8008cc4:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
 8008cc6:	f06f 0005 	mvn.w	r0, #5
 8008cca:	e7fb      	b.n	8008cc4 <osKernelStart+0x28>
      stat = osError;
 8008ccc:	f04f 30ff 	mov.w	r0, #4294967295
  return (stat);
 8008cd0:	e7f8      	b.n	8008cc4 <osKernelStart+0x28>
 8008cd2:	bf00      	nop
 8008cd4:	2006f18c 	.word	0x2006f18c
 8008cd8:	e000ed00 	.word	0xe000ed00

08008cdc <osThreadNew>:
  uint32_t stack;
  TaskHandle_t hTask;
  UBaseType_t prio;
  int32_t mem;

  hTask = NULL;
 8008cdc:	2300      	movs	r3, #0
osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 8008cde:	b5f0      	push	{r4, r5, r6, r7, lr}
 8008ce0:	b087      	sub	sp, #28
 8008ce2:	4606      	mov	r6, r0
 8008ce4:	460f      	mov	r7, r1
 8008ce6:	4614      	mov	r4, r2
  hTask = NULL;
 8008ce8:	9305      	str	r3, [sp, #20]

  if ((IRQ_Context() == 0U) && (func != NULL)) {
 8008cea:	f7ff ff9f 	bl	8008c2c <IRQ_Context>
 8008cee:	b9d8      	cbnz	r0, 8008d28 <osThreadNew+0x4c>
 8008cf0:	b1d6      	cbz	r6, 8008d28 <osThreadNew+0x4c>
    prio  = (UBaseType_t)osPriorityNormal;

    name = NULL;
    mem  = -1;

    if (attr != NULL) {
 8008cf2:	2c00      	cmp	r4, #0
 8008cf4:	d02f      	beq.n	8008d56 <osThreadNew+0x7a>
      if (attr->name != NULL) {
        name = attr->name;
      }
      if (attr->priority != osPriorityNone) {
 8008cf6:	69a5      	ldr	r5, [r4, #24]
 8008cf8:	2d00      	cmp	r5, #0
 8008cfa:	bf08      	it	eq
 8008cfc:	2518      	moveq	r5, #24
        prio = (UBaseType_t)attr->priority;
      }

      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
 8008cfe:	1e6b      	subs	r3, r5, #1
 8008d00:	2b37      	cmp	r3, #55	@ 0x37
 8008d02:	46ae      	mov	lr, r5
 8008d04:	d811      	bhi.n	8008d2a <osThreadNew+0x4e>
 8008d06:	6863      	ldr	r3, [r4, #4]
 8008d08:	07db      	lsls	r3, r3, #31
 8008d0a:	d40e      	bmi.n	8008d2a <osThreadNew+0x4e>
        /* Invalid priority or unsupported osThreadJoinable attribute used */
        return (NULL);
      }

      if (attr->stack_size > 0U) {
 8008d0c:	6963      	ldr	r3, [r4, #20]
 8008d0e:	b173      	cbz	r3, 8008d2e <osThreadNew+0x52>
        /* In FreeRTOS stack is not in bytes, but in sizeof(StackType_t) which is 4 on ARM ports.       */
        /* Stack size should be therefore 4 byte aligned in order to avoid division caused side effects */
        stack = attr->stack_size / sizeof(StackType_t);
 8008d10:	089a      	lsrs	r2, r3, #2
      if (attr->name != NULL) {
 8008d12:	6821      	ldr	r1, [r4, #0]
      }

      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 8008d14:	e9d4 c002 	ldrd	ip, r0, [r4, #8]
 8008d18:	f1bc 0f00 	cmp.w	ip, #0
 8008d1c:	d009      	beq.n	8008d32 <osThreadNew+0x56>
 8008d1e:	285f      	cmp	r0, #95	@ 0x5f
 8008d20:	d902      	bls.n	8008d28 <osThreadNew+0x4c>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 8008d22:	6920      	ldr	r0, [r4, #16]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 8008d24:	b100      	cbz	r0, 8008d28 <osThreadNew+0x4c>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 8008d26:	b9db      	cbnz	r3, 8008d60 <osThreadNew+0x84>
      }
    }
  }

  /* Return thread ID */
  return ((osThreadId_t)hTask);
 8008d28:	9805      	ldr	r0, [sp, #20]
}
 8008d2a:	b007      	add	sp, #28
 8008d2c:	bdf0      	pop	{r4, r5, r6, r7, pc}
    stack = configMINIMAL_STACK_SIZE;
 8008d2e:	2280      	movs	r2, #128	@ 0x80
 8008d30:	e7ef      	b.n	8008d12 <osThreadNew+0x36>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) && (attr->stack_mem == NULL)) {
 8008d32:	2800      	cmp	r0, #0
 8008d34:	d1f8      	bne.n	8008d28 <osThreadNew+0x4c>
      if (mem == 0) {
 8008d36:	6923      	ldr	r3, [r4, #16]
 8008d38:	2b00      	cmp	r3, #0
 8008d3a:	d1f5      	bne.n	8008d28 <osThreadNew+0x4c>
          if (xTaskCreate ((TaskFunction_t)func, name, (configSTACK_DEPTH_TYPE)stack, argument, prio, &hTask) != pdPASS) {
 8008d3c:	ab05      	add	r3, sp, #20
 8008d3e:	e9cd e300 	strd	lr, r3, [sp]
 8008d42:	4630      	mov	r0, r6
 8008d44:	463b      	mov	r3, r7
 8008d46:	b292      	uxth	r2, r2
 8008d48:	f001 f8b9 	bl	8009ebe <xTaskCreate>
 8008d4c:	2801      	cmp	r0, #1
            hTask = NULL;
 8008d4e:	bf1c      	itt	ne
 8008d50:	2300      	movne	r3, #0
 8008d52:	9305      	strne	r3, [sp, #20]
 8008d54:	e7e8      	b.n	8008d28 <osThreadNew+0x4c>
    name = NULL;
 8008d56:	4621      	mov	r1, r4
    prio  = (UBaseType_t)osPriorityNormal;
 8008d58:	f04f 0e18 	mov.w	lr, #24
    stack = configMINIMAL_STACK_SIZE;
 8008d5c:	2280      	movs	r2, #128	@ 0x80
 8008d5e:	e7ed      	b.n	8008d3c <osThreadNew+0x60>
        hTask = xTaskCreateStatic ((TaskFunction_t)func, name, stack, argument, prio, (StackType_t  *)attr->stack_mem,
 8008d60:	e9cd 0c01 	strd	r0, ip, [sp, #4]
 8008d64:	463b      	mov	r3, r7
 8008d66:	4630      	mov	r0, r6
 8008d68:	9500      	str	r5, [sp, #0]
 8008d6a:	f001 f882 	bl	8009e72 <xTaskCreateStatic>
 8008d6e:	9005      	str	r0, [sp, #20]
 8008d70:	e7da      	b.n	8008d28 <osThreadNew+0x4c>

08008d72 <osDelay>:
/* ==== Generic Wait Functions ==== */

/*
  Wait for Timeout (Time Delay).
*/
osStatus_t osDelay (uint32_t ticks) {
 8008d72:	b510      	push	{r4, lr}
 8008d74:	4604      	mov	r4, r0
  osStatus_t stat;

  if (IRQ_Context() != 0U) {
 8008d76:	f7ff ff59 	bl	8008c2c <IRQ_Context>
 8008d7a:	b928      	cbnz	r0, 8008d88 <osDelay+0x16>
    stat = osErrorISR;
  }
  else {
    stat = osOK;

    if (ticks != 0U) {
 8008d7c:	b114      	cbz	r4, 8008d84 <osDelay+0x12>
      vTaskDelay(ticks);
 8008d7e:	4620      	mov	r0, r4
 8008d80:	f001 fa18 	bl	800a1b4 <vTaskDelay>
    stat = osOK;
 8008d84:	2000      	movs	r0, #0
    }
  }

  /* Return execution status */
  return (stat);
}
 8008d86:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
 8008d88:	f06f 0005 	mvn.w	r0, #5
  return (stat);
 8008d8c:	e7fb      	b.n	8008d86 <osDelay+0x14>

08008d8e <osSemaphoreNew>:
/* ==== Semaphore Management Functions ==== */

/*
  Create and Initialize a Semaphore object.
*/
osSemaphoreId_t osSemaphoreNew (uint32_t max_count, uint32_t initial_count, const osSemaphoreAttr_t *attr) {
 8008d8e:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8008d90:	4604      	mov	r4, r0
 8008d92:	460e      	mov	r6, r1
 8008d94:	4615      	mov	r5, r2
  SemaphoreHandle_t hSemaphore;
  int32_t mem;

  hSemaphore = NULL;

  if ((IRQ_Context() == 0U) && (max_count > 0U) && (initial_count <= max_count)) {
 8008d96:	f7ff ff49 	bl	8008c2c <IRQ_Context>
 8008d9a:	b940      	cbnz	r0, 8008dae <osSemaphoreNew+0x20>
 8008d9c:	b13c      	cbz	r4, 8008dae <osSemaphoreNew+0x20>
 8008d9e:	42b4      	cmp	r4, r6
 8008da0:	d305      	bcc.n	8008dae <osSemaphoreNew+0x20>
    mem = -1;

    if (attr != NULL) {
 8008da2:	b155      	cbz	r5, 8008dba <osSemaphoreNew+0x2c>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticSemaphore_t))) {
 8008da4:	e9d5 3202 	ldrd	r3, r2, [r5, #8]
 8008da8:	b12b      	cbz	r3, 8008db6 <osSemaphoreNew+0x28>
 8008daa:	2a4f      	cmp	r2, #79	@ 0x4f
 8008dac:	d825      	bhi.n	8008dfa <osSemaphoreNew+0x6c>
  hSemaphore = NULL;
 8008dae:	2400      	movs	r4, #0
    }
  }

  /* Return semaphore ID */
  return ((osSemaphoreId_t)hSemaphore);
}
 8008db0:	4620      	mov	r0, r4
 8008db2:	b002      	add	sp, #8
 8008db4:	bd70      	pop	{r4, r5, r6, pc}
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U)) {
 8008db6:	2a00      	cmp	r2, #0
 8008db8:	d1f9      	bne.n	8008dae <osSemaphoreNew+0x20>
      if (max_count == 1U) {
 8008dba:	2c01      	cmp	r4, #1
 8008dbc:	d008      	beq.n	8008dd0 <osSemaphoreNew+0x42>
            hSemaphore = xSemaphoreCreateCounting (max_count, initial_count);
 8008dbe:	4620      	mov	r0, r4
 8008dc0:	4631      	mov	r1, r6
 8008dc2:	f000 fc14 	bl	80095ee <xQueueCreateCountingSemaphore>
      if (hSemaphore != NULL) {
 8008dc6:	4604      	mov	r4, r0
 8008dc8:	2800      	cmp	r0, #0
 8008dca:	d0f0      	beq.n	8008dae <osSemaphoreNew+0x20>
        if ((attr != NULL) && (attr->name != NULL)) {
 8008dcc:	b975      	cbnz	r5, 8008dec <osSemaphoreNew+0x5e>
 8008dce:	e7ef      	b.n	8008db0 <osSemaphoreNew+0x22>
            hSemaphore = xSemaphoreCreateBinary();
 8008dd0:	2203      	movs	r2, #3
 8008dd2:	2100      	movs	r1, #0
 8008dd4:	2001      	movs	r0, #1
 8008dd6:	f000 fbcd 	bl	8009574 <xQueueGenericCreate>
 8008dda:	e017      	b.n	8008e0c <osSemaphoreNew+0x7e>
            hSemaphore = xSemaphoreCreateCountingStatic (max_count, initial_count, (StaticSemaphore_t *)attr->cb_mem);
 8008ddc:	4620      	mov	r0, r4
 8008dde:	461a      	mov	r2, r3
 8008de0:	4631      	mov	r1, r6
 8008de2:	f000 fbf1 	bl	80095c8 <xQueueCreateCountingSemaphoreStatic>
      if (hSemaphore != NULL) {
 8008de6:	4604      	mov	r4, r0
 8008de8:	2800      	cmp	r0, #0
 8008dea:	d0e0      	beq.n	8008dae <osSemaphoreNew+0x20>
        if ((attr != NULL) && (attr->name != NULL)) {
 8008dec:	6829      	ldr	r1, [r5, #0]
 8008dee:	2900      	cmp	r1, #0
 8008df0:	d0de      	beq.n	8008db0 <osSemaphoreNew+0x22>
          vQueueAddToRegistry (hSemaphore, attr->name);
 8008df2:	4620      	mov	r0, r4
 8008df4:	f000 fe68 	bl	8009ac8 <vQueueAddToRegistry>
 8008df8:	e7da      	b.n	8008db0 <osSemaphoreNew+0x22>
      if (max_count == 1U) {
 8008dfa:	2c01      	cmp	r4, #1
 8008dfc:	d1ee      	bne.n	8008ddc <osSemaphoreNew+0x4e>
            hSemaphore = xSemaphoreCreateBinaryStatic ((StaticSemaphore_t *)attr->cb_mem);
 8008dfe:	2203      	movs	r2, #3
 8008e00:	4601      	mov	r1, r0
 8008e02:	9200      	str	r2, [sp, #0]
 8008e04:	4602      	mov	r2, r0
 8008e06:	4620      	mov	r0, r4
 8008e08:	f000 fb89 	bl	800951e <xQueueGenericCreateStatic>
            hSemaphore = xSemaphoreCreateBinary();
 8008e0c:	4604      	mov	r4, r0
        if ((hSemaphore != NULL) && (initial_count != 0U)) {
 8008e0e:	2800      	cmp	r0, #0
 8008e10:	d0cd      	beq.n	8008dae <osSemaphoreNew+0x20>
 8008e12:	2e00      	cmp	r6, #0
 8008e14:	d0da      	beq.n	8008dcc <osSemaphoreNew+0x3e>
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
 8008e16:	2300      	movs	r3, #0
 8008e18:	461a      	mov	r2, r3
 8008e1a:	4619      	mov	r1, r3
 8008e1c:	f000 fbf6 	bl	800960c <xQueueGenericSend>
 8008e20:	2801      	cmp	r0, #1
 8008e22:	d0d3      	beq.n	8008dcc <osSemaphoreNew+0x3e>
            vSemaphoreDelete (hSemaphore);
 8008e24:	4620      	mov	r0, r4
 8008e26:	f000 fe8d 	bl	8009b44 <vQueueDelete>
      if (hSemaphore != NULL) {
 8008e2a:	e7c0      	b.n	8008dae <osSemaphoreNew+0x20>

08008e2c <osSemaphoreAcquire>:

/*
  Acquire a Semaphore token or timeout if no tokens are available.
*/
osStatus_t osSemaphoreAcquire (osSemaphoreId_t semaphore_id, uint32_t timeout) {
 8008e2c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8008e2e:	460c      	mov	r4, r1
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 8008e30:	4605      	mov	r5, r0
 8008e32:	b918      	cbnz	r0, 8008e3c <osSemaphoreAcquire+0x10>
    stat = osErrorParameter;
 8008e34:	f06f 0003 	mvn.w	r0, #3
    }
  }

  /* Return execution status */
  return (stat);
}
 8008e38:	b003      	add	sp, #12
 8008e3a:	bd30      	pop	{r4, r5, pc}
  else if (IRQ_Context() != 0U) {
 8008e3c:	f7ff fef6 	bl	8008c2c <IRQ_Context>
 8008e40:	b1b8      	cbz	r0, 8008e72 <osSemaphoreAcquire+0x46>
    if (timeout != 0U) {
 8008e42:	2c00      	cmp	r4, #0
 8008e44:	d1f6      	bne.n	8008e34 <osSemaphoreAcquire+0x8>
      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 8008e46:	4621      	mov	r1, r4
 8008e48:	4628      	mov	r0, r5
 8008e4a:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 8008e4c:	9401      	str	r4, [sp, #4]
      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 8008e4e:	f000 fdfd 	bl	8009a4c <xQueueReceiveFromISR>
 8008e52:	2801      	cmp	r0, #1
 8008e54:	d002      	beq.n	8008e5c <osSemaphoreAcquire+0x30>
        stat = osErrorResource;
 8008e56:	f06f 0002 	mvn.w	r0, #2
 8008e5a:	e7ed      	b.n	8008e38 <osSemaphoreAcquire+0xc>
        portYIELD_FROM_ISR (yield);
 8008e5c:	9b01      	ldr	r3, [sp, #4]
 8008e5e:	b90b      	cbnz	r3, 8008e64 <osSemaphoreAcquire+0x38>
  stat = osOK;
 8008e60:	2000      	movs	r0, #0
 8008e62:	e7e9      	b.n	8008e38 <osSemaphoreAcquire+0xc>
        portYIELD_FROM_ISR (yield);
 8008e64:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8008e68:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8008e6c:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8008e70:	e7f6      	b.n	8008e60 <osSemaphoreAcquire+0x34>
    if (xSemaphoreTake (hSemaphore, (TickType_t)timeout) != pdPASS) {
 8008e72:	4621      	mov	r1, r4
 8008e74:	4628      	mov	r0, r5
 8008e76:	f000 fd54 	bl	8009922 <xQueueSemaphoreTake>
 8008e7a:	2801      	cmp	r0, #1
 8008e7c:	d0f0      	beq.n	8008e60 <osSemaphoreAcquire+0x34>
      if (timeout != 0U) {
 8008e7e:	2c00      	cmp	r4, #0
 8008e80:	d0e9      	beq.n	8008e56 <osSemaphoreAcquire+0x2a>
        stat = osErrorTimeout;
 8008e82:	f06f 0001 	mvn.w	r0, #1
  return (stat);
 8008e86:	e7d7      	b.n	8008e38 <osSemaphoreAcquire+0xc>

08008e88 <osSemaphoreRelease>:

/*
  Release a Semaphore token up to the initial maximum count.
*/
osStatus_t osSemaphoreRelease (osSemaphoreId_t semaphore_id) {
 8008e88:	b513      	push	{r0, r1, r4, lr}
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 8008e8a:	4604      	mov	r4, r0
 8008e8c:	b308      	cbz	r0, 8008ed2 <osSemaphoreRelease+0x4a>
    stat = osErrorParameter;
  }
  else if (IRQ_Context() != 0U) {
 8008e8e:	f7ff fecd 	bl	8008c2c <IRQ_Context>
 8008e92:	4603      	mov	r3, r0
 8008e94:	b1a8      	cbz	r0, 8008ec2 <osSemaphoreRelease+0x3a>
    yield = pdFALSE;
 8008e96:	2300      	movs	r3, #0

    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 8008e98:	4620      	mov	r0, r4
 8008e9a:	a901      	add	r1, sp, #4
    yield = pdFALSE;
 8008e9c:	9301      	str	r3, [sp, #4]
    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 8008e9e:	f000 fc87 	bl	80097b0 <xQueueGiveFromISR>
 8008ea2:	2801      	cmp	r0, #1
 8008ea4:	d003      	beq.n	8008eae <osSemaphoreRelease+0x26>
      portYIELD_FROM_ISR (yield);
    }
  }
  else {
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
      stat = osErrorResource;
 8008ea6:	f06f 0002 	mvn.w	r0, #2
    }
  }

  /* Return execution status */
  return (stat);
}
 8008eaa:	b002      	add	sp, #8
 8008eac:	bd10      	pop	{r4, pc}
      portYIELD_FROM_ISR (yield);
 8008eae:	9b01      	ldr	r3, [sp, #4]
 8008eb0:	b12b      	cbz	r3, 8008ebe <osSemaphoreRelease+0x36>
 8008eb2:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8008eb6:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8008eba:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
  stat = osOK;
 8008ebe:	2000      	movs	r0, #0
 8008ec0:	e7f3      	b.n	8008eaa <osSemaphoreRelease+0x22>
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
 8008ec2:	4602      	mov	r2, r0
 8008ec4:	4601      	mov	r1, r0
 8008ec6:	4620      	mov	r0, r4
 8008ec8:	f000 fba0 	bl	800960c <xQueueGenericSend>
 8008ecc:	2801      	cmp	r0, #1
 8008ece:	d0f6      	beq.n	8008ebe <osSemaphoreRelease+0x36>
 8008ed0:	e7e9      	b.n	8008ea6 <osSemaphoreRelease+0x1e>
    stat = osErrorParameter;
 8008ed2:	f06f 0003 	mvn.w	r0, #3
  return (stat);
 8008ed6:	e7e8      	b.n	8008eaa <osSemaphoreRelease+0x22>

08008ed8 <osMessageQueueNew>:

  Limitations:
  - The memory for control block and and message data must be provided in the
    osThreadAttr_t structure in order to allocate object statically.
*/
osMessageQueueId_t osMessageQueueNew (uint32_t msg_count, uint32_t msg_size, const osMessageQueueAttr_t *attr) {
 8008ed8:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8008eda:	4605      	mov	r5, r0
 8008edc:	460e      	mov	r6, r1
 8008ede:	4614      	mov	r4, r2
  QueueHandle_t hQueue;
  int32_t mem;

  hQueue = NULL;

  if ((IRQ_Context() == 0U) && (msg_count > 0U) && (msg_size > 0U)) {
 8008ee0:	f7ff fea4 	bl	8008c2c <IRQ_Context>
 8008ee4:	b118      	cbz	r0, 8008eee <osMessageQueueNew+0x16>
  hQueue = NULL;
 8008ee6:	2500      	movs	r5, #0

  }

  /* Return message queue ID */
  return ((osMessageQueueId_t)hQueue);
}
 8008ee8:	4628      	mov	r0, r5
 8008eea:	b003      	add	sp, #12
 8008eec:	bdf0      	pop	{r4, r5, r6, r7, pc}
  if ((IRQ_Context() == 0U) && (msg_count > 0U) && (msg_size > 0U)) {
 8008eee:	2d00      	cmp	r5, #0
 8008ef0:	d0f9      	beq.n	8008ee6 <osMessageQueueNew+0xe>
 8008ef2:	2e00      	cmp	r6, #0
 8008ef4:	d0f7      	beq.n	8008ee6 <osMessageQueueNew+0xe>
    if (attr != NULL) {
 8008ef6:	b31c      	cbz	r4, 8008f40 <osMessageQueueNew+0x68>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 8008ef8:	e9d4 3202 	ldrd	r3, r2, [r4, #8]
 8008efc:	b1c3      	cbz	r3, 8008f30 <osMessageQueueNew+0x58>
 8008efe:	2a4f      	cmp	r2, #79	@ 0x4f
 8008f00:	d9f1      	bls.n	8008ee6 <osMessageQueueNew+0xe>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 8008f02:	6922      	ldr	r2, [r4, #16]
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 8008f04:	2a00      	cmp	r2, #0
 8008f06:	d0ee      	beq.n	8008ee6 <osMessageQueueNew+0xe>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 8008f08:	fb06 f105 	mul.w	r1, r6, r5
 8008f0c:	6967      	ldr	r7, [r4, #20]
 8008f0e:	428f      	cmp	r7, r1
 8008f10:	d3e9      	bcc.n	8008ee6 <osMessageQueueNew+0xe>
        hQueue = xQueueCreateStatic (msg_count, msg_size, attr->mq_mem, attr->cb_mem);
 8008f12:	9000      	str	r0, [sp, #0]
 8008f14:	4631      	mov	r1, r6
 8008f16:	4628      	mov	r0, r5
 8008f18:	f000 fb01 	bl	800951e <xQueueGenericCreateStatic>
    if (hQueue != NULL) {
 8008f1c:	4605      	mov	r5, r0
 8008f1e:	2800      	cmp	r0, #0
 8008f20:	d0e1      	beq.n	8008ee6 <osMessageQueueNew+0xe>
      if ((attr != NULL) && (attr->name != NULL)) {
 8008f22:	6821      	ldr	r1, [r4, #0]
 8008f24:	2900      	cmp	r1, #0
 8008f26:	d0df      	beq.n	8008ee8 <osMessageQueueNew+0x10>
        vQueueAddToRegistry (hQueue, attr->name);
 8008f28:	4628      	mov	r0, r5
 8008f2a:	f000 fdcd 	bl	8009ac8 <vQueueAddToRegistry>
 8008f2e:	e7db      	b.n	8008ee8 <osMessageQueueNew+0x10>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) &&
 8008f30:	2a00      	cmp	r2, #0
 8008f32:	d1d8      	bne.n	8008ee6 <osMessageQueueNew+0xe>
 8008f34:	6923      	ldr	r3, [r4, #16]
 8008f36:	2b00      	cmp	r3, #0
 8008f38:	d1d5      	bne.n	8008ee6 <osMessageQueueNew+0xe>
            (attr->mq_mem == NULL) && (attr->mq_size == 0U)) {
 8008f3a:	6963      	ldr	r3, [r4, #20]
 8008f3c:	2b00      	cmp	r3, #0
 8008f3e:	d1d2      	bne.n	8008ee6 <osMessageQueueNew+0xe>
          hQueue = xQueueCreate (msg_count, msg_size);
 8008f40:	4628      	mov	r0, r5
 8008f42:	2200      	movs	r2, #0
 8008f44:	4631      	mov	r1, r6
 8008f46:	f000 fb15 	bl	8009574 <xQueueGenericCreate>
    if (hQueue != NULL) {
 8008f4a:	4605      	mov	r5, r0
 8008f4c:	2800      	cmp	r0, #0
 8008f4e:	d0ca      	beq.n	8008ee6 <osMessageQueueNew+0xe>
      if ((attr != NULL) && (attr->name != NULL)) {
 8008f50:	2c00      	cmp	r4, #0
 8008f52:	d1e6      	bne.n	8008f22 <osMessageQueueNew+0x4a>
 8008f54:	e7c8      	b.n	8008ee8 <osMessageQueueNew+0x10>

08008f56 <osMessageQueuePut>:
  Put a Message into a Queue or timeout if Queue is full.

  Limitations:
  - Message priority is ignored
*/
osStatus_t osMessageQueuePut (osMessageQueueId_t mq_id, const void *msg_ptr, uint8_t msg_prio, uint32_t timeout) {
 8008f56:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8008f58:	461c      	mov	r4, r3
 8008f5a:	4605      	mov	r5, r0
 8008f5c:	460e      	mov	r6, r1

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IRQ_Context() != 0U) {
 8008f5e:	f7ff fe65 	bl	8008c2c <IRQ_Context>
 8008f62:	4603      	mov	r3, r0
 8008f64:	b1d0      	cbz	r0, 8008f9c <osMessageQueuePut+0x46>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 8008f66:	b33d      	cbz	r5, 8008fb8 <osMessageQueuePut+0x62>
 8008f68:	b336      	cbz	r6, 8008fb8 <osMessageQueuePut+0x62>
 8008f6a:	bb2c      	cbnz	r4, 8008fb8 <osMessageQueuePut+0x62>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 8008f6c:	4623      	mov	r3, r4
 8008f6e:	4631      	mov	r1, r6
 8008f70:	4628      	mov	r0, r5
 8008f72:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 8008f74:	9401      	str	r4, [sp, #4]
      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 8008f76:	f000 fbd2 	bl	800971e <xQueueGenericSendFromISR>
 8008f7a:	2801      	cmp	r0, #1
 8008f7c:	d003      	beq.n	8008f86 <osMessageQueuePut+0x30>
        stat = osErrorResource;
 8008f7e:	f06f 0002 	mvn.w	r0, #2
    }
  }

  /* Return execution status */
  return (stat);
}
 8008f82:	b002      	add	sp, #8
 8008f84:	bd70      	pop	{r4, r5, r6, pc}
        portYIELD_FROM_ISR (yield);
 8008f86:	9b01      	ldr	r3, [sp, #4]
 8008f88:	b90b      	cbnz	r3, 8008f8e <osMessageQueuePut+0x38>
  stat = osOK;
 8008f8a:	2000      	movs	r0, #0
 8008f8c:	e7f9      	b.n	8008f82 <osMessageQueuePut+0x2c>
        portYIELD_FROM_ISR (yield);
 8008f8e:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8008f92:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8008f96:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8008f9a:	e7f6      	b.n	8008f8a <osMessageQueuePut+0x34>
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 8008f9c:	b165      	cbz	r5, 8008fb8 <osMessageQueuePut+0x62>
 8008f9e:	b15e      	cbz	r6, 8008fb8 <osMessageQueuePut+0x62>
      if (xQueueSendToBack (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 8008fa0:	4622      	mov	r2, r4
 8008fa2:	4631      	mov	r1, r6
 8008fa4:	4628      	mov	r0, r5
 8008fa6:	f000 fb31 	bl	800960c <xQueueGenericSend>
 8008faa:	2801      	cmp	r0, #1
 8008fac:	d0ed      	beq.n	8008f8a <osMessageQueuePut+0x34>
        if (timeout != 0U) {
 8008fae:	2c00      	cmp	r4, #0
 8008fb0:	d0e5      	beq.n	8008f7e <osMessageQueuePut+0x28>
          stat = osErrorTimeout;
 8008fb2:	f06f 0001 	mvn.w	r0, #1
 8008fb6:	e7e4      	b.n	8008f82 <osMessageQueuePut+0x2c>
      stat = osErrorParameter;
 8008fb8:	f06f 0003 	mvn.w	r0, #3
  return (stat);
 8008fbc:	e7e1      	b.n	8008f82 <osMessageQueuePut+0x2c>

08008fbe <osMessageQueueGet>:
  Get a Message from a Queue or timeout if Queue is empty.

  Limitations:
  - Message priority is ignored
*/
osStatus_t osMessageQueueGet (osMessageQueueId_t mq_id, void *msg_ptr, uint8_t *msg_prio, uint32_t timeout) {
 8008fbe:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8008fc0:	4605      	mov	r5, r0
 8008fc2:	460e      	mov	r6, r1
 8008fc4:	461c      	mov	r4, r3

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IRQ_Context() != 0U) {
 8008fc6:	f7ff fe31 	bl	8008c2c <IRQ_Context>
 8008fca:	b1c8      	cbz	r0, 8009000 <osMessageQueueGet+0x42>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 8008fcc:	b335      	cbz	r5, 800901c <osMessageQueueGet+0x5e>
 8008fce:	b32e      	cbz	r6, 800901c <osMessageQueueGet+0x5e>
 8008fd0:	bb24      	cbnz	r4, 800901c <osMessageQueueGet+0x5e>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 8008fd2:	4631      	mov	r1, r6
 8008fd4:	4628      	mov	r0, r5
 8008fd6:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 8008fd8:	9401      	str	r4, [sp, #4]
      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 8008fda:	f000 fd37 	bl	8009a4c <xQueueReceiveFromISR>
 8008fde:	2801      	cmp	r0, #1
 8008fe0:	d003      	beq.n	8008fea <osMessageQueueGet+0x2c>
        stat = osErrorResource;
 8008fe2:	f06f 0002 	mvn.w	r0, #2
    }
  }

  /* Return execution status */
  return (stat);
}
 8008fe6:	b002      	add	sp, #8
 8008fe8:	bd70      	pop	{r4, r5, r6, pc}
        portYIELD_FROM_ISR (yield);
 8008fea:	9b01      	ldr	r3, [sp, #4]
 8008fec:	b90b      	cbnz	r3, 8008ff2 <osMessageQueueGet+0x34>
  stat = osOK;
 8008fee:	2000      	movs	r0, #0
 8008ff0:	e7f9      	b.n	8008fe6 <osMessageQueueGet+0x28>
        portYIELD_FROM_ISR (yield);
 8008ff2:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8008ff6:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8008ffa:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8008ffe:	e7f6      	b.n	8008fee <osMessageQueueGet+0x30>
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 8009000:	b165      	cbz	r5, 800901c <osMessageQueueGet+0x5e>
 8009002:	b15e      	cbz	r6, 800901c <osMessageQueueGet+0x5e>
      if (xQueueReceive (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 8009004:	4622      	mov	r2, r4
 8009006:	4631      	mov	r1, r6
 8009008:	4628      	mov	r0, r5
 800900a:	f000 fc0e 	bl	800982a <xQueueReceive>
 800900e:	2801      	cmp	r0, #1
 8009010:	d0ed      	beq.n	8008fee <osMessageQueueGet+0x30>
        if (timeout != 0U) {
 8009012:	2c00      	cmp	r4, #0
 8009014:	d0e5      	beq.n	8008fe2 <osMessageQueueGet+0x24>
          stat = osErrorTimeout;
 8009016:	f06f 0001 	mvn.w	r0, #1
 800901a:	e7e4      	b.n	8008fe6 <osMessageQueueGet+0x28>
      stat = osErrorParameter;
 800901c:	f06f 0003 	mvn.w	r0, #3
  return (stat);
 8009020:	e7e1      	b.n	8008fe6 <osMessageQueueGet+0x28>
	...

08009024 <vApplicationGetIdleTaskMemory>:
__WEAK void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
  /* Idle task control block and stack */
  static StaticTask_t Idle_TCB;
  static StackType_t  Idle_Stack[configMINIMAL_STACK_SIZE];

  *ppxIdleTaskTCBBuffer   = &Idle_TCB;
 8009024:	4b03      	ldr	r3, [pc, #12]	@ (8009034 <vApplicationGetIdleTaskMemory+0x10>)
 8009026:	6003      	str	r3, [r0, #0]
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
 8009028:	4b03      	ldr	r3, [pc, #12]	@ (8009038 <vApplicationGetIdleTaskMemory+0x14>)
 800902a:	600b      	str	r3, [r1, #0]
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
 800902c:	2380      	movs	r3, #128	@ 0x80
 800902e:	6013      	str	r3, [r2, #0]
}
 8009030:	4770      	bx	lr
 8009032:	bf00      	nop
 8009034:	2006f12c 	.word	0x2006f12c
 8009038:	2006ef2c 	.word	0x2006ef2c

0800903c <vApplicationGetTimerTaskMemory>:
__WEAK void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
  /* Timer task control block and stack */
  static StaticTask_t Timer_TCB;
  static StackType_t  Timer_Stack[configTIMER_TASK_STACK_DEPTH];

  *ppxTimerTaskTCBBuffer   = &Timer_TCB;
 800903c:	4b03      	ldr	r3, [pc, #12]	@ (800904c <vApplicationGetTimerTaskMemory+0x10>)
 800903e:	6003      	str	r3, [r0, #0]
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
 8009040:	4b03      	ldr	r3, [pc, #12]	@ (8009050 <vApplicationGetTimerTaskMemory+0x14>)
 8009042:	600b      	str	r3, [r1, #0]
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
 8009044:	f44f 7380 	mov.w	r3, #256	@ 0x100
 8009048:	6013      	str	r3, [r2, #0]
}
 800904a:	4770      	bx	lr
 800904c:	2006eecc 	.word	0x2006eecc
 8009050:	2006eacc 	.word	0x2006eacc

08009054 <vListInitialise>:
     * as the only list entry. */
    pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd ); /*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */

    /* The list end value is the highest possible value in the list to
     * ensure it remains at the end of the list. */
    pxList->xListEnd.xItemValue = portMAX_DELAY;
 8009054:	f04f 32ff 	mov.w	r2, #4294967295
    pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd ); /*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 8009058:	f100 0308 	add.w	r3, r0, #8

    /* The list end next and previous pointers point to itself so we know
     * when the list is empty. */
    pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );     /*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 800905c:	e9c0 2302 	strd	r2, r3, [r0, #8]
    pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd ); /*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 8009060:	6043      	str	r3, [r0, #4]
    pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd ); /*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 8009062:	6103      	str	r3, [r0, #16]

    pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
 8009064:	2300      	movs	r3, #0
 8009066:	6003      	str	r3, [r0, #0]

    /* Write known values into the list if
     * configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
    listSET_LIST_INTEGRITY_CHECK_1_VALUE( pxList );
    listSET_LIST_INTEGRITY_CHECK_2_VALUE( pxList );
}
 8009068:	4770      	bx	lr

0800906a <vListInitialiseItem>:
/*-----------------------------------------------------------*/

void vListInitialiseItem( ListItem_t * const pxItem )
{
    /* Make sure the list item is not recorded as being on a list. */
    pxItem->pxContainer = NULL;
 800906a:	2300      	movs	r3, #0
 800906c:	6103      	str	r3, [r0, #16]

    /* Write known values into the list item if
     * configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
    listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
    listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
}
 800906e:	4770      	bx	lr

08009070 <vListInsert>:
}
/*-----------------------------------------------------------*/

void vListInsert( List_t * const pxList,
                  ListItem_t * const pxNewListItem )
{
 8009070:	b530      	push	{r4, r5, lr}
    ListItem_t * pxIterator;
    const TickType_t xValueOfInsertion = pxNewListItem->xItemValue;
 8009072:	680c      	ldr	r4, [r1, #0]
     * new list item should be placed after it.  This ensures that TCBs which are
     * stored in ready lists (all of which have the same xItemValue value) get a
     * share of the CPU.  However, if the xItemValue is the same as the back marker
     * the iteration loop below will not end.  Therefore the value is checked
     * first, and the algorithm slightly modified if necessary. */
    if( xValueOfInsertion == portMAX_DELAY )
 8009074:	1c63      	adds	r3, r4, #1
 8009076:	d10a      	bne.n	800908e <vListInsert+0x1e>
    {
        pxIterator = pxList->xListEnd.pxPrevious;
 8009078:	6903      	ldr	r3, [r0, #16]
            /* There is nothing to do here, just iterating to the wanted
             * insertion position. */
        }
    }

    pxNewListItem->pxNext = pxIterator->pxNext;
 800907a:	685a      	ldr	r2, [r3, #4]
 800907c:	604a      	str	r2, [r1, #4]
    pxNewListItem->pxNext->pxPrevious = pxNewListItem;
 800907e:	6091      	str	r1, [r2, #8]
    pxNewListItem->pxPrevious = pxIterator;
 8009080:	608b      	str	r3, [r1, #8]
    pxIterator->pxNext = pxNewListItem;
 8009082:	6059      	str	r1, [r3, #4]

    /* Remember which list the item is in.  This allows fast removal of the
     * item later. */
    pxNewListItem->pxContainer = pxList;

    ( pxList->uxNumberOfItems )++;
 8009084:	6803      	ldr	r3, [r0, #0]
    pxNewListItem->pxContainer = pxList;
 8009086:	6108      	str	r0, [r1, #16]
    ( pxList->uxNumberOfItems )++;
 8009088:	3301      	adds	r3, #1
 800908a:	6003      	str	r3, [r0, #0]
}
 800908c:	bd30      	pop	{r4, r5, pc}
        for( pxIterator = ( ListItem_t * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <= xValueOfInsertion; pxIterator = pxIterator->pxNext ) /*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. *//*lint !e440 The iterator moves to a different value, not xValueOfInsertion. */
 800908e:	f100 0208 	add.w	r2, r0, #8
 8009092:	4613      	mov	r3, r2
 8009094:	6852      	ldr	r2, [r2, #4]
 8009096:	6815      	ldr	r5, [r2, #0]
 8009098:	42a5      	cmp	r5, r4
 800909a:	d9fa      	bls.n	8009092 <vListInsert+0x22>
 800909c:	e7ed      	b.n	800907a <vListInsert+0xa>

0800909e <uxListRemove>:

UBaseType_t uxListRemove( ListItem_t * const pxItemToRemove )
{
/* The list item knows which list it is in.  Obtain the list from the list
 * item. */
    List_t * const pxList = pxItemToRemove->pxContainer;
 800909e:	6903      	ldr	r3, [r0, #16]

    pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 80090a0:	e9d0 1201 	ldrd	r1, r2, [r0, #4]
 80090a4:	608a      	str	r2, [r1, #8]
    pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
 80090a6:	6051      	str	r1, [r2, #4]

    /* Only used during decision coverage testing. */
    mtCOVERAGE_TEST_DELAY();

    /* Make sure the index is left pointing to a valid item. */
    if( pxList->pxIndex == pxItemToRemove )
 80090a8:	6859      	ldr	r1, [r3, #4]
 80090aa:	4281      	cmp	r1, r0
    {
        pxList->pxIndex = pxItemToRemove->pxPrevious;
 80090ac:	bf08      	it	eq
 80090ae:	605a      	streq	r2, [r3, #4]
    else
    {
        mtCOVERAGE_TEST_MARKER();
    }

    pxItemToRemove->pxContainer = NULL;
 80090b0:	2200      	movs	r2, #0
 80090b2:	6102      	str	r2, [r0, #16]
    ( pxList->uxNumberOfItems )--;
 80090b4:	681a      	ldr	r2, [r3, #0]
 80090b6:	3a01      	subs	r2, #1
 80090b8:	601a      	str	r2, [r3, #0]

    return pxList->uxNumberOfItems;
 80090ba:	6818      	ldr	r0, [r3, #0]
}
 80090bc:	4770      	bx	lr
	...

080090c0 <prvTaskExitError>:
}
/*-----------------------------------------------------------*/

static void prvTaskExitError( void )
{
    volatile uint32_t ulDummy = 0UL;
 80090c0:	2300      	movs	r3, #0
{
 80090c2:	b507      	push	{r0, r1, r2, lr}
    volatile uint32_t ulDummy = 0UL;
 80090c4:	9301      	str	r3, [sp, #4]
    /* A function that implements a task must not exit or attempt to return to
     * its caller as there is nothing to return to. If a task wants to exit it
     * should instead call vTaskDelete( NULL ). Artificially force an assert()
     * to be triggered if configASSERT() is defined, then stop here so
     * application writers can catch the error. */
    configASSERT( ulCriticalNesting == ~0UL );
 80090c6:	4b07      	ldr	r3, [pc, #28]	@ (80090e4 <prvTaskExitError+0x24>)
 80090c8:	681b      	ldr	r3, [r3, #0]
 80090ca:	3301      	adds	r3, #1
 80090cc:	d002      	beq.n	80090d4 <prvTaskExitError+0x14>
 80090ce:	f000 f901 	bl	80092d4 <ulSetInterruptMask>
 80090d2:	e7fe      	b.n	80090d2 <prvTaskExitError+0x12>
    portDISABLE_INTERRUPTS();
 80090d4:	f000 f8fe 	bl	80092d4 <ulSetInterruptMask>

    while( ulDummy == 0 )
 80090d8:	9b01      	ldr	r3, [sp, #4]
 80090da:	2b00      	cmp	r3, #0
 80090dc:	d0fc      	beq.n	80090d8 <prvTaskExitError+0x18>
         * warnings about code appearing after this function is called - making
         * ulDummy volatile makes the compiler think the function could return
         * and therefore not output an 'unreachable code' warning for code that
         * appears after it. */
    }
}
 80090de:	b003      	add	sp, #12
 80090e0:	f85d fb04 	ldr.w	pc, [sp], #4
 80090e4:	20000058 	.word	0x20000058

080090e8 <vPortSetupTimerInterrupt>:
    portNVIC_SYSTICK_CTRL_REG = 0UL;
 80090e8:	f04f 22e0 	mov.w	r2, #3758153728	@ 0xe000e000
 80090ec:	2300      	movs	r3, #0
    portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 80090ee:	f44f 717a 	mov.w	r1, #1000	@ 0x3e8
    portNVIC_SYSTICK_CTRL_REG = 0UL;
 80090f2:	6113      	str	r3, [r2, #16]
    portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
 80090f4:	6193      	str	r3, [r2, #24]
    portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 80090f6:	4b04      	ldr	r3, [pc, #16]	@ (8009108 <vPortSetupTimerInterrupt+0x20>)
 80090f8:	681b      	ldr	r3, [r3, #0]
 80090fa:	fbb3 f3f1 	udiv	r3, r3, r1
 80090fe:	3b01      	subs	r3, #1
 8009100:	6153      	str	r3, [r2, #20]
    portNVIC_SYSTICK_CTRL_REG = portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT;
 8009102:	2307      	movs	r3, #7
 8009104:	6113      	str	r3, [r2, #16]
}
 8009106:	4770      	bx	lr
 8009108:	2000004c 	.word	0x2000004c

0800910c <vPortYield>:
/*-----------------------------------------------------------*/

void vPortYield( void ) /* PRIVILEGED_FUNCTION */
{
    /* Set a PendSV to request a context switch. */
    portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
 800910c:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8009110:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8009114:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04

    /* Barriers are normally not required but do ensure the code is
     * completely within the specified behaviour for the architecture. */
    __asm volatile ( "dsb" ::: "memory" );
 8009118:	f3bf 8f4f 	dsb	sy
    __asm volatile ( "isb" );
 800911c:	f3bf 8f6f 	isb	sy
}
 8009120:	4770      	bx	lr
	...

08009124 <vPortEnterCritical>:
/*-----------------------------------------------------------*/

void vPortEnterCritical( void ) /* PRIVILEGED_FUNCTION */
{
 8009124:	b508      	push	{r3, lr}
    portDISABLE_INTERRUPTS();
 8009126:	f000 f8d5 	bl	80092d4 <ulSetInterruptMask>
    ulCriticalNesting++;
 800912a:	4a04      	ldr	r2, [pc, #16]	@ (800913c <vPortEnterCritical+0x18>)
 800912c:	6813      	ldr	r3, [r2, #0]
 800912e:	3301      	adds	r3, #1
 8009130:	6013      	str	r3, [r2, #0]

    /* Barriers are normally not required but do ensure the code is
     * completely within the specified behaviour for the architecture. */
    __asm volatile ( "dsb" ::: "memory" );
 8009132:	f3bf 8f4f 	dsb	sy
    __asm volatile ( "isb" );
 8009136:	f3bf 8f6f 	isb	sy
}
 800913a:	bd08      	pop	{r3, pc}
 800913c:	20000058 	.word	0x20000058

08009140 <vPortExitCritical>:
/*-----------------------------------------------------------*/

void vPortExitCritical( void ) /* PRIVILEGED_FUNCTION */
{
 8009140:	b508      	push	{r3, lr}
    configASSERT( ulCriticalNesting );
 8009142:	4b08      	ldr	r3, [pc, #32]	@ (8009164 <vPortExitCritical+0x24>)
 8009144:	681a      	ldr	r2, [r3, #0]
 8009146:	b912      	cbnz	r2, 800914e <vPortExitCritical+0xe>
 8009148:	f000 f8c4 	bl	80092d4 <ulSetInterruptMask>
 800914c:	e7fe      	b.n	800914c <vPortExitCritical+0xc>
    ulCriticalNesting--;
 800914e:	681a      	ldr	r2, [r3, #0]
 8009150:	3a01      	subs	r2, #1
 8009152:	601a      	str	r2, [r3, #0]

    if( ulCriticalNesting == 0 )
 8009154:	6818      	ldr	r0, [r3, #0]
 8009156:	b918      	cbnz	r0, 8009160 <vPortExitCritical+0x20>
    {
        portENABLE_INTERRUPTS();
    }
}
 8009158:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        portENABLE_INTERRUPTS();
 800915c:	f000 b8c5 	b.w	80092ea <vClearInterruptMask>
}
 8009160:	bd08      	pop	{r3, pc}
 8009162:	bf00      	nop
 8009164:	20000058 	.word	0x20000058

08009168 <xPortSysTickHandler>:
/*-----------------------------------------------------------*/

void SysTick_Handler( void ) /* PRIVILEGED_FUNCTION */
{
 8009168:	b510      	push	{r4, lr}
    uint32_t ulPreviousMask;

    ulPreviousMask = portSET_INTERRUPT_MASK_FROM_ISR();
 800916a:	f000 f8b3 	bl	80092d4 <ulSetInterruptMask>
 800916e:	4604      	mov	r4, r0
    {
        /* Increment the RTOS tick. */
        if( xTaskIncrementTick() != pdFALSE )
 8009170:	f000 fee2 	bl	8009f38 <xTaskIncrementTick>
 8009174:	b128      	cbz	r0, 8009182 <xPortSysTickHandler+0x1a>
        {
            /* Pend a context switch. */
            portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
 8009176:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800917a:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800917e:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
        }
    }
    portCLEAR_INTERRUPT_MASK_FROM_ISR( ulPreviousMask );
 8009182:	4620      	mov	r0, r4
}
 8009184:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    portCLEAR_INTERRUPT_MASK_FROM_ISR( ulPreviousMask );
 8009188:	f000 b8af 	b.w	80092ea <vClearInterruptMask>

0800918c <vPortSVCHandler_C>:
/*-----------------------------------------------------------*/

void vPortSVCHandler_C( uint32_t * pulCallerStackAddress ) /* PRIVILEGED_FUNCTION portDONT_DISCARD */
{
 800918c:	b508      	push	{r3, lr}
    uint8_t ucSVCNumber;

    /* Register are stored on the stack in the following order - R0, R1, R2, R3,
     * R12, LR, PC, xPSR. */
    ulPC = pulCallerStackAddress[ 6 ];
    ucSVCNumber = ( ( uint8_t * ) ulPC )[ -2 ];
 800918e:	6983      	ldr	r3, [r0, #24]

    switch( ucSVCNumber )
 8009190:	f813 3c02 	ldrb.w	r3, [r3, #-2]
 8009194:	2b02      	cmp	r3, #2
 8009196:	d111      	bne.n	80091bc <vPortSVCHandler_C+0x30>
        *( portCPACR ) |= ( ( portCPACR_CP10_VALUE << portCPACR_CP10_POS ) |
 8009198:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800919c:	f8d3 2d88 	ldr.w	r2, [r3, #3464]	@ 0xd88
 80091a0:	f442 0270 	orr.w	r2, r2, #15728640	@ 0xf00000
 80091a4:	f8c3 2d88 	str.w	r2, [r3, #3464]	@ 0xd88
        *( portFPCCR ) |= ( portFPCCR_ASPEN_MASK | portFPCCR_LSPEN_MASK );
 80091a8:	f8d3 2f34 	ldr.w	r2, [r3, #3892]	@ 0xf34
 80091ac:	f042 4240 	orr.w	r2, r2, #3221225472	@ 0xc0000000
 80091b0:	f8c3 2f34 	str.w	r2, [r3, #3892]	@ 0xf34

        default:
            /* Incorrect SVC call. */
            configASSERT( pdFALSE );
    }
}
 80091b4:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
            vRestoreContextOfFirstTask();
 80091b8:	f000 b85a 	b.w	8009270 <vRestoreContextOfFirstTask>
            configASSERT( pdFALSE );
 80091bc:	f000 f88a 	bl	80092d4 <ulSetInterruptMask>
 80091c0:	e7fe      	b.n	80091c0 <vPortSVCHandler_C+0x34>
	...

080091c4 <pxPortInitialiseStack>:
                                         StackType_t * pxEndOfStack,
                                         TaskFunction_t pxCode,
                                         void * pvParameters ) /* PRIVILEGED_FUNCTION */
#endif /* configENABLE_MPU */
/* *INDENT-ON* */
{
 80091c4:	b510      	push	{r4, lr}
            #endif /* configENABLE_TRUSTZONE */
        }
    #else /* portPRELOAD_REGISTERS */
        {
            pxTopOfStack--;                                          /* Offset added to account for the way the MCU uses the stack on entry/exit of interrupts. */
            *pxTopOfStack = portINITIAL_XPSR;                        /* xPSR */
 80091c6:	f04f 7480 	mov.w	r4, #16777216	@ 0x1000000
            pxTopOfStack--;
            *pxTopOfStack = ( StackType_t ) pxCode;                  /* PC */
 80091ca:	e940 2402 	strd	r2, r4, [r0, #-8]
            pxTopOfStack--;
            *pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS; /* LR */
 80091ce:	4a18      	ldr	r2, [pc, #96]	@ (8009230 <pxPortInitialiseStack+0x6c>)
            pxTopOfStack--;
            *pxTopOfStack = ( StackType_t ) 0x12121212UL;            /* R12 */
            pxTopOfStack--;
            *pxTopOfStack = ( StackType_t ) 0x03030303UL;            /* R3 */
 80091d0:	f04f 3412 	mov.w	r4, #303174162	@ 0x12121212
            *pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS; /* LR */
 80091d4:	f840 2c0c 	str.w	r2, [r0, #-12]
            *pxTopOfStack = ( StackType_t ) 0x03030303UL;            /* R3 */
 80091d8:	f04f 3203 	mov.w	r2, #50529027	@ 0x3030303
            pxTopOfStack--;
            *pxTopOfStack = ( StackType_t ) 0x02020202UL;            /* R2 */
            pxTopOfStack--;
            *pxTopOfStack = ( StackType_t ) 0x01010101UL;            /* R1 */
 80091dc:	f04f 3c02 	mov.w	ip, #33686018	@ 0x2020202
            *pxTopOfStack = ( StackType_t ) 0x03030303UL;            /* R3 */
 80091e0:	e940 2405 	strd	r2, r4, [r0, #-20]
            *pxTopOfStack = ( StackType_t ) 0x01010101UL;            /* R1 */
 80091e4:	f04f 3201 	mov.w	r2, #16843009	@ 0x1010101
            pxTopOfStack--;
            *pxTopOfStack = ( StackType_t ) pvParameters;            /* R0 */
 80091e8:	f840 3c20 	str.w	r3, [r0, #-32]
            *pxTopOfStack = ( StackType_t ) 0x01010101UL;            /* R1 */
 80091ec:	e940 2c07 	strd	r2, ip, [r0, #-28]
            pxTopOfStack--;
            *pxTopOfStack = ( StackType_t ) 0x11111111UL;            /* R11 */
            pxTopOfStack--;
            *pxTopOfStack = ( StackType_t ) 0x10101010UL;            /* R10 */
 80091f0:	f04f 3310 	mov.w	r3, #269488144	@ 0x10101010
 80091f4:	f04f 3211 	mov.w	r2, #286331153	@ 0x11111111
            pxTopOfStack--;
            *pxTopOfStack = ( StackType_t ) 0x09090909UL;            /* R09 */
            pxTopOfStack--;
            *pxTopOfStack = ( StackType_t ) 0x08080808UL;            /* R08 */
 80091f8:	f04f 3409 	mov.w	r4, #151587081	@ 0x9090909
            *pxTopOfStack = ( StackType_t ) 0x10101010UL;            /* R10 */
 80091fc:	e940 320a 	strd	r3, r2, [r0, #-40]	@ 0x28
            *pxTopOfStack = ( StackType_t ) 0x08080808UL;            /* R08 */
 8009200:	f04f 3308 	mov.w	r3, #134744072	@ 0x8080808
            pxTopOfStack--;
            *pxTopOfStack = ( StackType_t ) 0x07070707UL;            /* R07 */
            pxTopOfStack--;
            *pxTopOfStack = ( StackType_t ) 0x06060606UL;            /* R06 */
 8009204:	f04f 3c07 	mov.w	ip, #117901063	@ 0x7070707
            *pxTopOfStack = ( StackType_t ) 0x08080808UL;            /* R08 */
 8009208:	e940 340c 	strd	r3, r4, [r0, #-48]	@ 0x30
            *pxTopOfStack = ( StackType_t ) 0x06060606UL;            /* R06 */
 800920c:	f04f 3306 	mov.w	r3, #101058054	@ 0x6060606
            pxTopOfStack--;
            *pxTopOfStack = ( StackType_t ) 0x05050505UL;            /* R05 */
            pxTopOfStack--;
            *pxTopOfStack = ( StackType_t ) 0x04040404UL;            /* R04 */
 8009210:	f04f 3205 	mov.w	r2, #84215045	@ 0x5050505
            *pxTopOfStack = ( StackType_t ) 0x06060606UL;            /* R06 */
 8009214:	e940 3c0e 	strd	r3, ip, [r0, #-56]	@ 0x38
            *pxTopOfStack = ( StackType_t ) 0x04040404UL;            /* R04 */
 8009218:	f04f 3304 	mov.w	r3, #67372036	@ 0x4040404
 800921c:	e940 3210 	strd	r3, r2, [r0, #-64]	@ 0x40
            pxTopOfStack--;
            *pxTopOfStack = portINITIAL_EXC_RETURN;                  /* EXC_RETURN */
 8009220:	f06f 0343 	mvn.w	r3, #67	@ 0x43
 8009224:	f840 3c44 	str.w	r3, [r0, #-68]
                    }
                }
            #endif /* configENABLE_MPU */

            pxTopOfStack--;
            *pxTopOfStack = ( StackType_t ) pxEndOfStack; /* Slot used to hold this task's PSPLIM value. */
 8009228:	f840 1d48 	str.w	r1, [r0, #-72]!
            #endif /* configENABLE_TRUSTZONE */
        }
    #endif /* portPRELOAD_REGISTERS */

    return pxTopOfStack;
}
 800922c:	bd10      	pop	{r4, pc}
 800922e:	bf00      	nop
 8009230:	080090c1 	.word	0x080090c1

08009234 <xPortStartScheduler>:
/*-----------------------------------------------------------*/

BaseType_t xPortStartScheduler( void ) /* PRIVILEGED_FUNCTION */
{
    /* Make PendSV, CallSV and SysTick the same priority as the kernel. */
    portNVIC_SHPR3_REG |= portNVIC_PENDSV_PRI;
 8009234:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
{
 8009238:	b510      	push	{r4, lr}
    /* Start the timer that generates the tick ISR. Interrupts are disabled
     * here already. */
    vPortSetupTimerInterrupt();

    /* Initialize the critical nesting count ready for the first task. */
    ulCriticalNesting = 0;
 800923a:	2400      	movs	r4, #0
    portNVIC_SHPR3_REG |= portNVIC_PENDSV_PRI;
 800923c:	f8d3 2d20 	ldr.w	r2, [r3, #3360]	@ 0xd20
 8009240:	f442 027f 	orr.w	r2, r2, #16711680	@ 0xff0000
 8009244:	f8c3 2d20 	str.w	r2, [r3, #3360]	@ 0xd20
    portNVIC_SHPR3_REG |= portNVIC_SYSTICK_PRI;
 8009248:	f8d3 2d20 	ldr.w	r2, [r3, #3360]	@ 0xd20
 800924c:	f042 427f 	orr.w	r2, r2, #4278190080	@ 0xff000000
 8009250:	f8c3 2d20 	str.w	r2, [r3, #3360]	@ 0xd20
    vPortSetupTimerInterrupt();
 8009254:	f7ff ff48 	bl	80090e8 <vPortSetupTimerInterrupt>
    ulCriticalNesting = 0;
 8009258:	4b04      	ldr	r3, [pc, #16]	@ (800926c <xPortStartScheduler+0x38>)
 800925a:	601c      	str	r4, [r3, #0]

    /* Start the first task. */
    vStartFirstTask();
 800925c:	f000 f828 	bl	80092b0 <vStartFirstTask>
     * exit error function to prevent compiler warnings about a static function
     * not being called in the case that the application writer overrides this
     * functionality by defining configTASK_RETURN_ADDRESS. Call
     * vTaskSwitchContext() so link time optimization does not remove the
     * symbol. */
    vTaskSwitchContext();
 8009260:	f001 f820 	bl	800a2a4 <vTaskSwitchContext>
    prvTaskExitError();
 8009264:	f7ff ff2c 	bl	80090c0 <prvTaskExitError>

    /* Should not get here. */
    return 0;
}
 8009268:	4620      	mov	r0, r4
 800926a:	bd10      	pop	{r4, pc}
 800926c:	20000058 	.word	0x20000058

08009270 <vRestoreContextOfFirstTask>:
 * header files. */
#undef MPU_WRAPPERS_INCLUDED_FROM_API_FILE

void vRestoreContextOfFirstTask( void ) /* __attribute__ (( naked )) PRIVILEGED_FUNCTION */
{
    __asm volatile
 8009270:	4a0b      	ldr	r2, [pc, #44]	@ (80092a0 <pxCurrentTCBConst2>)
 8009272:	6811      	ldr	r1, [r2, #0]
 8009274:	6808      	ldr	r0, [r1, #0]
 8009276:	c806      	ldmia	r0!, {r1, r2}
 8009278:	f381 880b 	msr	PSPLIM, r1
 800927c:	2102      	movs	r1, #2
 800927e:	f381 8814 	msr	CONTROL, r1
 8009282:	3020      	adds	r0, #32
 8009284:	f380 8809 	msr	PSP, r0
 8009288:	f3bf 8f6f 	isb	sy
 800928c:	f04f 0000 	mov.w	r0, #0
 8009290:	f380 8811 	msr	BASEPRI, r0
 8009294:	4710      	bx	r2
 8009296:	bf00      	nop
 8009298:	f3af 8000 	nop.w
 800929c:	f3af 8000 	nop.w

080092a0 <pxCurrentTCBConst2>:
 80092a0:	2006f6c8 	.word	0x2006f6c8
	...

080092b0 <vStartFirstTask>:
}
/*-----------------------------------------------------------*/

void vStartFirstTask( void ) /* __attribute__ (( naked )) PRIVILEGED_FUNCTION */
{
    __asm volatile
 80092b0:	4807      	ldr	r0, [pc, #28]	@ (80092d0 <xVTORConst>)
 80092b2:	6800      	ldr	r0, [r0, #0]
 80092b4:	6800      	ldr	r0, [r0, #0]
 80092b6:	f380 8808 	msr	MSP, r0
 80092ba:	b662      	cpsie	i
 80092bc:	b661      	cpsie	f
 80092be:	f3bf 8f4f 	dsb	sy
 80092c2:	f3bf 8f6f 	isb	sy
 80092c6:	df02      	svc	2
 80092c8:	bf00      	nop
 80092ca:	bf00      	nop
 80092cc:	f3af 8000 	nop.w

080092d0 <xVTORConst>:
 80092d0:	e000ed08 	.word	0xe000ed08

080092d4 <ulSetInterruptMask>:
}
/*-----------------------------------------------------------*/

uint32_t ulSetInterruptMask( void ) /* __attribute__(( naked )) PRIVILEGED_FUNCTION */
{
    __asm volatile
 80092d4:	f3ef 8011 	mrs	r0, BASEPRI
 80092d8:	f04f 0150 	mov.w	r1, #80	@ 0x50
 80092dc:	f381 8811 	msr	BASEPRI, r1
 80092e0:	f3bf 8f4f 	dsb	sy
 80092e4:	f3bf 8f6f 	isb	sy
 80092e8:	4770      	bx	lr

080092ea <vClearInterruptMask>:
}
/*-----------------------------------------------------------*/

void vClearInterruptMask( __attribute__( ( unused ) ) uint32_t ulMask ) /* __attribute__(( naked )) PRIVILEGED_FUNCTION */
{
    __asm volatile
 80092ea:	f380 8811 	msr	BASEPRI, r0
 80092ee:	f3bf 8f4f 	dsb	sy
 80092f2:	f3bf 8f6f 	isb	sy
 80092f6:	4770      	bx	lr
	...

08009300 <PendSV_Handler>:
}
/*-----------------------------------------------------------*/

void PendSV_Handler( void ) /* __attribute__ (( naked )) PRIVILEGED_FUNCTION */
{
    __asm volatile
 8009300:	f3ef 8009 	mrs	r0, PSP
 8009304:	f01e 0f10 	tst.w	lr, #16
 8009308:	bf08      	it	eq
 800930a:	ed20 8a10 	vstmdbeq	r0!, {s16-s31}
 800930e:	f3ef 820b 	mrs	r2, PSPLIM
 8009312:	4673      	mov	r3, lr
 8009314:	e920 0ffc 	stmdb	r0!, {r2, r3, r4, r5, r6, r7, r8, r9, sl, fp}
 8009318:	4a11      	ldr	r2, [pc, #68]	@ (8009360 <pxCurrentTCBConst>)
 800931a:	6811      	ldr	r1, [r2, #0]
 800931c:	6008      	str	r0, [r1, #0]
 800931e:	f04f 0050 	mov.w	r0, #80	@ 0x50
 8009322:	f380 8811 	msr	BASEPRI, r0
 8009326:	f3bf 8f4f 	dsb	sy
 800932a:	f3bf 8f6f 	isb	sy
 800932e:	f000 ffb9 	bl	800a2a4 <vTaskSwitchContext>
 8009332:	f04f 0000 	mov.w	r0, #0
 8009336:	f380 8811 	msr	BASEPRI, r0
 800933a:	4a09      	ldr	r2, [pc, #36]	@ (8009360 <pxCurrentTCBConst>)
 800933c:	6811      	ldr	r1, [r2, #0]
 800933e:	6808      	ldr	r0, [r1, #0]
 8009340:	e8b0 0ffc 	ldmia.w	r0!, {r2, r3, r4, r5, r6, r7, r8, r9, sl, fp}
 8009344:	f013 0f10 	tst.w	r3, #16
 8009348:	bf08      	it	eq
 800934a:	ecb0 8a10 	vldmiaeq	r0!, {s16-s31}
 800934e:	f382 880b 	msr	PSPLIM, r2
 8009352:	f380 8809 	msr	PSP, r0
 8009356:	4718      	bx	r3
 8009358:	f3af 8000 	nop.w
 800935c:	f3af 8000 	nop.w

08009360 <pxCurrentTCBConst>:
 8009360:	2006f6c8 	.word	0x2006f6c8
	...

08009370 <SVC_Handler>:
}
/*-----------------------------------------------------------*/

void SVC_Handler( void ) /* __attribute__ (( naked )) PRIVILEGED_FUNCTION */
{
    __asm volatile
 8009370:	f01e 0f04 	tst.w	lr, #4
 8009374:	bf0c      	ite	eq
 8009376:	f3ef 8008 	mrseq	r0, MSP
 800937a:	f3ef 8009 	mrsne	r0, PSP
 800937e:	4904      	ldr	r1, [pc, #16]	@ (8009390 <svchandler_address_const>)
 8009380:	4708      	bx	r1
 8009382:	bf00      	nop
 8009384:	f3af 8000 	nop.w
 8009388:	f3af 8000 	nop.w
 800938c:	f3af 8000 	nop.w

08009390 <svchandler_address_const>:
 8009390:	0800918d 	.word	0x0800918d

08009394 <prvIsQueueEmpty>:
    taskEXIT_CRITICAL();
}
/*-----------------------------------------------------------*/

static BaseType_t prvIsQueueEmpty( const Queue_t * pxQueue )
{
 8009394:	b510      	push	{r4, lr}
 8009396:	4604      	mov	r4, r0
    BaseType_t xReturn;

    taskENTER_CRITICAL();
 8009398:	f7ff fec4 	bl	8009124 <vPortEnterCritical>
    {
        if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0 )
 800939c:	6ba4      	ldr	r4, [r4, #56]	@ 0x38
        else
        {
            xReturn = pdFALSE;
        }
    }
    taskEXIT_CRITICAL();
 800939e:	f7ff fecf 	bl	8009140 <vPortExitCritical>

    return xReturn;
}
 80093a2:	fab4 f084 	clz	r0, r4
 80093a6:	0940      	lsrs	r0, r0, #5
 80093a8:	bd10      	pop	{r4, pc}

080093aa <prvCopyDataToQueue>:
{
 80093aa:	b570      	push	{r4, r5, r6, lr}
 80093ac:	4616      	mov	r6, r2
    if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 80093ae:	6c02      	ldr	r2, [r0, #64]	@ 0x40
{
 80093b0:	4604      	mov	r4, r0
    uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 80093b2:	6b85      	ldr	r5, [r0, #56]	@ 0x38
    if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 80093b4:	b942      	cbnz	r2, 80093c8 <prvCopyDataToQueue+0x1e>
                if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 80093b6:	6806      	ldr	r6, [r0, #0]
 80093b8:	b99e      	cbnz	r6, 80093e2 <prvCopyDataToQueue+0x38>
                    xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
 80093ba:	6880      	ldr	r0, [r0, #8]
 80093bc:	f001 f8e2 	bl	800a584 <xTaskPriorityDisinherit>
                    pxQueue->u.xSemaphore.xMutexHolder = NULL;
 80093c0:	60a6      	str	r6, [r4, #8]
    pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 80093c2:	3501      	adds	r5, #1
 80093c4:	63a5      	str	r5, [r4, #56]	@ 0x38
}
 80093c6:	bd70      	pop	{r4, r5, r6, pc}
    else if( xPosition == queueSEND_TO_BACK )
 80093c8:	b96e      	cbnz	r6, 80093e6 <prvCopyDataToQueue+0x3c>
        ( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 80093ca:	6840      	ldr	r0, [r0, #4]
 80093cc:	f029 fcbd 	bl	8032d4a <memcpy>
        pxQueue->pcWriteTo += pxQueue->uxItemSize;                                                       /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 80093d0:	6863      	ldr	r3, [r4, #4]
 80093d2:	6c22      	ldr	r2, [r4, #64]	@ 0x40
 80093d4:	4413      	add	r3, r2
        if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail )                                             /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 80093d6:	68a2      	ldr	r2, [r4, #8]
        pxQueue->pcWriteTo += pxQueue->uxItemSize;                                                       /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 80093d8:	6063      	str	r3, [r4, #4]
        if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail )                                             /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 80093da:	4293      	cmp	r3, r2
            pxQueue->pcWriteTo = pxQueue->pcHead;
 80093dc:	bf24      	itt	cs
 80093de:	6823      	ldrcs	r3, [r4, #0]
 80093e0:	6063      	strcs	r3, [r4, #4]
    BaseType_t xReturn = pdFALSE;
 80093e2:	2000      	movs	r0, #0
 80093e4:	e7ed      	b.n	80093c2 <prvCopyDataToQueue+0x18>
        ( void ) memcpy( ( void * ) pxQueue->u.xQueue.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e9087 !e418 MISRA exception as the casts are only redundant for some ports.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes.  Assert checks null pointer only used when length is 0. */
 80093e6:	68c0      	ldr	r0, [r0, #12]
 80093e8:	f029 fcaf 	bl	8032d4a <memcpy>
        pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 80093ec:	6c22      	ldr	r2, [r4, #64]	@ 0x40
 80093ee:	68e3      	ldr	r3, [r4, #12]
 80093f0:	4251      	negs	r1, r2
 80093f2:	1a9b      	subs	r3, r3, r2
        if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 80093f4:	6822      	ldr	r2, [r4, #0]
        pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 80093f6:	60e3      	str	r3, [r4, #12]
        if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 80093f8:	4293      	cmp	r3, r2
            pxQueue->u.xQueue.pcReadFrom = ( pxQueue->u.xQueue.pcTail - pxQueue->uxItemSize );
 80093fa:	bf3e      	ittt	cc
 80093fc:	68a3      	ldrcc	r3, [r4, #8]
 80093fe:	185b      	addcc	r3, r3, r1
 8009400:	60e3      	strcc	r3, [r4, #12]
        if( xPosition == queueOVERWRITE )
 8009402:	2e02      	cmp	r6, #2
 8009404:	d1ed      	bne.n	80093e2 <prvCopyDataToQueue+0x38>
            if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 8009406:	b10d      	cbz	r5, 800940c <prvCopyDataToQueue+0x62>
                --uxMessagesWaiting;
 8009408:	3d01      	subs	r5, #1
 800940a:	e7ea      	b.n	80093e2 <prvCopyDataToQueue+0x38>
    BaseType_t xReturn = pdFALSE;
 800940c:	4628      	mov	r0, r5
 800940e:	e7d8      	b.n	80093c2 <prvCopyDataToQueue+0x18>

08009410 <prvCopyDataFromQueue>:
{
 8009410:	4603      	mov	r3, r0
    if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 8009412:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
{
 8009414:	4608      	mov	r0, r1
 8009416:	b410      	push	{r4}
    if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 8009418:	b16a      	cbz	r2, 8009436 <prvCopyDataFromQueue+0x26>
        pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize;           /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800941a:	68dc      	ldr	r4, [r3, #12]
        if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 800941c:	6899      	ldr	r1, [r3, #8]
        pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize;           /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800941e:	4414      	add	r4, r2
        if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 8009420:	428c      	cmp	r4, r1
            pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 8009422:	bf28      	it	cs
 8009424:	6819      	ldrcs	r1, [r3, #0]
        pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize;           /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8009426:	60dc      	str	r4, [r3, #12]
            pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 8009428:	bf28      	it	cs
 800942a:	60d9      	strcs	r1, [r3, #12]
        ( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800942c:	68d9      	ldr	r1, [r3, #12]
}
 800942e:	f85d 4b04 	ldr.w	r4, [sp], #4
        ( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 8009432:	f029 bc8a 	b.w	8032d4a <memcpy>
}
 8009436:	f85d 4b04 	ldr.w	r4, [sp], #4
 800943a:	4770      	bx	lr

0800943c <prvUnlockQueue>:
{
 800943c:	b570      	push	{r4, r5, r6, lr}
 800943e:	4604      	mov	r4, r0
    taskENTER_CRITICAL();
 8009440:	f7ff fe70 	bl	8009124 <vPortEnterCritical>
        int8_t cTxLock = pxQueue->cTxLock;
 8009444:	f894 5045 	ldrb.w	r5, [r4, #69]	@ 0x45
                        if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8009448:	f104 0624 	add.w	r6, r4, #36	@ 0x24
        int8_t cTxLock = pxQueue->cTxLock;
 800944c:	b26d      	sxtb	r5, r5
        while( cTxLock > queueLOCKED_UNMODIFIED )
 800944e:	2d00      	cmp	r5, #0
 8009450:	dc14      	bgt.n	800947c <prvUnlockQueue+0x40>
        pxQueue->cTxLock = queueUNLOCKED;
 8009452:	23ff      	movs	r3, #255	@ 0xff
 8009454:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
    taskEXIT_CRITICAL();
 8009458:	f7ff fe72 	bl	8009140 <vPortExitCritical>
    taskENTER_CRITICAL();
 800945c:	f7ff fe62 	bl	8009124 <vPortEnterCritical>
        int8_t cRxLock = pxQueue->cRxLock;
 8009460:	f894 5044 	ldrb.w	r5, [r4, #68]	@ 0x44
                if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8009464:	f104 0610 	add.w	r6, r4, #16
        int8_t cRxLock = pxQueue->cRxLock;
 8009468:	b26d      	sxtb	r5, r5
        while( cRxLock > queueLOCKED_UNMODIFIED )
 800946a:	2d00      	cmp	r5, #0
 800946c:	dc12      	bgt.n	8009494 <prvUnlockQueue+0x58>
        pxQueue->cRxLock = queueUNLOCKED;
 800946e:	23ff      	movs	r3, #255	@ 0xff
 8009470:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
}
 8009474:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    taskEXIT_CRITICAL();
 8009478:	f7ff be62 	b.w	8009140 <vPortExitCritical>
                    if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800947c:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 800947e:	2b00      	cmp	r3, #0
 8009480:	d0e7      	beq.n	8009452 <prvUnlockQueue+0x16>
                        if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8009482:	4630      	mov	r0, r6
 8009484:	f000 ff88 	bl	800a398 <xTaskRemoveFromEventList>
 8009488:	b108      	cbz	r0, 800948e <prvUnlockQueue+0x52>
                            vTaskMissedYield();
 800948a:	f001 f81f 	bl	800a4cc <vTaskMissedYield>
            --cTxLock;
 800948e:	3d01      	subs	r5, #1
 8009490:	b26d      	sxtb	r5, r5
 8009492:	e7dc      	b.n	800944e <prvUnlockQueue+0x12>
            if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8009494:	6923      	ldr	r3, [r4, #16]
 8009496:	2b00      	cmp	r3, #0
 8009498:	d0e9      	beq.n	800946e <prvUnlockQueue+0x32>
                if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800949a:	4630      	mov	r0, r6
 800949c:	f000 ff7c 	bl	800a398 <xTaskRemoveFromEventList>
 80094a0:	b108      	cbz	r0, 80094a6 <prvUnlockQueue+0x6a>
                    vTaskMissedYield();
 80094a2:	f001 f813 	bl	800a4cc <vTaskMissedYield>
                --cRxLock;
 80094a6:	3d01      	subs	r5, #1
 80094a8:	b26d      	sxtb	r5, r5
 80094aa:	e7de      	b.n	800946a <prvUnlockQueue+0x2e>

080094ac <xQueueGenericReset>:
{
 80094ac:	b570      	push	{r4, r5, r6, lr}
 80094ae:	460e      	mov	r6, r1
    configASSERT( pxQueue );
 80094b0:	4604      	mov	r4, r0
 80094b2:	b910      	cbnz	r0, 80094ba <xQueueGenericReset+0xe>
 80094b4:	f7ff ff0e 	bl	80092d4 <ulSetInterruptMask>
 80094b8:	e7fe      	b.n	80094b8 <xQueueGenericReset+0xc>
        ( pxQueue->uxLength >= 1U ) &&
 80094ba:	6bc5      	ldr	r5, [r0, #60]	@ 0x3c
    if( ( pxQueue != NULL ) &&
 80094bc:	b365      	cbz	r5, 8009518 <xQueueGenericReset+0x6c>
        ( ( SIZE_MAX / pxQueue->uxLength ) >= pxQueue->uxItemSize ) )
 80094be:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 80094c0:	fba3 3505 	umull	r3, r5, r3, r5
 80094c4:	bb45      	cbnz	r5, 8009518 <xQueueGenericReset+0x6c>
        taskENTER_CRITICAL();
 80094c6:	f7ff fe2d 	bl	8009124 <vPortEnterCritical>
            pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 80094ca:	e9d4 310f 	ldrd	r3, r1, [r4, #60]	@ 0x3c
 80094ce:	434b      	muls	r3, r1
 80094d0:	6822      	ldr	r2, [r4, #0]
            pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 80094d2:	63a5      	str	r5, [r4, #56]	@ 0x38
            pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 80094d4:	18d0      	adds	r0, r2, r3
            pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 80094d6:	1a5b      	subs	r3, r3, r1
            pxQueue->pcWriteTo = pxQueue->pcHead;
 80094d8:	6062      	str	r2, [r4, #4]
            pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 80094da:	441a      	add	r2, r3
            pxQueue->cRxLock = queueUNLOCKED;
 80094dc:	23ff      	movs	r3, #255	@ 0xff
            pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 80094de:	60a0      	str	r0, [r4, #8]
            pxQueue->cRxLock = queueUNLOCKED;
 80094e0:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
            pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 80094e4:	60e2      	str	r2, [r4, #12]
            pxQueue->cTxLock = queueUNLOCKED;
 80094e6:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
            if( xNewQueue == pdFALSE )
 80094ea:	b966      	cbnz	r6, 8009506 <xQueueGenericReset+0x5a>
                if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 80094ec:	6923      	ldr	r3, [r4, #16]
 80094ee:	b133      	cbz	r3, 80094fe <xQueueGenericReset+0x52>
                    if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 80094f0:	f104 0010 	add.w	r0, r4, #16
 80094f4:	f000 ff50 	bl	800a398 <xTaskRemoveFromEventList>
 80094f8:	b108      	cbz	r0, 80094fe <xQueueGenericReset+0x52>
                        queueYIELD_IF_USING_PREEMPTION();
 80094fa:	f7ff fe07 	bl	800910c <vPortYield>
        taskEXIT_CRITICAL();
 80094fe:	f7ff fe1f 	bl	8009140 <vPortExitCritical>
}
 8009502:	2001      	movs	r0, #1
 8009504:	bd70      	pop	{r4, r5, r6, pc}
                vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 8009506:	f104 0010 	add.w	r0, r4, #16
 800950a:	f7ff fda3 	bl	8009054 <vListInitialise>
                vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 800950e:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 8009512:	f7ff fd9f 	bl	8009054 <vListInitialise>
 8009516:	e7f2      	b.n	80094fe <xQueueGenericReset+0x52>
    configASSERT( xReturn != pdFAIL );
 8009518:	f7ff fedc 	bl	80092d4 <ulSetInterruptMask>
 800951c:	e7fe      	b.n	800951c <xQueueGenericReset+0x70>

0800951e <xQueueGenericCreateStatic>:
    {
 800951e:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8009520:	460d      	mov	r5, r1
        configASSERT( pxStaticQueue );
 8009522:	461c      	mov	r4, r3
 8009524:	b913      	cbnz	r3, 800952c <xQueueGenericCreateStatic+0xe>
 8009526:	f7ff fed5 	bl	80092d4 <ulSetInterruptMask>
 800952a:	e7fe      	b.n	800952a <xQueueGenericCreateStatic+0xc>
        if( ( uxQueueLength > ( UBaseType_t ) 0 ) &&
 800952c:	b108      	cbz	r0, 8009532 <xQueueGenericCreateStatic+0x14>
            ( pxStaticQueue != NULL ) &&
 800952e:	b11a      	cbz	r2, 8009538 <xQueueGenericCreateStatic+0x1a>
            ( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) ) &&
 8009530:	b921      	cbnz	r1, 800953c <xQueueGenericCreateStatic+0x1e>
            configASSERT( pxNewQueue );
 8009532:	f7ff fecf 	bl	80092d4 <ulSetInterruptMask>
 8009536:	e7fe      	b.n	8009536 <xQueueGenericCreateStatic+0x18>
            ( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) ) )
 8009538:	2900      	cmp	r1, #0
 800953a:	d1fa      	bne.n	8009532 <xQueueGenericCreateStatic+0x14>
                    volatile size_t xSize = sizeof( StaticQueue_t );
 800953c:	2350      	movs	r3, #80	@ 0x50
 800953e:	9301      	str	r3, [sp, #4]
                    configASSERT( xSize == sizeof( Queue_t ) ); /* LCOV_EXCL_BR_LINE */
 8009540:	9b01      	ldr	r3, [sp, #4]
 8009542:	2b50      	cmp	r3, #80	@ 0x50
 8009544:	d002      	beq.n	800954c <xQueueGenericCreateStatic+0x2e>
 8009546:	f7ff fec5 	bl	80092d4 <ulSetInterruptMask>
 800954a:	e7fe      	b.n	800954a <xQueueGenericCreateStatic+0x2c>
                    pxNewQueue->ucStaticallyAllocated = pdTRUE;
 800954c:	2101      	movs	r1, #1
        pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
 800954e:	2d00      	cmp	r5, #0
 8009550:	bf08      	it	eq
 8009552:	4622      	moveq	r2, r4
    pxNewQueue->uxItemSize = uxItemSize;
 8009554:	e9c4 050f 	strd	r0, r5, [r4, #60]	@ 0x3c
                    pxNewQueue->ucStaticallyAllocated = pdTRUE;
 8009558:	f884 1046 	strb.w	r1, [r4, #70]	@ 0x46
    ( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 800955c:	4620      	mov	r0, r4
 800955e:	6022      	str	r2, [r4, #0]
                    ( void ) xSize;                             /* Keeps lint quiet when configASSERT() is not defined. */
 8009560:	9b01      	ldr	r3, [sp, #4]
    ( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 8009562:	f7ff ffa3 	bl	80094ac <xQueueGenericReset>
    }
 8009566:	4620      	mov	r0, r4
            pxNewQueue->ucQueueType = ucQueueType;
 8009568:	f89d 3018 	ldrb.w	r3, [sp, #24]
 800956c:	f884 304c 	strb.w	r3, [r4, #76]	@ 0x4c
    }
 8009570:	b003      	add	sp, #12
 8009572:	bd30      	pop	{r4, r5, pc}

08009574 <xQueueGenericCreate>:
    {
 8009574:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8009578:	460d      	mov	r5, r1
 800957a:	4617      	mov	r7, r2
        if( ( uxQueueLength > ( UBaseType_t ) 0 ) &&
 800957c:	4606      	mov	r6, r0
 800957e:	b300      	cbz	r0, 80095c2 <xQueueGenericCreate+0x4e>
            ( ( SIZE_MAX / uxQueueLength ) >= uxItemSize ) &&
 8009580:	fba1 3800 	umull	r3, r8, r1, r0
 8009584:	f1b8 0f00 	cmp.w	r8, #0
 8009588:	d11b      	bne.n	80095c2 <xQueueGenericCreate+0x4e>
            ( ( SIZE_MAX - sizeof( Queue_t ) ) >= ( uxQueueLength * uxItemSize ) ) )
 800958a:	4348      	muls	r0, r1
            ( ( SIZE_MAX / uxQueueLength ) >= uxItemSize ) &&
 800958c:	f110 0f51 	cmn.w	r0, #81	@ 0x51
 8009590:	d817      	bhi.n	80095c2 <xQueueGenericCreate+0x4e>
            pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
 8009592:	3050      	adds	r0, #80	@ 0x50
 8009594:	f001 fa30 	bl	800a9f8 <pvPortMalloc>
            if( pxNewQueue != NULL )
 8009598:	4604      	mov	r4, r0
 800959a:	b168      	cbz	r0, 80095b8 <xQueueGenericCreate+0x44>
                        pxNewQueue->ucStaticallyAllocated = pdFALSE;
 800959c:	f880 8046 	strb.w	r8, [r0, #70]	@ 0x46
    if( uxItemSize == ( UBaseType_t ) 0 )
 80095a0:	b16d      	cbz	r5, 80095be <xQueueGenericCreate+0x4a>
                pucQueueStorage += sizeof( Queue_t ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 80095a2:	f100 0350 	add.w	r3, r0, #80	@ 0x50
    ( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 80095a6:	2101      	movs	r1, #1
 80095a8:	4620      	mov	r0, r4
    pxNewQueue->uxItemSize = uxItemSize;
 80095aa:	e9c4 650f 	strd	r6, r5, [r4, #60]	@ 0x3c
 80095ae:	6023      	str	r3, [r4, #0]
    ( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 80095b0:	f7ff ff7c 	bl	80094ac <xQueueGenericReset>
            pxNewQueue->ucQueueType = ucQueueType;
 80095b4:	f884 704c 	strb.w	r7, [r4, #76]	@ 0x4c
    }
 80095b8:	4620      	mov	r0, r4
 80095ba:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
 80095be:	4603      	mov	r3, r0
 80095c0:	e7f1      	b.n	80095a6 <xQueueGenericCreate+0x32>
            configASSERT( pxNewQueue );
 80095c2:	f7ff fe87 	bl	80092d4 <ulSetInterruptMask>
 80095c6:	e7fe      	b.n	80095c6 <xQueueGenericCreate+0x52>

080095c8 <xQueueCreateCountingSemaphoreStatic>:
    {
 80095c8:	b513      	push	{r0, r1, r4, lr}
 80095ca:	4613      	mov	r3, r2
 80095cc:	460c      	mov	r4, r1
        if( ( uxMaxCount != 0 ) &&
 80095ce:	b158      	cbz	r0, 80095e8 <xQueueCreateCountingSemaphoreStatic+0x20>
 80095d0:	4288      	cmp	r0, r1
 80095d2:	d309      	bcc.n	80095e8 <xQueueCreateCountingSemaphoreStatic+0x20>
            xHandle = xQueueGenericCreateStatic( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, NULL, pxStaticQueue, queueQUEUE_TYPE_COUNTING_SEMAPHORE );
 80095d4:	2202      	movs	r2, #2
 80095d6:	9200      	str	r2, [sp, #0]
 80095d8:	2200      	movs	r2, #0
 80095da:	4611      	mov	r1, r2
 80095dc:	f7ff ff9f 	bl	800951e <xQueueGenericCreateStatic>
            if( xHandle != NULL )
 80095e0:	b100      	cbz	r0, 80095e4 <xQueueCreateCountingSemaphoreStatic+0x1c>
                ( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 80095e2:	6384      	str	r4, [r0, #56]	@ 0x38
    }
 80095e4:	b002      	add	sp, #8
 80095e6:	bd10      	pop	{r4, pc}
            configASSERT( xHandle );
 80095e8:	f7ff fe74 	bl	80092d4 <ulSetInterruptMask>
 80095ec:	e7fe      	b.n	80095ec <xQueueCreateCountingSemaphoreStatic+0x24>

080095ee <xQueueCreateCountingSemaphore>:
    {
 80095ee:	b510      	push	{r4, lr}
 80095f0:	460c      	mov	r4, r1
        if( ( uxMaxCount != 0 ) &&
 80095f2:	b140      	cbz	r0, 8009606 <xQueueCreateCountingSemaphore+0x18>
 80095f4:	4288      	cmp	r0, r1
 80095f6:	d306      	bcc.n	8009606 <xQueueCreateCountingSemaphore+0x18>
            xHandle = xQueueGenericCreate( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, queueQUEUE_TYPE_COUNTING_SEMAPHORE );
 80095f8:	2202      	movs	r2, #2
 80095fa:	2100      	movs	r1, #0
 80095fc:	f7ff ffba 	bl	8009574 <xQueueGenericCreate>
            if( xHandle != NULL )
 8009600:	b100      	cbz	r0, 8009604 <xQueueCreateCountingSemaphore+0x16>
                ( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 8009602:	6384      	str	r4, [r0, #56]	@ 0x38
    }
 8009604:	bd10      	pop	{r4, pc}
            configASSERT( xHandle );
 8009606:	f7ff fe65 	bl	80092d4 <ulSetInterruptMask>
 800960a:	e7fe      	b.n	800960a <xQueueCreateCountingSemaphore+0x1c>

0800960c <xQueueGenericSend>:
{
 800960c:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8009610:	460f      	mov	r7, r1
 8009612:	461e      	mov	r6, r3
    configASSERT( pxQueue );
 8009614:	4604      	mov	r4, r0
{
 8009616:	9201      	str	r2, [sp, #4]
    configASSERT( pxQueue );
 8009618:	b910      	cbnz	r0, 8009620 <xQueueGenericSend+0x14>
 800961a:	f7ff fe5b 	bl	80092d4 <ulSetInterruptMask>
 800961e:	e7fe      	b.n	800961e <xQueueGenericSend+0x12>
    configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8009620:	b921      	cbnz	r1, 800962c <xQueueGenericSend+0x20>
 8009622:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 8009624:	b113      	cbz	r3, 800962c <xQueueGenericSend+0x20>
 8009626:	f7ff fe55 	bl	80092d4 <ulSetInterruptMask>
 800962a:	e7fe      	b.n	800962a <xQueueGenericSend+0x1e>
    configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 800962c:	2e02      	cmp	r6, #2
 800962e:	d105      	bne.n	800963c <xQueueGenericSend+0x30>
 8009630:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 8009632:	2b01      	cmp	r3, #1
 8009634:	d002      	beq.n	800963c <xQueueGenericSend+0x30>
 8009636:	f7ff fe4d 	bl	80092d4 <ulSetInterruptMask>
 800963a:	e7fe      	b.n	800963a <xQueueGenericSend+0x2e>
            configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800963c:	f000 ff4c 	bl	800a4d8 <xTaskGetSchedulerState>
 8009640:	4605      	mov	r5, r0
 8009642:	b1f0      	cbz	r0, 8009682 <xQueueGenericSend+0x76>
 8009644:	2500      	movs	r5, #0
        prvLockQueue( pxQueue );
 8009646:	f04f 0800 	mov.w	r8, #0
        taskENTER_CRITICAL();
 800964a:	f7ff fd6b 	bl	8009124 <vPortEnterCritical>
            if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 800964e:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
 8009650:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 8009652:	429a      	cmp	r2, r3
 8009654:	d301      	bcc.n	800965a <xQueueGenericSend+0x4e>
 8009656:	2e02      	cmp	r6, #2
 8009658:	d119      	bne.n	800968e <xQueueGenericSend+0x82>
                        xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 800965a:	4632      	mov	r2, r6
 800965c:	4639      	mov	r1, r7
 800965e:	4620      	mov	r0, r4
 8009660:	f7ff fea3 	bl	80093aa <prvCopyDataToQueue>
                        if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8009664:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8009666:	b11b      	cbz	r3, 8009670 <xQueueGenericSend+0x64>
                            if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8009668:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 800966c:	f000 fe94 	bl	800a398 <xTaskRemoveFromEventList>
 8009670:	b108      	cbz	r0, 8009676 <xQueueGenericSend+0x6a>
                                queueYIELD_IF_USING_PREEMPTION();
 8009672:	f7ff fd4b 	bl	800910c <vPortYield>
                taskEXIT_CRITICAL();
 8009676:	f7ff fd63 	bl	8009140 <vPortExitCritical>
                return pdPASS;
 800967a:	2001      	movs	r0, #1
}
 800967c:	b004      	add	sp, #16
 800967e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
            configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8009682:	9b01      	ldr	r3, [sp, #4]
 8009684:	2b00      	cmp	r3, #0
 8009686:	d0de      	beq.n	8009646 <xQueueGenericSend+0x3a>
 8009688:	f7ff fe24 	bl	80092d4 <ulSetInterruptMask>
 800968c:	e7fe      	b.n	800968c <xQueueGenericSend+0x80>
                if( xTicksToWait == ( TickType_t ) 0 )
 800968e:	9b01      	ldr	r3, [sp, #4]
 8009690:	b91b      	cbnz	r3, 800969a <xQueueGenericSend+0x8e>
                    taskEXIT_CRITICAL();
 8009692:	f7ff fd55 	bl	8009140 <vPortExitCritical>
                    return errQUEUE_FULL;
 8009696:	2000      	movs	r0, #0
 8009698:	e7f0      	b.n	800967c <xQueueGenericSend+0x70>
                else if( xEntryTimeSet == pdFALSE )
 800969a:	b915      	cbnz	r5, 80096a2 <xQueueGenericSend+0x96>
                    vTaskInternalSetTimeOutState( &xTimeOut );
 800969c:	a802      	add	r0, sp, #8
 800969e:	f000 fed9 	bl	800a454 <vTaskInternalSetTimeOutState>
        taskEXIT_CRITICAL();
 80096a2:	f7ff fd4d 	bl	8009140 <vPortExitCritical>
        vTaskSuspendAll();
 80096a6:	f000 fc39 	bl	8009f1c <vTaskSuspendAll>
        prvLockQueue( pxQueue );
 80096aa:	f7ff fd3b 	bl	8009124 <vPortEnterCritical>
 80096ae:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
 80096b2:	2bff      	cmp	r3, #255	@ 0xff
 80096b4:	bf08      	it	eq
 80096b6:	f884 8044 	strbeq.w	r8, [r4, #68]	@ 0x44
 80096ba:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
 80096be:	2bff      	cmp	r3, #255	@ 0xff
 80096c0:	bf08      	it	eq
 80096c2:	f884 8045 	strbeq.w	r8, [r4, #69]	@ 0x45
 80096c6:	f7ff fd3b 	bl	8009140 <vPortExitCritical>
        if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 80096ca:	a901      	add	r1, sp, #4
 80096cc:	a802      	add	r0, sp, #8
 80096ce:	f000 fecd 	bl	800a46c <xTaskCheckForTimeOut>
 80096d2:	b9f0      	cbnz	r0, 8009712 <xQueueGenericSend+0x106>

static BaseType_t prvIsQueueFull( const Queue_t * pxQueue )
{
    BaseType_t xReturn;

    taskENTER_CRITICAL();
 80096d4:	f7ff fd26 	bl	8009124 <vPortEnterCritical>
    {
        if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
 80096d8:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
 80096da:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 80096dc:	429a      	cmp	r2, r3
 80096de:	d10f      	bne.n	8009700 <xQueueGenericSend+0xf4>
        else
        {
            xReturn = pdFALSE;
        }
    }
    taskEXIT_CRITICAL();
 80096e0:	f7ff fd2e 	bl	8009140 <vPortExitCritical>
                vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 80096e4:	9901      	ldr	r1, [sp, #4]
 80096e6:	f104 0010 	add.w	r0, r4, #16
 80096ea:	f000 fe19 	bl	800a320 <vTaskPlaceOnEventList>
                prvUnlockQueue( pxQueue );
 80096ee:	4620      	mov	r0, r4
 80096f0:	f7ff fea4 	bl	800943c <prvUnlockQueue>
                if( xTaskResumeAll() == pdFALSE )
 80096f4:	f000 fcd0 	bl	800a098 <xTaskResumeAll>
 80096f8:	b948      	cbnz	r0, 800970e <xQueueGenericSend+0x102>
                    portYIELD_WITHIN_API();
 80096fa:	f7ff fd07 	bl	800910c <vPortYield>
 80096fe:	e006      	b.n	800970e <xQueueGenericSend+0x102>
    taskEXIT_CRITICAL();
 8009700:	f7ff fd1e 	bl	8009140 <vPortExitCritical>
                prvUnlockQueue( pxQueue );
 8009704:	4620      	mov	r0, r4
 8009706:	f7ff fe99 	bl	800943c <prvUnlockQueue>
                ( void ) xTaskResumeAll();
 800970a:	f000 fcc5 	bl	800a098 <xTaskResumeAll>
 800970e:	2501      	movs	r5, #1
 8009710:	e79b      	b.n	800964a <xQueueGenericSend+0x3e>
            prvUnlockQueue( pxQueue );
 8009712:	4620      	mov	r0, r4
 8009714:	f7ff fe92 	bl	800943c <prvUnlockQueue>
            ( void ) xTaskResumeAll();
 8009718:	f000 fcbe 	bl	800a098 <xTaskResumeAll>
            return errQUEUE_FULL;
 800971c:	e7bb      	b.n	8009696 <xQueueGenericSend+0x8a>

0800971e <xQueueGenericSendFromISR>:
{
 800971e:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8009722:	4689      	mov	r9, r1
 8009724:	4617      	mov	r7, r2
 8009726:	461e      	mov	r6, r3
    configASSERT( pxQueue );
 8009728:	4604      	mov	r4, r0
 800972a:	b910      	cbnz	r0, 8009732 <xQueueGenericSendFromISR+0x14>
 800972c:	f7ff fdd2 	bl	80092d4 <ulSetInterruptMask>
 8009730:	e7fe      	b.n	8009730 <xQueueGenericSendFromISR+0x12>
    configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8009732:	b921      	cbnz	r1, 800973e <xQueueGenericSendFromISR+0x20>
 8009734:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 8009736:	b113      	cbz	r3, 800973e <xQueueGenericSendFromISR+0x20>
 8009738:	f7ff fdcc 	bl	80092d4 <ulSetInterruptMask>
 800973c:	e7fe      	b.n	800973c <xQueueGenericSendFromISR+0x1e>
    configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 800973e:	2e02      	cmp	r6, #2
 8009740:	d105      	bne.n	800974e <xQueueGenericSendFromISR+0x30>
 8009742:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 8009744:	2b01      	cmp	r3, #1
 8009746:	d002      	beq.n	800974e <xQueueGenericSendFromISR+0x30>
 8009748:	f7ff fdc4 	bl	80092d4 <ulSetInterruptMask>
 800974c:	e7fe      	b.n	800974c <xQueueGenericSendFromISR+0x2e>
    uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
 800974e:	f7ff fdc1 	bl	80092d4 <ulSetInterruptMask>
        if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 8009752:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
 8009754:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
    uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
 8009756:	4680      	mov	r8, r0
        if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 8009758:	429a      	cmp	r2, r3
 800975a:	d301      	bcc.n	8009760 <xQueueGenericSendFromISR+0x42>
 800975c:	2e02      	cmp	r6, #2
 800975e:	d125      	bne.n	80097ac <xQueueGenericSendFromISR+0x8e>
            const int8_t cTxLock = pxQueue->cTxLock;
 8009760:	f894 5045 	ldrb.w	r5, [r4, #69]	@ 0x45
            ( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 8009764:	4632      	mov	r2, r6
 8009766:	4649      	mov	r1, r9
 8009768:	4620      	mov	r0, r4
            const int8_t cTxLock = pxQueue->cTxLock;
 800976a:	b26d      	sxtb	r5, r5
            const UBaseType_t uxPreviousMessagesWaiting = pxQueue->uxMessagesWaiting;
 800976c:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
            ( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 800976e:	f7ff fe1c 	bl	80093aa <prvCopyDataToQueue>
            if( cTxLock == queueUNLOCKED )
 8009772:	1c6b      	adds	r3, r5, #1
 8009774:	d110      	bne.n	8009798 <xQueueGenericSendFromISR+0x7a>
                        if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8009776:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8009778:	b13b      	cbz	r3, 800978a <xQueueGenericSendFromISR+0x6c>
                            if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800977a:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 800977e:	f000 fe0b 	bl	800a398 <xTaskRemoveFromEventList>
 8009782:	b110      	cbz	r0, 800978a <xQueueGenericSendFromISR+0x6c>
                                if( pxHigherPriorityTaskWoken != NULL )
 8009784:	b10f      	cbz	r7, 800978a <xQueueGenericSendFromISR+0x6c>
                                    *pxHigherPriorityTaskWoken = pdTRUE;
 8009786:	2301      	movs	r3, #1
 8009788:	603b      	str	r3, [r7, #0]
            xReturn = pdPASS;
 800978a:	2401      	movs	r4, #1
    portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
 800978c:	4640      	mov	r0, r8
 800978e:	f7ff fdac 	bl	80092ea <vClearInterruptMask>
}
 8009792:	4620      	mov	r0, r4
 8009794:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
                configASSERT( cTxLock != queueINT8_MAX );
 8009798:	2d7f      	cmp	r5, #127	@ 0x7f
 800979a:	d102      	bne.n	80097a2 <xQueueGenericSendFromISR+0x84>
 800979c:	f7ff fd9a 	bl	80092d4 <ulSetInterruptMask>
 80097a0:	e7fe      	b.n	80097a0 <xQueueGenericSendFromISR+0x82>
                pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 80097a2:	3501      	adds	r5, #1
 80097a4:	b26d      	sxtb	r5, r5
 80097a6:	f884 5045 	strb.w	r5, [r4, #69]	@ 0x45
 80097aa:	e7ee      	b.n	800978a <xQueueGenericSendFromISR+0x6c>
            xReturn = errQUEUE_FULL;
 80097ac:	2400      	movs	r4, #0
 80097ae:	e7ed      	b.n	800978c <xQueueGenericSendFromISR+0x6e>

080097b0 <xQueueGiveFromISR>:
{
 80097b0:	b570      	push	{r4, r5, r6, lr}
 80097b2:	460d      	mov	r5, r1
    configASSERT( pxQueue );
 80097b4:	4604      	mov	r4, r0
 80097b6:	b910      	cbnz	r0, 80097be <xQueueGiveFromISR+0xe>
 80097b8:	f7ff fd8c 	bl	80092d4 <ulSetInterruptMask>
 80097bc:	e7fe      	b.n	80097bc <xQueueGiveFromISR+0xc>
    configASSERT( pxQueue->uxItemSize == 0 );
 80097be:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 80097c0:	b113      	cbz	r3, 80097c8 <xQueueGiveFromISR+0x18>
 80097c2:	f7ff fd87 	bl	80092d4 <ulSetInterruptMask>
 80097c6:	e7fe      	b.n	80097c6 <xQueueGiveFromISR+0x16>
    configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
 80097c8:	6803      	ldr	r3, [r0, #0]
 80097ca:	b923      	cbnz	r3, 80097d6 <xQueueGiveFromISR+0x26>
 80097cc:	6883      	ldr	r3, [r0, #8]
 80097ce:	b113      	cbz	r3, 80097d6 <xQueueGiveFromISR+0x26>
 80097d0:	f7ff fd80 	bl	80092d4 <ulSetInterruptMask>
 80097d4:	e7fe      	b.n	80097d4 <xQueueGiveFromISR+0x24>
    uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
 80097d6:	f7ff fd7d 	bl	80092d4 <ulSetInterruptMask>
        const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 80097da:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
        if( uxMessagesWaiting < pxQueue->uxLength )
 80097dc:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
    uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
 80097de:	4606      	mov	r6, r0
        if( uxMessagesWaiting < pxQueue->uxLength )
 80097e0:	4293      	cmp	r3, r2
 80097e2:	d920      	bls.n	8009826 <xQueueGiveFromISR+0x76>
            const int8_t cTxLock = pxQueue->cTxLock;
 80097e4:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
            pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 80097e8:	3201      	adds	r2, #1
            if( cTxLock == queueUNLOCKED )
 80097ea:	29ff      	cmp	r1, #255	@ 0xff
            const int8_t cTxLock = pxQueue->cTxLock;
 80097ec:	b24b      	sxtb	r3, r1
            pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 80097ee:	63a2      	str	r2, [r4, #56]	@ 0x38
            if( cTxLock == queueUNLOCKED )
 80097f0:	d10f      	bne.n	8009812 <xQueueGiveFromISR+0x62>
                        if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 80097f2:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 80097f4:	b13b      	cbz	r3, 8009806 <xQueueGiveFromISR+0x56>
                            if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 80097f6:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 80097fa:	f000 fdcd 	bl	800a398 <xTaskRemoveFromEventList>
 80097fe:	b110      	cbz	r0, 8009806 <xQueueGiveFromISR+0x56>
                                if( pxHigherPriorityTaskWoken != NULL )
 8009800:	b10d      	cbz	r5, 8009806 <xQueueGiveFromISR+0x56>
                                    *pxHigherPriorityTaskWoken = pdTRUE;
 8009802:	2301      	movs	r3, #1
 8009804:	602b      	str	r3, [r5, #0]
            xReturn = pdPASS;
 8009806:	2401      	movs	r4, #1
    portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
 8009808:	4630      	mov	r0, r6
 800980a:	f7ff fd6e 	bl	80092ea <vClearInterruptMask>
}
 800980e:	4620      	mov	r0, r4
 8009810:	bd70      	pop	{r4, r5, r6, pc}
                configASSERT( cTxLock != queueINT8_MAX );
 8009812:	2b7f      	cmp	r3, #127	@ 0x7f
 8009814:	d102      	bne.n	800981c <xQueueGiveFromISR+0x6c>
 8009816:	f7ff fd5d 	bl	80092d4 <ulSetInterruptMask>
 800981a:	e7fe      	b.n	800981a <xQueueGiveFromISR+0x6a>
                pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 800981c:	3301      	adds	r3, #1
 800981e:	b25b      	sxtb	r3, r3
 8009820:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
 8009824:	e7ef      	b.n	8009806 <xQueueGiveFromISR+0x56>
            xReturn = errQUEUE_FULL;
 8009826:	2400      	movs	r4, #0
 8009828:	e7ee      	b.n	8009808 <xQueueGiveFromISR+0x58>

0800982a <xQueueReceive>:
{
 800982a:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 800982e:	460e      	mov	r6, r1
    configASSERT( ( pxQueue ) );
 8009830:	4604      	mov	r4, r0
{
 8009832:	9201      	str	r2, [sp, #4]
    configASSERT( ( pxQueue ) );
 8009834:	b910      	cbnz	r0, 800983c <xQueueReceive+0x12>
 8009836:	f7ff fd4d 	bl	80092d4 <ulSetInterruptMask>
 800983a:	e7fe      	b.n	800983a <xQueueReceive+0x10>
    configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800983c:	b921      	cbnz	r1, 8009848 <xQueueReceive+0x1e>
 800983e:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 8009840:	b113      	cbz	r3, 8009848 <xQueueReceive+0x1e>
 8009842:	f7ff fd47 	bl	80092d4 <ulSetInterruptMask>
 8009846:	e7fe      	b.n	8009846 <xQueueReceive+0x1c>
            configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8009848:	f000 fe46 	bl	800a4d8 <xTaskGetSchedulerState>
 800984c:	4605      	mov	r5, r0
 800984e:	b1d8      	cbz	r0, 8009888 <xQueueReceive+0x5e>
 8009850:	2500      	movs	r5, #0
        prvLockQueue( pxQueue );
 8009852:	f04f 0800 	mov.w	r8, #0
        taskENTER_CRITICAL();
 8009856:	f7ff fc65 	bl	8009124 <vPortEnterCritical>
            const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800985a:	6ba7      	ldr	r7, [r4, #56]	@ 0x38
            if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800985c:	b1d7      	cbz	r7, 8009894 <xQueueReceive+0x6a>
                prvCopyDataFromQueue( pxQueue, pvBuffer );
 800985e:	4631      	mov	r1, r6
 8009860:	4620      	mov	r0, r4
                pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 8009862:	3f01      	subs	r7, #1
                prvCopyDataFromQueue( pxQueue, pvBuffer );
 8009864:	f7ff fdd4 	bl	8009410 <prvCopyDataFromQueue>
                pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 8009868:	63a7      	str	r7, [r4, #56]	@ 0x38
                if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800986a:	6923      	ldr	r3, [r4, #16]
 800986c:	b133      	cbz	r3, 800987c <xQueueReceive+0x52>
                    if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800986e:	f104 0010 	add.w	r0, r4, #16
 8009872:	f000 fd91 	bl	800a398 <xTaskRemoveFromEventList>
 8009876:	b108      	cbz	r0, 800987c <xQueueReceive+0x52>
                        queueYIELD_IF_USING_PREEMPTION();
 8009878:	f7ff fc48 	bl	800910c <vPortYield>
                taskEXIT_CRITICAL();
 800987c:	f7ff fc60 	bl	8009140 <vPortExitCritical>
                return pdPASS;
 8009880:	2001      	movs	r0, #1
}
 8009882:	b004      	add	sp, #16
 8009884:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
            configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8009888:	9b01      	ldr	r3, [sp, #4]
 800988a:	2b00      	cmp	r3, #0
 800988c:	d0e1      	beq.n	8009852 <xQueueReceive+0x28>
 800988e:	f7ff fd21 	bl	80092d4 <ulSetInterruptMask>
 8009892:	e7fe      	b.n	8009892 <xQueueReceive+0x68>
                if( xTicksToWait == ( TickType_t ) 0 )
 8009894:	9b01      	ldr	r3, [sp, #4]
 8009896:	b91b      	cbnz	r3, 80098a0 <xQueueReceive+0x76>
                    taskEXIT_CRITICAL();
 8009898:	f7ff fc52 	bl	8009140 <vPortExitCritical>
                    return errQUEUE_EMPTY;
 800989c:	2000      	movs	r0, #0
 800989e:	e7f0      	b.n	8009882 <xQueueReceive+0x58>
                else if( xEntryTimeSet == pdFALSE )
 80098a0:	b915      	cbnz	r5, 80098a8 <xQueueReceive+0x7e>
                    vTaskInternalSetTimeOutState( &xTimeOut );
 80098a2:	a802      	add	r0, sp, #8
 80098a4:	f000 fdd6 	bl	800a454 <vTaskInternalSetTimeOutState>
        taskEXIT_CRITICAL();
 80098a8:	f7ff fc4a 	bl	8009140 <vPortExitCritical>
        vTaskSuspendAll();
 80098ac:	f000 fb36 	bl	8009f1c <vTaskSuspendAll>
        prvLockQueue( pxQueue );
 80098b0:	f7ff fc38 	bl	8009124 <vPortEnterCritical>
 80098b4:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
 80098b8:	2bff      	cmp	r3, #255	@ 0xff
 80098ba:	bf08      	it	eq
 80098bc:	f884 8044 	strbeq.w	r8, [r4, #68]	@ 0x44
 80098c0:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
 80098c4:	2bff      	cmp	r3, #255	@ 0xff
 80098c6:	bf08      	it	eq
 80098c8:	f884 8045 	strbeq.w	r8, [r4, #69]	@ 0x45
 80098cc:	f7ff fc38 	bl	8009140 <vPortExitCritical>
        if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 80098d0:	a901      	add	r1, sp, #4
 80098d2:	a802      	add	r0, sp, #8
 80098d4:	f000 fdca 	bl	800a46c <xTaskCheckForTimeOut>
 80098d8:	b9c0      	cbnz	r0, 800990c <xQueueReceive+0xe2>
            if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 80098da:	4620      	mov	r0, r4
 80098dc:	f7ff fd5a 	bl	8009394 <prvIsQueueEmpty>
 80098e0:	b170      	cbz	r0, 8009900 <xQueueReceive+0xd6>
                vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 80098e2:	9901      	ldr	r1, [sp, #4]
 80098e4:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 80098e8:	f000 fd1a 	bl	800a320 <vTaskPlaceOnEventList>
                prvUnlockQueue( pxQueue );
 80098ec:	4620      	mov	r0, r4
 80098ee:	f7ff fda5 	bl	800943c <prvUnlockQueue>
                if( xTaskResumeAll() == pdFALSE )
 80098f2:	f000 fbd1 	bl	800a098 <xTaskResumeAll>
 80098f6:	b908      	cbnz	r0, 80098fc <xQueueReceive+0xd2>
                    portYIELD_WITHIN_API();
 80098f8:	f7ff fc08 	bl	800910c <vPortYield>
 80098fc:	2501      	movs	r5, #1
 80098fe:	e7aa      	b.n	8009856 <xQueueReceive+0x2c>
                prvUnlockQueue( pxQueue );
 8009900:	4620      	mov	r0, r4
 8009902:	f7ff fd9b 	bl	800943c <prvUnlockQueue>
                ( void ) xTaskResumeAll();
 8009906:	f000 fbc7 	bl	800a098 <xTaskResumeAll>
 800990a:	e7f7      	b.n	80098fc <xQueueReceive+0xd2>
            prvUnlockQueue( pxQueue );
 800990c:	4620      	mov	r0, r4
 800990e:	f7ff fd95 	bl	800943c <prvUnlockQueue>
            ( void ) xTaskResumeAll();
 8009912:	f000 fbc1 	bl	800a098 <xTaskResumeAll>
            if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 8009916:	4620      	mov	r0, r4
 8009918:	f7ff fd3c 	bl	8009394 <prvIsQueueEmpty>
 800991c:	2800      	cmp	r0, #0
 800991e:	d0ed      	beq.n	80098fc <xQueueReceive+0xd2>
 8009920:	e7bc      	b.n	800989c <xQueueReceive+0x72>

08009922 <xQueueSemaphoreTake>:
{
 8009922:	b5f0      	push	{r4, r5, r6, r7, lr}
 8009924:	b085      	sub	sp, #20
    configASSERT( ( pxQueue ) );
 8009926:	4604      	mov	r4, r0
{
 8009928:	9101      	str	r1, [sp, #4]
    configASSERT( ( pxQueue ) );
 800992a:	b910      	cbnz	r0, 8009932 <xQueueSemaphoreTake+0x10>
 800992c:	f7ff fcd2 	bl	80092d4 <ulSetInterruptMask>
 8009930:	e7fe      	b.n	8009930 <xQueueSemaphoreTake+0xe>
    configASSERT( pxQueue->uxItemSize == 0 );
 8009932:	6c05      	ldr	r5, [r0, #64]	@ 0x40
 8009934:	b115      	cbz	r5, 800993c <xQueueSemaphoreTake+0x1a>
 8009936:	f7ff fccd 	bl	80092d4 <ulSetInterruptMask>
 800993a:	e7fe      	b.n	800993a <xQueueSemaphoreTake+0x18>
            configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800993c:	f000 fdcc 	bl	800a4d8 <xTaskGetSchedulerState>
 8009940:	4606      	mov	r6, r0
 8009942:	b1e0      	cbz	r0, 800997e <xQueueSemaphoreTake+0x5c>
 8009944:	462e      	mov	r6, r5
        prvLockQueue( pxQueue );
 8009946:	2700      	movs	r7, #0
        taskENTER_CRITICAL();
 8009948:	f7ff fbec 	bl	8009124 <vPortEnterCritical>
            const UBaseType_t uxSemaphoreCount = pxQueue->uxMessagesWaiting;
 800994c:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
            if( uxSemaphoreCount > ( UBaseType_t ) 0 )
 800994e:	b1e3      	cbz	r3, 800998a <xQueueSemaphoreTake+0x68>
                pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
 8009950:	3b01      	subs	r3, #1
 8009952:	63a3      	str	r3, [r4, #56]	@ 0x38
                        if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 8009954:	6823      	ldr	r3, [r4, #0]
 8009956:	b913      	cbnz	r3, 800995e <xQueueSemaphoreTake+0x3c>
                            pxQueue->u.xSemaphore.xMutexHolder = pvTaskIncrementMutexHeldCount();
 8009958:	f000 fe98 	bl	800a68c <pvTaskIncrementMutexHeldCount>
 800995c:	60a0      	str	r0, [r4, #8]
                if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800995e:	6923      	ldr	r3, [r4, #16]
 8009960:	b133      	cbz	r3, 8009970 <xQueueSemaphoreTake+0x4e>
                    if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8009962:	f104 0010 	add.w	r0, r4, #16
 8009966:	f000 fd17 	bl	800a398 <xTaskRemoveFromEventList>
 800996a:	b108      	cbz	r0, 8009970 <xQueueSemaphoreTake+0x4e>
                        queueYIELD_IF_USING_PREEMPTION();
 800996c:	f7ff fbce 	bl	800910c <vPortYield>
                taskEXIT_CRITICAL();
 8009970:	f7ff fbe6 	bl	8009140 <vPortExitCritical>
                return pdPASS;
 8009974:	2001      	movs	r0, #1
}
 8009976:	b005      	add	sp, #20
 8009978:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800997a:	4635      	mov	r5, r6
 800997c:	e7e3      	b.n	8009946 <xQueueSemaphoreTake+0x24>
            configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800997e:	9b01      	ldr	r3, [sp, #4]
 8009980:	2b00      	cmp	r3, #0
 8009982:	d0fa      	beq.n	800997a <xQueueSemaphoreTake+0x58>
 8009984:	f7ff fca6 	bl	80092d4 <ulSetInterruptMask>
 8009988:	e7fe      	b.n	8009988 <xQueueSemaphoreTake+0x66>
                if( xTicksToWait == ( TickType_t ) 0 )
 800998a:	9b01      	ldr	r3, [sp, #4]
 800998c:	b923      	cbnz	r3, 8009998 <xQueueSemaphoreTake+0x76>
                            configASSERT( xInheritanceOccurred == pdFALSE );
 800998e:	2d00      	cmp	r5, #0
 8009990:	d058      	beq.n	8009a44 <xQueueSemaphoreTake+0x122>
 8009992:	f7ff fc9f 	bl	80092d4 <ulSetInterruptMask>
 8009996:	e7fe      	b.n	8009996 <xQueueSemaphoreTake+0x74>
                else if( xEntryTimeSet == pdFALSE )
 8009998:	b916      	cbnz	r6, 80099a0 <xQueueSemaphoreTake+0x7e>
                    vTaskInternalSetTimeOutState( &xTimeOut );
 800999a:	a802      	add	r0, sp, #8
 800999c:	f000 fd5a 	bl	800a454 <vTaskInternalSetTimeOutState>
        taskEXIT_CRITICAL();
 80099a0:	f7ff fbce 	bl	8009140 <vPortExitCritical>
        vTaskSuspendAll();
 80099a4:	f000 faba 	bl	8009f1c <vTaskSuspendAll>
        prvLockQueue( pxQueue );
 80099a8:	f7ff fbbc 	bl	8009124 <vPortEnterCritical>
 80099ac:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
 80099b0:	2bff      	cmp	r3, #255	@ 0xff
 80099b2:	bf08      	it	eq
 80099b4:	f884 7044 	strbeq.w	r7, [r4, #68]	@ 0x44
 80099b8:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
 80099bc:	2bff      	cmp	r3, #255	@ 0xff
 80099be:	bf08      	it	eq
 80099c0:	f884 7045 	strbeq.w	r7, [r4, #69]	@ 0x45
 80099c4:	f7ff fbbc 	bl	8009140 <vPortExitCritical>
        if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 80099c8:	a901      	add	r1, sp, #4
 80099ca:	a802      	add	r0, sp, #8
 80099cc:	f000 fd4e 	bl	800a46c <xTaskCheckForTimeOut>
 80099d0:	bb10      	cbnz	r0, 8009a18 <xQueueSemaphoreTake+0xf6>
            if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 80099d2:	4620      	mov	r0, r4
 80099d4:	f7ff fcde 	bl	8009394 <prvIsQueueEmpty>
 80099d8:	b1c0      	cbz	r0, 8009a0c <xQueueSemaphoreTake+0xea>
                        if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 80099da:	6823      	ldr	r3, [r4, #0]
 80099dc:	b93b      	cbnz	r3, 80099ee <xQueueSemaphoreTake+0xcc>
                            taskENTER_CRITICAL();
 80099de:	f7ff fba1 	bl	8009124 <vPortEnterCritical>
                                xInheritanceOccurred = xTaskPriorityInherit( pxQueue->u.xSemaphore.xMutexHolder );
 80099e2:	68a0      	ldr	r0, [r4, #8]
 80099e4:	f000 fd88 	bl	800a4f8 <xTaskPriorityInherit>
 80099e8:	4605      	mov	r5, r0
                            taskEXIT_CRITICAL();
 80099ea:	f7ff fba9 	bl	8009140 <vPortExitCritical>
                vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 80099ee:	9901      	ldr	r1, [sp, #4]
 80099f0:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 80099f4:	f000 fc94 	bl	800a320 <vTaskPlaceOnEventList>
                prvUnlockQueue( pxQueue );
 80099f8:	4620      	mov	r0, r4
 80099fa:	f7ff fd1f 	bl	800943c <prvUnlockQueue>
                if( xTaskResumeAll() == pdFALSE )
 80099fe:	f000 fb4b 	bl	800a098 <xTaskResumeAll>
 8009a02:	b908      	cbnz	r0, 8009a08 <xQueueSemaphoreTake+0xe6>
                    portYIELD_WITHIN_API();
 8009a04:	f7ff fb82 	bl	800910c <vPortYield>
 8009a08:	2601      	movs	r6, #1
 8009a0a:	e79d      	b.n	8009948 <xQueueSemaphoreTake+0x26>
                prvUnlockQueue( pxQueue );
 8009a0c:	4620      	mov	r0, r4
 8009a0e:	f7ff fd15 	bl	800943c <prvUnlockQueue>
                ( void ) xTaskResumeAll();
 8009a12:	f000 fb41 	bl	800a098 <xTaskResumeAll>
 8009a16:	e7f7      	b.n	8009a08 <xQueueSemaphoreTake+0xe6>
            prvUnlockQueue( pxQueue );
 8009a18:	4620      	mov	r0, r4
 8009a1a:	f7ff fd0f 	bl	800943c <prvUnlockQueue>
            ( void ) xTaskResumeAll();
 8009a1e:	f000 fb3b 	bl	800a098 <xTaskResumeAll>
            if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 8009a22:	4620      	mov	r0, r4
 8009a24:	f7ff fcb6 	bl	8009394 <prvIsQueueEmpty>
 8009a28:	2800      	cmp	r0, #0
 8009a2a:	d0ed      	beq.n	8009a08 <xQueueSemaphoreTake+0xe6>
                        if( xInheritanceOccurred != pdFALSE )
 8009a2c:	b165      	cbz	r5, 8009a48 <xQueueSemaphoreTake+0x126>
                            taskENTER_CRITICAL();
 8009a2e:	f7ff fb79 	bl	8009124 <vPortEnterCritical>
        if( listCURRENT_LIST_LENGTH( &( pxQueue->xTasksWaitingToReceive ) ) > 0U )
 8009a32:	6a61      	ldr	r1, [r4, #36]	@ 0x24
 8009a34:	b119      	cbz	r1, 8009a3e <xQueueSemaphoreTake+0x11c>
            uxHighestPriorityOfWaitingTasks = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) listGET_ITEM_VALUE_OF_HEAD_ENTRY( &( pxQueue->xTasksWaitingToReceive ) );
 8009a36:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8009a38:	6819      	ldr	r1, [r3, #0]
 8009a3a:	f1c1 0138 	rsb	r1, r1, #56	@ 0x38
                                vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
 8009a3e:	68a0      	ldr	r0, [r4, #8]
 8009a40:	f000 fdde 	bl	800a600 <vTaskPriorityDisinheritAfterTimeout>
                            taskEXIT_CRITICAL();
 8009a44:	f7ff fb7c 	bl	8009140 <vPortExitCritical>
                    return errQUEUE_EMPTY;
 8009a48:	2000      	movs	r0, #0
 8009a4a:	e794      	b.n	8009976 <xQueueSemaphoreTake+0x54>

08009a4c <xQueueReceiveFromISR>:
{
 8009a4c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8009a50:	4689      	mov	r9, r1
 8009a52:	4690      	mov	r8, r2
    configASSERT( pxQueue );
 8009a54:	4604      	mov	r4, r0
 8009a56:	b910      	cbnz	r0, 8009a5e <xQueueReceiveFromISR+0x12>
 8009a58:	f7ff fc3c 	bl	80092d4 <ulSetInterruptMask>
 8009a5c:	e7fe      	b.n	8009a5c <xQueueReceiveFromISR+0x10>
    configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8009a5e:	b921      	cbnz	r1, 8009a6a <xQueueReceiveFromISR+0x1e>
 8009a60:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 8009a62:	b113      	cbz	r3, 8009a6a <xQueueReceiveFromISR+0x1e>
 8009a64:	f7ff fc36 	bl	80092d4 <ulSetInterruptMask>
 8009a68:	e7fe      	b.n	8009a68 <xQueueReceiveFromISR+0x1c>
    uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
 8009a6a:	f7ff fc33 	bl	80092d4 <ulSetInterruptMask>
        const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 8009a6e:	6ba6      	ldr	r6, [r4, #56]	@ 0x38
    uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
 8009a70:	4607      	mov	r7, r0
        if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 8009a72:	b1c6      	cbz	r6, 8009aa6 <xQueueReceiveFromISR+0x5a>
            const int8_t cRxLock = pxQueue->cRxLock;
 8009a74:	f894 5044 	ldrb.w	r5, [r4, #68]	@ 0x44
            prvCopyDataFromQueue( pxQueue, pvBuffer );
 8009a78:	4649      	mov	r1, r9
 8009a7a:	4620      	mov	r0, r4
            const int8_t cRxLock = pxQueue->cRxLock;
 8009a7c:	b26d      	sxtb	r5, r5
            prvCopyDataFromQueue( pxQueue, pvBuffer );
 8009a7e:	f7ff fcc7 	bl	8009410 <prvCopyDataFromQueue>
            pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 8009a82:	3e01      	subs	r6, #1
            if( cRxLock == queueUNLOCKED )
 8009a84:	1c6b      	adds	r3, r5, #1
            pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 8009a86:	63a6      	str	r6, [r4, #56]	@ 0x38
            if( cRxLock == queueUNLOCKED )
 8009a88:	d113      	bne.n	8009ab2 <xQueueReceiveFromISR+0x66>
                if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8009a8a:	6923      	ldr	r3, [r4, #16]
 8009a8c:	b153      	cbz	r3, 8009aa4 <xQueueReceiveFromISR+0x58>
                    if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8009a8e:	f104 0010 	add.w	r0, r4, #16
 8009a92:	f000 fc81 	bl	800a398 <xTaskRemoveFromEventList>
 8009a96:	b128      	cbz	r0, 8009aa4 <xQueueReceiveFromISR+0x58>
                        if( pxHigherPriorityTaskWoken != NULL )
 8009a98:	f1b8 0f00 	cmp.w	r8, #0
 8009a9c:	d002      	beq.n	8009aa4 <xQueueReceiveFromISR+0x58>
                            *pxHigherPriorityTaskWoken = pdTRUE;
 8009a9e:	2301      	movs	r3, #1
 8009aa0:	f8c8 3000 	str.w	r3, [r8]
            xReturn = pdPASS;
 8009aa4:	2601      	movs	r6, #1
    portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
 8009aa6:	4638      	mov	r0, r7
 8009aa8:	f7ff fc1f 	bl	80092ea <vClearInterruptMask>
}
 8009aac:	4630      	mov	r0, r6
 8009aae:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
                configASSERT( cRxLock != queueINT8_MAX );
 8009ab2:	2d7f      	cmp	r5, #127	@ 0x7f
 8009ab4:	d102      	bne.n	8009abc <xQueueReceiveFromISR+0x70>
 8009ab6:	f7ff fc0d 	bl	80092d4 <ulSetInterruptMask>
 8009aba:	e7fe      	b.n	8009aba <xQueueReceiveFromISR+0x6e>
                pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
 8009abc:	3501      	adds	r5, #1
 8009abe:	b26d      	sxtb	r5, r5
 8009ac0:	f884 5044 	strb.w	r5, [r4, #68]	@ 0x44
 8009ac4:	e7ee      	b.n	8009aa4 <xQueueReceiveFromISR+0x58>
	...

08009ac8 <vQueueAddToRegistry>:

#if ( configQUEUE_REGISTRY_SIZE > 0 )

    void vQueueAddToRegistry( QueueHandle_t xQueue,
                              const char * pcQueueName ) /*lint !e971 Unqualified char types are allowed for strings and single characters only. */
    {
 8009ac8:	b570      	push	{r4, r5, r6, lr}
        UBaseType_t ux;

        configASSERT( xQueue );
 8009aca:	b910      	cbnz	r0, 8009ad2 <vQueueAddToRegistry+0xa>
 8009acc:	f7ff fc02 	bl	80092d4 <ulSetInterruptMask>
 8009ad0:	e7fe      	b.n	8009ad0 <vQueueAddToRegistry+0x8>

        QueueRegistryItem_t * pxEntryToWrite = NULL;

        if( pcQueueName != NULL )
 8009ad2:	b1b9      	cbz	r1, 8009b04 <vQueueAddToRegistry+0x3c>
        QueueRegistryItem_t * pxEntryToWrite = NULL;
 8009ad4:	2300      	movs	r3, #0
 8009ad6:	4a0c      	ldr	r2, [pc, #48]	@ (8009b08 <vQueueAddToRegistry+0x40>)
        {
            /* See if there is an empty space in the registry.  A NULL name denotes
             * a free slot. */
            for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 8009ad8:	461c      	mov	r4, r3
 8009ada:	4615      	mov	r5, r2
            {
                /* Replace an existing entry if the queue is already in the registry. */
                if( xQueue == xQueueRegistry[ ux ].xHandle )
 8009adc:	6856      	ldr	r6, [r2, #4]
 8009ade:	4286      	cmp	r6, r0
 8009ae0:	d104      	bne.n	8009aec <vQueueAddToRegistry+0x24>
                {
                    pxEntryToWrite = &( xQueueRegistry[ ux ] );
 8009ae2:	eb05 03c4 	add.w	r3, r5, r4, lsl #3

        if( pxEntryToWrite != NULL )
        {
            /* Store the information on this queue. */
            pxEntryToWrite->pcQueueName = pcQueueName;
            pxEntryToWrite->xHandle = xQueue;
 8009ae6:	e9c3 1000 	strd	r1, r0, [r3]

            traceQUEUE_REGISTRY_ADD( xQueue, pcQueueName );
        }
    }
 8009aea:	e00b      	b.n	8009b04 <vQueueAddToRegistry+0x3c>
                else if( ( pxEntryToWrite == NULL ) && ( xQueueRegistry[ ux ].pcQueueName == NULL ) )
 8009aec:	b91b      	cbnz	r3, 8009af6 <vQueueAddToRegistry+0x2e>
 8009aee:	6816      	ldr	r6, [r2, #0]
                    pxEntryToWrite = &( xQueueRegistry[ ux ] );
 8009af0:	2e00      	cmp	r6, #0
 8009af2:	bf08      	it	eq
 8009af4:	4613      	moveq	r3, r2
            for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 8009af6:	3401      	adds	r4, #1
 8009af8:	2c08      	cmp	r4, #8
 8009afa:	f102 0208 	add.w	r2, r2, #8
 8009afe:	d1ed      	bne.n	8009adc <vQueueAddToRegistry+0x14>
        if( pxEntryToWrite != NULL )
 8009b00:	2b00      	cmp	r3, #0
 8009b02:	d1f0      	bne.n	8009ae6 <vQueueAddToRegistry+0x1e>
    }
 8009b04:	bd70      	pop	{r4, r5, r6, pc}
 8009b06:	bf00      	nop
 8009b08:	2006f190 	.word	0x2006f190

08009b0c <vQueueUnregisterQueue>:
/*-----------------------------------------------------------*/

#if ( configQUEUE_REGISTRY_SIZE > 0 )

    void vQueueUnregisterQueue( QueueHandle_t xQueue )
    {
 8009b0c:	b510      	push	{r4, lr}
        UBaseType_t ux;

        configASSERT( xQueue );
 8009b0e:	b910      	cbnz	r0, 8009b16 <vQueueUnregisterQueue+0xa>
 8009b10:	f7ff fbe0 	bl	80092d4 <ulSetInterruptMask>
 8009b14:	e7fe      	b.n	8009b14 <vQueueUnregisterQueue+0x8>

        /* See if the handle of the queue being unregistered in actually in the
         * registry. */
        for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 8009b16:	2300      	movs	r3, #0
        {
            if( xQueueRegistry[ ux ].xHandle == xQueue )
 8009b18:	4a08      	ldr	r2, [pc, #32]	@ (8009b3c <vQueueUnregisterQueue+0x30>)
 8009b1a:	f852 1033 	ldr.w	r1, [r2, r3, lsl #3]
 8009b1e:	00dc      	lsls	r4, r3, #3
 8009b20:	4288      	cmp	r0, r1
 8009b22:	d106      	bne.n	8009b32 <vQueueUnregisterQueue+0x26>
            {
                /* Set the name to NULL to show that this slot if free again. */
                xQueueRegistry[ ux ].pcQueueName = NULL;
 8009b24:	2100      	movs	r1, #0
 8009b26:	4a06      	ldr	r2, [pc, #24]	@ (8009b40 <vQueueUnregisterQueue+0x34>)
 8009b28:	f842 1033 	str.w	r1, [r2, r3, lsl #3]

                /* Set the handle to NULL to ensure the same queue handle cannot
                 * appear in the registry twice if it is added, removed, then
                 * added again. */
                xQueueRegistry[ ux ].xHandle = ( QueueHandle_t ) 0;
 8009b2c:	4422      	add	r2, r4
 8009b2e:	6051      	str	r1, [r2, #4]
            else
            {
                mtCOVERAGE_TEST_MARKER();
            }
        }
    } /*lint !e818 xQueue could not be pointer to const because it is a typedef. */
 8009b30:	bd10      	pop	{r4, pc}
        for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 8009b32:	3301      	adds	r3, #1
 8009b34:	2b08      	cmp	r3, #8
 8009b36:	d1f0      	bne.n	8009b1a <vQueueUnregisterQueue+0xe>
 8009b38:	e7fa      	b.n	8009b30 <vQueueUnregisterQueue+0x24>
 8009b3a:	bf00      	nop
 8009b3c:	2006f194 	.word	0x2006f194
 8009b40:	2006f190 	.word	0x2006f190

08009b44 <vQueueDelete>:
{
 8009b44:	b510      	push	{r4, lr}
    configASSERT( pxQueue );
 8009b46:	4604      	mov	r4, r0
 8009b48:	b910      	cbnz	r0, 8009b50 <vQueueDelete+0xc>
 8009b4a:	f7ff fbc3 	bl	80092d4 <ulSetInterruptMask>
 8009b4e:	e7fe      	b.n	8009b4e <vQueueDelete+0xa>
            vQueueUnregisterQueue( pxQueue );
 8009b50:	f7ff ffdc 	bl	8009b0c <vQueueUnregisterQueue>
            if( pxQueue->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
 8009b54:	f894 3046 	ldrb.w	r3, [r4, #70]	@ 0x46
 8009b58:	b923      	cbnz	r3, 8009b64 <vQueueDelete+0x20>
                vPortFree( pxQueue );
 8009b5a:	4620      	mov	r0, r4
}
 8009b5c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
                vPortFree( pxQueue );
 8009b60:	f000 bfda 	b.w	800ab18 <vPortFree>
}
 8009b64:	bd10      	pop	{r4, pc}

08009b66 <vQueueWaitForMessageRestricted>:
#if ( configUSE_TIMERS == 1 )

    void vQueueWaitForMessageRestricted( QueueHandle_t xQueue,
                                         TickType_t xTicksToWait,
                                         const BaseType_t xWaitIndefinitely )
    {
 8009b66:	b570      	push	{r4, r5, r6, lr}
 8009b68:	4604      	mov	r4, r0
 8009b6a:	460d      	mov	r5, r1
 8009b6c:	4616      	mov	r6, r2
         *  will not actually cause the task to block, just place it on a blocked
         *  list.  It will not block until the scheduler is unlocked - at which
         *  time a yield will be performed.  If an item is added to the queue while
         *  the queue is locked, and the calling task blocks on the queue, then the
         *  calling task will be immediately unblocked when the queue is unlocked. */
        prvLockQueue( pxQueue );
 8009b6e:	f7ff fad9 	bl	8009124 <vPortEnterCritical>
 8009b72:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
 8009b76:	2bff      	cmp	r3, #255	@ 0xff
 8009b78:	bf04      	itt	eq
 8009b7a:	2300      	moveq	r3, #0
 8009b7c:	f884 3044 	strbeq.w	r3, [r4, #68]	@ 0x44
 8009b80:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
 8009b84:	2bff      	cmp	r3, #255	@ 0xff
 8009b86:	bf04      	itt	eq
 8009b88:	2300      	moveq	r3, #0
 8009b8a:	f884 3045 	strbeq.w	r3, [r4, #69]	@ 0x45
 8009b8e:	f7ff fad7 	bl	8009140 <vPortExitCritical>

        if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0U )
 8009b92:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 8009b94:	b92b      	cbnz	r3, 8009ba2 <vQueueWaitForMessageRestricted+0x3c>
        {
            /* There is nothing in the queue, block for the specified period. */
            vTaskPlaceOnEventListRestricted( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait, xWaitIndefinitely );
 8009b96:	4632      	mov	r2, r6
 8009b98:	4629      	mov	r1, r5
 8009b9a:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 8009b9e:	f000 fbd3 	bl	800a348 <vTaskPlaceOnEventListRestricted>
        else
        {
            mtCOVERAGE_TEST_MARKER();
        }

        prvUnlockQueue( pxQueue );
 8009ba2:	4620      	mov	r0, r4
    }
 8009ba4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        prvUnlockQueue( pxQueue );
 8009ba8:	f7ff bc48 	b.w	800943c <prvUnlockQueue>

08009bac <prvAddNewTaskToReadyList>:
    }
}
/*-----------------------------------------------------------*/

static void prvAddNewTaskToReadyList( TCB_t * pxNewTCB )
{
 8009bac:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8009bb0:	4604      	mov	r4, r0
    /* Ensure interrupts don't access the task lists while the lists are being
     * updated. */
    taskENTER_CRITICAL();
 8009bb2:	f7ff fab7 	bl	8009124 <vPortEnterCritical>
    {
        uxCurrentNumberOfTasks++;
 8009bb6:	4b30      	ldr	r3, [pc, #192]	@ (8009c78 <prvAddNewTaskToReadyList+0xcc>)

        if( pxCurrentTCB == NULL )
 8009bb8:	4e30      	ldr	r6, [pc, #192]	@ (8009c7c <prvAddNewTaskToReadyList+0xd0>)
        uxCurrentNumberOfTasks++;
 8009bba:	681a      	ldr	r2, [r3, #0]
 8009bbc:	4f30      	ldr	r7, [pc, #192]	@ (8009c80 <prvAddNewTaskToReadyList+0xd4>)
 8009bbe:	3201      	adds	r2, #1
 8009bc0:	601a      	str	r2, [r3, #0]
        if( pxCurrentTCB == NULL )
 8009bc2:	6835      	ldr	r5, [r6, #0]
 8009bc4:	2d00      	cmp	r5, #0
 8009bc6:	d14a      	bne.n	8009c5e <prvAddNewTaskToReadyList+0xb2>
        {
            /* There are no other tasks, or all the other tasks are in
             * the suspended state - make this the current task. */
            pxCurrentTCB = pxNewTCB;
 8009bc8:	6034      	str	r4, [r6, #0]

            if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
 8009bca:	681b      	ldr	r3, [r3, #0]
 8009bcc:	2b01      	cmp	r3, #1
 8009bce:	d11f      	bne.n	8009c10 <prvAddNewTaskToReadyList+0x64>
 8009bd0:	46b8      	mov	r8, r7
{
    UBaseType_t uxPriority;

    for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
    {
        vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 8009bd2:	4640      	mov	r0, r8
    for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 8009bd4:	3501      	adds	r5, #1
        vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 8009bd6:	f7ff fa3d 	bl	8009054 <vListInitialise>
    for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 8009bda:	2d38      	cmp	r5, #56	@ 0x38
 8009bdc:	f108 0814 	add.w	r8, r8, #20
 8009be0:	d1f7      	bne.n	8009bd2 <prvAddNewTaskToReadyList+0x26>
    }

    vListInitialise( &xDelayedTaskList1 );
 8009be2:	f8df 80c4 	ldr.w	r8, [pc, #196]	@ 8009ca8 <prvAddNewTaskToReadyList+0xfc>
    vListInitialise( &xDelayedTaskList2 );
 8009be6:	4d27      	ldr	r5, [pc, #156]	@ (8009c84 <prvAddNewTaskToReadyList+0xd8>)
    vListInitialise( &xDelayedTaskList1 );
 8009be8:	4640      	mov	r0, r8
 8009bea:	f7ff fa33 	bl	8009054 <vListInitialise>
    vListInitialise( &xDelayedTaskList2 );
 8009bee:	4628      	mov	r0, r5
 8009bf0:	f7ff fa30 	bl	8009054 <vListInitialise>
    vListInitialise( &xPendingReadyList );
 8009bf4:	4824      	ldr	r0, [pc, #144]	@ (8009c88 <prvAddNewTaskToReadyList+0xdc>)
 8009bf6:	f7ff fa2d 	bl	8009054 <vListInitialise>

    #if ( INCLUDE_vTaskDelete == 1 )
        {
            vListInitialise( &xTasksWaitingTermination );
 8009bfa:	4824      	ldr	r0, [pc, #144]	@ (8009c8c <prvAddNewTaskToReadyList+0xe0>)
 8009bfc:	f7ff fa2a 	bl	8009054 <vListInitialise>
        }
    #endif /* INCLUDE_vTaskDelete */

    #if ( INCLUDE_vTaskSuspend == 1 )
        {
            vListInitialise( &xSuspendedTaskList );
 8009c00:	4823      	ldr	r0, [pc, #140]	@ (8009c90 <prvAddNewTaskToReadyList+0xe4>)
 8009c02:	f7ff fa27 	bl	8009054 <vListInitialise>
        }
    #endif /* INCLUDE_vTaskSuspend */

    /* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
     * using list2. */
    pxDelayedTaskList = &xDelayedTaskList1;
 8009c06:	4b23      	ldr	r3, [pc, #140]	@ (8009c94 <prvAddNewTaskToReadyList+0xe8>)
 8009c08:	f8c3 8000 	str.w	r8, [r3]
    pxOverflowDelayedTaskList = &xDelayedTaskList2;
 8009c0c:	4b22      	ldr	r3, [pc, #136]	@ (8009c98 <prvAddNewTaskToReadyList+0xec>)
 8009c0e:	601d      	str	r5, [r3, #0]
        uxTaskNumber++;
 8009c10:	4a22      	ldr	r2, [pc, #136]	@ (8009c9c <prvAddNewTaskToReadyList+0xf0>)
        prvAddTaskToReadyList( pxNewTCB );
 8009c12:	1d20      	adds	r0, r4, #4
        uxTaskNumber++;
 8009c14:	6813      	ldr	r3, [r2, #0]
 8009c16:	3301      	adds	r3, #1
 8009c18:	6013      	str	r3, [r2, #0]
        prvAddTaskToReadyList( pxNewTCB );
 8009c1a:	4a21      	ldr	r2, [pc, #132]	@ (8009ca0 <prvAddNewTaskToReadyList+0xf4>)
                pxNewTCB->uxTCBNumber = uxTaskNumber;
 8009c1c:	6463      	str	r3, [r4, #68]	@ 0x44
        prvAddTaskToReadyList( pxNewTCB );
 8009c1e:	6811      	ldr	r1, [r2, #0]
 8009c20:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 8009c22:	428b      	cmp	r3, r1
 8009c24:	bf88      	it	hi
 8009c26:	6013      	strhi	r3, [r2, #0]
 8009c28:	2214      	movs	r2, #20
 8009c2a:	4353      	muls	r3, r2
 8009c2c:	18f9      	adds	r1, r7, r3
 8009c2e:	684a      	ldr	r2, [r1, #4]
 8009c30:	6895      	ldr	r5, [r2, #8]
 8009c32:	60a2      	str	r2, [r4, #8]
 8009c34:	60e5      	str	r5, [r4, #12]
 8009c36:	6068      	str	r0, [r5, #4]
 8009c38:	6090      	str	r0, [r2, #8]
 8009c3a:	58fa      	ldr	r2, [r7, r3]
 8009c3c:	6161      	str	r1, [r4, #20]
 8009c3e:	3201      	adds	r2, #1
 8009c40:	50fa      	str	r2, [r7, r3]
    taskEXIT_CRITICAL();
 8009c42:	f7ff fa7d 	bl	8009140 <vPortExitCritical>
    if( xSchedulerRunning != pdFALSE )
 8009c46:	4b17      	ldr	r3, [pc, #92]	@ (8009ca4 <prvAddNewTaskToReadyList+0xf8>)
 8009c48:	681b      	ldr	r3, [r3, #0]
 8009c4a:	b19b      	cbz	r3, 8009c74 <prvAddNewTaskToReadyList+0xc8>
        if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
 8009c4c:	6833      	ldr	r3, [r6, #0]
 8009c4e:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8009c50:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 8009c52:	429a      	cmp	r2, r3
 8009c54:	d20e      	bcs.n	8009c74 <prvAddNewTaskToReadyList+0xc8>
}
 8009c56:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
            taskYIELD_IF_USING_PREEMPTION();
 8009c5a:	f7ff ba57 	b.w	800910c <vPortYield>
            if( xSchedulerRunning == pdFALSE )
 8009c5e:	4b11      	ldr	r3, [pc, #68]	@ (8009ca4 <prvAddNewTaskToReadyList+0xf8>)
 8009c60:	681a      	ldr	r2, [r3, #0]
                if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 8009c62:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
            if( xSchedulerRunning == pdFALSE )
 8009c64:	2a00      	cmp	r2, #0
 8009c66:	d1d3      	bne.n	8009c10 <prvAddNewTaskToReadyList+0x64>
                if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 8009c68:	6832      	ldr	r2, [r6, #0]
 8009c6a:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
 8009c6c:	429a      	cmp	r2, r3
                    pxCurrentTCB = pxNewTCB;
 8009c6e:	bf98      	it	ls
 8009c70:	6034      	strls	r4, [r6, #0]
 8009c72:	e7cd      	b.n	8009c10 <prvAddNewTaskToReadyList+0x64>
}
 8009c74:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8009c78:	2006f1f4 	.word	0x2006f1f4
 8009c7c:	2006f6c8 	.word	0x2006f6c8
 8009c80:	2006f268 	.word	0x2006f268
 8009c84:	2006f240 	.word	0x2006f240
 8009c88:	2006f224 	.word	0x2006f224
 8009c8c:	2006f210 	.word	0x2006f210
 8009c90:	2006f1f8 	.word	0x2006f1f8
 8009c94:	2006f23c 	.word	0x2006f23c
 8009c98:	2006f238 	.word	0x2006f238
 8009c9c:	2006f1d8 	.word	0x2006f1d8
 8009ca0:	2006f1ec 	.word	0x2006f1ec
 8009ca4:	2006f1e8 	.word	0x2006f1e8
 8009ca8:	2006f254 	.word	0x2006f254

08009cac <prvAddCurrentTaskToDelayedList>:
#endif /* if ( ( configGENERATE_RUN_TIME_STATS == 1 ) && ( INCLUDE_xTaskGetIdleTaskHandle == 1 ) ) */
/*-----------------------------------------------------------*/

static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait,
                                            const BaseType_t xCanBlockIndefinitely )
{
 8009cac:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8009cae:	4606      	mov	r6, r0
    TickType_t xTimeToWake;
    const TickType_t xConstTickCount = xTickCount;
 8009cb0:	4b1a      	ldr	r3, [pc, #104]	@ (8009d1c <prvAddCurrentTaskToDelayedList+0x70>)
        }
    #endif

    /* Remove the task from the ready list before adding it to the blocked list
     * as the same list item is used for both lists. */
    if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8009cb2:	4c1b      	ldr	r4, [pc, #108]	@ (8009d20 <prvAddCurrentTaskToDelayedList+0x74>)
    const TickType_t xConstTickCount = xTickCount;
 8009cb4:	681d      	ldr	r5, [r3, #0]
    if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8009cb6:	6820      	ldr	r0, [r4, #0]
{
 8009cb8:	460f      	mov	r7, r1
    if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8009cba:	3004      	adds	r0, #4
 8009cbc:	f7ff f9ef 	bl	800909e <uxListRemove>
        mtCOVERAGE_TEST_MARKER();
    }

    #if ( INCLUDE_vTaskSuspend == 1 )
        {
            if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
 8009cc0:	1c73      	adds	r3, r6, #1
 8009cc2:	d113      	bne.n	8009cec <prvAddCurrentTaskToDelayedList+0x40>
 8009cc4:	b197      	cbz	r7, 8009cec <prvAddCurrentTaskToDelayedList+0x40>
            {
                /* Add the task to the suspended task list instead of a delayed task
                 * list to ensure it is not woken by a timing event.  It will block
                 * indefinitely. */
                listINSERT_END( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8009cc6:	4b17      	ldr	r3, [pc, #92]	@ (8009d24 <prvAddCurrentTaskToDelayedList+0x78>)
 8009cc8:	6821      	ldr	r1, [r4, #0]
 8009cca:	685a      	ldr	r2, [r3, #4]
 8009ccc:	608a      	str	r2, [r1, #8]
 8009cce:	6890      	ldr	r0, [r2, #8]
 8009cd0:	6821      	ldr	r1, [r4, #0]
 8009cd2:	60c8      	str	r0, [r1, #12]
 8009cd4:	6821      	ldr	r1, [r4, #0]
 8009cd6:	3104      	adds	r1, #4
 8009cd8:	6041      	str	r1, [r0, #4]
 8009cda:	6821      	ldr	r1, [r4, #0]
 8009cdc:	3104      	adds	r1, #4
 8009cde:	6091      	str	r1, [r2, #8]
 8009ce0:	6822      	ldr	r2, [r4, #0]
 8009ce2:	6153      	str	r3, [r2, #20]
 8009ce4:	681a      	ldr	r2, [r3, #0]
 8009ce6:	3201      	adds	r2, #1
 8009ce8:	601a      	str	r2, [r3, #0]

            /* Avoid compiler warning when INCLUDE_vTaskSuspend is not 1. */
            ( void ) xCanBlockIndefinitely;
        }
    #endif /* INCLUDE_vTaskSuspend */
}
 8009cea:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
                listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 8009cec:	6823      	ldr	r3, [r4, #0]
 8009cee:	19ad      	adds	r5, r5, r6
 8009cf0:	605d      	str	r5, [r3, #4]
                if( xTimeToWake < xConstTickCount )
 8009cf2:	d307      	bcc.n	8009d04 <prvAddCurrentTaskToDelayedList+0x58>
                    vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8009cf4:	4b0c      	ldr	r3, [pc, #48]	@ (8009d28 <prvAddCurrentTaskToDelayedList+0x7c>)
 8009cf6:	6818      	ldr	r0, [r3, #0]
 8009cf8:	6821      	ldr	r1, [r4, #0]
}
 8009cfa:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
                    vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8009cfe:	3104      	adds	r1, #4
 8009d00:	f7ff b9b6 	b.w	8009070 <vListInsert>
                    vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8009d04:	4b09      	ldr	r3, [pc, #36]	@ (8009d2c <prvAddCurrentTaskToDelayedList+0x80>)
 8009d06:	6818      	ldr	r0, [r3, #0]
 8009d08:	6821      	ldr	r1, [r4, #0]
 8009d0a:	3104      	adds	r1, #4
 8009d0c:	f7ff f9b0 	bl	8009070 <vListInsert>
                    if( xTimeToWake < xNextTaskUnblockTime )
 8009d10:	4b07      	ldr	r3, [pc, #28]	@ (8009d30 <prvAddCurrentTaskToDelayedList+0x84>)
 8009d12:	681a      	ldr	r2, [r3, #0]
 8009d14:	42aa      	cmp	r2, r5
                        xNextTaskUnblockTime = xTimeToWake;
 8009d16:	bf88      	it	hi
 8009d18:	601d      	strhi	r5, [r3, #0]
}
 8009d1a:	e7e6      	b.n	8009cea <prvAddCurrentTaskToDelayedList+0x3e>
 8009d1c:	2006f1f0 	.word	0x2006f1f0
 8009d20:	2006f6c8 	.word	0x2006f6c8
 8009d24:	2006f1f8 	.word	0x2006f1f8
 8009d28:	2006f238 	.word	0x2006f238
 8009d2c:	2006f23c 	.word	0x2006f23c
 8009d30:	2006f1d4 	.word	0x2006f1d4

08009d34 <prvResetNextTaskUnblockTime>:
    if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 8009d34:	4a06      	ldr	r2, [pc, #24]	@ (8009d50 <prvResetNextTaskUnblockTime+0x1c>)
 8009d36:	6813      	ldr	r3, [r2, #0]
 8009d38:	6819      	ldr	r1, [r3, #0]
 8009d3a:	4b06      	ldr	r3, [pc, #24]	@ (8009d54 <prvResetNextTaskUnblockTime+0x20>)
 8009d3c:	b919      	cbnz	r1, 8009d46 <prvResetNextTaskUnblockTime+0x12>
        xNextTaskUnblockTime = portMAX_DELAY;
 8009d3e:	f04f 32ff 	mov.w	r2, #4294967295
        xNextTaskUnblockTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxDelayedTaskList );
 8009d42:	601a      	str	r2, [r3, #0]
}
 8009d44:	4770      	bx	lr
        xNextTaskUnblockTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxDelayedTaskList );
 8009d46:	6812      	ldr	r2, [r2, #0]
 8009d48:	68d2      	ldr	r2, [r2, #12]
 8009d4a:	6812      	ldr	r2, [r2, #0]
 8009d4c:	e7f9      	b.n	8009d42 <prvResetNextTaskUnblockTime+0xe>
 8009d4e:	bf00      	nop
 8009d50:	2006f23c 	.word	0x2006f23c
 8009d54:	2006f1d4 	.word	0x2006f1d4

08009d58 <prvDeleteTCB>:
    {
 8009d58:	b510      	push	{r4, lr}
                if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
 8009d5a:	f890 305d 	ldrb.w	r3, [r0, #93]	@ 0x5d
    {
 8009d5e:	4604      	mov	r4, r0
                if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
 8009d60:	b93b      	cbnz	r3, 8009d72 <prvDeleteTCB+0x1a>
                    vPortFreeStack( pxTCB->pxStack );
 8009d62:	6b00      	ldr	r0, [r0, #48]	@ 0x30
 8009d64:	f000 fed8 	bl	800ab18 <vPortFree>
                    vPortFree( pxTCB );
 8009d68:	4620      	mov	r0, r4
    }
 8009d6a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
                    vPortFree( pxTCB );
 8009d6e:	f000 bed3 	b.w	800ab18 <vPortFree>
                else if( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_ONLY )
 8009d72:	2b01      	cmp	r3, #1
 8009d74:	d0f9      	beq.n	8009d6a <prvDeleteTCB+0x12>
                    configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB );
 8009d76:	2b02      	cmp	r3, #2
 8009d78:	d002      	beq.n	8009d80 <prvDeleteTCB+0x28>
 8009d7a:	f7ff faab 	bl	80092d4 <ulSetInterruptMask>
 8009d7e:	e7fe      	b.n	8009d7e <prvDeleteTCB+0x26>
    }
 8009d80:	bd10      	pop	{r4, pc}
	...

08009d84 <prvIdleTask>:
{
 8009d84:	b580      	push	{r7, lr}
            while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 8009d86:	4c10      	ldr	r4, [pc, #64]	@ (8009dc8 <prvIdleTask+0x44>)
                    pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009d88:	4f10      	ldr	r7, [pc, #64]	@ (8009dcc <prvIdleTask+0x48>)
                    --uxCurrentNumberOfTasks;
 8009d8a:	4d11      	ldr	r5, [pc, #68]	@ (8009dd0 <prvIdleTask+0x4c>)
            while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 8009d8c:	6823      	ldr	r3, [r4, #0]
 8009d8e:	b943      	cbnz	r3, 8009da2 <prvIdleTask+0x1e>
                if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
 8009d90:	4b10      	ldr	r3, [pc, #64]	@ (8009dd4 <prvIdleTask+0x50>)
 8009d92:	681b      	ldr	r3, [r3, #0]
 8009d94:	2b01      	cmp	r3, #1
 8009d96:	d901      	bls.n	8009d9c <prvIdleTask+0x18>
                    taskYIELD();
 8009d98:	f7ff f9b8 	bl	800910c <vPortYield>
                vApplicationIdleHook();
 8009d9c:	f7f6 fa96 	bl	80002cc <vApplicationIdleHook>
        prvCheckTasksWaitingTermination();
 8009da0:	e7f3      	b.n	8009d8a <prvIdleTask+0x6>
                taskENTER_CRITICAL();
 8009da2:	f7ff f9bf 	bl	8009124 <vPortEnterCritical>
                    pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009da6:	68fb      	ldr	r3, [r7, #12]
 8009da8:	68de      	ldr	r6, [r3, #12]
                    ( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 8009daa:	1d30      	adds	r0, r6, #4
 8009dac:	f7ff f977 	bl	800909e <uxListRemove>
                    --uxCurrentNumberOfTasks;
 8009db0:	682b      	ldr	r3, [r5, #0]
 8009db2:	3b01      	subs	r3, #1
 8009db4:	602b      	str	r3, [r5, #0]
                    --uxDeletedTasksWaitingCleanUp;
 8009db6:	6823      	ldr	r3, [r4, #0]
 8009db8:	3b01      	subs	r3, #1
 8009dba:	6023      	str	r3, [r4, #0]
                taskEXIT_CRITICAL();
 8009dbc:	f7ff f9c0 	bl	8009140 <vPortExitCritical>
                prvDeleteTCB( pxTCB );
 8009dc0:	4630      	mov	r0, r6
 8009dc2:	f7ff ffc9 	bl	8009d58 <prvDeleteTCB>
 8009dc6:	e7e1      	b.n	8009d8c <prvIdleTask+0x8>
 8009dc8:	2006f20c 	.word	0x2006f20c
 8009dcc:	2006f210 	.word	0x2006f210
 8009dd0:	2006f1f4 	.word	0x2006f1f4
 8009dd4:	2006f268 	.word	0x2006f268

08009dd8 <prvInitialiseNewTask.constprop.0>:
static void prvInitialiseNewTask( TaskFunction_t pxTaskCode,
 8009dd8:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009ddc:	460d      	mov	r5, r1
 8009dde:	e9dd 7a0a 	ldrd	r7, sl, [sp, #40]	@ 0x28
 8009de2:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
            ( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 8009de4:	0096      	lsls	r6, r2, #2
static void prvInitialiseNewTask( TaskFunction_t pxTaskCode,
 8009de6:	4680      	mov	r8, r0
            ( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 8009de8:	4632      	mov	r2, r6
 8009dea:	21a5      	movs	r1, #165	@ 0xa5
 8009dec:	6b20      	ldr	r0, [r4, #48]	@ 0x30
static void prvInitialiseNewTask( TaskFunction_t pxTaskCode,
 8009dee:	4699      	mov	r9, r3
            ( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 8009df0:	f028 fec9 	bl	8032b86 <memset>
            pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
 8009df4:	f8d4 b030 	ldr.w	fp, [r4, #48]	@ 0x30
    if( pcName != NULL )
 8009df8:	b195      	cbz	r5, 8009e20 <prvInitialiseNewTask.constprop.0+0x48>
 8009dfa:	1e6b      	subs	r3, r5, #1
 8009dfc:	f104 0233 	add.w	r2, r4, #51	@ 0x33
 8009e00:	350f      	adds	r5, #15
            pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 8009e02:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 8009e06:	f802 1f01 	strb.w	r1, [r2, #1]!
            if( pcName[ x ] == ( char ) 0x00 )
 8009e0a:	b109      	cbz	r1, 8009e10 <prvInitialiseNewTask.constprop.0+0x38>
        for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
 8009e0c:	42ab      	cmp	r3, r5
 8009e0e:	d1f8      	bne.n	8009e02 <prvInitialiseNewTask.constprop.0+0x2a>
        pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
 8009e10:	2300      	movs	r3, #0
 8009e12:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
    configASSERT( uxPriority < configMAX_PRIORITIES );
 8009e16:	2f37      	cmp	r7, #55	@ 0x37
 8009e18:	d905      	bls.n	8009e26 <prvInitialiseNewTask.constprop.0+0x4e>
 8009e1a:	f7ff fa5b 	bl	80092d4 <ulSetInterruptMask>
 8009e1e:	e7fe      	b.n	8009e1e <prvInitialiseNewTask.constprop.0+0x46>
        pxNewTCB->pcTaskName[ 0 ] = 0x00;
 8009e20:	f884 5034 	strb.w	r5, [r4, #52]	@ 0x34
 8009e24:	e7f7      	b.n	8009e16 <prvInitialiseNewTask.constprop.0+0x3e>
            pxNewTCB->uxMutexesHeld = 0;
 8009e26:	2500      	movs	r5, #0
    pxNewTCB->uxPriority = uxPriority;
 8009e28:	62e7      	str	r7, [r4, #44]	@ 0x2c
            pxNewTCB->uxBasePriority = uxPriority;
 8009e2a:	64e7      	str	r7, [r4, #76]	@ 0x4c
    vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 8009e2c:	1d20      	adds	r0, r4, #4
            pxNewTCB->uxMutexesHeld = 0;
 8009e2e:	6525      	str	r5, [r4, #80]	@ 0x50
    vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 8009e30:	f7ff f91b 	bl	800906a <vListInitialiseItem>
            pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
 8009e34:	3e04      	subs	r6, #4
    vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 8009e36:	f104 0018 	add.w	r0, r4, #24
 8009e3a:	f7ff f916 	bl	800906a <vListInitialiseItem>
    listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8009e3e:	f1c7 0738 	rsb	r7, r7, #56	@ 0x38
            pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
 8009e42:	eb0b 0006 	add.w	r0, fp, r6
                            pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxNewTCB->pxStack, pxTaskCode, pvParameters );
 8009e46:	464b      	mov	r3, r9
 8009e48:	4642      	mov	r2, r8
 8009e4a:	6b21      	ldr	r1, [r4, #48]	@ 0x30
    listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
 8009e4c:	6124      	str	r4, [r4, #16]
    listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8009e4e:	61a7      	str	r7, [r4, #24]
    listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 8009e50:	6264      	str	r4, [r4, #36]	@ 0x24
            pxNewTCB->pxTaskTag = NULL;
 8009e52:	6565      	str	r5, [r4, #84]	@ 0x54
            memset( ( void * ) &( pxNewTCB->ulNotifiedValue[ 0 ] ), 0x00, sizeof( pxNewTCB->ulNotifiedValue ) );
 8009e54:	65a5      	str	r5, [r4, #88]	@ 0x58
            memset( ( void * ) &( pxNewTCB->ucNotifyState[ 0 ] ), 0x00, sizeof( pxNewTCB->ucNotifyState ) );
 8009e56:	f884 505c 	strb.w	r5, [r4, #92]	@ 0x5c
                            pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxNewTCB->pxStack, pxTaskCode, pvParameters );
 8009e5a:	f020 0007 	bic.w	r0, r0, #7
 8009e5e:	f7ff f9b1 	bl	80091c4 <pxPortInitialiseStack>
 8009e62:	6020      	str	r0, [r4, #0]
    if( pxCreatedTask != NULL )
 8009e64:	f1ba 0f00 	cmp.w	sl, #0
 8009e68:	d001      	beq.n	8009e6e <prvInitialiseNewTask.constprop.0+0x96>
        *pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
 8009e6a:	f8ca 4000 	str.w	r4, [sl]
}
 8009e6e:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}

08009e72 <xTaskCreateStatic>:
    {
 8009e72:	b570      	push	{r4, r5, r6, lr}
 8009e74:	b086      	sub	sp, #24
 8009e76:	e9dd 540b 	ldrd	r5, r4, [sp, #44]	@ 0x2c
        configASSERT( puxStackBuffer != NULL );
 8009e7a:	b915      	cbnz	r5, 8009e82 <xTaskCreateStatic+0x10>
 8009e7c:	f7ff fa2a 	bl	80092d4 <ulSetInterruptMask>
 8009e80:	e7fe      	b.n	8009e80 <xTaskCreateStatic+0xe>
        configASSERT( pxTaskBuffer != NULL );
 8009e82:	b914      	cbnz	r4, 8009e8a <xTaskCreateStatic+0x18>
 8009e84:	f7ff fa26 	bl	80092d4 <ulSetInterruptMask>
 8009e88:	e7fe      	b.n	8009e88 <xTaskCreateStatic+0x16>
                volatile size_t xSize = sizeof( StaticTask_t );
 8009e8a:	2660      	movs	r6, #96	@ 0x60
 8009e8c:	9605      	str	r6, [sp, #20]
                configASSERT( xSize == sizeof( TCB_t ) );
 8009e8e:	9e05      	ldr	r6, [sp, #20]
 8009e90:	2e60      	cmp	r6, #96	@ 0x60
 8009e92:	d002      	beq.n	8009e9a <xTaskCreateStatic+0x28>
 8009e94:	f7ff fa1e 	bl	80092d4 <ulSetInterruptMask>
 8009e98:	e7fe      	b.n	8009e98 <xTaskCreateStatic+0x26>
            pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 8009e9a:	6325      	str	r5, [r4, #48]	@ 0x30
                    pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 8009e9c:	2502      	movs	r5, #2
 8009e9e:	f884 505d 	strb.w	r5, [r4, #93]	@ 0x5d
            prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 8009ea2:	ad04      	add	r5, sp, #16
 8009ea4:	9501      	str	r5, [sp, #4]
 8009ea6:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
 8009ea8:	9402      	str	r4, [sp, #8]
 8009eaa:	9500      	str	r5, [sp, #0]
                ( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 8009eac:	9e05      	ldr	r6, [sp, #20]
            prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 8009eae:	f7ff ff93 	bl	8009dd8 <prvInitialiseNewTask.constprop.0>
            prvAddNewTaskToReadyList( pxNewTCB );
 8009eb2:	4620      	mov	r0, r4
 8009eb4:	f7ff fe7a 	bl	8009bac <prvAddNewTaskToReadyList>
    }
 8009eb8:	9804      	ldr	r0, [sp, #16]
 8009eba:	b006      	add	sp, #24
 8009ebc:	bd70      	pop	{r4, r5, r6, pc}

08009ebe <xTaskCreate>:
    {
 8009ebe:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8009ec2:	4607      	mov	r7, r0
 8009ec4:	b085      	sub	sp, #20
                pxStack = pvPortMallocStack( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 8009ec6:	0090      	lsls	r0, r2, #2
    {
 8009ec8:	4688      	mov	r8, r1
 8009eca:	4616      	mov	r6, r2
 8009ecc:	4699      	mov	r9, r3
                pxStack = pvPortMallocStack( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 8009ece:	f000 fd93 	bl	800a9f8 <pvPortMalloc>
                if( pxStack != NULL )
 8009ed2:	4605      	mov	r5, r0
 8009ed4:	b920      	cbnz	r0, 8009ee0 <xTaskCreate+0x22>
            xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 8009ed6:	f04f 30ff 	mov.w	r0, #4294967295
    }
 8009eda:	b005      	add	sp, #20
 8009edc:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
                    pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e9087 !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack, and the first member of TCB_t is always a pointer to the task's stack. */
 8009ee0:	2060      	movs	r0, #96	@ 0x60
 8009ee2:	f000 fd89 	bl	800a9f8 <pvPortMalloc>
                    if( pxNewTCB != NULL )
 8009ee6:	4604      	mov	r4, r0
 8009ee8:	b198      	cbz	r0, 8009f12 <xTaskCreate+0x54>
                    pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
 8009eea:	2300      	movs	r3, #0
 8009eec:	f880 305d 	strb.w	r3, [r0, #93]	@ 0x5d
            prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 8009ef0:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
                        pxNewTCB->pxStack = pxStack;
 8009ef2:	6305      	str	r5, [r0, #48]	@ 0x30
            prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 8009ef4:	9301      	str	r3, [sp, #4]
 8009ef6:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8009ef8:	4632      	mov	r2, r6
 8009efa:	4641      	mov	r1, r8
 8009efc:	9002      	str	r0, [sp, #8]
 8009efe:	9300      	str	r3, [sp, #0]
 8009f00:	4638      	mov	r0, r7
 8009f02:	464b      	mov	r3, r9
 8009f04:	f7ff ff68 	bl	8009dd8 <prvInitialiseNewTask.constprop.0>
            prvAddNewTaskToReadyList( pxNewTCB );
 8009f08:	4620      	mov	r0, r4
 8009f0a:	f7ff fe4f 	bl	8009bac <prvAddNewTaskToReadyList>
            xReturn = pdPASS;
 8009f0e:	2001      	movs	r0, #1
 8009f10:	e7e3      	b.n	8009eda <xTaskCreate+0x1c>
                        vPortFreeStack( pxStack );
 8009f12:	4628      	mov	r0, r5
 8009f14:	f000 fe00 	bl	800ab18 <vPortFree>
        if( pxNewTCB != NULL )
 8009f18:	e7dd      	b.n	8009ed6 <xTaskCreate+0x18>
	...

08009f1c <vTaskSuspendAll>:
    ++uxSchedulerSuspended;
 8009f1c:	4a02      	ldr	r2, [pc, #8]	@ (8009f28 <vTaskSuspendAll+0xc>)
 8009f1e:	6813      	ldr	r3, [r2, #0]
 8009f20:	3301      	adds	r3, #1
 8009f22:	6013      	str	r3, [r2, #0]
}
 8009f24:	4770      	bx	lr
 8009f26:	bf00      	nop
 8009f28:	2006f1d0 	.word	0x2006f1d0

08009f2c <xTaskGetTickCount>:
        xTicks = xTickCount;
 8009f2c:	4b01      	ldr	r3, [pc, #4]	@ (8009f34 <xTaskGetTickCount+0x8>)
 8009f2e:	6818      	ldr	r0, [r3, #0]
}
 8009f30:	4770      	bx	lr
 8009f32:	bf00      	nop
 8009f34:	2006f1f0 	.word	0x2006f1f0

08009f38 <xTaskIncrementTick>:
{
 8009f38:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8009f3c:	4b4b      	ldr	r3, [pc, #300]	@ (800a06c <xTaskIncrementTick+0x134>)
 8009f3e:	681b      	ldr	r3, [r3, #0]
 8009f40:	2b00      	cmp	r3, #0
 8009f42:	f040 808d 	bne.w	800a060 <xTaskIncrementTick+0x128>
        const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
 8009f46:	4b4a      	ldr	r3, [pc, #296]	@ (800a070 <xTaskIncrementTick+0x138>)
 8009f48:	681c      	ldr	r4, [r3, #0]
 8009f4a:	3401      	adds	r4, #1
        xTickCount = xConstTickCount;
 8009f4c:	601c      	str	r4, [r3, #0]
        if( xConstTickCount == ( TickType_t ) 0U ) /*lint !e774 'if' does not always evaluate to false as it is looking for an overflow. */
 8009f4e:	b98c      	cbnz	r4, 8009f74 <xTaskIncrementTick+0x3c>
            taskSWITCH_DELAYED_LISTS();
 8009f50:	4b48      	ldr	r3, [pc, #288]	@ (800a074 <xTaskIncrementTick+0x13c>)
 8009f52:	681a      	ldr	r2, [r3, #0]
 8009f54:	6812      	ldr	r2, [r2, #0]
 8009f56:	b112      	cbz	r2, 8009f5e <xTaskIncrementTick+0x26>
 8009f58:	f7ff f9bc 	bl	80092d4 <ulSetInterruptMask>
 8009f5c:	e7fe      	b.n	8009f5c <xTaskIncrementTick+0x24>
 8009f5e:	4a46      	ldr	r2, [pc, #280]	@ (800a078 <xTaskIncrementTick+0x140>)
 8009f60:	6819      	ldr	r1, [r3, #0]
 8009f62:	6810      	ldr	r0, [r2, #0]
 8009f64:	6018      	str	r0, [r3, #0]
 8009f66:	6011      	str	r1, [r2, #0]
 8009f68:	4a44      	ldr	r2, [pc, #272]	@ (800a07c <xTaskIncrementTick+0x144>)
 8009f6a:	6813      	ldr	r3, [r2, #0]
 8009f6c:	3301      	adds	r3, #1
 8009f6e:	6013      	str	r3, [r2, #0]
 8009f70:	f7ff fee0 	bl	8009d34 <prvResetNextTaskUnblockTime>
        if( xConstTickCount >= xNextTaskUnblockTime )
 8009f74:	f8df c114 	ldr.w	ip, [pc, #276]	@ 800a08c <xTaskIncrementTick+0x154>
    BaseType_t xSwitchRequired = pdFALSE;
 8009f78:	2000      	movs	r0, #0
        if( xConstTickCount >= xNextTaskUnblockTime )
 8009f7a:	f8dc 3000 	ldr.w	r3, [ip]
 8009f7e:	4a40      	ldr	r2, [pc, #256]	@ (800a080 <xTaskIncrementTick+0x148>)
 8009f80:	429c      	cmp	r4, r3
 8009f82:	f8df 810c 	ldr.w	r8, [pc, #268]	@ 800a090 <xTaskIncrementTick+0x158>
 8009f86:	d20f      	bcs.n	8009fa8 <xTaskIncrementTick+0x70>
                if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
 8009f88:	2114      	movs	r1, #20
 8009f8a:	f8d8 3000 	ldr.w	r3, [r8]
 8009f8e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8009f90:	434b      	muls	r3, r1
 8009f92:	58d3      	ldr	r3, [r2, r3]
                    xSwitchRequired = pdTRUE;
 8009f94:	2b02      	cmp	r3, #2
                if( xYieldPending != pdFALSE )
 8009f96:	4b3b      	ldr	r3, [pc, #236]	@ (800a084 <xTaskIncrementTick+0x14c>)
                    xSwitchRequired = pdTRUE;
 8009f98:	bf28      	it	cs
 8009f9a:	2001      	movcs	r0, #1
                if( xYieldPending != pdFALSE )
 8009f9c:	681b      	ldr	r3, [r3, #0]
                    xSwitchRequired = pdTRUE;
 8009f9e:	2b00      	cmp	r3, #0
 8009fa0:	bf18      	it	ne
 8009fa2:	2001      	movne	r0, #1
}
 8009fa4:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
                if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 8009fa8:	f8df e0c8 	ldr.w	lr, [pc, #200]	@ 800a074 <xTaskIncrementTick+0x13c>
                    prvAddTaskToReadyList( pxTCB );
 8009fac:	f8df 90e4 	ldr.w	r9, [pc, #228]	@ 800a094 <xTaskIncrementTick+0x15c>
                if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 8009fb0:	f8de 3000 	ldr.w	r3, [lr]
 8009fb4:	681b      	ldr	r3, [r3, #0]
 8009fb6:	b923      	cbnz	r3, 8009fc2 <xTaskIncrementTick+0x8a>
                    xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8009fb8:	f04f 33ff 	mov.w	r3, #4294967295
 8009fbc:	f8cc 3000 	str.w	r3, [ip]
                    break;
 8009fc0:	e7e2      	b.n	8009f88 <xTaskIncrementTick+0x50>
                    pxTCB = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009fc2:	f8de 3000 	ldr.w	r3, [lr]
 8009fc6:	68db      	ldr	r3, [r3, #12]
 8009fc8:	68db      	ldr	r3, [r3, #12]
                    xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 8009fca:	6859      	ldr	r1, [r3, #4]
                    if( xConstTickCount < xItemValue )
 8009fcc:	428c      	cmp	r4, r1
 8009fce:	d202      	bcs.n	8009fd6 <xTaskIncrementTick+0x9e>
                        xNextTaskUnblockTime = xItemValue;
 8009fd0:	f8cc 1000 	str.w	r1, [ip]
                        break; /*lint !e9011 Code structure here is deemed easier to understand with multiple breaks. */
 8009fd4:	e7d8      	b.n	8009f88 <xTaskIncrementTick+0x50>
                    listREMOVE_ITEM( &( pxTCB->xStateListItem ) );
 8009fd6:	695d      	ldr	r5, [r3, #20]
 8009fd8:	e9d3 1602 	ldrd	r1, r6, [r3, #8]
 8009fdc:	608e      	str	r6, [r1, #8]
 8009fde:	6071      	str	r1, [r6, #4]
 8009fe0:	6869      	ldr	r1, [r5, #4]
 8009fe2:	1d1f      	adds	r7, r3, #4
 8009fe4:	42b9      	cmp	r1, r7
 8009fe6:	f04f 0100 	mov.w	r1, #0
 8009fea:	bf08      	it	eq
 8009fec:	606e      	streq	r6, [r5, #4]
 8009fee:	6159      	str	r1, [r3, #20]
 8009ff0:	6829      	ldr	r1, [r5, #0]
 8009ff2:	3901      	subs	r1, #1
 8009ff4:	6029      	str	r1, [r5, #0]
                    if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
 8009ff6:	6a9d      	ldr	r5, [r3, #40]	@ 0x28
 8009ff8:	b17d      	cbz	r5, 800a01a <xTaskIncrementTick+0xe2>
                        listREMOVE_ITEM( &( pxTCB->xEventListItem ) );
 8009ffa:	e9d3 1607 	ldrd	r1, r6, [r3, #28]
 8009ffe:	608e      	str	r6, [r1, #8]
 800a000:	6071      	str	r1, [r6, #4]
 800a002:	6869      	ldr	r1, [r5, #4]
 800a004:	f103 0a18 	add.w	sl, r3, #24
 800a008:	4551      	cmp	r1, sl
 800a00a:	f04f 0100 	mov.w	r1, #0
 800a00e:	bf08      	it	eq
 800a010:	606e      	streq	r6, [r5, #4]
 800a012:	6299      	str	r1, [r3, #40]	@ 0x28
 800a014:	6829      	ldr	r1, [r5, #0]
 800a016:	3901      	subs	r1, #1
 800a018:	6029      	str	r1, [r5, #0]
                    prvAddTaskToReadyList( pxTCB );
 800a01a:	6ad9      	ldr	r1, [r3, #44]	@ 0x2c
 800a01c:	f8d9 5000 	ldr.w	r5, [r9]
 800a020:	42a9      	cmp	r1, r5
 800a022:	f04f 0514 	mov.w	r5, #20
 800a026:	fb05 f501 	mul.w	r5, r5, r1
 800a02a:	eb02 0a05 	add.w	sl, r2, r5
 800a02e:	f8da 6004 	ldr.w	r6, [sl, #4]
 800a032:	bf88      	it	hi
 800a034:	f8c9 1000 	strhi.w	r1, [r9]
 800a038:	f8d6 b008 	ldr.w	fp, [r6, #8]
 800a03c:	609e      	str	r6, [r3, #8]
 800a03e:	f8c3 b00c 	str.w	fp, [r3, #12]
 800a042:	f8cb 7004 	str.w	r7, [fp, #4]
 800a046:	60b7      	str	r7, [r6, #8]
 800a048:	f8c3 a014 	str.w	sl, [r3, #20]
 800a04c:	5953      	ldr	r3, [r2, r5]
 800a04e:	3301      	adds	r3, #1
 800a050:	5153      	str	r3, [r2, r5]
                            if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 800a052:	f8d8 3000 	ldr.w	r3, [r8]
 800a056:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
                                xSwitchRequired = pdTRUE;
 800a058:	4299      	cmp	r1, r3
 800a05a:	bf28      	it	cs
 800a05c:	2001      	movcs	r0, #1
 800a05e:	e7a7      	b.n	8009fb0 <xTaskIncrementTick+0x78>
        ++xPendedTicks;
 800a060:	4a09      	ldr	r2, [pc, #36]	@ (800a088 <xTaskIncrementTick+0x150>)
    BaseType_t xSwitchRequired = pdFALSE;
 800a062:	2000      	movs	r0, #0
        ++xPendedTicks;
 800a064:	6813      	ldr	r3, [r2, #0]
 800a066:	3301      	adds	r3, #1
 800a068:	6013      	str	r3, [r2, #0]
 800a06a:	e79b      	b.n	8009fa4 <xTaskIncrementTick+0x6c>
 800a06c:	2006f1d0 	.word	0x2006f1d0
 800a070:	2006f1f0 	.word	0x2006f1f0
 800a074:	2006f23c 	.word	0x2006f23c
 800a078:	2006f238 	.word	0x2006f238
 800a07c:	2006f1dc 	.word	0x2006f1dc
 800a080:	2006f268 	.word	0x2006f268
 800a084:	2006f1e0 	.word	0x2006f1e0
 800a088:	2006f1e4 	.word	0x2006f1e4
 800a08c:	2006f1d4 	.word	0x2006f1d4
 800a090:	2006f6c8 	.word	0x2006f6c8
 800a094:	2006f1ec 	.word	0x2006f1ec

0800a098 <xTaskResumeAll>:
{
 800a098:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    configASSERT( uxSchedulerSuspended );
 800a09c:	4c3d      	ldr	r4, [pc, #244]	@ (800a194 <xTaskResumeAll+0xfc>)
 800a09e:	6823      	ldr	r3, [r4, #0]
 800a0a0:	b913      	cbnz	r3, 800a0a8 <xTaskResumeAll+0x10>
 800a0a2:	f7ff f917 	bl	80092d4 <ulSetInterruptMask>
 800a0a6:	e7fe      	b.n	800a0a6 <xTaskResumeAll+0xe>
    taskENTER_CRITICAL();
 800a0a8:	f7ff f83c 	bl	8009124 <vPortEnterCritical>
        --uxSchedulerSuspended;
 800a0ac:	6823      	ldr	r3, [r4, #0]
 800a0ae:	3b01      	subs	r3, #1
 800a0b0:	6023      	str	r3, [r4, #0]
        if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800a0b2:	6823      	ldr	r3, [r4, #0]
 800a0b4:	b12b      	cbz	r3, 800a0c2 <xTaskResumeAll+0x2a>
    BaseType_t xAlreadyYielded = pdFALSE;
 800a0b6:	2400      	movs	r4, #0
    taskEXIT_CRITICAL();
 800a0b8:	f7ff f842 	bl	8009140 <vPortExitCritical>
}
 800a0bc:	4620      	mov	r0, r4
 800a0be:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
            if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
 800a0c2:	4a35      	ldr	r2, [pc, #212]	@ (800a198 <xTaskResumeAll+0x100>)
 800a0c4:	6812      	ldr	r2, [r2, #0]
 800a0c6:	2a00      	cmp	r2, #0
 800a0c8:	d0f5      	beq.n	800a0b6 <xTaskResumeAll+0x1e>
                    prvAddTaskToReadyList( pxTCB );
 800a0ca:	f04f 0c14 	mov.w	ip, #20
                        xYieldPending = pdTRUE;
 800a0ce:	f04f 0901 	mov.w	r9, #1
                while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 800a0d2:	4e32      	ldr	r6, [pc, #200]	@ (800a19c <xTaskResumeAll+0x104>)
                    prvAddTaskToReadyList( pxTCB );
 800a0d4:	4f32      	ldr	r7, [pc, #200]	@ (800a1a0 <xTaskResumeAll+0x108>)
 800a0d6:	4933      	ldr	r1, [pc, #204]	@ (800a1a4 <xTaskResumeAll+0x10c>)
                    if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 800a0d8:	f8df e0d4 	ldr.w	lr, [pc, #212]	@ 800a1b0 <xTaskResumeAll+0x118>
                        xYieldPending = pdTRUE;
 800a0dc:	f8df 80cc 	ldr.w	r8, [pc, #204]	@ 800a1ac <xTaskResumeAll+0x114>
 800a0e0:	e03e      	b.n	800a160 <xTaskResumeAll+0xc8>
                    pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800a0e2:	68f3      	ldr	r3, [r6, #12]
 800a0e4:	68db      	ldr	r3, [r3, #12]
                    listREMOVE_ITEM( &( pxTCB->xEventListItem ) );
 800a0e6:	6a98      	ldr	r0, [r3, #40]	@ 0x28
 800a0e8:	e9d3 2407 	ldrd	r2, r4, [r3, #28]
 800a0ec:	6094      	str	r4, [r2, #8]
 800a0ee:	6062      	str	r2, [r4, #4]
 800a0f0:	6842      	ldr	r2, [r0, #4]
 800a0f2:	f103 0518 	add.w	r5, r3, #24
 800a0f6:	42aa      	cmp	r2, r5
 800a0f8:	f04f 0200 	mov.w	r2, #0
 800a0fc:	bf08      	it	eq
 800a0fe:	6044      	streq	r4, [r0, #4]
 800a100:	629a      	str	r2, [r3, #40]	@ 0x28
 800a102:	6802      	ldr	r2, [r0, #0]
 800a104:	3a01      	subs	r2, #1
 800a106:	6002      	str	r2, [r0, #0]
                    listREMOVE_ITEM( &( pxTCB->xStateListItem ) );
 800a108:	6958      	ldr	r0, [r3, #20]
 800a10a:	e9d3 2402 	ldrd	r2, r4, [r3, #8]
 800a10e:	6094      	str	r4, [r2, #8]
 800a110:	6062      	str	r2, [r4, #4]
 800a112:	6842      	ldr	r2, [r0, #4]
 800a114:	1d1d      	adds	r5, r3, #4
 800a116:	42aa      	cmp	r2, r5
 800a118:	6802      	ldr	r2, [r0, #0]
 800a11a:	bf08      	it	eq
 800a11c:	6044      	streq	r4, [r0, #4]
 800a11e:	3a01      	subs	r2, #1
 800a120:	6002      	str	r2, [r0, #0]
                    prvAddTaskToReadyList( pxTCB );
 800a122:	6838      	ldr	r0, [r7, #0]
 800a124:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 800a126:	4282      	cmp	r2, r0
 800a128:	fb0c f002 	mul.w	r0, ip, r2
 800a12c:	eb01 0a00 	add.w	sl, r1, r0
 800a130:	f8da 4004 	ldr.w	r4, [sl, #4]
 800a134:	bf88      	it	hi
 800a136:	603a      	strhi	r2, [r7, #0]
 800a138:	f8d4 b008 	ldr.w	fp, [r4, #8]
 800a13c:	609c      	str	r4, [r3, #8]
 800a13e:	f8c3 b00c 	str.w	fp, [r3, #12]
 800a142:	f8cb 5004 	str.w	r5, [fp, #4]
 800a146:	60a5      	str	r5, [r4, #8]
 800a148:	580c      	ldr	r4, [r1, r0]
 800a14a:	f8c3 a014 	str.w	sl, [r3, #20]
 800a14e:	3401      	adds	r4, #1
 800a150:	500c      	str	r4, [r1, r0]
                    if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 800a152:	f8de 0000 	ldr.w	r0, [lr]
 800a156:	6ac0      	ldr	r0, [r0, #44]	@ 0x2c
 800a158:	4282      	cmp	r2, r0
 800a15a:	d301      	bcc.n	800a160 <xTaskResumeAll+0xc8>
                        xYieldPending = pdTRUE;
 800a15c:	f8c8 9000 	str.w	r9, [r8]
                while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 800a160:	6832      	ldr	r2, [r6, #0]
 800a162:	2a00      	cmp	r2, #0
 800a164:	d1bd      	bne.n	800a0e2 <xTaskResumeAll+0x4a>
                if( pxTCB != NULL )
 800a166:	b10b      	cbz	r3, 800a16c <xTaskResumeAll+0xd4>
                    prvResetNextTaskUnblockTime();
 800a168:	f7ff fde4 	bl	8009d34 <prvResetNextTaskUnblockTime>
                    TickType_t xPendedCounts = xPendedTicks; /* Non-volatile copy. */
 800a16c:	4d0e      	ldr	r5, [pc, #56]	@ (800a1a8 <xTaskResumeAll+0x110>)
 800a16e:	682c      	ldr	r4, [r5, #0]
                    if( xPendedCounts > ( TickType_t ) 0U )
 800a170:	b144      	cbz	r4, 800a184 <xTaskResumeAll+0xec>
                                xYieldPending = pdTRUE;
 800a172:	2701      	movs	r7, #1
 800a174:	4e0d      	ldr	r6, [pc, #52]	@ (800a1ac <xTaskResumeAll+0x114>)
                            if( xTaskIncrementTick() != pdFALSE )
 800a176:	f7ff fedf 	bl	8009f38 <xTaskIncrementTick>
 800a17a:	b100      	cbz	r0, 800a17e <xTaskResumeAll+0xe6>
                                xYieldPending = pdTRUE;
 800a17c:	6037      	str	r7, [r6, #0]
                        } while( xPendedCounts > ( TickType_t ) 0U );
 800a17e:	3c01      	subs	r4, #1
 800a180:	d1f9      	bne.n	800a176 <xTaskResumeAll+0xde>
                        xPendedTicks = 0;
 800a182:	602c      	str	r4, [r5, #0]
                if( xYieldPending != pdFALSE )
 800a184:	4b09      	ldr	r3, [pc, #36]	@ (800a1ac <xTaskResumeAll+0x114>)
 800a186:	681b      	ldr	r3, [r3, #0]
 800a188:	2b00      	cmp	r3, #0
 800a18a:	d094      	beq.n	800a0b6 <xTaskResumeAll+0x1e>
                    taskYIELD_IF_USING_PREEMPTION();
 800a18c:	f7fe ffbe 	bl	800910c <vPortYield>
                            xAlreadyYielded = pdTRUE;
 800a190:	2401      	movs	r4, #1
 800a192:	e791      	b.n	800a0b8 <xTaskResumeAll+0x20>
 800a194:	2006f1d0 	.word	0x2006f1d0
 800a198:	2006f1f4 	.word	0x2006f1f4
 800a19c:	2006f224 	.word	0x2006f224
 800a1a0:	2006f1ec 	.word	0x2006f1ec
 800a1a4:	2006f268 	.word	0x2006f268
 800a1a8:	2006f1e4 	.word	0x2006f1e4
 800a1ac:	2006f1e0 	.word	0x2006f1e0
 800a1b0:	2006f6c8 	.word	0x2006f6c8

0800a1b4 <vTaskDelay>:
    {
 800a1b4:	b508      	push	{r3, lr}
        if( xTicksToDelay > ( TickType_t ) 0U )
 800a1b6:	b918      	cbnz	r0, 800a1c0 <vTaskDelay+0xc>
    }
 800a1b8:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
            portYIELD_WITHIN_API();
 800a1bc:	f7fe bfa6 	b.w	800910c <vPortYield>
            configASSERT( uxSchedulerSuspended == 0 );
 800a1c0:	4b07      	ldr	r3, [pc, #28]	@ (800a1e0 <vTaskDelay+0x2c>)
 800a1c2:	6819      	ldr	r1, [r3, #0]
 800a1c4:	b111      	cbz	r1, 800a1cc <vTaskDelay+0x18>
 800a1c6:	f7ff f885 	bl	80092d4 <ulSetInterruptMask>
 800a1ca:	e7fe      	b.n	800a1ca <vTaskDelay+0x16>
            vTaskSuspendAll();
 800a1cc:	f7ff fea6 	bl	8009f1c <vTaskSuspendAll>
                prvAddCurrentTaskToDelayedList( xTicksToDelay, pdFALSE );
 800a1d0:	f7ff fd6c 	bl	8009cac <prvAddCurrentTaskToDelayedList>
            xAlreadyYielded = xTaskResumeAll();
 800a1d4:	f7ff ff60 	bl	800a098 <xTaskResumeAll>
        if( xAlreadyYielded == pdFALSE )
 800a1d8:	2800      	cmp	r0, #0
 800a1da:	d0ed      	beq.n	800a1b8 <vTaskDelay+0x4>
    }
 800a1dc:	bd08      	pop	{r3, pc}
 800a1de:	bf00      	nop
 800a1e0:	2006f1d0 	.word	0x2006f1d0

0800a1e4 <vTaskSetApplicationTaskTag>:
    {
 800a1e4:	b538      	push	{r3, r4, r5, lr}
 800a1e6:	460d      	mov	r5, r1
        if( xTask == NULL )
 800a1e8:	4604      	mov	r4, r0
 800a1ea:	b908      	cbnz	r0, 800a1f0 <vTaskSetApplicationTaskTag+0xc>
            xTCB = ( TCB_t * ) pxCurrentTCB;
 800a1ec:	4b04      	ldr	r3, [pc, #16]	@ (800a200 <vTaskSetApplicationTaskTag+0x1c>)
 800a1ee:	681c      	ldr	r4, [r3, #0]
        taskENTER_CRITICAL();
 800a1f0:	f7fe ff98 	bl	8009124 <vPortEnterCritical>
            xTCB->pxTaskTag = pxHookFunction;
 800a1f4:	6565      	str	r5, [r4, #84]	@ 0x54
    }
 800a1f6:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        taskEXIT_CRITICAL();
 800a1fa:	f7fe bfa1 	b.w	8009140 <vPortExitCritical>
 800a1fe:	bf00      	nop
 800a200:	2006f6c8 	.word	0x2006f6c8

0800a204 <xTaskCallApplicationTaskHook>:
    {
 800a204:	4603      	mov	r3, r0
 800a206:	4608      	mov	r0, r1
        if( xTask == NULL )
 800a208:	b90b      	cbnz	r3, 800a20e <xTaskCallApplicationTaskHook+0xa>
            xTCB = pxCurrentTCB;
 800a20a:	4b03      	ldr	r3, [pc, #12]	@ (800a218 <xTaskCallApplicationTaskHook+0x14>)
 800a20c:	681b      	ldr	r3, [r3, #0]
        if( xTCB->pxTaskTag != NULL )
 800a20e:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 800a210:	b103      	cbz	r3, 800a214 <xTaskCallApplicationTaskHook+0x10>
            xReturn = xTCB->pxTaskTag( pvParameter );
 800a212:	4718      	bx	r3
    }
 800a214:	4618      	mov	r0, r3
 800a216:	4770      	bx	lr
 800a218:	2006f6c8 	.word	0x2006f6c8

0800a21c <vTaskStartScheduler>:
{
 800a21c:	b530      	push	{r4, r5, lr}
            StaticTask_t * pxIdleTaskTCBBuffer = NULL;
 800a21e:	2400      	movs	r4, #0
{
 800a220:	b089      	sub	sp, #36	@ 0x24
            vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 800a222:	aa07      	add	r2, sp, #28
 800a224:	a906      	add	r1, sp, #24
 800a226:	a805      	add	r0, sp, #20
            StackType_t * pxIdleTaskStackBuffer = NULL;
 800a228:	e9cd 4405 	strd	r4, r4, [sp, #20]
            vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 800a22c:	f7fe fefa 	bl	8009024 <vApplicationGetIdleTaskMemory>
            xIdleTaskHandle = xTaskCreateStatic( prvIdleTask,
 800a230:	9b05      	ldr	r3, [sp, #20]
 800a232:	9a07      	ldr	r2, [sp, #28]
 800a234:	9302      	str	r3, [sp, #8]
 800a236:	9b06      	ldr	r3, [sp, #24]
 800a238:	4913      	ldr	r1, [pc, #76]	@ (800a288 <vTaskStartScheduler+0x6c>)
 800a23a:	e9cd 4300 	strd	r4, r3, [sp]
 800a23e:	4813      	ldr	r0, [pc, #76]	@ (800a28c <vTaskStartScheduler+0x70>)
 800a240:	4623      	mov	r3, r4
 800a242:	f7ff fe16 	bl	8009e72 <xTaskCreateStatic>
            if( xIdleTaskHandle != NULL )
 800a246:	b1a8      	cbz	r0, 800a274 <vTaskStartScheduler+0x58>
                xReturn = xTimerCreateTimerTask();
 800a248:	f000 fb84 	bl	800a954 <xTimerCreateTimerTask>
    if( xReturn == pdPASS )
 800a24c:	2801      	cmp	r0, #1
                xReturn = xTimerCreateTimerTask();
 800a24e:	4605      	mov	r5, r0
    if( xReturn == pdPASS )
 800a250:	d114      	bne.n	800a27c <vTaskStartScheduler+0x60>
        portDISABLE_INTERRUPTS();
 800a252:	f7ff f83f 	bl	80092d4 <ulSetInterruptMask>
        xNextTaskUnblockTime = portMAX_DELAY;
 800a256:	f04f 32ff 	mov.w	r2, #4294967295
 800a25a:	4b0d      	ldr	r3, [pc, #52]	@ (800a290 <vTaskStartScheduler+0x74>)
        traceTASK_SWITCHED_IN();
 800a25c:	4621      	mov	r1, r4
        xNextTaskUnblockTime = portMAX_DELAY;
 800a25e:	601a      	str	r2, [r3, #0]
        xSchedulerRunning = pdTRUE;
 800a260:	4b0c      	ldr	r3, [pc, #48]	@ (800a294 <vTaskStartScheduler+0x78>)
 800a262:	601d      	str	r5, [r3, #0]
        xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
 800a264:	4b0c      	ldr	r3, [pc, #48]	@ (800a298 <vTaskStartScheduler+0x7c>)
 800a266:	601c      	str	r4, [r3, #0]
        traceTASK_SWITCHED_IN();
 800a268:	4b0c      	ldr	r3, [pc, #48]	@ (800a29c <vTaskStartScheduler+0x80>)
 800a26a:	6818      	ldr	r0, [r3, #0]
 800a26c:	f7ff ffca 	bl	800a204 <xTaskCallApplicationTaskHook>
        if( xPortStartScheduler() != pdFALSE )
 800a270:	f7fe ffe0 	bl	8009234 <xPortStartScheduler>
    ( void ) uxTopUsedPriority;
 800a274:	4b0a      	ldr	r3, [pc, #40]	@ (800a2a0 <vTaskStartScheduler+0x84>)
 800a276:	681b      	ldr	r3, [r3, #0]
}
 800a278:	b009      	add	sp, #36	@ 0x24
 800a27a:	bd30      	pop	{r4, r5, pc}
        configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
 800a27c:	3501      	adds	r5, #1
 800a27e:	d1f9      	bne.n	800a274 <vTaskStartScheduler+0x58>
 800a280:	f7ff f828 	bl	80092d4 <ulSetInterruptMask>
 800a284:	e7fe      	b.n	800a284 <vTaskStartScheduler+0x68>
 800a286:	bf00      	nop
 800a288:	08035b90 	.word	0x08035b90
 800a28c:	08009d85 	.word	0x08009d85
 800a290:	2006f1d4 	.word	0x2006f1d4
 800a294:	2006f1e8 	.word	0x2006f1e8
 800a298:	2006f1f0 	.word	0x2006f1f0
 800a29c:	2006f6c8 	.word	0x2006f6c8
 800a2a0:	2000005c 	.word	0x2000005c

0800a2a4 <vTaskSwitchContext>:
{
 800a2a4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 800a2a6:	4b19      	ldr	r3, [pc, #100]	@ (800a30c <vTaskSwitchContext+0x68>)
 800a2a8:	681a      	ldr	r2, [r3, #0]
 800a2aa:	4b19      	ldr	r3, [pc, #100]	@ (800a310 <vTaskSwitchContext+0x6c>)
 800a2ac:	b112      	cbz	r2, 800a2b4 <vTaskSwitchContext+0x10>
        xYieldPending = pdTRUE;
 800a2ae:	2201      	movs	r2, #1
 800a2b0:	601a      	str	r2, [r3, #0]
}
 800a2b2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800a2b4:	2714      	movs	r7, #20
        traceTASK_SWITCHED_OUT();
 800a2b6:	4c17      	ldr	r4, [pc, #92]	@ (800a314 <vTaskSwitchContext+0x70>)
        xYieldPending = pdFALSE;
 800a2b8:	601a      	str	r2, [r3, #0]
        taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800a2ba:	4e17      	ldr	r6, [pc, #92]	@ (800a318 <vTaskSwitchContext+0x74>)
        traceTASK_SWITCHED_OUT();
 800a2bc:	2101      	movs	r1, #1
 800a2be:	6820      	ldr	r0, [r4, #0]
 800a2c0:	f7ff ffa0 	bl	800a204 <xTaskCallApplicationTaskHook>
        taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800a2c4:	6832      	ldr	r2, [r6, #0]
 800a2c6:	4915      	ldr	r1, [pc, #84]	@ (800a31c <vTaskSwitchContext+0x78>)
 800a2c8:	fb07 f302 	mul.w	r3, r7, r2
 800a2cc:	58cd      	ldr	r5, [r1, r3]
 800a2ce:	18c8      	adds	r0, r1, r3
 800a2d0:	b1b5      	cbz	r5, 800a300 <vTaskSwitchContext+0x5c>
 800a2d2:	6845      	ldr	r5, [r0, #4]
 800a2d4:	3308      	adds	r3, #8
 800a2d6:	686d      	ldr	r5, [r5, #4]
 800a2d8:	440b      	add	r3, r1
 800a2da:	429d      	cmp	r5, r3
 800a2dc:	bf08      	it	eq
 800a2de:	686b      	ldreq	r3, [r5, #4]
 800a2e0:	6045      	str	r5, [r0, #4]
 800a2e2:	bf08      	it	eq
 800a2e4:	6043      	streq	r3, [r0, #4]
 800a2e6:	2314      	movs	r3, #20
 800a2e8:	fb03 1102 	mla	r1, r3, r2, r1
 800a2ec:	684b      	ldr	r3, [r1, #4]
        traceTASK_SWITCHED_IN();
 800a2ee:	2100      	movs	r1, #0
        taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800a2f0:	68db      	ldr	r3, [r3, #12]
 800a2f2:	6023      	str	r3, [r4, #0]
 800a2f4:	6032      	str	r2, [r6, #0]
        traceTASK_SWITCHED_IN();
 800a2f6:	6820      	ldr	r0, [r4, #0]
}
 800a2f8:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
        traceTASK_SWITCHED_IN();
 800a2fc:	f7ff bf82 	b.w	800a204 <xTaskCallApplicationTaskHook>
        taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800a300:	b912      	cbnz	r2, 800a308 <vTaskSwitchContext+0x64>
 800a302:	f7fe ffe7 	bl	80092d4 <ulSetInterruptMask>
 800a306:	e7fe      	b.n	800a306 <vTaskSwitchContext+0x62>
 800a308:	3a01      	subs	r2, #1
 800a30a:	e7dd      	b.n	800a2c8 <vTaskSwitchContext+0x24>
 800a30c:	2006f1d0 	.word	0x2006f1d0
 800a310:	2006f1e0 	.word	0x2006f1e0
 800a314:	2006f6c8 	.word	0x2006f6c8
 800a318:	2006f1ec 	.word	0x2006f1ec
 800a31c:	2006f268 	.word	0x2006f268

0800a320 <vTaskPlaceOnEventList>:
{
 800a320:	b510      	push	{r4, lr}
 800a322:	460c      	mov	r4, r1
    configASSERT( pxEventList );
 800a324:	b910      	cbnz	r0, 800a32c <vTaskPlaceOnEventList+0xc>
 800a326:	f7fe ffd5 	bl	80092d4 <ulSetInterruptMask>
 800a32a:	e7fe      	b.n	800a32a <vTaskPlaceOnEventList+0xa>
    vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 800a32c:	4b05      	ldr	r3, [pc, #20]	@ (800a344 <vTaskPlaceOnEventList+0x24>)
 800a32e:	6819      	ldr	r1, [r3, #0]
 800a330:	3118      	adds	r1, #24
 800a332:	f7fe fe9d 	bl	8009070 <vListInsert>
    prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
 800a336:	4620      	mov	r0, r4
}
 800a338:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
 800a33c:	2101      	movs	r1, #1
 800a33e:	f7ff bcb5 	b.w	8009cac <prvAddCurrentTaskToDelayedList>
 800a342:	bf00      	nop
 800a344:	2006f6c8 	.word	0x2006f6c8

0800a348 <vTaskPlaceOnEventListRestricted>:
    {
 800a348:	b570      	push	{r4, r5, r6, lr}
 800a34a:	460c      	mov	r4, r1
 800a34c:	4611      	mov	r1, r2
        configASSERT( pxEventList );
 800a34e:	b910      	cbnz	r0, 800a356 <vTaskPlaceOnEventListRestricted+0xe>
 800a350:	f7fe ffc0 	bl	80092d4 <ulSetInterruptMask>
 800a354:	e7fe      	b.n	800a354 <vTaskPlaceOnEventListRestricted+0xc>
        listINSERT_END( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 800a356:	4b0f      	ldr	r3, [pc, #60]	@ (800a394 <vTaskPlaceOnEventListRestricted+0x4c>)
 800a358:	6842      	ldr	r2, [r0, #4]
 800a35a:	681d      	ldr	r5, [r3, #0]
 800a35c:	6896      	ldr	r6, [r2, #8]
 800a35e:	61ea      	str	r2, [r5, #28]
 800a360:	681d      	ldr	r5, [r3, #0]
            xTicksToWait = portMAX_DELAY;
 800a362:	2900      	cmp	r1, #0
        listINSERT_END( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 800a364:	622e      	str	r6, [r5, #32]
 800a366:	681d      	ldr	r5, [r3, #0]
 800a368:	f105 0518 	add.w	r5, r5, #24
 800a36c:	6075      	str	r5, [r6, #4]
 800a36e:	681d      	ldr	r5, [r3, #0]
 800a370:	681b      	ldr	r3, [r3, #0]
 800a372:	f105 0518 	add.w	r5, r5, #24
 800a376:	6095      	str	r5, [r2, #8]
 800a378:	6298      	str	r0, [r3, #40]	@ 0x28
 800a37a:	6803      	ldr	r3, [r0, #0]
 800a37c:	f103 0301 	add.w	r3, r3, #1
 800a380:	6003      	str	r3, [r0, #0]
        prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
 800a382:	bf08      	it	eq
 800a384:	4620      	moveq	r0, r4
    }
 800a386:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
 800a38a:	bf18      	it	ne
 800a38c:	f04f 30ff 	movne.w	r0, #4294967295
 800a390:	f7ff bc8c 	b.w	8009cac <prvAddCurrentTaskToDelayedList>
 800a394:	2006f6c8 	.word	0x2006f6c8

0800a398 <xTaskRemoveFromEventList>:
{
 800a398:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800a39a:	68c3      	ldr	r3, [r0, #12]
 800a39c:	68db      	ldr	r3, [r3, #12]
    configASSERT( pxUnblockedTCB );
 800a39e:	b913      	cbnz	r3, 800a3a6 <xTaskRemoveFromEventList+0xe>
 800a3a0:	f7fe ff98 	bl	80092d4 <ulSetInterruptMask>
 800a3a4:	e7fe      	b.n	800a3a4 <xTaskRemoveFromEventList+0xc>
    listREMOVE_ITEM( &( pxUnblockedTCB->xEventListItem ) );
 800a3a6:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
 800a3a8:	e9d3 0107 	ldrd	r0, r1, [r3, #28]
 800a3ac:	6081      	str	r1, [r0, #8]
 800a3ae:	6048      	str	r0, [r1, #4]
 800a3b0:	6850      	ldr	r0, [r2, #4]
 800a3b2:	f103 0418 	add.w	r4, r3, #24
 800a3b6:	42a0      	cmp	r0, r4
 800a3b8:	bf08      	it	eq
 800a3ba:	6051      	streq	r1, [r2, #4]
 800a3bc:	2100      	movs	r1, #0
 800a3be:	6299      	str	r1, [r3, #40]	@ 0x28
 800a3c0:	6811      	ldr	r1, [r2, #0]
 800a3c2:	3901      	subs	r1, #1
 800a3c4:	6011      	str	r1, [r2, #0]
    if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800a3c6:	4a1d      	ldr	r2, [pc, #116]	@ (800a43c <xTaskRemoveFromEventList+0xa4>)
 800a3c8:	6ad9      	ldr	r1, [r3, #44]	@ 0x2c
 800a3ca:	6812      	ldr	r2, [r2, #0]
 800a3cc:	2a00      	cmp	r2, #0
 800a3ce:	d129      	bne.n	800a424 <xTaskRemoveFromEventList+0x8c>
        listREMOVE_ITEM( &( pxUnblockedTCB->xStateListItem ) );
 800a3d0:	e9d3 4002 	ldrd	r4, r0, [r3, #8]
 800a3d4:	695a      	ldr	r2, [r3, #20]
 800a3d6:	60a0      	str	r0, [r4, #8]
 800a3d8:	6044      	str	r4, [r0, #4]
 800a3da:	6854      	ldr	r4, [r2, #4]
 800a3dc:	1d1d      	adds	r5, r3, #4
 800a3de:	42ac      	cmp	r4, r5
 800a3e0:	bf08      	it	eq
 800a3e2:	6050      	streq	r0, [r2, #4]
 800a3e4:	6810      	ldr	r0, [r2, #0]
 800a3e6:	3801      	subs	r0, #1
 800a3e8:	6010      	str	r0, [r2, #0]
        prvAddTaskToReadyList( pxUnblockedTCB );
 800a3ea:	4a15      	ldr	r2, [pc, #84]	@ (800a440 <xTaskRemoveFromEventList+0xa8>)
 800a3ec:	6810      	ldr	r0, [r2, #0]
 800a3ee:	4281      	cmp	r1, r0
 800a3f0:	bf88      	it	hi
 800a3f2:	6011      	strhi	r1, [r2, #0]
 800a3f4:	2214      	movs	r2, #20
 800a3f6:	434a      	muls	r2, r1
 800a3f8:	4812      	ldr	r0, [pc, #72]	@ (800a444 <xTaskRemoveFromEventList+0xac>)
 800a3fa:	1886      	adds	r6, r0, r2
 800a3fc:	6874      	ldr	r4, [r6, #4]
 800a3fe:	68a7      	ldr	r7, [r4, #8]
 800a400:	609c      	str	r4, [r3, #8]
 800a402:	60df      	str	r7, [r3, #12]
 800a404:	607d      	str	r5, [r7, #4]
 800a406:	60a5      	str	r5, [r4, #8]
 800a408:	615e      	str	r6, [r3, #20]
 800a40a:	5883      	ldr	r3, [r0, r2]
 800a40c:	3301      	adds	r3, #1
 800a40e:	5083      	str	r3, [r0, r2]
    if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
 800a410:	4b0d      	ldr	r3, [pc, #52]	@ (800a448 <xTaskRemoveFromEventList+0xb0>)
 800a412:	681b      	ldr	r3, [r3, #0]
 800a414:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800a416:	4299      	cmp	r1, r3
        xYieldPending = pdTRUE;
 800a418:	bf85      	ittet	hi
 800a41a:	2001      	movhi	r0, #1
 800a41c:	4b0b      	ldrhi	r3, [pc, #44]	@ (800a44c <xTaskRemoveFromEventList+0xb4>)
        xReturn = pdFALSE;
 800a41e:	2000      	movls	r0, #0
        xYieldPending = pdTRUE;
 800a420:	6018      	strhi	r0, [r3, #0]
}
 800a422:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        listINSERT_END( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 800a424:	4a0a      	ldr	r2, [pc, #40]	@ (800a450 <xTaskRemoveFromEventList+0xb8>)
 800a426:	6850      	ldr	r0, [r2, #4]
 800a428:	6885      	ldr	r5, [r0, #8]
 800a42a:	61d8      	str	r0, [r3, #28]
 800a42c:	621d      	str	r5, [r3, #32]
 800a42e:	606c      	str	r4, [r5, #4]
 800a430:	6084      	str	r4, [r0, #8]
 800a432:	629a      	str	r2, [r3, #40]	@ 0x28
 800a434:	6813      	ldr	r3, [r2, #0]
 800a436:	3301      	adds	r3, #1
 800a438:	6013      	str	r3, [r2, #0]
 800a43a:	e7e9      	b.n	800a410 <xTaskRemoveFromEventList+0x78>
 800a43c:	2006f1d0 	.word	0x2006f1d0
 800a440:	2006f1ec 	.word	0x2006f1ec
 800a444:	2006f268 	.word	0x2006f268
 800a448:	2006f6c8 	.word	0x2006f6c8
 800a44c:	2006f1e0 	.word	0x2006f1e0
 800a450:	2006f224 	.word	0x2006f224

0800a454 <vTaskInternalSetTimeOutState>:
    pxTimeOut->xOverflowCount = xNumOfOverflows;
 800a454:	4b03      	ldr	r3, [pc, #12]	@ (800a464 <vTaskInternalSetTimeOutState+0x10>)
 800a456:	681b      	ldr	r3, [r3, #0]
 800a458:	6003      	str	r3, [r0, #0]
    pxTimeOut->xTimeOnEntering = xTickCount;
 800a45a:	4b03      	ldr	r3, [pc, #12]	@ (800a468 <vTaskInternalSetTimeOutState+0x14>)
 800a45c:	681b      	ldr	r3, [r3, #0]
 800a45e:	6043      	str	r3, [r0, #4]
}
 800a460:	4770      	bx	lr
 800a462:	bf00      	nop
 800a464:	2006f1dc 	.word	0x2006f1dc
 800a468:	2006f1f0 	.word	0x2006f1f0

0800a46c <xTaskCheckForTimeOut>:
{
 800a46c:	b570      	push	{r4, r5, r6, lr}
 800a46e:	460d      	mov	r5, r1
    configASSERT( pxTimeOut );
 800a470:	4604      	mov	r4, r0
 800a472:	b910      	cbnz	r0, 800a47a <xTaskCheckForTimeOut+0xe>
 800a474:	f7fe ff2e 	bl	80092d4 <ulSetInterruptMask>
 800a478:	e7fe      	b.n	800a478 <xTaskCheckForTimeOut+0xc>
    configASSERT( pxTicksToWait );
 800a47a:	b911      	cbnz	r1, 800a482 <xTaskCheckForTimeOut+0x16>
 800a47c:	f7fe ff2a 	bl	80092d4 <ulSetInterruptMask>
 800a480:	e7fe      	b.n	800a480 <xTaskCheckForTimeOut+0x14>
    taskENTER_CRITICAL();
 800a482:	f7fe fe4f 	bl	8009124 <vPortEnterCritical>
        const TickType_t xConstTickCount = xTickCount;
 800a486:	4b0f      	ldr	r3, [pc, #60]	@ (800a4c4 <xTaskCheckForTimeOut+0x58>)
 800a488:	6819      	ldr	r1, [r3, #0]
            if( *pxTicksToWait == portMAX_DELAY )
 800a48a:	682b      	ldr	r3, [r5, #0]
 800a48c:	1c5a      	adds	r2, r3, #1
 800a48e:	d017      	beq.n	800a4c0 <xTaskCheckForTimeOut+0x54>
        if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 800a490:	480d      	ldr	r0, [pc, #52]	@ (800a4c8 <xTaskCheckForTimeOut+0x5c>)
 800a492:	6826      	ldr	r6, [r4, #0]
 800a494:	6800      	ldr	r0, [r0, #0]
        const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 800a496:	6862      	ldr	r2, [r4, #4]
        if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 800a498:	4286      	cmp	r6, r0
 800a49a:	d008      	beq.n	800a4ae <xTaskCheckForTimeOut+0x42>
 800a49c:	428a      	cmp	r2, r1
 800a49e:	d806      	bhi.n	800a4ae <xTaskCheckForTimeOut+0x42>
            *pxTicksToWait = ( TickType_t ) 0;
 800a4a0:	2300      	movs	r3, #0
            xReturn = pdTRUE;
 800a4a2:	2401      	movs	r4, #1
            *pxTicksToWait = ( TickType_t ) 0;
 800a4a4:	602b      	str	r3, [r5, #0]
    taskEXIT_CRITICAL();
 800a4a6:	f7fe fe4b 	bl	8009140 <vPortExitCritical>
}
 800a4aa:	4620      	mov	r0, r4
 800a4ac:	bd70      	pop	{r4, r5, r6, pc}
        const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 800a4ae:	1a88      	subs	r0, r1, r2
        else if( xElapsedTime < *pxTicksToWait ) /*lint !e961 Explicit casting is only redundant with some compilers, whereas others require it to prevent integer conversion errors. */
 800a4b0:	4283      	cmp	r3, r0
 800a4b2:	d9f5      	bls.n	800a4a0 <xTaskCheckForTimeOut+0x34>
            *pxTicksToWait -= xElapsedTime;
 800a4b4:	1a5b      	subs	r3, r3, r1
 800a4b6:	4413      	add	r3, r2
            vTaskInternalSetTimeOutState( pxTimeOut );
 800a4b8:	4620      	mov	r0, r4
            *pxTicksToWait -= xElapsedTime;
 800a4ba:	602b      	str	r3, [r5, #0]
            vTaskInternalSetTimeOutState( pxTimeOut );
 800a4bc:	f7ff ffca 	bl	800a454 <vTaskInternalSetTimeOutState>
                xReturn = pdFALSE;
 800a4c0:	2400      	movs	r4, #0
 800a4c2:	e7f0      	b.n	800a4a6 <xTaskCheckForTimeOut+0x3a>
 800a4c4:	2006f1f0 	.word	0x2006f1f0
 800a4c8:	2006f1dc 	.word	0x2006f1dc

0800a4cc <vTaskMissedYield>:
    xYieldPending = pdTRUE;
 800a4cc:	2201      	movs	r2, #1
 800a4ce:	4b01      	ldr	r3, [pc, #4]	@ (800a4d4 <vTaskMissedYield+0x8>)
 800a4d0:	601a      	str	r2, [r3, #0]
}
 800a4d2:	4770      	bx	lr
 800a4d4:	2006f1e0 	.word	0x2006f1e0

0800a4d8 <xTaskGetSchedulerState>:
        if( xSchedulerRunning == pdFALSE )
 800a4d8:	4b05      	ldr	r3, [pc, #20]	@ (800a4f0 <xTaskGetSchedulerState+0x18>)
 800a4da:	681b      	ldr	r3, [r3, #0]
 800a4dc:	b133      	cbz	r3, 800a4ec <xTaskGetSchedulerState+0x14>
            if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800a4de:	4b05      	ldr	r3, [pc, #20]	@ (800a4f4 <xTaskGetSchedulerState+0x1c>)
 800a4e0:	6818      	ldr	r0, [r3, #0]
 800a4e2:	fab0 f080 	clz	r0, r0
 800a4e6:	0940      	lsrs	r0, r0, #5
 800a4e8:	0040      	lsls	r0, r0, #1
 800a4ea:	4770      	bx	lr
            xReturn = taskSCHEDULER_NOT_STARTED;
 800a4ec:	2001      	movs	r0, #1
    }
 800a4ee:	4770      	bx	lr
 800a4f0:	2006f1e8 	.word	0x2006f1e8
 800a4f4:	2006f1d0 	.word	0x2006f1d0

0800a4f8 <xTaskPriorityInherit>:
    {
 800a4f8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
        if( pxMutexHolder != NULL )
 800a4fa:	4604      	mov	r4, r0
 800a4fc:	2800      	cmp	r0, #0
 800a4fe:	d02e      	beq.n	800a55e <xTaskPriorityInherit+0x66>
            if( pxMutexHolderTCB->uxPriority < pxCurrentTCB->uxPriority )
 800a500:	4d1d      	ldr	r5, [pc, #116]	@ (800a578 <xTaskPriorityInherit+0x80>)
 800a502:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 800a504:	682a      	ldr	r2, [r5, #0]
 800a506:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
 800a508:	4293      	cmp	r3, r2
 800a50a:	d22d      	bcs.n	800a568 <xTaskPriorityInherit+0x70>
                if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800a50c:	6982      	ldr	r2, [r0, #24]
                if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 800a50e:	4e1b      	ldr	r6, [pc, #108]	@ (800a57c <xTaskPriorityInherit+0x84>)
                if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800a510:	2a00      	cmp	r2, #0
                    listSET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxCurrentTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800a512:	bfa1      	itttt	ge
 800a514:	682a      	ldrge	r2, [r5, #0]
 800a516:	6ad2      	ldrge	r2, [r2, #44]	@ 0x2c
 800a518:	f1c2 0238 	rsbge	r2, r2, #56	@ 0x38
 800a51c:	6182      	strge	r2, [r0, #24]
                if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 800a51e:	2214      	movs	r2, #20
 800a520:	fb02 6303 	mla	r3, r2, r3, r6
 800a524:	6942      	ldr	r2, [r0, #20]
 800a526:	429a      	cmp	r2, r3
 800a528:	d11a      	bne.n	800a560 <xTaskPriorityInherit+0x68>
                    if( uxListRemove( &( pxMutexHolderTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800a52a:	1d07      	adds	r7, r0, #4
 800a52c:	4638      	mov	r0, r7
 800a52e:	f7fe fdb6 	bl	800909e <uxListRemove>
                    pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800a532:	682b      	ldr	r3, [r5, #0]
                    prvAddTaskToReadyList( pxMutexHolderTCB );
 800a534:	4a12      	ldr	r2, [pc, #72]	@ (800a580 <xTaskPriorityInherit+0x88>)
                    pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800a536:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
                    prvAddTaskToReadyList( pxMutexHolderTCB );
 800a538:	6811      	ldr	r1, [r2, #0]
                    pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800a53a:	62e3      	str	r3, [r4, #44]	@ 0x2c
                    prvAddTaskToReadyList( pxMutexHolderTCB );
 800a53c:	428b      	cmp	r3, r1
 800a53e:	bf88      	it	hi
 800a540:	6013      	strhi	r3, [r2, #0]
 800a542:	2214      	movs	r2, #20
 800a544:	4353      	muls	r3, r2
 800a546:	18f1      	adds	r1, r6, r3
 800a548:	684a      	ldr	r2, [r1, #4]
 800a54a:	6890      	ldr	r0, [r2, #8]
 800a54c:	60a2      	str	r2, [r4, #8]
 800a54e:	60e0      	str	r0, [r4, #12]
 800a550:	6047      	str	r7, [r0, #4]
 800a552:	6097      	str	r7, [r2, #8]
 800a554:	58f2      	ldr	r2, [r6, r3]
 800a556:	6161      	str	r1, [r4, #20]
 800a558:	3201      	adds	r2, #1
 800a55a:	50f2      	str	r2, [r6, r3]
                xReturn = pdTRUE;
 800a55c:	2001      	movs	r0, #1
    }
 800a55e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
                    pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800a560:	682b      	ldr	r3, [r5, #0]
 800a562:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800a564:	62c3      	str	r3, [r0, #44]	@ 0x2c
 800a566:	e7f9      	b.n	800a55c <xTaskPriorityInherit+0x64>
                if( pxMutexHolderTCB->uxBasePriority < pxCurrentTCB->uxPriority )
 800a568:	682b      	ldr	r3, [r5, #0]
 800a56a:	6cc0      	ldr	r0, [r0, #76]	@ 0x4c
 800a56c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800a56e:	4298      	cmp	r0, r3
 800a570:	bf2c      	ite	cs
 800a572:	2000      	movcs	r0, #0
 800a574:	2001      	movcc	r0, #1
 800a576:	e7f2      	b.n	800a55e <xTaskPriorityInherit+0x66>
 800a578:	2006f6c8 	.word	0x2006f6c8
 800a57c:	2006f268 	.word	0x2006f268
 800a580:	2006f1ec 	.word	0x2006f1ec

0800a584 <xTaskPriorityDisinherit>:
    {
 800a584:	b570      	push	{r4, r5, r6, lr}
        if( pxMutexHolder != NULL )
 800a586:	4604      	mov	r4, r0
 800a588:	b908      	cbnz	r0, 800a58e <xTaskPriorityDisinherit+0xa>
        BaseType_t xReturn = pdFALSE;
 800a58a:	2000      	movs	r0, #0
    }
 800a58c:	bd70      	pop	{r4, r5, r6, pc}
            configASSERT( pxTCB == pxCurrentTCB );
 800a58e:	4b19      	ldr	r3, [pc, #100]	@ (800a5f4 <xTaskPriorityDisinherit+0x70>)
 800a590:	681b      	ldr	r3, [r3, #0]
 800a592:	4283      	cmp	r3, r0
 800a594:	d002      	beq.n	800a59c <xTaskPriorityDisinherit+0x18>
 800a596:	f7fe fe9d 	bl	80092d4 <ulSetInterruptMask>
 800a59a:	e7fe      	b.n	800a59a <xTaskPriorityDisinherit+0x16>
            configASSERT( pxTCB->uxMutexesHeld );
 800a59c:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800a59e:	b913      	cbnz	r3, 800a5a6 <xTaskPriorityDisinherit+0x22>
 800a5a0:	f7fe fe98 	bl	80092d4 <ulSetInterruptMask>
 800a5a4:	e7fe      	b.n	800a5a4 <xTaskPriorityDisinherit+0x20>
            if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800a5a6:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
 800a5a8:	6cc2      	ldr	r2, [r0, #76]	@ 0x4c
            ( pxTCB->uxMutexesHeld )--;
 800a5aa:	3b01      	subs	r3, #1
            if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800a5ac:	4291      	cmp	r1, r2
            ( pxTCB->uxMutexesHeld )--;
 800a5ae:	6503      	str	r3, [r0, #80]	@ 0x50
            if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800a5b0:	d0eb      	beq.n	800a58a <xTaskPriorityDisinherit+0x6>
                if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
 800a5b2:	2b00      	cmp	r3, #0
 800a5b4:	d1e9      	bne.n	800a58a <xTaskPriorityDisinherit+0x6>
                    if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800a5b6:	1d05      	adds	r5, r0, #4
 800a5b8:	4628      	mov	r0, r5
 800a5ba:	f7fe fd70 	bl	800909e <uxListRemove>
                    pxTCB->uxPriority = pxTCB->uxBasePriority;
 800a5be:	6ce3      	ldr	r3, [r4, #76]	@ 0x4c
                    listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800a5c0:	f1c3 0238 	rsb	r2, r3, #56	@ 0x38
 800a5c4:	61a2      	str	r2, [r4, #24]
                    prvAddTaskToReadyList( pxTCB );
 800a5c6:	4a0c      	ldr	r2, [pc, #48]	@ (800a5f8 <xTaskPriorityDisinherit+0x74>)
                    pxTCB->uxPriority = pxTCB->uxBasePriority;
 800a5c8:	62e3      	str	r3, [r4, #44]	@ 0x2c
                    prvAddTaskToReadyList( pxTCB );
 800a5ca:	6811      	ldr	r1, [r2, #0]
 800a5cc:	428b      	cmp	r3, r1
 800a5ce:	f04f 0114 	mov.w	r1, #20
 800a5d2:	bf88      	it	hi
 800a5d4:	6013      	strhi	r3, [r2, #0]
 800a5d6:	434b      	muls	r3, r1
 800a5d8:	4a08      	ldr	r2, [pc, #32]	@ (800a5fc <xTaskPriorityDisinherit+0x78>)
 800a5da:	18d0      	adds	r0, r2, r3
 800a5dc:	6841      	ldr	r1, [r0, #4]
 800a5de:	688e      	ldr	r6, [r1, #8]
 800a5e0:	60a1      	str	r1, [r4, #8]
 800a5e2:	60e6      	str	r6, [r4, #12]
 800a5e4:	6075      	str	r5, [r6, #4]
 800a5e6:	608d      	str	r5, [r1, #8]
 800a5e8:	58d1      	ldr	r1, [r2, r3]
 800a5ea:	6160      	str	r0, [r4, #20]
 800a5ec:	3101      	adds	r1, #1
                    xReturn = pdTRUE;
 800a5ee:	2001      	movs	r0, #1
                    prvAddTaskToReadyList( pxTCB );
 800a5f0:	50d1      	str	r1, [r2, r3]
        return xReturn;
 800a5f2:	e7cb      	b.n	800a58c <xTaskPriorityDisinherit+0x8>
 800a5f4:	2006f6c8 	.word	0x2006f6c8
 800a5f8:	2006f1ec 	.word	0x2006f1ec
 800a5fc:	2006f268 	.word	0x2006f268

0800a600 <vTaskPriorityDisinheritAfterTimeout>:
    {
 800a600:	b570      	push	{r4, r5, r6, lr}
        if( pxMutexHolder != NULL )
 800a602:	4604      	mov	r4, r0
 800a604:	2800      	cmp	r0, #0
 800a606:	d03a      	beq.n	800a67e <vTaskPriorityDisinheritAfterTimeout+0x7e>
            configASSERT( pxTCB->uxMutexesHeld );
 800a608:	6d02      	ldr	r2, [r0, #80]	@ 0x50
 800a60a:	b912      	cbnz	r2, 800a612 <vTaskPriorityDisinheritAfterTimeout+0x12>
 800a60c:	f7fe fe62 	bl	80092d4 <ulSetInterruptMask>
 800a610:	e7fe      	b.n	800a610 <vTaskPriorityDisinheritAfterTimeout+0x10>
            if( pxTCB->uxBasePriority < uxHighestPriorityWaitingTask )
 800a612:	6cc3      	ldr	r3, [r0, #76]	@ 0x4c
 800a614:	4299      	cmp	r1, r3
 800a616:	bf38      	it	cc
 800a618:	4619      	movcc	r1, r3
            if( pxTCB->uxPriority != uxPriorityToUse )
 800a61a:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 800a61c:	428b      	cmp	r3, r1
 800a61e:	d02e      	beq.n	800a67e <vTaskPriorityDisinheritAfterTimeout+0x7e>
                if( pxTCB->uxMutexesHeld == uxOnlyOneMutexHeld )
 800a620:	2a01      	cmp	r2, #1
 800a622:	d12c      	bne.n	800a67e <vTaskPriorityDisinheritAfterTimeout+0x7e>
                    configASSERT( pxTCB != pxCurrentTCB );
 800a624:	4a16      	ldr	r2, [pc, #88]	@ (800a680 <vTaskPriorityDisinheritAfterTimeout+0x80>)
 800a626:	6812      	ldr	r2, [r2, #0]
 800a628:	4282      	cmp	r2, r0
 800a62a:	d102      	bne.n	800a632 <vTaskPriorityDisinheritAfterTimeout+0x32>
 800a62c:	f7fe fe52 	bl	80092d4 <ulSetInterruptMask>
 800a630:	e7fe      	b.n	800a630 <vTaskPriorityDisinheritAfterTimeout+0x30>
                    if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800a632:	6982      	ldr	r2, [r0, #24]
                    if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 800a634:	4d13      	ldr	r5, [pc, #76]	@ (800a684 <vTaskPriorityDisinheritAfterTimeout+0x84>)
                    if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800a636:	2a00      	cmp	r2, #0
                    if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 800a638:	f04f 0214 	mov.w	r2, #20
 800a63c:	fb02 5303 	mla	r3, r2, r3, r5
 800a640:	6942      	ldr	r2, [r0, #20]
                    pxTCB->uxPriority = uxPriorityToUse;
 800a642:	62c1      	str	r1, [r0, #44]	@ 0x2c
                        listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800a644:	bfa4      	itt	ge
 800a646:	f1c1 0138 	rsbge	r1, r1, #56	@ 0x38
 800a64a:	6181      	strge	r1, [r0, #24]
                    if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 800a64c:	429a      	cmp	r2, r3
 800a64e:	d116      	bne.n	800a67e <vTaskPriorityDisinheritAfterTimeout+0x7e>
                        if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800a650:	1d06      	adds	r6, r0, #4
 800a652:	4630      	mov	r0, r6
 800a654:	f7fe fd23 	bl	800909e <uxListRemove>
                        prvAddTaskToReadyList( pxTCB );
 800a658:	4a0b      	ldr	r2, [pc, #44]	@ (800a688 <vTaskPriorityDisinheritAfterTimeout+0x88>)
 800a65a:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 800a65c:	6811      	ldr	r1, [r2, #0]
 800a65e:	428b      	cmp	r3, r1
 800a660:	bf88      	it	hi
 800a662:	6013      	strhi	r3, [r2, #0]
 800a664:	2214      	movs	r2, #20
 800a666:	4353      	muls	r3, r2
 800a668:	18e9      	adds	r1, r5, r3
 800a66a:	684a      	ldr	r2, [r1, #4]
 800a66c:	6890      	ldr	r0, [r2, #8]
 800a66e:	60a2      	str	r2, [r4, #8]
 800a670:	60e0      	str	r0, [r4, #12]
 800a672:	6046      	str	r6, [r0, #4]
 800a674:	6096      	str	r6, [r2, #8]
 800a676:	58ea      	ldr	r2, [r5, r3]
 800a678:	6161      	str	r1, [r4, #20]
 800a67a:	3201      	adds	r2, #1
 800a67c:	50ea      	str	r2, [r5, r3]
    }
 800a67e:	bd70      	pop	{r4, r5, r6, pc}
 800a680:	2006f6c8 	.word	0x2006f6c8
 800a684:	2006f268 	.word	0x2006f268
 800a688:	2006f1ec 	.word	0x2006f1ec

0800a68c <pvTaskIncrementMutexHeldCount>:
        if( pxCurrentTCB != NULL )
 800a68c:	4b04      	ldr	r3, [pc, #16]	@ (800a6a0 <pvTaskIncrementMutexHeldCount+0x14>)
 800a68e:	681a      	ldr	r2, [r3, #0]
 800a690:	b11a      	cbz	r2, 800a69a <pvTaskIncrementMutexHeldCount+0xe>
            ( pxCurrentTCB->uxMutexesHeld )++;
 800a692:	6819      	ldr	r1, [r3, #0]
 800a694:	6d0a      	ldr	r2, [r1, #80]	@ 0x50
 800a696:	3201      	adds	r2, #1
 800a698:	650a      	str	r2, [r1, #80]	@ 0x50
        return pxCurrentTCB;
 800a69a:	6818      	ldr	r0, [r3, #0]
    }
 800a69c:	4770      	bx	lr
 800a69e:	bf00      	nop
 800a6a0:	2006f6c8 	.word	0x2006f6c8

0800a6a4 <prvInsertTimerInActiveList>:
        BaseType_t xProcessTimerNow = pdFALSE;

        listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
        listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );

        if( xNextExpiryTime <= xTimeNow )
 800a6a4:	4291      	cmp	r1, r2
    {
 800a6a6:	b508      	push	{r3, lr}
        listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 800a6a8:	6041      	str	r1, [r0, #4]
        listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 800a6aa:	6100      	str	r0, [r0, #16]
        if( xNextExpiryTime <= xTimeNow )
 800a6ac:	d80a      	bhi.n	800a6c4 <prvInsertTimerInActiveList+0x20>
        {
            /* Has the expiry time elapsed between the command to start/reset a
             * timer was issued, and the time the command was processed? */
            if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800a6ae:	1ad2      	subs	r2, r2, r3
 800a6b0:	6983      	ldr	r3, [r0, #24]
 800a6b2:	429a      	cmp	r2, r3
 800a6b4:	d20d      	bcs.n	800a6d2 <prvInsertTimerInActiveList+0x2e>
                 * processed actually exceeds the timers period.  */
                xProcessTimerNow = pdTRUE;
            }
            else
            {
                vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
 800a6b6:	4b08      	ldr	r3, [pc, #32]	@ (800a6d8 <prvInsertTimerInActiveList+0x34>)
 800a6b8:	1d01      	adds	r1, r0, #4
                 * its expiry time and should be processed immediately. */
                xProcessTimerNow = pdTRUE;
            }
            else
            {
                vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800a6ba:	6818      	ldr	r0, [r3, #0]
 800a6bc:	f7fe fcd8 	bl	8009070 <vListInsert>
        BaseType_t xProcessTimerNow = pdFALSE;
 800a6c0:	2000      	movs	r0, #0
            }
        }

        return xProcessTimerNow;
    }
 800a6c2:	bd08      	pop	{r3, pc}
            if( ( xTimeNow < xCommandTime ) && ( xNextExpiryTime >= xCommandTime ) )
 800a6c4:	429a      	cmp	r2, r3
 800a6c6:	d201      	bcs.n	800a6cc <prvInsertTimerInActiveList+0x28>
 800a6c8:	4299      	cmp	r1, r3
 800a6ca:	d202      	bcs.n	800a6d2 <prvInsertTimerInActiveList+0x2e>
                vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800a6cc:	4b03      	ldr	r3, [pc, #12]	@ (800a6dc <prvInsertTimerInActiveList+0x38>)
 800a6ce:	1d01      	adds	r1, r0, #4
 800a6d0:	e7f3      	b.n	800a6ba <prvInsertTimerInActiveList+0x16>
                xProcessTimerNow = pdTRUE;
 800a6d2:	2001      	movs	r0, #1
        return xProcessTimerNow;
 800a6d4:	e7f5      	b.n	800a6c2 <prvInsertTimerInActiveList+0x1e>
 800a6d6:	bf00      	nop
 800a6d8:	2006f7c8 	.word	0x2006f7c8
 800a6dc:	2006f7cc 	.word	0x2006f7cc

0800a6e0 <prvReloadTimer>:
    {
 800a6e0:	b570      	push	{r4, r5, r6, lr}
 800a6e2:	4604      	mov	r4, r0
 800a6e4:	460d      	mov	r5, r1
 800a6e6:	4616      	mov	r6, r2
        while( prvInsertTimerInActiveList( pxTimer, ( xExpiredTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xExpiredTime ) != pdFALSE )
 800a6e8:	69a1      	ldr	r1, [r4, #24]
 800a6ea:	462b      	mov	r3, r5
 800a6ec:	4632      	mov	r2, r6
 800a6ee:	4620      	mov	r0, r4
 800a6f0:	4429      	add	r1, r5
 800a6f2:	f7ff ffd7 	bl	800a6a4 <prvInsertTimerInActiveList>
 800a6f6:	b900      	cbnz	r0, 800a6fa <prvReloadTimer+0x1a>
    }
 800a6f8:	bd70      	pop	{r4, r5, r6, pc}
            xExpiredTime += pxTimer->xTimerPeriodInTicks;
 800a6fa:	69a3      	ldr	r3, [r4, #24]
            pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800a6fc:	4620      	mov	r0, r4
            xExpiredTime += pxTimer->xTimerPeriodInTicks;
 800a6fe:	441d      	add	r5, r3
            pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800a700:	6a23      	ldr	r3, [r4, #32]
 800a702:	4798      	blx	r3
 800a704:	e7f0      	b.n	800a6e8 <prvReloadTimer+0x8>
	...

0800a708 <prvProcessExpiredTimer>:
        Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800a708:	4b0e      	ldr	r3, [pc, #56]	@ (800a744 <prvProcessExpiredTimer+0x3c>)
    {
 800a70a:	b570      	push	{r4, r5, r6, lr}
        Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800a70c:	681b      	ldr	r3, [r3, #0]
    {
 800a70e:	4605      	mov	r5, r0
        Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800a710:	68db      	ldr	r3, [r3, #12]
    {
 800a712:	460e      	mov	r6, r1
        Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800a714:	68dc      	ldr	r4, [r3, #12]
        ( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800a716:	1d20      	adds	r0, r4, #4
 800a718:	f7fe fcc1 	bl	800909e <uxListRemove>
        if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800a71c:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
 800a720:	075a      	lsls	r2, r3, #29
 800a722:	d509      	bpl.n	800a738 <prvProcessExpiredTimer+0x30>
            prvReloadTimer( pxTimer, xNextExpireTime, xTimeNow );
 800a724:	4632      	mov	r2, r6
 800a726:	4629      	mov	r1, r5
 800a728:	4620      	mov	r0, r4
 800a72a:	f7ff ffd9 	bl	800a6e0 <prvReloadTimer>
        pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800a72e:	4620      	mov	r0, r4
 800a730:	6a23      	ldr	r3, [r4, #32]
    }
 800a732:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800a736:	4718      	bx	r3
            pxTimer->ucStatus &= ( ( uint8_t ) ~tmrSTATUS_IS_ACTIVE );
 800a738:	f023 0301 	bic.w	r3, r3, #1
 800a73c:	f884 3028 	strb.w	r3, [r4, #40]	@ 0x28
 800a740:	e7f5      	b.n	800a72e <prvProcessExpiredTimer+0x26>
 800a742:	bf00      	nop
 800a744:	2006f7cc 	.word	0x2006f7cc

0800a748 <prvSampleTimeNow>:
    {
 800a748:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800a74a:	4605      	mov	r5, r0
        xTimeNow = xTaskGetTickCount();
 800a74c:	f7ff fbee 	bl	8009f2c <xTaskGetTickCount>
        if( xTimeNow < xLastTime )
 800a750:	4e0d      	ldr	r6, [pc, #52]	@ (800a788 <prvSampleTimeNow+0x40>)
        xTimeNow = xTaskGetTickCount();
 800a752:	4604      	mov	r4, r0
        if( xTimeNow < xLastTime )
 800a754:	6833      	ldr	r3, [r6, #0]
 800a756:	4283      	cmp	r3, r0
 800a758:	d909      	bls.n	800a76e <prvSampleTimeNow+0x26>

        /* The tick count has overflowed.  The timer lists must be switched.
         * If there are any timers still referenced from the current timer list
         * then they must have expired and should be processed before the lists
         * are switched. */
        while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 800a75a:	4f0c      	ldr	r7, [pc, #48]	@ (800a78c <prvSampleTimeNow+0x44>)
 800a75c:	683b      	ldr	r3, [r7, #0]
 800a75e:	681a      	ldr	r2, [r3, #0]
 800a760:	b952      	cbnz	r2, 800a778 <prvSampleTimeNow+0x30>
             * expirations must wait until after the lists are switched. */
            prvProcessExpiredTimer( xNextExpireTime, tmrMAX_TIME_BEFORE_OVERFLOW );
        }

        pxTemp = pxCurrentTimerList;
        pxCurrentTimerList = pxOverflowTimerList;
 800a762:	4a0b      	ldr	r2, [pc, #44]	@ (800a790 <prvSampleTimeNow+0x48>)
 800a764:	6811      	ldr	r1, [r2, #0]
        pxOverflowTimerList = pxTemp;
 800a766:	6013      	str	r3, [r2, #0]
        pxCurrentTimerList = pxOverflowTimerList;
 800a768:	6039      	str	r1, [r7, #0]
            *pxTimerListsWereSwitched = pdTRUE;
 800a76a:	2301      	movs	r3, #1
 800a76c:	e000      	b.n	800a770 <prvSampleTimeNow+0x28>
 800a76e:	2300      	movs	r3, #0
    }
 800a770:	4620      	mov	r0, r4
            *pxTimerListsWereSwitched = pdTRUE;
 800a772:	602b      	str	r3, [r5, #0]
        xLastTime = xTimeNow;
 800a774:	6034      	str	r4, [r6, #0]
    }
 800a776:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
            xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800a778:	68db      	ldr	r3, [r3, #12]
            prvProcessExpiredTimer( xNextExpireTime, tmrMAX_TIME_BEFORE_OVERFLOW );
 800a77a:	f04f 31ff 	mov.w	r1, #4294967295
 800a77e:	6818      	ldr	r0, [r3, #0]
 800a780:	f7ff ffc2 	bl	800a708 <prvProcessExpiredTimer>
 800a784:	e7ea      	b.n	800a75c <prvSampleTimeNow+0x14>
 800a786:	bf00      	nop
 800a788:	2006f7bc 	.word	0x2006f7bc
 800a78c:	2006f7cc 	.word	0x2006f7cc
 800a790:	2006f7c8 	.word	0x2006f7c8

0800a794 <prvTimerTask>:
    {
 800a794:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
        *pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800a798:	4f51      	ldr	r7, [pc, #324]	@ (800a8e0 <prvTimerTask+0x14c>)
 800a79a:	4e52      	ldr	r6, [pc, #328]	@ (800a8e4 <prvTimerTask+0x150>)
    {
 800a79c:	b086      	sub	sp, #24
        *pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800a79e:	683b      	ldr	r3, [r7, #0]
 800a7a0:	f8d3 8000 	ldr.w	r8, [r3]
 800a7a4:	f1b8 0f00 	cmp.w	r8, #0
 800a7a8:	d032      	beq.n	800a810 <prvTimerTask+0x7c>
 800a7aa:	2400      	movs	r4, #0
            xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800a7ac:	68db      	ldr	r3, [r3, #12]
 800a7ae:	f8d3 8000 	ldr.w	r8, [r3]
        vTaskSuspendAll();
 800a7b2:	f7ff fbb3 	bl	8009f1c <vTaskSuspendAll>
            xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 800a7b6:	a802      	add	r0, sp, #8
 800a7b8:	f7ff ffc6 	bl	800a748 <prvSampleTimeNow>
            if( xTimerListsWereSwitched == pdFALSE )
 800a7bc:	9b02      	ldr	r3, [sp, #8]
            xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 800a7be:	4605      	mov	r5, r0
            if( xTimerListsWereSwitched == pdFALSE )
 800a7c0:	2b00      	cmp	r3, #0
 800a7c2:	d13a      	bne.n	800a83a <prvTimerTask+0xa6>
                if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 800a7c4:	bb34      	cbnz	r4, 800a814 <prvTimerTask+0x80>
 800a7c6:	4540      	cmp	r0, r8
 800a7c8:	d32a      	bcc.n	800a820 <prvTimerTask+0x8c>
                    ( void ) xTaskResumeAll();
 800a7ca:	f7ff fc65 	bl	800a098 <xTaskResumeAll>
                    prvProcessExpiredTimer( xNextExpireTime, xTimeNow );
 800a7ce:	4629      	mov	r1, r5
 800a7d0:	4640      	mov	r0, r8
 800a7d2:	f7ff ff99 	bl	800a708 <prvProcessExpiredTimer>
        while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL ) /*lint !e603 xMessage does not have to be initialised as it is passed out, not in, and it is not used unless xQueueReceive() returns pdTRUE. */
 800a7d6:	2200      	movs	r2, #0
 800a7d8:	6830      	ldr	r0, [r6, #0]
 800a7da:	a902      	add	r1, sp, #8
 800a7dc:	f7ff f825 	bl	800982a <xQueueReceive>
 800a7e0:	2800      	cmp	r0, #0
 800a7e2:	d0dc      	beq.n	800a79e <prvTimerTask+0xa>
                    if( xMessage.xMessageID < ( BaseType_t ) 0 )
 800a7e4:	9b02      	ldr	r3, [sp, #8]
                        pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 800a7e6:	9804      	ldr	r0, [sp, #16]
                    if( xMessage.xMessageID < ( BaseType_t ) 0 )
 800a7e8:	2b00      	cmp	r3, #0
 800a7ea:	db29      	blt.n	800a840 <prvTimerTask+0xac>
                pxTimer = xMessage.u.xTimerParameters.pxTimer;
 800a7ec:	9c04      	ldr	r4, [sp, #16]
                if( listIS_CONTAINED_WITHIN( NULL, &( pxTimer->xTimerListItem ) ) == pdFALSE ) /*lint !e961. The cast is only redundant when NULL is passed into the macro. */
 800a7ee:	6963      	ldr	r3, [r4, #20]
 800a7f0:	bb6b      	cbnz	r3, 800a84e <prvTimerTask+0xba>
                xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 800a7f2:	a801      	add	r0, sp, #4
 800a7f4:	f7ff ffa8 	bl	800a748 <prvSampleTimeNow>
                switch( xMessage.xMessageID )
 800a7f8:	9b02      	ldr	r3, [sp, #8]
                xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 800a7fa:	4605      	mov	r5, r0
                switch( xMessage.xMessageID )
 800a7fc:	3b01      	subs	r3, #1
 800a7fe:	2b08      	cmp	r3, #8
 800a800:	d8e9      	bhi.n	800a7d6 <prvTimerTask+0x42>
 800a802:	e8df f003 	tbb	[pc, r3]
 800a806:	2828      	.short	0x2828
 800a808:	2865524b 	.word	0x2865524b
 800a80c:	4b28      	.short	0x4b28
 800a80e:	52          	.byte	0x52
 800a80f:	00          	.byte	0x00
        *pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800a810:	2401      	movs	r4, #1
 800a812:	e7ce      	b.n	800a7b2 <prvTimerTask+0x1e>
                        xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
 800a814:	4b34      	ldr	r3, [pc, #208]	@ (800a8e8 <prvTimerTask+0x154>)
 800a816:	681b      	ldr	r3, [r3, #0]
 800a818:	681c      	ldr	r4, [r3, #0]
 800a81a:	fab4 f484 	clz	r4, r4
 800a81e:	0964      	lsrs	r4, r4, #5
                    vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 800a820:	4622      	mov	r2, r4
 800a822:	6830      	ldr	r0, [r6, #0]
 800a824:	eba8 0105 	sub.w	r1, r8, r5
 800a828:	f7ff f99d 	bl	8009b66 <vQueueWaitForMessageRestricted>
                    if( xTaskResumeAll() == pdFALSE )
 800a82c:	f7ff fc34 	bl	800a098 <xTaskResumeAll>
 800a830:	2800      	cmp	r0, #0
 800a832:	d1d0      	bne.n	800a7d6 <prvTimerTask+0x42>
                        portYIELD_WITHIN_API();
 800a834:	f7fe fc6a 	bl	800910c <vPortYield>
 800a838:	e7cd      	b.n	800a7d6 <prvTimerTask+0x42>
                ( void ) xTaskResumeAll();
 800a83a:	f7ff fc2d 	bl	800a098 <xTaskResumeAll>
    }
 800a83e:	e7ca      	b.n	800a7d6 <prvTimerTask+0x42>
                        pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 800a840:	9b03      	ldr	r3, [sp, #12]
 800a842:	9905      	ldr	r1, [sp, #20]
 800a844:	4798      	blx	r3
            if( xMessage.xMessageID >= ( BaseType_t ) 0 )
 800a846:	9b02      	ldr	r3, [sp, #8]
 800a848:	2b00      	cmp	r3, #0
 800a84a:	dbc4      	blt.n	800a7d6 <prvTimerTask+0x42>
 800a84c:	e7ce      	b.n	800a7ec <prvTimerTask+0x58>
                    ( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800a84e:	1d20      	adds	r0, r4, #4
 800a850:	f7fe fc25 	bl	800909e <uxListRemove>
 800a854:	e7cd      	b.n	800a7f2 <prvTimerTask+0x5e>
                        pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800a856:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
                        if( prvInsertTimerInActiveList( pxTimer, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 800a85a:	69a1      	ldr	r1, [r4, #24]
                        pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800a85c:	f043 0301 	orr.w	r3, r3, #1
 800a860:	f884 3028 	strb.w	r3, [r4, #40]	@ 0x28
                        if( prvInsertTimerInActiveList( pxTimer, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 800a864:	9b03      	ldr	r3, [sp, #12]
 800a866:	4602      	mov	r2, r0
 800a868:	4419      	add	r1, r3
 800a86a:	4620      	mov	r0, r4
 800a86c:	f7ff ff1a 	bl	800a6a4 <prvInsertTimerInActiveList>
 800a870:	2800      	cmp	r0, #0
 800a872:	d0b0      	beq.n	800a7d6 <prvTimerTask+0x42>
                            if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800a874:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
 800a878:	0759      	lsls	r1, r3, #29
 800a87a:	d50a      	bpl.n	800a892 <prvTimerTask+0xfe>
                                prvReloadTimer( pxTimer, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow );
 800a87c:	69a3      	ldr	r3, [r4, #24]
 800a87e:	9903      	ldr	r1, [sp, #12]
 800a880:	462a      	mov	r2, r5
 800a882:	4620      	mov	r0, r4
 800a884:	4419      	add	r1, r3
 800a886:	f7ff ff2b 	bl	800a6e0 <prvReloadTimer>
                            pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800a88a:	4620      	mov	r0, r4
 800a88c:	6a23      	ldr	r3, [r4, #32]
 800a88e:	4798      	blx	r3
 800a890:	e7a1      	b.n	800a7d6 <prvTimerTask+0x42>
                                pxTimer->ucStatus &= ( ( uint8_t ) ~tmrSTATUS_IS_ACTIVE );
 800a892:	f023 0301 	bic.w	r3, r3, #1
 800a896:	f884 3028 	strb.w	r3, [r4, #40]	@ 0x28
 800a89a:	e7f6      	b.n	800a88a <prvTimerTask+0xf6>
                        pxTimer->ucStatus &= ( ( uint8_t ) ~tmrSTATUS_IS_ACTIVE );
 800a89c:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
                                    pxTimer->ucStatus &= ( ( uint8_t ) ~tmrSTATUS_IS_ACTIVE );
 800a8a0:	f023 0301 	bic.w	r3, r3, #1
 800a8a4:	f884 3028 	strb.w	r3, [r4, #40]	@ 0x28
 800a8a8:	e795      	b.n	800a7d6 <prvTimerTask+0x42>
                        pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800a8aa:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
 800a8ae:	f043 0301 	orr.w	r3, r3, #1
 800a8b2:	f884 3028 	strb.w	r3, [r4, #40]	@ 0x28
                        pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
 800a8b6:	9903      	ldr	r1, [sp, #12]
 800a8b8:	61a1      	str	r1, [r4, #24]
                        configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 800a8ba:	b911      	cbnz	r1, 800a8c2 <prvTimerTask+0x12e>
 800a8bc:	f7fe fd0a 	bl	80092d4 <ulSetInterruptMask>
 800a8c0:	e7fe      	b.n	800a8c0 <prvTimerTask+0x12c>
                        ( void ) prvInsertTimerInActiveList( pxTimer, ( xTimeNow + pxTimer->xTimerPeriodInTicks ), xTimeNow, xTimeNow );
 800a8c2:	4603      	mov	r3, r0
 800a8c4:	4602      	mov	r2, r0
 800a8c6:	4401      	add	r1, r0
 800a8c8:	4620      	mov	r0, r4
 800a8ca:	f7ff feeb 	bl	800a6a4 <prvInsertTimerInActiveList>
                        break;
 800a8ce:	e782      	b.n	800a7d6 <prvTimerTask+0x42>
                                if( ( pxTimer->ucStatus & tmrSTATUS_IS_STATICALLY_ALLOCATED ) == ( uint8_t ) 0 )
 800a8d0:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
 800a8d4:	079a      	lsls	r2, r3, #30
 800a8d6:	d4e3      	bmi.n	800a8a0 <prvTimerTask+0x10c>
                                    vPortFree( pxTimer );
 800a8d8:	4620      	mov	r0, r4
 800a8da:	f000 f91d 	bl	800ab18 <vPortFree>
 800a8de:	e77a      	b.n	800a7d6 <prvTimerTask+0x42>
 800a8e0:	2006f7cc 	.word	0x2006f7cc
 800a8e4:	2006f7c4 	.word	0x2006f7c4
 800a8e8:	2006f7c8 	.word	0x2006f7c8

0800a8ec <prvCheckForValidListAndQueue>:
    }
/*-----------------------------------------------------------*/

    static void prvCheckForValidListAndQueue( void )
    {
 800a8ec:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
        /* Check that the list from which active timers are referenced, and the
         * queue used to communicate with the timer service, have been
         * initialised. */
        taskENTER_CRITICAL();
        {
            if( xTimerQueue == NULL )
 800a8ee:	4c11      	ldr	r4, [pc, #68]	@ (800a934 <prvCheckForValidListAndQueue+0x48>)
        taskENTER_CRITICAL();
 800a8f0:	f7fe fc18 	bl	8009124 <vPortEnterCritical>
            if( xTimerQueue == NULL )
 800a8f4:	6825      	ldr	r5, [r4, #0]
 800a8f6:	b9bd      	cbnz	r5, 800a928 <prvCheckForValidListAndQueue+0x3c>
            {
                vListInitialise( &xActiveTimerList1 );
 800a8f8:	4f0f      	ldr	r7, [pc, #60]	@ (800a938 <prvCheckForValidListAndQueue+0x4c>)
                vListInitialise( &xActiveTimerList2 );
 800a8fa:	4e10      	ldr	r6, [pc, #64]	@ (800a93c <prvCheckForValidListAndQueue+0x50>)
                vListInitialise( &xActiveTimerList1 );
 800a8fc:	4638      	mov	r0, r7
 800a8fe:	f7fe fba9 	bl	8009054 <vListInitialise>
                vListInitialise( &xActiveTimerList2 );
 800a902:	4630      	mov	r0, r6
 800a904:	f7fe fba6 	bl	8009054 <vListInitialise>
                pxCurrentTimerList = &xActiveTimerList1;
 800a908:	4b0d      	ldr	r3, [pc, #52]	@ (800a940 <prvCheckForValidListAndQueue+0x54>)
                        /* The timer queue is allocated statically in case
                         * configSUPPORT_DYNAMIC_ALLOCATION is 0. */
                        PRIVILEGED_DATA static StaticQueue_t xStaticTimerQueue;                                                                          /*lint !e956 Ok to declare in this manner to prevent additional conditional compilation guards in other locations. */
                        PRIVILEGED_DATA static uint8_t ucStaticTimerQueueStorage[ ( size_t ) configTIMER_QUEUE_LENGTH * sizeof( DaemonTaskMessage_t ) ]; /*lint !e956 Ok to declare in this manner to prevent additional conditional compilation guards in other locations. */

                        xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 800a90a:	2110      	movs	r1, #16
                pxCurrentTimerList = &xActiveTimerList1;
 800a90c:	601f      	str	r7, [r3, #0]
                pxOverflowTimerList = &xActiveTimerList2;
 800a90e:	4b0d      	ldr	r3, [pc, #52]	@ (800a944 <prvCheckForValidListAndQueue+0x58>)
                        xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 800a910:	200a      	movs	r0, #10
                pxOverflowTimerList = &xActiveTimerList2;
 800a912:	601e      	str	r6, [r3, #0]
                        xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 800a914:	4a0c      	ldr	r2, [pc, #48]	@ (800a948 <prvCheckForValidListAndQueue+0x5c>)
 800a916:	4b0d      	ldr	r3, [pc, #52]	@ (800a94c <prvCheckForValidListAndQueue+0x60>)
 800a918:	9500      	str	r5, [sp, #0]
 800a91a:	f7fe fe00 	bl	800951e <xQueueGenericCreateStatic>
 800a91e:	6020      	str	r0, [r4, #0]
                    }
                #endif /* if ( configSUPPORT_STATIC_ALLOCATION == 1 ) */

                #if ( configQUEUE_REGISTRY_SIZE > 0 )
                    {
                        if( xTimerQueue != NULL )
 800a920:	b110      	cbz	r0, 800a928 <prvCheckForValidListAndQueue+0x3c>
                        {
                            vQueueAddToRegistry( xTimerQueue, "TmrQ" );
 800a922:	490b      	ldr	r1, [pc, #44]	@ (800a950 <prvCheckForValidListAndQueue+0x64>)
 800a924:	f7ff f8d0 	bl	8009ac8 <vQueueAddToRegistry>
            {
                mtCOVERAGE_TEST_MARKER();
            }
        }
        taskEXIT_CRITICAL();
    }
 800a928:	b003      	add	sp, #12
 800a92a:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
        taskEXIT_CRITICAL();
 800a92e:	f7fe bc07 	b.w	8009140 <vPortExitCritical>
 800a932:	bf00      	nop
 800a934:	2006f7c4 	.word	0x2006f7c4
 800a938:	2006f7e4 	.word	0x2006f7e4
 800a93c:	2006f7d0 	.word	0x2006f7d0
 800a940:	2006f7cc 	.word	0x2006f7cc
 800a944:	2006f7c8 	.word	0x2006f7c8
 800a948:	2006f71c 	.word	0x2006f71c
 800a94c:	2006f6cc 	.word	0x2006f6cc
 800a950:	08035b95 	.word	0x08035b95

0800a954 <xTimerCreateTimerTask>:
    {
 800a954:	b510      	push	{r4, lr}
 800a956:	b088      	sub	sp, #32
        prvCheckForValidListAndQueue();
 800a958:	f7ff ffc8 	bl	800a8ec <prvCheckForValidListAndQueue>
        if( xTimerQueue != NULL )
 800a95c:	4b0f      	ldr	r3, [pc, #60]	@ (800a99c <xTimerCreateTimerTask+0x48>)
 800a95e:	681b      	ldr	r3, [r3, #0]
 800a960:	b1b3      	cbz	r3, 800a990 <xTimerCreateTimerTask+0x3c>
                    StaticTask_t * pxTimerTaskTCBBuffer = NULL;
 800a962:	2400      	movs	r4, #0
                    vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 800a964:	aa07      	add	r2, sp, #28
 800a966:	a906      	add	r1, sp, #24
 800a968:	a805      	add	r0, sp, #20
                    StackType_t * pxTimerTaskStackBuffer = NULL;
 800a96a:	e9cd 4405 	strd	r4, r4, [sp, #20]
                    vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 800a96e:	f7fe fb65 	bl	800903c <vApplicationGetTimerTaskMemory>
                    xTimerTaskHandle = xTaskCreateStatic( prvTimerTask,
 800a972:	9b05      	ldr	r3, [sp, #20]
 800a974:	9a07      	ldr	r2, [sp, #28]
 800a976:	9302      	str	r3, [sp, #8]
 800a978:	9b06      	ldr	r3, [sp, #24]
 800a97a:	4909      	ldr	r1, [pc, #36]	@ (800a9a0 <xTimerCreateTimerTask+0x4c>)
 800a97c:	9301      	str	r3, [sp, #4]
 800a97e:	2302      	movs	r3, #2
 800a980:	4808      	ldr	r0, [pc, #32]	@ (800a9a4 <xTimerCreateTimerTask+0x50>)
 800a982:	9300      	str	r3, [sp, #0]
 800a984:	4623      	mov	r3, r4
 800a986:	f7ff fa74 	bl	8009e72 <xTaskCreateStatic>
 800a98a:	4b07      	ldr	r3, [pc, #28]	@ (800a9a8 <xTimerCreateTimerTask+0x54>)
 800a98c:	6018      	str	r0, [r3, #0]
                    if( xTimerTaskHandle != NULL )
 800a98e:	b910      	cbnz	r0, 800a996 <xTimerCreateTimerTask+0x42>
        configASSERT( xReturn );
 800a990:	f7fe fca0 	bl	80092d4 <ulSetInterruptMask>
 800a994:	e7fe      	b.n	800a994 <xTimerCreateTimerTask+0x40>
    }
 800a996:	2001      	movs	r0, #1
 800a998:	b008      	add	sp, #32
 800a99a:	bd10      	pop	{r4, pc}
 800a99c:	2006f7c4 	.word	0x2006f7c4
 800a9a0:	08035b9a 	.word	0x08035b9a
 800a9a4:	0800a795 	.word	0x0800a795
 800a9a8:	2006f7c0 	.word	0x2006f7c0

0800a9ac <prvInsertBlockIntoFreeList>:
    xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
}
/*-----------------------------------------------------------*/

static void prvInsertBlockIntoFreeList( BlockLink_t * pxBlockToInsert ) /* PRIVILEGED_FUNCTION */
{
 800a9ac:	b510      	push	{r4, lr}
    BlockLink_t * pxIterator;
    uint8_t * puc;

    /* Iterate through the list until a block is found that has a higher address
     * than the block being inserted. */
    for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 800a9ae:	4b10      	ldr	r3, [pc, #64]	@ (800a9f0 <prvInsertBlockIntoFreeList+0x44>)
 800a9b0:	461a      	mov	r2, r3
 800a9b2:	681b      	ldr	r3, [r3, #0]
 800a9b4:	4283      	cmp	r3, r0
 800a9b6:	d3fb      	bcc.n	800a9b0 <prvInsertBlockIntoFreeList+0x4>

    /* Do the block being inserted, and the block it is being inserted after
     * make a contiguous block of memory? */
    puc = ( uint8_t * ) pxIterator;

    if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
 800a9b8:	6854      	ldr	r4, [r2, #4]
 800a9ba:	1911      	adds	r1, r2, r4
 800a9bc:	4288      	cmp	r0, r1
    {
        pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800a9be:	bf01      	itttt	eq
 800a9c0:	6841      	ldreq	r1, [r0, #4]
 800a9c2:	4610      	moveq	r0, r2
 800a9c4:	1909      	addeq	r1, r1, r4
 800a9c6:	6051      	streq	r1, [r2, #4]

    /* Do the block being inserted, and the block it is being inserted before
     * make a contiguous block of memory? */
    puc = ( uint8_t * ) pxBlockToInsert;

    if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800a9c8:	6844      	ldr	r4, [r0, #4]
 800a9ca:	1901      	adds	r1, r0, r4
 800a9cc:	428b      	cmp	r3, r1
 800a9ce:	d10c      	bne.n	800a9ea <prvInsertBlockIntoFreeList+0x3e>
    {
        if( pxIterator->pxNextFreeBlock != pxEnd )
 800a9d0:	4908      	ldr	r1, [pc, #32]	@ (800a9f4 <prvInsertBlockIntoFreeList+0x48>)
 800a9d2:	6809      	ldr	r1, [r1, #0]
 800a9d4:	428b      	cmp	r3, r1
 800a9d6:	d003      	beq.n	800a9e0 <prvInsertBlockIntoFreeList+0x34>
        {
            /* Form one big block from the two blocks. */
            pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 800a9d8:	6859      	ldr	r1, [r3, #4]
 800a9da:	4421      	add	r1, r4
 800a9dc:	6041      	str	r1, [r0, #4]
            pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800a9de:	6819      	ldr	r1, [r3, #0]

    /* If the block being inserted plugged a gab, so was merged with the block
     * before and the block after, then it's pxNextFreeBlock pointer will have
     * already been set, and should not be set here as that would make it point
     * to itself. */
    if( pxIterator != pxBlockToInsert )
 800a9e0:	4290      	cmp	r0, r2
            pxBlockToInsert->pxNextFreeBlock = pxEnd;
 800a9e2:	6001      	str	r1, [r0, #0]
    {
        pxIterator->pxNextFreeBlock = pxBlockToInsert;
 800a9e4:	bf18      	it	ne
 800a9e6:	6010      	strne	r0, [r2, #0]
    }
    else
    {
        mtCOVERAGE_TEST_MARKER();
    }
}
 800a9e8:	bd10      	pop	{r4, pc}
    for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 800a9ea:	4619      	mov	r1, r3
 800a9ec:	e7f8      	b.n	800a9e0 <prvInsertBlockIntoFreeList+0x34>
 800a9ee:	bf00      	nop
 800a9f0:	2006f810 	.word	0x2006f810
 800a9f4:	2006f80c 	.word	0x2006f80c

0800a9f8 <pvPortMalloc>:
{
 800a9f8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800a9fc:	4605      	mov	r5, r0
    vTaskSuspendAll();
 800a9fe:	f7ff fa8d 	bl	8009f1c <vTaskSuspendAll>
        if( pxEnd == NULL )
 800aa02:	493c      	ldr	r1, [pc, #240]	@ (800aaf4 <pvPortMalloc+0xfc>)
 800aa04:	4c3c      	ldr	r4, [pc, #240]	@ (800aaf8 <pvPortMalloc+0x100>)
 800aa06:	680b      	ldr	r3, [r1, #0]
 800aa08:	b9f3      	cbnz	r3, 800aa48 <pvPortMalloc+0x50>
    xStart.xBlockSize = ( size_t ) 0;
 800aa0a:	2000      	movs	r0, #0
    uxAddress = ( size_t ) ucHeap;
 800aa0c:	4a3b      	ldr	r2, [pc, #236]	@ (800aafc <pvPortMalloc+0x104>)
    if( ( uxAddress & portBYTE_ALIGNMENT_MASK ) != 0 )
 800aa0e:	0756      	lsls	r6, r2, #29
        uxAddress += ( portBYTE_ALIGNMENT - 1 );
 800aa10:	bf1d      	ittte	ne
 800aa12:	3207      	addne	r2, #7
        xTotalHeapSize -= uxAddress - ( size_t ) ucHeap;
 800aa14:	4b3a      	ldrne	r3, [pc, #232]	@ (800ab00 <pvPortMalloc+0x108>)
        uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 800aa16:	f022 0207 	bicne.w	r2, r2, #7
    size_t xTotalHeapSize = configTOTAL_HEAP_SIZE;
 800aa1a:	4b3a      	ldreq	r3, [pc, #232]	@ (800ab04 <pvPortMalloc+0x10c>)
        xTotalHeapSize -= uxAddress - ( size_t ) ucHeap;
 800aa1c:	bf18      	it	ne
 800aa1e:	1a9b      	subne	r3, r3, r2
    uxAddress = ( ( size_t ) pucAlignedHeap ) + xTotalHeapSize;
 800aa20:	4413      	add	r3, r2
    xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 800aa22:	4e39      	ldr	r6, [pc, #228]	@ (800ab08 <pvPortMalloc+0x110>)
    uxAddress -= xHeapStructSize;
 800aa24:	3b08      	subs	r3, #8
    uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 800aa26:	f023 0307 	bic.w	r3, r3, #7
    xStart.xBlockSize = ( size_t ) 0;
 800aa2a:	6070      	str	r0, [r6, #4]
    xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 800aa2c:	6032      	str	r2, [r6, #0]
    pxEnd->pxNextFreeBlock = NULL;
 800aa2e:	e9c3 0000 	strd	r0, r0, [r3]
    pxFirstFreeBlock->xBlockSize = uxAddress - ( size_t ) pxFirstFreeBlock;
 800aa32:	1a98      	subs	r0, r3, r2
    pxFirstFreeBlock->pxNextFreeBlock = pxEnd;
 800aa34:	e9c2 3000 	strd	r3, r0, [r2]
    pxEnd = ( void * ) uxAddress;
 800aa38:	600b      	str	r3, [r1, #0]
    xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800aa3a:	4b34      	ldr	r3, [pc, #208]	@ (800ab0c <pvPortMalloc+0x114>)
 800aa3c:	6018      	str	r0, [r3, #0]
    xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800aa3e:	4b34      	ldr	r3, [pc, #208]	@ (800ab10 <pvPortMalloc+0x118>)
 800aa40:	6018      	str	r0, [r3, #0]
    xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 800aa42:	f04f 4300 	mov.w	r3, #2147483648	@ 0x80000000
 800aa46:	6023      	str	r3, [r4, #0]
        if( ( xWantedSize & xBlockAllocatedBit ) == 0 )
 800aa48:	6827      	ldr	r7, [r4, #0]
 800aa4a:	ea17 0405 	ands.w	r4, r7, r5
 800aa4e:	d14b      	bne.n	800aae8 <pvPortMalloc+0xf0>
            if( ( xWantedSize > 0 ) &&
 800aa50:	1e6b      	subs	r3, r5, #1
 800aa52:	330a      	adds	r3, #10
 800aa54:	d808      	bhi.n	800aa68 <pvPortMalloc+0x70>
                if( ( xWantedSize & portBYTE_ALIGNMENT_MASK ) != 0x00 )
 800aa56:	0768      	lsls	r0, r5, #29
                xWantedSize += xHeapStructSize;
 800aa58:	f105 0208 	add.w	r2, r5, #8
                if( ( xWantedSize & portBYTE_ALIGNMENT_MASK ) != 0x00 )
 800aa5c:	d00b      	beq.n	800aa76 <pvPortMalloc+0x7e>
                    if( ( xWantedSize + ( portBYTE_ALIGNMENT - ( xWantedSize & portBYTE_ALIGNMENT_MASK ) ) )
 800aa5e:	f022 0307 	bic.w	r3, r2, #7
 800aa62:	3308      	adds	r3, #8
 800aa64:	4293      	cmp	r3, r2
 800aa66:	d807      	bhi.n	800aa78 <pvPortMalloc+0x80>
    ( void ) xTaskResumeAll();
 800aa68:	f7ff fb16 	bl	800a098 <xTaskResumeAll>
    configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
 800aa6c:	0763      	lsls	r3, r4, #29
 800aa6e:	d03d      	beq.n	800aaec <pvPortMalloc+0xf4>
 800aa70:	f7fe fc30 	bl	80092d4 <ulSetInterruptMask>
 800aa74:	e7fe      	b.n	800aa74 <pvPortMalloc+0x7c>
 800aa76:	4613      	mov	r3, r2
            if( ( xWantedSize > 0 ) && ( xWantedSize <= xFreeBytesRemaining ) )
 800aa78:	f8df 8094 	ldr.w	r8, [pc, #148]	@ 800ab10 <pvPortMalloc+0x118>
 800aa7c:	f8d8 6000 	ldr.w	r6, [r8]
 800aa80:	429e      	cmp	r6, r3
 800aa82:	d331      	bcc.n	800aae8 <pvPortMalloc+0xf0>
                pxBlock = xStart.pxNextFreeBlock;
 800aa84:	4a20      	ldr	r2, [pc, #128]	@ (800ab08 <pvPortMalloc+0x110>)
 800aa86:	6815      	ldr	r5, [r2, #0]
                while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
 800aa88:	6868      	ldr	r0, [r5, #4]
 800aa8a:	4298      	cmp	r0, r3
 800aa8c:	d201      	bcs.n	800aa92 <pvPortMalloc+0x9a>
 800aa8e:	682c      	ldr	r4, [r5, #0]
 800aa90:	b984      	cbnz	r4, 800aab4 <pvPortMalloc+0xbc>
                if( pxBlock != pxEnd )
 800aa92:	6809      	ldr	r1, [r1, #0]
 800aa94:	42a9      	cmp	r1, r5
 800aa96:	d027      	beq.n	800aae8 <pvPortMalloc+0xf0>
                    pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 800aa98:	6829      	ldr	r1, [r5, #0]
                    pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 800aa9a:	6814      	ldr	r4, [r2, #0]
                    pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 800aa9c:	6011      	str	r1, [r2, #0]
                    if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 800aa9e:	1ac2      	subs	r2, r0, r3
 800aaa0:	2a10      	cmp	r2, #16
                    pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 800aaa2:	f104 0408 	add.w	r4, r4, #8
                    if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 800aaa6:	d90c      	bls.n	800aac2 <pvPortMalloc+0xca>
                        pxNewBlockLink = ( void * ) ( ( ( uint8_t * ) pxBlock ) + xWantedSize );
 800aaa8:	18e8      	adds	r0, r5, r3
                        configASSERT( ( ( ( size_t ) pxNewBlockLink ) & portBYTE_ALIGNMENT_MASK ) == 0 );
 800aaaa:	0741      	lsls	r1, r0, #29
 800aaac:	d005      	beq.n	800aaba <pvPortMalloc+0xc2>
 800aaae:	f7fe fc11 	bl	80092d4 <ulSetInterruptMask>
 800aab2:	e7fe      	b.n	800aab2 <pvPortMalloc+0xba>
 800aab4:	462a      	mov	r2, r5
 800aab6:	4625      	mov	r5, r4
 800aab8:	e7e6      	b.n	800aa88 <pvPortMalloc+0x90>
                        pxNewBlockLink->xBlockSize = pxBlock->xBlockSize - xWantedSize;
 800aaba:	6042      	str	r2, [r0, #4]
                        pxBlock->xBlockSize = xWantedSize;
 800aabc:	606b      	str	r3, [r5, #4]
                        prvInsertBlockIntoFreeList( pxNewBlockLink );
 800aabe:	f7ff ff75 	bl	800a9ac <prvInsertBlockIntoFreeList>
                    pxBlock->pxNextFreeBlock = NULL;
 800aac2:	2300      	movs	r3, #0
                    xFreeBytesRemaining -= pxBlock->xBlockSize;
 800aac4:	686a      	ldr	r2, [r5, #4]
                    if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 800aac6:	4911      	ldr	r1, [pc, #68]	@ (800ab0c <pvPortMalloc+0x114>)
                    xFreeBytesRemaining -= pxBlock->xBlockSize;
 800aac8:	1ab6      	subs	r6, r6, r2
                    pxBlock->xBlockSize |= xBlockAllocatedBit;
 800aaca:	4317      	orrs	r7, r2
                    xNumberOfSuccessfulAllocations++;
 800aacc:	4a11      	ldr	r2, [pc, #68]	@ (800ab14 <pvPortMalloc+0x11c>)
                    if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 800aace:	6808      	ldr	r0, [r1, #0]
                    pxBlock->pxNextFreeBlock = NULL;
 800aad0:	602b      	str	r3, [r5, #0]
                    xNumberOfSuccessfulAllocations++;
 800aad2:	6813      	ldr	r3, [r2, #0]
                    if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 800aad4:	4286      	cmp	r6, r0
                    xNumberOfSuccessfulAllocations++;
 800aad6:	f103 0301 	add.w	r3, r3, #1
                    xFreeBytesRemaining -= pxBlock->xBlockSize;
 800aada:	f8c8 6000 	str.w	r6, [r8]
                        xMinimumEverFreeBytesRemaining = xFreeBytesRemaining;
 800aade:	bf38      	it	cc
 800aae0:	600e      	strcc	r6, [r1, #0]
                    pxBlock->xBlockSize |= xBlockAllocatedBit;
 800aae2:	606f      	str	r7, [r5, #4]
                    xNumberOfSuccessfulAllocations++;
 800aae4:	6013      	str	r3, [r2, #0]
 800aae6:	e7bf      	b.n	800aa68 <pvPortMalloc+0x70>
    void * pvReturn = NULL;
 800aae8:	2400      	movs	r4, #0
 800aaea:	e7bd      	b.n	800aa68 <pvPortMalloc+0x70>
}
 800aaec:	4620      	mov	r0, r4
 800aaee:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800aaf2:	bf00      	nop
 800aaf4:	2006f80c 	.word	0x2006f80c
 800aaf8:	2006f7f8 	.word	0x2006f7f8
 800aafc:	2006f818 	.word	0x2006f818
 800ab00:	20083098 	.word	0x20083098
 800ab04:	00013880 	.word	0x00013880
 800ab08:	2006f810 	.word	0x2006f810
 800ab0c:	2006f804 	.word	0x2006f804
 800ab10:	2006f808 	.word	0x2006f808
 800ab14:	2006f800 	.word	0x2006f800

0800ab18 <vPortFree>:
{
 800ab18:	b510      	push	{r4, lr}
    if( pv != NULL )
 800ab1a:	4604      	mov	r4, r0
 800ab1c:	b330      	cbz	r0, 800ab6c <vPortFree+0x54>
        configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
 800ab1e:	4a14      	ldr	r2, [pc, #80]	@ (800ab70 <vPortFree+0x58>)
 800ab20:	f850 3c04 	ldr.w	r3, [r0, #-4]
 800ab24:	6812      	ldr	r2, [r2, #0]
 800ab26:	4213      	tst	r3, r2
 800ab28:	d102      	bne.n	800ab30 <vPortFree+0x18>
 800ab2a:	f7fe fbd3 	bl	80092d4 <ulSetInterruptMask>
 800ab2e:	e7fe      	b.n	800ab2e <vPortFree+0x16>
        configASSERT( pxLink->pxNextFreeBlock == NULL );
 800ab30:	f850 1c08 	ldr.w	r1, [r0, #-8]
 800ab34:	b111      	cbz	r1, 800ab3c <vPortFree+0x24>
 800ab36:	f7fe fbcd 	bl	80092d4 <ulSetInterruptMask>
 800ab3a:	e7fe      	b.n	800ab3a <vPortFree+0x22>
                pxLink->xBlockSize &= ~xBlockAllocatedBit;
 800ab3c:	ea23 0302 	bic.w	r3, r3, r2
 800ab40:	f840 3c04 	str.w	r3, [r0, #-4]
                vTaskSuspendAll();
 800ab44:	f7ff f9ea 	bl	8009f1c <vTaskSuspendAll>
                    xFreeBytesRemaining += pxLink->xBlockSize;
 800ab48:	4a0a      	ldr	r2, [pc, #40]	@ (800ab74 <vPortFree+0x5c>)
 800ab4a:	f854 3c04 	ldr.w	r3, [r4, #-4]
 800ab4e:	6811      	ldr	r1, [r2, #0]
                    prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
 800ab50:	f1a4 0008 	sub.w	r0, r4, #8
                    xFreeBytesRemaining += pxLink->xBlockSize;
 800ab54:	440b      	add	r3, r1
 800ab56:	6013      	str	r3, [r2, #0]
                    prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
 800ab58:	f7ff ff28 	bl	800a9ac <prvInsertBlockIntoFreeList>
}
 800ab5c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
                    xNumberOfSuccessfulFrees++;
 800ab60:	4a05      	ldr	r2, [pc, #20]	@ (800ab78 <vPortFree+0x60>)
 800ab62:	6813      	ldr	r3, [r2, #0]
 800ab64:	3301      	adds	r3, #1
 800ab66:	6013      	str	r3, [r2, #0]
                ( void ) xTaskResumeAll();
 800ab68:	f7ff ba96 	b.w	800a098 <xTaskResumeAll>
}
 800ab6c:	bd10      	pop	{r4, pc}
 800ab6e:	bf00      	nop
 800ab70:	2006f7f8 	.word	0x2006f7f8
 800ab74:	2006f808 	.word	0x2006f808
 800ab78:	2006f7fc 	.word	0x2006f7fc

0800ab7c <_ZNK8touchgfx17AbstractPartition18getAllocationCountEv>:
 800ab7c:	8880      	ldrh	r0, [r0, #4]
 800ab7e:	4770      	bx	lr

0800ab80 <_ZN8touchgfx17AbstractPartition7indexOfEPKv>:
 800ab80:	b570      	push	{r4, r5, r6, lr}
 800ab82:	6803      	ldr	r3, [r0, #0]
 800ab84:	4605      	mov	r5, r0
 800ab86:	460c      	mov	r4, r1
 800ab88:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800ab8a:	2100      	movs	r1, #0
 800ab8c:	4798      	blx	r3
 800ab8e:	682b      	ldr	r3, [r5, #0]
 800ab90:	4606      	mov	r6, r0
 800ab92:	6a1b      	ldr	r3, [r3, #32]
 800ab94:	4628      	mov	r0, r5
 800ab96:	4798      	blx	r3
 800ab98:	1ba4      	subs	r4, r4, r6
 800ab9a:	b2a4      	uxth	r4, r4
 800ab9c:	fbb4 f0f0 	udiv	r0, r4, r0
 800aba0:	bd70      	pop	{r4, r5, r6, pc}

0800aba2 <_ZN8touchgfx17AbstractPartition5clearEv>:
 800aba2:	2300      	movs	r3, #0
 800aba4:	8083      	strh	r3, [r0, #4]
 800aba6:	4770      	bx	lr

0800aba8 <_ZN8touchgfx17AbstractPartition8allocateEt>:
 800aba8:	b510      	push	{r4, lr}
 800abaa:	4604      	mov	r4, r0
 800abac:	6803      	ldr	r3, [r0, #0]
 800abae:	8881      	ldrh	r1, [r0, #4]
 800abb0:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800abb2:	4798      	blx	r3
 800abb4:	88a3      	ldrh	r3, [r4, #4]
 800abb6:	3301      	adds	r3, #1
 800abb8:	80a3      	strh	r3, [r4, #4]
 800abba:	bd10      	pop	{r4, pc}

0800abbc <_ZN8touchgfx17AbstractPartition10allocateAtEtt>:
 800abbc:	6803      	ldr	r3, [r0, #0]
 800abbe:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800abc0:	4718      	bx	r3

0800abc2 <_ZN8touchgfx17AbstractPartitionD1Ev>:
 800abc2:	4770      	bx	lr

0800abc4 <_ZN8touchgfx17AbstractPartitionC1Ev>:
 800abc4:	4a02      	ldr	r2, [pc, #8]	@ (800abd0 <_ZN8touchgfx17AbstractPartitionC1Ev+0xc>)
 800abc6:	6002      	str	r2, [r0, #0]
 800abc8:	2200      	movs	r2, #0
 800abca:	8082      	strh	r2, [r0, #4]
 800abcc:	4770      	bx	lr
 800abce:	bf00      	nop
 800abd0:	08035bac 	.word	0x08035bac

0800abd4 <_ZN8touchgfx9Container13getFirstChildEv>:
 800abd4:	6a80      	ldr	r0, [r0, #40]	@ 0x28
 800abd6:	4770      	bx	lr

0800abd8 <_ZN8touchgfx9Container8containsERKNS_8DrawableE>:
 800abd8:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 800abda:	2000      	movs	r0, #0
 800abdc:	b12b      	cbz	r3, 800abea <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 800abde:	b920      	cbnz	r0, 800abea <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 800abe0:	1a5a      	subs	r2, r3, r1
 800abe2:	4250      	negs	r0, r2
 800abe4:	4150      	adcs	r0, r2
 800abe6:	699b      	ldr	r3, [r3, #24]
 800abe8:	e7f8      	b.n	800abdc <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x4>
 800abea:	4770      	bx	lr

0800abec <_ZN8touchgfx9Container3addERNS_8DrawableE>:
 800abec:	2300      	movs	r3, #0
 800abee:	6148      	str	r0, [r1, #20]
 800abf0:	618b      	str	r3, [r1, #24]
 800abf2:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 800abf4:	b913      	cbnz	r3, 800abfc <_ZN8touchgfx9Container3addERNS_8DrawableE+0x10>
 800abf6:	6281      	str	r1, [r0, #40]	@ 0x28
 800abf8:	4770      	bx	lr
 800abfa:	4613      	mov	r3, r2
 800abfc:	699a      	ldr	r2, [r3, #24]
 800abfe:	2a00      	cmp	r2, #0
 800ac00:	d1fb      	bne.n	800abfa <_ZN8touchgfx9Container3addERNS_8DrawableE+0xe>
 800ac02:	6199      	str	r1, [r3, #24]
 800ac04:	4770      	bx	lr

0800ac06 <_ZN8touchgfx9Container9removeAllEv>:
 800ac06:	2200      	movs	r2, #0
 800ac08:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 800ac0a:	b123      	cbz	r3, 800ac16 <_ZN8touchgfx9Container9removeAllEv+0x10>
 800ac0c:	6999      	ldr	r1, [r3, #24]
 800ac0e:	6281      	str	r1, [r0, #40]	@ 0x28
 800ac10:	e9c3 2205 	strd	r2, r2, [r3, #20]
 800ac14:	e7f8      	b.n	800ac08 <_ZN8touchgfx9Container9removeAllEv+0x2>
 800ac16:	4770      	bx	lr

0800ac18 <_ZN8touchgfx9Container6unlinkEv>:
 800ac18:	2300      	movs	r3, #0
 800ac1a:	6283      	str	r3, [r0, #40]	@ 0x28
 800ac1c:	4770      	bx	lr

0800ac1e <_ZNK8touchgfx9Container12getSolidRectEv>:
 800ac1e:	2200      	movs	r2, #0
 800ac20:	8002      	strh	r2, [r0, #0]
 800ac22:	8042      	strh	r2, [r0, #2]
 800ac24:	8082      	strh	r2, [r0, #4]
 800ac26:	80c2      	strh	r2, [r0, #6]
 800ac28:	4770      	bx	lr

0800ac2a <_ZN8touchgfx9Container20moveChildrenRelativeEss>:
 800ac2a:	b570      	push	{r4, r5, r6, lr}
 800ac2c:	460d      	mov	r5, r1
 800ac2e:	4616      	mov	r6, r2
 800ac30:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 800ac32:	b13c      	cbz	r4, 800ac44 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x1a>
 800ac34:	6823      	ldr	r3, [r4, #0]
 800ac36:	4620      	mov	r0, r4
 800ac38:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 800ac3a:	4632      	mov	r2, r6
 800ac3c:	4629      	mov	r1, r5
 800ac3e:	4798      	blx	r3
 800ac40:	69a4      	ldr	r4, [r4, #24]
 800ac42:	e7f6      	b.n	800ac32 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x8>
 800ac44:	bd70      	pop	{r4, r5, r6, pc}

0800ac46 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE>:
 800ac46:	b538      	push	{r3, r4, r5, lr}
 800ac48:	460d      	mov	r5, r1
 800ac4a:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 800ac4c:	b134      	cbz	r4, 800ac5c <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x16>
 800ac4e:	682b      	ldr	r3, [r5, #0]
 800ac50:	4621      	mov	r1, r4
 800ac52:	689b      	ldr	r3, [r3, #8]
 800ac54:	4628      	mov	r0, r5
 800ac56:	4798      	blx	r3
 800ac58:	69a4      	ldr	r4, [r4, #24]
 800ac5a:	e7f7      	b.n	800ac4c <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x6>
 800ac5c:	bd38      	pop	{r3, r4, r5, pc}

0800ac5e <_ZN8touchgfx9ContainerD1Ev>:
 800ac5e:	4770      	bx	lr

0800ac60 <_ZN8touchgfx9ContainerD0Ev>:
 800ac60:	b510      	push	{r4, lr}
 800ac62:	4604      	mov	r4, r0
 800ac64:	212c      	movs	r1, #44	@ 0x2c
 800ac66:	f026 fbae 	bl	80313c6 <_ZdlPvj>
 800ac6a:	4620      	mov	r0, r4
 800ac6c:	bd10      	pop	{r4, pc}

0800ac6e <_ZN8touchgfx9Container6removeERNS_8DrawableE>:
 800ac6e:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 800ac70:	b19b      	cbz	r3, 800ac9a <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 800ac72:	428b      	cmp	r3, r1
 800ac74:	d109      	bne.n	800ac8a <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x1c>
 800ac76:	2100      	movs	r1, #0
 800ac78:	699a      	ldr	r2, [r3, #24]
 800ac7a:	6159      	str	r1, [r3, #20]
 800ac7c:	6282      	str	r2, [r0, #40]	@ 0x28
 800ac7e:	b902      	cbnz	r2, 800ac82 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x14>
 800ac80:	4770      	bx	lr
 800ac82:	6199      	str	r1, [r3, #24]
 800ac84:	4770      	bx	lr
 800ac86:	4613      	mov	r3, r2
 800ac88:	b13a      	cbz	r2, 800ac9a <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 800ac8a:	699a      	ldr	r2, [r3, #24]
 800ac8c:	428a      	cmp	r2, r1
 800ac8e:	d1fa      	bne.n	800ac86 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x18>
 800ac90:	698a      	ldr	r2, [r1, #24]
 800ac92:	619a      	str	r2, [r3, #24]
 800ac94:	2300      	movs	r3, #0
 800ac96:	e9c1 3305 	strd	r3, r3, [r1, #20]
 800ac9a:	4770      	bx	lr

0800ac9c <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>:
 800ac9c:	b410      	push	{r4}
 800ac9e:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 800aca0:	4604      	mov	r4, r0
 800aca2:	b92b      	cbnz	r3, 800acb0 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x14>
 800aca4:	6803      	ldr	r3, [r0, #0]
 800aca6:	4611      	mov	r1, r2
 800aca8:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 800acaa:	f85d 4b04 	ldr.w	r4, [sp], #4
 800acae:	4718      	bx	r3
 800acb0:	b941      	cbnz	r1, 800acc4 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x28>
 800acb2:	6193      	str	r3, [r2, #24]
 800acb4:	6282      	str	r2, [r0, #40]	@ 0x28
 800acb6:	6154      	str	r4, [r2, #20]
 800acb8:	f85d 4b04 	ldr.w	r4, [sp], #4
 800acbc:	4770      	bx	lr
 800acbe:	4603      	mov	r3, r0
 800acc0:	2800      	cmp	r0, #0
 800acc2:	d0f9      	beq.n	800acb8 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1c>
 800acc4:	4299      	cmp	r1, r3
 800acc6:	6998      	ldr	r0, [r3, #24]
 800acc8:	d1f9      	bne.n	800acbe <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x22>
 800acca:	6190      	str	r0, [r2, #24]
 800accc:	618a      	str	r2, [r1, #24]
 800acce:	e7f2      	b.n	800acb6 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1a>

0800acd0 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>:
 800acd0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800acd4:	461f      	mov	r7, r3
 800acd6:	f890 3024 	ldrb.w	r3, [r0, #36]	@ 0x24
 800acda:	460d      	mov	r5, r1
 800acdc:	4616      	mov	r6, r2
 800acde:	b103      	cbz	r3, 800ace2 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x12>
 800ace0:	6038      	str	r0, [r7, #0]
 800ace2:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 800ace4:	b314      	cbz	r4, 800ad2c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x5c>
 800ace6:	f894 3025 	ldrb.w	r3, [r4, #37]	@ 0x25
 800acea:	b1eb      	cbz	r3, 800ad28 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800acec:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 800acf0:	428d      	cmp	r5, r1
 800acf2:	db19      	blt.n	800ad28 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800acf4:	8923      	ldrh	r3, [r4, #8]
 800acf6:	b289      	uxth	r1, r1
 800acf8:	440b      	add	r3, r1
 800acfa:	b21b      	sxth	r3, r3
 800acfc:	429d      	cmp	r5, r3
 800acfe:	da13      	bge.n	800ad28 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800ad00:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 800ad04:	4296      	cmp	r6, r2
 800ad06:	db0f      	blt.n	800ad28 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800ad08:	8963      	ldrh	r3, [r4, #10]
 800ad0a:	b292      	uxth	r2, r2
 800ad0c:	4413      	add	r3, r2
 800ad0e:	b21b      	sxth	r3, r3
 800ad10:	429e      	cmp	r6, r3
 800ad12:	da09      	bge.n	800ad28 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800ad14:	6823      	ldr	r3, [r4, #0]
 800ad16:	1ab2      	subs	r2, r6, r2
 800ad18:	1a69      	subs	r1, r5, r1
 800ad1a:	f8d3 8024 	ldr.w	r8, [r3, #36]	@ 0x24
 800ad1e:	b212      	sxth	r2, r2
 800ad20:	463b      	mov	r3, r7
 800ad22:	b209      	sxth	r1, r1
 800ad24:	4620      	mov	r0, r4
 800ad26:	47c0      	blx	r8
 800ad28:	69a4      	ldr	r4, [r4, #24]
 800ad2a:	e7db      	b.n	800ace4 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x14>
 800ad2c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800ad30 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>:
 800ad30:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ad34:	4c6c      	ldr	r4, [pc, #432]	@ (800aee8 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b8>)
 800ad36:	b0a1      	sub	sp, #132	@ 0x84
 800ad38:	6824      	ldr	r4, [r4, #0]
 800ad3a:	9d2a      	ldr	r5, [sp, #168]	@ 0xa8
 800ad3c:	f894 9049 	ldrb.w	r9, [r4, #73]	@ 0x49
 800ad40:	2400      	movs	r4, #0
 800ad42:	802c      	strh	r4, [r5, #0]
 800ad44:	9d2b      	ldr	r5, [sp, #172]	@ 0xac
 800ad46:	4606      	mov	r6, r0
 800ad48:	802c      	strh	r4, [r5, #0]
 800ad4a:	601c      	str	r4, [r3, #0]
 800ad4c:	e9cd 1201 	strd	r1, r2, [sp, #4]
 800ad50:	9303      	str	r3, [sp, #12]
 800ad52:	f7ff ffbd 	bl	800acd0 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 800ad56:	f1b9 0f03 	cmp.w	r9, #3
 800ad5a:	f340 80bf 	ble.w	800aedc <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1ac>
 800ad5e:	4631      	mov	r1, r6
 800ad60:	a80c      	add	r0, sp, #48	@ 0x30
 800ad62:	f003 fbd7 	bl	800e514 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800ad66:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	@ 0x30
 800ad6a:	9306      	str	r3, [sp, #24]
 800ad6c:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 800ad70:	9307      	str	r3, [sp, #28]
 800ad72:	9b03      	ldr	r3, [sp, #12]
 800ad74:	f8d3 a000 	ldr.w	sl, [r3]
 800ad78:	f1ba 0f00 	cmp.w	sl, #0
 800ad7c:	f000 80b1 	beq.w	800aee2 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b2>
 800ad80:	4651      	mov	r1, sl
 800ad82:	a810      	add	r0, sp, #64	@ 0x40
 800ad84:	f003 fbc6 	bl	800e514 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800ad88:	2002      	movs	r0, #2
 800ad8a:	f9bd 1044 	ldrsh.w	r1, [sp, #68]	@ 0x44
 800ad8e:	9b01      	ldr	r3, [sp, #4]
 800ad90:	fb91 f1f0 	sdiv	r1, r1, r0
 800ad94:	9a06      	ldr	r2, [sp, #24]
 800ad96:	189d      	adds	r5, r3, r2
 800ad98:	f9bd 3040 	ldrsh.w	r3, [sp, #64]	@ 0x40
 800ad9c:	9a07      	ldr	r2, [sp, #28]
 800ad9e:	4419      	add	r1, r3
 800ada0:	9b02      	ldr	r3, [sp, #8]
 800ada2:	1a6d      	subs	r5, r5, r1
 800ada4:	4413      	add	r3, r2
 800ada6:	f9bd 2046 	ldrsh.w	r2, [sp, #70]	@ 0x46
 800adaa:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	@ 0x42
 800adae:	fb92 f2f0 	sdiv	r2, r2, r0
 800adb2:	440a      	add	r2, r1
 800adb4:	1a9b      	subs	r3, r3, r2
 800adb6:	435b      	muls	r3, r3
 800adb8:	fb05 3505 	mla	r5, r5, r5, r3
 800adbc:	4f4b      	ldr	r7, [pc, #300]	@ (800aeec <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1bc>)
 800adbe:	ac10      	add	r4, sp, #64	@ 0x40
 800adc0:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800adc2:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800adc4:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800adc6:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800adc8:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800adca:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800adcc:	e897 000f 	ldmia.w	r7, {r0, r1, r2, r3}
 800add0:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 800add4:	2303      	movs	r3, #3
 800add6:	f1b9 0f0c 	cmp.w	r9, #12
 800adda:	bfda      	itte	le
 800addc:	f109 32ff 	addle.w	r2, r9, #4294967295
 800ade0:	fb92 f8f3 	sdivle	r8, r2, r3
 800ade4:	4698      	movgt	r8, r3
 800ade6:	2400      	movs	r4, #0
 800ade8:	f8cd 9000 	str.w	r9, [sp]
 800adec:	1c63      	adds	r3, r4, #1
 800adee:	9308      	str	r3, [sp, #32]
 800adf0:	9b00      	ldr	r3, [sp, #0]
 800adf2:	f04f 0b00 	mov.w	fp, #0
 800adf6:	fb93 f3f8 	sdiv	r3, r3, r8
 800adfa:	f004 0401 	and.w	r4, r4, #1
 800adfe:	aa10      	add	r2, sp, #64	@ 0x40
 800ae00:	eb02 1444 	add.w	r4, r2, r4, lsl #5
 800ae04:	b29b      	uxth	r3, r3
 800ae06:	3404      	adds	r4, #4
 800ae08:	9304      	str	r3, [sp, #16]
 800ae0a:	9a04      	ldr	r2, [sp, #16]
 800ae0c:	f854 3c04 	ldr.w	r3, [r4, #-4]
 800ae10:	fb13 f302 	smulbb	r3, r3, r2
 800ae14:	9a01      	ldr	r2, [sp, #4]
 800ae16:	b29b      	uxth	r3, r3
 800ae18:	1899      	adds	r1, r3, r2
 800ae1a:	9305      	str	r3, [sp, #20]
 800ae1c:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 800ae20:	b209      	sxth	r1, r1
 800ae22:	4299      	cmp	r1, r3
 800ae24:	db4d      	blt.n	800aec2 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x192>
 800ae26:	8932      	ldrh	r2, [r6, #8]
 800ae28:	4413      	add	r3, r2
 800ae2a:	b21b      	sxth	r3, r3
 800ae2c:	4299      	cmp	r1, r3
 800ae2e:	da48      	bge.n	800aec2 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x192>
 800ae30:	9b04      	ldr	r3, [sp, #16]
 800ae32:	6827      	ldr	r7, [r4, #0]
 800ae34:	fb17 f703 	smulbb	r7, r7, r3
 800ae38:	9b02      	ldr	r3, [sp, #8]
 800ae3a:	b2bf      	uxth	r7, r7
 800ae3c:	18fa      	adds	r2, r7, r3
 800ae3e:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 800ae42:	b212      	sxth	r2, r2
 800ae44:	429a      	cmp	r2, r3
 800ae46:	db3c      	blt.n	800aec2 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x192>
 800ae48:	8970      	ldrh	r0, [r6, #10]
 800ae4a:	4403      	add	r3, r0
 800ae4c:	b21b      	sxth	r3, r3
 800ae4e:	429a      	cmp	r2, r3
 800ae50:	da37      	bge.n	800aec2 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x192>
 800ae52:	2300      	movs	r3, #0
 800ae54:	4630      	mov	r0, r6
 800ae56:	930b      	str	r3, [sp, #44]	@ 0x2c
 800ae58:	ab0b      	add	r3, sp, #44	@ 0x2c
 800ae5a:	f7ff ff39 	bl	800acd0 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 800ae5e:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 800ae60:	b37a      	cbz	r2, 800aec2 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x192>
 800ae62:	4552      	cmp	r2, sl
 800ae64:	d02d      	beq.n	800aec2 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x192>
 800ae66:	4611      	mov	r1, r2
 800ae68:	a80e      	add	r0, sp, #56	@ 0x38
 800ae6a:	9209      	str	r2, [sp, #36]	@ 0x24
 800ae6c:	f003 fb52 	bl	800e514 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800ae70:	f04f 0e02 	mov.w	lr, #2
 800ae74:	f9bd 103c 	ldrsh.w	r1, [sp, #60]	@ 0x3c
 800ae78:	f9bd c03e 	ldrsh.w	ip, [sp, #62]	@ 0x3e
 800ae7c:	fb91 f1fe 	sdiv	r1, r1, lr
 800ae80:	fb9c fcfe 	sdiv	ip, ip, lr
 800ae84:	9a06      	ldr	r2, [sp, #24]
 800ae86:	f9bd 0038 	ldrsh.w	r0, [sp, #56]	@ 0x38
 800ae8a:	9b01      	ldr	r3, [sp, #4]
 800ae8c:	4401      	add	r1, r0
 800ae8e:	4413      	add	r3, r2
 800ae90:	1a58      	subs	r0, r3, r1
 800ae92:	9a07      	ldr	r2, [sp, #28]
 800ae94:	9b02      	ldr	r3, [sp, #8]
 800ae96:	f9bd 103a 	ldrsh.w	r1, [sp, #58]	@ 0x3a
 800ae9a:	4413      	add	r3, r2
 800ae9c:	448c      	add	ip, r1
 800ae9e:	eba3 030c 	sub.w	r3, r3, ip
 800aea2:	435b      	muls	r3, r3
 800aea4:	fb00 3300 	mla	r3, r0, r0, r3
 800aea8:	42ab      	cmp	r3, r5
 800aeaa:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 800aeac:	d208      	bcs.n	800aec0 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x190>
 800aeae:	461d      	mov	r5, r3
 800aeb0:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 800aeb2:	9803      	ldr	r0, [sp, #12]
 800aeb4:	6001      	str	r1, [r0, #0]
 800aeb6:	992a      	ldr	r1, [sp, #168]	@ 0xa8
 800aeb8:	9805      	ldr	r0, [sp, #20]
 800aeba:	8008      	strh	r0, [r1, #0]
 800aebc:	992b      	ldr	r1, [sp, #172]	@ 0xac
 800aebe:	800f      	strh	r7, [r1, #0]
 800aec0:	4692      	mov	sl, r2
 800aec2:	f10b 0b01 	add.w	fp, fp, #1
 800aec6:	f1bb 0f04 	cmp.w	fp, #4
 800aeca:	f104 0408 	add.w	r4, r4, #8
 800aece:	d19c      	bne.n	800ae0a <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xda>
 800aed0:	9b00      	ldr	r3, [sp, #0]
 800aed2:	9c08      	ldr	r4, [sp, #32]
 800aed4:	444b      	add	r3, r9
 800aed6:	4544      	cmp	r4, r8
 800aed8:	9300      	str	r3, [sp, #0]
 800aeda:	d187      	bne.n	800adec <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xbc>
 800aedc:	b021      	add	sp, #132	@ 0x84
 800aede:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800aee2:	f04f 35ff 	mov.w	r5, #4294967295
 800aee6:	e769      	b.n	800adbc <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x8c>
 800aee8:	200830a4 	.word	0x200830a4
 800aeec:	08033818 	.word	0x08033818

0800aef0 <_ZN8touchgfx4RectaNERKS0_>:
 800aef0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800aef4:	f9b1 7000 	ldrsh.w	r7, [r1]
 800aef8:	888c      	ldrh	r4, [r1, #4]
 800aefa:	f9b0 9000 	ldrsh.w	r9, [r0]
 800aefe:	443c      	add	r4, r7
 800af00:	b2a4      	uxth	r4, r4
 800af02:	fa0f f884 	sxth.w	r8, r4
 800af06:	45c1      	cmp	r9, r8
 800af08:	da2f      	bge.n	800af6a <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800af0a:	8882      	ldrh	r2, [r0, #4]
 800af0c:	444a      	add	r2, r9
 800af0e:	b292      	uxth	r2, r2
 800af10:	fa0f fe82 	sxth.w	lr, r2
 800af14:	4577      	cmp	r7, lr
 800af16:	da28      	bge.n	800af6a <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800af18:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 800af1c:	88cb      	ldrh	r3, [r1, #6]
 800af1e:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 800af22:	442b      	add	r3, r5
 800af24:	b21b      	sxth	r3, r3
 800af26:	429e      	cmp	r6, r3
 800af28:	da1f      	bge.n	800af6a <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800af2a:	88c3      	ldrh	r3, [r0, #6]
 800af2c:	4433      	add	r3, r6
 800af2e:	b29b      	uxth	r3, r3
 800af30:	fa0f fc83 	sxth.w	ip, r3
 800af34:	4565      	cmp	r5, ip
 800af36:	da18      	bge.n	800af6a <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800af38:	454f      	cmp	r7, r9
 800af3a:	bfb8      	it	lt
 800af3c:	464f      	movlt	r7, r9
 800af3e:	42b5      	cmp	r5, r6
 800af40:	bfb8      	it	lt
 800af42:	4635      	movlt	r5, r6
 800af44:	45f0      	cmp	r8, lr
 800af46:	bfd8      	it	le
 800af48:	4622      	movle	r2, r4
 800af4a:	1bd2      	subs	r2, r2, r7
 800af4c:	8082      	strh	r2, [r0, #4]
 800af4e:	884a      	ldrh	r2, [r1, #2]
 800af50:	88c9      	ldrh	r1, [r1, #6]
 800af52:	8007      	strh	r7, [r0, #0]
 800af54:	440a      	add	r2, r1
 800af56:	b292      	uxth	r2, r2
 800af58:	b211      	sxth	r1, r2
 800af5a:	458c      	cmp	ip, r1
 800af5c:	bfa8      	it	ge
 800af5e:	4613      	movge	r3, r2
 800af60:	1b5b      	subs	r3, r3, r5
 800af62:	80c3      	strh	r3, [r0, #6]
 800af64:	8045      	strh	r5, [r0, #2]
 800af66:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800af6a:	2300      	movs	r3, #0
 800af6c:	8003      	strh	r3, [r0, #0]
 800af6e:	8043      	strh	r3, [r0, #2]
 800af70:	8083      	strh	r3, [r0, #4]
 800af72:	80c3      	strh	r3, [r0, #6]
 800af74:	e7f7      	b.n	800af66 <_ZN8touchgfx4RectaNERKS0_+0x76>

0800af76 <_ZNK8touchgfx4Rect7isEmptyEv>:
 800af76:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800af7a:	2b00      	cmp	r3, #0
 800af7c:	dd06      	ble.n	800af8c <_ZNK8touchgfx4Rect7isEmptyEv+0x16>
 800af7e:	f9b0 0006 	ldrsh.w	r0, [r0, #6]
 800af82:	2800      	cmp	r0, #0
 800af84:	bfcc      	ite	gt
 800af86:	2000      	movgt	r0, #0
 800af88:	2001      	movle	r0, #1
 800af8a:	4770      	bx	lr
 800af8c:	2001      	movs	r0, #1
 800af8e:	4770      	bx	lr

0800af90 <_ZNK8touchgfx9Container16getContainedAreaEv>:
 800af90:	2300      	movs	r3, #0
 800af92:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800af96:	4604      	mov	r4, r0
 800af98:	6a8d      	ldr	r5, [r1, #40]	@ 0x28
 800af9a:	8003      	strh	r3, [r0, #0]
 800af9c:	8043      	strh	r3, [r0, #2]
 800af9e:	8083      	strh	r3, [r0, #4]
 800afa0:	80c3      	strh	r3, [r0, #6]
 800afa2:	2d00      	cmp	r5, #0
 800afa4:	d040      	beq.n	800b028 <_ZNK8touchgfx9Container16getContainedAreaEv+0x98>
 800afa6:	1d28      	adds	r0, r5, #4
 800afa8:	f7ff ffe5 	bl	800af76 <_ZNK8touchgfx4Rect7isEmptyEv>
 800afac:	b988      	cbnz	r0, 800afd2 <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 800afae:	4620      	mov	r0, r4
 800afb0:	f7ff ffe1 	bl	800af76 <_ZNK8touchgfx4Rect7isEmptyEv>
 800afb4:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 800afb8:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 800afbc:	f9b5 e008 	ldrsh.w	lr, [r5, #8]
 800afc0:	f9b5 c00a 	ldrsh.w	ip, [r5, #10]
 800afc4:	b138      	cbz	r0, 800afd6 <_ZNK8touchgfx9Container16getContainedAreaEv+0x46>
 800afc6:	8022      	strh	r2, [r4, #0]
 800afc8:	8063      	strh	r3, [r4, #2]
 800afca:	f8a4 e004 	strh.w	lr, [r4, #4]
 800afce:	f8a4 c006 	strh.w	ip, [r4, #6]
 800afd2:	69ad      	ldr	r5, [r5, #24]
 800afd4:	e7e5      	b.n	800afa2 <_ZNK8touchgfx9Container16getContainedAreaEv+0x12>
 800afd6:	f9b4 0000 	ldrsh.w	r0, [r4]
 800afda:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 800afde:	4290      	cmp	r0, r2
 800afe0:	4607      	mov	r7, r0
 800afe2:	bfa8      	it	ge
 800afe4:	4617      	movge	r7, r2
 800afe6:	4299      	cmp	r1, r3
 800afe8:	460e      	mov	r6, r1
 800afea:	bfa8      	it	ge
 800afec:	461e      	movge	r6, r3
 800afee:	f8b4 8004 	ldrh.w	r8, [r4, #4]
 800aff2:	4472      	add	r2, lr
 800aff4:	f8b4 e006 	ldrh.w	lr, [r4, #6]
 800aff8:	4440      	add	r0, r8
 800affa:	4471      	add	r1, lr
 800affc:	4463      	add	r3, ip
 800affe:	b200      	sxth	r0, r0
 800b000:	b212      	sxth	r2, r2
 800b002:	b209      	sxth	r1, r1
 800b004:	b21b      	sxth	r3, r3
 800b006:	4290      	cmp	r0, r2
 800b008:	bfac      	ite	ge
 800b00a:	ebc7 0200 	rsbge	r2, r7, r0
 800b00e:	ebc7 0202 	rsblt	r2, r7, r2
 800b012:	4299      	cmp	r1, r3
 800b014:	bfac      	ite	ge
 800b016:	ebc6 0301 	rsbge	r3, r6, r1
 800b01a:	ebc6 0303 	rsblt	r3, r6, r3
 800b01e:	8027      	strh	r7, [r4, #0]
 800b020:	8066      	strh	r6, [r4, #2]
 800b022:	80a2      	strh	r2, [r4, #4]
 800b024:	80e3      	strh	r3, [r4, #6]
 800b026:	e7d4      	b.n	800afd2 <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 800b028:	4620      	mov	r0, r4
 800b02a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800b02e <_ZNK8touchgfx9Container4drawERKNS_4RectE>:
 800b02e:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800b032:	f890 3025 	ldrb.w	r3, [r0, #37]	@ 0x25
 800b036:	b383      	cbz	r3, 800b09a <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 800b038:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 800b03a:	b374      	cbz	r4, 800b09a <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 800b03c:	f9b1 5000 	ldrsh.w	r5, [r1]
 800b040:	f9b1 6002 	ldrsh.w	r6, [r1, #2]
 800b044:	f9b1 7004 	ldrsh.w	r7, [r1, #4]
 800b048:	f9b1 8006 	ldrsh.w	r8, [r1, #6]
 800b04c:	f894 3025 	ldrb.w	r3, [r4, #37]	@ 0x25
 800b050:	b303      	cbz	r3, 800b094 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 800b052:	4668      	mov	r0, sp
 800b054:	1d21      	adds	r1, r4, #4
 800b056:	f8ad 5000 	strh.w	r5, [sp]
 800b05a:	f8ad 6002 	strh.w	r6, [sp, #2]
 800b05e:	f8ad 7004 	strh.w	r7, [sp, #4]
 800b062:	f8ad 8006 	strh.w	r8, [sp, #6]
 800b066:	f7ff ff43 	bl	800aef0 <_ZN8touchgfx4RectaNERKS0_>
 800b06a:	4668      	mov	r0, sp
 800b06c:	f7ff ff83 	bl	800af76 <_ZNK8touchgfx4Rect7isEmptyEv>
 800b070:	b980      	cbnz	r0, 800b094 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 800b072:	f8bd 3000 	ldrh.w	r3, [sp]
 800b076:	88a2      	ldrh	r2, [r4, #4]
 800b078:	4669      	mov	r1, sp
 800b07a:	1a9b      	subs	r3, r3, r2
 800b07c:	f8ad 3000 	strh.w	r3, [sp]
 800b080:	88e2      	ldrh	r2, [r4, #6]
 800b082:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800b086:	4620      	mov	r0, r4
 800b088:	1a9b      	subs	r3, r3, r2
 800b08a:	f8ad 3002 	strh.w	r3, [sp, #2]
 800b08e:	6823      	ldr	r3, [r4, #0]
 800b090:	689b      	ldr	r3, [r3, #8]
 800b092:	4798      	blx	r3
 800b094:	69a4      	ldr	r4, [r4, #24]
 800b096:	2c00      	cmp	r4, #0
 800b098:	d1d8      	bne.n	800b04c <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x1e>
 800b09a:	b002      	add	sp, #8
 800b09c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800b0a0 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>:
 800b0a0:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800b0a2:	f890 3025 	ldrb.w	r3, [r0, #37]	@ 0x25
 800b0a6:	460d      	mov	r5, r1
 800b0a8:	4616      	mov	r6, r2
 800b0aa:	b323      	cbz	r3, 800b0f6 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 800b0ac:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 800b0ae:	b314      	cbz	r4, 800b0f6 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 800b0b0:	f894 3025 	ldrb.w	r3, [r4, #37]	@ 0x25
 800b0b4:	b1eb      	cbz	r3, 800b0f2 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 800b0b6:	466b      	mov	r3, sp
 800b0b8:	6828      	ldr	r0, [r5, #0]
 800b0ba:	6869      	ldr	r1, [r5, #4]
 800b0bc:	c303      	stmia	r3!, {r0, r1}
 800b0be:	4668      	mov	r0, sp
 800b0c0:	1d21      	adds	r1, r4, #4
 800b0c2:	f7ff ff15 	bl	800aef0 <_ZN8touchgfx4RectaNERKS0_>
 800b0c6:	4668      	mov	r0, sp
 800b0c8:	f7ff ff55 	bl	800af76 <_ZNK8touchgfx4Rect7isEmptyEv>
 800b0cc:	b988      	cbnz	r0, 800b0f2 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 800b0ce:	f8bd 3000 	ldrh.w	r3, [sp]
 800b0d2:	88a2      	ldrh	r2, [r4, #4]
 800b0d4:	4669      	mov	r1, sp
 800b0d6:	1a9b      	subs	r3, r3, r2
 800b0d8:	f8ad 3000 	strh.w	r3, [sp]
 800b0dc:	88e2      	ldrh	r2, [r4, #6]
 800b0de:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800b0e2:	4620      	mov	r0, r4
 800b0e4:	1a9b      	subs	r3, r3, r2
 800b0e6:	f8ad 3002 	strh.w	r3, [sp, #2]
 800b0ea:	6823      	ldr	r3, [r4, #0]
 800b0ec:	4632      	mov	r2, r6
 800b0ee:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 800b0f0:	4798      	blx	r3
 800b0f2:	69a4      	ldr	r4, [r4, #24]
 800b0f4:	e7db      	b.n	800b0ae <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0xe>
 800b0f6:	b002      	add	sp, #8
 800b0f8:	bd70      	pop	{r4, r5, r6, pc}

0800b0fa <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEt>:
 800b0fa:	b513      	push	{r0, r1, r4, lr}
 800b0fc:	6803      	ldr	r3, [r0, #0]
 800b0fe:	f8d3 40a8 	ldr.w	r4, [r3, #168]	@ 0xa8
 800b102:	2300      	movs	r3, #0
 800b104:	e9cd 3300 	strd	r3, r3, [sp]
 800b108:	466b      	mov	r3, sp
 800b10a:	47a0      	blx	r4
 800b10c:	b002      	add	sp, #8
 800b10e:	bd10      	pop	{r4, pc}

0800b110 <_ZN8touchgfx3HAL16flushFrameBufferEv>:
 800b110:	2301      	movs	r3, #1
 800b112:	f880 304b 	strb.w	r3, [r0, #75]	@ 0x4b
 800b116:	f880 306d 	strb.w	r3, [r0, #109]	@ 0x6d
 800b11a:	4770      	bx	lr

0800b11c <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>:
 800b11c:	2301      	movs	r3, #1
 800b11e:	f880 304b 	strb.w	r3, [r0, #75]	@ 0x4b
 800b122:	f880 306d 	strb.w	r3, [r0, #109]	@ 0x6d
 800b126:	4770      	bx	lr

0800b128 <_ZN8touchgfx3HAL17allowDMATransfersEv>:
 800b128:	2201      	movs	r2, #1
 800b12a:	6843      	ldr	r3, [r0, #4]
 800b12c:	725a      	strb	r2, [r3, #9]
 800b12e:	6840      	ldr	r0, [r0, #4]
 800b130:	6803      	ldr	r3, [r0, #0]
 800b132:	691b      	ldr	r3, [r3, #16]
 800b134:	4718      	bx	r3

0800b136 <_ZN8touchgfx3HAL8flushDMAEv>:
 800b136:	6840      	ldr	r0, [r0, #4]
 800b138:	6803      	ldr	r3, [r0, #0]
 800b13a:	689b      	ldr	r3, [r3, #8]
 800b13c:	4718      	bx	r3

0800b13e <_ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_b>:
 800b13e:	b530      	push	{r4, r5, lr}
 800b140:	b08b      	sub	sp, #44	@ 0x2c
 800b142:	f89d 5058 	ldrb.w	r5, [sp, #88]	@ 0x58
 800b146:	6804      	ldr	r4, [r0, #0]
 800b148:	9509      	str	r5, [sp, #36]	@ 0x24
 800b14a:	f89d 5054 	ldrb.w	r5, [sp, #84]	@ 0x54
 800b14e:	9508      	str	r5, [sp, #32]
 800b150:	f89d 5050 	ldrb.w	r5, [sp, #80]	@ 0x50
 800b154:	9507      	str	r5, [sp, #28]
 800b156:	f8bd 504c 	ldrh.w	r5, [sp, #76]	@ 0x4c
 800b15a:	9506      	str	r5, [sp, #24]
 800b15c:	f89d 5048 	ldrb.w	r5, [sp, #72]	@ 0x48
 800b160:	9505      	str	r5, [sp, #20]
 800b162:	f89d 5044 	ldrb.w	r5, [sp, #68]	@ 0x44
 800b166:	9504      	str	r5, [sp, #16]
 800b168:	f8bd 5040 	ldrh.w	r5, [sp, #64]	@ 0x40
 800b16c:	9503      	str	r5, [sp, #12]
 800b16e:	f8bd 503c 	ldrh.w	r5, [sp, #60]	@ 0x3c
 800b172:	9502      	str	r5, [sp, #8]
 800b174:	f8bd 5038 	ldrh.w	r5, [sp, #56]	@ 0x38
 800b178:	e9cd 3500 	strd	r3, r5, [sp]
 800b17c:	4613      	mov	r3, r2
 800b17e:	6be4      	ldr	r4, [r4, #60]	@ 0x3c
 800b180:	2200      	movs	r2, #0
 800b182:	47a0      	blx	r4
 800b184:	b00b      	add	sp, #44	@ 0x2c
 800b186:	bd30      	pop	{r4, r5, pc}

0800b188 <_ZN8touchgfx3HAL10beginFrameEv>:
 800b188:	4b04      	ldr	r3, [pc, #16]	@ (800b19c <_ZN8touchgfx3HAL10beginFrameEv+0x14>)
 800b18a:	781b      	ldrb	r3, [r3, #0]
 800b18c:	b123      	cbz	r3, 800b198 <_ZN8touchgfx3HAL10beginFrameEv+0x10>
 800b18e:	f890 006e 	ldrb.w	r0, [r0, #110]	@ 0x6e
 800b192:	f080 0001 	eor.w	r0, r0, #1
 800b196:	4770      	bx	lr
 800b198:	2001      	movs	r0, #1
 800b19a:	4770      	bx	lr
 800b19c:	200830a2 	.word	0x200830a2

0800b1a0 <_ZN8touchgfx3HAL8endFrameEv>:
 800b1a0:	b510      	push	{r4, lr}
 800b1a2:	4604      	mov	r4, r0
 800b1a4:	6840      	ldr	r0, [r0, #4]
 800b1a6:	6803      	ldr	r3, [r0, #0]
 800b1a8:	689b      	ldr	r3, [r3, #8]
 800b1aa:	4798      	blx	r3
 800b1ac:	f894 306d 	ldrb.w	r3, [r4, #109]	@ 0x6d
 800b1b0:	b113      	cbz	r3, 800b1b8 <_ZN8touchgfx3HAL8endFrameEv+0x18>
 800b1b2:	2301      	movs	r3, #1
 800b1b4:	f884 306e 	strb.w	r3, [r4, #110]	@ 0x6e
 800b1b8:	bd10      	pop	{r4, pc}

0800b1ba <_ZN8touchgfx3HAL10initializeEv>:
 800b1ba:	b510      	push	{r4, lr}
 800b1bc:	4604      	mov	r4, r0
 800b1be:	f7f6 fee5 	bl	8001f8c <_ZN8touchgfx10OSWrappers10initializeEv>
 800b1c2:	f7f5 ffc3 	bl	800114c <_ZN8touchgfx4GPIO4initEv>
 800b1c6:	6860      	ldr	r0, [r4, #4]
 800b1c8:	6803      	ldr	r3, [r0, #0]
 800b1ca:	68db      	ldr	r3, [r3, #12]
 800b1cc:	4798      	blx	r3
 800b1ce:	68e0      	ldr	r0, [r4, #12]
 800b1d0:	6803      	ldr	r3, [r0, #0]
 800b1d2:	689b      	ldr	r3, [r3, #8]
 800b1d4:	4798      	blx	r3
 800b1d6:	6823      	ldr	r3, [r4, #0]
 800b1d8:	4620      	mov	r0, r4
 800b1da:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800b1de:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 800b1e0:	4718      	bx	r3

0800b1e2 <_ZN8touchgfx3HAL9taskEntryEv>:
 800b1e2:	4604      	mov	r4, r0
 800b1e4:	b508      	push	{r3, lr}
 800b1e6:	6803      	ldr	r3, [r0, #0]
 800b1e8:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 800b1ec:	4798      	blx	r3
 800b1ee:	6823      	ldr	r3, [r4, #0]
 800b1f0:	6f9b      	ldr	r3, [r3, #120]	@ 0x78
 800b1f2:	4620      	mov	r0, r4
 800b1f4:	4798      	blx	r3
 800b1f6:	f7f6 ff15 	bl	8002024 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
 800b1fa:	6823      	ldr	r3, [r4, #0]
 800b1fc:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 800b1fe:	e7f8      	b.n	800b1f2 <_ZN8touchgfx3HAL9taskEntryEv+0x10>

0800b200 <_ZN8touchgfx3HAL4tickEv>:
 800b200:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800b202:	6803      	ldr	r3, [r0, #0]
 800b204:	4604      	mov	r4, r0
 800b206:	f8d3 30b0 	ldr.w	r3, [r3, #176]	@ 0xb0
 800b20a:	4798      	blx	r3
 800b20c:	4d59      	ldr	r5, [pc, #356]	@ (800b374 <_ZN8touchgfx3HAL4tickEv+0x174>)
 800b20e:	2800      	cmp	r0, #0
 800b210:	f000 8095 	beq.w	800b33e <_ZN8touchgfx3HAL4tickEv+0x13e>
 800b214:	2600      	movs	r6, #0
 800b216:	2001      	movs	r0, #1
 800b218:	f7f5 ff9a 	bl	8001150 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 800b21c:	f894 306a 	ldrb.w	r3, [r4, #106]	@ 0x6a
 800b220:	f884 604b 	strb.w	r6, [r4, #75]	@ 0x4b
 800b224:	f884 306b 	strb.w	r3, [r4, #107]	@ 0x6b
 800b228:	f894 3079 	ldrb.w	r3, [r4, #121]	@ 0x79
 800b22c:	f884 606a 	strb.w	r6, [r4, #106]	@ 0x6a
 800b230:	b133      	cbz	r3, 800b240 <_ZN8touchgfx3HAL4tickEv+0x40>
 800b232:	6823      	ldr	r3, [r4, #0]
 800b234:	4620      	mov	r0, r4
 800b236:	f8d3 30c4 	ldr.w	r3, [r3, #196]	@ 0xc4
 800b23a:	4798      	blx	r3
 800b23c:	f884 6079 	strb.w	r6, [r4, #121]	@ 0x79
 800b240:	2601      	movs	r6, #1
 800b242:	f894 304a 	ldrb.w	r3, [r4, #74]	@ 0x4a
 800b246:	6862      	ldr	r2, [r4, #4]
 800b248:	f083 0301 	eor.w	r3, r3, #1
 800b24c:	7253      	strb	r3, [r2, #9]
 800b24e:	702e      	strb	r6, [r5, #0]
 800b250:	f002 f84e 	bl	800d2f0 <_ZN8touchgfx11Application11getInstanceEv>
 800b254:	6803      	ldr	r3, [r0, #0]
 800b256:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800b258:	4798      	blx	r3
 800b25a:	f894 306b 	ldrb.w	r3, [r4, #107]	@ 0x6b
 800b25e:	b90b      	cbnz	r3, 800b264 <_ZN8touchgfx3HAL4tickEv+0x64>
 800b260:	f884 606b 	strb.w	r6, [r4, #107]	@ 0x6b
 800b264:	f002 f844 	bl	800d2f0 <_ZN8touchgfx11Application11getInstanceEv>
 800b268:	6803      	ldr	r3, [r0, #0]
 800b26a:	695b      	ldr	r3, [r3, #20]
 800b26c:	4798      	blx	r3
 800b26e:	6de0      	ldr	r0, [r4, #92]	@ 0x5c
 800b270:	6803      	ldr	r3, [r0, #0]
 800b272:	691b      	ldr	r3, [r3, #16]
 800b274:	4798      	blx	r3
 800b276:	f894 306b 	ldrb.w	r3, [r4, #107]	@ 0x6b
 800b27a:	f894 206c 	ldrb.w	r2, [r4, #108]	@ 0x6c
 800b27e:	3b01      	subs	r3, #1
 800b280:	b2db      	uxtb	r3, r3
 800b282:	f884 306b 	strb.w	r3, [r4, #107]	@ 0x6b
 800b286:	b10a      	cbz	r2, 800b28c <_ZN8touchgfx3HAL4tickEv+0x8c>
 800b288:	2b00      	cmp	r3, #0
 800b28a:	d1eb      	bne.n	800b264 <_ZN8touchgfx3HAL4tickEv+0x64>
 800b28c:	4a3a      	ldr	r2, [pc, #232]	@ (800b378 <_ZN8touchgfx3HAL4tickEv+0x178>)
 800b28e:	f994 1068 	ldrsb.w	r1, [r4, #104]	@ 0x68
 800b292:	7813      	ldrb	r3, [r2, #0]
 800b294:	3301      	adds	r3, #1
 800b296:	b25b      	sxtb	r3, r3
 800b298:	4299      	cmp	r1, r3
 800b29a:	7013      	strb	r3, [r2, #0]
 800b29c:	dc10      	bgt.n	800b2c0 <_ZN8touchgfx3HAL4tickEv+0xc0>
 800b29e:	2300      	movs	r3, #0
 800b2a0:	68e0      	ldr	r0, [r4, #12]
 800b2a2:	7013      	strb	r3, [r2, #0]
 800b2a4:	6803      	ldr	r3, [r0, #0]
 800b2a6:	aa03      	add	r2, sp, #12
 800b2a8:	68db      	ldr	r3, [r3, #12]
 800b2aa:	a902      	add	r1, sp, #8
 800b2ac:	4798      	blx	r3
 800b2ae:	6823      	ldr	r3, [r4, #0]
 800b2b0:	2800      	cmp	r0, #0
 800b2b2:	d050      	beq.n	800b356 <_ZN8touchgfx3HAL4tickEv+0x156>
 800b2b4:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
 800b2b8:	f8d3 30bc 	ldr.w	r3, [r3, #188]	@ 0xbc
 800b2bc:	4620      	mov	r0, r4
 800b2be:	4798      	blx	r3
 800b2c0:	2300      	movs	r3, #0
 800b2c2:	6960      	ldr	r0, [r4, #20]
 800b2c4:	f88d 3007 	strb.w	r3, [sp, #7]
 800b2c8:	b158      	cbz	r0, 800b2e2 <_ZN8touchgfx3HAL4tickEv+0xe2>
 800b2ca:	6803      	ldr	r3, [r0, #0]
 800b2cc:	f10d 0107 	add.w	r1, sp, #7
 800b2d0:	68db      	ldr	r3, [r3, #12]
 800b2d2:	4798      	blx	r3
 800b2d4:	b128      	cbz	r0, 800b2e2 <_ZN8touchgfx3HAL4tickEv+0xe2>
 800b2d6:	6de0      	ldr	r0, [r4, #92]	@ 0x5c
 800b2d8:	f89d 1007 	ldrb.w	r1, [sp, #7]
 800b2dc:	6803      	ldr	r3, [r0, #0]
 800b2de:	68db      	ldr	r3, [r3, #12]
 800b2e0:	4798      	blx	r3
 800b2e2:	f104 001c 	add.w	r0, r4, #28
 800b2e6:	f005 f98f 	bl	8010608 <_ZN8touchgfx8Gestures4tickEv>
 800b2ea:	f894 3070 	ldrb.w	r3, [r4, #112]	@ 0x70
 800b2ee:	b30b      	cbz	r3, 800b334 <_ZN8touchgfx3HAL4tickEv+0x134>
 800b2f0:	6920      	ldr	r0, [r4, #16]
 800b2f2:	6803      	ldr	r3, [r0, #0]
 800b2f4:	691b      	ldr	r3, [r3, #16]
 800b2f6:	4798      	blx	r3
 800b2f8:	6f63      	ldr	r3, [r4, #116]	@ 0x74
 800b2fa:	4606      	mov	r6, r0
 800b2fc:	b903      	cbnz	r3, 800b300 <_ZN8touchgfx3HAL4tickEv+0x100>
 800b2fe:	6760      	str	r0, [r4, #116]	@ 0x74
 800b300:	6f63      	ldr	r3, [r4, #116]	@ 0x74
 800b302:	4a1e      	ldr	r2, [pc, #120]	@ (800b37c <_ZN8touchgfx3HAL4tickEv+0x17c>)
 800b304:	1af3      	subs	r3, r6, r3
 800b306:	4293      	cmp	r3, r2
 800b308:	d914      	bls.n	800b334 <_ZN8touchgfx3HAL4tickEv+0x134>
 800b30a:	6920      	ldr	r0, [r4, #16]
 800b30c:	6803      	ldr	r3, [r0, #0]
 800b30e:	699b      	ldr	r3, [r3, #24]
 800b310:	4798      	blx	r3
 800b312:	2264      	movs	r2, #100	@ 0x64
 800b314:	6f63      	ldr	r3, [r4, #116]	@ 0x74
 800b316:	1af3      	subs	r3, r6, r3
 800b318:	fbb3 f3f2 	udiv	r3, r3, r2
 800b31c:	fbb0 f0f3 	udiv	r0, r0, r3
 800b320:	2800      	cmp	r0, #0
 800b322:	dc1d      	bgt.n	800b360 <_ZN8touchgfx3HAL4tickEv+0x160>
 800b324:	f884 2069 	strb.w	r2, [r4, #105]	@ 0x69
 800b328:	6920      	ldr	r0, [r4, #16]
 800b32a:	2100      	movs	r1, #0
 800b32c:	6803      	ldr	r3, [r0, #0]
 800b32e:	69db      	ldr	r3, [r3, #28]
 800b330:	4798      	blx	r3
 800b332:	6766      	str	r6, [r4, #116]	@ 0x74
 800b334:	f001 ffdc 	bl	800d2f0 <_ZN8touchgfx11Application11getInstanceEv>
 800b338:	6803      	ldr	r3, [r0, #0]
 800b33a:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800b33c:	4798      	blx	r3
 800b33e:	6823      	ldr	r3, [r4, #0]
 800b340:	4620      	mov	r0, r4
 800b342:	f8d3 30b4 	ldr.w	r3, [r3, #180]	@ 0xb4
 800b346:	4798      	blx	r3
 800b348:	2001      	movs	r0, #1
 800b34a:	f7f5 ff1b 	bl	8001184 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 800b34e:	2300      	movs	r3, #0
 800b350:	702b      	strb	r3, [r5, #0]
 800b352:	b004      	add	sp, #16
 800b354:	bd70      	pop	{r4, r5, r6, pc}
 800b356:	f8d3 30c0 	ldr.w	r3, [r3, #192]	@ 0xc0
 800b35a:	4620      	mov	r0, r4
 800b35c:	4798      	blx	r3
 800b35e:	e7af      	b.n	800b2c0 <_ZN8touchgfx3HAL4tickEv+0xc0>
 800b360:	2863      	cmp	r0, #99	@ 0x63
 800b362:	bfcb      	itete	gt
 800b364:	2300      	movgt	r3, #0
 800b366:	f1c0 0064 	rsble	r0, r0, #100	@ 0x64
 800b36a:	f884 3069 	strbgt.w	r3, [r4, #105]	@ 0x69
 800b36e:	f884 0069 	strble.w	r0, [r4, #105]	@ 0x69
 800b372:	e7d9      	b.n	800b328 <_ZN8touchgfx3HAL4tickEv+0x128>
 800b374:	200830a8 	.word	0x200830a8
 800b378:	200830a9 	.word	0x200830a9
 800b37c:	05f5e100 	.word	0x05f5e100

0800b380 <_ZN8touchgfx3HAL17unlockFrameBufferEv>:
 800b380:	b510      	push	{r4, lr}
 800b382:	4604      	mov	r4, r0
 800b384:	f7f6 fe32 	bl	8001fec <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>
 800b388:	2200      	movs	r2, #0
 800b38a:	6863      	ldr	r3, [r4, #4]
 800b38c:	729a      	strb	r2, [r3, #10]
 800b38e:	bd10      	pop	{r4, pc}

0800b390 <_ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE>:
 800b390:	65c1      	str	r1, [r0, #92]	@ 0x5c
 800b392:	301c      	adds	r0, #28
 800b394:	f005 b936 	b.w	8010604 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>

0800b398 <_ZN8touchgfx3HAL5touchEll>:
 800b398:	b530      	push	{r4, r5, lr}
 800b39a:	4604      	mov	r4, r0
 800b39c:	b087      	sub	sp, #28
 800b39e:	a804      	add	r0, sp, #16
 800b3a0:	e9cd 1204 	strd	r1, r2, [sp, #16]
 800b3a4:	f001 fd8c 	bl	800cec0 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>
 800b3a8:	9b04      	ldr	r3, [sp, #16]
 800b3aa:	a906      	add	r1, sp, #24
 800b3ac:	f8ad 300c 	strh.w	r3, [sp, #12]
 800b3b0:	9b05      	ldr	r3, [sp, #20]
 800b3b2:	a803      	add	r0, sp, #12
 800b3b4:	f821 3d0a 	strh.w	r3, [r1, #-10]!
 800b3b8:	f001 fdd4 	bl	800cf64 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>
 800b3bc:	f894 106f 	ldrb.w	r1, [r4, #111]	@ 0x6f
 800b3c0:	f104 001c 	add.w	r0, r4, #28
 800b3c4:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 800b3c8:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 800b3cc:	b189      	cbz	r1, 800b3f2 <_ZN8touchgfx3HAL5touchEll+0x5a>
 800b3ce:	f8b4 5064 	ldrh.w	r5, [r4, #100]	@ 0x64
 800b3d2:	9300      	str	r3, [sp, #0]
 800b3d4:	f8b4 1060 	ldrh.w	r1, [r4, #96]	@ 0x60
 800b3d8:	4613      	mov	r3, r2
 800b3da:	462a      	mov	r2, r5
 800b3dc:	f005 f922 	bl	8010624 <_ZN8touchgfx8Gestures17registerDragEventEtttt>
 800b3e0:	b128      	cbz	r0, 800b3ee <_ZN8touchgfx3HAL5touchEll+0x56>
 800b3e2:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 800b3e6:	6623      	str	r3, [r4, #96]	@ 0x60
 800b3e8:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 800b3ec:	6663      	str	r3, [r4, #100]	@ 0x64
 800b3ee:	b007      	add	sp, #28
 800b3f0:	bd30      	pop	{r4, r5, pc}
 800b3f2:	f005 f957 	bl	80106a4 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 800b3f6:	2301      	movs	r3, #1
 800b3f8:	f884 306f 	strb.w	r3, [r4, #111]	@ 0x6f
 800b3fc:	e7f1      	b.n	800b3e2 <_ZN8touchgfx3HAL5touchEll+0x4a>

0800b3fe <_ZN8touchgfx3HAL9blockCopyEPvPKvm>:
 800b3fe:	b510      	push	{r4, lr}
 800b400:	2b00      	cmp	r3, #0
 800b402:	d046      	beq.n	800b492 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800b404:	ea81 0002 	eor.w	r0, r1, r2
 800b408:	07c4      	lsls	r4, r0, #31
 800b40a:	d508      	bpl.n	800b41e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x20>
 800b40c:	440b      	add	r3, r1
 800b40e:	3a01      	subs	r2, #1
 800b410:	428b      	cmp	r3, r1
 800b412:	d93e      	bls.n	800b492 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800b414:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 800b418:	f801 0b01 	strb.w	r0, [r1], #1
 800b41c:	e7f8      	b.n	800b410 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x12>
 800b41e:	07d0      	lsls	r0, r2, #31
 800b420:	bf42      	ittt	mi
 800b422:	f812 0b01 	ldrbmi.w	r0, [r2], #1
 800b426:	f103 33ff 	addmi.w	r3, r3, #4294967295
 800b42a:	f801 0b01 	strbmi.w	r0, [r1], #1
 800b42e:	2b01      	cmp	r3, #1
 800b430:	d911      	bls.n	800b456 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800b432:	ea81 0402 	eor.w	r4, r1, r2
 800b436:	07a4      	lsls	r4, r4, #30
 800b438:	4610      	mov	r0, r2
 800b43a:	d022      	beq.n	800b482 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x84>
 800b43c:	f023 0401 	bic.w	r4, r3, #1
 800b440:	440c      	add	r4, r1
 800b442:	428c      	cmp	r4, r1
 800b444:	4602      	mov	r2, r0
 800b446:	d904      	bls.n	800b452 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x54>
 800b448:	8812      	ldrh	r2, [r2, #0]
 800b44a:	3002      	adds	r0, #2
 800b44c:	f821 2b02 	strh.w	r2, [r1], #2
 800b450:	e7f7      	b.n	800b442 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x44>
 800b452:	f003 0301 	and.w	r3, r3, #1
 800b456:	f023 0003 	bic.w	r0, r3, #3
 800b45a:	4408      	add	r0, r1
 800b45c:	4288      	cmp	r0, r1
 800b45e:	4614      	mov	r4, r2
 800b460:	d904      	bls.n	800b46c <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x6e>
 800b462:	6824      	ldr	r4, [r4, #0]
 800b464:	3204      	adds	r2, #4
 800b466:	f841 4b04 	str.w	r4, [r1], #4
 800b46a:	e7f7      	b.n	800b45c <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x5e>
 800b46c:	f003 0303 	and.w	r3, r3, #3
 800b470:	440b      	add	r3, r1
 800b472:	3a01      	subs	r2, #1
 800b474:	428b      	cmp	r3, r1
 800b476:	d90c      	bls.n	800b492 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800b478:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 800b47c:	f801 0b01 	strb.w	r0, [r1], #1
 800b480:	e7f8      	b.n	800b474 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x76>
 800b482:	0790      	lsls	r0, r2, #30
 800b484:	d0e7      	beq.n	800b456 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800b486:	f832 0b02 	ldrh.w	r0, [r2], #2
 800b48a:	3b02      	subs	r3, #2
 800b48c:	f821 0b02 	strh.w	r0, [r1], #2
 800b490:	e7e1      	b.n	800b456 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800b492:	2001      	movs	r0, #1
 800b494:	bd10      	pop	{r4, pc}

0800b496 <_ZN8touchgfx3HAL7noTouchEv>:
 800b496:	b510      	push	{r4, lr}
 800b498:	f890 306f 	ldrb.w	r3, [r0, #111]	@ 0x6f
 800b49c:	4604      	mov	r4, r0
 800b49e:	b153      	cbz	r3, 800b4b6 <_ZN8touchgfx3HAL7noTouchEv+0x20>
 800b4a0:	f8b0 3064 	ldrh.w	r3, [r0, #100]	@ 0x64
 800b4a4:	f8b0 2060 	ldrh.w	r2, [r0, #96]	@ 0x60
 800b4a8:	2101      	movs	r1, #1
 800b4aa:	301c      	adds	r0, #28
 800b4ac:	f005 f8fa 	bl	80106a4 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 800b4b0:	2300      	movs	r3, #0
 800b4b2:	f884 306f 	strb.w	r3, [r4, #111]	@ 0x6f
 800b4b6:	bd10      	pop	{r4, pc}

0800b4b8 <_ZN8touchgfx3HAL3lcdEv>:
 800b4b8:	4b04      	ldr	r3, [pc, #16]	@ (800b4cc <_ZN8touchgfx3HAL3lcdEv+0x14>)
 800b4ba:	681b      	ldr	r3, [r3, #0]
 800b4bc:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
 800b4c0:	b10a      	cbz	r2, 800b4c6 <_ZN8touchgfx3HAL3lcdEv+0xe>
 800b4c2:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
 800b4c4:	b900      	cbnz	r0, 800b4c8 <_ZN8touchgfx3HAL3lcdEv+0x10>
 800b4c6:	6898      	ldr	r0, [r3, #8]
 800b4c8:	4770      	bx	lr
 800b4ca:	bf00      	nop
 800b4cc:	200830a4 	.word	0x200830a4

0800b4d0 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt>:
 800b4d0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800b4d4:	4604      	mov	r4, r0
 800b4d6:	2000      	movs	r0, #0
 800b4d8:	b085      	sub	sp, #20
 800b4da:	ad04      	add	r5, sp, #16
 800b4dc:	f845 0d04 	str.w	r0, [r5, #-4]!
 800b4e0:	69a0      	ldr	r0, [r4, #24]
 800b4e2:	4699      	mov	r9, r3
 800b4e4:	6806      	ldr	r6, [r0, #0]
 800b4e6:	9501      	str	r5, [sp, #4]
 800b4e8:	f8bd 5030 	ldrh.w	r5, [sp, #48]	@ 0x30
 800b4ec:	460f      	mov	r7, r1
 800b4ee:	9500      	str	r5, [sp, #0]
 800b4f0:	6835      	ldr	r5, [r6, #0]
 800b4f2:	4690      	mov	r8, r2
 800b4f4:	47a8      	blx	r5
 800b4f6:	4d10      	ldr	r5, [pc, #64]	@ (800b538 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x68>)
 800b4f8:	4606      	mov	r6, r0
 800b4fa:	f8a5 9000 	strh.w	r9, [r5]
 800b4fe:	f7ff ffdb 	bl	800b4b8 <_ZN8touchgfx3HAL3lcdEv>
 800b502:	6803      	ldr	r3, [r0, #0]
 800b504:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800b506:	4798      	blx	r3
 800b508:	b128      	cbz	r0, 800b516 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x46>
 800b50a:	2801      	cmp	r0, #1
 800b50c:	d00b      	beq.n	800b526 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x56>
 800b50e:	4630      	mov	r0, r6
 800b510:	b005      	add	sp, #20
 800b512:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800b516:	882b      	ldrh	r3, [r5, #0]
 800b518:	fb08 7203 	mla	r2, r8, r3, r7
 800b51c:	9b03      	ldr	r3, [sp, #12]
 800b51e:	eba3 0342 	sub.w	r3, r3, r2, lsl #1
 800b522:	63e3      	str	r3, [r4, #60]	@ 0x3c
 800b524:	e7f3      	b.n	800b50e <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 800b526:	882a      	ldrh	r2, [r5, #0]
 800b528:	9b03      	ldr	r3, [sp, #12]
 800b52a:	fb08 7202 	mla	r2, r8, r2, r7
 800b52e:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 800b532:	1a9a      	subs	r2, r3, r2
 800b534:	63e2      	str	r2, [r4, #60]	@ 0x3c
 800b536:	e7ea      	b.n	800b50e <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 800b538:	2008309e 	.word	0x2008309e

0800b53c <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb>:
 800b53c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800b53e:	b08b      	sub	sp, #44	@ 0x2c
 800b540:	4617      	mov	r7, r2
 800b542:	4604      	mov	r4, r0
 800b544:	460e      	mov	r6, r1
 800b546:	461d      	mov	r5, r3
 800b548:	f7ff ffb6 	bl	800b4b8 <_ZN8touchgfx3HAL3lcdEv>
 800b54c:	6803      	ldr	r3, [r0, #0]
 800b54e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800b550:	4798      	blx	r3
 800b552:	f89d 3054 	ldrb.w	r3, [sp, #84]	@ 0x54
 800b556:	9007      	str	r0, [sp, #28]
 800b558:	e9cd 0308 	strd	r0, r3, [sp, #32]
 800b55c:	4b0d      	ldr	r3, [pc, #52]	@ (800b594 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb+0x58>)
 800b55e:	6822      	ldr	r2, [r4, #0]
 800b560:	881b      	ldrh	r3, [r3, #0]
 800b562:	4631      	mov	r1, r6
 800b564:	9306      	str	r3, [sp, #24]
 800b566:	f89d 3050 	ldrb.w	r3, [sp, #80]	@ 0x50
 800b56a:	4620      	mov	r0, r4
 800b56c:	9305      	str	r3, [sp, #20]
 800b56e:	f89d 304c 	ldrb.w	r3, [sp, #76]	@ 0x4c
 800b572:	9304      	str	r3, [sp, #16]
 800b574:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 800b578:	9303      	str	r3, [sp, #12]
 800b57a:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
 800b57e:	9302      	str	r3, [sp, #8]
 800b580:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
 800b584:	e9cd 5300 	strd	r5, r3, [sp]
 800b588:	463b      	mov	r3, r7
 800b58a:	6bd5      	ldr	r5, [r2, #60]	@ 0x3c
 800b58c:	2200      	movs	r2, #0
 800b58e:	47a8      	blx	r5
 800b590:	b00b      	add	sp, #44	@ 0x2c
 800b592:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800b594:	2008309e 	.word	0x2008309e

0800b598 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb>:
 800b598:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800b59c:	4698      	mov	r8, r3
 800b59e:	6803      	ldr	r3, [r0, #0]
 800b5a0:	b08b      	sub	sp, #44	@ 0x2c
 800b5a2:	6bdd      	ldr	r5, [r3, #60]	@ 0x3c
 800b5a4:	4b14      	ldr	r3, [pc, #80]	@ (800b5f8 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb+0x60>)
 800b5a6:	4617      	mov	r7, r2
 800b5a8:	f8b3 9000 	ldrh.w	r9, [r3]
 800b5ac:	460e      	mov	r6, r1
 800b5ae:	4604      	mov	r4, r0
 800b5b0:	f7ff ff82 	bl	800b4b8 <_ZN8touchgfx3HAL3lcdEv>
 800b5b4:	6803      	ldr	r3, [r0, #0]
 800b5b6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800b5b8:	4798      	blx	r3
 800b5ba:	f89d 3058 	ldrb.w	r3, [sp, #88]	@ 0x58
 800b5be:	2200      	movs	r2, #0
 800b5c0:	e9cd 0308 	strd	r0, r3, [sp, #32]
 800b5c4:	2302      	movs	r3, #2
 800b5c6:	e9cd 9306 	strd	r9, r3, [sp, #24]
 800b5ca:	2301      	movs	r3, #1
 800b5cc:	9305      	str	r3, [sp, #20]
 800b5ce:	f89d 3054 	ldrb.w	r3, [sp, #84]	@ 0x54
 800b5d2:	4631      	mov	r1, r6
 800b5d4:	9304      	str	r3, [sp, #16]
 800b5d6:	f8bd 3050 	ldrh.w	r3, [sp, #80]	@ 0x50
 800b5da:	4620      	mov	r0, r4
 800b5dc:	9303      	str	r3, [sp, #12]
 800b5de:	f8bd 304c 	ldrh.w	r3, [sp, #76]	@ 0x4c
 800b5e2:	9302      	str	r3, [sp, #8]
 800b5e4:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 800b5e8:	e9cd 8300 	strd	r8, r3, [sp]
 800b5ec:	463b      	mov	r3, r7
 800b5ee:	47a8      	blx	r5
 800b5f0:	b00b      	add	sp, #44	@ 0x2c
 800b5f2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800b5f6:	bf00      	nop
 800b5f8:	2008309e 	.word	0x2008309e

0800b5fc <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb>:
 800b5fc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800b600:	4698      	mov	r8, r3
 800b602:	6803      	ldr	r3, [r0, #0]
 800b604:	b087      	sub	sp, #28
 800b606:	6d9d      	ldr	r5, [r3, #88]	@ 0x58
 800b608:	4b10      	ldr	r3, [pc, #64]	@ (800b64c <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb+0x50>)
 800b60a:	460e      	mov	r6, r1
 800b60c:	f8b3 9000 	ldrh.w	r9, [r3]
 800b610:	4617      	mov	r7, r2
 800b612:	4604      	mov	r4, r0
 800b614:	f7ff ff50 	bl	800b4b8 <_ZN8touchgfx3HAL3lcdEv>
 800b618:	6803      	ldr	r3, [r0, #0]
 800b61a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800b61c:	4798      	blx	r3
 800b61e:	f89d 3044 	ldrb.w	r3, [sp, #68]	@ 0x44
 800b622:	f8cd 900c 	str.w	r9, [sp, #12]
 800b626:	e9cd 0304 	strd	r0, r3, [sp, #16]
 800b62a:	f89d 3040 	ldrb.w	r3, [sp, #64]	@ 0x40
 800b62e:	463a      	mov	r2, r7
 800b630:	9302      	str	r3, [sp, #8]
 800b632:	f8bd 303c 	ldrh.w	r3, [sp, #60]	@ 0x3c
 800b636:	4631      	mov	r1, r6
 800b638:	9301      	str	r3, [sp, #4]
 800b63a:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
 800b63e:	4620      	mov	r0, r4
 800b640:	9300      	str	r3, [sp, #0]
 800b642:	4643      	mov	r3, r8
 800b644:	47a8      	blx	r5
 800b646:	b007      	add	sp, #28
 800b648:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800b64c:	2008309e 	.word	0x2008309e

0800b650 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE>:
 800b650:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b654:	4604      	mov	r4, r0
 800b656:	b08f      	sub	sp, #60	@ 0x3c
 800b658:	4610      	mov	r0, r2
 800b65a:	460d      	mov	r5, r1
 800b65c:	4691      	mov	r9, r2
 800b65e:	461e      	mov	r6, r3
 800b660:	f004 fd54 	bl	801010c <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 800b664:	2800      	cmp	r0, #0
 800b666:	f000 809d 	beq.w	800b7a4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x154>
 800b66a:	6823      	ldr	r3, [r4, #0]
 800b66c:	4620      	mov	r0, r4
 800b66e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800b670:	4798      	blx	r3
 800b672:	6823      	ldr	r3, [r4, #0]
 800b674:	f8df b190 	ldr.w	fp, [pc, #400]	@ 800b808 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>
 800b678:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800b67a:	4620      	mov	r0, r4
 800b67c:	4798      	blx	r3
 800b67e:	f8df a18c 	ldr.w	sl, [pc, #396]	@ 800b80c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>
 800b682:	f8bb 3000 	ldrh.w	r3, [fp]
 800b686:	4f5d      	ldr	r7, [pc, #372]	@ (800b7fc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 800b688:	9301      	str	r3, [sp, #4]
 800b68a:	f8ba 3000 	ldrh.w	r3, [sl]
 800b68e:	f10d 0838 	add.w	r8, sp, #56	@ 0x38
 800b692:	9302      	str	r3, [sp, #8]
 800b694:	883b      	ldrh	r3, [r7, #0]
 800b696:	f828 9d1c 	strh.w	r9, [r8, #-28]!
 800b69a:	9303      	str	r3, [sp, #12]
 800b69c:	4b58      	ldr	r3, [pc, #352]	@ (800b800 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 800b69e:	4640      	mov	r0, r8
 800b6a0:	881a      	ldrh	r2, [r3, #0]
 800b6a2:	9305      	str	r3, [sp, #20]
 800b6a4:	9204      	str	r2, [sp, #16]
 800b6a6:	f004 fdc5 	bl	8010234 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800b6aa:	8038      	strh	r0, [r7, #0]
 800b6ac:	4640      	mov	r0, r8
 800b6ae:	f004 fdf5 	bl	801029c <_ZNK8touchgfx6Bitmap9getHeightEv>
 800b6b2:	9b05      	ldr	r3, [sp, #20]
 800b6b4:	b280      	uxth	r0, r0
 800b6b6:	8018      	strh	r0, [r3, #0]
 800b6b8:	4b52      	ldr	r3, [pc, #328]	@ (800b804 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b4>)
 800b6ba:	781b      	ldrb	r3, [r3, #0]
 800b6bc:	2b00      	cmp	r3, #0
 800b6be:	d174      	bne.n	800b7aa <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x15a>
 800b6c0:	883b      	ldrh	r3, [r7, #0]
 800b6c2:	f8aa 0000 	strh.w	r0, [sl]
 800b6c6:	f8ab 3000 	strh.w	r3, [fp]
 800b6ca:	4648      	mov	r0, r9
 800b6cc:	e9d4 870f 	ldrd	r8, r7, [r4, #60]	@ 0x3c
 800b6d0:	f004 fd1c 	bl	801010c <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 800b6d4:	2200      	movs	r2, #0
 800b6d6:	e9c4 000f 	strd	r0, r0, [r4, #60]	@ 0x3c
 800b6da:	4611      	mov	r1, r2
 800b6dc:	4628      	mov	r0, r5
 800b6de:	f9b5 9004 	ldrsh.w	r9, [r5, #4]
 800b6e2:	f9b5 a006 	ldrsh.w	sl, [r5, #6]
 800b6e6:	f7f7 fdf5 	bl	80032d4 <_ZN8touchgfx8Drawable5setXYEss>
 800b6ea:	2301      	movs	r3, #1
 800b6ec:	f895 b025 	ldrb.w	fp, [r5, #37]	@ 0x25
 800b6f0:	f885 3025 	strb.w	r3, [r5, #37]	@ 0x25
 800b6f4:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 800b6f8:	2b00      	cmp	r3, #0
 800b6fa:	dd5c      	ble.n	800b7b6 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 800b6fc:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 800b700:	2b00      	cmp	r3, #0
 800b702:	dd58      	ble.n	800b7b6 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 800b704:	462a      	mov	r2, r5
 800b706:	f852 0f04 	ldr.w	r0, [r2, #4]!
 800b70a:	ab0a      	add	r3, sp, #40	@ 0x28
 800b70c:	6851      	ldr	r1, [r2, #4]
 800b70e:	c303      	stmia	r3!, {r0, r1}
 800b710:	4631      	mov	r1, r6
 800b712:	a80a      	add	r0, sp, #40	@ 0x28
 800b714:	f7ff fbec 	bl	800aef0 <_ZN8touchgfx4RectaNERKS0_>
 800b718:	2100      	movs	r1, #0
 800b71a:	4b38      	ldr	r3, [pc, #224]	@ (800b7fc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 800b71c:	910c      	str	r1, [sp, #48]	@ 0x30
 800b71e:	f9b3 2000 	ldrsh.w	r2, [r3]
 800b722:	4b37      	ldr	r3, [pc, #220]	@ (800b800 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 800b724:	f8ad 2034 	strh.w	r2, [sp, #52]	@ 0x34
 800b728:	f9b3 3000 	ldrsh.w	r3, [r3]
 800b72c:	aa0a      	add	r2, sp, #40	@ 0x28
 800b72e:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 800b732:	ab08      	add	r3, sp, #32
 800b734:	e892 0003 	ldmia.w	r2, {r0, r1}
 800b738:	e883 0003 	stmia.w	r3, {r0, r1}
 800b73c:	4618      	mov	r0, r3
 800b73e:	a90c      	add	r1, sp, #48	@ 0x30
 800b740:	f7ff fbd6 	bl	800aef0 <_ZN8touchgfx4RectaNERKS0_>
 800b744:	6ce3      	ldr	r3, [r4, #76]	@ 0x4c
 800b746:	2b00      	cmp	r3, #0
 800b748:	d13c      	bne.n	800b7c4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x174>
 800b74a:	2000      	movs	r0, #0
 800b74c:	2600      	movs	r6, #0
 800b74e:	f884 0058 	strb.w	r0, [r4, #88]	@ 0x58
 800b752:	696b      	ldr	r3, [r5, #20]
 800b754:	682a      	ldr	r2, [r5, #0]
 800b756:	616e      	str	r6, [r5, #20]
 800b758:	9305      	str	r3, [sp, #20]
 800b75a:	6892      	ldr	r2, [r2, #8]
 800b75c:	a908      	add	r1, sp, #32
 800b75e:	4628      	mov	r0, r5
 800b760:	4790      	blx	r2
 800b762:	9b05      	ldr	r3, [sp, #20]
 800b764:	4652      	mov	r2, sl
 800b766:	616b      	str	r3, [r5, #20]
 800b768:	4649      	mov	r1, r9
 800b76a:	f884 6058 	strb.w	r6, [r4, #88]	@ 0x58
 800b76e:	4628      	mov	r0, r5
 800b770:	f885 b025 	strb.w	fp, [r5, #37]	@ 0x25
 800b774:	f7f7 fdae 	bl	80032d4 <_ZN8touchgfx8Drawable5setXYEss>
 800b778:	9a01      	ldr	r2, [sp, #4]
 800b77a:	4b23      	ldr	r3, [pc, #140]	@ (800b808 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>)
 800b77c:	e9c4 870f 	strd	r8, r7, [r4, #60]	@ 0x3c
 800b780:	801a      	strh	r2, [r3, #0]
 800b782:	9a02      	ldr	r2, [sp, #8]
 800b784:	4b21      	ldr	r3, [pc, #132]	@ (800b80c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>)
 800b786:	4620      	mov	r0, r4
 800b788:	801a      	strh	r2, [r3, #0]
 800b78a:	9a03      	ldr	r2, [sp, #12]
 800b78c:	4b1b      	ldr	r3, [pc, #108]	@ (800b7fc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 800b78e:	801a      	strh	r2, [r3, #0]
 800b790:	4b1b      	ldr	r3, [pc, #108]	@ (800b800 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 800b792:	9a04      	ldr	r2, [sp, #16]
 800b794:	801a      	strh	r2, [r3, #0]
 800b796:	6823      	ldr	r3, [r4, #0]
 800b798:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800b79a:	4798      	blx	r3
 800b79c:	6823      	ldr	r3, [r4, #0]
 800b79e:	4620      	mov	r0, r4
 800b7a0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800b7a2:	4798      	blx	r3
 800b7a4:	b00f      	add	sp, #60	@ 0x3c
 800b7a6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800b7aa:	883b      	ldrh	r3, [r7, #0]
 800b7ac:	f8ab 0000 	strh.w	r0, [fp]
 800b7b0:	f8aa 3000 	strh.w	r3, [sl]
 800b7b4:	e789      	b.n	800b6ca <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x7a>
 800b7b6:	462a      	mov	r2, r5
 800b7b8:	f852 0f04 	ldr.w	r0, [r2, #4]!
 800b7bc:	ab0a      	add	r3, sp, #40	@ 0x28
 800b7be:	6851      	ldr	r1, [r2, #4]
 800b7c0:	c303      	stmia	r3!, {r0, r1}
 800b7c2:	e7a9      	b.n	800b718 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xc8>
 800b7c4:	a807      	add	r0, sp, #28
 800b7c6:	f004 fe73 	bl	80104b0 <_ZNK8touchgfx6Bitmap9getFormatEv>
 800b7ca:	4606      	mov	r6, r0
 800b7cc:	6ce0      	ldr	r0, [r4, #76]	@ 0x4c
 800b7ce:	6803      	ldr	r3, [r0, #0]
 800b7d0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800b7d2:	4798      	blx	r3
 800b7d4:	4286      	cmp	r6, r0
 800b7d6:	d1b8      	bne.n	800b74a <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfa>
 800b7d8:	f7ff fe6e 	bl	800b4b8 <_ZN8touchgfx3HAL3lcdEv>
 800b7dc:	6803      	ldr	r3, [r0, #0]
 800b7de:	4606      	mov	r6, r0
 800b7e0:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800b7e2:	a807      	add	r0, sp, #28
 800b7e4:	9305      	str	r3, [sp, #20]
 800b7e6:	f004 fe63 	bl	80104b0 <_ZNK8touchgfx6Bitmap9getFormatEv>
 800b7ea:	9b05      	ldr	r3, [sp, #20]
 800b7ec:	4601      	mov	r1, r0
 800b7ee:	4630      	mov	r0, r6
 800b7f0:	4798      	blx	r3
 800b7f2:	f080 0001 	eor.w	r0, r0, #1
 800b7f6:	b2c0      	uxtb	r0, r0
 800b7f8:	e7a8      	b.n	800b74c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfc>
 800b7fa:	bf00      	nop
 800b7fc:	20083098 	.word	0x20083098
 800b800:	2008309a 	.word	0x2008309a
 800b804:	2008309c 	.word	0x2008309c
 800b808:	2008309e 	.word	0x2008309e
 800b80c:	200830a0 	.word	0x200830a0

0800b810 <_ZN8touchgfx3HAL20getClientFrameBufferEv>:
 800b810:	b510      	push	{r4, lr}
 800b812:	4b07      	ldr	r3, [pc, #28]	@ (800b830 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x20>)
 800b814:	4604      	mov	r4, r0
 800b816:	781b      	ldrb	r3, [r3, #0]
 800b818:	b13b      	cbz	r3, 800b82a <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 800b81a:	6803      	ldr	r3, [r0, #0]
 800b81c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800b81e:	4798      	blx	r3
 800b820:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 800b822:	4283      	cmp	r3, r0
 800b824:	d101      	bne.n	800b82a <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 800b826:	6c20      	ldr	r0, [r4, #64]	@ 0x40
 800b828:	bd10      	pop	{r4, pc}
 800b82a:	6be0      	ldr	r0, [r4, #60]	@ 0x3c
 800b82c:	e7fc      	b.n	800b828 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x18>
 800b82e:	bf00      	nop
 800b830:	200830a2 	.word	0x200830a2

0800b834 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt>:
 800b834:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b838:	461d      	mov	r5, r3
 800b83a:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 800b83e:	2400      	movs	r4, #0
 800b840:	b08a      	sub	sp, #40	@ 0x28
 800b842:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800b846:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
 800b84a:	4690      	mov	r8, r2
 800b84c:	f8ad 3018 	strh.w	r3, [sp, #24]
 800b850:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
 800b854:	f8bd 604c 	ldrh.w	r6, [sp, #76]	@ 0x4c
 800b858:	f8ad 301a 	strh.w	r3, [sp, #26]
 800b85c:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 800b860:	4607      	mov	r7, r0
 800b862:	f8ad 301c 	strh.w	r3, [sp, #28]
 800b866:	9404      	str	r4, [sp, #16]
 800b868:	f88d 4020 	strb.w	r4, [sp, #32]
 800b86c:	f7ff ffd0 	bl	800b810 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800b870:	fb06 8505 	mla	r5, r6, r5, r8
 800b874:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 800b878:	6878      	ldr	r0, [r7, #4]
 800b87a:	9505      	str	r5, [sp, #20]
 800b87c:	f8ad 601e 	strh.w	r6, [sp, #30]
 800b880:	f88d 4022 	strb.w	r4, [sp, #34]	@ 0x22
 800b884:	f88d 4021 	strb.w	r4, [sp, #33]	@ 0x21
 800b888:	f88d 4023 	strb.w	r4, [sp, #35]	@ 0x23
 800b88c:	f88d 4024 	strb.w	r4, [sp, #36]	@ 0x24
 800b890:	6803      	ldr	r3, [r0, #0]
 800b892:	a901      	add	r1, sp, #4
 800b894:	685b      	ldr	r3, [r3, #4]
 800b896:	4798      	blx	r3
 800b898:	b00a      	add	sp, #40	@ 0x28
 800b89a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800b89e <_ZN8touchgfx3HAL12blitFillWordEtttttt>:
 800b89e:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800b8a2:	2400      	movs	r4, #0
 800b8a4:	461d      	mov	r5, r3
 800b8a6:	f44f 6300 	mov.w	r3, #2048	@ 0x800
 800b8aa:	4691      	mov	r9, r2
 800b8ac:	b08b      	sub	sp, #44	@ 0x2c
 800b8ae:	4688      	mov	r8, r1
 800b8b0:	f8bd 6050 	ldrh.w	r6, [sp, #80]	@ 0x50
 800b8b4:	4607      	mov	r7, r0
 800b8b6:	e9cd 3401 	strd	r3, r4, [sp, #4]
 800b8ba:	9404      	str	r4, [sp, #16]
 800b8bc:	f7ff ffa8 	bl	800b810 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800b8c0:	fb06 9505 	mla	r5, r6, r5, r9
 800b8c4:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 800b8c8:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 800b8cc:	f8ad 3018 	strh.w	r3, [sp, #24]
 800b8d0:	f8bd 304c 	ldrh.w	r3, [sp, #76]	@ 0x4c
 800b8d4:	6878      	ldr	r0, [r7, #4]
 800b8d6:	9505      	str	r5, [sp, #20]
 800b8d8:	f8ad 301a 	strh.w	r3, [sp, #26]
 800b8dc:	f8ad 401c 	strh.w	r4, [sp, #28]
 800b8e0:	f8ad 601e 	strh.w	r6, [sp, #30]
 800b8e4:	f8cd 8010 	str.w	r8, [sp, #16]
 800b8e8:	f8ad 4020 	strh.w	r4, [sp, #32]
 800b8ec:	f88d 4022 	strb.w	r4, [sp, #34]	@ 0x22
 800b8f0:	f88d 4023 	strb.w	r4, [sp, #35]	@ 0x23
 800b8f4:	f88d 4024 	strb.w	r4, [sp, #36]	@ 0x24
 800b8f8:	6803      	ldr	r3, [r0, #0]
 800b8fa:	a901      	add	r1, sp, #4
 800b8fc:	685b      	ldr	r3, [r3, #4]
 800b8fe:	4798      	blx	r3
 800b900:	b00b      	add	sp, #44	@ 0x2c
 800b902:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	...

0800b908 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b>:
 800b908:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b90c:	4698      	mov	r8, r3
 800b90e:	2300      	movs	r3, #0
 800b910:	b08a      	sub	sp, #40	@ 0x28
 800b912:	f89d 505c 	ldrb.w	r5, [sp, #92]	@ 0x5c
 800b916:	4606      	mov	r6, r0
 800b918:	2d0b      	cmp	r5, #11
 800b91a:	f89d 0050 	ldrb.w	r0, [sp, #80]	@ 0x50
 800b91e:	f89d c054 	ldrb.w	ip, [sp, #84]	@ 0x54
 800b922:	f8bd 7058 	ldrh.w	r7, [sp, #88]	@ 0x58
 800b926:	f89d 4060 	ldrb.w	r4, [sp, #96]	@ 0x60
 800b92a:	9304      	str	r3, [sp, #16]
 800b92c:	d137      	bne.n	800b99e <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x96>
 800b92e:	2380      	movs	r3, #128	@ 0x80
 800b930:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800b934:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
 800b938:	f88d 0020 	strb.w	r0, [sp, #32]
 800b93c:	f8ad 3018 	strh.w	r3, [sp, #24]
 800b940:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 800b944:	4630      	mov	r0, r6
 800b946:	f8ad 301a 	strh.w	r3, [sp, #26]
 800b94a:	f8bd 304c 	ldrh.w	r3, [sp, #76]	@ 0x4c
 800b94e:	9203      	str	r2, [sp, #12]
 800b950:	f8ad 301c 	strh.w	r3, [sp, #28]
 800b954:	f7ff ff5c 	bl	800b810 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800b958:	2c0b      	cmp	r4, #11
 800b95a:	bf8c      	ite	hi
 800b95c:	2100      	movhi	r1, #0
 800b95e:	4b1b      	ldrls	r3, [pc, #108]	@ (800b9cc <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc4>)
 800b960:	f8bd 2040 	ldrh.w	r2, [sp, #64]	@ 0x40
 800b964:	bf98      	it	ls
 800b966:	5d19      	ldrbls	r1, [r3, r4]
 800b968:	fb02 8307 	mla	r3, r2, r7, r8
 800b96c:	10c9      	asrs	r1, r1, #3
 800b96e:	fb01 0003 	mla	r0, r1, r3, r0
 800b972:	f89d 3064 	ldrb.w	r3, [sp, #100]	@ 0x64
 800b976:	9005      	str	r0, [sp, #20]
 800b978:	f88d 3023 	strb.w	r3, [sp, #35]	@ 0x23
 800b97c:	2300      	movs	r3, #0
 800b97e:	6870      	ldr	r0, [r6, #4]
 800b980:	f8ad 701e 	strh.w	r7, [sp, #30]
 800b984:	f88d 5021 	strb.w	r5, [sp, #33]	@ 0x21
 800b988:	f88d 4022 	strb.w	r4, [sp, #34]	@ 0x22
 800b98c:	f88d 3024 	strb.w	r3, [sp, #36]	@ 0x24
 800b990:	6803      	ldr	r3, [r0, #0]
 800b992:	a901      	add	r1, sp, #4
 800b994:	685b      	ldr	r3, [r3, #4]
 800b996:	4798      	blx	r3
 800b998:	b00a      	add	sp, #40	@ 0x28
 800b99a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800b99e:	2d02      	cmp	r5, #2
 800b9a0:	d109      	bne.n	800b9b6 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xae>
 800b9a2:	28ff      	cmp	r0, #255	@ 0xff
 800b9a4:	d105      	bne.n	800b9b2 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xaa>
 800b9a6:	f1bc 0f00 	cmp.w	ip, #0
 800b9aa:	bf14      	ite	ne
 800b9ac:	2340      	movne	r3, #64	@ 0x40
 800b9ae:	2320      	moveq	r3, #32
 800b9b0:	e7be      	b.n	800b930 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800b9b2:	2340      	movs	r3, #64	@ 0x40
 800b9b4:	e7bc      	b.n	800b930 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800b9b6:	28ff      	cmp	r0, #255	@ 0xff
 800b9b8:	d105      	bne.n	800b9c6 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xbe>
 800b9ba:	f1bc 0f00 	cmp.w	ip, #0
 800b9be:	bf14      	ite	ne
 800b9c0:	2304      	movne	r3, #4
 800b9c2:	2301      	moveq	r3, #1
 800b9c4:	e7b4      	b.n	800b930 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800b9c6:	2304      	movs	r3, #4
 800b9c8:	e7b2      	b.n	800b930 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800b9ca:	bf00      	nop
 800b9cc:	08035c68 	.word	0x08035c68

0800b9d0 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb>:
 800b9d0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b9d4:	b08b      	sub	sp, #44	@ 0x2c
 800b9d6:	f89d 9058 	ldrb.w	r9, [sp, #88]	@ 0x58
 800b9da:	461d      	mov	r5, r3
 800b9dc:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 800b9e0:	bf14      	ite	ne
 800b9e2:	2308      	movne	r3, #8
 800b9e4:	2302      	moveq	r3, #2
 800b9e6:	2400      	movs	r4, #0
 800b9e8:	f89d 6060 	ldrb.w	r6, [sp, #96]	@ 0x60
 800b9ec:	e9cd 3401 	strd	r3, r4, [sp, #4]
 800b9f0:	4688      	mov	r8, r1
 800b9f2:	4693      	mov	fp, r2
 800b9f4:	f8bd a05c 	ldrh.w	sl, [sp, #92]	@ 0x5c
 800b9f8:	9404      	str	r4, [sp, #16]
 800b9fa:	4607      	mov	r7, r0
 800b9fc:	f7ff ff08 	bl	800b810 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800ba00:	2e0b      	cmp	r6, #11
 800ba02:	bf98      	it	ls
 800ba04:	4b15      	ldrls	r3, [pc, #84]	@ (800ba5c <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0x8c>)
 800ba06:	fb05 b50a 	mla	r5, r5, sl, fp
 800ba0a:	bf98      	it	ls
 800ba0c:	5d9c      	ldrbls	r4, [r3, r6]
 800ba0e:	f8bd 3050 	ldrh.w	r3, [sp, #80]	@ 0x50
 800ba12:	10e4      	asrs	r4, r4, #3
 800ba14:	f8ad 3018 	strh.w	r3, [sp, #24]
 800ba18:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
 800ba1c:	fb04 0405 	mla	r4, r4, r5, r0
 800ba20:	f8ad 301a 	strh.w	r3, [sp, #26]
 800ba24:	2300      	movs	r3, #0
 800ba26:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 800ba2a:	6878      	ldr	r0, [r7, #4]
 800ba2c:	9405      	str	r4, [sp, #20]
 800ba2e:	f8ad 301c 	strh.w	r3, [sp, #28]
 800ba32:	f8ad a01e 	strh.w	sl, [sp, #30]
 800ba36:	f8cd 8010 	str.w	r8, [sp, #16]
 800ba3a:	f88d 9020 	strb.w	r9, [sp, #32]
 800ba3e:	f88d 2023 	strb.w	r2, [sp, #35]	@ 0x23
 800ba42:	f88d 3024 	strb.w	r3, [sp, #36]	@ 0x24
 800ba46:	f88d 6021 	strb.w	r6, [sp, #33]	@ 0x21
 800ba4a:	f88d 6022 	strb.w	r6, [sp, #34]	@ 0x22
 800ba4e:	6803      	ldr	r3, [r0, #0]
 800ba50:	a901      	add	r1, sp, #4
 800ba52:	685b      	ldr	r3, [r3, #4]
 800ba54:	4798      	blx	r3
 800ba56:	b00b      	add	sp, #44	@ 0x2c
 800ba58:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ba5c:	08035c68 	.word	0x08035c68

0800ba60 <_ZNK8touchgfx3HAL13getDstAddressEttPt>:
 800ba60:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800ba64:	461e      	mov	r6, r3
 800ba66:	4b0a      	ldr	r3, [pc, #40]	@ (800ba90 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x30>)
 800ba68:	460f      	mov	r7, r1
 800ba6a:	881d      	ldrh	r5, [r3, #0]
 800ba6c:	4690      	mov	r8, r2
 800ba6e:	f7ff fd23 	bl	800b4b8 <_ZN8touchgfx3HAL3lcdEv>
 800ba72:	6803      	ldr	r3, [r0, #0]
 800ba74:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800ba76:	4798      	blx	r3
 800ba78:	280b      	cmp	r0, #11
 800ba7a:	bf8e      	itee	hi
 800ba7c:	2400      	movhi	r4, #0
 800ba7e:	4b05      	ldrls	r3, [pc, #20]	@ (800ba94 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x34>)
 800ba80:	5c1c      	ldrbls	r4, [r3, r0]
 800ba82:	fb08 7005 	mla	r0, r8, r5, r7
 800ba86:	10e4      	asrs	r4, r4, #3
 800ba88:	fb04 6000 	mla	r0, r4, r0, r6
 800ba8c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800ba90:	2008309e 	.word	0x2008309e
 800ba94:	08035c68 	.word	0x08035c68

0800ba98 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb>:
 800ba98:	b5f0      	push	{r4, r5, r6, r7, lr}
 800ba9a:	2500      	movs	r5, #0
 800ba9c:	b08b      	sub	sp, #44	@ 0x2c
 800ba9e:	461f      	mov	r7, r3
 800baa0:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
 800baa4:	4604      	mov	r4, r0
 800baa6:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800baaa:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
 800baae:	4616      	mov	r6, r2
 800bab0:	f8ad 3018 	strh.w	r3, [sp, #24]
 800bab4:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
 800bab8:	9504      	str	r5, [sp, #16]
 800baba:	f8ad 301a 	strh.w	r3, [sp, #26]
 800babe:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 800bac2:	f8ad 301c 	strh.w	r3, [sp, #28]
 800bac6:	f89d 3050 	ldrb.w	r3, [sp, #80]	@ 0x50
 800baca:	f88d 3020 	strb.w	r3, [sp, #32]
 800bace:	f7ff fe9f 	bl	800b810 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800bad2:	463a      	mov	r2, r7
 800bad4:	4631      	mov	r1, r6
 800bad6:	4603      	mov	r3, r0
 800bad8:	4620      	mov	r0, r4
 800bada:	f7ff ffc1 	bl	800ba60 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800bade:	4b0e      	ldr	r3, [pc, #56]	@ (800bb18 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x80>)
 800bae0:	9005      	str	r0, [sp, #20]
 800bae2:	881b      	ldrh	r3, [r3, #0]
 800bae4:	f8ad 301e 	strh.w	r3, [sp, #30]
 800bae8:	f7ff fce6 	bl	800b4b8 <_ZN8touchgfx3HAL3lcdEv>
 800baec:	6803      	ldr	r3, [r0, #0]
 800baee:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800baf0:	4798      	blx	r3
 800baf2:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 800baf4:	f88d 0022 	strb.w	r0, [sp, #34]	@ 0x22
 800baf8:	9304      	str	r3, [sp, #16]
 800bafa:	f89d 3058 	ldrb.w	r3, [sp, #88]	@ 0x58
 800bafe:	f88d 0021 	strb.w	r0, [sp, #33]	@ 0x21
 800bb02:	6860      	ldr	r0, [r4, #4]
 800bb04:	f88d 3023 	strb.w	r3, [sp, #35]	@ 0x23
 800bb08:	f88d 5024 	strb.w	r5, [sp, #36]	@ 0x24
 800bb0c:	6803      	ldr	r3, [r0, #0]
 800bb0e:	a901      	add	r1, sp, #4
 800bb10:	685b      	ldr	r3, [r3, #4]
 800bb12:	4798      	blx	r3
 800bb14:	b00b      	add	sp, #44	@ 0x2c
 800bb16:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800bb18:	2008309e 	.word	0x2008309e

0800bb1c <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE>:
 800bb1c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800bb1e:	b08d      	sub	sp, #52	@ 0x34
 800bb20:	466b      	mov	r3, sp
 800bb22:	e883 0006 	stmia.w	r3, {r1, r2}
 800bb26:	2300      	movs	r3, #0
 800bb28:	2501      	movs	r5, #1
 800bb2a:	9306      	str	r3, [sp, #24]
 800bb2c:	6803      	ldr	r3, [r0, #0]
 800bb2e:	9503      	str	r5, [sp, #12]
 800bb30:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800bb32:	4604      	mov	r4, r0
 800bb34:	f8bd 6000 	ldrh.w	r6, [sp]
 800bb38:	f8bd 7002 	ldrh.w	r7, [sp, #2]
 800bb3c:	4798      	blx	r3
 800bb3e:	463a      	mov	r2, r7
 800bb40:	4631      	mov	r1, r6
 800bb42:	4603      	mov	r3, r0
 800bb44:	4620      	mov	r0, r4
 800bb46:	f7ff ff8b 	bl	800ba60 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800bb4a:	6c63      	ldr	r3, [r4, #68]	@ 0x44
 800bb4c:	9004      	str	r0, [sp, #16]
 800bb4e:	9307      	str	r3, [sp, #28]
 800bb50:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800bb54:	f8ad 3020 	strh.w	r3, [sp, #32]
 800bb58:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800bb5c:	f8ad 3022 	strh.w	r3, [sp, #34]	@ 0x22
 800bb60:	4b0e      	ldr	r3, [pc, #56]	@ (800bb9c <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x80>)
 800bb62:	881b      	ldrh	r3, [r3, #0]
 800bb64:	f8ad 3024 	strh.w	r3, [sp, #36]	@ 0x24
 800bb68:	f8ad 3026 	strh.w	r3, [sp, #38]	@ 0x26
 800bb6c:	f7ff fca4 	bl	800b4b8 <_ZN8touchgfx3HAL3lcdEv>
 800bb70:	6803      	ldr	r3, [r0, #0]
 800bb72:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800bb74:	4798      	blx	r3
 800bb76:	23ff      	movs	r3, #255	@ 0xff
 800bb78:	f88d 0029 	strb.w	r0, [sp, #41]	@ 0x29
 800bb7c:	f88d 002a 	strb.w	r0, [sp, #42]	@ 0x2a
 800bb80:	6860      	ldr	r0, [r4, #4]
 800bb82:	f88d 3028 	strb.w	r3, [sp, #40]	@ 0x28
 800bb86:	f88d 502b 	strb.w	r5, [sp, #43]	@ 0x2b
 800bb8a:	f88d 502c 	strb.w	r5, [sp, #44]	@ 0x2c
 800bb8e:	6803      	ldr	r3, [r0, #0]
 800bb90:	a903      	add	r1, sp, #12
 800bb92:	685b      	ldr	r3, [r3, #4]
 800bb94:	4798      	blx	r3
 800bb96:	6c60      	ldr	r0, [r4, #68]	@ 0x44
 800bb98:	b00d      	add	sp, #52	@ 0x34
 800bb9a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800bb9c:	2008309e 	.word	0x2008309e

0800bba0 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm>:
 800bba0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800bba4:	b08c      	sub	sp, #48	@ 0x30
 800bba6:	466d      	mov	r5, sp
 800bba8:	461e      	mov	r6, r3
 800bbaa:	2300      	movs	r3, #0
 800bbac:	e885 0006 	stmia.w	r5, {r1, r2}
 800bbb0:	2501      	movs	r5, #1
 800bbb2:	9306      	str	r3, [sp, #24]
 800bbb4:	6803      	ldr	r3, [r0, #0]
 800bbb6:	9503      	str	r5, [sp, #12]
 800bbb8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800bbba:	4604      	mov	r4, r0
 800bbbc:	f8bd 7000 	ldrh.w	r7, [sp]
 800bbc0:	f8bd 8002 	ldrh.w	r8, [sp, #2]
 800bbc4:	4798      	blx	r3
 800bbc6:	4642      	mov	r2, r8
 800bbc8:	4639      	mov	r1, r7
 800bbca:	4603      	mov	r3, r0
 800bbcc:	4620      	mov	r0, r4
 800bbce:	f7ff ff47 	bl	800ba60 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800bbd2:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800bbd6:	9004      	str	r0, [sp, #16]
 800bbd8:	f8ad 3020 	strh.w	r3, [sp, #32]
 800bbdc:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800bbe0:	9607      	str	r6, [sp, #28]
 800bbe2:	f8ad 3022 	strh.w	r3, [sp, #34]	@ 0x22
 800bbe6:	4b10      	ldr	r3, [pc, #64]	@ (800bc28 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm+0x88>)
 800bbe8:	881b      	ldrh	r3, [r3, #0]
 800bbea:	f8ad 3024 	strh.w	r3, [sp, #36]	@ 0x24
 800bbee:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 800bbf0:	f8ad 3026 	strh.w	r3, [sp, #38]	@ 0x26
 800bbf4:	f7ff fc60 	bl	800b4b8 <_ZN8touchgfx3HAL3lcdEv>
 800bbf8:	6803      	ldr	r3, [r0, #0]
 800bbfa:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800bbfc:	4798      	blx	r3
 800bbfe:	23ff      	movs	r3, #255	@ 0xff
 800bc00:	f88d 0029 	strb.w	r0, [sp, #41]	@ 0x29
 800bc04:	f88d 002a 	strb.w	r0, [sp, #42]	@ 0x2a
 800bc08:	6860      	ldr	r0, [r4, #4]
 800bc0a:	f88d 3028 	strb.w	r3, [sp, #40]	@ 0x28
 800bc0e:	f88d 502b 	strb.w	r5, [sp, #43]	@ 0x2b
 800bc12:	f88d 502c 	strb.w	r5, [sp, #44]	@ 0x2c
 800bc16:	6803      	ldr	r3, [r0, #0]
 800bc18:	a903      	add	r1, sp, #12
 800bc1a:	685b      	ldr	r3, [r3, #4]
 800bc1c:	4798      	blx	r3
 800bc1e:	4630      	mov	r0, r6
 800bc20:	b00c      	add	sp, #48	@ 0x30
 800bc22:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800bc26:	bf00      	nop
 800bc28:	2008309e 	.word	0x2008309e

0800bc2c <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE>:
 800bc2c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800bc2e:	b085      	sub	sp, #20
 800bc30:	ac02      	add	r4, sp, #8
 800bc32:	e884 0006 	stmia.w	r4, {r1, r2}
 800bc36:	4605      	mov	r5, r0
 800bc38:	f8bd 6008 	ldrh.w	r6, [sp, #8]
 800bc3c:	f8bd 700a 	ldrh.w	r7, [sp, #10]
 800bc40:	f7ff fde6 	bl	800b810 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800bc44:	463a      	mov	r2, r7
 800bc46:	4603      	mov	r3, r0
 800bc48:	4631      	mov	r1, r6
 800bc4a:	4628      	mov	r0, r5
 800bc4c:	f7ff ff08 	bl	800ba60 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800bc50:	4a05      	ldr	r2, [pc, #20]	@ (800bc68 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE+0x3c>)
 800bc52:	682b      	ldr	r3, [r5, #0]
 800bc54:	8812      	ldrh	r2, [r2, #0]
 800bc56:	9200      	str	r2, [sp, #0]
 800bc58:	6ede      	ldr	r6, [r3, #108]	@ 0x6c
 800bc5a:	e894 0006 	ldmia.w	r4, {r1, r2}
 800bc5e:	4603      	mov	r3, r0
 800bc60:	4628      	mov	r0, r5
 800bc62:	47b0      	blx	r6
 800bc64:	b005      	add	sp, #20
 800bc66:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800bc68:	2008309e 	.word	0x2008309e

0800bc6c <_ZN8touchgfx3HAL16swapFrameBuffersEv>:
 800bc6c:	b570      	push	{r4, r5, r6, lr}
 800bc6e:	f890 306e 	ldrb.w	r3, [r0, #110]	@ 0x6e
 800bc72:	4604      	mov	r4, r0
 800bc74:	b19b      	cbz	r3, 800bc9e <_ZN8touchgfx3HAL16swapFrameBuffersEv+0x32>
 800bc76:	2002      	movs	r0, #2
 800bc78:	f7f5 fa9e 	bl	80011b8 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>
 800bc7c:	2300      	movs	r3, #0
 800bc7e:	f884 306e 	strb.w	r3, [r4, #110]	@ 0x6e
 800bc82:	f884 306d 	strb.w	r3, [r4, #109]	@ 0x6d
 800bc86:	6823      	ldr	r3, [r4, #0]
 800bc88:	4620      	mov	r0, r4
 800bc8a:	f8d3 50b8 	ldr.w	r5, [r3, #184]	@ 0xb8
 800bc8e:	f7ff fdbf 	bl	800b810 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800bc92:	462b      	mov	r3, r5
 800bc94:	4601      	mov	r1, r0
 800bc96:	4620      	mov	r0, r4
 800bc98:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800bc9c:	4718      	bx	r3
 800bc9e:	bd70      	pop	{r4, r5, r6, pc}

0800bca0 <_ZN8touchgfx3HAL12setMCUActiveEb>:
 800bca0:	b570      	push	{r4, r5, r6, lr}
 800bca2:	4605      	mov	r5, r0
 800bca4:	460c      	mov	r4, r1
 800bca6:	2003      	movs	r0, #3
 800bca8:	b149      	cbz	r1, 800bcbe <_ZN8touchgfx3HAL12setMCUActiveEb+0x1e>
 800bcaa:	f7f5 fa51 	bl	8001150 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 800bcae:	6928      	ldr	r0, [r5, #16]
 800bcb0:	b168      	cbz	r0, 800bcce <_ZN8touchgfx3HAL12setMCUActiveEb+0x2e>
 800bcb2:	2101      	movs	r1, #1
 800bcb4:	6803      	ldr	r3, [r0, #0]
 800bcb6:	695b      	ldr	r3, [r3, #20]
 800bcb8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800bcbc:	4718      	bx	r3
 800bcbe:	f7f5 fa61 	bl	8001184 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 800bcc2:	6928      	ldr	r0, [r5, #16]
 800bcc4:	b118      	cbz	r0, 800bcce <_ZN8touchgfx3HAL12setMCUActiveEb+0x2e>
 800bcc6:	6803      	ldr	r3, [r0, #0]
 800bcc8:	4621      	mov	r1, r4
 800bcca:	695b      	ldr	r3, [r3, #20]
 800bccc:	e7f4      	b.n	800bcb8 <_ZN8touchgfx3HAL12setMCUActiveEb+0x18>
 800bcce:	bd70      	pop	{r4, r5, r6, pc}

0800bcd0 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>:
 800bcd0:	b538      	push	{r3, r4, r5, lr}
 800bcd2:	f890 307b 	ldrb.w	r3, [r0, #123]	@ 0x7b
 800bcd6:	4604      	mov	r4, r0
 800bcd8:	428b      	cmp	r3, r1
 800bcda:	460d      	mov	r5, r1
 800bcdc:	d006      	beq.n	800bcec <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1c>
 800bcde:	6803      	ldr	r3, [r0, #0]
 800bce0:	b929      	cbnz	r1, 800bcee <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1e>
 800bce2:	f8d3 30c8 	ldr.w	r3, [r3, #200]	@ 0xc8
 800bce6:	4798      	blx	r3
 800bce8:	f884 507b 	strb.w	r5, [r4, #123]	@ 0x7b
 800bcec:	bd38      	pop	{r3, r4, r5, pc}
 800bcee:	f8d3 30cc 	ldr.w	r3, [r3, #204]	@ 0xcc
 800bcf2:	e7f8      	b.n	800bce6 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x16>

0800bcf4 <_ZN8touchgfx3HAL15lockFrameBufferEv>:
 800bcf4:	b510      	push	{r4, lr}
 800bcf6:	4b0d      	ldr	r3, [pc, #52]	@ (800bd2c <_ZN8touchgfx3HAL15lockFrameBufferEv+0x38>)
 800bcf8:	4604      	mov	r4, r0
 800bcfa:	781b      	ldrb	r3, [r3, #0]
 800bcfc:	b95b      	cbnz	r3, 800bd16 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800bcfe:	f890 3048 	ldrb.w	r3, [r0, #72]	@ 0x48
 800bd02:	2b02      	cmp	r3, #2
 800bd04:	d007      	beq.n	800bd16 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800bd06:	6840      	ldr	r0, [r0, #4]
 800bd08:	f000 f91c 	bl	800bf44 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>
 800bd0c:	b118      	cbz	r0, 800bd16 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800bd0e:	6862      	ldr	r2, [r4, #4]
 800bd10:	7a53      	ldrb	r3, [r2, #9]
 800bd12:	2b00      	cmp	r3, #0
 800bd14:	d0fc      	beq.n	800bd10 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x1c>
 800bd16:	f7f6 f961 	bl	8001fdc <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 800bd1a:	4620      	mov	r0, r4
 800bd1c:	2100      	movs	r1, #0
 800bd1e:	f7ff ffd7 	bl	800bcd0 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 800bd22:	4620      	mov	r0, r4
 800bd24:	f7ff fd74 	bl	800b810 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800bd28:	bd10      	pop	{r4, pc}
 800bd2a:	bf00      	nop
 800bd2c:	200830a2 	.word	0x200830a2

0800bd30 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>:
 800bd30:	b570      	push	{r4, r5, r6, lr}
 800bd32:	4604      	mov	r4, r0
 800bd34:	6803      	ldr	r3, [r0, #0]
 800bd36:	b919      	cbnz	r1, 800bd40 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE+0x10>
 800bd38:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800bd3c:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800bd3e:	4718      	bx	r3
 800bd40:	2200      	movs	r2, #0
 800bd42:	f890 607b 	ldrb.w	r6, [r0, #123]	@ 0x7b
 800bd46:	f880 207b 	strb.w	r2, [r0, #123]	@ 0x7b
 800bd4a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800bd4c:	4798      	blx	r3
 800bd4e:	2101      	movs	r1, #1
 800bd50:	4605      	mov	r5, r0
 800bd52:	6863      	ldr	r3, [r4, #4]
 800bd54:	4620      	mov	r0, r4
 800bd56:	7299      	strb	r1, [r3, #10]
 800bd58:	f884 607b 	strb.w	r6, [r4, #123]	@ 0x7b
 800bd5c:	f7ff ffb8 	bl	800bcd0 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 800bd60:	4628      	mov	r0, r5
 800bd62:	bd70      	pop	{r4, r5, r6, pc}

0800bd64 <_ZN8touchgfx13DMA_Interface10getDMATypeEv>:
 800bd64:	2000      	movs	r0, #0
 800bd66:	4770      	bx	lr

0800bd68 <_ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv>:
 800bd68:	e9d0 2003 	ldrd	r2, r0, [r0, #12]
 800bd6c:	1a13      	subs	r3, r2, r0
 800bd6e:	4258      	negs	r0, r3
 800bd70:	4158      	adcs	r0, r3
 800bd72:	4770      	bx	lr

0800bd74 <_ZN8touchgfx17LockFreeDMA_Queue6isFullEv>:
 800bd74:	e9d0 2303 	ldrd	r2, r3, [r0, #12]
 800bd78:	1a9b      	subs	r3, r3, r2
 800bd7a:	2b00      	cmp	r3, #0
 800bd7c:	bfdc      	itt	le
 800bd7e:	6882      	ldrle	r2, [r0, #8]
 800bd80:	189b      	addle	r3, r3, r2
 800bd82:	2b01      	cmp	r3, #1
 800bd84:	bfcc      	ite	gt
 800bd86:	2000      	movgt	r0, #0
 800bd88:	2001      	movle	r0, #1
 800bd8a:	4770      	bx	lr

0800bd8c <_ZN8touchgfx17LockFreeDMA_Queue5firstEv>:
 800bd8c:	6902      	ldr	r2, [r0, #16]
 800bd8e:	6843      	ldr	r3, [r0, #4]
 800bd90:	2024      	movs	r0, #36	@ 0x24
 800bd92:	fb00 3002 	mla	r0, r0, r2, r3
 800bd96:	4770      	bx	lr

0800bd98 <_ZN8touchgfx13DMA_Interface13seedExecutionEv>:
 800bd98:	6803      	ldr	r3, [r0, #0]
 800bd9a:	691b      	ldr	r3, [r3, #16]
 800bd9c:	4718      	bx	r3

0800bd9e <_ZN8touchgfx13DMA_Interface7executeEv>:
 800bd9e:	2301      	movs	r3, #1
 800bda0:	b570      	push	{r4, r5, r6, lr}
 800bda2:	7203      	strb	r3, [r0, #8]
 800bda4:	4604      	mov	r4, r0
 800bda6:	6840      	ldr	r0, [r0, #4]
 800bda8:	6803      	ldr	r3, [r0, #0]
 800bdaa:	699b      	ldr	r3, [r3, #24]
 800bdac:	4798      	blx	r3
 800bdae:	6803      	ldr	r3, [r0, #0]
 800bdb0:	4605      	mov	r5, r0
 800bdb2:	2b40      	cmp	r3, #64	@ 0x40
 800bdb4:	d00c      	beq.n	800bdd0 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800bdb6:	d810      	bhi.n	800bdda <_ZN8touchgfx13DMA_Interface7executeEv+0x3c>
 800bdb8:	2b04      	cmp	r3, #4
 800bdba:	d01d      	beq.n	800bdf8 <_ZN8touchgfx13DMA_Interface7executeEv+0x5a>
 800bdbc:	d804      	bhi.n	800bdc8 <_ZN8touchgfx13DMA_Interface7executeEv+0x2a>
 800bdbe:	2b01      	cmp	r3, #1
 800bdc0:	d006      	beq.n	800bdd0 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800bdc2:	2b02      	cmp	r3, #2
 800bdc4:	d02c      	beq.n	800be20 <_ZN8touchgfx13DMA_Interface7executeEv+0x82>
 800bdc6:	bd70      	pop	{r4, r5, r6, pc}
 800bdc8:	2b08      	cmp	r3, #8
 800bdca:	d01d      	beq.n	800be08 <_ZN8touchgfx13DMA_Interface7executeEv+0x6a>
 800bdcc:	2b20      	cmp	r3, #32
 800bdce:	d1fa      	bne.n	800bdc6 <_ZN8touchgfx13DMA_Interface7executeEv+0x28>
 800bdd0:	6823      	ldr	r3, [r4, #0]
 800bdd2:	4620      	mov	r0, r4
 800bdd4:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800bdd6:	4798      	blx	r3
 800bdd8:	e013      	b.n	800be02 <_ZN8touchgfx13DMA_Interface7executeEv+0x64>
 800bdda:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 800bdde:	d0f7      	beq.n	800bdd0 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800bde0:	d804      	bhi.n	800bdec <_ZN8touchgfx13DMA_Interface7executeEv+0x4e>
 800bde2:	2b80      	cmp	r3, #128	@ 0x80
 800bde4:	d0f4      	beq.n	800bdd0 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800bde6:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 800bdea:	e7f0      	b.n	800bdce <_ZN8touchgfx13DMA_Interface7executeEv+0x30>
 800bdec:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 800bdf0:	d0ee      	beq.n	800bdd0 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800bdf2:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
 800bdf6:	e7e5      	b.n	800bdc4 <_ZN8touchgfx13DMA_Interface7executeEv+0x26>
 800bdf8:	6823      	ldr	r3, [r4, #0]
 800bdfa:	7f01      	ldrb	r1, [r0, #28]
 800bdfc:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800bdfe:	4620      	mov	r0, r4
 800be00:	4798      	blx	r3
 800be02:	6823      	ldr	r3, [r4, #0]
 800be04:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800be06:	e006      	b.n	800be16 <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
 800be08:	6823      	ldr	r3, [r4, #0]
 800be0a:	7f01      	ldrb	r1, [r0, #28]
 800be0c:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800be0e:	4620      	mov	r0, r4
 800be10:	4798      	blx	r3
 800be12:	6823      	ldr	r3, [r4, #0]
 800be14:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800be16:	4629      	mov	r1, r5
 800be18:	4620      	mov	r0, r4
 800be1a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800be1e:	4718      	bx	r3
 800be20:	6823      	ldr	r3, [r4, #0]
 800be22:	4620      	mov	r0, r4
 800be24:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800be26:	4798      	blx	r3
 800be28:	e7f3      	b.n	800be12 <_ZN8touchgfx13DMA_Interface7executeEv+0x74>

0800be2a <_ZN8touchgfx13DMA_Interface11enableAlphaEh>:
 800be2a:	4770      	bx	lr

0800be2c <_ZN8touchgfx13DMA_Interface12disableAlphaEv>:
 800be2c:	4770      	bx	lr

0800be2e <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>:
 800be2e:	4770      	bx	lr

0800be30 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE>:
 800be30:	e9d0 3203 	ldrd	r3, r2, [r0, #12]
 800be34:	1ad2      	subs	r2, r2, r3
 800be36:	2a00      	cmp	r2, #0
 800be38:	b510      	push	{r4, lr}
 800be3a:	bfdc      	itt	le
 800be3c:	6884      	ldrle	r4, [r0, #8]
 800be3e:	1912      	addle	r2, r2, r4
 800be40:	2a01      	cmp	r2, #1
 800be42:	dd16      	ble.n	800be72 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x42>
 800be44:	2424      	movs	r4, #36	@ 0x24
 800be46:	6842      	ldr	r2, [r0, #4]
 800be48:	fb04 2303 	mla	r3, r4, r3, r2
 800be4c:	f101 0220 	add.w	r2, r1, #32
 800be50:	f851 4b04 	ldr.w	r4, [r1], #4
 800be54:	4291      	cmp	r1, r2
 800be56:	f843 4b04 	str.w	r4, [r3], #4
 800be5a:	d1f9      	bne.n	800be50 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x20>
 800be5c:	780a      	ldrb	r2, [r1, #0]
 800be5e:	701a      	strb	r2, [r3, #0]
 800be60:	68c3      	ldr	r3, [r0, #12]
 800be62:	6882      	ldr	r2, [r0, #8]
 800be64:	3301      	adds	r3, #1
 800be66:	429a      	cmp	r2, r3
 800be68:	bfd8      	it	le
 800be6a:	1a9b      	suble	r3, r3, r2
 800be6c:	f3bf 8f5b 	dmb	ish
 800be70:	60c3      	str	r3, [r0, #12]
 800be72:	bd10      	pop	{r4, pc}

0800be74 <_ZN8touchgfx17LockFreeDMA_Queue3popEv>:
 800be74:	6903      	ldr	r3, [r0, #16]
 800be76:	6882      	ldr	r2, [r0, #8]
 800be78:	3301      	adds	r3, #1
 800be7a:	429a      	cmp	r2, r3
 800be7c:	bfd8      	it	le
 800be7e:	1a9b      	suble	r3, r3, r2
 800be80:	f3bf 8f5b 	dmb	ish
 800be84:	6103      	str	r3, [r0, #16]
 800be86:	4770      	bx	lr

0800be88 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE>:
 800be88:	b570      	push	{r4, r5, r6, lr}
 800be8a:	4604      	mov	r4, r0
 800be8c:	460e      	mov	r6, r1
 800be8e:	6860      	ldr	r0, [r4, #4]
 800be90:	6803      	ldr	r3, [r0, #0]
 800be92:	685b      	ldr	r3, [r3, #4]
 800be94:	4798      	blx	r3
 800be96:	2800      	cmp	r0, #0
 800be98:	d1f9      	bne.n	800be8e <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x6>
 800be9a:	4d0d      	ldr	r5, [pc, #52]	@ (800bed0 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x48>)
 800be9c:	6828      	ldr	r0, [r5, #0]
 800be9e:	6803      	ldr	r3, [r0, #0]
 800bea0:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 800bea2:	4798      	blx	r3
 800bea4:	f7f6 f8a8 	bl	8001ff8 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>
 800bea8:	6828      	ldr	r0, [r5, #0]
 800beaa:	2101      	movs	r1, #1
 800beac:	f7ff ff10 	bl	800bcd0 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 800beb0:	6860      	ldr	r0, [r4, #4]
 800beb2:	4631      	mov	r1, r6
 800beb4:	6803      	ldr	r3, [r0, #0]
 800beb6:	689b      	ldr	r3, [r3, #8]
 800beb8:	4798      	blx	r3
 800beba:	6823      	ldr	r3, [r4, #0]
 800bebc:	4620      	mov	r0, r4
 800bebe:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800bec0:	4798      	blx	r3
 800bec2:	6828      	ldr	r0, [r5, #0]
 800bec4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800bec8:	6803      	ldr	r3, [r0, #0]
 800beca:	6f9b      	ldr	r3, [r3, #120]	@ 0x78
 800becc:	4718      	bx	r3
 800bece:	bf00      	nop
 800bed0:	200830a4 	.word	0x200830a4

0800bed4 <_ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv>:
 800bed4:	b508      	push	{r3, lr}
 800bed6:	f7f6 f881 	bl	8001fdc <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 800beda:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800bede:	f7f6 b885 	b.w	8001fec <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

0800bee2 <_ZN8touchgfx17LockFreeDMA_QueueD0Ev>:
 800bee2:	b510      	push	{r4, lr}
 800bee4:	4604      	mov	r4, r0
 800bee6:	2114      	movs	r1, #20
 800bee8:	f025 fa6d 	bl	80313c6 <_ZdlPvj>
 800beec:	4620      	mov	r0, r4
 800beee:	bd10      	pop	{r4, pc}

0800bef0 <_ZN8touchgfx13DMA_Interface16executeCompletedEv>:
 800bef0:	b570      	push	{r4, r5, r6, lr}
 800bef2:	4604      	mov	r4, r0
 800bef4:	6840      	ldr	r0, [r0, #4]
 800bef6:	6803      	ldr	r3, [r0, #0]
 800bef8:	681b      	ldr	r3, [r3, #0]
 800befa:	4798      	blx	r3
 800befc:	4605      	mov	r5, r0
 800befe:	b930      	cbnz	r0, 800bf0e <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 800bf00:	7a23      	ldrb	r3, [r4, #8]
 800bf02:	b123      	cbz	r3, 800bf0e <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 800bf04:	6860      	ldr	r0, [r4, #4]
 800bf06:	6803      	ldr	r3, [r0, #0]
 800bf08:	695b      	ldr	r3, [r3, #20]
 800bf0a:	4798      	blx	r3
 800bf0c:	7225      	strb	r5, [r4, #8]
 800bf0e:	6860      	ldr	r0, [r4, #4]
 800bf10:	6803      	ldr	r3, [r0, #0]
 800bf12:	681b      	ldr	r3, [r3, #0]
 800bf14:	4798      	blx	r3
 800bf16:	b928      	cbnz	r0, 800bf24 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x34>
 800bf18:	6823      	ldr	r3, [r4, #0]
 800bf1a:	4620      	mov	r0, r4
 800bf1c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800bf20:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800bf22:	4718      	bx	r3
 800bf24:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800bf28:	f7f6 b86e 	b.w	8002008 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>

0800bf2c <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>:
 800bf2c:	6082      	str	r2, [r0, #8]
 800bf2e:	2200      	movs	r2, #0
 800bf30:	b510      	push	{r4, lr}
 800bf32:	4c03      	ldr	r4, [pc, #12]	@ (800bf40 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi+0x14>)
 800bf34:	e9c0 2203 	strd	r2, r2, [r0, #12]
 800bf38:	e9c0 4100 	strd	r4, r1, [r0]
 800bf3c:	bd10      	pop	{r4, pc}
 800bf3e:	bf00      	nop
 800bf40:	08035c7c 	.word	0x08035c7c

0800bf44 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>:
 800bf44:	6840      	ldr	r0, [r0, #4]
 800bf46:	6803      	ldr	r3, [r0, #0]
 800bf48:	681b      	ldr	r3, [r3, #0]
 800bf4a:	4718      	bx	r3

0800bf4c <_ZNK8touchgfx3Box12getSolidRectEv>:
 800bf4c:	2300      	movs	r3, #0
 800bf4e:	8083      	strh	r3, [r0, #4]
 800bf50:	80c3      	strh	r3, [r0, #6]
 800bf52:	8003      	strh	r3, [r0, #0]
 800bf54:	8043      	strh	r3, [r0, #2]
 800bf56:	f891 3026 	ldrb.w	r3, [r1, #38]	@ 0x26
 800bf5a:	2bff      	cmp	r3, #255	@ 0xff
 800bf5c:	bf01      	itttt	eq
 800bf5e:	890b      	ldrheq	r3, [r1, #8]
 800bf60:	8083      	strheq	r3, [r0, #4]
 800bf62:	894b      	ldrheq	r3, [r1, #10]
 800bf64:	80c3      	strheq	r3, [r0, #6]
 800bf66:	4770      	bx	lr

0800bf68 <_ZNK8touchgfx3Box4drawERKNS_4RectE>:
 800bf68:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800bf6a:	4604      	mov	r4, r0
 800bf6c:	466b      	mov	r3, sp
 800bf6e:	6808      	ldr	r0, [r1, #0]
 800bf70:	6849      	ldr	r1, [r1, #4]
 800bf72:	c303      	stmia	r3!, {r0, r1}
 800bf74:	6823      	ldr	r3, [r4, #0]
 800bf76:	4669      	mov	r1, sp
 800bf78:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800bf7a:	4620      	mov	r0, r4
 800bf7c:	4798      	blx	r3
 800bf7e:	4b08      	ldr	r3, [pc, #32]	@ (800bfa0 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x38>)
 800bf80:	681b      	ldr	r3, [r3, #0]
 800bf82:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
 800bf86:	b10a      	cbz	r2, 800bf8c <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x24>
 800bf88:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
 800bf8a:	b900      	cbnz	r0, 800bf8e <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x26>
 800bf8c:	6898      	ldr	r0, [r3, #8]
 800bf8e:	6803      	ldr	r3, [r0, #0]
 800bf90:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
 800bf92:	6a1d      	ldr	r5, [r3, #32]
 800bf94:	4669      	mov	r1, sp
 800bf96:	f894 3026 	ldrb.w	r3, [r4, #38]	@ 0x26
 800bf9a:	47a8      	blx	r5
 800bf9c:	b003      	add	sp, #12
 800bf9e:	bd30      	pop	{r4, r5, pc}
 800bfa0:	200830a4 	.word	0x200830a4

0800bfa4 <_ZN8touchgfx3BoxD1Ev>:
 800bfa4:	4770      	bx	lr

0800bfa6 <_ZN8touchgfx3BoxD0Ev>:
 800bfa6:	b510      	push	{r4, lr}
 800bfa8:	4604      	mov	r4, r0
 800bfaa:	212c      	movs	r1, #44	@ 0x2c
 800bfac:	f025 fa0b 	bl	80313c6 <_ZdlPvj>
 800bfb0:	4620      	mov	r0, r4
 800bfb2:	bd10      	pop	{r4, pc}

0800bfb4 <_ZNK8touchgfx3Box17invalidateContentEv>:
 800bfb4:	f890 2026 	ldrb.w	r2, [r0, #38]	@ 0x26
 800bfb8:	b12a      	cbz	r2, 800bfc6 <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 800bfba:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
 800bfbe:	b112      	cbz	r2, 800bfc6 <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 800bfc0:	6803      	ldr	r3, [r0, #0]
 800bfc2:	695b      	ldr	r3, [r3, #20]
 800bfc4:	4718      	bx	r3
 800bfc6:	4770      	bx	lr

0800bfc8 <_ZNK8touchgfx14AbstractButton15getPressedStateEv>:
 800bfc8:	f890 002c 	ldrb.w	r0, [r0, #44]	@ 0x2c
 800bfcc:	4770      	bx	lr

0800bfce <_ZNK8touchgfx6Button17invalidateContentEv>:
 800bfce:	b508      	push	{r3, lr}
 800bfd0:	f890 3032 	ldrb.w	r3, [r0, #50]	@ 0x32
 800bfd4:	b10b      	cbz	r3, 800bfda <_ZNK8touchgfx6Button17invalidateContentEv+0xc>
 800bfd6:	f7f7 f966 	bl	80032a6 <_ZNK8touchgfx8Drawable17invalidateContentEv>
 800bfda:	bd08      	pop	{r3, pc}

0800bfdc <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_>:
 800bfdc:	4770      	bx	lr

0800bfde <_ZN8touchgfx14ButtonWithIconD1Ev>:
 800bfde:	4770      	bx	lr

0800bfe0 <_ZN8touchgfx14ButtonWithIconD0Ev>:
 800bfe0:	b510      	push	{r4, lr}
 800bfe2:	4604      	mov	r4, r0
 800bfe4:	213c      	movs	r1, #60	@ 0x3c
 800bfe6:	f025 f9ee 	bl	80313c6 <_ZdlPvj>
 800bfea:	4620      	mov	r0, r4
 800bfec:	bd10      	pop	{r4, pc}

0800bfee <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>:
 800bfee:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800bff2:	461c      	mov	r4, r3
 800bff4:	4606      	mov	r6, r0
 800bff6:	9f06      	ldr	r7, [sp, #24]
 800bff8:	f004 fbd5 	bl	80107a6 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 800bffc:	8823      	ldrh	r3, [r4, #0]
 800bffe:	f04f 0802 	mov.w	r8, #2
 800c002:	86b3      	strh	r3, [r6, #52]	@ 0x34
 800c004:	883b      	ldrh	r3, [r7, #0]
 800c006:	4638      	mov	r0, r7
 800c008:	86f3      	strh	r3, [r6, #54]	@ 0x36
 800c00a:	f9b6 5008 	ldrsh.w	r5, [r6, #8]
 800c00e:	f004 f911 	bl	8010234 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800c012:	fb95 f5f8 	sdiv	r5, r5, r8
 800c016:	fb90 f0f8 	sdiv	r0, r0, r8
 800c01a:	b2ad      	uxth	r5, r5
 800c01c:	1a2d      	subs	r5, r5, r0
 800c01e:	8735      	strh	r5, [r6, #56]	@ 0x38
 800c020:	4638      	mov	r0, r7
 800c022:	f9b6 400a 	ldrsh.w	r4, [r6, #10]
 800c026:	f004 f939 	bl	801029c <_ZNK8touchgfx6Bitmap9getHeightEv>
 800c02a:	fb94 f4f8 	sdiv	r4, r4, r8
 800c02e:	fb90 f0f8 	sdiv	r0, r0, r8
 800c032:	b2a4      	uxth	r4, r4
 800c034:	1a24      	subs	r4, r4, r0
 800c036:	8774      	strh	r4, [r6, #58]	@ 0x3a
 800c038:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800c03c <_ZN8touchgfx14AbstractButton13executeActionEv>:
 800c03c:	b510      	push	{r4, lr}
 800c03e:	4604      	mov	r4, r0
 800c040:	6a80      	ldr	r0, [r0, #40]	@ 0x28
 800c042:	b150      	cbz	r0, 800c05a <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 800c044:	6803      	ldr	r3, [r0, #0]
 800c046:	68db      	ldr	r3, [r3, #12]
 800c048:	4798      	blx	r3
 800c04a:	b130      	cbz	r0, 800c05a <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 800c04c:	6aa0      	ldr	r0, [r4, #40]	@ 0x28
 800c04e:	4621      	mov	r1, r4
 800c050:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800c054:	6803      	ldr	r3, [r0, #0]
 800c056:	689b      	ldr	r3, [r3, #8]
 800c058:	4718      	bx	r3
 800c05a:	bd10      	pop	{r4, pc}

0800c05c <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE>:
 800c05c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c060:	4604      	mov	r4, r0
 800c062:	b08c      	sub	sp, #48	@ 0x30
 800c064:	460d      	mov	r5, r1
 800c066:	f004 fbd1 	bl	801080c <_ZNK8touchgfx6Button4drawERKNS_4RectE>
 800c06a:	f894 302c 	ldrb.w	r3, [r4, #44]	@ 0x2c
 800c06e:	2b00      	cmp	r3, #0
 800c070:	d05d      	beq.n	800c12e <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xd2>
 800c072:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 800c074:	a805      	add	r0, sp, #20
 800c076:	f8ad 3014 	strh.w	r3, [sp, #20]
 800c07a:	f9b4 8038 	ldrsh.w	r8, [r4, #56]	@ 0x38
 800c07e:	f9b4 703a 	ldrsh.w	r7, [r4, #58]	@ 0x3a
 800c082:	f004 f8d7 	bl	8010234 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800c086:	4606      	mov	r6, r0
 800c088:	a805      	add	r0, sp, #20
 800c08a:	f004 f907 	bl	801029c <_ZNK8touchgfx6Bitmap9getHeightEv>
 800c08e:	6869      	ldr	r1, [r5, #4]
 800c090:	f8ad 001e 	strh.w	r0, [sp, #30]
 800c094:	6828      	ldr	r0, [r5, #0]
 800c096:	ab08      	add	r3, sp, #32
 800c098:	ad08      	add	r5, sp, #32
 800c09a:	c303      	stmia	r3!, {r0, r1}
 800c09c:	a906      	add	r1, sp, #24
 800c09e:	4628      	mov	r0, r5
 800c0a0:	f8ad 8018 	strh.w	r8, [sp, #24]
 800c0a4:	f8ad 701a 	strh.w	r7, [sp, #26]
 800c0a8:	f8ad 601c 	strh.w	r6, [sp, #28]
 800c0ac:	f7fe ff20 	bl	800aef0 <_ZN8touchgfx4RectaNERKS0_>
 800c0b0:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 800c0b4:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 800c0b8:	429a      	cmp	r2, r3
 800c0ba:	d035      	beq.n	800c128 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xcc>
 800c0bc:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	@ 0x24
 800c0c0:	2b00      	cmp	r3, #0
 800c0c2:	dd31      	ble.n	800c128 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xcc>
 800c0c4:	f9bd 3026 	ldrsh.w	r3, [sp, #38]	@ 0x26
 800c0c8:	2b00      	cmp	r3, #0
 800c0ca:	dd2d      	ble.n	800c128 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xcc>
 800c0cc:	2300      	movs	r3, #0
 800c0ce:	e9cd 330a 	strd	r3, r3, [sp, #40]	@ 0x28
 800c0d2:	6823      	ldr	r3, [r4, #0]
 800c0d4:	a90a      	add	r1, sp, #40	@ 0x28
 800c0d6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800c0d8:	4620      	mov	r0, r4
 800c0da:	4798      	blx	r3
 800c0dc:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 800c0e0:	8f22      	ldrh	r2, [r4, #56]	@ 0x38
 800c0e2:	f8bd 1022 	ldrh.w	r1, [sp, #34]	@ 0x22
 800c0e6:	1a9b      	subs	r3, r3, r2
 800c0e8:	f8ad 3020 	strh.w	r3, [sp, #32]
 800c0ec:	8f63      	ldrh	r3, [r4, #58]	@ 0x3a
 800c0ee:	1ac9      	subs	r1, r1, r3
 800c0f0:	f8ad 1022 	strh.w	r1, [sp, #34]	@ 0x22
 800c0f4:	490f      	ldr	r1, [pc, #60]	@ (800c134 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xd8>)
 800c0f6:	6809      	ldr	r1, [r1, #0]
 800c0f8:	f891 0058 	ldrb.w	r0, [r1, #88]	@ 0x58
 800c0fc:	b108      	cbz	r0, 800c102 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xa6>
 800c0fe:	6cc8      	ldr	r0, [r1, #76]	@ 0x4c
 800c100:	b900      	cbnz	r0, 800c104 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xa8>
 800c102:	6888      	ldr	r0, [r1, #8]
 800c104:	2601      	movs	r6, #1
 800c106:	f8bd 102a 	ldrh.w	r1, [sp, #42]	@ 0x2a
 800c10a:	440b      	add	r3, r1
 800c10c:	f8bd 1028 	ldrh.w	r1, [sp, #40]	@ 0x28
 800c110:	b21b      	sxth	r3, r3
 800c112:	440a      	add	r2, r1
 800c114:	6801      	ldr	r1, [r0, #0]
 800c116:	9602      	str	r6, [sp, #8]
 800c118:	f894 4032 	ldrb.w	r4, [r4, #50]	@ 0x32
 800c11c:	b212      	sxth	r2, r2
 800c11e:	e9cd 5400 	strd	r5, r4, [sp]
 800c122:	688c      	ldr	r4, [r1, #8]
 800c124:	a905      	add	r1, sp, #20
 800c126:	47a0      	blx	r4
 800c128:	b00c      	add	sp, #48	@ 0x30
 800c12a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800c12e:	8ea3      	ldrh	r3, [r4, #52]	@ 0x34
 800c130:	e7a0      	b.n	800c074 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0x18>
 800c132:	bf00      	nop
 800c134:	200830a4 	.word	0x200830a4

0800c138 <_ZN8touchgfx14ButtonWithIconC1Ev>:
 800c138:	2101      	movs	r1, #1
 800c13a:	2200      	movs	r2, #0
 800c13c:	f880 1025 	strb.w	r1, [r0, #37]	@ 0x25
 800c140:	f880 1024 	strb.w	r1, [r0, #36]	@ 0x24
 800c144:	f64f 71ff 	movw	r1, #65535	@ 0xffff
 800c148:	b510      	push	{r4, lr}
 800c14a:	4c0d      	ldr	r4, [pc, #52]	@ (800c180 <_ZN8touchgfx14ButtonWithIconC1Ev+0x48>)
 800c14c:	8082      	strh	r2, [r0, #4]
 800c14e:	80c2      	strh	r2, [r0, #6]
 800c150:	8102      	strh	r2, [r0, #8]
 800c152:	8142      	strh	r2, [r0, #10]
 800c154:	8182      	strh	r2, [r0, #12]
 800c156:	81c2      	strh	r2, [r0, #14]
 800c158:	8202      	strh	r2, [r0, #16]
 800c15a:	8242      	strh	r2, [r0, #18]
 800c15c:	e9c0 2205 	strd	r2, r2, [r0, #20]
 800c160:	61c2      	str	r2, [r0, #28]
 800c162:	8402      	strh	r2, [r0, #32]
 800c164:	8442      	strh	r2, [r0, #34]	@ 0x22
 800c166:	6282      	str	r2, [r0, #40]	@ 0x28
 800c168:	f880 202c 	strb.w	r2, [r0, #44]	@ 0x2c
 800c16c:	85c1      	strh	r1, [r0, #46]	@ 0x2e
 800c16e:	8601      	strh	r1, [r0, #48]	@ 0x30
 800c170:	f880 1032 	strb.w	r1, [r0, #50]	@ 0x32
 800c174:	6004      	str	r4, [r0, #0]
 800c176:	8681      	strh	r1, [r0, #52]	@ 0x34
 800c178:	86c1      	strh	r1, [r0, #54]	@ 0x36
 800c17a:	8702      	strh	r2, [r0, #56]	@ 0x38
 800c17c:	8742      	strh	r2, [r0, #58]	@ 0x3a
 800c17e:	bd10      	pop	{r4, pc}
 800c180:	08035d08 	.word	0x08035d08

0800c184 <_ZN8touchgfx5ImageD1Ev>:
 800c184:	4770      	bx	lr

0800c186 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>:
 800c186:	b570      	push	{r4, r5, r6, lr}
 800c188:	880b      	ldrh	r3, [r1, #0]
 800c18a:	4604      	mov	r4, r0
 800c18c:	84c3      	strh	r3, [r0, #38]	@ 0x26
 800c18e:	4608      	mov	r0, r1
 800c190:	460d      	mov	r5, r1
 800c192:	f004 f84f 	bl	8010234 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800c196:	4606      	mov	r6, r0
 800c198:	4628      	mov	r0, r5
 800c19a:	f004 f87f 	bl	801029c <_ZNK8touchgfx6Bitmap9getHeightEv>
 800c19e:	4605      	mov	r5, r0
 800c1a0:	6823      	ldr	r3, [r4, #0]
 800c1a2:	4631      	mov	r1, r6
 800c1a4:	4620      	mov	r0, r4
 800c1a6:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800c1a8:	4798      	blx	r3
 800c1aa:	6823      	ldr	r3, [r4, #0]
 800c1ac:	4629      	mov	r1, r5
 800c1ae:	4620      	mov	r0, r4
 800c1b0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800c1b4:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800c1b6:	4718      	bx	r3

0800c1b8 <_ZN8touchgfx5ImageD0Ev>:
 800c1b8:	b510      	push	{r4, lr}
 800c1ba:	4604      	mov	r4, r0
 800c1bc:	212c      	movs	r1, #44	@ 0x2c
 800c1be:	f025 f902 	bl	80313c6 <_ZdlPvj>
 800c1c2:	4620      	mov	r0, r4
 800c1c4:	bd10      	pop	{r4, pc}

0800c1c6 <_ZNK8touchgfx5Image12getSolidRectEv>:
 800c1c6:	b510      	push	{r4, lr}
 800c1c8:	f891 3028 	ldrb.w	r3, [r1, #40]	@ 0x28
 800c1cc:	4604      	mov	r4, r0
 800c1ce:	2bff      	cmp	r3, #255	@ 0xff
 800c1d0:	d006      	beq.n	800c1e0 <_ZNK8touchgfx5Image12getSolidRectEv+0x1a>
 800c1d2:	2300      	movs	r3, #0
 800c1d4:	8003      	strh	r3, [r0, #0]
 800c1d6:	8043      	strh	r3, [r0, #2]
 800c1d8:	8083      	strh	r3, [r0, #4]
 800c1da:	80c3      	strh	r3, [r0, #6]
 800c1dc:	4620      	mov	r0, r4
 800c1de:	bd10      	pop	{r4, pc}
 800c1e0:	3126      	adds	r1, #38	@ 0x26
 800c1e2:	f004 f88f 	bl	8010304 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 800c1e6:	e7f9      	b.n	800c1dc <_ZNK8touchgfx5Image12getSolidRectEv+0x16>

0800c1e8 <_ZNK8touchgfx5Image17invalidateContentEv>:
 800c1e8:	f890 2028 	ldrb.w	r2, [r0, #40]	@ 0x28
 800c1ec:	b12a      	cbz	r2, 800c1fa <_ZNK8touchgfx5Image17invalidateContentEv+0x12>
 800c1ee:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
 800c1f2:	b112      	cbz	r2, 800c1fa <_ZNK8touchgfx5Image17invalidateContentEv+0x12>
 800c1f4:	6803      	ldr	r3, [r0, #0]
 800c1f6:	695b      	ldr	r3, [r3, #20]
 800c1f8:	4718      	bx	r3
 800c1fa:	4770      	bx	lr

0800c1fc <_ZNK8touchgfx5Image4drawERKNS_4RectE>:
 800c1fc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c200:	4604      	mov	r4, r0
 800c202:	2500      	movs	r5, #0
 800c204:	f854 3b26 	ldr.w	r3, [r4], #38
 800c208:	b088      	sub	sp, #32
 800c20a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800c20c:	460f      	mov	r7, r1
 800c20e:	e9cd 5504 	strd	r5, r5, [sp, #16]
 800c212:	a904      	add	r1, sp, #16
 800c214:	4606      	mov	r6, r0
 800c216:	4798      	blx	r3
 800c218:	4620      	mov	r0, r4
 800c21a:	f004 f80b 	bl	8010234 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800c21e:	4680      	mov	r8, r0
 800c220:	4620      	mov	r0, r4
 800c222:	f004 f83b 	bl	801029c <_ZNK8touchgfx6Bitmap9getHeightEv>
 800c226:	9506      	str	r5, [sp, #24]
 800c228:	ad06      	add	r5, sp, #24
 800c22a:	f8ad 001e 	strh.w	r0, [sp, #30]
 800c22e:	4639      	mov	r1, r7
 800c230:	4628      	mov	r0, r5
 800c232:	f8ad 801c 	strh.w	r8, [sp, #28]
 800c236:	f7fe fe5b 	bl	800aef0 <_ZN8touchgfx4RectaNERKS0_>
 800c23a:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 800c23e:	2b00      	cmp	r3, #0
 800c240:	dd19      	ble.n	800c276 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 800c242:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 800c246:	2b00      	cmp	r3, #0
 800c248:	dd15      	ble.n	800c276 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 800c24a:	4b0c      	ldr	r3, [pc, #48]	@ (800c27c <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x80>)
 800c24c:	681b      	ldr	r3, [r3, #0]
 800c24e:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
 800c252:	b10a      	cbz	r2, 800c258 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5c>
 800c254:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
 800c256:	b900      	cbnz	r0, 800c25a <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5e>
 800c258:	6898      	ldr	r0, [r3, #8]
 800c25a:	2701      	movs	r7, #1
 800c25c:	6801      	ldr	r1, [r0, #0]
 800c25e:	9702      	str	r7, [sp, #8]
 800c260:	f896 6028 	ldrb.w	r6, [r6, #40]	@ 0x28
 800c264:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 800c268:	e9cd 5600 	strd	r5, r6, [sp]
 800c26c:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 800c270:	688d      	ldr	r5, [r1, #8]
 800c272:	4621      	mov	r1, r4
 800c274:	47a8      	blx	r5
 800c276:	b008      	add	sp, #32
 800c278:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800c27c:	200830a4 	.word	0x200830a4

0800c280 <_ZN8touchgfx3LCD27supportDynamicBitmapDrawingENS_6Bitmap12BitmapFormatE>:
 800c280:	b510      	push	{r4, lr}
 800c282:	6803      	ldr	r3, [r0, #0]
 800c284:	460c      	mov	r4, r1
 800c286:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800c288:	4798      	blx	r3
 800c28a:	1b03      	subs	r3, r0, r4
 800c28c:	4258      	negs	r0, r3
 800c28e:	4158      	adcs	r0, r3
 800c290:	bd10      	pop	{r4, pc}
	...

0800c294 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE>:
 800c294:	4b01      	ldr	r3, [pc, #4]	@ (800c29c <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE+0x8>)
 800c296:	6019      	str	r1, [r3, #0]
 800c298:	4770      	bx	lr
 800c29a:	bf00      	nop
 800c29c:	200830ac 	.word	0x200830ac

0800c2a0 <_ZN8touchgfx3LCD18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 800c2a0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c2a4:	4696      	mov	lr, r2
 800c2a6:	4614      	mov	r4, r2
 800c2a8:	4605      	mov	r5, r0
 800c2aa:	460e      	mov	r6, r1
 800c2ac:	461f      	mov	r7, r3
 800c2ae:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800c2b2:	b097      	sub	sp, #92	@ 0x5c
 800c2b4:	f10d 0c1c 	add.w	ip, sp, #28
 800c2b8:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800c2bc:	f8de 3000 	ldr.w	r3, [lr]
 800c2c0:	f104 0e14 	add.w	lr, r4, #20
 800c2c4:	f8cc 3000 	str.w	r3, [ip]
 800c2c8:	f10d 0c30 	add.w	ip, sp, #48	@ 0x30
 800c2cc:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800c2d0:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800c2d4:	f8de 3000 	ldr.w	r3, [lr]
 800c2d8:	f104 0e28 	add.w	lr, r4, #40	@ 0x28
 800c2dc:	f8cc 3000 	str.w	r3, [ip]
 800c2e0:	f10d 0c44 	add.w	ip, sp, #68	@ 0x44
 800c2e4:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800c2e8:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800c2ec:	f8bd 8088 	ldrh.w	r8, [sp, #136]	@ 0x88
 800c2f0:	f89d 908c 	ldrb.w	r9, [sp, #140]	@ 0x8c
 800c2f4:	f8bd a090 	ldrh.w	sl, [sp, #144]	@ 0x90
 800c2f8:	f8de 3000 	ldr.w	r3, [lr]
 800c2fc:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 800c2fe:	f8cc 3000 	str.w	r3, [ip]
 800c302:	9201      	str	r2, [sp, #4]
 800c304:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 800c308:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 800c30a:	682b      	ldr	r3, [r5, #0]
 800c30c:	9200      	str	r2, [sp, #0]
 800c30e:	f8cd 8008 	str.w	r8, [sp, #8]
 800c312:	f8d3 b03c 	ldr.w	fp, [r3, #60]	@ 0x3c
 800c316:	aa07      	add	r2, sp, #28
 800c318:	463b      	mov	r3, r7
 800c31a:	4631      	mov	r1, r6
 800c31c:	4628      	mov	r0, r5
 800c31e:	47d8      	blx	fp
 800c320:	46a6      	mov	lr, r4
 800c322:	f10d 0c1c 	add.w	ip, sp, #28
 800c326:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800c32a:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800c32e:	f8de 3000 	ldr.w	r3, [lr]
 800c332:	f104 0e28 	add.w	lr, r4, #40	@ 0x28
 800c336:	f8cc 3000 	str.w	r3, [ip]
 800c33a:	f10d 0c30 	add.w	ip, sp, #48	@ 0x30
 800c33e:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800c342:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800c346:	f8de 3000 	ldr.w	r3, [lr]
 800c34a:	343c      	adds	r4, #60	@ 0x3c
 800c34c:	f8cc 3000 	str.w	r3, [ip]
 800c350:	f10d 0c44 	add.w	ip, sp, #68	@ 0x44
 800c354:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800c356:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800c35a:	6823      	ldr	r3, [r4, #0]
 800c35c:	4631      	mov	r1, r6
 800c35e:	f8cc 3000 	str.w	r3, [ip]
 800c362:	682b      	ldr	r3, [r5, #0]
 800c364:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 800c368:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 800c36a:	f8cd 8008 	str.w	r8, [sp, #8]
 800c36e:	9201      	str	r2, [sp, #4]
 800c370:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 800c372:	4628      	mov	r0, r5
 800c374:	9200      	str	r2, [sp, #0]
 800c376:	6bdc      	ldr	r4, [r3, #60]	@ 0x3c
 800c378:	aa07      	add	r2, sp, #28
 800c37a:	463b      	mov	r3, r7
 800c37c:	47a0      	blx	r4
 800c37e:	b017      	add	sp, #92	@ 0x5c
 800c380:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800c384 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht>:
 800c384:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c388:	b08d      	sub	sp, #52	@ 0x34
 800c38a:	4688      	mov	r8, r1
 800c38c:	9916      	ldr	r1, [sp, #88]	@ 0x58
 800c38e:	f8d3 c000 	ldr.w	ip, [r3]
 800c392:	680f      	ldr	r7, [r1, #0]
 800c394:	f8bd 4070 	ldrh.w	r4, [sp, #112]	@ 0x70
 800c398:	eba7 070c 	sub.w	r7, r7, ip
 800c39c:	42bc      	cmp	r4, r7
 800c39e:	bfa8      	it	ge
 800c3a0:	463c      	movge	r4, r7
 800c3a2:	ee07 4a90 	vmov	s15, r4
 800c3a6:	ed92 4a09 	vldr	s8, [r2, #36]	@ 0x24
 800c3aa:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
 800c3ae:	edd2 4a0b 	vldr	s9, [r2, #44]	@ 0x2c
 800c3b2:	edd2 7a0d 	vldr	s15, [r2, #52]	@ 0x34
 800c3b6:	edd3 6a07 	vldr	s13, [r3, #28]
 800c3ba:	ee25 4a04 	vmul.f32	s8, s10, s8
 800c3be:	ee65 4a24 	vmul.f32	s9, s10, s9
 800c3c2:	ee25 5a27 	vmul.f32	s10, s10, s15
 800c3c6:	eef7 7a00 	vmov.f32	s15, #112	@ 0x3f800000  1.0
 800c3ca:	edd3 1a0a 	vldr	s3, [r3, #40]	@ 0x28
 800c3ce:	ed93 2a0d 	vldr	s4, [r3, #52]	@ 0x34
 800c3d2:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 800c3d6:	9918      	ldr	r1, [sp, #96]	@ 0x60
 800c3d8:	f8dd a064 	ldr.w	sl, [sp, #100]	@ 0x64
 800c3dc:	f9b1 9000 	ldrsh.w	r9, [r1]
 800c3e0:	f9ba 1000 	ldrsh.w	r1, [sl]
 800c3e4:	eb09 0e0c 	add.w	lr, r9, ip
 800c3e8:	4571      	cmp	r1, lr
 800c3ea:	ee71 0aa4 	vadd.f32	s1, s3, s9
 800c3ee:	ee32 1a05 	vadd.f32	s2, s4, s10
 800c3f2:	ee36 0a84 	vadd.f32	s0, s13, s8
 800c3f6:	ee61 1a87 	vmul.f32	s3, s3, s14
 800c3fa:	ee22 2a07 	vmul.f32	s4, s4, s14
 800c3fe:	f340 808c 	ble.w	800c51a <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x196>
 800c402:	eba1 060e 	sub.w	r6, r1, lr
 800c406:	fb96 f5f4 	sdiv	r5, r6, r4
 800c40a:	ee07 5a10 	vmov	s14, r5
 800c40e:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800c412:	2d00      	cmp	r5, #0
 800c414:	fb04 6615 	mls	r6, r4, r5, r6
 800c418:	eea7 0a04 	vfma.f32	s0, s14, s8
 800c41c:	eee7 0a24 	vfma.f32	s1, s14, s9
 800c420:	eea7 1a05 	vfma.f32	s2, s14, s10
 800c424:	dd12      	ble.n	800c44c <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xc8>
 800c426:	ee70 6a44 	vsub.f32	s13, s0, s8
 800c42a:	eef5 6a40 	vcmp.f32	s13, #0.0
 800c42e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800c432:	ee70 1ae4 	vsub.f32	s3, s1, s9
 800c436:	bf14      	ite	ne
 800c438:	ee87 7aa6 	vdivne.f32	s14, s15, s13
 800c43c:	eeb0 7a67 	vmoveq.f32	s14, s15
 800c440:	ee31 2a45 	vsub.f32	s4, s2, s10
 800c444:	ee61 1a87 	vmul.f32	s3, s3, s14
 800c448:	ee22 2a07 	vmul.f32	s4, s4, s14
 800c44c:	fb05 f204 	mul.w	r2, r5, r4
 800c450:	1abf      	subs	r7, r7, r2
 800c452:	4494      	add	ip, r2
 800c454:	f8ba 2004 	ldrh.w	r2, [sl, #4]
 800c458:	4411      	add	r1, r2
 800c45a:	eb09 020c 	add.w	r2, r9, ip
 800c45e:	443a      	add	r2, r7
 800c460:	b209      	sxth	r1, r1
 800c462:	428a      	cmp	r2, r1
 800c464:	bfc4      	itt	gt
 800c466:	eba1 0209 	subgt.w	r2, r1, r9
 800c46a:	eba2 070c 	subgt.w	r7, r2, ip
 800c46e:	2f00      	cmp	r7, #0
 800c470:	dd50      	ble.n	800c514 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x190>
 800c472:	fb97 f1f4 	sdiv	r1, r7, r4
 800c476:	fb04 7211 	mls	r2, r4, r1, r7
 800c47a:	b90a      	cbnz	r2, 800c480 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xfc>
 800c47c:	4622      	mov	r2, r4
 800c47e:	3901      	subs	r1, #1
 800c480:	eec7 3a80 	vdiv.f32	s7, s15, s0
 800c484:	ee60 2aa3 	vmul.f32	s5, s1, s7
 800c488:	ee72 7ae1 	vsub.f32	s15, s5, s3
 800c48c:	ee21 3a23 	vmul.f32	s6, s2, s7
 800c490:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 800c494:	ee17 7a90 	vmov	r7, s15
 800c498:	ee73 7a42 	vsub.f32	s15, s6, s4
 800c49c:	eef0 6a42 	vmov.f32	s13, s4
 800c4a0:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 800c4a4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 800c4a8:	ee17 ca90 	vmov	ip, s15
 800c4ac:	eeb0 7a61 	vmov.f32	s14, s3
 800c4b0:	6840      	ldr	r0, [r0, #4]
 800c4b2:	f89d b06c 	ldrb.w	fp, [sp, #108]	@ 0x6c
 800c4b6:	f8d0 a000 	ldr.w	sl, [r0]
 800c4ba:	900b      	str	r0, [sp, #44]	@ 0x2c
 800c4bc:	9817      	ldr	r0, [sp, #92]	@ 0x5c
 800c4be:	f8cd b024 	str.w	fp, [sp, #36]	@ 0x24
 800c4c2:	9008      	str	r0, [sp, #32]
 800c4c4:	9818      	ldr	r0, [sp, #96]	@ 0x60
 800c4c6:	695b      	ldr	r3, [r3, #20]
 800c4c8:	f9b0 b002 	ldrsh.w	fp, [r0, #2]
 800c4cc:	fb9c fcf4 	sdiv	ip, ip, r4
 800c4d0:	445b      	add	r3, fp
 800c4d2:	9307      	str	r3, [sp, #28]
 800c4d4:	ee16 3a90 	vmov	r3, s13
 800c4d8:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 800c4dc:	fb0c 3306 	mla	r3, ip, r6, r3
 800c4e0:	fb97 f7f4 	sdiv	r7, r7, r4
 800c4e4:	9302      	str	r3, [sp, #8]
 800c4e6:	ee17 3a10 	vmov	r3, s14
 800c4ea:	2900      	cmp	r1, #0
 800c4ec:	bfcc      	ite	gt
 800c4ee:	46a1      	movgt	r9, r4
 800c4f0:	4691      	movle	r9, r2
 800c4f2:	44b6      	add	lr, r6
 800c4f4:	fb04 e505 	mla	r5, r4, r5, lr
 800c4f8:	e9cd 7c03 	strd	r7, ip, [sp, #12]
 800c4fc:	fb07 3706 	mla	r7, r7, r6, r3
 800c500:	e9cd 8505 	strd	r8, r5, [sp, #20]
 800c504:	e9cd 4700 	strd	r4, r7, [sp]
 800c508:	eba9 0306 	sub.w	r3, r9, r6
 800c50c:	f8da 4008 	ldr.w	r4, [sl, #8]
 800c510:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 800c512:	47a0      	blx	r4
 800c514:	b00d      	add	sp, #52	@ 0x34
 800c516:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c51a:	2500      	movs	r5, #0
 800c51c:	462e      	mov	r6, r5
 800c51e:	e799      	b.n	800c454 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xd0>

0800c520 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 800c520:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c524:	461d      	mov	r5, r3
 800c526:	b0db      	sub	sp, #364	@ 0x16c
 800c528:	f8bd 3198 	ldrh.w	r3, [sp, #408]	@ 0x198
 800c52c:	910f      	str	r1, [sp, #60]	@ 0x3c
 800c52e:	930a      	str	r3, [sp, #40]	@ 0x28
 800c530:	f89d 319c 	ldrb.w	r3, [sp, #412]	@ 0x19c
 800c534:	9009      	str	r0, [sp, #36]	@ 0x24
 800c536:	930b      	str	r3, [sp, #44]	@ 0x2c
 800c538:	f8bd 31a0 	ldrh.w	r3, [sp, #416]	@ 0x1a0
 800c53c:	4614      	mov	r4, r2
 800c53e:	9310      	str	r3, [sp, #64]	@ 0x40
 800c540:	6803      	ldr	r3, [r0, #0]
 800c542:	4629      	mov	r1, r5
 800c544:	6c5f      	ldr	r7, [r3, #68]	@ 0x44
 800c546:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	@ 0x28
 800c54a:	f8dd b194 	ldr.w	fp, [sp, #404]	@ 0x194
 800c54e:	47b8      	blx	r7
 800c550:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800c552:	6058      	str	r0, [r3, #4]
 800c554:	2800      	cmp	r0, #0
 800c556:	f000 83a1 	beq.w	800cc9c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800c55a:	ed94 7a02 	vldr	s14, [r4, #8]
 800c55e:	eef2 7a04 	vmov.f32	s15, #36	@ 0x41200000  10.0
 800c562:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800c566:	682b      	ldr	r3, [r5, #0]
 800c568:	9314      	str	r3, [sp, #80]	@ 0x50
 800c56a:	686b      	ldr	r3, [r5, #4]
 800c56c:	9315      	str	r3, [sp, #84]	@ 0x54
 800c56e:	4bc1      	ldr	r3, [pc, #772]	@ (800c874 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x354>)
 800c570:	7819      	ldrb	r1, [r3, #0]
 800c572:	e9d5 2302 	ldrd	r2, r3, [r5, #8]
 800c576:	2900      	cmp	r1, #0
 800c578:	bf16      	itet	ne
 800c57a:	4619      	movne	r1, r3
 800c57c:	4611      	moveq	r1, r2
 800c57e:	4613      	movne	r3, r2
 800c580:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800c584:	9116      	str	r1, [sp, #88]	@ 0x58
 800c586:	e9cd 3217 	strd	r3, r2, [sp, #92]	@ 0x5c
 800c58a:	f240 8387 	bls.w	800cc9c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800c58e:	ed94 7a07 	vldr	s14, [r4, #28]
 800c592:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800c596:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800c59a:	f240 837f 	bls.w	800cc9c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800c59e:	ed94 7a0c 	vldr	s14, [r4, #48]	@ 0x30
 800c5a2:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800c5a6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800c5aa:	f240 8377 	bls.w	800cc9c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800c5ae:	6822      	ldr	r2, [r4, #0]
 800c5b0:	4bb1      	ldr	r3, [pc, #708]	@ (800c878 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x358>)
 800c5b2:	429a      	cmp	r2, r3
 800c5b4:	f2c0 8372 	blt.w	800cc9c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800c5b8:	49b0      	ldr	r1, [pc, #704]	@ (800c87c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x35c>)
 800c5ba:	6963      	ldr	r3, [r4, #20]
 800c5bc:	428a      	cmp	r2, r1
 800c5be:	f300 836d 	bgt.w	800cc9c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800c5c2:	f503 331c 	add.w	r3, r3, #159744	@ 0x27000
 800c5c6:	48ae      	ldr	r0, [pc, #696]	@ (800c880 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x360>)
 800c5c8:	33ff      	adds	r3, #255	@ 0xff
 800c5ca:	4283      	cmp	r3, r0
 800c5cc:	f200 8366 	bhi.w	800cc9c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800c5d0:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
 800c5d2:	4dac      	ldr	r5, [pc, #688]	@ (800c884 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x364>)
 800c5d4:	f503 331c 	add.w	r3, r3, #159744	@ 0x27000
 800c5d8:	33ff      	adds	r3, #255	@ 0xff
 800c5da:	42ab      	cmp	r3, r5
 800c5dc:	f200 835e 	bhi.w	800cc9c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800c5e0:	6862      	ldr	r2, [r4, #4]
 800c5e2:	f502 331c 	add.w	r3, r2, #159744	@ 0x27000
 800c5e6:	33ff      	adds	r3, #255	@ 0xff
 800c5e8:	4283      	cmp	r3, r0
 800c5ea:	f200 8357 	bhi.w	800cc9c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800c5ee:	69a1      	ldr	r1, [r4, #24]
 800c5f0:	f501 331c 	add.w	r3, r1, #159744	@ 0x27000
 800c5f4:	33ff      	adds	r3, #255	@ 0xff
 800c5f6:	4283      	cmp	r3, r0
 800c5f8:	f200 8350 	bhi.w	800cc9c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800c5fc:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 800c5fe:	f503 301c 	add.w	r0, r3, #159744	@ 0x27000
 800c602:	30ff      	adds	r0, #255	@ 0xff
 800c604:	42a8      	cmp	r0, r5
 800c606:	f200 8349 	bhi.w	800cc9c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800c60a:	428a      	cmp	r2, r1
 800c60c:	f280 8110 	bge.w	800c830 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x310>
 800c610:	429a      	cmp	r2, r3
 800c612:	f300 8119 	bgt.w	800c848 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x328>
 800c616:	4299      	cmp	r1, r3
 800c618:	f280 811d 	bge.w	800c856 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x336>
 800c61c:	2502      	movs	r5, #2
 800c61e:	2701      	movs	r7, #1
 800c620:	46a9      	mov	r9, r5
 800c622:	46b8      	mov	r8, r7
 800c624:	f04f 0a00 	mov.w	sl, #0
 800c628:	4621      	mov	r1, r4
 800c62a:	a849      	add	r0, sp, #292	@ 0x124
 800c62c:	f003 fb38 	bl	800fca0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>
 800c630:	4622      	mov	r2, r4
 800c632:	4653      	mov	r3, sl
 800c634:	a949      	add	r1, sp, #292	@ 0x124
 800c636:	f8cd 9000 	str.w	r9, [sp]
 800c63a:	a819      	add	r0, sp, #100	@ 0x64
 800c63c:	f003 fc62 	bl	800ff04 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800c640:	4622      	mov	r2, r4
 800c642:	4653      	mov	r3, sl
 800c644:	a949      	add	r1, sp, #292	@ 0x124
 800c646:	f8cd 8000 	str.w	r8, [sp]
 800c64a:	a829      	add	r0, sp, #164	@ 0xa4
 800c64c:	f003 fc5a 	bl	800ff04 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800c650:	4643      	mov	r3, r8
 800c652:	4622      	mov	r2, r4
 800c654:	a949      	add	r1, sp, #292	@ 0x124
 800c656:	f8cd 9000 	str.w	r9, [sp]
 800c65a:	a839      	add	r0, sp, #228	@ 0xe4
 800c65c:	f003 fc52 	bl	800ff04 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800c660:	42af      	cmp	r7, r5
 800c662:	bfb5      	itete	lt
 800c664:	2300      	movlt	r3, #0
 800c666:	2301      	movge	r3, #1
 800c668:	930e      	strlt	r3, [sp, #56]	@ 0x38
 800c66a:	930e      	strge	r3, [sp, #56]	@ 0x38
 800c66c:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800c66e:	af12      	add	r7, sp, #72	@ 0x48
 800c670:	e893 0003 	ldmia.w	r3, {r0, r1}
 800c674:	bfb9      	ittee	lt
 800c676:	ad29      	addlt	r5, sp, #164	@ 0xa4
 800c678:	ac19      	addlt	r4, sp, #100	@ 0x64
 800c67a:	ad19      	addge	r5, sp, #100	@ 0x64
 800c67c:	ac29      	addge	r4, sp, #164	@ 0xa4
 800c67e:	e887 0003 	stmia.w	r7, {r0, r1}
 800c682:	b928      	cbnz	r0, 800c690 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x170>
 800c684:	4b80      	ldr	r3, [pc, #512]	@ (800c888 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x368>)
 800c686:	6818      	ldr	r0, [r3, #0]
 800c688:	6803      	ldr	r3, [r0, #0]
 800c68a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800c68c:	4798      	blx	r3
 800c68e:	6038      	str	r0, [r7, #0]
 800c690:	9b64      	ldr	r3, [sp, #400]	@ 0x190
 800c692:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 800c696:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 800c69a:	9a2f      	ldr	r2, [sp, #188]	@ 0xbc
 800c69c:	930c      	str	r3, [sp, #48]	@ 0x30
 800c69e:	990c      	ldr	r1, [sp, #48]	@ 0x30
 800c6a0:	6963      	ldr	r3, [r4, #20]
 800c6a2:	440b      	add	r3, r1
 800c6a4:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 800c6a8:	4408      	add	r0, r1
 800c6aa:	b200      	sxth	r0, r0
 800c6ac:	4283      	cmp	r3, r0
 800c6ae:	900d      	str	r0, [sp, #52]	@ 0x34
 800c6b0:	f280 80dd 	bge.w	800c86e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x34e>
 800c6b4:	428b      	cmp	r3, r1
 800c6b6:	da08      	bge.n	800c6ca <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 800c6b8:	2a00      	cmp	r2, #0
 800c6ba:	dd06      	ble.n	800c6ca <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 800c6bc:	1acb      	subs	r3, r1, r3
 800c6be:	429a      	cmp	r2, r3
 800c6c0:	f2c0 80e4 	blt.w	800c88c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36c>
 800c6c4:	2b00      	cmp	r3, #0
 800c6c6:	f300 80e2 	bgt.w	800c88e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36e>
 800c6ca:	6967      	ldr	r7, [r4, #20]
 800c6cc:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 800c6ce:	f10d 0850 	add.w	r8, sp, #80	@ 0x50
 800c6d2:	443b      	add	r3, r7
 800c6d4:	461f      	mov	r7, r3
 800c6d6:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 800c6d8:	1bdf      	subs	r7, r3, r7
 800c6da:	4297      	cmp	r7, r2
 800c6dc:	bfa8      	it	ge
 800c6de:	4617      	movge	r7, r2
 800c6e0:	2f00      	cmp	r7, #0
 800c6e2:	f340 8166 	ble.w	800c9b2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x492>
 800c6e6:	9b64      	ldr	r3, [sp, #400]	@ 0x190
 800c6e8:	6829      	ldr	r1, [r5, #0]
 800c6ea:	f9b3 2000 	ldrsh.w	r2, [r3]
 800c6ee:	f9bb 3000 	ldrsh.w	r3, [fp]
 800c6f2:	4411      	add	r1, r2
 800c6f4:	4299      	cmp	r1, r3
 800c6f6:	6820      	ldr	r0, [r4, #0]
 800c6f8:	dd1a      	ble.n	800c730 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 800c6fa:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 800c6fe:	4402      	add	r2, r0
 800c700:	440b      	add	r3, r1
 800c702:	b21b      	sxth	r3, r3
 800c704:	429a      	cmp	r2, r3
 800c706:	dc13      	bgt.n	800c730 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 800c708:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 800c70a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800c70c:	a912      	add	r1, sp, #72	@ 0x48
 800c70e:	681b      	ldr	r3, [r3, #0]
 800c710:	9206      	str	r2, [sp, #24]
 800c712:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 800c714:	9500      	str	r5, [sp, #0]
 800c716:	9205      	str	r2, [sp, #20]
 800c718:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 800c71a:	9809      	ldr	r0, [sp, #36]	@ 0x24
 800c71c:	e9cd b203 	strd	fp, r2, [sp, #12]
 800c720:	9a64      	ldr	r2, [sp, #400]	@ 0x190
 800c722:	e9cd 8201 	strd	r8, r2, [sp, #4]
 800c726:	aa49      	add	r2, sp, #292	@ 0x124
 800c728:	f8d3 9048 	ldr.w	r9, [r3, #72]	@ 0x48
 800c72c:	4623      	mov	r3, r4
 800c72e:	47c8      	blx	r9
 800c730:	e9d4 2300 	ldrd	r2, r3, [r4]
 800c734:	ed94 7a0a 	vldr	s14, [r4, #40]	@ 0x28
 800c738:	edd4 7a0b 	vldr	s15, [r4, #44]	@ 0x2c
 800c73c:	edd4 6a0e 	vldr	s13, [r4, #56]	@ 0x38
 800c740:	ee37 7a27 	vadd.f32	s14, s14, s15
 800c744:	edd4 7a0d 	vldr	s15, [r4, #52]	@ 0x34
 800c748:	ed94 6a08 	vldr	s12, [r4, #32]
 800c74c:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800c750:	edd4 6a07 	vldr	s13, [r4, #28]
 800c754:	ee76 6a86 	vadd.f32	s13, s13, s12
 800c758:	441a      	add	r2, r3
 800c75a:	6963      	ldr	r3, [r4, #20]
 800c75c:	68a1      	ldr	r1, [r4, #8]
 800c75e:	3301      	adds	r3, #1
 800c760:	6163      	str	r3, [r4, #20]
 800c762:	69a3      	ldr	r3, [r4, #24]
 800c764:	6022      	str	r2, [r4, #0]
 800c766:	3b01      	subs	r3, #1
 800c768:	61a3      	str	r3, [r4, #24]
 800c76a:	6923      	ldr	r3, [r4, #16]
 800c76c:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
 800c770:	440b      	add	r3, r1
 800c772:	68e1      	ldr	r1, [r4, #12]
 800c774:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
 800c778:	428b      	cmp	r3, r1
 800c77a:	edc4 6a07 	vstr	s13, [r4, #28]
 800c77e:	6123      	str	r3, [r4, #16]
 800c780:	db15      	blt.n	800c7ae <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x28e>
 800c782:	ed94 6a09 	vldr	s12, [r4, #36]	@ 0x24
 800c786:	ee76 6a26 	vadd.f32	s13, s12, s13
 800c78a:	edc4 6a07 	vstr	s13, [r4, #28]
 800c78e:	edd4 6a0c 	vldr	s13, [r4, #48]	@ 0x30
 800c792:	ee36 7a87 	vadd.f32	s14, s13, s14
 800c796:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
 800c79a:	ed94 7a0f 	vldr	s14, [r4, #60]	@ 0x3c
 800c79e:	ee77 7a27 	vadd.f32	s15, s14, s15
 800c7a2:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
 800c7a6:	3201      	adds	r2, #1
 800c7a8:	1a5b      	subs	r3, r3, r1
 800c7aa:	6022      	str	r2, [r4, #0]
 800c7ac:	6123      	str	r3, [r4, #16]
 800c7ae:	ed95 7a0a 	vldr	s14, [r5, #40]	@ 0x28
 800c7b2:	e9d5 2300 	ldrd	r2, r3, [r5]
 800c7b6:	edd5 7a0b 	vldr	s15, [r5, #44]	@ 0x2c
 800c7ba:	edd5 6a0e 	vldr	s13, [r5, #56]	@ 0x38
 800c7be:	ee37 7a27 	vadd.f32	s14, s14, s15
 800c7c2:	edd5 7a0d 	vldr	s15, [r5, #52]	@ 0x34
 800c7c6:	ed95 6a08 	vldr	s12, [r5, #32]
 800c7ca:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800c7ce:	edd5 6a07 	vldr	s13, [r5, #28]
 800c7d2:	ee76 6a86 	vadd.f32	s13, s13, s12
 800c7d6:	441a      	add	r2, r3
 800c7d8:	696b      	ldr	r3, [r5, #20]
 800c7da:	68a9      	ldr	r1, [r5, #8]
 800c7dc:	3301      	adds	r3, #1
 800c7de:	616b      	str	r3, [r5, #20]
 800c7e0:	69ab      	ldr	r3, [r5, #24]
 800c7e2:	602a      	str	r2, [r5, #0]
 800c7e4:	3b01      	subs	r3, #1
 800c7e6:	61ab      	str	r3, [r5, #24]
 800c7e8:	692b      	ldr	r3, [r5, #16]
 800c7ea:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
 800c7ee:	440b      	add	r3, r1
 800c7f0:	68e9      	ldr	r1, [r5, #12]
 800c7f2:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
 800c7f6:	428b      	cmp	r3, r1
 800c7f8:	edc5 6a07 	vstr	s13, [r5, #28]
 800c7fc:	612b      	str	r3, [r5, #16]
 800c7fe:	db15      	blt.n	800c82c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x30c>
 800c800:	ed95 6a09 	vldr	s12, [r5, #36]	@ 0x24
 800c804:	ee76 6a26 	vadd.f32	s13, s12, s13
 800c808:	edc5 6a07 	vstr	s13, [r5, #28]
 800c80c:	edd5 6a0c 	vldr	s13, [r5, #48]	@ 0x30
 800c810:	ee36 7a87 	vadd.f32	s14, s13, s14
 800c814:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
 800c818:	ed95 7a0f 	vldr	s14, [r5, #60]	@ 0x3c
 800c81c:	ee77 7a27 	vadd.f32	s15, s14, s15
 800c820:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
 800c824:	3201      	adds	r2, #1
 800c826:	1a5b      	subs	r3, r3, r1
 800c828:	602a      	str	r2, [r5, #0]
 800c82a:	612b      	str	r3, [r5, #16]
 800c82c:	3f01      	subs	r7, #1
 800c82e:	e757      	b.n	800c6e0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1c0>
 800c830:	4299      	cmp	r1, r3
 800c832:	dc13      	bgt.n	800c85c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x33c>
 800c834:	429a      	cmp	r2, r3
 800c836:	da14      	bge.n	800c862 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x342>
 800c838:	2502      	movs	r5, #2
 800c83a:	2703      	movs	r7, #3
 800c83c:	46a9      	mov	r9, r5
 800c83e:	f04f 0800 	mov.w	r8, #0
 800c842:	f04f 0a01 	mov.w	sl, #1
 800c846:	e6ef      	b.n	800c628 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 800c848:	2501      	movs	r5, #1
 800c84a:	2700      	movs	r7, #0
 800c84c:	46a9      	mov	r9, r5
 800c84e:	46b8      	mov	r8, r7
 800c850:	f04f 0a02 	mov.w	sl, #2
 800c854:	e6e8      	b.n	800c628 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 800c856:	2501      	movs	r5, #1
 800c858:	2702      	movs	r7, #2
 800c85a:	e6e1      	b.n	800c620 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x100>
 800c85c:	2500      	movs	r5, #0
 800c85e:	2701      	movs	r7, #1
 800c860:	e7f4      	b.n	800c84c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x32c>
 800c862:	2702      	movs	r7, #2
 800c864:	2503      	movs	r5, #3
 800c866:	f04f 0900 	mov.w	r9, #0
 800c86a:	46b8      	mov	r8, r7
 800c86c:	e7e9      	b.n	800c842 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x322>
 800c86e:	4613      	mov	r3, r2
 800c870:	e728      	b.n	800c6c4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1a4>
 800c872:	bf00      	nop
 800c874:	2008309c 	.word	0x2008309c
 800c878:	fffd8f01 	.word	0xfffd8f01
 800c87c:	00027100 	.word	0x00027100
 800c880:	0004e1ff 	.word	0x0004e1ff
 800c884:	0004e1fe 	.word	0x0004e1fe
 800c888:	200830a4 	.word	0x200830a4
 800c88c:	4613      	mov	r3, r2
 800c88e:	e9dd 0a29 	ldrd	r0, sl, [sp, #164]	@ 0xa4
 800c892:	eddd 4a34 	vldr	s9, [sp, #208]	@ 0xd0
 800c896:	ed9d 7a33 	vldr	s14, [sp, #204]	@ 0xcc
 800c89a:	ed9d 4a37 	vldr	s8, [sp, #220]	@ 0xdc
 800c89e:	eddd 7a36 	vldr	s15, [sp, #216]	@ 0xd8
 800c8a2:	eddd 3a31 	vldr	s7, [sp, #196]	@ 0xc4
 800c8a6:	eddd 6a30 	vldr	s13, [sp, #192]	@ 0xc0
 800c8aa:	ed9d 5a32 	vldr	s10, [sp, #200]	@ 0xc8
 800c8ae:	eddd 5a35 	vldr	s11, [sp, #212]	@ 0xd4
 800c8b2:	ed9d 6a38 	vldr	s12, [sp, #224]	@ 0xe0
 800c8b6:	469e      	mov	lr, r3
 800c8b8:	469c      	mov	ip, r3
 800c8ba:	f04f 0900 	mov.w	r9, #0
 800c8be:	992b      	ldr	r1, [sp, #172]	@ 0xac
 800c8c0:	9f2e      	ldr	r7, [sp, #184]	@ 0xb8
 800c8c2:	9111      	str	r1, [sp, #68]	@ 0x44
 800c8c4:	e9dd 812c 	ldrd	r8, r1, [sp, #176]	@ 0xb0
 800c8c8:	f1bc 0f00 	cmp.w	ip, #0
 800c8cc:	d147      	bne.n	800c95e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x43e>
 800c8ce:	eb03 0c07 	add.w	ip, r3, r7
 800c8d2:	1ad7      	subs	r7, r2, r3
 800c8d4:	f1b9 0f00 	cmp.w	r9, #0
 800c8d8:	d009      	beq.n	800c8ee <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3ce>
 800c8da:	ed8d 7a33 	vstr	s14, [sp, #204]	@ 0xcc
 800c8de:	edcd 7a36 	vstr	s15, [sp, #216]	@ 0xd8
 800c8e2:	edcd 6a30 	vstr	s13, [sp, #192]	@ 0xc0
 800c8e6:	e9cd c72e 	strd	ip, r7, [sp, #184]	@ 0xb8
 800c8ea:	9029      	str	r0, [sp, #164]	@ 0xa4
 800c8ec:	912d      	str	r1, [sp, #180]	@ 0xb4
 800c8ee:	eddd 4a24 	vldr	s9, [sp, #144]	@ 0x90
 800c8f2:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	@ 0x64
 800c8f6:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	@ 0x78
 800c8fa:	eddd 6a23 	vldr	s13, [sp, #140]	@ 0x8c
 800c8fe:	ed9d 4a27 	vldr	s8, [sp, #156]	@ 0x9c
 800c902:	ed9d 7a26 	vldr	s14, [sp, #152]	@ 0x98
 800c906:	eddd 3a21 	vldr	s7, [sp, #132]	@ 0x84
 800c90a:	eddd 7a20 	vldr	s15, [sp, #128]	@ 0x80
 800c90e:	ed9d 5a22 	vldr	s10, [sp, #136]	@ 0x88
 800c912:	eddd 5a25 	vldr	s11, [sp, #148]	@ 0x94
 800c916:	ed9d 6a28 	vldr	s12, [sp, #160]	@ 0xa0
 800c91a:	f04f 0800 	mov.w	r8, #0
 800c91e:	991b      	ldr	r1, [sp, #108]	@ 0x6c
 800c920:	9111      	str	r1, [sp, #68]	@ 0x44
 800c922:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	@ 0x70
 800c926:	f1be 0f00 	cmp.w	lr, #0
 800c92a:	d031      	beq.n	800c990 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x470>
 800c92c:	9e11      	ldr	r6, [sp, #68]	@ 0x44
 800c92e:	4450      	add	r0, sl
 800c930:	4431      	add	r1, r6
 800c932:	4549      	cmp	r1, r9
 800c934:	ee76 6aa4 	vadd.f32	s13, s13, s9
 800c938:	ee37 7a04 	vadd.f32	s14, s14, s8
 800c93c:	ee77 7aa3 	vadd.f32	s15, s15, s7
 800c940:	db08      	blt.n	800c954 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x434>
 800c942:	ee77 7a85 	vadd.f32	s15, s15, s10
 800c946:	ee76 6aa5 	vadd.f32	s13, s13, s11
 800c94a:	ee37 7a06 	vadd.f32	s14, s14, s12
 800c94e:	3001      	adds	r0, #1
 800c950:	eba1 0109 	sub.w	r1, r1, r9
 800c954:	f10e 3eff 	add.w	lr, lr, #4294967295
 800c958:	f04f 0801 	mov.w	r8, #1
 800c95c:	e7e3      	b.n	800c926 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x406>
 800c95e:	9e11      	ldr	r6, [sp, #68]	@ 0x44
 800c960:	4450      	add	r0, sl
 800c962:	4431      	add	r1, r6
 800c964:	4541      	cmp	r1, r8
 800c966:	ee37 7a24 	vadd.f32	s14, s14, s9
 800c96a:	ee77 7a84 	vadd.f32	s15, s15, s8
 800c96e:	ee76 6aa3 	vadd.f32	s13, s13, s7
 800c972:	db08      	blt.n	800c986 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x466>
 800c974:	ee76 6a85 	vadd.f32	s13, s13, s10
 800c978:	ee37 7a25 	vadd.f32	s14, s14, s11
 800c97c:	ee77 7a86 	vadd.f32	s15, s15, s12
 800c980:	3001      	adds	r0, #1
 800c982:	eba1 0108 	sub.w	r1, r1, r8
 800c986:	f10c 3cff 	add.w	ip, ip, #4294967295
 800c98a:	f04f 0901 	mov.w	r9, #1
 800c98e:	e79b      	b.n	800c8c8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3a8>
 800c990:	449c      	add	ip, r3
 800c992:	1aff      	subs	r7, r7, r3
 800c994:	f1b8 0f00 	cmp.w	r8, #0
 800c998:	d009      	beq.n	800c9ae <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x48e>
 800c99a:	edcd 6a23 	vstr	s13, [sp, #140]	@ 0x8c
 800c99e:	ed8d 7a26 	vstr	s14, [sp, #152]	@ 0x98
 800c9a2:	edcd 7a20 	vstr	s15, [sp, #128]	@ 0x80
 800c9a6:	e9cd c71e 	strd	ip, r7, [sp, #120]	@ 0x78
 800c9aa:	9019      	str	r0, [sp, #100]	@ 0x64
 800c9ac:	911d      	str	r1, [sp, #116]	@ 0x74
 800c9ae:	1ad2      	subs	r2, r2, r3
 800c9b0:	e68b      	b.n	800c6ca <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 800c9b2:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 800c9b4:	9a3f      	ldr	r2, [sp, #252]	@ 0xfc
 800c9b6:	2b00      	cmp	r3, #0
 800c9b8:	f000 80d1 	beq.w	800cb5e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63e>
 800c9bc:	ad19      	add	r5, sp, #100	@ 0x64
 800c9be:	ac39      	add	r4, sp, #228	@ 0xe4
 800c9c0:	9b64      	ldr	r3, [sp, #400]	@ 0x190
 800c9c2:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 800c9c6:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 800c9ca:	930c      	str	r3, [sp, #48]	@ 0x30
 800c9cc:	990c      	ldr	r1, [sp, #48]	@ 0x30
 800c9ce:	6963      	ldr	r3, [r4, #20]
 800c9d0:	440b      	add	r3, r1
 800c9d2:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 800c9d6:	4408      	add	r0, r1
 800c9d8:	b200      	sxth	r0, r0
 800c9da:	4283      	cmp	r3, r0
 800c9dc:	900d      	str	r0, [sp, #52]	@ 0x34
 800c9de:	f280 80c1 	bge.w	800cb64 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x644>
 800c9e2:	428b      	cmp	r3, r1
 800c9e4:	da08      	bge.n	800c9f8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 800c9e6:	2a00      	cmp	r2, #0
 800c9e8:	dd06      	ble.n	800c9f8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 800c9ea:	1acb      	subs	r3, r1, r3
 800c9ec:	429a      	cmp	r2, r3
 800c9ee:	f2c0 80bb 	blt.w	800cb68 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x648>
 800c9f2:	2b00      	cmp	r3, #0
 800c9f4:	f300 80b9 	bgt.w	800cb6a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x64a>
 800c9f8:	6967      	ldr	r7, [r4, #20]
 800c9fa:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 800c9fc:	f10d 0850 	add.w	r8, sp, #80	@ 0x50
 800ca00:	443b      	add	r3, r7
 800ca02:	461f      	mov	r7, r3
 800ca04:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 800ca06:	1bdf      	subs	r7, r3, r7
 800ca08:	4297      	cmp	r7, r2
 800ca0a:	bfa8      	it	ge
 800ca0c:	4617      	movge	r7, r2
 800ca0e:	2f00      	cmp	r7, #0
 800ca10:	f340 813c 	ble.w	800cc8c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x76c>
 800ca14:	9b64      	ldr	r3, [sp, #400]	@ 0x190
 800ca16:	6829      	ldr	r1, [r5, #0]
 800ca18:	f9b3 2000 	ldrsh.w	r2, [r3]
 800ca1c:	f9bb 3000 	ldrsh.w	r3, [fp]
 800ca20:	4411      	add	r1, r2
 800ca22:	4299      	cmp	r1, r3
 800ca24:	6820      	ldr	r0, [r4, #0]
 800ca26:	dd1a      	ble.n	800ca5e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 800ca28:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 800ca2c:	4402      	add	r2, r0
 800ca2e:	440b      	add	r3, r1
 800ca30:	b21b      	sxth	r3, r3
 800ca32:	429a      	cmp	r2, r3
 800ca34:	dc13      	bgt.n	800ca5e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 800ca36:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 800ca38:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800ca3a:	a912      	add	r1, sp, #72	@ 0x48
 800ca3c:	681b      	ldr	r3, [r3, #0]
 800ca3e:	9206      	str	r2, [sp, #24]
 800ca40:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 800ca42:	9500      	str	r5, [sp, #0]
 800ca44:	9205      	str	r2, [sp, #20]
 800ca46:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 800ca48:	9809      	ldr	r0, [sp, #36]	@ 0x24
 800ca4a:	e9cd b203 	strd	fp, r2, [sp, #12]
 800ca4e:	9a64      	ldr	r2, [sp, #400]	@ 0x190
 800ca50:	e9cd 8201 	strd	r8, r2, [sp, #4]
 800ca54:	aa49      	add	r2, sp, #292	@ 0x124
 800ca56:	f8d3 9048 	ldr.w	r9, [r3, #72]	@ 0x48
 800ca5a:	4623      	mov	r3, r4
 800ca5c:	47c8      	blx	r9
 800ca5e:	e9d4 2300 	ldrd	r2, r3, [r4]
 800ca62:	ed94 7a0a 	vldr	s14, [r4, #40]	@ 0x28
 800ca66:	edd4 7a0b 	vldr	s15, [r4, #44]	@ 0x2c
 800ca6a:	edd4 6a0e 	vldr	s13, [r4, #56]	@ 0x38
 800ca6e:	ee37 7a27 	vadd.f32	s14, s14, s15
 800ca72:	edd4 7a0d 	vldr	s15, [r4, #52]	@ 0x34
 800ca76:	ed94 6a08 	vldr	s12, [r4, #32]
 800ca7a:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800ca7e:	edd4 6a07 	vldr	s13, [r4, #28]
 800ca82:	ee76 6a86 	vadd.f32	s13, s13, s12
 800ca86:	441a      	add	r2, r3
 800ca88:	6963      	ldr	r3, [r4, #20]
 800ca8a:	68a1      	ldr	r1, [r4, #8]
 800ca8c:	3301      	adds	r3, #1
 800ca8e:	6163      	str	r3, [r4, #20]
 800ca90:	69a3      	ldr	r3, [r4, #24]
 800ca92:	6022      	str	r2, [r4, #0]
 800ca94:	3b01      	subs	r3, #1
 800ca96:	61a3      	str	r3, [r4, #24]
 800ca98:	6923      	ldr	r3, [r4, #16]
 800ca9a:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
 800ca9e:	440b      	add	r3, r1
 800caa0:	68e1      	ldr	r1, [r4, #12]
 800caa2:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
 800caa6:	428b      	cmp	r3, r1
 800caa8:	edc4 6a07 	vstr	s13, [r4, #28]
 800caac:	6123      	str	r3, [r4, #16]
 800caae:	db15      	blt.n	800cadc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x5bc>
 800cab0:	ed94 6a09 	vldr	s12, [r4, #36]	@ 0x24
 800cab4:	ee76 6a26 	vadd.f32	s13, s12, s13
 800cab8:	edc4 6a07 	vstr	s13, [r4, #28]
 800cabc:	edd4 6a0c 	vldr	s13, [r4, #48]	@ 0x30
 800cac0:	ee36 7a87 	vadd.f32	s14, s13, s14
 800cac4:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
 800cac8:	ed94 7a0f 	vldr	s14, [r4, #60]	@ 0x3c
 800cacc:	ee77 7a27 	vadd.f32	s15, s14, s15
 800cad0:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
 800cad4:	3201      	adds	r2, #1
 800cad6:	1a5b      	subs	r3, r3, r1
 800cad8:	6022      	str	r2, [r4, #0]
 800cada:	6123      	str	r3, [r4, #16]
 800cadc:	ed95 7a0a 	vldr	s14, [r5, #40]	@ 0x28
 800cae0:	e9d5 2300 	ldrd	r2, r3, [r5]
 800cae4:	edd5 7a0b 	vldr	s15, [r5, #44]	@ 0x2c
 800cae8:	edd5 6a0e 	vldr	s13, [r5, #56]	@ 0x38
 800caec:	ee37 7a27 	vadd.f32	s14, s14, s15
 800caf0:	edd5 7a0d 	vldr	s15, [r5, #52]	@ 0x34
 800caf4:	ed95 6a08 	vldr	s12, [r5, #32]
 800caf8:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800cafc:	edd5 6a07 	vldr	s13, [r5, #28]
 800cb00:	ee76 6a86 	vadd.f32	s13, s13, s12
 800cb04:	441a      	add	r2, r3
 800cb06:	696b      	ldr	r3, [r5, #20]
 800cb08:	68a9      	ldr	r1, [r5, #8]
 800cb0a:	3301      	adds	r3, #1
 800cb0c:	616b      	str	r3, [r5, #20]
 800cb0e:	69ab      	ldr	r3, [r5, #24]
 800cb10:	602a      	str	r2, [r5, #0]
 800cb12:	3b01      	subs	r3, #1
 800cb14:	61ab      	str	r3, [r5, #24]
 800cb16:	692b      	ldr	r3, [r5, #16]
 800cb18:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
 800cb1c:	440b      	add	r3, r1
 800cb1e:	68e9      	ldr	r1, [r5, #12]
 800cb20:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
 800cb24:	428b      	cmp	r3, r1
 800cb26:	edc5 6a07 	vstr	s13, [r5, #28]
 800cb2a:	612b      	str	r3, [r5, #16]
 800cb2c:	db15      	blt.n	800cb5a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63a>
 800cb2e:	ed95 6a09 	vldr	s12, [r5, #36]	@ 0x24
 800cb32:	ee76 6a26 	vadd.f32	s13, s12, s13
 800cb36:	edc5 6a07 	vstr	s13, [r5, #28]
 800cb3a:	edd5 6a0c 	vldr	s13, [r5, #48]	@ 0x30
 800cb3e:	ee36 7a87 	vadd.f32	s14, s13, s14
 800cb42:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
 800cb46:	ed95 7a0f 	vldr	s14, [r5, #60]	@ 0x3c
 800cb4a:	ee77 7a27 	vadd.f32	s15, s14, s15
 800cb4e:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
 800cb52:	3201      	adds	r2, #1
 800cb54:	1a5b      	subs	r3, r3, r1
 800cb56:	602a      	str	r2, [r5, #0]
 800cb58:	612b      	str	r3, [r5, #16]
 800cb5a:	3f01      	subs	r7, #1
 800cb5c:	e757      	b.n	800ca0e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4ee>
 800cb5e:	ad39      	add	r5, sp, #228	@ 0xe4
 800cb60:	ac19      	add	r4, sp, #100	@ 0x64
 800cb62:	e72d      	b.n	800c9c0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4a0>
 800cb64:	4613      	mov	r3, r2
 800cb66:	e744      	b.n	800c9f2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d2>
 800cb68:	4613      	mov	r3, r2
 800cb6a:	e9dd 0a39 	ldrd	r0, sl, [sp, #228]	@ 0xe4
 800cb6e:	ed9d 7a43 	vldr	s14, [sp, #268]	@ 0x10c
 800cb72:	eddd 4a44 	vldr	s9, [sp, #272]	@ 0x110
 800cb76:	eddd 7a46 	vldr	s15, [sp, #280]	@ 0x118
 800cb7a:	ed9d 4a47 	vldr	s8, [sp, #284]	@ 0x11c
 800cb7e:	eddd 6a40 	vldr	s13, [sp, #256]	@ 0x100
 800cb82:	eddd 3a41 	vldr	s7, [sp, #260]	@ 0x104
 800cb86:	ed9d 5a42 	vldr	s10, [sp, #264]	@ 0x108
 800cb8a:	eddd 5a45 	vldr	s11, [sp, #276]	@ 0x114
 800cb8e:	ed9d 6a48 	vldr	s12, [sp, #288]	@ 0x120
 800cb92:	469e      	mov	lr, r3
 800cb94:	461f      	mov	r7, r3
 800cb96:	f04f 0900 	mov.w	r9, #0
 800cb9a:	9e3b      	ldr	r6, [sp, #236]	@ 0xec
 800cb9c:	f8dd c0f8 	ldr.w	ip, [sp, #248]	@ 0xf8
 800cba0:	993d      	ldr	r1, [sp, #244]	@ 0xf4
 800cba2:	f8dd 80f0 	ldr.w	r8, [sp, #240]	@ 0xf0
 800cba6:	960e      	str	r6, [sp, #56]	@ 0x38
 800cba8:	2f00      	cmp	r7, #0
 800cbaa:	d146      	bne.n	800cc3a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x71a>
 800cbac:	449c      	add	ip, r3
 800cbae:	1ad7      	subs	r7, r2, r3
 800cbb0:	f1b9 0f00 	cmp.w	r9, #0
 800cbb4:	d009      	beq.n	800cbca <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6aa>
 800cbb6:	edcd 6a40 	vstr	s13, [sp, #256]	@ 0x100
 800cbba:	ed8d 7a43 	vstr	s14, [sp, #268]	@ 0x10c
 800cbbe:	edcd 7a46 	vstr	s15, [sp, #280]	@ 0x118
 800cbc2:	e9cd c73e 	strd	ip, r7, [sp, #248]	@ 0xf8
 800cbc6:	9039      	str	r0, [sp, #228]	@ 0xe4
 800cbc8:	913d      	str	r1, [sp, #244]	@ 0xf4
 800cbca:	eddd 4a24 	vldr	s9, [sp, #144]	@ 0x90
 800cbce:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	@ 0x64
 800cbd2:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	@ 0x78
 800cbd6:	eddd 6a23 	vldr	s13, [sp, #140]	@ 0x8c
 800cbda:	ed9d 4a27 	vldr	s8, [sp, #156]	@ 0x9c
 800cbde:	ed9d 7a26 	vldr	s14, [sp, #152]	@ 0x98
 800cbe2:	eddd 3a21 	vldr	s7, [sp, #132]	@ 0x84
 800cbe6:	eddd 7a20 	vldr	s15, [sp, #128]	@ 0x80
 800cbea:	ed9d 5a22 	vldr	s10, [sp, #136]	@ 0x88
 800cbee:	eddd 5a25 	vldr	s11, [sp, #148]	@ 0x94
 800cbf2:	ed9d 6a28 	vldr	s12, [sp, #160]	@ 0xa0
 800cbf6:	f04f 0800 	mov.w	r8, #0
 800cbfa:	991b      	ldr	r1, [sp, #108]	@ 0x6c
 800cbfc:	910e      	str	r1, [sp, #56]	@ 0x38
 800cbfe:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	@ 0x70
 800cc02:	f1be 0f00 	cmp.w	lr, #0
 800cc06:	d030      	beq.n	800cc6a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x74a>
 800cc08:	9e0e      	ldr	r6, [sp, #56]	@ 0x38
 800cc0a:	4450      	add	r0, sl
 800cc0c:	4431      	add	r1, r6
 800cc0e:	4549      	cmp	r1, r9
 800cc10:	ee76 6aa4 	vadd.f32	s13, s13, s9
 800cc14:	ee37 7a04 	vadd.f32	s14, s14, s8
 800cc18:	ee77 7aa3 	vadd.f32	s15, s15, s7
 800cc1c:	db08      	blt.n	800cc30 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x710>
 800cc1e:	ee77 7a85 	vadd.f32	s15, s15, s10
 800cc22:	ee76 6aa5 	vadd.f32	s13, s13, s11
 800cc26:	ee37 7a06 	vadd.f32	s14, s14, s12
 800cc2a:	3001      	adds	r0, #1
 800cc2c:	eba1 0109 	sub.w	r1, r1, r9
 800cc30:	f10e 3eff 	add.w	lr, lr, #4294967295
 800cc34:	f04f 0801 	mov.w	r8, #1
 800cc38:	e7e3      	b.n	800cc02 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6e2>
 800cc3a:	9e0e      	ldr	r6, [sp, #56]	@ 0x38
 800cc3c:	4450      	add	r0, sl
 800cc3e:	4431      	add	r1, r6
 800cc40:	4541      	cmp	r1, r8
 800cc42:	ee37 7a24 	vadd.f32	s14, s14, s9
 800cc46:	ee77 7a84 	vadd.f32	s15, s15, s8
 800cc4a:	ee76 6aa3 	vadd.f32	s13, s13, s7
 800cc4e:	db08      	blt.n	800cc62 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x742>
 800cc50:	ee76 6a85 	vadd.f32	s13, s13, s10
 800cc54:	ee37 7a25 	vadd.f32	s14, s14, s11
 800cc58:	ee77 7a86 	vadd.f32	s15, s15, s12
 800cc5c:	3001      	adds	r0, #1
 800cc5e:	eba1 0108 	sub.w	r1, r1, r8
 800cc62:	3f01      	subs	r7, #1
 800cc64:	f04f 0901 	mov.w	r9, #1
 800cc68:	e79e      	b.n	800cba8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x688>
 800cc6a:	449c      	add	ip, r3
 800cc6c:	1aff      	subs	r7, r7, r3
 800cc6e:	f1b8 0f00 	cmp.w	r8, #0
 800cc72:	d009      	beq.n	800cc88 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x768>
 800cc74:	edcd 6a23 	vstr	s13, [sp, #140]	@ 0x8c
 800cc78:	ed8d 7a26 	vstr	s14, [sp, #152]	@ 0x98
 800cc7c:	edcd 7a20 	vstr	s15, [sp, #128]	@ 0x80
 800cc80:	e9cd c71e 	strd	ip, r7, [sp, #120]	@ 0x78
 800cc84:	9019      	str	r0, [sp, #100]	@ 0x64
 800cc86:	911d      	str	r1, [sp, #116]	@ 0x74
 800cc88:	1ad2      	subs	r2, r2, r3
 800cc8a:	e6b5      	b.n	800c9f8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 800cc8c:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800cc8e:	681b      	ldr	r3, [r3, #0]
 800cc90:	b923      	cbnz	r3, 800cc9c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800cc92:	4b04      	ldr	r3, [pc, #16]	@ (800cca4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x784>)
 800cc94:	6818      	ldr	r0, [r3, #0]
 800cc96:	6803      	ldr	r3, [r0, #0]
 800cc98:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800cc9a:	4798      	blx	r3
 800cc9c:	b05b      	add	sp, #364	@ 0x16c
 800cc9e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800cca2:	bf00      	nop
 800cca4:	200830a4 	.word	0x200830a4

0800cca8 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>:
 800cca8:	2b03      	cmp	r3, #3
 800ccaa:	d818      	bhi.n	800ccde <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x36>
 800ccac:	e8df f003 	tbb	[pc, r3]
 800ccb0:	130d0602 	.word	0x130d0602
 800ccb4:	f9b0 2000 	ldrsh.w	r2, [r0]
 800ccb8:	1850      	adds	r0, r2, r1
 800ccba:	4770      	bx	lr
 800ccbc:	8803      	ldrh	r3, [r0, #0]
 800ccbe:	8880      	ldrh	r0, [r0, #4]
 800ccc0:	4418      	add	r0, r3
 800ccc2:	b200      	sxth	r0, r0
 800ccc4:	1a80      	subs	r0, r0, r2
 800ccc6:	3801      	subs	r0, #1
 800ccc8:	4770      	bx	lr
 800ccca:	8803      	ldrh	r3, [r0, #0]
 800cccc:	8880      	ldrh	r0, [r0, #4]
 800ccce:	4418      	add	r0, r3
 800ccd0:	b200      	sxth	r0, r0
 800ccd2:	1a40      	subs	r0, r0, r1
 800ccd4:	e7f7      	b.n	800ccc6 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x1e>
 800ccd6:	f9b0 0000 	ldrsh.w	r0, [r0]
 800ccda:	4410      	add	r0, r2
 800ccdc:	4770      	bx	lr
 800ccde:	2000      	movs	r0, #0
 800cce0:	4770      	bx	lr

0800cce2 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>:
 800cce2:	2b03      	cmp	r3, #3
 800cce4:	d817      	bhi.n	800cd16 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x34>
 800cce6:	e8df f003 	tbb	[pc, r3]
 800ccea:	0602      	.short	0x0602
 800ccec:	1009      	.short	0x1009
 800ccee:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 800ccf2:	1850      	adds	r0, r2, r1
 800ccf4:	4770      	bx	lr
 800ccf6:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 800ccfa:	e7fa      	b.n	800ccf2 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x10>
 800ccfc:	8843      	ldrh	r3, [r0, #2]
 800ccfe:	88c0      	ldrh	r0, [r0, #6]
 800cd00:	4418      	add	r0, r3
 800cd02:	b200      	sxth	r0, r0
 800cd04:	1a80      	subs	r0, r0, r2
 800cd06:	3801      	subs	r0, #1
 800cd08:	4770      	bx	lr
 800cd0a:	8843      	ldrh	r3, [r0, #2]
 800cd0c:	88c0      	ldrh	r0, [r0, #6]
 800cd0e:	4418      	add	r0, r3
 800cd10:	b200      	sxth	r0, r0
 800cd12:	1a40      	subs	r0, r0, r1
 800cd14:	e7f7      	b.n	800cd06 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x24>
 800cd16:	2000      	movs	r0, #0
 800cd18:	4770      	bx	lr
	...

0800cd1c <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE>:
 800cd1c:	2200      	movs	r2, #0
 800cd1e:	4b01      	ldr	r3, [pc, #4]	@ (800cd24 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE+0x8>)
 800cd20:	601a      	str	r2, [r3, #0]
 800cd22:	4770      	bx	lr
 800cd24:	200830ac 	.word	0x200830ac

0800cd28 <_ZN8touchgfx16TouchCalibration4clzuEm>:
 800cd28:	4603      	mov	r3, r0
 800cd2a:	b1c8      	cbz	r0, 800cd60 <_ZN8touchgfx16TouchCalibration4clzuEm+0x38>
 800cd2c:	0c02      	lsrs	r2, r0, #16
 800cd2e:	0412      	lsls	r2, r2, #16
 800cd30:	b9a2      	cbnz	r2, 800cd5c <_ZN8touchgfx16TouchCalibration4clzuEm+0x34>
 800cd32:	0403      	lsls	r3, r0, #16
 800cd34:	2010      	movs	r0, #16
 800cd36:	f013 4f7f 	tst.w	r3, #4278190080	@ 0xff000000
 800cd3a:	bf04      	itt	eq
 800cd3c:	021b      	lsleq	r3, r3, #8
 800cd3e:	3008      	addeq	r0, #8
 800cd40:	f013 4f70 	tst.w	r3, #4026531840	@ 0xf0000000
 800cd44:	bf04      	itt	eq
 800cd46:	011b      	lsleq	r3, r3, #4
 800cd48:	3004      	addeq	r0, #4
 800cd4a:	f013 4f40 	tst.w	r3, #3221225472	@ 0xc0000000
 800cd4e:	bf04      	itt	eq
 800cd50:	009b      	lsleq	r3, r3, #2
 800cd52:	3002      	addeq	r0, #2
 800cd54:	2b00      	cmp	r3, #0
 800cd56:	db04      	blt.n	800cd62 <_ZN8touchgfx16TouchCalibration4clzuEm+0x3a>
 800cd58:	3001      	adds	r0, #1
 800cd5a:	4770      	bx	lr
 800cd5c:	2000      	movs	r0, #0
 800cd5e:	e7ea      	b.n	800cd36 <_ZN8touchgfx16TouchCalibration4clzuEm+0xe>
 800cd60:	2020      	movs	r0, #32
 800cd62:	4770      	bx	lr

0800cd64 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>:
 800cd64:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800cd68:	b087      	sub	sp, #28
 800cd6a:	460d      	mov	r5, r1
 800cd6c:	e9dd 4710 	ldrd	r4, r7, [sp, #64]	@ 0x40
 800cd70:	4616      	mov	r6, r2
 800cd72:	4698      	mov	r8, r3
 800cd74:	4601      	mov	r1, r0
 800cd76:	b120      	cbz	r0, 800cd82 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 800cd78:	b11a      	cbz	r2, 800cd82 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 800cd7a:	2d1f      	cmp	r5, #31
 800cd7c:	d801      	bhi.n	800cd82 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 800cd7e:	2b1f      	cmp	r3, #31
 800cd80:	d904      	bls.n	800cd8c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x28>
 800cd82:	2000      	movs	r0, #0
 800cd84:	6038      	str	r0, [r7, #0]
 800cd86:	b007      	add	sp, #28
 800cd88:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800cd8c:	b97d      	cbnz	r5, 800cdae <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x4a>
 800cd8e:	b143      	cbz	r3, 800cda2 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x3e>
 800cd90:	4602      	mov	r2, r0
 800cd92:	e9cd 4700 	strd	r4, r7, [sp]
 800cd96:	462b      	mov	r3, r5
 800cd98:	4641      	mov	r1, r8
 800cd9a:	4630      	mov	r0, r6
 800cd9c:	f7ff ffe2 	bl	800cd64 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800cda0:	e7f1      	b.n	800cd86 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 800cda2:	f04f 33ff 	mov.w	r3, #4294967295
 800cda6:	f06f 4000 	mvn.w	r0, #2147483648	@ 0x80000000
 800cdaa:	603b      	str	r3, [r7, #0]
 800cdac:	e7eb      	b.n	800cd86 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 800cdae:	fa32 fa05 	lsrs.w	sl, r2, r5
 800cdb2:	d106      	bne.n	800cdc2 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x5e>
 800cdb4:	4346      	muls	r6, r0
 800cdb6:	fbb6 f0f4 	udiv	r0, r6, r4
 800cdba:	fb04 6610 	mls	r6, r4, r0, r6
 800cdbe:	603e      	str	r6, [r7, #0]
 800cdc0:	e7e1      	b.n	800cd86 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 800cdc2:	fa00 fb05 	lsl.w	fp, r0, r5
 800cdc6:	fbbb f9f4 	udiv	r9, fp, r4
 800cdca:	2201      	movs	r2, #1
 800cdcc:	fb0a f309 	mul.w	r3, sl, r9
 800cdd0:	40aa      	lsls	r2, r5
 800cdd2:	3a01      	subs	r2, #1
 800cdd4:	4016      	ands	r6, r2
 800cdd6:	4630      	mov	r0, r6
 800cdd8:	9303      	str	r3, [sp, #12]
 800cdda:	f7ff ffa5 	bl	800cd28 <_ZN8touchgfx16TouchCalibration4clzuEm>
 800cdde:	462b      	mov	r3, r5
 800cde0:	460a      	mov	r2, r1
 800cde2:	e9cd 4700 	strd	r4, r7, [sp]
 800cde6:	4601      	mov	r1, r0
 800cde8:	4630      	mov	r0, r6
 800cdea:	f7ff ffbb 	bl	800cd64 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800cdee:	fb04 b919 	mls	r9, r4, r9, fp
 800cdf2:	4606      	mov	r6, r0
 800cdf4:	4648      	mov	r0, r9
 800cdf6:	eb05 0108 	add.w	r1, r5, r8
 800cdfa:	f7ff ff95 	bl	800cd28 <_ZN8touchgfx16TouchCalibration4clzuEm>
 800cdfe:	ab05      	add	r3, sp, #20
 800ce00:	e9cd 4300 	strd	r4, r3, [sp]
 800ce04:	464a      	mov	r2, r9
 800ce06:	4603      	mov	r3, r0
 800ce08:	4650      	mov	r0, sl
 800ce0a:	f7ff ffab 	bl	800cd64 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800ce0e:	6839      	ldr	r1, [r7, #0]
 800ce10:	9a05      	ldr	r2, [sp, #20]
 800ce12:	9b03      	ldr	r3, [sp, #12]
 800ce14:	4411      	add	r1, r2
 800ce16:	fbb1 f2f4 	udiv	r2, r1, r4
 800ce1a:	fb04 1412 	mls	r4, r4, r2, r1
 800ce1e:	18d3      	adds	r3, r2, r3
 800ce20:	441e      	add	r6, r3
 800ce22:	4430      	add	r0, r6
 800ce24:	603c      	str	r4, [r7, #0]
 800ce26:	e7ae      	b.n	800cd86 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>

0800ce28 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>:
 800ce28:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800ce2c:	b085      	sub	sp, #20
 800ce2e:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 800ce30:	f1b0 0900 	subs.w	r9, r0, #0
 800ce34:	461d      	mov	r5, r3
 800ce36:	bfbf      	itttt	lt
 800ce38:	6823      	ldrlt	r3, [r4, #0]
 800ce3a:	f1c9 0900 	rsblt	r9, r9, #0
 800ce3e:	425b      	neglt	r3, r3
 800ce40:	6023      	strlt	r3, [r4, #0]
 800ce42:	bfb4      	ite	lt
 800ce44:	f04f 36ff 	movlt.w	r6, #4294967295
 800ce48:	2601      	movge	r6, #1
 800ce4a:	2a00      	cmp	r2, #0
 800ce4c:	4617      	mov	r7, r2
 800ce4e:	da04      	bge.n	800ce5a <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x32>
 800ce50:	6823      	ldr	r3, [r4, #0]
 800ce52:	4257      	negs	r7, r2
 800ce54:	425b      	negs	r3, r3
 800ce56:	4276      	negs	r6, r6
 800ce58:	6023      	str	r3, [r4, #0]
 800ce5a:	2d00      	cmp	r5, #0
 800ce5c:	4638      	mov	r0, r7
 800ce5e:	bfba      	itte	lt
 800ce60:	426d      	neglt	r5, r5
 800ce62:	f04f 38ff 	movlt.w	r8, #4294967295
 800ce66:	f04f 0801 	movge.w	r8, #1
 800ce6a:	f7ff ff5d 	bl	800cd28 <_ZN8touchgfx16TouchCalibration4clzuEm>
 800ce6e:	ab03      	add	r3, sp, #12
 800ce70:	e9cd 5300 	strd	r5, r3, [sp]
 800ce74:	463a      	mov	r2, r7
 800ce76:	4603      	mov	r3, r0
 800ce78:	4648      	mov	r0, r9
 800ce7a:	f7ff ff73 	bl	800cd64 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800ce7e:	6823      	ldr	r3, [r4, #0]
 800ce80:	9a03      	ldr	r2, [sp, #12]
 800ce82:	4546      	cmp	r6, r8
 800ce84:	441a      	add	r2, r3
 800ce86:	fb92 f3f5 	sdiv	r3, r2, r5
 800ce8a:	4418      	add	r0, r3
 800ce8c:	fb05 2313 	mls	r3, r5, r3, r2
 800ce90:	bf18      	it	ne
 800ce92:	4240      	negne	r0, r0
 800ce94:	1c72      	adds	r2, r6, #1
 800ce96:	6023      	str	r3, [r4, #0]
 800ce98:	d105      	bne.n	800cea6 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7e>
 800ce9a:	2b00      	cmp	r3, #0
 800ce9c:	f1c3 0200 	rsb	r2, r3, #0
 800cea0:	db0b      	blt.n	800ceba <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x92>
 800cea2:	6022      	str	r2, [r4, #0]
 800cea4:	e006      	b.n	800ceb4 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 800cea6:	2e01      	cmp	r6, #1
 800cea8:	d104      	bne.n	800ceb4 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 800ceaa:	2b00      	cmp	r3, #0
 800ceac:	da02      	bge.n	800ceb4 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 800ceae:	442b      	add	r3, r5
 800ceb0:	3801      	subs	r0, #1
 800ceb2:	6023      	str	r3, [r4, #0]
 800ceb4:	b005      	add	sp, #20
 800ceb6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800ceba:	3801      	subs	r0, #1
 800cebc:	1b52      	subs	r2, r2, r5
 800cebe:	e7f0      	b.n	800cea2 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7a>

0800cec0 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>:
 800cec0:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 800cec4:	4c1c      	ldr	r4, [pc, #112]	@ (800cf38 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x78>)
 800cec6:	4605      	mov	r5, r0
 800cec8:	69a3      	ldr	r3, [r4, #24]
 800ceca:	6807      	ldr	r7, [r0, #0]
 800cecc:	b92b      	cbnz	r3, 800ceda <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x1a>
 800cece:	6840      	ldr	r0, [r0, #4]
 800ced0:	e9c5 7000 	strd	r7, r0, [r5]
 800ced4:	b004      	add	sp, #16
 800ced6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800ceda:	f04f 0802 	mov.w	r8, #2
 800cede:	fb93 f1f8 	sdiv	r1, r3, r8
 800cee2:	68a2      	ldr	r2, [r4, #8]
 800cee4:	ae04      	add	r6, sp, #16
 800cee6:	440a      	add	r2, r1
 800cee8:	f846 2d04 	str.w	r2, [r6, #-4]!
 800ceec:	69e1      	ldr	r1, [r4, #28]
 800ceee:	463a      	mov	r2, r7
 800cef0:	9600      	str	r6, [sp, #0]
 800cef2:	6820      	ldr	r0, [r4, #0]
 800cef4:	f7ff ff98 	bl	800ce28 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800cef8:	69a3      	ldr	r3, [r4, #24]
 800cefa:	4607      	mov	r7, r0
 800cefc:	686a      	ldr	r2, [r5, #4]
 800cefe:	6a21      	ldr	r1, [r4, #32]
 800cf00:	9600      	str	r6, [sp, #0]
 800cf02:	6860      	ldr	r0, [r4, #4]
 800cf04:	f7ff ff90 	bl	800ce28 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800cf08:	69a3      	ldr	r3, [r4, #24]
 800cf0a:	6962      	ldr	r2, [r4, #20]
 800cf0c:	fb93 f8f8 	sdiv	r8, r3, r8
 800cf10:	4442      	add	r2, r8
 800cf12:	9203      	str	r2, [sp, #12]
 800cf14:	6a61      	ldr	r1, [r4, #36]	@ 0x24
 800cf16:	682a      	ldr	r2, [r5, #0]
 800cf18:	4407      	add	r7, r0
 800cf1a:	9600      	str	r6, [sp, #0]
 800cf1c:	68e0      	ldr	r0, [r4, #12]
 800cf1e:	f7ff ff83 	bl	800ce28 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800cf22:	9600      	str	r6, [sp, #0]
 800cf24:	4680      	mov	r8, r0
 800cf26:	69a3      	ldr	r3, [r4, #24]
 800cf28:	686a      	ldr	r2, [r5, #4]
 800cf2a:	6aa1      	ldr	r1, [r4, #40]	@ 0x28
 800cf2c:	6920      	ldr	r0, [r4, #16]
 800cf2e:	f7ff ff7b 	bl	800ce28 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800cf32:	4440      	add	r0, r8
 800cf34:	e7cc      	b.n	800ced0 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x10>
 800cf36:	bf00      	nop
 800cf38:	200830b0 	.word	0x200830b0

0800cf3c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>:
 800cf3c:	4b07      	ldr	r3, [pc, #28]	@ (800cf5c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x20>)
 800cf3e:	781b      	ldrb	r3, [r3, #0]
 800cf40:	2b01      	cmp	r3, #1
 800cf42:	d109      	bne.n	800cf58 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x1c>
 800cf44:	f9b1 3000 	ldrsh.w	r3, [r1]
 800cf48:	f9b0 2000 	ldrsh.w	r2, [r0]
 800cf4c:	8003      	strh	r3, [r0, #0]
 800cf4e:	4b04      	ldr	r3, [pc, #16]	@ (800cf60 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x24>)
 800cf50:	881b      	ldrh	r3, [r3, #0]
 800cf52:	3b01      	subs	r3, #1
 800cf54:	1a9b      	subs	r3, r3, r2
 800cf56:	800b      	strh	r3, [r1, #0]
 800cf58:	4770      	bx	lr
 800cf5a:	bf00      	nop
 800cf5c:	2008309c 	.word	0x2008309c
 800cf60:	20083098 	.word	0x20083098

0800cf64 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>:
 800cf64:	b510      	push	{r4, lr}
 800cf66:	4b07      	ldr	r3, [pc, #28]	@ (800cf84 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x20>)
 800cf68:	781b      	ldrb	r3, [r3, #0]
 800cf6a:	2b01      	cmp	r3, #1
 800cf6c:	d108      	bne.n	800cf80 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x1c>
 800cf6e:	4b06      	ldr	r3, [pc, #24]	@ (800cf88 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x24>)
 800cf70:	880c      	ldrh	r4, [r1, #0]
 800cf72:	881b      	ldrh	r3, [r3, #0]
 800cf74:	f9b0 2000 	ldrsh.w	r2, [r0]
 800cf78:	3b01      	subs	r3, #1
 800cf7a:	1b1b      	subs	r3, r3, r4
 800cf7c:	8003      	strh	r3, [r0, #0]
 800cf7e:	800a      	strh	r2, [r1, #0]
 800cf80:	bd10      	pop	{r4, pc}
 800cf82:	bf00      	nop
 800cf84:	2008309c 	.word	0x2008309c
 800cf88:	20083098 	.word	0x20083098

0800cf8c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>:
 800cf8c:	b510      	push	{r4, lr}
 800cf8e:	4b0a      	ldr	r3, [pc, #40]	@ (800cfb8 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x2c>)
 800cf90:	781b      	ldrb	r3, [r3, #0]
 800cf92:	2b01      	cmp	r3, #1
 800cf94:	d10e      	bne.n	800cfb4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x28>
 800cf96:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 800cf9a:	8843      	ldrh	r3, [r0, #2]
 800cf9c:	f9b0 4000 	ldrsh.w	r4, [r0]
 800cfa0:	18ca      	adds	r2, r1, r3
 800cfa2:	4b06      	ldr	r3, [pc, #24]	@ (800cfbc <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x30>)
 800cfa4:	8044      	strh	r4, [r0, #2]
 800cfa6:	881b      	ldrh	r3, [r3, #0]
 800cfa8:	1a9b      	subs	r3, r3, r2
 800cfaa:	8003      	strh	r3, [r0, #0]
 800cfac:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800cfb0:	8081      	strh	r1, [r0, #4]
 800cfb2:	80c3      	strh	r3, [r0, #6]
 800cfb4:	bd10      	pop	{r4, pc}
 800cfb6:	bf00      	nop
 800cfb8:	2008309c 	.word	0x2008309c
 800cfbc:	20083098 	.word	0x20083098

0800cfc0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>:
 800cfc0:	4b08      	ldr	r3, [pc, #32]	@ (800cfe4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x24>)
 800cfc2:	781b      	ldrb	r3, [r3, #0]
 800cfc4:	2b01      	cmp	r3, #1
 800cfc6:	d10c      	bne.n	800cfe2 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x22>
 800cfc8:	8803      	ldrh	r3, [r0, #0]
 800cfca:	f9b0 1004 	ldrsh.w	r1, [r0, #4]
 800cfce:	8842      	ldrh	r2, [r0, #2]
 800cfd0:	8002      	strh	r2, [r0, #0]
 800cfd2:	185a      	adds	r2, r3, r1
 800cfd4:	4b04      	ldr	r3, [pc, #16]	@ (800cfe8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x28>)
 800cfd6:	881b      	ldrh	r3, [r3, #0]
 800cfd8:	1a9b      	subs	r3, r3, r2
 800cfda:	8043      	strh	r3, [r0, #2]
 800cfdc:	88c3      	ldrh	r3, [r0, #6]
 800cfde:	80c1      	strh	r1, [r0, #6]
 800cfe0:	8083      	strh	r3, [r0, #4]
 800cfe2:	4770      	bx	lr
 800cfe4:	2008309c 	.word	0x2008309c
 800cfe8:	20083098 	.word	0x20083098

0800cfec <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>:
 800cfec:	b510      	push	{r4, lr}
 800cfee:	4b07      	ldr	r3, [pc, #28]	@ (800d00c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x20>)
 800cff0:	781b      	ldrb	r3, [r3, #0]
 800cff2:	2b01      	cmp	r3, #1
 800cff4:	d108      	bne.n	800d008 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x1c>
 800cff6:	f9b1 3000 	ldrsh.w	r3, [r1]
 800cffa:	f9b0 4000 	ldrsh.w	r4, [r0]
 800cffe:	8003      	strh	r3, [r0, #0]
 800d000:	8893      	ldrh	r3, [r2, #4]
 800d002:	3b01      	subs	r3, #1
 800d004:	1b1b      	subs	r3, r3, r4
 800d006:	800b      	strh	r3, [r1, #0]
 800d008:	bd10      	pop	{r4, pc}
 800d00a:	bf00      	nop
 800d00c:	2008309c 	.word	0x2008309c

0800d010 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>:
 800d010:	b510      	push	{r4, lr}
 800d012:	4b0a      	ldr	r3, [pc, #40]	@ (800d03c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x2c>)
 800d014:	460a      	mov	r2, r1
 800d016:	781b      	ldrb	r3, [r3, #0]
 800d018:	2b01      	cmp	r3, #1
 800d01a:	d10d      	bne.n	800d038 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x28>
 800d01c:	8881      	ldrh	r1, [r0, #4]
 800d01e:	8803      	ldrh	r3, [r0, #0]
 800d020:	440b      	add	r3, r1
 800d022:	4601      	mov	r1, r0
 800d024:	3b01      	subs	r3, #1
 800d026:	f821 3b02 	strh.w	r3, [r1], #2
 800d02a:	f7ff ffdf 	bl	800cfec <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
 800d02e:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800d032:	88c2      	ldrh	r2, [r0, #6]
 800d034:	80c3      	strh	r3, [r0, #6]
 800d036:	8082      	strh	r2, [r0, #4]
 800d038:	bd10      	pop	{r4, pc}
 800d03a:	bf00      	nop
 800d03c:	2008309c 	.word	0x2008309c

0800d040 <_ZN8touchgfx11Application13requestRedrawEv>:
 800d040:	2100      	movs	r1, #0
 800d042:	4b06      	ldr	r3, [pc, #24]	@ (800d05c <_ZN8touchgfx11Application13requestRedrawEv+0x1c>)
 800d044:	f8c0 1130 	str.w	r1, [r0, #304]	@ 0x130
 800d048:	f9b3 2000 	ldrsh.w	r2, [r3]
 800d04c:	4b04      	ldr	r3, [pc, #16]	@ (800d060 <_ZN8touchgfx11Application13requestRedrawEv+0x20>)
 800d04e:	f8a0 2134 	strh.w	r2, [r0, #308]	@ 0x134
 800d052:	f9b3 3000 	ldrsh.w	r3, [r3]
 800d056:	f8a0 3136 	strh.w	r3, [r0, #310]	@ 0x136
 800d05a:	4770      	bx	lr
 800d05c:	20083098 	.word	0x20083098
 800d060:	2008309a 	.word	0x2008309a

0800d064 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE>:
 800d064:	4b03      	ldr	r3, [pc, #12]	@ (800d074 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0x10>)
 800d066:	6818      	ldr	r0, [r3, #0]
 800d068:	b110      	cbz	r0, 800d070 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0xc>
 800d06a:	6803      	ldr	r3, [r0, #0]
 800d06c:	699b      	ldr	r3, [r3, #24]
 800d06e:	4718      	bx	r3
 800d070:	4770      	bx	lr
 800d072:	bf00      	nop
 800d074:	200830e0 	.word	0x200830e0

0800d078 <_ZN8touchgfx11Application29handlePendingScreenTransitionEv>:
 800d078:	4770      	bx	lr
	...

0800d07c <_ZN8touchgfx11Application4drawEv>:
 800d07c:	b507      	push	{r0, r1, r2, lr}
 800d07e:	2100      	movs	r1, #0
 800d080:	4b08      	ldr	r3, [pc, #32]	@ (800d0a4 <_ZN8touchgfx11Application4drawEv+0x28>)
 800d082:	9100      	str	r1, [sp, #0]
 800d084:	f9b3 2000 	ldrsh.w	r2, [r3]
 800d088:	4b07      	ldr	r3, [pc, #28]	@ (800d0a8 <_ZN8touchgfx11Application4drawEv+0x2c>)
 800d08a:	f8ad 2004 	strh.w	r2, [sp, #4]
 800d08e:	f9b3 3000 	ldrsh.w	r3, [r3]
 800d092:	4669      	mov	r1, sp
 800d094:	f8ad 3006 	strh.w	r3, [sp, #6]
 800d098:	6803      	ldr	r3, [r0, #0]
 800d09a:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 800d09c:	4798      	blx	r3
 800d09e:	b003      	add	sp, #12
 800d0a0:	f85d fb04 	ldr.w	pc, [sp], #4
 800d0a4:	20083098 	.word	0x20083098
 800d0a8:	2008309a 	.word	0x2008309a

0800d0ac <_ZN8touchgfx11Application10invalidateEv>:
 800d0ac:	2100      	movs	r1, #0
 800d0ae:	4b09      	ldr	r3, [pc, #36]	@ (800d0d4 <_ZN8touchgfx11Application10invalidateEv+0x28>)
 800d0b0:	b082      	sub	sp, #8
 800d0b2:	f9b3 2000 	ldrsh.w	r2, [r3]
 800d0b6:	4b08      	ldr	r3, [pc, #32]	@ (800d0d8 <_ZN8touchgfx11Application10invalidateEv+0x2c>)
 800d0b8:	f8ad 2004 	strh.w	r2, [sp, #4]
 800d0bc:	f9b3 3000 	ldrsh.w	r3, [r3]
 800d0c0:	9100      	str	r1, [sp, #0]
 800d0c2:	f8ad 3006 	strh.w	r3, [sp, #6]
 800d0c6:	6803      	ldr	r3, [r0, #0]
 800d0c8:	aa02      	add	r2, sp, #8
 800d0ca:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800d0cc:	e912 0006 	ldmdb	r2, {r1, r2}
 800d0d0:	b002      	add	sp, #8
 800d0d2:	4718      	bx	r3
 800d0d4:	20083098 	.word	0x20083098
 800d0d8:	2008309a 	.word	0x2008309a

0800d0dc <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE>:
 800d0dc:	4b03      	ldr	r3, [pc, #12]	@ (800d0ec <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0x10>)
 800d0de:	6818      	ldr	r0, [r3, #0]
 800d0e0:	b110      	cbz	r0, 800d0e8 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0xc>
 800d0e2:	6803      	ldr	r3, [r0, #0]
 800d0e4:	69db      	ldr	r3, [r3, #28]
 800d0e6:	4718      	bx	r3
 800d0e8:	4770      	bx	lr
 800d0ea:	bf00      	nop
 800d0ec:	200830e0 	.word	0x200830e0

0800d0f0 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE>:
 800d0f0:	4b03      	ldr	r3, [pc, #12]	@ (800d100 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0x10>)
 800d0f2:	6818      	ldr	r0, [r3, #0]
 800d0f4:	b110      	cbz	r0, 800d0fc <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0xc>
 800d0f6:	6803      	ldr	r3, [r0, #0]
 800d0f8:	6a1b      	ldr	r3, [r3, #32]
 800d0fa:	4718      	bx	r3
 800d0fc:	4770      	bx	lr
 800d0fe:	bf00      	nop
 800d100:	200830e0 	.word	0x200830e0

0800d104 <_ZN8touchgfx11Application16clearCachedAreasEv>:
 800d104:	2300      	movs	r3, #0
 800d106:	f8a0 30ec 	strh.w	r3, [r0, #236]	@ 0xec
 800d10a:	4770      	bx	lr

0800d10c <_ZN8touchgfx11Application14handleKeyEventEh>:
 800d10c:	4b03      	ldr	r3, [pc, #12]	@ (800d11c <_ZN8touchgfx11Application14handleKeyEventEh+0x10>)
 800d10e:	6818      	ldr	r0, [r3, #0]
 800d110:	b110      	cbz	r0, 800d118 <_ZN8touchgfx11Application14handleKeyEventEh+0xc>
 800d112:	6803      	ldr	r3, [r0, #0]
 800d114:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800d116:	4718      	bx	r3
 800d118:	4770      	bx	lr
 800d11a:	bf00      	nop
 800d11c:	200830e0 	.word	0x200830e0

0800d120 <_ZN8touchgfx11ApplicationD1Ev>:
 800d120:	4770      	bx	lr

0800d122 <_ZN8touchgfx11ApplicationD0Ev>:
 800d122:	b510      	push	{r4, lr}
 800d124:	4604      	mov	r4, r0
 800d126:	f44f 719e 	mov.w	r1, #316	@ 0x13c
 800d12a:	f024 f94c 	bl	80313c6 <_ZdlPvj>
 800d12e:	4620      	mov	r0, r4
 800d130:	bd10      	pop	{r4, pc}

0800d132 <_ZNK8touchgfx4Rect9intersectERKS0_>:
 800d132:	b510      	push	{r4, lr}
 800d134:	f9b1 4000 	ldrsh.w	r4, [r1]
 800d138:	888a      	ldrh	r2, [r1, #4]
 800d13a:	f9b0 3000 	ldrsh.w	r3, [r0]
 800d13e:	4422      	add	r2, r4
 800d140:	b212      	sxth	r2, r2
 800d142:	4293      	cmp	r3, r2
 800d144:	da15      	bge.n	800d172 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 800d146:	8882      	ldrh	r2, [r0, #4]
 800d148:	4413      	add	r3, r2
 800d14a:	b21b      	sxth	r3, r3
 800d14c:	429c      	cmp	r4, r3
 800d14e:	da10      	bge.n	800d172 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 800d150:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 800d154:	88c9      	ldrh	r1, [r1, #6]
 800d156:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 800d15a:	4419      	add	r1, r3
 800d15c:	b209      	sxth	r1, r1
 800d15e:	428a      	cmp	r2, r1
 800d160:	da07      	bge.n	800d172 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 800d162:	88c0      	ldrh	r0, [r0, #6]
 800d164:	4410      	add	r0, r2
 800d166:	b200      	sxth	r0, r0
 800d168:	4283      	cmp	r3, r0
 800d16a:	bfac      	ite	ge
 800d16c:	2000      	movge	r0, #0
 800d16e:	2001      	movlt	r0, #1
 800d170:	bd10      	pop	{r4, pc}
 800d172:	2000      	movs	r0, #0
 800d174:	e7fc      	b.n	800d170 <_ZNK8touchgfx4Rect9intersectERKS0_+0x3e>

0800d176 <_ZN8touchgfx4Rect10restrictToEss>:
 800d176:	f9b0 3000 	ldrsh.w	r3, [r0]
 800d17a:	b510      	push	{r4, lr}
 800d17c:	2b00      	cmp	r3, #0
 800d17e:	da04      	bge.n	800d18a <_ZN8touchgfx4Rect10restrictToEss+0x14>
 800d180:	8884      	ldrh	r4, [r0, #4]
 800d182:	4423      	add	r3, r4
 800d184:	8083      	strh	r3, [r0, #4]
 800d186:	2300      	movs	r3, #0
 800d188:	8003      	strh	r3, [r0, #0]
 800d18a:	f9b0 4000 	ldrsh.w	r4, [r0]
 800d18e:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800d192:	1b09      	subs	r1, r1, r4
 800d194:	428b      	cmp	r3, r1
 800d196:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 800d19a:	bfc8      	it	gt
 800d19c:	8081      	strhgt	r1, [r0, #4]
 800d19e:	2b00      	cmp	r3, #0
 800d1a0:	da04      	bge.n	800d1ac <_ZN8touchgfx4Rect10restrictToEss+0x36>
 800d1a2:	88c1      	ldrh	r1, [r0, #6]
 800d1a4:	440b      	add	r3, r1
 800d1a6:	80c3      	strh	r3, [r0, #6]
 800d1a8:	2300      	movs	r3, #0
 800d1aa:	8043      	strh	r3, [r0, #2]
 800d1ac:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 800d1b0:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 800d1b4:	1a52      	subs	r2, r2, r1
 800d1b6:	4293      	cmp	r3, r2
 800d1b8:	bfc8      	it	gt
 800d1ba:	80c2      	strhgt	r2, [r0, #6]
 800d1bc:	bd10      	pop	{r4, pc}
	...

0800d1c0 <_ZN8touchgfx11Application4drawERNS_4RectE>:
 800d1c0:	b510      	push	{r4, lr}
 800d1c2:	460c      	mov	r4, r1
 800d1c4:	4b0f      	ldr	r3, [pc, #60]	@ (800d204 <_ZN8touchgfx11Application4drawERNS_4RectE+0x44>)
 800d1c6:	4620      	mov	r0, r4
 800d1c8:	f9b3 2000 	ldrsh.w	r2, [r3]
 800d1cc:	4b0e      	ldr	r3, [pc, #56]	@ (800d208 <_ZN8touchgfx11Application4drawERNS_4RectE+0x48>)
 800d1ce:	f9b3 1000 	ldrsh.w	r1, [r3]
 800d1d2:	f7ff ffd0 	bl	800d176 <_ZN8touchgfx4Rect10restrictToEss>
 800d1d6:	4b0d      	ldr	r3, [pc, #52]	@ (800d20c <_ZN8touchgfx11Application4drawERNS_4RectE+0x4c>)
 800d1d8:	6818      	ldr	r0, [r3, #0]
 800d1da:	b190      	cbz	r0, 800d202 <_ZN8touchgfx11Application4drawERNS_4RectE+0x42>
 800d1dc:	6803      	ldr	r3, [r0, #0]
 800d1de:	4621      	mov	r1, r4
 800d1e0:	689b      	ldr	r3, [r3, #8]
 800d1e2:	4798      	blx	r3
 800d1e4:	4b0a      	ldr	r3, [pc, #40]	@ (800d210 <_ZN8touchgfx11Application4drawERNS_4RectE+0x50>)
 800d1e6:	6818      	ldr	r0, [r3, #0]
 800d1e8:	b118      	cbz	r0, 800d1f2 <_ZN8touchgfx11Application4drawERNS_4RectE+0x32>
 800d1ea:	6803      	ldr	r3, [r0, #0]
 800d1ec:	4621      	mov	r1, r4
 800d1ee:	689b      	ldr	r3, [r3, #8]
 800d1f0:	4798      	blx	r3
 800d1f2:	4b08      	ldr	r3, [pc, #32]	@ (800d214 <_ZN8touchgfx11Application4drawERNS_4RectE+0x54>)
 800d1f4:	4621      	mov	r1, r4
 800d1f6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800d1fa:	6818      	ldr	r0, [r3, #0]
 800d1fc:	6803      	ldr	r3, [r0, #0]
 800d1fe:	69db      	ldr	r3, [r3, #28]
 800d200:	4718      	bx	r3
 800d202:	bd10      	pop	{r4, pc}
 800d204:	2008309a 	.word	0x2008309a
 800d208:	20083098 	.word	0x20083098
 800d20c:	200830e0 	.word	0x200830e0
 800d210:	200830dc 	.word	0x200830dc
 800d214:	200830a4 	.word	0x200830a4

0800d218 <_ZNK8touchgfx4Rect8includesERKS0_>:
 800d218:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800d21a:	4606      	mov	r6, r0
 800d21c:	4608      	mov	r0, r1
 800d21e:	460f      	mov	r7, r1
 800d220:	f7fd fea9 	bl	800af76 <_ZNK8touchgfx4Rect7isEmptyEv>
 800d224:	b9e8      	cbnz	r0, 800d262 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 800d226:	f9b7 5000 	ldrsh.w	r5, [r7]
 800d22a:	f9b6 4000 	ldrsh.w	r4, [r6]
 800d22e:	42a5      	cmp	r5, r4
 800d230:	db17      	blt.n	800d262 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 800d232:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 800d236:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
 800d23a:	429a      	cmp	r2, r3
 800d23c:	db11      	blt.n	800d262 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 800d23e:	88b9      	ldrh	r1, [r7, #4]
 800d240:	440d      	add	r5, r1
 800d242:	88b1      	ldrh	r1, [r6, #4]
 800d244:	b22d      	sxth	r5, r5
 800d246:	440c      	add	r4, r1
 800d248:	b224      	sxth	r4, r4
 800d24a:	42a5      	cmp	r5, r4
 800d24c:	dc09      	bgt.n	800d262 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 800d24e:	88f8      	ldrh	r0, [r7, #6]
 800d250:	4410      	add	r0, r2
 800d252:	88f2      	ldrh	r2, [r6, #6]
 800d254:	b200      	sxth	r0, r0
 800d256:	4413      	add	r3, r2
 800d258:	b21b      	sxth	r3, r3
 800d25a:	4298      	cmp	r0, r3
 800d25c:	bfcc      	ite	gt
 800d25e:	2000      	movgt	r0, #0
 800d260:	2001      	movle	r0, #1
 800d262:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800d264 <_ZN8touchgfx4Rect11expandToFitERKS0_>:
 800d264:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800d266:	4604      	mov	r4, r0
 800d268:	4608      	mov	r0, r1
 800d26a:	460d      	mov	r5, r1
 800d26c:	f7fd fe83 	bl	800af76 <_ZNK8touchgfx4Rect7isEmptyEv>
 800d270:	b978      	cbnz	r0, 800d292 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
 800d272:	4620      	mov	r0, r4
 800d274:	f7fd fe7f 	bl	800af76 <_ZNK8touchgfx4Rect7isEmptyEv>
 800d278:	f9b5 6000 	ldrsh.w	r6, [r5]
 800d27c:	b150      	cbz	r0, 800d294 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x30>
 800d27e:	8026      	strh	r6, [r4, #0]
 800d280:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 800d284:	8063      	strh	r3, [r4, #2]
 800d286:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
 800d28a:	80a3      	strh	r3, [r4, #4]
 800d28c:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 800d290:	80e3      	strh	r3, [r4, #6]
 800d292:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800d294:	f9b4 1000 	ldrsh.w	r1, [r4]
 800d298:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 800d29c:	f9b4 3002 	ldrsh.w	r3, [r4, #2]
 800d2a0:	42b1      	cmp	r1, r6
 800d2a2:	460f      	mov	r7, r1
 800d2a4:	bfa8      	it	ge
 800d2a6:	4637      	movge	r7, r6
 800d2a8:	4293      	cmp	r3, r2
 800d2aa:	4618      	mov	r0, r3
 800d2ac:	bfa8      	it	ge
 800d2ae:	4610      	movge	r0, r2
 800d2b0:	f8b5 c004 	ldrh.w	ip, [r5, #4]
 800d2b4:	88ed      	ldrh	r5, [r5, #6]
 800d2b6:	4466      	add	r6, ip
 800d2b8:	442a      	add	r2, r5
 800d2ba:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 800d2be:	88e5      	ldrh	r5, [r4, #6]
 800d2c0:	4461      	add	r1, ip
 800d2c2:	442b      	add	r3, r5
 800d2c4:	b236      	sxth	r6, r6
 800d2c6:	b209      	sxth	r1, r1
 800d2c8:	b212      	sxth	r2, r2
 800d2ca:	b21b      	sxth	r3, r3
 800d2cc:	428e      	cmp	r6, r1
 800d2ce:	bfac      	ite	ge
 800d2d0:	ebc7 0106 	rsbge	r1, r7, r6
 800d2d4:	ebc7 0101 	rsblt	r1, r7, r1
 800d2d8:	429a      	cmp	r2, r3
 800d2da:	bfac      	ite	ge
 800d2dc:	ebc0 0202 	rsbge	r2, r0, r2
 800d2e0:	ebc0 0203 	rsblt	r2, r0, r3
 800d2e4:	8027      	strh	r7, [r4, #0]
 800d2e6:	8060      	strh	r0, [r4, #2]
 800d2e8:	80a1      	strh	r1, [r4, #4]
 800d2ea:	80e2      	strh	r2, [r4, #6]
 800d2ec:	e7d1      	b.n	800d292 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
	...

0800d2f0 <_ZN8touchgfx11Application11getInstanceEv>:
 800d2f0:	4b01      	ldr	r3, [pc, #4]	@ (800d2f8 <_ZN8touchgfx11Application11getInstanceEv+0x8>)
 800d2f2:	6818      	ldr	r0, [r3, #0]
 800d2f4:	4770      	bx	lr
 800d2f6:	bf00      	nop
 800d2f8:	200830f0 	.word	0x200830f0

0800d2fc <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>:
 800d2fc:	2300      	movs	r3, #0
 800d2fe:	b510      	push	{r4, lr}
 800d300:	4604      	mov	r4, r0
 800d302:	f8a0 30a4 	strh.w	r3, [r0, #164]	@ 0xa4
 800d306:	f8b0 3080 	ldrh.w	r3, [r0, #128]	@ 0x80
 800d30a:	f8a0 30a6 	strh.w	r3, [r0, #166]	@ 0xa6
 800d30e:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	@ 0xa4
 800d312:	f8b4 20a6 	ldrh.w	r2, [r4, #166]	@ 0xa6
 800d316:	429a      	cmp	r2, r3
 800d318:	d90e      	bls.n	800d338 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x3c>
 800d31a:	18e2      	adds	r2, r4, r3
 800d31c:	f892 2084 	ldrb.w	r2, [r2, #132]	@ 0x84
 800d320:	b122      	cbz	r2, 800d32c <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x30>
 800d322:	f854 0023 	ldr.w	r0, [r4, r3, lsl #2]
 800d326:	6803      	ldr	r3, [r0, #0]
 800d328:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800d32a:	4798      	blx	r3
 800d32c:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	@ 0xa4
 800d330:	3301      	adds	r3, #1
 800d332:	f8a4 30a4 	strh.w	r3, [r4, #164]	@ 0xa4
 800d336:	e7ea      	b.n	800d30e <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x12>
 800d338:	bd10      	pop	{r4, pc}

0800d33a <_ZN8touchgfx11Application12TimerWidgets5clearEv>:
 800d33a:	2300      	movs	r3, #0
 800d33c:	f100 0284 	add.w	r2, r0, #132	@ 0x84
 800d340:	f8a0 3080 	strh.w	r3, [r0, #128]	@ 0x80
 800d344:	30a4      	adds	r0, #164	@ 0xa4
 800d346:	f802 3b01 	strb.w	r3, [r2], #1
 800d34a:	4282      	cmp	r2, r0
 800d34c:	d1fb      	bne.n	800d346 <_ZN8touchgfx11Application12TimerWidgets5clearEv+0xc>
 800d34e:	4770      	bx	lr

0800d350 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE>:
 800d350:	b570      	push	{r4, r5, r6, lr}
 800d352:	4c0b      	ldr	r4, [pc, #44]	@ (800d380 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x30>)
 800d354:	4605      	mov	r5, r0
 800d356:	6820      	ldr	r0, [r4, #0]
 800d358:	460e      	mov	r6, r1
 800d35a:	b110      	cbz	r0, 800d362 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x12>
 800d35c:	6803      	ldr	r3, [r0, #0]
 800d35e:	695b      	ldr	r3, [r3, #20]
 800d360:	4798      	blx	r3
 800d362:	1d28      	adds	r0, r5, #4
 800d364:	f7ff ffe9 	bl	800d33a <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 800d368:	6026      	str	r6, [r4, #0]
 800d36a:	6833      	ldr	r3, [r6, #0]
 800d36c:	4630      	mov	r0, r6
 800d36e:	68db      	ldr	r3, [r3, #12]
 800d370:	4798      	blx	r3
 800d372:	682b      	ldr	r3, [r5, #0]
 800d374:	4628      	mov	r0, r5
 800d376:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800d37a:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800d37c:	4718      	bx	r3
 800d37e:	bf00      	nop
 800d380:	200830e0 	.word	0x200830e0

0800d384 <_ZN8touchgfx11Application12TimerWidgets7compactEv>:
 800d384:	2300      	movs	r3, #0
 800d386:	b5f0      	push	{r4, r5, r6, r7, lr}
 800d388:	461a      	mov	r2, r3
 800d38a:	461c      	mov	r4, r3
 800d38c:	461d      	mov	r5, r3
 800d38e:	f8b0 c080 	ldrh.w	ip, [r0, #128]	@ 0x80
 800d392:	f8b0 10a4 	ldrh.w	r1, [r0, #164]	@ 0xa4
 800d396:	459c      	cmp	ip, r3
 800d398:	dd1a      	ble.n	800d3d0 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x4c>
 800d39a:	18c6      	adds	r6, r0, r3
 800d39c:	f896 6084 	ldrb.w	r6, [r6, #132]	@ 0x84
 800d3a0:	b16e      	cbz	r6, 800d3be <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x3a>
 800d3a2:	429a      	cmp	r2, r3
 800d3a4:	d008      	beq.n	800d3b8 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x34>
 800d3a6:	f850 7023 	ldr.w	r7, [r0, r3, lsl #2]
 800d3aa:	fa1f fe82 	uxth.w	lr, r2
 800d3ae:	f840 702e 	str.w	r7, [r0, lr, lsl #2]
 800d3b2:	1887      	adds	r7, r0, r2
 800d3b4:	f887 6084 	strb.w	r6, [r7, #132]	@ 0x84
 800d3b8:	3201      	adds	r2, #1
 800d3ba:	3301      	adds	r3, #1
 800d3bc:	e7eb      	b.n	800d396 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x12>
 800d3be:	f8b0 60a6 	ldrh.w	r6, [r0, #166]	@ 0xa6
 800d3c2:	4299      	cmp	r1, r3
 800d3c4:	bfa8      	it	ge
 800d3c6:	3501      	addge	r5, #1
 800d3c8:	429e      	cmp	r6, r3
 800d3ca:	bfc8      	it	gt
 800d3cc:	3401      	addgt	r4, #1
 800d3ce:	e7f4      	b.n	800d3ba <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x36>
 800d3d0:	f8b0 30a6 	ldrh.w	r3, [r0, #166]	@ 0xa6
 800d3d4:	1b49      	subs	r1, r1, r5
 800d3d6:	1b1b      	subs	r3, r3, r4
 800d3d8:	f8a0 10a4 	strh.w	r1, [r0, #164]	@ 0xa4
 800d3dc:	f8a0 30a6 	strh.w	r3, [r0, #166]	@ 0xa6
 800d3e0:	f8b0 3080 	ldrh.w	r3, [r0, #128]	@ 0x80
 800d3e4:	4293      	cmp	r3, r2
 800d3e6:	dd03      	ble.n	800d3f0 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x6c>
 800d3e8:	3b01      	subs	r3, #1
 800d3ea:	f8a0 3080 	strh.w	r3, [r0, #128]	@ 0x80
 800d3ee:	e7f7      	b.n	800d3e0 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x5c>
 800d3f0:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

0800d3f4 <_ZN8touchgfx11Application15handleTickEventEv>:
 800d3f4:	b570      	push	{r4, r5, r6, lr}
 800d3f6:	4d16      	ldr	r5, [pc, #88]	@ (800d450 <_ZN8touchgfx11Application15handleTickEventEv+0x5c>)
 800d3f8:	4604      	mov	r4, r0
 800d3fa:	6828      	ldr	r0, [r5, #0]
 800d3fc:	b140      	cbz	r0, 800d410 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 800d3fe:	7a03      	ldrb	r3, [r0, #8]
 800d400:	b933      	cbnz	r3, 800d410 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 800d402:	f884 3138 	strb.w	r3, [r4, #312]	@ 0x138
 800d406:	6803      	ldr	r3, [r0, #0]
 800d408:	689b      	ldr	r3, [r3, #8]
 800d40a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800d40e:	4718      	bx	r3
 800d410:	f894 3138 	ldrb.w	r3, [r4, #312]	@ 0x138
 800d414:	4e0f      	ldr	r6, [pc, #60]	@ (800d454 <_ZN8touchgfx11Application15handleTickEventEv+0x60>)
 800d416:	b973      	cbnz	r3, 800d436 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 800d418:	b168      	cbz	r0, 800d436 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 800d41a:	7a03      	ldrb	r3, [r0, #8]
 800d41c:	b15b      	cbz	r3, 800d436 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 800d41e:	6830      	ldr	r0, [r6, #0]
 800d420:	b110      	cbz	r0, 800d428 <_ZN8touchgfx11Application15handleTickEventEv+0x34>
 800d422:	6803      	ldr	r3, [r0, #0]
 800d424:	691b      	ldr	r3, [r3, #16]
 800d426:	4798      	blx	r3
 800d428:	6828      	ldr	r0, [r5, #0]
 800d42a:	6803      	ldr	r3, [r0, #0]
 800d42c:	68db      	ldr	r3, [r3, #12]
 800d42e:	4798      	blx	r3
 800d430:	2301      	movs	r3, #1
 800d432:	f884 3138 	strb.w	r3, [r4, #312]	@ 0x138
 800d436:	3404      	adds	r4, #4
 800d438:	4620      	mov	r0, r4
 800d43a:	f7ff ff5f 	bl	800d2fc <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>
 800d43e:	4620      	mov	r0, r4
 800d440:	f7ff ffa0 	bl	800d384 <_ZN8touchgfx11Application12TimerWidgets7compactEv>
 800d444:	6830      	ldr	r0, [r6, #0]
 800d446:	b110      	cbz	r0, 800d44e <_ZN8touchgfx11Application15handleTickEventEv+0x5a>
 800d448:	6803      	ldr	r3, [r0, #0]
 800d44a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800d44c:	e7dd      	b.n	800d40a <_ZN8touchgfx11Application15handleTickEventEv+0x16>
 800d44e:	bd70      	pop	{r4, r5, r6, pc}
 800d450:	200830e4 	.word	0x200830e4
 800d454:	200830e0 	.word	0x200830e0

0800d458 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>:
 800d458:	4603      	mov	r3, r0
 800d45a:	2200      	movs	r2, #0
 800d45c:	f100 0140 	add.w	r1, r0, #64	@ 0x40
 800d460:	801a      	strh	r2, [r3, #0]
 800d462:	805a      	strh	r2, [r3, #2]
 800d464:	809a      	strh	r2, [r3, #4]
 800d466:	80da      	strh	r2, [r3, #6]
 800d468:	3308      	adds	r3, #8
 800d46a:	428b      	cmp	r3, r1
 800d46c:	d1f8      	bne.n	800d460 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev+0x8>
 800d46e:	f8a0 2040 	strh.w	r2, [r0, #64]	@ 0x40
 800d472:	4770      	bx	lr

0800d474 <_ZN8touchgfx11ApplicationC1Ev>:
 800d474:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800d476:	4606      	mov	r6, r0
 800d478:	4604      	mov	r4, r0
 800d47a:	2500      	movs	r5, #0
 800d47c:	4b1b      	ldr	r3, [pc, #108]	@ (800d4ec <_ZN8touchgfx11ApplicationC1Ev+0x78>)
 800d47e:	22a8      	movs	r2, #168	@ 0xa8
 800d480:	f846 3b04 	str.w	r3, [r6], #4
 800d484:	2100      	movs	r1, #0
 800d486:	4630      	mov	r0, r6
 800d488:	f025 fb7d 	bl	8032b86 <memset>
 800d48c:	f8a4 5084 	strh.w	r5, [r4, #132]	@ 0x84
 800d490:	f104 00ac 	add.w	r0, r4, #172	@ 0xac
 800d494:	f7ff ffe0 	bl	800d458 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 800d498:	f104 00ee 	add.w	r0, r4, #238	@ 0xee
 800d49c:	f7ff ffdc 	bl	800d458 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 800d4a0:	f8a4 5130 	strh.w	r5, [r4, #304]	@ 0x130
 800d4a4:	f8a4 5132 	strh.w	r5, [r4, #306]	@ 0x132
 800d4a8:	f8a4 5134 	strh.w	r5, [r4, #308]	@ 0x134
 800d4ac:	f8a4 5136 	strh.w	r5, [r4, #310]	@ 0x136
 800d4b0:	f884 5138 	strb.w	r5, [r4, #312]	@ 0x138
 800d4b4:	490e      	ldr	r1, [pc, #56]	@ (800d4f0 <_ZN8touchgfx11ApplicationC1Ev+0x7c>)
 800d4b6:	480f      	ldr	r0, [pc, #60]	@ (800d4f4 <_ZN8touchgfx11ApplicationC1Ev+0x80>)
 800d4b8:	f003 f832 	bl	8010520 <CRC_Lock>
 800d4bc:	4f0e      	ldr	r7, [pc, #56]	@ (800d4f8 <_ZN8touchgfx11ApplicationC1Ev+0x84>)
 800d4be:	4b0f      	ldr	r3, [pc, #60]	@ (800d4fc <_ZN8touchgfx11ApplicationC1Ev+0x88>)
 800d4c0:	b158      	cbz	r0, 800d4da <_ZN8touchgfx11ApplicationC1Ev+0x66>
 800d4c2:	801d      	strh	r5, [r3, #0]
 800d4c4:	2300      	movs	r3, #0
 800d4c6:	4a0e      	ldr	r2, [pc, #56]	@ (800d500 <_ZN8touchgfx11ApplicationC1Ev+0x8c>)
 800d4c8:	4630      	mov	r0, r6
 800d4ca:	6013      	str	r3, [r2, #0]
 800d4cc:	4a0d      	ldr	r2, [pc, #52]	@ (800d504 <_ZN8touchgfx11ApplicationC1Ev+0x90>)
 800d4ce:	603b      	str	r3, [r7, #0]
 800d4d0:	6013      	str	r3, [r2, #0]
 800d4d2:	f7ff ff32 	bl	800d33a <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 800d4d6:	4620      	mov	r0, r4
 800d4d8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800d4da:	f44f 6280 	mov.w	r2, #1024	@ 0x400
 800d4de:	2002      	movs	r0, #2
 800d4e0:	801a      	strh	r2, [r3, #0]
 800d4e2:	6038      	str	r0, [r7, #0]
 800d4e4:	f001 fd82 	bl	800efec <_ZN8touchgfx6Screen4drawEv>
 800d4e8:	e7ec      	b.n	800d4c4 <_ZN8touchgfx11ApplicationC1Ev+0x50>
 800d4ea:	bf00      	nop
 800d4ec:	08035dec 	.word	0x08035dec
 800d4f0:	b5e8b5cd 	.word	0xb5e8b5cd
 800d4f4:	f407a5c2 	.word	0xf407a5c2
 800d4f8:	200830e0 	.word	0x200830e0
 800d4fc:	20000060 	.word	0x20000060
 800d500:	200830f0 	.word	0x200830f0
 800d504:	200830e4 	.word	0x200830e4

0800d508 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>:
 800d508:	f8b0 3040 	ldrh.w	r3, [r0, #64]	@ 0x40
 800d50c:	b510      	push	{r4, lr}
 800d50e:	3b01      	subs	r3, #1
 800d510:	b29b      	uxth	r3, r3
 800d512:	428b      	cmp	r3, r1
 800d514:	f8a0 3040 	strh.w	r3, [r0, #64]	@ 0x40
 800d518:	d908      	bls.n	800d52c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x24>
 800d51a:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 800d51e:	681a      	ldr	r2, [r3, #0]
 800d520:	eb00 04c1 	add.w	r4, r0, r1, lsl #3
 800d524:	f840 2031 	str.w	r2, [r0, r1, lsl #3]
 800d528:	685a      	ldr	r2, [r3, #4]
 800d52a:	6062      	str	r2, [r4, #4]
 800d52c:	bd10      	pop	{r4, pc}
	...

0800d530 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>:
 800d530:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d534:	4b8f      	ldr	r3, [pc, #572]	@ (800d774 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x244>)
 800d536:	b08f      	sub	sp, #60	@ 0x3c
 800d538:	ac0a      	add	r4, sp, #40	@ 0x28
 800d53a:	e884 0006 	stmia.w	r4, {r1, r2}
 800d53e:	f9b3 2000 	ldrsh.w	r2, [r3]
 800d542:	4b8d      	ldr	r3, [pc, #564]	@ (800d778 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x248>)
 800d544:	4683      	mov	fp, r0
 800d546:	f9b3 1000 	ldrsh.w	r1, [r3]
 800d54a:	4620      	mov	r0, r4
 800d54c:	f7ff fe13 	bl	800d176 <_ZN8touchgfx4Rect10restrictToEss>
 800d550:	4620      	mov	r0, r4
 800d552:	f7fd fd10 	bl	800af76 <_ZNK8touchgfx4Rect7isEmptyEv>
 800d556:	2800      	cmp	r0, #0
 800d558:	d16a      	bne.n	800d630 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 800d55a:	9403      	str	r4, [sp, #12]
 800d55c:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	@ 0xec
 800d560:	f10b 03ac 	add.w	r3, fp, #172	@ 0xac
 800d564:	eb0b 05c4 	add.w	r5, fp, r4, lsl #3
 800d568:	35a4      	adds	r5, #164	@ 0xa4
 800d56a:	9301      	str	r3, [sp, #4]
 800d56c:	b15c      	cbz	r4, 800d586 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x56>
 800d56e:	4629      	mov	r1, r5
 800d570:	9803      	ldr	r0, [sp, #12]
 800d572:	f7ff fe51 	bl	800d218 <_ZNK8touchgfx4Rect8includesERKS0_>
 800d576:	3c01      	subs	r4, #1
 800d578:	b118      	cbz	r0, 800d582 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52>
 800d57a:	b2a1      	uxth	r1, r4
 800d57c:	9801      	ldr	r0, [sp, #4]
 800d57e:	f7ff ffc3 	bl	800d508 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800d582:	3d08      	subs	r5, #8
 800d584:	e7f2      	b.n	800d56c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c>
 800d586:	f8bb a0ec 	ldrh.w	sl, [fp, #236]	@ 0xec
 800d58a:	f10a 33ff 	add.w	r3, sl, #4294967295
 800d58e:	9302      	str	r3, [sp, #8]
 800d590:	ea4f 03ca 	mov.w	r3, sl, lsl #3
 800d594:	f103 04a4 	add.w	r4, r3, #164	@ 0xa4
 800d598:	f8cd a010 	str.w	sl, [sp, #16]
 800d59c:	9306      	str	r3, [sp, #24]
 800d59e:	445c      	add	r4, fp
 800d5a0:	2500      	movs	r5, #0
 800d5a2:	4626      	mov	r6, r4
 800d5a4:	462f      	mov	r7, r5
 800d5a6:	f8cd a014 	str.w	sl, [sp, #20]
 800d5aa:	9b05      	ldr	r3, [sp, #20]
 800d5ac:	2b00      	cmp	r3, #0
 800d5ae:	d073      	beq.n	800d698 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
 800d5b0:	9903      	ldr	r1, [sp, #12]
 800d5b2:	4630      	mov	r0, r6
 800d5b4:	f7ff fdbd 	bl	800d132 <_ZNK8touchgfx4Rect9intersectERKS0_>
 800d5b8:	b350      	cbz	r0, 800d610 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 800d5ba:	f9bd e028 	ldrsh.w	lr, [sp, #40]	@ 0x28
 800d5be:	f9b6 c000 	ldrsh.w	ip, [r6]
 800d5c2:	f9bd 802a 	ldrsh.w	r8, [sp, #42]	@ 0x2a
 800d5c6:	45e6      	cmp	lr, ip
 800d5c8:	f9b6 9002 	ldrsh.w	r9, [r6, #2]
 800d5cc:	db33      	blt.n	800d636 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 800d5ce:	f8bd 202c 	ldrh.w	r2, [sp, #44]	@ 0x2c
 800d5d2:	88b3      	ldrh	r3, [r6, #4]
 800d5d4:	4472      	add	r2, lr
 800d5d6:	4463      	add	r3, ip
 800d5d8:	b212      	sxth	r2, r2
 800d5da:	b21b      	sxth	r3, r3
 800d5dc:	429a      	cmp	r2, r3
 800d5de:	dc2a      	bgt.n	800d636 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 800d5e0:	88f3      	ldrh	r3, [r6, #6]
 800d5e2:	fa1f f289 	uxth.w	r2, r9
 800d5e6:	4413      	add	r3, r2
 800d5e8:	b29b      	uxth	r3, r3
 800d5ea:	45c8      	cmp	r8, r9
 800d5ec:	f8bd 102e 	ldrh.w	r1, [sp, #46]	@ 0x2e
 800d5f0:	fa1f fc88 	uxth.w	ip, r8
 800d5f4:	fa0f fe83 	sxth.w	lr, r3
 800d5f8:	db0f      	blt.n	800d61a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xea>
 800d5fa:	eba3 030c 	sub.w	r3, r3, ip
 800d5fe:	1ac9      	subs	r1, r1, r3
 800d600:	b209      	sxth	r1, r1
 800d602:	2900      	cmp	r1, #0
 800d604:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
 800d608:	dd12      	ble.n	800d630 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 800d60a:	f8ad e02a 	strh.w	lr, [sp, #42]	@ 0x2a
 800d60e:	4605      	mov	r5, r0
 800d610:	9b05      	ldr	r3, [sp, #20]
 800d612:	3e08      	subs	r6, #8
 800d614:	3b01      	subs	r3, #1
 800d616:	9305      	str	r3, [sp, #20]
 800d618:	e7c7      	b.n	800d5aa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x7a>
 800d61a:	4461      	add	r1, ip
 800d61c:	b209      	sxth	r1, r1
 800d61e:	4571      	cmp	r1, lr
 800d620:	dc38      	bgt.n	800d694 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 800d622:	eba2 020c 	sub.w	r2, r2, ip
 800d626:	b212      	sxth	r2, r2
 800d628:	f8ad 202e 	strh.w	r2, [sp, #46]	@ 0x2e
 800d62c:	2a00      	cmp	r2, #0
 800d62e:	dcee      	bgt.n	800d60e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 800d630:	b00f      	add	sp, #60	@ 0x3c
 800d632:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d636:	45c8      	cmp	r8, r9
 800d638:	db2c      	blt.n	800d694 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 800d63a:	88f3      	ldrh	r3, [r6, #6]
 800d63c:	4499      	add	r9, r3
 800d63e:	f8bd 302e 	ldrh.w	r3, [sp, #46]	@ 0x2e
 800d642:	fa0f f989 	sxth.w	r9, r9
 800d646:	4498      	add	r8, r3
 800d648:	fa0f f888 	sxth.w	r8, r8
 800d64c:	45c1      	cmp	r9, r8
 800d64e:	db21      	blt.n	800d694 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 800d650:	88b3      	ldrh	r3, [r6, #4]
 800d652:	fa1f f28c 	uxth.w	r2, ip
 800d656:	4413      	add	r3, r2
 800d658:	b29b      	uxth	r3, r3
 800d65a:	45e6      	cmp	lr, ip
 800d65c:	f8bd 102c 	ldrh.w	r1, [sp, #44]	@ 0x2c
 800d660:	fa1f f88e 	uxth.w	r8, lr
 800d664:	fa0f f983 	sxth.w	r9, r3
 800d668:	db0a      	blt.n	800d680 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x150>
 800d66a:	eba3 0308 	sub.w	r3, r3, r8
 800d66e:	1ac9      	subs	r1, r1, r3
 800d670:	b209      	sxth	r1, r1
 800d672:	2900      	cmp	r1, #0
 800d674:	f8ad 102c 	strh.w	r1, [sp, #44]	@ 0x2c
 800d678:	ddda      	ble.n	800d630 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 800d67a:	f8ad 9028 	strh.w	r9, [sp, #40]	@ 0x28
 800d67e:	e7c6      	b.n	800d60e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 800d680:	4441      	add	r1, r8
 800d682:	b209      	sxth	r1, r1
 800d684:	4549      	cmp	r1, r9
 800d686:	dc05      	bgt.n	800d694 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 800d688:	eba2 0208 	sub.w	r2, r2, r8
 800d68c:	b212      	sxth	r2, r2
 800d68e:	f8ad 202c 	strh.w	r2, [sp, #44]	@ 0x2c
 800d692:	e7cb      	b.n	800d62c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xfc>
 800d694:	4607      	mov	r7, r0
 800d696:	e7bb      	b.n	800d610 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 800d698:	2d00      	cmp	r5, #0
 800d69a:	d181      	bne.n	800d5a0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x70>
 800d69c:	2f00      	cmp	r7, #0
 800d69e:	f000 81de 	beq.w	800da5e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52e>
 800d6a2:	f9bd 6028 	ldrsh.w	r6, [sp, #40]	@ 0x28
 800d6a6:	f9bd 702a 	ldrsh.w	r7, [sp, #42]	@ 0x2a
 800d6aa:	b2b3      	uxth	r3, r6
 800d6ac:	9305      	str	r3, [sp, #20]
 800d6ae:	9a05      	ldr	r2, [sp, #20]
 800d6b0:	f8bd 302c 	ldrh.w	r3, [sp, #44]	@ 0x2c
 800d6b4:	f8bd a02e 	ldrh.w	sl, [sp, #46]	@ 0x2e
 800d6b8:	4413      	add	r3, r2
 800d6ba:	b2ba      	uxth	r2, r7
 800d6bc:	4492      	add	sl, r2
 800d6be:	b29b      	uxth	r3, r3
 800d6c0:	fa1f fa8a 	uxth.w	sl, sl
 800d6c4:	fa0f f883 	sxth.w	r8, r3
 800d6c8:	fa0f f98a 	sxth.w	r9, sl
 800d6cc:	e9cd 2307 	strd	r2, r3, [sp, #28]
 800d6d0:	9b04      	ldr	r3, [sp, #16]
 800d6d2:	2b00      	cmp	r3, #0
 800d6d4:	d052      	beq.n	800d77c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x24c>
 800d6d6:	9903      	ldr	r1, [sp, #12]
 800d6d8:	4620      	mov	r0, r4
 800d6da:	f7ff fd2a 	bl	800d132 <_ZNK8touchgfx4Rect9intersectERKS0_>
 800d6de:	e9dd 2307 	ldrd	r2, r3, [sp, #28]
 800d6e2:	b1c0      	cbz	r0, 800d716 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 800d6e4:	f9b4 e000 	ldrsh.w	lr, [r4]
 800d6e8:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 800d6ec:	4576      	cmp	r6, lr
 800d6ee:	dc22      	bgt.n	800d736 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 800d6f0:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 800d6f4:	44f4      	add	ip, lr
 800d6f6:	fa0f fc8c 	sxth.w	ip, ip
 800d6fa:	45e0      	cmp	r8, ip
 800d6fc:	db1b      	blt.n	800d736 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 800d6fe:	428f      	cmp	r7, r1
 800d700:	fa1f fc81 	uxth.w	ip, r1
 800d704:	88e1      	ldrh	r1, [r4, #6]
 800d706:	dc0d      	bgt.n	800d724 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f4>
 800d708:	ebaa 0c0c 	sub.w	ip, sl, ip
 800d70c:	eba1 010c 	sub.w	r1, r1, ip
 800d710:	f8a4 9002 	strh.w	r9, [r4, #2]
 800d714:	80e1      	strh	r1, [r4, #6]
 800d716:	4628      	mov	r0, r5
 800d718:	9904      	ldr	r1, [sp, #16]
 800d71a:	3c08      	subs	r4, #8
 800d71c:	3901      	subs	r1, #1
 800d71e:	9104      	str	r1, [sp, #16]
 800d720:	4605      	mov	r5, r0
 800d722:	e7d3      	b.n	800d6cc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x19c>
 800d724:	4461      	add	r1, ip
 800d726:	b209      	sxth	r1, r1
 800d728:	4549      	cmp	r1, r9
 800d72a:	dcf5      	bgt.n	800d718 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 800d72c:	eba2 0c0c 	sub.w	ip, r2, ip
 800d730:	f8a4 c006 	strh.w	ip, [r4, #6]
 800d734:	e7ef      	b.n	800d716 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 800d736:	428f      	cmp	r7, r1
 800d738:	dcee      	bgt.n	800d718 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 800d73a:	f8b4 c006 	ldrh.w	ip, [r4, #6]
 800d73e:	4461      	add	r1, ip
 800d740:	b209      	sxth	r1, r1
 800d742:	4589      	cmp	r9, r1
 800d744:	dbe8      	blt.n	800d718 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 800d746:	4576      	cmp	r6, lr
 800d748:	fa1f fc8e 	uxth.w	ip, lr
 800d74c:	88a1      	ldrh	r1, [r4, #4]
 800d74e:	dc07      	bgt.n	800d760 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x230>
 800d750:	eba3 0c0c 	sub.w	ip, r3, ip
 800d754:	eba1 010c 	sub.w	r1, r1, ip
 800d758:	f8a4 8000 	strh.w	r8, [r4]
 800d75c:	80a1      	strh	r1, [r4, #4]
 800d75e:	e7da      	b.n	800d716 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 800d760:	4461      	add	r1, ip
 800d762:	b209      	sxth	r1, r1
 800d764:	4588      	cmp	r8, r1
 800d766:	dbd7      	blt.n	800d718 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 800d768:	9905      	ldr	r1, [sp, #20]
 800d76a:	eba1 0c0c 	sub.w	ip, r1, ip
 800d76e:	f8a4 c004 	strh.w	ip, [r4, #4]
 800d772:	e7d0      	b.n	800d716 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 800d774:	2008309a 	.word	0x2008309a
 800d778:	20083098 	.word	0x20083098
 800d77c:	2d00      	cmp	r5, #0
 800d77e:	f000 816e 	beq.w	800da5e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52e>
 800d782:	9b06      	ldr	r3, [sp, #24]
 800d784:	445b      	add	r3, fp
 800d786:	461c      	mov	r4, r3
 800d788:	9b02      	ldr	r3, [sp, #8]
 800d78a:	3301      	adds	r3, #1
 800d78c:	f000 8167 	beq.w	800da5e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52e>
 800d790:	f104 05a4 	add.w	r5, r4, #164	@ 0xa4
 800d794:	4629      	mov	r1, r5
 800d796:	9803      	ldr	r0, [sp, #12]
 800d798:	f7ff fd3e 	bl	800d218 <_ZNK8touchgfx4Rect8includesERKS0_>
 800d79c:	b120      	cbz	r0, 800d7a8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x278>
 800d79e:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 800d7a2:	9801      	ldr	r0, [sp, #4]
 800d7a4:	f7ff feb0 	bl	800d508 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800d7a8:	9903      	ldr	r1, [sp, #12]
 800d7aa:	4628      	mov	r0, r5
 800d7ac:	f7ff fcc1 	bl	800d132 <_ZNK8touchgfx4Rect9intersectERKS0_>
 800d7b0:	2800      	cmp	r0, #0
 800d7b2:	f000 809c 	beq.w	800d8ee <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
 800d7b6:	f9b4 90a4 	ldrsh.w	r9, [r4, #164]	@ 0xa4
 800d7ba:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	@ 0xa8
 800d7be:	fa1f f189 	uxth.w	r1, r9
 800d7c2:	eb01 0c03 	add.w	ip, r1, r3
 800d7c6:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	@ 0x28
 800d7ca:	fa1f fa8c 	uxth.w	sl, ip
 800d7ce:	f8bd c02c 	ldrh.w	ip, [sp, #44]	@ 0x2c
 800d7d2:	9309      	str	r3, [sp, #36]	@ 0x24
 800d7d4:	b283      	uxth	r3, r0
 800d7d6:	eb03 050c 	add.w	r5, r3, ip
 800d7da:	b2ad      	uxth	r5, r5
 800d7dc:	9505      	str	r5, [sp, #20]
 800d7de:	f9bd 5014 	ldrsh.w	r5, [sp, #20]
 800d7e2:	4548      	cmp	r0, r9
 800d7e4:	9504      	str	r5, [sp, #16]
 800d7e6:	f9bd e02a 	ldrsh.w	lr, [sp, #42]	@ 0x2a
 800d7ea:	f9b4 20a6 	ldrsh.w	r2, [r4, #166]	@ 0xa6
 800d7ee:	f8bb 50ec 	ldrh.w	r5, [fp, #236]	@ 0xec
 800d7f2:	f340 8099 	ble.w	800d928 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3f8>
 800d7f6:	1a5b      	subs	r3, r3, r1
 800d7f8:	b29b      	uxth	r3, r3
 800d7fa:	4596      	cmp	lr, r2
 800d7fc:	fa0f f08a 	sxth.w	r0, sl
 800d800:	b21e      	sxth	r6, r3
 800d802:	dd2e      	ble.n	800d862 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x332>
 800d804:	9f02      	ldr	r7, [sp, #8]
 800d806:	f8bd 402e 	ldrh.w	r4, [sp, #46]	@ 0x2e
 800d80a:	eb0b 08c7 	add.w	r8, fp, r7, lsl #3
 800d80e:	9f04      	ldr	r7, [sp, #16]
 800d810:	fa1f fe8e 	uxth.w	lr, lr
 800d814:	1a3f      	subs	r7, r7, r0
 800d816:	f8b8 00b2 	ldrh.w	r0, [r8, #178]	@ 0xb2
 800d81a:	b292      	uxth	r2, r2
 800d81c:	ebae 0102 	sub.w	r1, lr, r2
 800d820:	44a6      	add	lr, r4
 800d822:	4402      	add	r2, r0
 800d824:	b289      	uxth	r1, r1
 800d826:	fa0f fe8e 	sxth.w	lr, lr
 800d82a:	b212      	sxth	r2, r2
 800d82c:	b20d      	sxth	r5, r1
 800d82e:	ebae 0202 	sub.w	r2, lr, r2
 800d832:	436f      	muls	r7, r5
 800d834:	4372      	muls	r2, r6
 800d836:	4297      	cmp	r7, r2
 800d838:	db09      	blt.n	800d84e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x31e>
 800d83a:	f8b8 20ac 	ldrh.w	r2, [r8, #172]	@ 0xac
 800d83e:	f8a8 50b2 	strh.w	r5, [r8, #178]	@ 0xb2
 800d842:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
 800d846:	449c      	add	ip, r3
 800d848:	f8ad c02c 	strh.w	ip, [sp, #44]	@ 0x2c
 800d84c:	e686      	b.n	800d55c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 800d84e:	f8b8 30ae 	ldrh.w	r3, [r8, #174]	@ 0xae
 800d852:	4421      	add	r1, r4
 800d854:	f8a8 60b0 	strh.w	r6, [r8, #176]	@ 0xb0
 800d858:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
 800d85c:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
 800d860:	e67c      	b.n	800d55c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 800d862:	9f04      	ldr	r7, [sp, #16]
 800d864:	42b8      	cmp	r0, r7
 800d866:	da27      	bge.n	800d8b8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x388>
 800d868:	9902      	ldr	r1, [sp, #8]
 800d86a:	f8bd 502e 	ldrh.w	r5, [sp, #46]	@ 0x2e
 800d86e:	eb0b 04c1 	add.w	r4, fp, r1, lsl #3
 800d872:	eb05 010e 	add.w	r1, r5, lr
 800d876:	fa1f f881 	uxth.w	r8, r1
 800d87a:	f8b4 10b2 	ldrh.w	r1, [r4, #178]	@ 0xb2
 800d87e:	fa0f f988 	sxth.w	r9, r8
 800d882:	4411      	add	r1, r2
 800d884:	eba1 0108 	sub.w	r1, r1, r8
 800d888:	b289      	uxth	r1, r1
 800d88a:	fa0f f881 	sxth.w	r8, r1
 800d88e:	eba2 020e 	sub.w	r2, r2, lr
 800d892:	1a3f      	subs	r7, r7, r0
 800d894:	4372      	muls	r2, r6
 800d896:	fb08 f707 	mul.w	r7, r8, r7
 800d89a:	42ba      	cmp	r2, r7
 800d89c:	dc06      	bgt.n	800d8ac <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x37c>
 800d89e:	f8a4 90ae 	strh.w	r9, [r4, #174]	@ 0xae
 800d8a2:	f8a4 80b2 	strh.w	r8, [r4, #178]	@ 0xb2
 800d8a6:	f8b4 20ac 	ldrh.w	r2, [r4, #172]	@ 0xac
 800d8aa:	e7ca      	b.n	800d842 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x312>
 800d8ac:	f8a4 60b0 	strh.w	r6, [r4, #176]	@ 0xb0
 800d8b0:	4429      	add	r1, r5
 800d8b2:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
 800d8b6:	e651      	b.n	800d55c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 800d8b8:	9805      	ldr	r0, [sp, #20]
 800d8ba:	2d06      	cmp	r5, #6
 800d8bc:	ebaa 0000 	sub.w	r0, sl, r0
 800d8c0:	b280      	uxth	r0, r0
 800d8c2:	fa0f fe80 	sxth.w	lr, r0
 800d8c6:	d817      	bhi.n	800d8f8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c8>
 800d8c8:	9b04      	ldr	r3, [sp, #16]
 800d8ca:	f9b4 10aa 	ldrsh.w	r1, [r4, #170]	@ 0xaa
 800d8ce:	f8a4 30a4 	strh.w	r3, [r4, #164]	@ 0xa4
 800d8d2:	1c6b      	adds	r3, r5, #1
 800d8d4:	f8a4 e0a8 	strh.w	lr, [r4, #168]	@ 0xa8
 800d8d8:	f8ab 30ec 	strh.w	r3, [fp, #236]	@ 0xec
 800d8dc:	9b01      	ldr	r3, [sp, #4]
 800d8de:	9801      	ldr	r0, [sp, #4]
 800d8e0:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 800d8e4:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
 800d8e8:	805a      	strh	r2, [r3, #2]
 800d8ea:	809e      	strh	r6, [r3, #4]
 800d8ec:	80d9      	strh	r1, [r3, #6]
 800d8ee:	9b02      	ldr	r3, [sp, #8]
 800d8f0:	3c08      	subs	r4, #8
 800d8f2:	3b01      	subs	r3, #1
 800d8f4:	9302      	str	r3, [sp, #8]
 800d8f6:	e747      	b.n	800d788 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x258>
 800d8f8:	9a02      	ldr	r2, [sp, #8]
 800d8fa:	45b6      	cmp	lr, r6
 800d8fc:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 800d900:	db0d      	blt.n	800d91e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ee>
 800d902:	449c      	add	ip, r3
 800d904:	fa1f fc8c 	uxth.w	ip, ip
 800d908:	445a      	add	r2, fp
 800d90a:	f8ad c02c 	strh.w	ip, [sp, #44]	@ 0x2c
 800d90e:	448c      	add	ip, r1
 800d910:	f8ad 9028 	strh.w	r9, [sp, #40]	@ 0x28
 800d914:	f8a2 c0ac 	strh.w	ip, [r2, #172]	@ 0xac
 800d918:	f8a2 e0b0 	strh.w	lr, [r2, #176]	@ 0xb0
 800d91c:	e61e      	b.n	800d55c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 800d91e:	445a      	add	r2, fp
 800d920:	f8a2 60b0 	strh.w	r6, [r2, #176]	@ 0xb0
 800d924:	4484      	add	ip, r0
 800d926:	e78f      	b.n	800d848 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 800d928:	f8bd 602e 	ldrh.w	r6, [sp, #46]	@ 0x2e
 800d92c:	fa1f f18e 	uxth.w	r1, lr
 800d930:	eb01 0806 	add.w	r8, r1, r6
 800d934:	b293      	uxth	r3, r2
 800d936:	fa1f f888 	uxth.w	r8, r8
 800d93a:	9306      	str	r3, [sp, #24]
 800d93c:	fa0f f388 	sxth.w	r3, r8
 800d940:	9307      	str	r3, [sp, #28]
 800d942:	9f06      	ldr	r7, [sp, #24]
 800d944:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	@ 0xaa
 800d948:	4596      	cmp	lr, r2
 800d94a:	443b      	add	r3, r7
 800d94c:	b29b      	uxth	r3, r3
 800d94e:	9308      	str	r3, [sp, #32]
 800d950:	da24      	bge.n	800d99c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x46c>
 800d952:	9905      	ldr	r1, [sp, #20]
 800d954:	eba3 0308 	sub.w	r3, r3, r8
 800d958:	ebaa 0401 	sub.w	r4, sl, r1
 800d95c:	b2a4      	uxth	r4, r4
 800d95e:	b29b      	uxth	r3, r3
 800d960:	b225      	sxth	r5, r4
 800d962:	b219      	sxth	r1, r3
 800d964:	eba2 020e 	sub.w	r2, r2, lr
 800d968:	eba9 0000 	sub.w	r0, r9, r0
 800d96c:	436a      	muls	r2, r5
 800d96e:	4348      	muls	r0, r1
 800d970:	4282      	cmp	r2, r0
 800d972:	9a02      	ldr	r2, [sp, #8]
 800d974:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 800d978:	445a      	add	r2, fp
 800d97a:	dc06      	bgt.n	800d98a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x45a>
 800d97c:	9b07      	ldr	r3, [sp, #28]
 800d97e:	f8a2 10b2 	strh.w	r1, [r2, #178]	@ 0xb2
 800d982:	f8a2 30ae 	strh.w	r3, [r2, #174]	@ 0xae
 800d986:	44a4      	add	ip, r4
 800d988:	e75e      	b.n	800d848 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 800d98a:	9904      	ldr	r1, [sp, #16]
 800d98c:	f8a2 50b0 	strh.w	r5, [r2, #176]	@ 0xb0
 800d990:	f8a2 10ac 	strh.w	r1, [r2, #172]	@ 0xac
 800d994:	4433      	add	r3, r6
 800d996:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
 800d99a:	e5df      	b.n	800d55c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 800d99c:	9f06      	ldr	r7, [sp, #24]
 800d99e:	9b04      	ldr	r3, [sp, #16]
 800d9a0:	1bc9      	subs	r1, r1, r7
 800d9a2:	fa0f f78a 	sxth.w	r7, sl
 800d9a6:	b289      	uxth	r1, r1
 800d9a8:	429f      	cmp	r7, r3
 800d9aa:	fa0f fe81 	sxth.w	lr, r1
 800d9ae:	dd24      	ble.n	800d9fa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4ca>
 800d9b0:	9a05      	ldr	r2, [sp, #20]
 800d9b2:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 800d9b6:	ebaa 0202 	sub.w	r2, sl, r2
 800d9ba:	9d07      	ldr	r5, [sp, #28]
 800d9bc:	b292      	uxth	r2, r2
 800d9be:	eba5 0a03 	sub.w	sl, r5, r3
 800d9c2:	b214      	sxth	r4, r2
 800d9c4:	eba9 0000 	sub.w	r0, r9, r0
 800d9c8:	fb0e f000 	mul.w	r0, lr, r0
 800d9cc:	fb04 fa0a 	mul.w	sl, r4, sl
 800d9d0:	9b02      	ldr	r3, [sp, #8]
 800d9d2:	4550      	cmp	r0, sl
 800d9d4:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 800d9d8:	445b      	add	r3, fp
 800d9da:	db03      	blt.n	800d9e4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4b4>
 800d9dc:	f8a3 e0b2 	strh.w	lr, [r3, #178]	@ 0xb2
 800d9e0:	4494      	add	ip, r2
 800d9e2:	e731      	b.n	800d848 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 800d9e4:	9a04      	ldr	r2, [sp, #16]
 800d9e6:	f8a3 40b0 	strh.w	r4, [r3, #176]	@ 0xb0
 800d9ea:	f8a3 20ac 	strh.w	r2, [r3, #172]	@ 0xac
 800d9ee:	f8b3 30ae 	ldrh.w	r3, [r3, #174]	@ 0xae
 800d9f2:	4431      	add	r1, r6
 800d9f4:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
 800d9f8:	e75b      	b.n	800d8b2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x382>
 800d9fa:	9b08      	ldr	r3, [sp, #32]
 800d9fc:	2d06      	cmp	r5, #6
 800d9fe:	eba3 0308 	sub.w	r3, r3, r8
 800da02:	b29b      	uxth	r3, r3
 800da04:	b218      	sxth	r0, r3
 800da06:	d813      	bhi.n	800da30 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x500>
 800da08:	9b07      	ldr	r3, [sp, #28]
 800da0a:	f8a4 00aa 	strh.w	r0, [r4, #170]	@ 0xaa
 800da0e:	f8a4 30a6 	strh.w	r3, [r4, #166]	@ 0xa6
 800da12:	1c6b      	adds	r3, r5, #1
 800da14:	f8ab 30ec 	strh.w	r3, [fp, #236]	@ 0xec
 800da18:	9b01      	ldr	r3, [sp, #4]
 800da1a:	9901      	ldr	r1, [sp, #4]
 800da1c:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 800da20:	f821 9035 	strh.w	r9, [r1, r5, lsl #3]
 800da24:	805a      	strh	r2, [r3, #2]
 800da26:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 800da28:	f8a3 e006 	strh.w	lr, [r3, #6]
 800da2c:	809a      	strh	r2, [r3, #4]
 800da2e:	e75e      	b.n	800d8ee <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
 800da30:	9c02      	ldr	r4, [sp, #8]
 800da32:	4570      	cmp	r0, lr
 800da34:	ea4f 04c4 	mov.w	r4, r4, lsl #3
 800da38:	db0d      	blt.n	800da56 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x526>
 800da3a:	4431      	add	r1, r6
 800da3c:	9b06      	ldr	r3, [sp, #24]
 800da3e:	b289      	uxth	r1, r1
 800da40:	445c      	add	r4, fp
 800da42:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
 800da46:	4419      	add	r1, r3
 800da48:	f8ad 202a 	strh.w	r2, [sp, #42]	@ 0x2a
 800da4c:	f8a4 10ae 	strh.w	r1, [r4, #174]	@ 0xae
 800da50:	f8a4 00b2 	strh.w	r0, [r4, #178]	@ 0xb2
 800da54:	e582      	b.n	800d55c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 800da56:	445c      	add	r4, fp
 800da58:	f8a4 e0b2 	strh.w	lr, [r4, #178]	@ 0xb2
 800da5c:	e79a      	b.n	800d994 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x464>
 800da5e:	f64f 76ff 	movw	r6, #65535	@ 0xffff
 800da62:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	@ 0xec
 800da66:	1e65      	subs	r5, r4, #1
 800da68:	b2ad      	uxth	r5, r5
 800da6a:	eb0b 04c4 	add.w	r4, fp, r4, lsl #3
 800da6e:	42b5      	cmp	r5, r6
 800da70:	d044      	beq.n	800dafc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5cc>
 800da72:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
 800da76:	f9b4 00a6 	ldrsh.w	r0, [r4, #166]	@ 0xa6
 800da7a:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	@ 0x28
 800da7e:	4282      	cmp	r2, r0
 800da80:	f9b4 70a4 	ldrsh.w	r7, [r4, #164]	@ 0xa4
 800da84:	d11f      	bne.n	800dac6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x596>
 800da86:	f9bd c02e 	ldrsh.w	ip, [sp, #46]	@ 0x2e
 800da8a:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	@ 0xaa
 800da8e:	459c      	cmp	ip, r3
 800da90:	d119      	bne.n	800dac6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x596>
 800da92:	f8b4 30a8 	ldrh.w	r3, [r4, #168]	@ 0xa8
 800da96:	f8bd 202c 	ldrh.w	r2, [sp, #44]	@ 0x2c
 800da9a:	19d8      	adds	r0, r3, r7
 800da9c:	b200      	sxth	r0, r0
 800da9e:	4288      	cmp	r0, r1
 800daa0:	d109      	bne.n	800dab6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x586>
 800daa2:	f8ad 7028 	strh.w	r7, [sp, #40]	@ 0x28
 800daa6:	4413      	add	r3, r2
 800daa8:	f8ad 302c 	strh.w	r3, [sp, #44]	@ 0x2c
 800daac:	4629      	mov	r1, r5
 800daae:	9801      	ldr	r0, [sp, #4]
 800dab0:	f7ff fd2a 	bl	800d508 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800dab4:	e003      	b.n	800dabe <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58e>
 800dab6:	4411      	add	r1, r2
 800dab8:	b209      	sxth	r1, r1
 800daba:	42b9      	cmp	r1, r7
 800dabc:	d0f3      	beq.n	800daa6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x576>
 800dabe:	3d01      	subs	r5, #1
 800dac0:	b2ad      	uxth	r5, r5
 800dac2:	3c08      	subs	r4, #8
 800dac4:	e7d3      	b.n	800da6e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53e>
 800dac6:	42b9      	cmp	r1, r7
 800dac8:	d1f9      	bne.n	800dabe <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58e>
 800daca:	f9bd 102c 	ldrsh.w	r1, [sp, #44]	@ 0x2c
 800dace:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	@ 0xa8
 800dad2:	4299      	cmp	r1, r3
 800dad4:	d1f3      	bne.n	800dabe <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58e>
 800dad6:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	@ 0xaa
 800dada:	f8bd 102e 	ldrh.w	r1, [sp, #46]	@ 0x2e
 800dade:	181f      	adds	r7, r3, r0
 800dae0:	b23f      	sxth	r7, r7
 800dae2:	42ba      	cmp	r2, r7
 800dae4:	d105      	bne.n	800daf2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5c2>
 800dae6:	f8ad 002a 	strh.w	r0, [sp, #42]	@ 0x2a
 800daea:	440b      	add	r3, r1
 800daec:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
 800daf0:	e7dc      	b.n	800daac <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x57c>
 800daf2:	440a      	add	r2, r1
 800daf4:	b212      	sxth	r2, r2
 800daf6:	4290      	cmp	r0, r2
 800daf8:	d1e1      	bne.n	800dabe <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58e>
 800dafa:	e7f6      	b.n	800daea <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5ba>
 800dafc:	f8bb 60ec 	ldrh.w	r6, [fp, #236]	@ 0xec
 800db00:	2e07      	cmp	r6, #7
 800db02:	ea4f 04c6 	mov.w	r4, r6, lsl #3
 800db06:	d812      	bhi.n	800db2e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5fe>
 800db08:	1c75      	adds	r5, r6, #1
 800db0a:	f8ab 50ec 	strh.w	r5, [fp, #236]	@ 0xec
 800db0e:	9d01      	ldr	r5, [sp, #4]
 800db10:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	@ 0x28
 800db14:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	@ 0x2a
 800db18:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
 800db1c:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	@ 0x2e
 800db20:	442c      	add	r4, r5
 800db22:	f825 0036 	strh.w	r0, [r5, r6, lsl #3]
 800db26:	8061      	strh	r1, [r4, #2]
 800db28:	80a2      	strh	r2, [r4, #4]
 800db2a:	80e3      	strh	r3, [r4, #6]
 800db2c:	e580      	b.n	800d630 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 800db2e:	f06f 4a00 	mvn.w	sl, #2147483648	@ 0x80000000
 800db32:	f04f 37ff 	mov.w	r7, #4294967295
 800db36:	2500      	movs	r5, #0
 800db38:	f10b 03ac 	add.w	r3, fp, #172	@ 0xac
 800db3c:	3e01      	subs	r6, #1
 800db3e:	445c      	add	r4, fp
 800db40:	9305      	str	r3, [sp, #20]
 800db42:	1e72      	subs	r2, r6, #1
 800db44:	4691      	mov	r9, r2
 800db46:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	@ 0xa8
 800db4a:	9302      	str	r3, [sp, #8]
 800db4c:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	@ 0xaa
 800db50:	9304      	str	r3, [sp, #16]
 800db52:	f104 03a4 	add.w	r3, r4, #164	@ 0xa4
 800db56:	f1b9 3fff 	cmp.w	r9, #4294967295
 800db5a:	bf16      	itet	ne
 800db5c:	9905      	ldrne	r1, [sp, #20]
 800db5e:	f8dd e00c 	ldreq.w	lr, [sp, #12]
 800db62:	eb01 0ec9 	addne.w	lr, r1, r9, lsl #3
 800db66:	f8be 1006 	ldrh.w	r1, [lr, #6]
 800db6a:	f8be 8004 	ldrh.w	r8, [lr, #4]
 800db6e:	6818      	ldr	r0, [r3, #0]
 800db70:	fb18 f801 	smulbb	r8, r8, r1
 800db74:	6859      	ldr	r1, [r3, #4]
 800db76:	f10d 0c30 	add.w	ip, sp, #48	@ 0x30
 800db7a:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 800db7e:	4671      	mov	r1, lr
 800db80:	a80c      	add	r0, sp, #48	@ 0x30
 800db82:	9207      	str	r2, [sp, #28]
 800db84:	9306      	str	r3, [sp, #24]
 800db86:	f7ff fb6d 	bl	800d264 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 800db8a:	f04f 0c08 	mov.w	ip, #8
 800db8e:	f8bd 1036 	ldrh.w	r1, [sp, #54]	@ 0x36
 800db92:	f8bd 0034 	ldrh.w	r0, [sp, #52]	@ 0x34
 800db96:	9b04      	ldr	r3, [sp, #16]
 800db98:	9a02      	ldr	r2, [sp, #8]
 800db9a:	fb10 f001 	smulbb	r0, r0, r1
 800db9e:	fb02 8803 	mla	r8, r2, r3, r8
 800dba2:	eba0 0108 	sub.w	r1, r0, r8
 800dba6:	fb90 f0fc 	sdiv	r0, r0, ip
 800dbaa:	4288      	cmp	r0, r1
 800dbac:	dc20      	bgt.n	800dbf0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c0>
 800dbae:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
 800dbb2:	4551      	cmp	r1, sl
 800dbb4:	da03      	bge.n	800dbbe <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x68e>
 800dbb6:	b1d9      	cbz	r1, 800dbf0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c0>
 800dbb8:	468a      	mov	sl, r1
 800dbba:	464f      	mov	r7, r9
 800dbbc:	4635      	mov	r5, r6
 800dbbe:	f109 39ff 	add.w	r9, r9, #4294967295
 800dbc2:	f119 0f02 	cmn.w	r9, #2
 800dbc6:	d1c6      	bne.n	800db56 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x626>
 800dbc8:	4616      	mov	r6, r2
 800dbca:	3201      	adds	r2, #1
 800dbcc:	f1a4 0408 	sub.w	r4, r4, #8
 800dbd0:	d1b7      	bne.n	800db42 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x612>
 800dbd2:	9b01      	ldr	r3, [sp, #4]
 800dbd4:	b2ac      	uxth	r4, r5
 800dbd6:	00ed      	lsls	r5, r5, #3
 800dbd8:	1958      	adds	r0, r3, r5
 800dbda:	1c7b      	adds	r3, r7, #1
 800dbdc:	d10b      	bne.n	800dbf6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c6>
 800dbde:	4601      	mov	r1, r0
 800dbe0:	9803      	ldr	r0, [sp, #12]
 800dbe2:	f7ff fb3f 	bl	800d264 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 800dbe6:	4621      	mov	r1, r4
 800dbe8:	9801      	ldr	r0, [sp, #4]
 800dbea:	f7ff fc8d 	bl	800d508 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800dbee:	e4b5      	b.n	800d55c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 800dbf0:	464f      	mov	r7, r9
 800dbf2:	4635      	mov	r5, r6
 800dbf4:	e7ed      	b.n	800dbd2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6a2>
 800dbf6:	9b01      	ldr	r3, [sp, #4]
 800dbf8:	00ff      	lsls	r7, r7, #3
 800dbfa:	19d9      	adds	r1, r3, r7
 800dbfc:	f7ff fb32 	bl	800d264 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 800dc00:	9b03      	ldr	r3, [sp, #12]
 800dc02:	445f      	add	r7, fp
 800dc04:	cb03      	ldmia	r3!, {r0, r1}
 800dc06:	445d      	add	r5, fp
 800dc08:	f8c7 00ac 	str.w	r0, [r7, #172]	@ 0xac
 800dc0c:	f8c7 10b0 	str.w	r1, [r7, #176]	@ 0xb0
 800dc10:	f855 0fac 	ldr.w	r0, [r5, #172]!
 800dc14:	9b03      	ldr	r3, [sp, #12]
 800dc16:	6869      	ldr	r1, [r5, #4]
 800dc18:	c303      	stmia	r3!, {r0, r1}
 800dc1a:	e7e4      	b.n	800dbe6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6b6>

0800dc1c <_ZN8touchgfx11Application15drawCachedAreasEv>:
 800dc1c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800dc20:	f500 7698 	add.w	r6, r0, #304	@ 0x130
 800dc24:	b09b      	sub	sp, #108	@ 0x6c
 800dc26:	4604      	mov	r4, r0
 800dc28:	4630      	mov	r0, r6
 800dc2a:	f7fd f9a4 	bl	800af76 <_ZNK8touchgfx4Rect7isEmptyEv>
 800dc2e:	4605      	mov	r5, r0
 800dc30:	b948      	cbnz	r0, 800dc46 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2a>
 800dc32:	e896 0006 	ldmia.w	r6, {r1, r2}
 800dc36:	6823      	ldr	r3, [r4, #0]
 800dc38:	4620      	mov	r0, r4
 800dc3a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800dc3c:	4798      	blx	r3
 800dc3e:	f8c4 5130 	str.w	r5, [r4, #304]	@ 0x130
 800dc42:	f8c4 5134 	str.w	r5, [r4, #308]	@ 0x134
 800dc46:	4bc6      	ldr	r3, [pc, #792]	@ (800df60 <_ZN8touchgfx11Application15drawCachedAreasEv+0x344>)
 800dc48:	681b      	ldr	r3, [r3, #0]
 800dc4a:	2b00      	cmp	r3, #0
 800dc4c:	d03f      	beq.n	800dcce <_ZN8touchgfx11Application15drawCachedAreasEv+0xb2>
 800dc4e:	4dc5      	ldr	r5, [pc, #788]	@ (800df64 <_ZN8touchgfx11Application15drawCachedAreasEv+0x348>)
 800dc50:	4628      	mov	r0, r5
 800dc52:	f7fd f990 	bl	800af76 <_ZNK8touchgfx4Rect7isEmptyEv>
 800dc56:	4606      	mov	r6, r0
 800dc58:	2800      	cmp	r0, #0
 800dc5a:	d138      	bne.n	800dcce <_ZN8touchgfx11Application15drawCachedAreasEv+0xb2>
 800dc5c:	4628      	mov	r0, r5
 800dc5e:	f7ff f995 	bl	800cf8c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 800dc62:	6823      	ldr	r3, [r4, #0]
 800dc64:	6829      	ldr	r1, [r5, #0]
 800dc66:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800dc68:	686a      	ldr	r2, [r5, #4]
 800dc6a:	4620      	mov	r0, r4
 800dc6c:	4798      	blx	r3
 800dc6e:	802e      	strh	r6, [r5, #0]
 800dc70:	806e      	strh	r6, [r5, #2]
 800dc72:	80ae      	strh	r6, [r5, #4]
 800dc74:	80ee      	strh	r6, [r5, #6]
 800dc76:	f10d 0824 	add.w	r8, sp, #36	@ 0x24
 800dc7a:	4dbb      	ldr	r5, [pc, #748]	@ (800df68 <_ZN8touchgfx11Application15drawCachedAreasEv+0x34c>)
 800dc7c:	4640      	mov	r0, r8
 800dc7e:	f7ff fbeb 	bl	800d458 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 800dc82:	882e      	ldrh	r6, [r5, #0]
 800dc84:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	@ 0xec
 800dc88:	4633      	mov	r3, r6
 800dc8a:	f104 00ac 	add.w	r0, r4, #172	@ 0xac
 800dc8e:	42bb      	cmp	r3, r7
 800dc90:	d224      	bcs.n	800dcdc <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
 800dc92:	f8bd 1064 	ldrh.w	r1, [sp, #100]	@ 0x64
 800dc96:	2907      	cmp	r1, #7
 800dc98:	d816      	bhi.n	800dcc8 <_ZN8touchgfx11Application15drawCachedAreasEv+0xac>
 800dc9a:	eb00 02c3 	add.w	r2, r0, r3, lsl #3
 800dc9e:	f9b2 a002 	ldrsh.w	sl, [r2, #2]
 800dca2:	f9b2 e004 	ldrsh.w	lr, [r2, #4]
 800dca6:	f9b2 c006 	ldrsh.w	ip, [r2, #6]
 800dcaa:	f930 9033 	ldrsh.w	r9, [r0, r3, lsl #3]
 800dcae:	1c4a      	adds	r2, r1, #1
 800dcb0:	f8ad 2064 	strh.w	r2, [sp, #100]	@ 0x64
 800dcb4:	eb08 02c1 	add.w	r2, r8, r1, lsl #3
 800dcb8:	f828 9031 	strh.w	r9, [r8, r1, lsl #3]
 800dcbc:	f8a2 a002 	strh.w	sl, [r2, #2]
 800dcc0:	f8a2 e004 	strh.w	lr, [r2, #4]
 800dcc4:	f8a2 c006 	strh.w	ip, [r2, #6]
 800dcc8:	3301      	adds	r3, #1
 800dcca:	b29b      	uxth	r3, r3
 800dccc:	e7df      	b.n	800dc8e <_ZN8touchgfx11Application15drawCachedAreasEv+0x72>
 800dcce:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	@ 0xec
 800dcd2:	2b00      	cmp	r3, #0
 800dcd4:	d1cf      	bne.n	800dc76 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5a>
 800dcd6:	b01b      	add	sp, #108	@ 0x6c
 800dcd8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800dcdc:	f8b4 312e 	ldrh.w	r3, [r4, #302]	@ 0x12e
 800dce0:	42b3      	cmp	r3, r6
 800dce2:	d90c      	bls.n	800dcfe <_ZN8touchgfx11Application15drawCachedAreasEv+0xe2>
 800dce4:	6822      	ldr	r2, [r4, #0]
 800dce6:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
 800dcea:	6c17      	ldr	r7, [r2, #64]	@ 0x40
 800dcec:	f8d3 10ee 	ldr.w	r1, [r3, #238]	@ 0xee
 800dcf0:	f8d3 20f2 	ldr.w	r2, [r3, #242]	@ 0xf2
 800dcf4:	4620      	mov	r0, r4
 800dcf6:	3601      	adds	r6, #1
 800dcf8:	47b8      	blx	r7
 800dcfa:	b2b6      	uxth	r6, r6
 800dcfc:	e7ee      	b.n	800dcdc <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
 800dcfe:	4a9b      	ldr	r2, [pc, #620]	@ (800df6c <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>)
 800dd00:	6813      	ldr	r3, [r2, #0]
 800dd02:	4691      	mov	r9, r2
 800dd04:	f893 3048 	ldrb.w	r3, [r3, #72]	@ 0x48
 800dd08:	2b01      	cmp	r3, #1
 800dd0a:	f040 80e2 	bne.w	800ded2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2b6>
 800dd0e:	2600      	movs	r6, #0
 800dd10:	8829      	ldrh	r1, [r5, #0]
 800dd12:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	@ 0xec
 800dd16:	eb04 03c1 	add.w	r3, r4, r1, lsl #3
 800dd1a:	33ae      	adds	r3, #174	@ 0xae
 800dd1c:	428f      	cmp	r7, r1
 800dd1e:	f103 0308 	add.w	r3, r3, #8
 800dd22:	dd0a      	ble.n	800dd3a <_ZN8touchgfx11Application15drawCachedAreasEv+0x11e>
 800dd24:	f833 2c04 	ldrh.w	r2, [r3, #-4]
 800dd28:	f833 0c08 	ldrh.w	r0, [r3, #-8]
 800dd2c:	3101      	adds	r1, #1
 800dd2e:	4402      	add	r2, r0
 800dd30:	b212      	sxth	r2, r2
 800dd32:	4296      	cmp	r6, r2
 800dd34:	bfb8      	it	lt
 800dd36:	4616      	movlt	r6, r2
 800dd38:	e7f0      	b.n	800dd1c <_ZN8touchgfx11Application15drawCachedAreasEv+0x100>
 800dd3a:	4b8d      	ldr	r3, [pc, #564]	@ (800df70 <_ZN8touchgfx11Application15drawCachedAreasEv+0x354>)
 800dd3c:	f8df 922c 	ldr.w	r9, [pc, #556]	@ 800df6c <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>
 800dd40:	881b      	ldrh	r3, [r3, #0]
 800dd42:	2b0f      	cmp	r3, #15
 800dd44:	bf88      	it	hi
 800dd46:	ea4f 0bd3 	movhi.w	fp, r3, lsr #3
 800dd4a:	f04f 0300 	mov.w	r3, #0
 800dd4e:	bf98      	it	ls
 800dd50:	f04f 0b01 	movls.w	fp, #1
 800dd54:	e9cd 3305 	strd	r3, r3, [sp, #20]
 800dd58:	f8bd 7016 	ldrh.w	r7, [sp, #22]
 800dd5c:	f8bd 001a 	ldrh.w	r0, [sp, #26]
 800dd60:	4b82      	ldr	r3, [pc, #520]	@ (800df6c <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>)
 800dd62:	4438      	add	r0, r7
 800dd64:	b207      	sxth	r7, r0
 800dd66:	6818      	ldr	r0, [r3, #0]
 800dd68:	42b7      	cmp	r7, r6
 800dd6a:	6803      	ldr	r3, [r0, #0]
 800dd6c:	f280 8083 	bge.w	800de76 <_ZN8touchgfx11Application15drawCachedAreasEv+0x25a>
 800dd70:	f8d3 309c 	ldr.w	r3, [r3, #156]	@ 0x9c
 800dd74:	4798      	blx	r3
 800dd76:	eb07 030b 	add.w	r3, r7, fp
 800dd7a:	4298      	cmp	r0, r3
 800dd7c:	da07      	bge.n	800dd8e <_ZN8touchgfx11Application15drawCachedAreasEv+0x172>
 800dd7e:	42b0      	cmp	r0, r6
 800dd80:	da05      	bge.n	800dd8e <_ZN8touchgfx11Application15drawCachedAreasEv+0x172>
 800dd82:	4287      	cmp	r7, r0
 800dd84:	dd6c      	ble.n	800de60 <_ZN8touchgfx11Application15drawCachedAreasEv+0x244>
 800dd86:	2f00      	cmp	r7, #0
 800dd88:	dd6a      	ble.n	800de60 <_ZN8touchgfx11Application15drawCachedAreasEv+0x244>
 800dd8a:	4630      	mov	r0, r6
 800dd8c:	e004      	b.n	800dd98 <_ZN8touchgfx11Application15drawCachedAreasEv+0x17c>
 800dd8e:	4287      	cmp	r7, r0
 800dd90:	dcfb      	bgt.n	800dd8a <_ZN8touchgfx11Application15drawCachedAreasEv+0x16e>
 800dd92:	42b0      	cmp	r0, r6
 800dd94:	bfa8      	it	ge
 800dd96:	4630      	movge	r0, r6
 800dd98:	2200      	movs	r2, #0
 800dd9a:	4b76      	ldr	r3, [pc, #472]	@ (800df74 <_ZN8touchgfx11Application15drawCachedAreasEv+0x358>)
 800dd9c:	1bc0      	subs	r0, r0, r7
 800dd9e:	f9b3 3000 	ldrsh.w	r3, [r3]
 800dda2:	f8ad 7016 	strh.w	r7, [sp, #22]
 800dda6:	882f      	ldrh	r7, [r5, #0]
 800dda8:	f8ad 2014 	strh.w	r2, [sp, #20]
 800ddac:	f8ad 3018 	strh.w	r3, [sp, #24]
 800ddb0:	f8ad 001a 	strh.w	r0, [sp, #26]
 800ddb4:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	@ 0xec
 800ddb8:	42bb      	cmp	r3, r7
 800ddba:	d9cd      	bls.n	800dd58 <_ZN8touchgfx11Application15drawCachedAreasEv+0x13c>
 800ddbc:	eb04 02c7 	add.w	r2, r4, r7, lsl #3
 800ddc0:	f852 0fac 	ldr.w	r0, [r2, #172]!
 800ddc4:	ab07      	add	r3, sp, #28
 800ddc6:	6851      	ldr	r1, [r2, #4]
 800ddc8:	c303      	stmia	r3!, {r0, r1}
 800ddca:	a905      	add	r1, sp, #20
 800ddcc:	a807      	add	r0, sp, #28
 800ddce:	f7ff f9b0 	bl	800d132 <_ZNK8touchgfx4Rect9intersectERKS0_>
 800ddd2:	2800      	cmp	r0, #0
 800ddd4:	d04c      	beq.n	800de70 <_ZN8touchgfx11Application15drawCachedAreasEv+0x254>
 800ddd6:	f9bd 001c 	ldrsh.w	r0, [sp, #28]
 800ddda:	f9bd 2014 	ldrsh.w	r2, [sp, #20]
 800ddde:	f8bd a020 	ldrh.w	sl, [sp, #32]
 800dde2:	4686      	mov	lr, r0
 800dde4:	4290      	cmp	r0, r2
 800dde6:	4450      	add	r0, sl
 800dde8:	f8bd a018 	ldrh.w	sl, [sp, #24]
 800ddec:	f9bd 101e 	ldrsh.w	r1, [sp, #30]
 800ddf0:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 800ddf4:	bfb8      	it	lt
 800ddf6:	4696      	movlt	lr, r2
 800ddf8:	4452      	add	r2, sl
 800ddfa:	4299      	cmp	r1, r3
 800ddfc:	b280      	uxth	r0, r0
 800ddfe:	b292      	uxth	r2, r2
 800de00:	468c      	mov	ip, r1
 800de02:	9302      	str	r3, [sp, #8]
 800de04:	bfb8      	it	lt
 800de06:	469c      	movlt	ip, r3
 800de08:	fa0f fa82 	sxth.w	sl, r2
 800de0c:	b203      	sxth	r3, r0
 800de0e:	4553      	cmp	r3, sl
 800de10:	bfb8      	it	lt
 800de12:	4602      	movlt	r2, r0
 800de14:	eba2 020e 	sub.w	r2, r2, lr
 800de18:	f8ad 2020 	strh.w	r2, [sp, #32]
 800de1c:	f8bd 2022 	ldrh.w	r2, [sp, #34]	@ 0x22
 800de20:	9b02      	ldr	r3, [sp, #8]
 800de22:	4411      	add	r1, r2
 800de24:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 800de28:	b289      	uxth	r1, r1
 800de2a:	4413      	add	r3, r2
 800de2c:	b29b      	uxth	r3, r3
 800de2e:	b208      	sxth	r0, r1
 800de30:	b21a      	sxth	r2, r3
 800de32:	4290      	cmp	r0, r2
 800de34:	bfb8      	it	lt
 800de36:	460b      	movlt	r3, r1
 800de38:	eba3 030c 	sub.w	r3, r3, ip
 800de3c:	f8ad 3022 	strh.w	r3, [sp, #34]	@ 0x22
 800de40:	f8ad e01c 	strh.w	lr, [sp, #28]
 800de44:	f8ad c01e 	strh.w	ip, [sp, #30]
 800de48:	a807      	add	r0, sp, #28
 800de4a:	f7fd f894 	bl	800af76 <_ZNK8touchgfx4Rect7isEmptyEv>
 800de4e:	b920      	cbnz	r0, 800de5a <_ZN8touchgfx11Application15drawCachedAreasEv+0x23e>
 800de50:	6823      	ldr	r3, [r4, #0]
 800de52:	a907      	add	r1, sp, #28
 800de54:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 800de56:	4620      	mov	r0, r4
 800de58:	4798      	blx	r3
 800de5a:	3701      	adds	r7, #1
 800de5c:	b2bf      	uxth	r7, r7
 800de5e:	e7a9      	b.n	800ddb4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x198>
 800de60:	f8d9 0000 	ldr.w	r0, [r9]
 800de64:	2101      	movs	r1, #1
 800de66:	6803      	ldr	r3, [r0, #0]
 800de68:	f8d3 3098 	ldr.w	r3, [r3, #152]	@ 0x98
 800de6c:	4798      	blx	r3
 800de6e:	e773      	b.n	800dd58 <_ZN8touchgfx11Application15drawCachedAreasEv+0x13c>
 800de70:	e9cd 0007 	strd	r0, r0, [sp, #28]
 800de74:	e7e8      	b.n	800de48 <_ZN8touchgfx11Application15drawCachedAreasEv+0x22c>
 800de76:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800de78:	4798      	blx	r3
 800de7a:	4b3f      	ldr	r3, [pc, #252]	@ (800df78 <_ZN8touchgfx11Application15drawCachedAreasEv+0x35c>)
 800de7c:	781b      	ldrb	r3, [r3, #0]
 800de7e:	2b00      	cmp	r3, #0
 800de80:	f43f af29 	beq.w	800dcd6 <_ZN8touchgfx11Application15drawCachedAreasEv+0xba>
 800de84:	2300      	movs	r3, #0
 800de86:	f8a4 312e 	strh.w	r3, [r4, #302]	@ 0x12e
 800de8a:	882b      	ldrh	r3, [r5, #0]
 800de8c:	f8bd 5064 	ldrh.w	r5, [sp, #100]	@ 0x64
 800de90:	f104 00ee 	add.w	r0, r4, #238	@ 0xee
 800de94:	42ab      	cmp	r3, r5
 800de96:	f4bf af1e 	bcs.w	800dcd6 <_ZN8touchgfx11Application15drawCachedAreasEv+0xba>
 800de9a:	f8b4 112e 	ldrh.w	r1, [r4, #302]	@ 0x12e
 800de9e:	2907      	cmp	r1, #7
 800dea0:	d814      	bhi.n	800decc <_ZN8touchgfx11Application15drawCachedAreasEv+0x2b0>
 800dea2:	eb08 02c3 	add.w	r2, r8, r3, lsl #3
 800dea6:	f9b2 c002 	ldrsh.w	ip, [r2, #2]
 800deaa:	f9b2 7004 	ldrsh.w	r7, [r2, #4]
 800deae:	f9b2 6006 	ldrsh.w	r6, [r2, #6]
 800deb2:	f938 e033 	ldrsh.w	lr, [r8, r3, lsl #3]
 800deb6:	1c4a      	adds	r2, r1, #1
 800deb8:	f8a4 212e 	strh.w	r2, [r4, #302]	@ 0x12e
 800debc:	eb00 02c1 	add.w	r2, r0, r1, lsl #3
 800dec0:	f820 e031 	strh.w	lr, [r0, r1, lsl #3]
 800dec4:	f8a2 c002 	strh.w	ip, [r2, #2]
 800dec8:	8097      	strh	r7, [r2, #4]
 800deca:	80d6      	strh	r6, [r2, #6]
 800decc:	3301      	adds	r3, #1
 800dece:	b29b      	uxth	r3, r3
 800ded0:	e7e0      	b.n	800de94 <_ZN8touchgfx11Application15drawCachedAreasEv+0x278>
 800ded2:	2b02      	cmp	r3, #2
 800ded4:	f040 8133 	bne.w	800e13e <_ZN8touchgfx11Application15drawCachedAreasEv+0x522>
 800ded8:	4b28      	ldr	r3, [pc, #160]	@ (800df7c <_ZN8touchgfx11Application15drawCachedAreasEv+0x360>)
 800deda:	f104 0aac 	add.w	sl, r4, #172	@ 0xac
 800dede:	781b      	ldrb	r3, [r3, #0]
 800dee0:	2b01      	cmp	r3, #1
 800dee2:	f000 8098 	beq.w	800e016 <_ZN8touchgfx11Application15drawCachedAreasEv+0x3fa>
 800dee6:	882a      	ldrh	r2, [r5, #0]
 800dee8:	f8b4 10ec 	ldrh.w	r1, [r4, #236]	@ 0xec
 800deec:	3201      	adds	r2, #1
 800deee:	b292      	uxth	r2, r2
 800def0:	2900      	cmp	r1, #0
 800def2:	d0c2      	beq.n	800de7a <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 800def4:	4694      	mov	ip, r2
 800def6:	f04f 0900 	mov.w	r9, #0
 800defa:	f8b4 60ae 	ldrh.w	r6, [r4, #174]	@ 0xae
 800defe:	f8b4 30b2 	ldrh.w	r3, [r4, #178]	@ 0xb2
 800df02:	441e      	add	r6, r3
 800df04:	b236      	sxth	r6, r6
 800df06:	fa1f f38c 	uxth.w	r3, ip
 800df0a:	4299      	cmp	r1, r3
 800df0c:	ea4f 07c9 	mov.w	r7, r9, lsl #3
 800df10:	f240 80bf 	bls.w	800e092 <_ZN8touchgfx11Application15drawCachedAreasEv+0x476>
 800df14:	4427      	add	r7, r4
 800df16:	eb04 0ecc 	add.w	lr, r4, ip, lsl #3
 800df1a:	f9b7 30ae 	ldrsh.w	r3, [r7, #174]	@ 0xae
 800df1e:	f9be 00ae 	ldrsh.w	r0, [lr, #174]	@ 0xae
 800df22:	4283      	cmp	r3, r0
 800df24:	f340 80a1 	ble.w	800e06a <_ZN8touchgfx11Application15drawCachedAreasEv+0x44e>
 800df28:	f8be 60b2 	ldrh.w	r6, [lr, #178]	@ 0xb2
 800df2c:	46e1      	mov	r9, ip
 800df2e:	4406      	add	r6, r0
 800df30:	b236      	sxth	r6, r6
 800df32:	429e      	cmp	r6, r3
 800df34:	bfa8      	it	ge
 800df36:	461e      	movge	r6, r3
 800df38:	f10c 0c01 	add.w	ip, ip, #1
 800df3c:	e7e3      	b.n	800df06 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ea>
 800df3e:	d10a      	bne.n	800df56 <_ZN8touchgfx11Application15drawCachedAreasEv+0x33a>
 800df40:	f9b6 00b2 	ldrsh.w	r0, [r6, #178]	@ 0xb2
 800df44:	f9be 10b2 	ldrsh.w	r1, [lr, #178]	@ 0xb2
 800df48:	4562      	cmp	r2, ip
 800df4a:	bfb8      	it	lt
 800df4c:	4662      	movlt	r2, ip
 800df4e:	4288      	cmp	r0, r1
 800df50:	bfb8      	it	lt
 800df52:	461f      	movlt	r7, r3
 800df54:	e087      	b.n	800e066 <_ZN8touchgfx11Application15drawCachedAreasEv+0x44a>
 800df56:	428a      	cmp	r2, r1
 800df58:	bfb8      	it	lt
 800df5a:	460a      	movlt	r2, r1
 800df5c:	e083      	b.n	800e066 <_ZN8touchgfx11Application15drawCachedAreasEv+0x44a>
 800df5e:	bf00      	nop
 800df60:	200830dc 	.word	0x200830dc
 800df64:	200830e8 	.word	0x200830e8
 800df68:	20000060 	.word	0x20000060
 800df6c:	200830a4 	.word	0x200830a4
 800df70:	2008309a 	.word	0x2008309a
 800df74:	20083098 	.word	0x20083098
 800df78:	200830a2 	.word	0x200830a2
 800df7c:	2008309c 	.word	0x2008309c
 800df80:	19a1      	adds	r1, r4, r6
 800df82:	f851 0fac 	ldr.w	r0, [r1, #172]!
 800df86:	ab07      	add	r3, sp, #28
 800df88:	6849      	ldr	r1, [r1, #4]
 800df8a:	c303      	stmia	r3!, {r0, r1}
 800df8c:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 800df90:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 800df94:	2b13      	cmp	r3, #19
 800df96:	bfd8      	it	le
 800df98:	f9bd 201c 	ldrshle.w	r2, [sp, #28]
 800df9c:	440b      	add	r3, r1
 800df9e:	1a9b      	subs	r3, r3, r2
 800dfa0:	a807      	add	r0, sp, #28
 800dfa2:	f8ad 3020 	strh.w	r3, [sp, #32]
 800dfa6:	f8ad 201c 	strh.w	r2, [sp, #28]
 800dfaa:	f7ff f809 	bl	800cfc0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 800dfae:	a807      	add	r0, sp, #28
 800dfb0:	f7fc ffe1 	bl	800af76 <_ZNK8touchgfx4Rect7isEmptyEv>
 800dfb4:	bb78      	cbnz	r0, 800e016 <_ZN8touchgfx11Application15drawCachedAreasEv+0x3fa>
 800dfb6:	f9bd c022 	ldrsh.w	ip, [sp, #34]	@ 0x22
 800dfba:	f8d9 0000 	ldr.w	r0, [r9]
 800dfbe:	f1bc 0f14 	cmp.w	ip, #20
 800dfc2:	bfa8      	it	ge
 800dfc4:	f04f 0c14 	movge.w	ip, #20
 800dfc8:	f8d0 e000 	ldr.w	lr, [r0]
 800dfcc:	fa1f fc8c 	uxth.w	ip, ip
 800dfd0:	f8cd c000 	str.w	ip, [sp]
 800dfd4:	f8de b090 	ldr.w	fp, [lr, #144]	@ 0x90
 800dfd8:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 800dfdc:	f8bd 201e 	ldrh.w	r2, [sp, #30]
 800dfe0:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 800dfe4:	47d8      	blx	fp
 800dfe6:	4683      	mov	fp, r0
 800dfe8:	f8ad 0022 	strh.w	r0, [sp, #34]	@ 0x22
 800dfec:	a807      	add	r0, sp, #28
 800dfee:	f7fe ffcd 	bl	800cf8c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 800dff2:	6823      	ldr	r3, [r4, #0]
 800dff4:	4620      	mov	r0, r4
 800dff6:	4426      	add	r6, r4
 800dff8:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 800dffa:	a907      	add	r1, sp, #28
 800dffc:	4798      	blx	r3
 800dffe:	f8b6 00b0 	ldrh.w	r0, [r6, #176]	@ 0xb0
 800e002:	eba0 000b 	sub.w	r0, r0, fp
 800e006:	b200      	sxth	r0, r0
 800e008:	f8a6 00b0 	strh.w	r0, [r6, #176]	@ 0xb0
 800e00c:	b918      	cbnz	r0, 800e016 <_ZN8touchgfx11Application15drawCachedAreasEv+0x3fa>
 800e00e:	b2b9      	uxth	r1, r7
 800e010:	4650      	mov	r0, sl
 800e012:	f7ff fa79 	bl	800d508 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800e016:	f8b4 b0ec 	ldrh.w	fp, [r4, #236]	@ 0xec
 800e01a:	f1bb 0f00 	cmp.w	fp, #0
 800e01e:	f43f af2c 	beq.w	800de7a <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 800e022:	2700      	movs	r7, #0
 800e024:	882b      	ldrh	r3, [r5, #0]
 800e026:	f9b4 20ac 	ldrsh.w	r2, [r4, #172]	@ 0xac
 800e02a:	3301      	adds	r3, #1
 800e02c:	b29b      	uxth	r3, r3
 800e02e:	b299      	uxth	r1, r3
 800e030:	458b      	cmp	fp, r1
 800e032:	ea4f 06c7 	mov.w	r6, r7, lsl #3
 800e036:	d9a3      	bls.n	800df80 <_ZN8touchgfx11Application15drawCachedAreasEv+0x364>
 800e038:	4426      	add	r6, r4
 800e03a:	f8b6 10ac 	ldrh.w	r1, [r6, #172]	@ 0xac
 800e03e:	f8b6 00b0 	ldrh.w	r0, [r6, #176]	@ 0xb0
 800e042:	eb04 0ec3 	add.w	lr, r4, r3, lsl #3
 800e046:	4408      	add	r0, r1
 800e048:	f9be c0ac 	ldrsh.w	ip, [lr, #172]	@ 0xac
 800e04c:	f8be 10b0 	ldrh.w	r1, [lr, #176]	@ 0xb0
 800e050:	b200      	sxth	r0, r0
 800e052:	4461      	add	r1, ip
 800e054:	b209      	sxth	r1, r1
 800e056:	4288      	cmp	r0, r1
 800e058:	f6bf af71 	bge.w	800df3e <_ZN8touchgfx11Application15drawCachedAreasEv+0x322>
 800e05c:	4584      	cmp	ip, r0
 800e05e:	4662      	mov	r2, ip
 800e060:	461f      	mov	r7, r3
 800e062:	bfb8      	it	lt
 800e064:	4602      	movlt	r2, r0
 800e066:	3301      	adds	r3, #1
 800e068:	e7e1      	b.n	800e02e <_ZN8touchgfx11Application15drawCachedAreasEv+0x412>
 800e06a:	d10e      	bne.n	800e08a <_ZN8touchgfx11Application15drawCachedAreasEv+0x46e>
 800e06c:	f9be 00b0 	ldrsh.w	r0, [lr, #176]	@ 0xb0
 800e070:	f8be e0b2 	ldrh.w	lr, [lr, #178]	@ 0xb2
 800e074:	f9b7 70b0 	ldrsh.w	r7, [r7, #176]	@ 0xb0
 800e078:	4473      	add	r3, lr
 800e07a:	b21b      	sxth	r3, r3
 800e07c:	429e      	cmp	r6, r3
 800e07e:	bfa8      	it	ge
 800e080:	461e      	movge	r6, r3
 800e082:	4287      	cmp	r7, r0
 800e084:	bfb8      	it	lt
 800e086:	46e1      	movlt	r9, ip
 800e088:	e756      	b.n	800df38 <_ZN8touchgfx11Application15drawCachedAreasEv+0x31c>
 800e08a:	4286      	cmp	r6, r0
 800e08c:	bfa8      	it	ge
 800e08e:	4606      	movge	r6, r0
 800e090:	e752      	b.n	800df38 <_ZN8touchgfx11Application15drawCachedAreasEv+0x31c>
 800e092:	eb0a 0007 	add.w	r0, sl, r7
 800e096:	4427      	add	r7, r4
 800e098:	f9b7 b0b2 	ldrsh.w	fp, [r7, #178]	@ 0xb2
 800e09c:	e9cd 2102 	strd	r2, r1, [sp, #8]
 800e0a0:	f1bb 0f13 	cmp.w	fp, #19
 800e0a4:	bfde      	ittt	le
 800e0a6:	f8b7 60ae 	ldrhle.w	r6, [r7, #174]	@ 0xae
 800e0aa:	445e      	addle	r6, fp
 800e0ac:	b236      	sxthle	r6, r6
 800e0ae:	f7fc ff62 	bl	800af76 <_ZNK8touchgfx4Rect7isEmptyEv>
 800e0b2:	e9dd 2102 	ldrd	r2, r1, [sp, #8]
 800e0b6:	2800      	cmp	r0, #0
 800e0b8:	f47f af1a 	bne.w	800def0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2d4>
 800e0bc:	f9b7 20ae 	ldrsh.w	r2, [r7, #174]	@ 0xae
 800e0c0:	f8ad 0022 	strh.w	r0, [sp, #34]	@ 0x22
 800e0c4:	1ab6      	subs	r6, r6, r2
 800e0c6:	2e14      	cmp	r6, #20
 800e0c8:	bfa8      	it	ge
 800e0ca:	2614      	movge	r6, #20
 800e0cc:	4828      	ldr	r0, [pc, #160]	@ (800e170 <_ZN8touchgfx11Application15drawCachedAreasEv+0x554>)
 800e0ce:	f9b7 10ac 	ldrsh.w	r1, [r7, #172]	@ 0xac
 800e0d2:	f9b7 30b0 	ldrsh.w	r3, [r7, #176]	@ 0xb0
 800e0d6:	6800      	ldr	r0, [r0, #0]
 800e0d8:	f8ad 101c 	strh.w	r1, [sp, #28]
 800e0dc:	f8ad 201e 	strh.w	r2, [sp, #30]
 800e0e0:	f8ad 3020 	strh.w	r3, [sp, #32]
 800e0e4:	f8d0 c000 	ldr.w	ip, [r0]
 800e0e8:	b2b6      	uxth	r6, r6
 800e0ea:	fa1f fb8b 	uxth.w	fp, fp
 800e0ee:	455e      	cmp	r6, fp
 800e0f0:	bf94      	ite	ls
 800e0f2:	9600      	strls	r6, [sp, #0]
 800e0f4:	f8cd b000 	strhi.w	fp, [sp]
 800e0f8:	b292      	uxth	r2, r2
 800e0fa:	f8dc 6090 	ldr.w	r6, [ip, #144]	@ 0x90
 800e0fe:	b29b      	uxth	r3, r3
 800e100:	b289      	uxth	r1, r1
 800e102:	47b0      	blx	r6
 800e104:	6823      	ldr	r3, [r4, #0]
 800e106:	f8ad 0022 	strh.w	r0, [sp, #34]	@ 0x22
 800e10a:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 800e10c:	a907      	add	r1, sp, #28
 800e10e:	4620      	mov	r0, r4
 800e110:	4798      	blx	r3
 800e112:	f8bd 1022 	ldrh.w	r1, [sp, #34]	@ 0x22
 800e116:	f8b7 30b2 	ldrh.w	r3, [r7, #178]	@ 0xb2
 800e11a:	f8b7 20ae 	ldrh.w	r2, [r7, #174]	@ 0xae
 800e11e:	1a5b      	subs	r3, r3, r1
 800e120:	440a      	add	r2, r1
 800e122:	b21b      	sxth	r3, r3
 800e124:	f8a7 20ae 	strh.w	r2, [r7, #174]	@ 0xae
 800e128:	f8a7 30b2 	strh.w	r3, [r7, #178]	@ 0xb2
 800e12c:	2b00      	cmp	r3, #0
 800e12e:	f47f aeda 	bne.w	800dee6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ca>
 800e132:	fa1f f189 	uxth.w	r1, r9
 800e136:	4650      	mov	r0, sl
 800e138:	f7ff f9e6 	bl	800d508 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800e13c:	e6d3      	b.n	800dee6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ca>
 800e13e:	882e      	ldrh	r6, [r5, #0]
 800e140:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	@ 0xec
 800e144:	42b3      	cmp	r3, r6
 800e146:	f67f ae98 	bls.w	800de7a <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 800e14a:	eb04 02c6 	add.w	r2, r4, r6, lsl #3
 800e14e:	f852 0fac 	ldr.w	r0, [r2, #172]!
 800e152:	ab07      	add	r3, sp, #28
 800e154:	6851      	ldr	r1, [r2, #4]
 800e156:	c303      	stmia	r3!, {r0, r1}
 800e158:	a807      	add	r0, sp, #28
 800e15a:	f7fc ff0c 	bl	800af76 <_ZNK8touchgfx4Rect7isEmptyEv>
 800e15e:	b920      	cbnz	r0, 800e16a <_ZN8touchgfx11Application15drawCachedAreasEv+0x54e>
 800e160:	6823      	ldr	r3, [r4, #0]
 800e162:	a907      	add	r1, sp, #28
 800e164:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 800e166:	4620      	mov	r0, r4
 800e168:	4798      	blx	r3
 800e16a:	3601      	adds	r6, #1
 800e16c:	b2b6      	uxth	r6, r6
 800e16e:	e7e7      	b.n	800e140 <_ZN8touchgfx11Application15drawCachedAreasEv+0x524>
 800e170:	200830a4 	.word	0x200830a4

0800e174 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE>:
 800e174:	2200      	movs	r2, #0
 800e176:	4b03      	ldr	r3, [pc, #12]	@ (800e184 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE+0x10>)
 800e178:	801a      	strh	r2, [r3, #0]
 800e17a:	805a      	strh	r2, [r3, #2]
 800e17c:	809a      	strh	r2, [r3, #4]
 800e17e:	80da      	strh	r2, [r3, #6]
 800e180:	4770      	bx	lr
 800e182:	bf00      	nop
 800e184:	200830e8 	.word	0x200830e8

0800e188 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>:
 800e188:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e18c:	4606      	mov	r6, r0
 800e18e:	b09d      	sub	sp, #116	@ 0x74
 800e190:	a803      	add	r0, sp, #12
 800e192:	4614      	mov	r4, r2
 800e194:	468a      	mov	sl, r1
 800e196:	461d      	mov	r5, r3
 800e198:	f001 f8a2 	bl	800f2e0 <_ZN8touchgfx12TextProviderC1Ev>
 800e19c:	6833      	ldr	r3, [r6, #0]
 800e19e:	4630      	mov	r0, r6
 800e1a0:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800e1a2:	4798      	blx	r3
 800e1a4:	6833      	ldr	r3, [r6, #0]
 800e1a6:	4607      	mov	r7, r0
 800e1a8:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800e1aa:	4630      	mov	r0, r6
 800e1ac:	4798      	blx	r3
 800e1ae:	462a      	mov	r2, r5
 800e1b0:	2500      	movs	r5, #0
 800e1b2:	9000      	str	r0, [sp, #0]
 800e1b4:	4621      	mov	r1, r4
 800e1b6:	463b      	mov	r3, r7
 800e1b8:	a803      	add	r0, sp, #12
 800e1ba:	f001 f8e4 	bl	800f386 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800e1be:	462c      	mov	r4, r5
 800e1c0:	46a9      	mov	r9, r5
 800e1c2:	46a8      	mov	r8, r5
 800e1c4:	f242 0b0b 	movw	fp, #8203	@ 0x200b
 800e1c8:	2300      	movs	r3, #0
 800e1ca:	9302      	str	r3, [sp, #8]
 800e1cc:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
 800e1d0:	429c      	cmp	r4, r3
 800e1d2:	d002      	beq.n	800e1da <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x52>
 800e1d4:	455c      	cmp	r4, fp
 800e1d6:	bf18      	it	ne
 800e1d8:	4625      	movne	r5, r4
 800e1da:	ab02      	add	r3, sp, #8
 800e1dc:	4632      	mov	r2, r6
 800e1de:	4651      	mov	r1, sl
 800e1e0:	a803      	add	r0, sp, #12
 800e1e2:	f001 fbbf 	bl	800f964 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800e1e6:	4604      	mov	r4, r0
 800e1e8:	b108      	cbz	r0, 800e1ee <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x66>
 800e1ea:	280a      	cmp	r0, #10
 800e1ec:	d10a      	bne.n	800e204 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x7c>
 800e1ee:	45c1      	cmp	r9, r8
 800e1f0:	bf38      	it	cc
 800e1f2:	46c1      	movcc	r9, r8
 800e1f4:	f04f 0800 	mov.w	r8, #0
 800e1f8:	2c00      	cmp	r4, #0
 800e1fa:	d1e5      	bne.n	800e1c8 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 800e1fc:	4648      	mov	r0, r9
 800e1fe:	b01d      	add	sp, #116	@ 0x74
 800e200:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e204:	9a02      	ldr	r2, [sp, #8]
 800e206:	2a00      	cmp	r2, #0
 800e208:	d0de      	beq.n	800e1c8 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 800e20a:	7b57      	ldrb	r7, [r2, #13]
 800e20c:	6833      	ldr	r3, [r6, #0]
 800e20e:	007f      	lsls	r7, r7, #1
 800e210:	f407 7080 	and.w	r0, r7, #256	@ 0x100
 800e214:	7a97      	ldrb	r7, [r2, #10]
 800e216:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800e218:	4307      	orrs	r7, r0
 800e21a:	4629      	mov	r1, r5
 800e21c:	4630      	mov	r0, r6
 800e21e:	8894      	ldrh	r4, [r2, #4]
 800e220:	4798      	blx	r3
 800e222:	4438      	add	r0, r7
 800e224:	4480      	add	r8, r0
 800e226:	fa1f f888 	uxth.w	r8, r8
 800e22a:	e7e5      	b.n	800e1f8 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x70>

0800e22c <_ZNK8touchgfx4Font12getCharWidthEt>:
 800e22c:	b508      	push	{r3, lr}
 800e22e:	6803      	ldr	r3, [r0, #0]
 800e230:	68db      	ldr	r3, [r3, #12]
 800e232:	4798      	blx	r3
 800e234:	b128      	cbz	r0, 800e242 <_ZNK8touchgfx4Font12getCharWidthEt+0x16>
 800e236:	7b43      	ldrb	r3, [r0, #13]
 800e238:	7a80      	ldrb	r0, [r0, #10]
 800e23a:	005b      	lsls	r3, r3, #1
 800e23c:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800e240:	4318      	orrs	r0, r3
 800e242:	bd08      	pop	{r3, pc}

0800e244 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz>:
 800e244:	b40e      	push	{r1, r2, r3}
 800e246:	b5f0      	push	{r4, r5, r6, r7, lr}
 800e248:	4605      	mov	r5, r0
 800e24a:	b09e      	sub	sp, #120	@ 0x78
 800e24c:	ab23      	add	r3, sp, #140	@ 0x8c
 800e24e:	f853 4b04 	ldr.w	r4, [r3], #4
 800e252:	a805      	add	r0, sp, #20
 800e254:	9303      	str	r3, [sp, #12]
 800e256:	f001 f843 	bl	800f2e0 <_ZN8touchgfx12TextProviderC1Ev>
 800e25a:	682b      	ldr	r3, [r5, #0]
 800e25c:	4628      	mov	r0, r5
 800e25e:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800e260:	4798      	blx	r3
 800e262:	682b      	ldr	r3, [r5, #0]
 800e264:	4606      	mov	r6, r0
 800e266:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800e268:	4628      	mov	r0, r5
 800e26a:	4798      	blx	r3
 800e26c:	4621      	mov	r1, r4
 800e26e:	2400      	movs	r4, #0
 800e270:	4633      	mov	r3, r6
 800e272:	9000      	str	r0, [sp, #0]
 800e274:	9a03      	ldr	r2, [sp, #12]
 800e276:	ae1e      	add	r6, sp, #120	@ 0x78
 800e278:	a805      	add	r0, sp, #20
 800e27a:	f001 f884 	bl	800f386 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800e27e:	f846 4d68 	str.w	r4, [r6, #-104]!
 800e282:	4633      	mov	r3, r6
 800e284:	462a      	mov	r2, r5
 800e286:	4621      	mov	r1, r4
 800e288:	a805      	add	r0, sp, #20
 800e28a:	f001 fb6b 	bl	800f964 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800e28e:	b1f0      	cbz	r0, 800e2ce <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x8a>
 800e290:	280a      	cmp	r0, #10
 800e292:	d018      	beq.n	800e2c6 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 800e294:	9f04      	ldr	r7, [sp, #16]
 800e296:	b1b7      	cbz	r7, 800e2c6 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 800e298:	7b78      	ldrb	r0, [r7, #13]
 800e29a:	7a3b      	ldrb	r3, [r7, #8]
 800e29c:	00c1      	lsls	r1, r0, #3
 800e29e:	f401 7180 	and.w	r1, r1, #256	@ 0x100
 800e2a2:	4319      	orrs	r1, r3
 800e2a4:	0643      	lsls	r3, r0, #25
 800e2a6:	bf44      	itt	mi
 800e2a8:	f5a1 7300 	submi.w	r3, r1, #512	@ 0x200
 800e2ac:	b219      	sxthmi	r1, r3
 800e2ae:	0100      	lsls	r0, r0, #4
 800e2b0:	79fb      	ldrb	r3, [r7, #7]
 800e2b2:	88ea      	ldrh	r2, [r5, #6]
 800e2b4:	f400 7080 	and.w	r0, r0, #256	@ 0x100
 800e2b8:	4303      	orrs	r3, r0
 800e2ba:	4413      	add	r3, r2
 800e2bc:	1a5b      	subs	r3, r3, r1
 800e2be:	b21b      	sxth	r3, r3
 800e2c0:	429c      	cmp	r4, r3
 800e2c2:	bfb8      	it	lt
 800e2c4:	461c      	movlt	r4, r3
 800e2c6:	4633      	mov	r3, r6
 800e2c8:	462a      	mov	r2, r5
 800e2ca:	2100      	movs	r1, #0
 800e2cc:	e7dc      	b.n	800e288 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x44>
 800e2ce:	b2a0      	uxth	r0, r4
 800e2d0:	b01e      	add	sp, #120	@ 0x78
 800e2d2:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 800e2d6:	b003      	add	sp, #12
 800e2d8:	4770      	bx	lr

0800e2da <_ZNK8touchgfx4Font20getMinimumTextHeightEv>:
 800e2da:	7a43      	ldrb	r3, [r0, #9]
 800e2dc:	8880      	ldrh	r0, [r0, #4]
 800e2de:	4418      	add	r0, r3
 800e2e0:	b280      	uxth	r0, r0
 800e2e2:	4770      	bx	lr

0800e2e4 <_ZNK8touchgfx4Font13getFontHeightEv>:
 800e2e4:	6803      	ldr	r3, [r0, #0]
 800e2e6:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800e2e8:	4718      	bx	r3

0800e2ea <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz>:
 800e2ea:	b40e      	push	{r1, r2, r3}
 800e2ec:	b570      	push	{r4, r5, r6, lr}
 800e2ee:	4604      	mov	r4, r0
 800e2f0:	b09d      	sub	sp, #116	@ 0x74
 800e2f2:	ab21      	add	r3, sp, #132	@ 0x84
 800e2f4:	f853 5b04 	ldr.w	r5, [r3], #4
 800e2f8:	a803      	add	r0, sp, #12
 800e2fa:	9302      	str	r3, [sp, #8]
 800e2fc:	f000 fff0 	bl	800f2e0 <_ZN8touchgfx12TextProviderC1Ev>
 800e300:	6823      	ldr	r3, [r4, #0]
 800e302:	4620      	mov	r0, r4
 800e304:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800e306:	4798      	blx	r3
 800e308:	6823      	ldr	r3, [r4, #0]
 800e30a:	4606      	mov	r6, r0
 800e30c:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800e30e:	4620      	mov	r0, r4
 800e310:	4798      	blx	r3
 800e312:	4633      	mov	r3, r6
 800e314:	9000      	str	r0, [sp, #0]
 800e316:	9a02      	ldr	r2, [sp, #8]
 800e318:	4629      	mov	r1, r5
 800e31a:	a803      	add	r0, sp, #12
 800e31c:	f001 f833 	bl	800f386 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800e320:	a803      	add	r0, sp, #12
 800e322:	f001 fba1 	bl	800fa68 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800e326:	2401      	movs	r4, #1
 800e328:	b2a3      	uxth	r3, r4
 800e32a:	b140      	cbz	r0, 800e33e <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x54>
 800e32c:	280a      	cmp	r0, #10
 800e32e:	bf08      	it	eq
 800e330:	3301      	addeq	r3, #1
 800e332:	a803      	add	r0, sp, #12
 800e334:	bf08      	it	eq
 800e336:	b21c      	sxtheq	r4, r3
 800e338:	f001 fb96 	bl	800fa68 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800e33c:	e7f4      	b.n	800e328 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x3e>
 800e33e:	4618      	mov	r0, r3
 800e340:	b01d      	add	sp, #116	@ 0x74
 800e342:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800e346:	b003      	add	sp, #12
 800e348:	4770      	bx	lr

0800e34a <_ZNK8touchgfx4Font15getSpacingAboveEPKtz>:
 800e34a:	b40e      	push	{r1, r2, r3}
 800e34c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800e34e:	4604      	mov	r4, r0
 800e350:	b09e      	sub	sp, #120	@ 0x78
 800e352:	ab23      	add	r3, sp, #140	@ 0x8c
 800e354:	f853 5b04 	ldr.w	r5, [r3], #4
 800e358:	a805      	add	r0, sp, #20
 800e35a:	9303      	str	r3, [sp, #12]
 800e35c:	f000 ffc0 	bl	800f2e0 <_ZN8touchgfx12TextProviderC1Ev>
 800e360:	6823      	ldr	r3, [r4, #0]
 800e362:	4620      	mov	r0, r4
 800e364:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800e366:	4798      	blx	r3
 800e368:	6823      	ldr	r3, [r4, #0]
 800e36a:	4606      	mov	r6, r0
 800e36c:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800e36e:	4620      	mov	r0, r4
 800e370:	4798      	blx	r3
 800e372:	4633      	mov	r3, r6
 800e374:	4629      	mov	r1, r5
 800e376:	9000      	str	r0, [sp, #0]
 800e378:	9a03      	ldr	r2, [sp, #12]
 800e37a:	a805      	add	r0, sp, #20
 800e37c:	f001 f803 	bl	800f386 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800e380:	2100      	movs	r1, #0
 800e382:	ad1e      	add	r5, sp, #120	@ 0x78
 800e384:	f845 1d68 	str.w	r1, [r5, #-104]!
 800e388:	462b      	mov	r3, r5
 800e38a:	4622      	mov	r2, r4
 800e38c:	a805      	add	r0, sp, #20
 800e38e:	f001 fae9 	bl	800f964 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800e392:	f647 76ff 	movw	r6, #32767	@ 0x7fff
 800e396:	b1d8      	cbz	r0, 800e3d0 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x86>
 800e398:	280a      	cmp	r0, #10
 800e39a:	d012      	beq.n	800e3c2 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 800e39c:	9804      	ldr	r0, [sp, #16]
 800e39e:	b180      	cbz	r0, 800e3c2 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 800e3a0:	7b47      	ldrb	r7, [r0, #13]
 800e3a2:	88e2      	ldrh	r2, [r4, #6]
 800e3a4:	00fb      	lsls	r3, r7, #3
 800e3a6:	f403 7180 	and.w	r1, r3, #256	@ 0x100
 800e3aa:	7a03      	ldrb	r3, [r0, #8]
 800e3ac:	430b      	orrs	r3, r1
 800e3ae:	0679      	lsls	r1, r7, #25
 800e3b0:	bf44      	itt	mi
 800e3b2:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 800e3b6:	b21b      	sxthmi	r3, r3
 800e3b8:	1ad3      	subs	r3, r2, r3
 800e3ba:	b21b      	sxth	r3, r3
 800e3bc:	429e      	cmp	r6, r3
 800e3be:	bfa8      	it	ge
 800e3c0:	461e      	movge	r6, r3
 800e3c2:	462b      	mov	r3, r5
 800e3c4:	4622      	mov	r2, r4
 800e3c6:	2100      	movs	r1, #0
 800e3c8:	a805      	add	r0, sp, #20
 800e3ca:	f001 facb 	bl	800f964 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800e3ce:	e7e2      	b.n	800e396 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x4c>
 800e3d0:	4630      	mov	r0, r6
 800e3d2:	b01e      	add	sp, #120	@ 0x78
 800e3d4:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 800e3d8:	b003      	add	sp, #12
 800e3da:	4770      	bx	lr

0800e3dc <_ZNK8touchgfx8Drawable10invalidateEv>:
 800e3dc:	b513      	push	{r0, r1, r4, lr}
 800e3de:	2400      	movs	r4, #0
 800e3e0:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 800e3e4:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 800e3e8:	6803      	ldr	r3, [r0, #0]
 800e3ea:	f8ad 1004 	strh.w	r1, [sp, #4]
 800e3ee:	9400      	str	r4, [sp, #0]
 800e3f0:	f8ad 2006 	strh.w	r2, [sp, #6]
 800e3f4:	691b      	ldr	r3, [r3, #16]
 800e3f6:	4669      	mov	r1, sp
 800e3f8:	4798      	blx	r3
 800e3fa:	b002      	add	sp, #8
 800e3fc:	bd10      	pop	{r4, pc}

0800e3fe <_ZN8touchgfx8Drawable20getSolidRectAbsoluteEv>:
 800e3fe:	b538      	push	{r3, r4, r5, lr}
 800e400:	460c      	mov	r4, r1
 800e402:	4605      	mov	r5, r0
 800e404:	680b      	ldr	r3, [r1, #0]
 800e406:	68db      	ldr	r3, [r3, #12]
 800e408:	4798      	blx	r3
 800e40a:	6823      	ldr	r3, [r4, #0]
 800e40c:	4620      	mov	r0, r4
 800e40e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800e410:	4629      	mov	r1, r5
 800e412:	4798      	blx	r3
 800e414:	4628      	mov	r0, r5
 800e416:	bd38      	pop	{r3, r4, r5, pc}

0800e418 <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE>:
 800e418:	b410      	push	{r4}
 800e41a:	880a      	ldrh	r2, [r1, #0]
 800e41c:	8884      	ldrh	r4, [r0, #4]
 800e41e:	4422      	add	r2, r4
 800e420:	800a      	strh	r2, [r1, #0]
 800e422:	88c4      	ldrh	r4, [r0, #6]
 800e424:	884a      	ldrh	r2, [r1, #2]
 800e426:	4422      	add	r2, r4
 800e428:	804a      	strh	r2, [r1, #2]
 800e42a:	6940      	ldr	r0, [r0, #20]
 800e42c:	b120      	cbz	r0, 800e438 <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE+0x20>
 800e42e:	6803      	ldr	r3, [r0, #0]
 800e430:	f85d 4b04 	ldr.w	r4, [sp], #4
 800e434:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800e436:	4718      	bx	r3
 800e438:	f85d 4b04 	ldr.w	r4, [sp], #4
 800e43c:	4770      	bx	lr

0800e43e <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE>:
 800e43e:	b570      	push	{r4, r5, r6, lr}
 800e440:	460c      	mov	r4, r1
 800e442:	8882      	ldrh	r2, [r0, #4]
 800e444:	880b      	ldrh	r3, [r1, #0]
 800e446:	4605      	mov	r5, r0
 800e448:	4413      	add	r3, r2
 800e44a:	800b      	strh	r3, [r1, #0]
 800e44c:	88c2      	ldrh	r2, [r0, #6]
 800e44e:	884b      	ldrh	r3, [r1, #2]
 800e450:	4413      	add	r3, r2
 800e452:	804b      	strh	r3, [r1, #2]
 800e454:	1d01      	adds	r1, r0, #4
 800e456:	4620      	mov	r0, r4
 800e458:	f7fc fd4a 	bl	800aef0 <_ZN8touchgfx4RectaNERKS0_>
 800e45c:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 800e460:	2b00      	cmp	r3, #0
 800e462:	dd0b      	ble.n	800e47c <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 800e464:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 800e468:	2b00      	cmp	r3, #0
 800e46a:	dd07      	ble.n	800e47c <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 800e46c:	6968      	ldr	r0, [r5, #20]
 800e46e:	b128      	cbz	r0, 800e47c <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 800e470:	6803      	ldr	r3, [r0, #0]
 800e472:	4621      	mov	r1, r4
 800e474:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800e478:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800e47a:	4718      	bx	r3
 800e47c:	bd70      	pop	{r4, r5, r6, pc}
	...

0800e480 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE>:
 800e480:	b570      	push	{r4, r5, r6, lr}
 800e482:	460c      	mov	r4, r1
 800e484:	8882      	ldrh	r2, [r0, #4]
 800e486:	880b      	ldrh	r3, [r1, #0]
 800e488:	4605      	mov	r5, r0
 800e48a:	4413      	add	r3, r2
 800e48c:	800b      	strh	r3, [r1, #0]
 800e48e:	88c2      	ldrh	r2, [r0, #6]
 800e490:	884b      	ldrh	r3, [r1, #2]
 800e492:	4413      	add	r3, r2
 800e494:	804b      	strh	r3, [r1, #2]
 800e496:	1d01      	adds	r1, r0, #4
 800e498:	4620      	mov	r0, r4
 800e49a:	f7fc fd29 	bl	800aef0 <_ZN8touchgfx4RectaNERKS0_>
 800e49e:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 800e4a2:	2b00      	cmp	r3, #0
 800e4a4:	dd19      	ble.n	800e4da <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 800e4a6:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 800e4aa:	2b00      	cmp	r3, #0
 800e4ac:	dd15      	ble.n	800e4da <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 800e4ae:	6968      	ldr	r0, [r5, #20]
 800e4b0:	b128      	cbz	r0, 800e4be <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x3e>
 800e4b2:	6803      	ldr	r3, [r0, #0]
 800e4b4:	4621      	mov	r1, r4
 800e4b6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800e4ba:	691b      	ldr	r3, [r3, #16]
 800e4bc:	4718      	bx	r3
 800e4be:	4b07      	ldr	r3, [pc, #28]	@ (800e4dc <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5c>)
 800e4c0:	681b      	ldr	r3, [r3, #0]
 800e4c2:	3304      	adds	r3, #4
 800e4c4:	429d      	cmp	r5, r3
 800e4c6:	d108      	bne.n	800e4da <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 800e4c8:	f7fe ff12 	bl	800d2f0 <_ZN8touchgfx11Application11getInstanceEv>
 800e4cc:	6803      	ldr	r3, [r0, #0]
 800e4ce:	6821      	ldr	r1, [r4, #0]
 800e4d0:	6862      	ldr	r2, [r4, #4]
 800e4d2:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800e4d4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800e4d8:	4718      	bx	r3
 800e4da:	bd70      	pop	{r4, r5, r6, pc}
 800e4dc:	200830e0 	.word	0x200830e0

0800e4e0 <_ZN8touchgfx8Drawable12moveRelativeEss>:
 800e4e0:	b570      	push	{r4, r5, r6, lr}
 800e4e2:	4604      	mov	r4, r0
 800e4e4:	4616      	mov	r6, r2
 800e4e6:	460d      	mov	r5, r1
 800e4e8:	b901      	cbnz	r1, 800e4ec <_ZN8touchgfx8Drawable12moveRelativeEss+0xc>
 800e4ea:	b192      	cbz	r2, 800e512 <_ZN8touchgfx8Drawable12moveRelativeEss+0x32>
 800e4ec:	6823      	ldr	r3, [r4, #0]
 800e4ee:	4620      	mov	r0, r4
 800e4f0:	699b      	ldr	r3, [r3, #24]
 800e4f2:	4798      	blx	r3
 800e4f4:	88e2      	ldrh	r2, [r4, #6]
 800e4f6:	88a1      	ldrh	r1, [r4, #4]
 800e4f8:	4432      	add	r2, r6
 800e4fa:	4429      	add	r1, r5
 800e4fc:	4620      	mov	r0, r4
 800e4fe:	b212      	sxth	r2, r2
 800e500:	b209      	sxth	r1, r1
 800e502:	f7f4 fee7 	bl	80032d4 <_ZN8touchgfx8Drawable5setXYEss>
 800e506:	6823      	ldr	r3, [r4, #0]
 800e508:	4620      	mov	r0, r4
 800e50a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800e50e:	699b      	ldr	r3, [r3, #24]
 800e510:	4718      	bx	r3
 800e512:	bd70      	pop	{r4, r5, r6, pc}

0800e514 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>:
 800e514:	b510      	push	{r4, lr}
 800e516:	2300      	movs	r3, #0
 800e518:	4604      	mov	r4, r0
 800e51a:	4608      	mov	r0, r1
 800e51c:	8023      	strh	r3, [r4, #0]
 800e51e:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 800e522:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
 800e526:	8063      	strh	r3, [r4, #2]
 800e528:	6803      	ldr	r3, [r0, #0]
 800e52a:	80a1      	strh	r1, [r4, #4]
 800e52c:	80e2      	strh	r2, [r4, #6]
 800e52e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800e530:	4621      	mov	r1, r4
 800e532:	4798      	blx	r3
 800e534:	4620      	mov	r0, r4
 800e536:	bd10      	pop	{r4, pc}

0800e538 <_ZN8touchgfx22VectorFontRendererImplD1Ev>:
 800e538:	4770      	bx	lr

0800e53a <_ZN8touchgfx22VectorFontRendererImplD0Ev>:
 800e53a:	b510      	push	{r4, lr}
 800e53c:	4604      	mov	r4, r0
 800e53e:	211c      	movs	r1, #28
 800e540:	f022 ff41 	bl	80313c6 <_ZdlPvj>
 800e544:	4620      	mov	r0, r4
 800e546:	bd10      	pop	{r4, pc}

0800e548 <_ZN8touchgfx22VectorFontRendererImplC1Ev>:
 800e548:	4a04      	ldr	r2, [pc, #16]	@ (800e55c <_ZN8touchgfx22VectorFontRendererImplC1Ev+0x14>)
 800e54a:	6002      	str	r2, [r0, #0]
 800e54c:	2200      	movs	r2, #0
 800e54e:	e9c0 2201 	strd	r2, r2, [r0, #4]
 800e552:	e9c0 2203 	strd	r2, r2, [r0, #12]
 800e556:	e9c0 2205 	strd	r2, r2, [r0, #20]
 800e55a:	4770      	bx	lr
 800e55c:	08035e40 	.word	0x08035e40

0800e560 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs>:
 800e560:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e564:	4604      	mov	r4, r0
 800e566:	4696      	mov	lr, r2
 800e568:	8b22      	ldrh	r2, [r4, #24]
 800e56a:	b087      	sub	sp, #28
 800e56c:	9105      	str	r1, [sp, #20]
 800e56e:	1c51      	adds	r1, r2, #1
 800e570:	6880      	ldr	r0, [r0, #8]
 800e572:	8321      	strh	r1, [r4, #24]
 800e574:	2101      	movs	r1, #1
 800e576:	5481      	strb	r1, [r0, r2]
 800e578:	f9b3 2000 	ldrsh.w	r2, [r3]
 800e57c:	8b60      	ldrh	r0, [r4, #26]
 800e57e:	ee06 2a90 	vmov	s13, r2
 800e582:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 800e586:	68e2      	ldr	r2, [r4, #12]
 800e588:	1845      	adds	r5, r0, r1
 800e58a:	eb02 0280 	add.w	r2, r2, r0, lsl #2
 800e58e:	8365      	strh	r5, [r4, #26]
 800e590:	edc2 6a00 	vstr	s13, [r2]
 800e594:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 800e598:	8b60      	ldrh	r0, [r4, #26]
 800e59a:	ee07 2a10 	vmov	s14, r2
 800e59e:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800e5a2:	68e2      	ldr	r2, [r4, #12]
 800e5a4:	1845      	adds	r5, r0, r1
 800e5a6:	eb02 0280 	add.w	r2, r2, r0, lsl #2
 800e5aa:	8365      	strh	r5, [r4, #26]
 800e5ac:	ed82 7a00 	vstr	s14, [r2]
 800e5b0:	f8be 2000 	ldrh.w	r2, [lr]
 800e5b4:	1d18      	adds	r0, r3, #4
 800e5b6:	9203      	str	r2, [sp, #12]
 800e5b8:	2200      	movs	r2, #0
 800e5ba:	4689      	mov	r9, r1
 800e5bc:	4613      	mov	r3, r2
 800e5be:	4694      	mov	ip, r2
 800e5c0:	460d      	mov	r5, r1
 800e5c2:	eeb6 6a00 	vmov.f32	s12, #96	@ 0x3f000000  0.5
 800e5c6:	9201      	str	r2, [sp, #4]
 800e5c8:	9202      	str	r2, [sp, #8]
 800e5ca:	f8b4 8018 	ldrh.w	r8, [r4, #24]
 800e5ce:	9e05      	ldr	r6, [sp, #20]
 800e5d0:	f8d4 a008 	ldr.w	sl, [r4, #8]
 800e5d4:	f108 0701 	add.w	r7, r8, #1
 800e5d8:	428e      	cmp	r6, r1
 800e5da:	b2bf      	uxth	r7, r7
 800e5dc:	eb0a 0b08 	add.w	fp, sl, r8
 800e5e0:	f340 80b6 	ble.w	800e750 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x1f0>
 800e5e4:	9b03      	ldr	r3, [sp, #12]
 800e5e6:	f9b0 c000 	ldrsh.w	ip, [r0]
 800e5ea:	fa43 fb05 	asr.w	fp, r3, r5
 800e5ee:	f00b 0b01 	and.w	fp, fp, #1
 800e5f2:	fa5f f38b 	uxtb.w	r3, fp
 800e5f6:	9304      	str	r3, [sp, #16]
 800e5f8:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 800e5fc:	f1bb 0f00 	cmp.w	fp, #0
 800e600:	d057      	beq.n	800e6b2 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x152>
 800e602:	ee07 ca90 	vmov	s15, ip
 800e606:	eef8 5ae7 	vcvt.f32.s32	s11, s15
 800e60a:	ee07 3a90 	vmov	s15, r3
 800e60e:	8327      	strh	r7, [r4, #24]
 800e610:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800e614:	f1b9 0f00 	cmp.w	r9, #0
 800e618:	d028      	beq.n	800e66c <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x10c>
 800e61a:	f04f 0602 	mov.w	r6, #2
 800e61e:	f80a 6008 	strb.w	r6, [sl, r8]
 800e622:	f8b4 801a 	ldrh.w	r8, [r4, #26]
 800e626:	68e7      	ldr	r7, [r4, #12]
 800e628:	f108 0901 	add.w	r9, r8, #1
 800e62c:	eb07 0788 	add.w	r7, r7, r8, lsl #2
 800e630:	f8a4 901a 	strh.w	r9, [r4, #26]
 800e634:	edc7 5a00 	vstr	s11, [r7]
 800e638:	f8b4 801a 	ldrh.w	r8, [r4, #26]
 800e63c:	68e7      	ldr	r7, [r4, #12]
 800e63e:	f108 0901 	add.w	r9, r8, #1
 800e642:	eb07 0788 	add.w	r7, r7, r8, lsl #2
 800e646:	f8a4 901a 	strh.w	r9, [r4, #26]
 800e64a:	edc7 7a00 	vstr	s15, [r7]
 800e64e:	3501      	adds	r5, #1
 800e650:	2d10      	cmp	r5, #16
 800e652:	d106      	bne.n	800e662 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x102>
 800e654:	9d02      	ldr	r5, [sp, #8]
 800e656:	3501      	adds	r5, #1
 800e658:	9502      	str	r5, [sp, #8]
 800e65a:	f83e 5015 	ldrh.w	r5, [lr, r5, lsl #1]
 800e65e:	9503      	str	r5, [sp, #12]
 800e660:	2500      	movs	r5, #0
 800e662:	3101      	adds	r1, #1
 800e664:	3004      	adds	r0, #4
 800e666:	f8dd 9010 	ldr.w	r9, [sp, #16]
 800e66a:	e7ae      	b.n	800e5ca <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x6a>
 800e66c:	ed9d 5a01 	vldr	s10, [sp, #4]
 800e670:	f04f 0605 	mov.w	r6, #5
 800e674:	eeb8 5ac5 	vcvt.f32.s32	s10, s10
 800e678:	f80a 6008 	strb.w	r6, [sl, r8]
 800e67c:	f8b4 801a 	ldrh.w	r8, [r4, #26]
 800e680:	68e7      	ldr	r7, [r4, #12]
 800e682:	f108 0901 	add.w	r9, r8, #1
 800e686:	eb07 0788 	add.w	r7, r7, r8, lsl #2
 800e68a:	f8a4 901a 	strh.w	r9, [r4, #26]
 800e68e:	ed87 5a00 	vstr	s10, [r7]
 800e692:	ee05 2a10 	vmov	s10, r2
 800e696:	eeb8 5ac5 	vcvt.f32.s32	s10, s10
 800e69a:	f8b4 801a 	ldrh.w	r8, [r4, #26]
 800e69e:	68e7      	ldr	r7, [r4, #12]
 800e6a0:	f108 0901 	add.w	r9, r8, #1
 800e6a4:	eb07 0788 	add.w	r7, r7, r8, lsl #2
 800e6a8:	f8a4 901a 	strh.w	r9, [r4, #26]
 800e6ac:	ed87 5a00 	vstr	s10, [r7]
 800e6b0:	e7b7      	b.n	800e622 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0xc2>
 800e6b2:	f1b9 0f00 	cmp.w	r9, #0
 800e6b6:	d147      	bne.n	800e748 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x1e8>
 800e6b8:	eddd 7a01 	vldr	s15, [sp, #4]
 800e6bc:	f04f 0605 	mov.w	r6, #5
 800e6c0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800e6c4:	8327      	strh	r7, [r4, #24]
 800e6c6:	f80a 6008 	strb.w	r6, [sl, r8]
 800e6ca:	f8b4 801a 	ldrh.w	r8, [r4, #26]
 800e6ce:	68e7      	ldr	r7, [r4, #12]
 800e6d0:	f108 0901 	add.w	r9, r8, #1
 800e6d4:	eb07 0788 	add.w	r7, r7, r8, lsl #2
 800e6d8:	f8a4 901a 	strh.w	r9, [r4, #26]
 800e6dc:	edc7 7a00 	vstr	s15, [r7]
 800e6e0:	ee07 2a90 	vmov	s15, r2
 800e6e4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800e6e8:	f8b4 801a 	ldrh.w	r8, [r4, #26]
 800e6ec:	68e7      	ldr	r7, [r4, #12]
 800e6ee:	9e01      	ldr	r6, [sp, #4]
 800e6f0:	f108 0901 	add.w	r9, r8, #1
 800e6f4:	eb07 0788 	add.w	r7, r7, r8, lsl #2
 800e6f8:	4466      	add	r6, ip
 800e6fa:	f8a4 901a 	strh.w	r9, [r4, #26]
 800e6fe:	edc7 7a00 	vstr	s15, [r7]
 800e702:	ee07 6a90 	vmov	s15, r6
 800e706:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800e70a:	ee67 7a86 	vmul.f32	s15, s15, s12
 800e70e:	f8b4 801a 	ldrh.w	r8, [r4, #26]
 800e712:	68e7      	ldr	r7, [r4, #12]
 800e714:	f108 0901 	add.w	r9, r8, #1
 800e718:	eb07 0788 	add.w	r7, r7, r8, lsl #2
 800e71c:	441a      	add	r2, r3
 800e71e:	f8a4 901a 	strh.w	r9, [r4, #26]
 800e722:	edc7 7a00 	vstr	s15, [r7]
 800e726:	ee07 2a90 	vmov	s15, r2
 800e72a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800e72e:	ee67 7a86 	vmul.f32	s15, s15, s12
 800e732:	f8b4 801a 	ldrh.w	r8, [r4, #26]
 800e736:	68e7      	ldr	r7, [r4, #12]
 800e738:	f108 0901 	add.w	r9, r8, #1
 800e73c:	eb07 0788 	add.w	r7, r7, r8, lsl #2
 800e740:	f8a4 901a 	strh.w	r9, [r4, #26]
 800e744:	edc7 7a00 	vstr	s15, [r7]
 800e748:	461a      	mov	r2, r3
 800e74a:	f8cd c004 	str.w	ip, [sp, #4]
 800e74e:	e77e      	b.n	800e64e <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0xee>
 800e750:	f1b9 0f00 	cmp.w	r9, #0
 800e754:	d028      	beq.n	800e7a8 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x248>
 800e756:	ee07 ca90 	vmov	s15, ip
 800e75a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800e75e:	eef4 6a67 	vcmp.f32	s13, s15
 800e762:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800e766:	d108      	bne.n	800e77a <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x21a>
 800e768:	ee07 3a90 	vmov	s15, r3
 800e76c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800e770:	eeb4 7a67 	vcmp.f32	s14, s15
 800e774:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800e778:	d016      	beq.n	800e7a8 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x248>
 800e77a:	2302      	movs	r3, #2
 800e77c:	8327      	strh	r7, [r4, #24]
 800e77e:	f88b 3000 	strb.w	r3, [fp]
 800e782:	8b62      	ldrh	r2, [r4, #26]
 800e784:	68e3      	ldr	r3, [r4, #12]
 800e786:	1c51      	adds	r1, r2, #1
 800e788:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 800e78c:	8361      	strh	r1, [r4, #26]
 800e78e:	edc3 6a00 	vstr	s13, [r3]
 800e792:	8b62      	ldrh	r2, [r4, #26]
 800e794:	68e3      	ldr	r3, [r4, #12]
 800e796:	1c51      	adds	r1, r2, #1
 800e798:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 800e79c:	8361      	strh	r1, [r4, #26]
 800e79e:	ed83 7a00 	vstr	s14, [r3]
 800e7a2:	b007      	add	sp, #28
 800e7a4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e7a8:	eddd 7a01 	vldr	s15, [sp, #4]
 800e7ac:	2305      	movs	r3, #5
 800e7ae:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800e7b2:	8327      	strh	r7, [r4, #24]
 800e7b4:	f88b 3000 	strb.w	r3, [fp]
 800e7b8:	8b61      	ldrh	r1, [r4, #26]
 800e7ba:	68e3      	ldr	r3, [r4, #12]
 800e7bc:	1c4d      	adds	r5, r1, #1
 800e7be:	eb03 0381 	add.w	r3, r3, r1, lsl #2
 800e7c2:	8365      	strh	r5, [r4, #26]
 800e7c4:	edc3 7a00 	vstr	s15, [r3]
 800e7c8:	ee07 2a90 	vmov	s15, r2
 800e7cc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800e7d0:	8b61      	ldrh	r1, [r4, #26]
 800e7d2:	68e3      	ldr	r3, [r4, #12]
 800e7d4:	1c4d      	adds	r5, r1, #1
 800e7d6:	eb03 0381 	add.w	r3, r3, r1, lsl #2
 800e7da:	8365      	strh	r5, [r4, #26]
 800e7dc:	edc3 7a00 	vstr	s15, [r3]
 800e7e0:	e7cf      	b.n	800e782 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x222>
	...

0800e7e4 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii>:
 800e7e4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800e7e8:	b08e      	sub	sp, #56	@ 0x38
 800e7ea:	4604      	mov	r4, r0
 800e7ec:	4688      	mov	r8, r1
 800e7ee:	4615      	mov	r5, r2
 800e7f0:	4699      	mov	r9, r3
 800e7f2:	9e16      	ldr	r6, [sp, #88]	@ 0x58
 800e7f4:	f89d a064 	ldrb.w	sl, [sp, #100]	@ 0x64
 800e7f8:	9f1a      	ldr	r7, [sp, #104]	@ 0x68
 800e7fa:	f7f4 fa13 	bl	8002c24 <_ZN8touchgfx14VectorRenderer11getInstanceEv>
 800e7fe:	6060      	str	r0, [r4, #4]
 800e800:	f1b9 0f00 	cmp.w	r9, #0
 800e804:	f000 80e8 	beq.w	800e9d8 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x1f4>
 800e808:	2800      	cmp	r0, #0
 800e80a:	f000 80e5 	beq.w	800e9d8 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x1f4>
 800e80e:	a805      	add	r0, sp, #20
 800e810:	f000 f8f9 	bl	800ea06 <_ZN8touchgfx9Matrix3x3C1Ev>
 800e814:	6833      	ldr	r3, [r6, #0]
 800e816:	4630      	mov	r0, r6
 800e818:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 800e81a:	4798      	blx	r3
 800e81c:	a805      	add	r0, sp, #20
 800e81e:	eef0 0a40 	vmov.f32	s1, s0
 800e822:	f000 f8f4 	bl	800ea0e <_ZN8touchgfx9Matrix3x35scaleEff>
 800e826:	6860      	ldr	r0, [r4, #4]
 800e828:	f1ba 0f03 	cmp.w	sl, #3
 800e82c:	d83b      	bhi.n	800e8a6 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0xc2>
 800e82e:	e8df f00a 	tbb	[pc, sl]
 800e832:	1002      	.short	0x1002
 800e834:	9f71      	.short	0x9f71
 800e836:	6803      	ldr	r3, [r0, #0]
 800e838:	462a      	mov	r2, r5
 800e83a:	689b      	ldr	r3, [r3, #8]
 800e83c:	4641      	mov	r1, r8
 800e83e:	4798      	blx	r3
 800e840:	eddd 7a1b 	vldr	s15, [sp, #108]	@ 0x6c
 800e844:	eef8 0ae7 	vcvt.f32.s32	s1, s15
 800e848:	ee07 7a90 	vmov	s15, r7
 800e84c:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
 800e850:	e026      	b.n	800e8a0 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0xbc>
 800e852:	f9b5 2006 	ldrsh.w	r2, [r5, #6]
 800e856:	f8b8 3004 	ldrh.w	r3, [r8, #4]
 800e85a:	8869      	ldrh	r1, [r5, #2]
 800e85c:	1a9b      	subs	r3, r3, r2
 800e85e:	1a5b      	subs	r3, r3, r1
 800e860:	f8ad 300c 	strh.w	r3, [sp, #12]
 800e864:	882b      	ldrh	r3, [r5, #0]
 800e866:	f8ad 2010 	strh.w	r2, [sp, #16]
 800e86a:	f8ad 300e 	strh.w	r3, [sp, #14]
 800e86e:	88ab      	ldrh	r3, [r5, #4]
 800e870:	aa03      	add	r2, sp, #12
 800e872:	f8ad 3012 	strh.w	r3, [sp, #18]
 800e876:	6803      	ldr	r3, [r0, #0]
 800e878:	4641      	mov	r1, r8
 800e87a:	689b      	ldr	r3, [r3, #8]
 800e87c:	4798      	blx	r3
 800e87e:	ed9f 0a58 	vldr	s0, [pc, #352]	@ 800e9e0 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x1fc>
 800e882:	a805      	add	r0, sp, #20
 800e884:	f000 f8e8 	bl	800ea58 <_ZN8touchgfx9Matrix3x36rotateEf>
 800e888:	ee07 7a90 	vmov	s15, r7
 800e88c:	f9b8 3004 	ldrsh.w	r3, [r8, #4]
 800e890:	9a1b      	ldr	r2, [sp, #108]	@ 0x6c
 800e892:	eef8 0ae7 	vcvt.f32.s32	s1, s15
 800e896:	1a9b      	subs	r3, r3, r2
 800e898:	ee00 3a10 	vmov	s0, r3
 800e89c:	eeb8 0ac0 	vcvt.f32.s32	s0, s0
 800e8a0:	a805      	add	r0, sp, #20
 800e8a2:	f000 f927 	bl	800eaf4 <_ZN8touchgfx9Matrix3x39translateEff>
 800e8a6:	2500      	movs	r5, #0
 800e8a8:	6860      	ldr	r0, [r4, #4]
 800e8aa:	a905      	add	r1, sp, #20
 800e8ac:	6803      	ldr	r3, [r0, #0]
 800e8ae:	f109 0602 	add.w	r6, r9, #2
 800e8b2:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800e8b4:	4798      	blx	r3
 800e8b6:	6860      	ldr	r0, [r4, #4]
 800e8b8:	9917      	ldr	r1, [sp, #92]	@ 0x5c
 800e8ba:	6803      	ldr	r3, [r0, #0]
 800e8bc:	f041 417f 	orr.w	r1, r1, #4278190080	@ 0xff000000
 800e8c0:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800e8c2:	4798      	blx	r3
 800e8c4:	6860      	ldr	r0, [r4, #4]
 800e8c6:	f89d 1060 	ldrb.w	r1, [sp, #96]	@ 0x60
 800e8ca:	6803      	ldr	r3, [r0, #0]
 800e8cc:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800e8ce:	4798      	blx	r3
 800e8d0:	6860      	ldr	r0, [r4, #4]
 800e8d2:	2101      	movs	r1, #1
 800e8d4:	6803      	ldr	r3, [r0, #0]
 800e8d6:	68db      	ldr	r3, [r3, #12]
 800e8d8:	4798      	blx	r3
 800e8da:	f8b9 7000 	ldrh.w	r7, [r9]
 800e8de:	f104 0310 	add.w	r3, r4, #16
 800e8e2:	61a5      	str	r5, [r4, #24]
 800e8e4:	f104 0208 	add.w	r2, r4, #8
 800e8e8:	f104 0114 	add.w	r1, r4, #20
 800e8ec:	f104 000c 	add.w	r0, r4, #12
 800e8f0:	f7f5 f866 	bl	80039c0 <_ZN8touchgfx22VectorFontRendererImpl20getVectorFontBuffersERPfRiRPhS3_>
 800e8f4:	42af      	cmp	r7, r5
 800e8f6:	dd60      	ble.n	800e9ba <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x1d6>
 800e8f8:	8831      	ldrh	r1, [r6, #0]
 800e8fa:	1cb2      	adds	r2, r6, #2
 800e8fc:	f101 030f 	add.w	r3, r1, #15
 800e900:	f3c3 1307 	ubfx	r3, r3, #4, #8
 800e904:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 800e908:	4620      	mov	r0, r4
 800e90a:	f7ff fe29 	bl	800e560 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs>
 800e90e:	3501      	adds	r5, #1
 800e910:	4606      	mov	r6, r0
 800e912:	e7ef      	b.n	800e8f4 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x110>
 800e914:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 800e918:	f8b8 3004 	ldrh.w	r3, [r8, #4]
 800e91c:	8829      	ldrh	r1, [r5, #0]
 800e91e:	1a9b      	subs	r3, r3, r2
 800e920:	1a5b      	subs	r3, r3, r1
 800e922:	f8ad 300c 	strh.w	r3, [sp, #12]
 800e926:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 800e92a:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 800e92e:	886d      	ldrh	r5, [r5, #2]
 800e930:	1a5b      	subs	r3, r3, r1
 800e932:	1b5b      	subs	r3, r3, r5
 800e934:	f8ad 2010 	strh.w	r2, [sp, #16]
 800e938:	f8ad 1012 	strh.w	r1, [sp, #18]
 800e93c:	f8ad 300e 	strh.w	r3, [sp, #14]
 800e940:	6803      	ldr	r3, [r0, #0]
 800e942:	aa03      	add	r2, sp, #12
 800e944:	689b      	ldr	r3, [r3, #8]
 800e946:	4641      	mov	r1, r8
 800e948:	4798      	blx	r3
 800e94a:	ed9f 0a26 	vldr	s0, [pc, #152]	@ 800e9e4 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x200>
 800e94e:	a805      	add	r0, sp, #20
 800e950:	f000 f882 	bl	800ea58 <_ZN8touchgfx9Matrix3x36rotateEf>
 800e954:	f9b8 3006 	ldrsh.w	r3, [r8, #6]
 800e958:	9a1b      	ldr	r2, [sp, #108]	@ 0x6c
 800e95a:	1a9b      	subs	r3, r3, r2
 800e95c:	ee00 3a90 	vmov	s1, r3
 800e960:	f9b8 3004 	ldrsh.w	r3, [r8, #4]
 800e964:	eef8 0ae0 	vcvt.f32.s32	s1, s1
 800e968:	1bdb      	subs	r3, r3, r7
 800e96a:	ee00 3a10 	vmov	s0, r3
 800e96e:	e795      	b.n	800e89c <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0xb8>
 800e970:	886b      	ldrh	r3, [r5, #2]
 800e972:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 800e976:	f8ad 300c 	strh.w	r3, [sp, #12]
 800e97a:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 800e97e:	8829      	ldrh	r1, [r5, #0]
 800e980:	1a9b      	subs	r3, r3, r2
 800e982:	1a5b      	subs	r3, r3, r1
 800e984:	f8ad 300e 	strh.w	r3, [sp, #14]
 800e988:	88eb      	ldrh	r3, [r5, #6]
 800e98a:	f8ad 2012 	strh.w	r2, [sp, #18]
 800e98e:	f8ad 3010 	strh.w	r3, [sp, #16]
 800e992:	6803      	ldr	r3, [r0, #0]
 800e994:	aa03      	add	r2, sp, #12
 800e996:	689b      	ldr	r3, [r3, #8]
 800e998:	4641      	mov	r1, r8
 800e99a:	4798      	blx	r3
 800e99c:	ed9f 0a12 	vldr	s0, [pc, #72]	@ 800e9e8 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x204>
 800e9a0:	a805      	add	r0, sp, #20
 800e9a2:	f000 f859 	bl	800ea58 <_ZN8touchgfx9Matrix3x36rotateEf>
 800e9a6:	f9b8 3006 	ldrsh.w	r3, [r8, #6]
 800e9aa:	eddd 7a1b 	vldr	s15, [sp, #108]	@ 0x6c
 800e9ae:	1bdb      	subs	r3, r3, r7
 800e9b0:	ee00 3a90 	vmov	s1, r3
 800e9b4:	eef8 0ae0 	vcvt.f32.s32	s1, s1
 800e9b8:	e748      	b.n	800e84c <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x68>
 800e9ba:	2100      	movs	r1, #0
 800e9bc:	6860      	ldr	r0, [r4, #4]
 800e9be:	8b22      	ldrh	r2, [r4, #24]
 800e9c0:	6803      	ldr	r3, [r0, #0]
 800e9c2:	9101      	str	r1, [sp, #4]
 800e9c4:	8b61      	ldrh	r1, [r4, #26]
 800e9c6:	9100      	str	r1, [sp, #0]
 800e9c8:	6a1d      	ldr	r5, [r3, #32]
 800e9ca:	e9d4 1302 	ldrd	r1, r3, [r4, #8]
 800e9ce:	47a8      	blx	r5
 800e9d0:	6860      	ldr	r0, [r4, #4]
 800e9d2:	6803      	ldr	r3, [r0, #0]
 800e9d4:	69db      	ldr	r3, [r3, #28]
 800e9d6:	4798      	blx	r3
 800e9d8:	b00e      	add	sp, #56	@ 0x38
 800e9da:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800e9de:	bf00      	nop
 800e9e0:	42b40000 	.word	0x42b40000
 800e9e4:	43340000 	.word	0x43340000
 800e9e8:	43870000 	.word	0x43870000

0800e9ec <_ZN8touchgfx9Matrix3x35resetEv>:
 800e9ec:	2300      	movs	r3, #0
 800e9ee:	f04f 527e 	mov.w	r2, #1065353216	@ 0x3f800000
 800e9f2:	6043      	str	r3, [r0, #4]
 800e9f4:	6002      	str	r2, [r0, #0]
 800e9f6:	6083      	str	r3, [r0, #8]
 800e9f8:	60c3      	str	r3, [r0, #12]
 800e9fa:	6102      	str	r2, [r0, #16]
 800e9fc:	6143      	str	r3, [r0, #20]
 800e9fe:	6183      	str	r3, [r0, #24]
 800ea00:	61c3      	str	r3, [r0, #28]
 800ea02:	6202      	str	r2, [r0, #32]
 800ea04:	4770      	bx	lr

0800ea06 <_ZN8touchgfx9Matrix3x3C1Ev>:
 800ea06:	b508      	push	{r3, lr}
 800ea08:	f7ff fff0 	bl	800e9ec <_ZN8touchgfx9Matrix3x35resetEv>
 800ea0c:	bd08      	pop	{r3, pc}

0800ea0e <_ZN8touchgfx9Matrix3x35scaleEff>:
 800ea0e:	edd0 7a00 	vldr	s15, [r0]
 800ea12:	ee67 7a80 	vmul.f32	s15, s15, s0
 800ea16:	edc0 7a00 	vstr	s15, [r0]
 800ea1a:	edd0 7a01 	vldr	s15, [r0, #4]
 800ea1e:	ee67 7a80 	vmul.f32	s15, s15, s0
 800ea22:	edc0 7a01 	vstr	s15, [r0, #4]
 800ea26:	edd0 7a02 	vldr	s15, [r0, #8]
 800ea2a:	ee27 0a80 	vmul.f32	s0, s15, s0
 800ea2e:	edd0 7a03 	vldr	s15, [r0, #12]
 800ea32:	ee67 7aa0 	vmul.f32	s15, s15, s1
 800ea36:	edc0 7a03 	vstr	s15, [r0, #12]
 800ea3a:	edd0 7a04 	vldr	s15, [r0, #16]
 800ea3e:	ee67 7aa0 	vmul.f32	s15, s15, s1
 800ea42:	edc0 7a04 	vstr	s15, [r0, #16]
 800ea46:	edd0 7a05 	vldr	s15, [r0, #20]
 800ea4a:	ee67 0aa0 	vmul.f32	s1, s15, s1
 800ea4e:	ed80 0a02 	vstr	s0, [r0, #8]
 800ea52:	edc0 0a05 	vstr	s1, [r0, #20]
 800ea56:	4770      	bx	lr

0800ea58 <_ZN8touchgfx9Matrix3x36rotateEf>:
 800ea58:	eddf 7a24 	vldr	s15, [pc, #144]	@ 800eaec <_ZN8touchgfx9Matrix3x36rotateEf+0x94>
 800ea5c:	ee20 0a27 	vmul.f32	s0, s0, s15
 800ea60:	eddf 7a23 	vldr	s15, [pc, #140]	@ 800eaf0 <_ZN8touchgfx9Matrix3x36rotateEf+0x98>
 800ea64:	b510      	push	{r4, lr}
 800ea66:	ed2d 8b02 	vpush	{d8}
 800ea6a:	eec0 8a27 	vdiv.f32	s17, s0, s15
 800ea6e:	eeb0 0a68 	vmov.f32	s0, s17
 800ea72:	4604      	mov	r4, r0
 800ea74:	f022 fe0e 	bl	8031694 <cosf>
 800ea78:	eeb0 8a40 	vmov.f32	s16, s0
 800ea7c:	eeb0 0a68 	vmov.f32	s0, s17
 800ea80:	f022 fe54 	bl	803172c <sinf>
 800ea84:	edd4 6a03 	vldr	s13, [r4, #12]
 800ea88:	edd4 4a00 	vldr	s9, [r4]
 800ea8c:	ee60 7a66 	vnmul.f32	s15, s0, s13
 800ea90:	ed94 7a04 	vldr	s14, [r4, #16]
 800ea94:	eee8 7a24 	vfma.f32	s15, s16, s9
 800ea98:	ed94 5a01 	vldr	s10, [r4, #4]
 800ea9c:	edc4 7a00 	vstr	s15, [r4]
 800eaa0:	ee60 7a47 	vnmul.f32	s15, s0, s14
 800eaa4:	eee8 7a05 	vfma.f32	s15, s16, s10
 800eaa8:	edc4 7a01 	vstr	s15, [r4, #4]
 800eaac:	edd4 7a05 	vldr	s15, [r4, #20]
 800eab0:	edd4 5a02 	vldr	s11, [r4, #8]
 800eab4:	ee20 6a67 	vnmul.f32	s12, s0, s15
 800eab8:	ee66 6a88 	vmul.f32	s13, s13, s16
 800eabc:	ee27 7a08 	vmul.f32	s14, s14, s16
 800eac0:	ee67 7a88 	vmul.f32	s15, s15, s16
 800eac4:	eea8 6a25 	vfma.f32	s12, s16, s11
 800eac8:	ecbd 8b02 	vpop	{d8}
 800eacc:	eee0 6a24 	vfma.f32	s13, s0, s9
 800ead0:	eea0 7a05 	vfma.f32	s14, s0, s10
 800ead4:	eee0 7a25 	vfma.f32	s15, s0, s11
 800ead8:	ed84 6a02 	vstr	s12, [r4, #8]
 800eadc:	edc4 6a03 	vstr	s13, [r4, #12]
 800eae0:	ed84 7a04 	vstr	s14, [r4, #16]
 800eae4:	edc4 7a05 	vstr	s15, [r4, #20]
 800eae8:	bd10      	pop	{r4, pc}
 800eaea:	bf00      	nop
 800eaec:	40490fdb 	.word	0x40490fdb
 800eaf0:	43340000 	.word	0x43340000

0800eaf4 <_ZN8touchgfx9Matrix3x39translateEff>:
 800eaf4:	ed90 6a06 	vldr	s12, [r0, #24]
 800eaf8:	edd0 7a00 	vldr	s15, [r0]
 800eafc:	eee6 7a00 	vfma.f32	s15, s12, s0
 800eb00:	edd0 6a07 	vldr	s13, [r0, #28]
 800eb04:	edc0 7a00 	vstr	s15, [r0]
 800eb08:	edd0 7a01 	vldr	s15, [r0, #4]
 800eb0c:	eee6 7a80 	vfma.f32	s15, s13, s0
 800eb10:	ed90 7a08 	vldr	s14, [r0, #32]
 800eb14:	edc0 7a01 	vstr	s15, [r0, #4]
 800eb18:	edd0 7a02 	vldr	s15, [r0, #8]
 800eb1c:	eee7 7a00 	vfma.f32	s15, s14, s0
 800eb20:	edc0 7a02 	vstr	s15, [r0, #8]
 800eb24:	edd0 7a03 	vldr	s15, [r0, #12]
 800eb28:	eee6 7a20 	vfma.f32	s15, s12, s1
 800eb2c:	edc0 7a03 	vstr	s15, [r0, #12]
 800eb30:	edd0 7a04 	vldr	s15, [r0, #16]
 800eb34:	eee6 7aa0 	vfma.f32	s15, s13, s1
 800eb38:	edc0 7a04 	vstr	s15, [r0, #16]
 800eb3c:	edd0 7a05 	vldr	s15, [r0, #20]
 800eb40:	eee7 7a20 	vfma.f32	s15, s14, s1
 800eb44:	edc0 7a05 	vstr	s15, [r0, #20]
 800eb48:	4770      	bx	lr

0800eb4a <_ZNK8touchgfx9Matrix3x315affineTransformERKNS0_5PointE>:
 800eb4a:	ed91 0a01 	vldr	s0, [r1, #4]
 800eb4e:	edd0 6a01 	vldr	s13, [r0, #4]
 800eb52:	edd0 0a04 	vldr	s1, [r0, #16]
 800eb56:	edd1 7a00 	vldr	s15, [r1]
 800eb5a:	ed90 7a03 	vldr	s14, [r0, #12]
 800eb5e:	ee60 0a20 	vmul.f32	s1, s0, s1
 800eb62:	ee20 0a26 	vmul.f32	s0, s0, s13
 800eb66:	edd0 6a00 	vldr	s13, [r0]
 800eb6a:	eee7 0a27 	vfma.f32	s1, s14, s15
 800eb6e:	eea6 0aa7 	vfma.f32	s0, s13, s15
 800eb72:	ed90 7a05 	vldr	s14, [r0, #20]
 800eb76:	edd0 7a02 	vldr	s15, [r0, #8]
 800eb7a:	ee70 0a87 	vadd.f32	s1, s1, s14
 800eb7e:	ee30 0a27 	vadd.f32	s0, s0, s15
 800eb82:	b084      	sub	sp, #16
 800eb84:	b004      	add	sp, #16
 800eb86:	4770      	bx	lr

0800eb88 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>:
 800eb88:	b530      	push	{r4, r5, lr}
 800eb8a:	8083      	strh	r3, [r0, #4]
 800eb8c:	f8bd 300c 	ldrh.w	r3, [sp, #12]
 800eb90:	f89d 5018 	ldrb.w	r5, [sp, #24]
 800eb94:	80c3      	strh	r3, [r0, #6]
 800eb96:	f89d 3010 	ldrb.w	r3, [sp, #16]
 800eb9a:	6141      	str	r1, [r0, #20]
 800eb9c:	7203      	strb	r3, [r0, #8]
 800eb9e:	f89d 3014 	ldrb.w	r3, [sp, #20]
 800eba2:	8302      	strh	r2, [r0, #24]
 800eba4:	7243      	strb	r3, [r0, #9]
 800eba6:	7a83      	ldrb	r3, [r0, #10]
 800eba8:	f365 0306 	bfi	r3, r5, #0, #7
 800ebac:	f89d 501c 	ldrb.w	r5, [sp, #28]
 800ebb0:	f365 13c7 	bfi	r3, r5, #7, #1
 800ebb4:	7283      	strb	r3, [r0, #10]
 800ebb6:	f89d 3020 	ldrb.w	r3, [sp, #32]
 800ebba:	72c3      	strb	r3, [r0, #11]
 800ebbc:	f89d 3024 	ldrb.w	r3, [sp, #36]	@ 0x24
 800ebc0:	7303      	strb	r3, [r0, #12]
 800ebc2:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 800ebc6:	81c3      	strh	r3, [r0, #14]
 800ebc8:	f8bd 302c 	ldrh.w	r3, [sp, #44]	@ 0x2c
 800ebcc:	8203      	strh	r3, [r0, #16]
 800ebce:	4b01      	ldr	r3, [pc, #4]	@ (800ebd4 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt+0x4c>)
 800ebd0:	6003      	str	r3, [r0, #0]
 800ebd2:	bd30      	pop	{r4, r5, pc}
 800ebd4:	08035e54 	.word	0x08035e54

0800ebd8 <_ZNK8touchgfx9ConstFont4findEt>:
 800ebd8:	b5f0      	push	{r4, r5, r6, r7, lr}
 800ebda:	6944      	ldr	r4, [r0, #20]
 800ebdc:	b3bc      	cbz	r4, 800ec4e <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800ebde:	88a3      	ldrh	r3, [r4, #4]
 800ebe0:	8b02      	ldrh	r2, [r0, #24]
 800ebe2:	1acb      	subs	r3, r1, r3
 800ebe4:	f102 32ff 	add.w	r2, r2, #4294967295
 800ebe8:	d431      	bmi.n	800ec4e <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800ebea:	4293      	cmp	r3, r2
 800ebec:	dd0c      	ble.n	800ec08 <_ZNK8touchgfx9ConstFont4findEt+0x30>
 800ebee:	230e      	movs	r3, #14
 800ebf0:	fb03 4302 	mla	r3, r3, r2, r4
 800ebf4:	889b      	ldrh	r3, [r3, #4]
 800ebf6:	1a5b      	subs	r3, r3, r1
 800ebf8:	1ad3      	subs	r3, r2, r3
 800ebfa:	429a      	cmp	r2, r3
 800ebfc:	db27      	blt.n	800ec4e <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800ebfe:	2b00      	cmp	r3, #0
 800ec00:	bfbc      	itt	lt
 800ec02:	2302      	movlt	r3, #2
 800ec04:	fb92 f3f3 	sdivlt	r3, r2, r3
 800ec08:	2500      	movs	r5, #0
 800ec0a:	260e      	movs	r6, #14
 800ec0c:	4295      	cmp	r5, r2
 800ec0e:	dc1e      	bgt.n	800ec4e <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800ec10:	fb06 4003 	mla	r0, r6, r3, r4
 800ec14:	8887      	ldrh	r7, [r0, #4]
 800ec16:	42b9      	cmp	r1, r7
 800ec18:	d01a      	beq.n	800ec50 <_ZNK8touchgfx9ConstFont4findEt+0x78>
 800ec1a:	d20d      	bcs.n	800ec38 <_ZNK8touchgfx9ConstFont4findEt+0x60>
 800ec1c:	1e5a      	subs	r2, r3, #1
 800ec1e:	4295      	cmp	r5, r2
 800ec20:	dc15      	bgt.n	800ec4e <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800ec22:	f830 3c0a 	ldrh.w	r3, [r0, #-10]
 800ec26:	1a5b      	subs	r3, r3, r1
 800ec28:	1ad3      	subs	r3, r2, r3
 800ec2a:	429a      	cmp	r2, r3
 800ec2c:	db0f      	blt.n	800ec4e <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800ec2e:	429d      	cmp	r5, r3
 800ec30:	ddec      	ble.n	800ec0c <_ZNK8touchgfx9ConstFont4findEt+0x34>
 800ec32:	1953      	adds	r3, r2, r5
 800ec34:	105b      	asrs	r3, r3, #1
 800ec36:	e7e9      	b.n	800ec0c <_ZNK8touchgfx9ConstFont4findEt+0x34>
 800ec38:	1c5d      	adds	r5, r3, #1
 800ec3a:	42aa      	cmp	r2, r5
 800ec3c:	db07      	blt.n	800ec4e <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800ec3e:	8a43      	ldrh	r3, [r0, #18]
 800ec40:	1acb      	subs	r3, r1, r3
 800ec42:	442b      	add	r3, r5
 800ec44:	429d      	cmp	r5, r3
 800ec46:	dc02      	bgt.n	800ec4e <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800ec48:	429a      	cmp	r2, r3
 800ec4a:	dadf      	bge.n	800ec0c <_ZNK8touchgfx9ConstFont4findEt+0x34>
 800ec4c:	e7f1      	b.n	800ec32 <_ZNK8touchgfx9ConstFont4findEt+0x5a>
 800ec4e:	2000      	movs	r0, #0
 800ec50:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800ec52 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh>:
 800ec52:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800ec54:	4604      	mov	r4, r0
 800ec56:	4617      	mov	r7, r2
 800ec58:	461e      	mov	r6, r3
 800ec5a:	b911      	cbnz	r1, 800ec62 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x10>
 800ec5c:	2500      	movs	r5, #0
 800ec5e:	4628      	mov	r0, r5
 800ec60:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800ec62:	290a      	cmp	r1, #10
 800ec64:	d0fa      	beq.n	800ec5c <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 800ec66:	f64f 62ff 	movw	r2, #65279	@ 0xfeff
 800ec6a:	4291      	cmp	r1, r2
 800ec6c:	d0f6      	beq.n	800ec5c <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 800ec6e:	f242 020b 	movw	r2, #8203	@ 0x200b
 800ec72:	4291      	cmp	r1, r2
 800ec74:	d0f2      	beq.n	800ec5c <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 800ec76:	f7ff ffaf 	bl	800ebd8 <_ZNK8touchgfx9ConstFont4findEt>
 800ec7a:	4605      	mov	r5, r0
 800ec7c:	b950      	cbnz	r0, 800ec94 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x42>
 800ec7e:	6823      	ldr	r3, [r4, #0]
 800ec80:	4620      	mov	r0, r4
 800ec82:	691b      	ldr	r3, [r3, #16]
 800ec84:	4798      	blx	r3
 800ec86:	4601      	mov	r1, r0
 800ec88:	4620      	mov	r0, r4
 800ec8a:	f7ff ffa5 	bl	800ebd8 <_ZNK8touchgfx9ConstFont4findEt>
 800ec8e:	4605      	mov	r5, r0
 800ec90:	2800      	cmp	r0, #0
 800ec92:	d0e3      	beq.n	800ec5c <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 800ec94:	6823      	ldr	r3, [r4, #0]
 800ec96:	4629      	mov	r1, r5
 800ec98:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 800ec9a:	4620      	mov	r0, r4
 800ec9c:	4798      	blx	r3
 800ec9e:	6038      	str	r0, [r7, #0]
 800eca0:	6823      	ldr	r3, [r4, #0]
 800eca2:	4620      	mov	r0, r4
 800eca4:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800eca6:	4798      	blx	r3
 800eca8:	7030      	strb	r0, [r6, #0]
 800ecaa:	e7d8      	b.n	800ec5e <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xc>

0800ecac <_ZNK8touchgfx10ClickEvent12getEventTypeEv>:
 800ecac:	2000      	movs	r0, #0
 800ecae:	4770      	bx	lr

0800ecb0 <_ZNK8touchgfx9DragEvent12getEventTypeEv>:
 800ecb0:	2001      	movs	r0, #1
 800ecb2:	4770      	bx	lr

0800ecb4 <_ZNK8touchgfx12GestureEvent12getEventTypeEv>:
 800ecb4:	2002      	movs	r0, #2
 800ecb6:	4770      	bx	lr

0800ecb8 <_ZN8touchgfx6ScreenD1Ev>:
 800ecb8:	4770      	bx	lr

0800ecba <_ZN8touchgfx12GestureEventD1Ev>:
 800ecba:	4770      	bx	lr

0800ecbc <_ZN8touchgfx9DragEventD1Ev>:
 800ecbc:	4770      	bx	lr

0800ecbe <_ZN8touchgfx10ClickEventD1Ev>:
 800ecbe:	4770      	bx	lr

0800ecc0 <_ZN8touchgfx10ClickEventD0Ev>:
 800ecc0:	b510      	push	{r4, lr}
 800ecc2:	4604      	mov	r4, r0
 800ecc4:	210c      	movs	r1, #12
 800ecc6:	f022 fb7e 	bl	80313c6 <_ZdlPvj>
 800ecca:	4620      	mov	r0, r4
 800eccc:	bd10      	pop	{r4, pc}

0800ecce <_ZN8touchgfx9DragEventD0Ev>:
 800ecce:	b510      	push	{r4, lr}
 800ecd0:	4604      	mov	r4, r0
 800ecd2:	2110      	movs	r1, #16
 800ecd4:	f022 fb77 	bl	80313c6 <_ZdlPvj>
 800ecd8:	4620      	mov	r0, r4
 800ecda:	bd10      	pop	{r4, pc}

0800ecdc <_ZN8touchgfx12GestureEventD0Ev>:
 800ecdc:	b510      	push	{r4, lr}
 800ecde:	4604      	mov	r4, r0
 800ece0:	210c      	movs	r1, #12
 800ece2:	f022 fb70 	bl	80313c6 <_ZdlPvj>
 800ece6:	4620      	mov	r0, r4
 800ece8:	bd10      	pop	{r4, pc}

0800ecea <_ZN8touchgfx6ScreenD0Ev>:
 800ecea:	b510      	push	{r4, lr}
 800ecec:	4604      	mov	r4, r0
 800ecee:	213c      	movs	r1, #60	@ 0x3c
 800ecf0:	f022 fb69 	bl	80313c6 <_ZdlPvj>
 800ecf4:	4620      	mov	r0, r4
 800ecf6:	bd10      	pop	{r4, pc}

0800ecf8 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE>:
 800ecf8:	b530      	push	{r4, r5, lr}
 800ecfa:	460d      	mov	r5, r1
 800ecfc:	6b01      	ldr	r1, [r0, #48]	@ 0x30
 800ecfe:	b087      	sub	sp, #28
 800ed00:	4604      	mov	r4, r0
 800ed02:	b301      	cbz	r1, 800ed46 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x4e>
 800ed04:	a801      	add	r0, sp, #4
 800ed06:	f7ff fc05 	bl	800e514 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800ed0a:	892a      	ldrh	r2, [r5, #8]
 800ed0c:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800ed10:	7928      	ldrb	r0, [r5, #4]
 800ed12:	1ad2      	subs	r2, r2, r3
 800ed14:	8ea3      	ldrh	r3, [r4, #52]	@ 0x34
 800ed16:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 800ed1a:	441a      	add	r2, r3
 800ed1c:	896b      	ldrh	r3, [r5, #10]
 800ed1e:	f8bd 5006 	ldrh.w	r5, [sp, #6]
 800ed22:	f88d 0010 	strb.w	r0, [sp, #16]
 800ed26:	1b5b      	subs	r3, r3, r5
 800ed28:	8ee5      	ldrh	r5, [r4, #54]	@ 0x36
 800ed2a:	6b20      	ldr	r0, [r4, #48]	@ 0x30
 800ed2c:	442b      	add	r3, r5
 800ed2e:	4d07      	ldr	r5, [pc, #28]	@ (800ed4c <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x54>)
 800ed30:	f8ad 1012 	strh.w	r1, [sp, #18]
 800ed34:	9503      	str	r5, [sp, #12]
 800ed36:	f8ad 2014 	strh.w	r2, [sp, #20]
 800ed3a:	f8ad 3016 	strh.w	r3, [sp, #22]
 800ed3e:	6803      	ldr	r3, [r0, #0]
 800ed40:	a903      	add	r1, sp, #12
 800ed42:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 800ed44:	4798      	blx	r3
 800ed46:	b007      	add	sp, #28
 800ed48:	bd30      	pop	{r4, r5, pc}
 800ed4a:	bf00      	nop
 800ed4c:	08035ee4 	.word	0x08035ee4

0800ed50 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>:
 800ed50:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800ed54:	6b03      	ldr	r3, [r0, #48]	@ 0x30
 800ed56:	b08a      	sub	sp, #40	@ 0x28
 800ed58:	4604      	mov	r4, r0
 800ed5a:	460d      	mov	r5, r1
 800ed5c:	b113      	cbz	r3, 800ed64 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x14>
 800ed5e:	790b      	ldrb	r3, [r1, #4]
 800ed60:	2b00      	cmp	r3, #0
 800ed62:	d044      	beq.n	800edee <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 800ed64:	f104 0804 	add.w	r8, r4, #4
 800ed68:	4641      	mov	r1, r8
 800ed6a:	a803      	add	r0, sp, #12
 800ed6c:	f7ff fbd2 	bl	800e514 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800ed70:	792b      	ldrb	r3, [r5, #4]
 800ed72:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 800ed76:	f9bd 600e 	ldrsh.w	r6, [sp, #14]
 800ed7a:	b983      	cbnz	r3, 800ed9e <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x4e>
 800ed7c:	892a      	ldrh	r2, [r5, #8]
 800ed7e:	88e9      	ldrh	r1, [r5, #6]
 800ed80:	f104 0336 	add.w	r3, r4, #54	@ 0x36
 800ed84:	1b92      	subs	r2, r2, r6
 800ed86:	1bc9      	subs	r1, r1, r7
 800ed88:	9301      	str	r3, [sp, #4]
 800ed8a:	f104 0334 	add.w	r3, r4, #52	@ 0x34
 800ed8e:	9300      	str	r3, [sp, #0]
 800ed90:	b212      	sxth	r2, r2
 800ed92:	f104 0330 	add.w	r3, r4, #48	@ 0x30
 800ed96:	b209      	sxth	r1, r1
 800ed98:	4640      	mov	r0, r8
 800ed9a:	f7fb ffc9 	bl	800ad30 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>
 800ed9e:	6b21      	ldr	r1, [r4, #48]	@ 0x30
 800eda0:	b329      	cbz	r1, 800edee <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 800eda2:	a805      	add	r0, sp, #20
 800eda4:	f7ff fbb6 	bl	800e514 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800eda8:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 800edac:	792b      	ldrb	r3, [r5, #4]
 800edae:	1abf      	subs	r7, r7, r2
 800edb0:	88ea      	ldrh	r2, [r5, #6]
 800edb2:	6b20      	ldr	r0, [r4, #48]	@ 0x30
 800edb4:	4417      	add	r7, r2
 800edb6:	8ea2      	ldrh	r2, [r4, #52]	@ 0x34
 800edb8:	f88d 3020 	strb.w	r3, [sp, #32]
 800edbc:	4417      	add	r7, r2
 800edbe:	f8bd 2016 	ldrh.w	r2, [sp, #22]
 800edc2:	f8ad 7022 	strh.w	r7, [sp, #34]	@ 0x22
 800edc6:	1ab6      	subs	r6, r6, r2
 800edc8:	892a      	ldrh	r2, [r5, #8]
 800edca:	a907      	add	r1, sp, #28
 800edcc:	4416      	add	r6, r2
 800edce:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
 800edd0:	4416      	add	r6, r2
 800edd2:	f8ad 6024 	strh.w	r6, [sp, #36]	@ 0x24
 800edd6:	2600      	movs	r6, #0
 800edd8:	4a06      	ldr	r2, [pc, #24]	@ (800edf4 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0xa4>)
 800edda:	f8ad 6026 	strh.w	r6, [sp, #38]	@ 0x26
 800edde:	9207      	str	r2, [sp, #28]
 800ede0:	6803      	ldr	r3, [r0, #0]
 800ede2:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800ede4:	4798      	blx	r3
 800ede6:	792b      	ldrb	r3, [r5, #4]
 800ede8:	b10b      	cbz	r3, 800edee <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 800edea:	e9c4 660c 	strd	r6, r6, [r4, #48]	@ 0x30
 800edee:	b00a      	add	sp, #40	@ 0x28
 800edf0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800edf4:	08035ebc 	.word	0x08035ebc

0800edf8 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE>:
 800edf8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800edfc:	460c      	mov	r4, r1
 800edfe:	6b01      	ldr	r1, [r0, #48]	@ 0x30
 800ee00:	b088      	sub	sp, #32
 800ee02:	4605      	mov	r5, r0
 800ee04:	2900      	cmp	r1, #0
 800ee06:	d06d      	beq.n	800eee4 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xec>
 800ee08:	4668      	mov	r0, sp
 800ee0a:	f7ff fb83 	bl	800e514 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800ee0e:	8ea9      	ldrh	r1, [r5, #52]	@ 0x34
 800ee10:	88e3      	ldrh	r3, [r4, #6]
 800ee12:	f9bd 8000 	ldrsh.w	r8, [sp]
 800ee16:	440b      	add	r3, r1
 800ee18:	b21b      	sxth	r3, r3
 800ee1a:	4543      	cmp	r3, r8
 800ee1c:	f9bd 7002 	ldrsh.w	r7, [sp, #2]
 800ee20:	db31      	blt.n	800ee86 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 800ee22:	f8bd c004 	ldrh.w	ip, [sp, #4]
 800ee26:	44c4      	add	ip, r8
 800ee28:	fa0f fc8c 	sxth.w	ip, ip
 800ee2c:	4563      	cmp	r3, ip
 800ee2e:	da2a      	bge.n	800ee86 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 800ee30:	8eea      	ldrh	r2, [r5, #54]	@ 0x36
 800ee32:	8926      	ldrh	r6, [r4, #8]
 800ee34:	4416      	add	r6, r2
 800ee36:	b236      	sxth	r6, r6
 800ee38:	42be      	cmp	r6, r7
 800ee3a:	db24      	blt.n	800ee86 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 800ee3c:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 800ee40:	4438      	add	r0, r7
 800ee42:	b200      	sxth	r0, r0
 800ee44:	4286      	cmp	r6, r0
 800ee46:	da1e      	bge.n	800ee86 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 800ee48:	8963      	ldrh	r3, [r4, #10]
 800ee4a:	4419      	add	r1, r3
 800ee4c:	b209      	sxth	r1, r1
 800ee4e:	4541      	cmp	r1, r8
 800ee50:	db08      	blt.n	800ee64 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 800ee52:	4561      	cmp	r1, ip
 800ee54:	da06      	bge.n	800ee64 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 800ee56:	89a3      	ldrh	r3, [r4, #12]
 800ee58:	441a      	add	r2, r3
 800ee5a:	b212      	sxth	r2, r2
 800ee5c:	42ba      	cmp	r2, r7
 800ee5e:	db01      	blt.n	800ee64 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 800ee60:	4282      	cmp	r2, r0
 800ee62:	db10      	blt.n	800ee86 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 800ee64:	4b21      	ldr	r3, [pc, #132]	@ (800eeec <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf4>)
 800ee66:	6b28      	ldr	r0, [r5, #48]	@ 0x30
 800ee68:	9304      	str	r3, [sp, #16]
 800ee6a:	2302      	movs	r3, #2
 800ee6c:	f88d 3014 	strb.w	r3, [sp, #20]
 800ee70:	2300      	movs	r3, #0
 800ee72:	f8ad 3016 	strh.w	r3, [sp, #22]
 800ee76:	f8ad 3018 	strh.w	r3, [sp, #24]
 800ee7a:	f8ad 301a 	strh.w	r3, [sp, #26]
 800ee7e:	6803      	ldr	r3, [r0, #0]
 800ee80:	a904      	add	r1, sp, #16
 800ee82:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800ee84:	4798      	blx	r3
 800ee86:	1d29      	adds	r1, r5, #4
 800ee88:	a802      	add	r0, sp, #8
 800ee8a:	f7ff fb43 	bl	800e514 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800ee8e:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 800ee92:	88e0      	ldrh	r0, [r4, #6]
 800ee94:	eba3 0808 	sub.w	r8, r3, r8
 800ee98:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 800ee9c:	7921      	ldrb	r1, [r4, #4]
 800ee9e:	1bdf      	subs	r7, r3, r7
 800eea0:	b2bb      	uxth	r3, r7
 800eea2:	f8b5 c034 	ldrh.w	ip, [r5, #52]	@ 0x34
 800eea6:	fa1f f888 	uxth.w	r8, r8
 800eeaa:	8922      	ldrh	r2, [r4, #8]
 800eeac:	8967      	ldrh	r7, [r4, #10]
 800eeae:	89a4      	ldrh	r4, [r4, #12]
 800eeb0:	4440      	add	r0, r8
 800eeb2:	8eee      	ldrh	r6, [r5, #54]	@ 0x36
 800eeb4:	4460      	add	r0, ip
 800eeb6:	441a      	add	r2, r3
 800eeb8:	44b8      	add	r8, r7
 800eeba:	4423      	add	r3, r4
 800eebc:	4c0c      	ldr	r4, [pc, #48]	@ (800eef0 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf8>)
 800eebe:	f8ad 0016 	strh.w	r0, [sp, #22]
 800eec2:	4433      	add	r3, r6
 800eec4:	4432      	add	r2, r6
 800eec6:	44e0      	add	r8, ip
 800eec8:	6b28      	ldr	r0, [r5, #48]	@ 0x30
 800eeca:	f88d 1014 	strb.w	r1, [sp, #20]
 800eece:	9404      	str	r4, [sp, #16]
 800eed0:	f8ad 2018 	strh.w	r2, [sp, #24]
 800eed4:	f8ad 801a 	strh.w	r8, [sp, #26]
 800eed8:	f8ad 301c 	strh.w	r3, [sp, #28]
 800eedc:	6803      	ldr	r3, [r0, #0]
 800eede:	a904      	add	r1, sp, #16
 800eee0:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800eee2:	4798      	blx	r3
 800eee4:	b008      	add	sp, #32
 800eee6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800eeea:	bf00      	nop
 800eeec:	08035ebc 	.word	0x08035ebc
 800eef0:	08035ed0 	.word	0x08035ed0

0800eef4 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>:
 800eef4:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800eef6:	4604      	mov	r4, r0
 800eef8:	f934 2f0c 	ldrsh.w	r2, [r4, #12]!
 800eefc:	3201      	adds	r2, #1
 800eefe:	d112      	bne.n	800ef26 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv+0x32>
 800ef00:	2500      	movs	r5, #0
 800ef02:	9500      	str	r5, [sp, #0]
 800ef04:	466d      	mov	r5, sp
 800ef06:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 800ef0a:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 800ef0e:	6803      	ldr	r3, [r0, #0]
 800ef10:	f8ad 1004 	strh.w	r1, [sp, #4]
 800ef14:	f8ad 2006 	strh.w	r2, [sp, #6]
 800ef18:	4629      	mov	r1, r5
 800ef1a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800ef1c:	4798      	blx	r3
 800ef1e:	e895 0003 	ldmia.w	r5, {r0, r1}
 800ef22:	e884 0003 	stmia.w	r4, {r0, r1}
 800ef26:	4620      	mov	r0, r4
 800ef28:	b003      	add	sp, #12
 800ef2a:	bd30      	pop	{r4, r5, pc}

0800ef2c <_ZN8touchgfx8Drawable13getCachedAbsXEv>:
 800ef2c:	b513      	push	{r0, r1, r4, lr}
 800ef2e:	f9b0 3020 	ldrsh.w	r3, [r0, #32]
 800ef32:	4604      	mov	r4, r0
 800ef34:	3301      	adds	r3, #1
 800ef36:	d109      	bne.n	800ef4c <_ZN8touchgfx8Drawable13getCachedAbsXEv+0x20>
 800ef38:	4601      	mov	r1, r0
 800ef3a:	4668      	mov	r0, sp
 800ef3c:	f7ff faea 	bl	800e514 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800ef40:	f8bd 3000 	ldrh.w	r3, [sp]
 800ef44:	8423      	strh	r3, [r4, #32]
 800ef46:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800ef4a:	8463      	strh	r3, [r4, #34]	@ 0x22
 800ef4c:	f9b4 0020 	ldrsh.w	r0, [r4, #32]
 800ef50:	b002      	add	sp, #8
 800ef52:	bd10      	pop	{r4, pc}

0800ef54 <_ZN8touchgfx8Drawable13getCachedAbsYEv>:
 800ef54:	b513      	push	{r0, r1, r4, lr}
 800ef56:	f9b0 3022 	ldrsh.w	r3, [r0, #34]	@ 0x22
 800ef5a:	4604      	mov	r4, r0
 800ef5c:	3301      	adds	r3, #1
 800ef5e:	d109      	bne.n	800ef74 <_ZN8touchgfx8Drawable13getCachedAbsYEv+0x20>
 800ef60:	4601      	mov	r1, r0
 800ef62:	4668      	mov	r0, sp
 800ef64:	f7ff fad6 	bl	800e514 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800ef68:	f8bd 3000 	ldrh.w	r3, [sp]
 800ef6c:	8423      	strh	r3, [r4, #32]
 800ef6e:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800ef72:	8463      	strh	r3, [r4, #34]	@ 0x22
 800ef74:	f9b4 0022 	ldrsh.w	r0, [r4, #34]	@ 0x22
 800ef78:	b002      	add	sp, #8
 800ef7a:	bd10      	pop	{r4, pc}

0800ef7c <_ZN8touchgfx6ScreenC1Ev>:
 800ef7c:	b570      	push	{r4, r5, r6, lr}
 800ef7e:	4605      	mov	r5, r0
 800ef80:	4b16      	ldr	r3, [pc, #88]	@ (800efdc <_ZN8touchgfx6ScreenC1Ev+0x60>)
 800ef82:	2101      	movs	r1, #1
 800ef84:	f845 3b04 	str.w	r3, [r5], #4
 800ef88:	2300      	movs	r3, #0
 800ef8a:	4604      	mov	r4, r0
 800ef8c:	8103      	strh	r3, [r0, #8]
 800ef8e:	8143      	strh	r3, [r0, #10]
 800ef90:	8183      	strh	r3, [r0, #12]
 800ef92:	81c3      	strh	r3, [r0, #14]
 800ef94:	8203      	strh	r3, [r0, #16]
 800ef96:	8243      	strh	r3, [r0, #18]
 800ef98:	8283      	strh	r3, [r0, #20]
 800ef9a:	82c3      	strh	r3, [r0, #22]
 800ef9c:	e9c0 3306 	strd	r3, r3, [r0, #24]
 800efa0:	6203      	str	r3, [r0, #32]
 800efa2:	8483      	strh	r3, [r0, #36]	@ 0x24
 800efa4:	84c3      	strh	r3, [r0, #38]	@ 0x26
 800efa6:	f880 3028 	strb.w	r3, [r0, #40]	@ 0x28
 800efaa:	4a0d      	ldr	r2, [pc, #52]	@ (800efe0 <_ZN8touchgfx6ScreenC1Ev+0x64>)
 800efac:	e9c0 330b 	strd	r3, r3, [r0, #44]	@ 0x2c
 800efb0:	6343      	str	r3, [r0, #52]	@ 0x34
 800efb2:	4b0c      	ldr	r3, [pc, #48]	@ (800efe4 <_ZN8touchgfx6ScreenC1Ev+0x68>)
 800efb4:	6042      	str	r2, [r0, #4]
 800efb6:	f9b3 6000 	ldrsh.w	r6, [r3]
 800efba:	6b93      	ldr	r3, [r2, #56]	@ 0x38
 800efbc:	4a0a      	ldr	r2, [pc, #40]	@ (800efe8 <_ZN8touchgfx6ScreenC1Ev+0x6c>)
 800efbe:	f880 1029 	strb.w	r1, [r0, #41]	@ 0x29
 800efc2:	f880 1038 	strb.w	r1, [r0, #56]	@ 0x38
 800efc6:	f9b2 1000 	ldrsh.w	r1, [r2]
 800efca:	4628      	mov	r0, r5
 800efcc:	4798      	blx	r3
 800efce:	6863      	ldr	r3, [r4, #4]
 800efd0:	4628      	mov	r0, r5
 800efd2:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800efd4:	4631      	mov	r1, r6
 800efd6:	4798      	blx	r3
 800efd8:	4620      	mov	r0, r4
 800efda:	bd70      	pop	{r4, r5, r6, pc}
 800efdc:	08035ef8 	.word	0x08035ef8
 800efe0:	08035be0 	.word	0x08035be0
 800efe4:	2008309a 	.word	0x2008309a
 800efe8:	20083098 	.word	0x20083098

0800efec <_ZN8touchgfx6Screen4drawEv>:
 800efec:	b507      	push	{r0, r1, r2, lr}
 800efee:	2100      	movs	r1, #0
 800eff0:	4b08      	ldr	r3, [pc, #32]	@ (800f014 <_ZN8touchgfx6Screen4drawEv+0x28>)
 800eff2:	9100      	str	r1, [sp, #0]
 800eff4:	f9b3 2000 	ldrsh.w	r2, [r3]
 800eff8:	4b07      	ldr	r3, [pc, #28]	@ (800f018 <_ZN8touchgfx6Screen4drawEv+0x2c>)
 800effa:	f8ad 2004 	strh.w	r2, [sp, #4]
 800effe:	f9b3 3000 	ldrsh.w	r3, [r3]
 800f002:	4669      	mov	r1, sp
 800f004:	f8ad 3006 	strh.w	r3, [sp, #6]
 800f008:	6803      	ldr	r3, [r0, #0]
 800f00a:	689b      	ldr	r3, [r3, #8]
 800f00c:	4798      	blx	r3
 800f00e:	b003      	add	sp, #12
 800f010:	f85d fb04 	ldr.w	pc, [sp], #4
 800f014:	20083098 	.word	0x20083098
 800f018:	2008309a 	.word	0x2008309a

0800f01c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>:
 800f01c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f020:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 800f024:	b089      	sub	sp, #36	@ 0x24
 800f026:	2b00      	cmp	r3, #0
 800f028:	4680      	mov	r8, r0
 800f02a:	460c      	mov	r4, r1
 800f02c:	4615      	mov	r5, r2
 800f02e:	dd0e      	ble.n	800f04e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 800f030:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 800f034:	2b00      	cmp	r3, #0
 800f036:	dd0a      	ble.n	800f04e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 800f038:	4628      	mov	r0, r5
 800f03a:	f7ff ff5b 	bl	800eef4 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 800f03e:	4621      	mov	r1, r4
 800f040:	f7fe f877 	bl	800d132 <_ZNK8touchgfx4Rect9intersectERKS0_>
 800f044:	69eb      	ldr	r3, [r5, #28]
 800f046:	b928      	cbnz	r0, 800f054 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x38>
 800f048:	461d      	mov	r5, r3
 800f04a:	2b00      	cmp	r3, #0
 800f04c:	d1f4      	bne.n	800f038 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1c>
 800f04e:	b009      	add	sp, #36	@ 0x24
 800f050:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f054:	ae04      	add	r6, sp, #16
 800f056:	2b00      	cmp	r3, #0
 800f058:	f000 80b5 	beq.w	800f1c6 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 800f05c:	682b      	ldr	r3, [r5, #0]
 800f05e:	4629      	mov	r1, r5
 800f060:	68db      	ldr	r3, [r3, #12]
 800f062:	a802      	add	r0, sp, #8
 800f064:	4798      	blx	r3
 800f066:	4628      	mov	r0, r5
 800f068:	f7ff ff60 	bl	800ef2c <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 800f06c:	f8bd 7008 	ldrh.w	r7, [sp, #8]
 800f070:	4407      	add	r7, r0
 800f072:	4628      	mov	r0, r5
 800f074:	f7ff ff6e 	bl	800ef54 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 800f078:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 800f07c:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 800f080:	4418      	add	r0, r3
 800f082:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 800f086:	4621      	mov	r1, r4
 800f088:	f8ad 0012 	strh.w	r0, [sp, #18]
 800f08c:	b23f      	sxth	r7, r7
 800f08e:	4630      	mov	r0, r6
 800f090:	f8ad 2014 	strh.w	r2, [sp, #20]
 800f094:	f8ad 3016 	strh.w	r3, [sp, #22]
 800f098:	f8ad 7010 	strh.w	r7, [sp, #16]
 800f09c:	f7fb ff28 	bl	800aef0 <_ZN8touchgfx4RectaNERKS0_>
 800f0a0:	4628      	mov	r0, r5
 800f0a2:	f7ff ff27 	bl	800eef4 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 800f0a6:	4602      	mov	r2, r0
 800f0a8:	e896 0003 	ldmia.w	r6, {r0, r1}
 800f0ac:	ab06      	add	r3, sp, #24
 800f0ae:	e883 0003 	stmia.w	r3, {r0, r1}
 800f0b2:	4611      	mov	r1, r2
 800f0b4:	4618      	mov	r0, r3
 800f0b6:	f7fb ff1b 	bl	800aef0 <_ZN8touchgfx4RectaNERKS0_>
 800f0ba:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 800f0be:	f9b4 1000 	ldrsh.w	r1, [r4]
 800f0c2:	f9bd a01a 	ldrsh.w	sl, [sp, #26]
 800f0c6:	4299      	cmp	r1, r3
 800f0c8:	f9bd b01c 	ldrsh.w	fp, [sp, #28]
 800f0cc:	f9bd 901e 	ldrsh.w	r9, [sp, #30]
 800f0d0:	d10b      	bne.n	800f0ea <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 800f0d2:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 800f0d6:	4552      	cmp	r2, sl
 800f0d8:	d107      	bne.n	800f0ea <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 800f0da:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 800f0de:	455a      	cmp	r2, fp
 800f0e0:	d103      	bne.n	800f0ea <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 800f0e2:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 800f0e6:	454a      	cmp	r2, r9
 800f0e8:	d06d      	beq.n	800f1c6 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 800f0ea:	f1bb 0f00 	cmp.w	fp, #0
 800f0ee:	dd65      	ble.n	800f1bc <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 800f0f0:	f1b9 0f00 	cmp.w	r9, #0
 800f0f4:	dd62      	ble.n	800f1bc <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 800f0f6:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 800f0fa:	fa1f f08a 	uxth.w	r0, sl
 800f0fe:	4552      	cmp	r2, sl
 800f100:	9000      	str	r0, [sp, #0]
 800f102:	da12      	bge.n	800f12a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x10e>
 800f104:	9301      	str	r3, [sp, #4]
 800f106:	9b00      	ldr	r3, [sp, #0]
 800f108:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 800f10c:	f8ad 2012 	strh.w	r2, [sp, #18]
 800f110:	1a9a      	subs	r2, r3, r2
 800f112:	f8ad 1010 	strh.w	r1, [sp, #16]
 800f116:	f8ad 0014 	strh.w	r0, [sp, #20]
 800f11a:	f8ad 2016 	strh.w	r2, [sp, #22]
 800f11e:	69ea      	ldr	r2, [r5, #28]
 800f120:	4631      	mov	r1, r6
 800f122:	4640      	mov	r0, r8
 800f124:	f7ff ff7a 	bl	800f01c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800f128:	9b01      	ldr	r3, [sp, #4]
 800f12a:	f9b4 2000 	ldrsh.w	r2, [r4]
 800f12e:	b29f      	uxth	r7, r3
 800f130:	429a      	cmp	r2, r3
 800f132:	da0d      	bge.n	800f150 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x134>
 800f134:	f8ad 2010 	strh.w	r2, [sp, #16]
 800f138:	1aba      	subs	r2, r7, r2
 800f13a:	f8ad a012 	strh.w	sl, [sp, #18]
 800f13e:	f8ad 2014 	strh.w	r2, [sp, #20]
 800f142:	f8ad 9016 	strh.w	r9, [sp, #22]
 800f146:	69ea      	ldr	r2, [r5, #28]
 800f148:	4631      	mov	r1, r6
 800f14a:	4640      	mov	r0, r8
 800f14c:	f7ff ff66 	bl	800f01c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800f150:	8822      	ldrh	r2, [r4, #0]
 800f152:	88a3      	ldrh	r3, [r4, #4]
 800f154:	445f      	add	r7, fp
 800f156:	4413      	add	r3, r2
 800f158:	b29b      	uxth	r3, r3
 800f15a:	b2bf      	uxth	r7, r7
 800f15c:	b23a      	sxth	r2, r7
 800f15e:	b219      	sxth	r1, r3
 800f160:	4291      	cmp	r1, r2
 800f162:	dd0d      	ble.n	800f180 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x164>
 800f164:	1bdb      	subs	r3, r3, r7
 800f166:	f8ad 2010 	strh.w	r2, [sp, #16]
 800f16a:	f8ad a012 	strh.w	sl, [sp, #18]
 800f16e:	f8ad 3014 	strh.w	r3, [sp, #20]
 800f172:	f8ad 9016 	strh.w	r9, [sp, #22]
 800f176:	69ea      	ldr	r2, [r5, #28]
 800f178:	4631      	mov	r1, r6
 800f17a:	4640      	mov	r0, r8
 800f17c:	f7ff ff4e 	bl	800f01c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800f180:	88e2      	ldrh	r2, [r4, #6]
 800f182:	8863      	ldrh	r3, [r4, #2]
 800f184:	4413      	add	r3, r2
 800f186:	9a00      	ldr	r2, [sp, #0]
 800f188:	b29b      	uxth	r3, r3
 800f18a:	444a      	add	r2, r9
 800f18c:	fa1f f982 	uxth.w	r9, r2
 800f190:	fa0f f289 	sxth.w	r2, r9
 800f194:	b219      	sxth	r1, r3
 800f196:	428a      	cmp	r2, r1
 800f198:	da15      	bge.n	800f1c6 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 800f19a:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 800f19e:	f9b4 0000 	ldrsh.w	r0, [r4]
 800f1a2:	eba3 0309 	sub.w	r3, r3, r9
 800f1a6:	f8ad 1014 	strh.w	r1, [sp, #20]
 800f1aa:	f8ad 0010 	strh.w	r0, [sp, #16]
 800f1ae:	f8ad 2012 	strh.w	r2, [sp, #18]
 800f1b2:	f8ad 3016 	strh.w	r3, [sp, #22]
 800f1b6:	69ea      	ldr	r2, [r5, #28]
 800f1b8:	4631      	mov	r1, r6
 800f1ba:	e001      	b.n	800f1c0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a4>
 800f1bc:	4621      	mov	r1, r4
 800f1be:	69ea      	ldr	r2, [r5, #28]
 800f1c0:	4640      	mov	r0, r8
 800f1c2:	f7ff ff2b 	bl	800f01c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800f1c6:	4628      	mov	r0, r5
 800f1c8:	f7ff fe94 	bl	800eef4 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 800f1cc:	4633      	mov	r3, r6
 800f1ce:	4602      	mov	r2, r0
 800f1d0:	6861      	ldr	r1, [r4, #4]
 800f1d2:	6820      	ldr	r0, [r4, #0]
 800f1d4:	c303      	stmia	r3!, {r0, r1}
 800f1d6:	4611      	mov	r1, r2
 800f1d8:	4630      	mov	r0, r6
 800f1da:	f7fb fe89 	bl	800aef0 <_ZN8touchgfx4RectaNERKS0_>
 800f1de:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 800f1e2:	2b00      	cmp	r3, #0
 800f1e4:	f77f af33 	ble.w	800f04e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 800f1e8:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 800f1ec:	2b00      	cmp	r3, #0
 800f1ee:	f77f af2e 	ble.w	800f04e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 800f1f2:	4628      	mov	r0, r5
 800f1f4:	f7ff fe9a 	bl	800ef2c <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 800f1f8:	f8bd 3010 	ldrh.w	r3, [sp, #16]
 800f1fc:	1a18      	subs	r0, r3, r0
 800f1fe:	f8ad 0010 	strh.w	r0, [sp, #16]
 800f202:	4628      	mov	r0, r5
 800f204:	f7ff fea6 	bl	800ef54 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 800f208:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800f20c:	4631      	mov	r1, r6
 800f20e:	1a18      	subs	r0, r3, r0
 800f210:	f8ad 0012 	strh.w	r0, [sp, #18]
 800f214:	682b      	ldr	r3, [r5, #0]
 800f216:	4628      	mov	r0, r5
 800f218:	689b      	ldr	r3, [r3, #8]
 800f21a:	4798      	blx	r3
 800f21c:	e717      	b.n	800f04e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>

0800f21e <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>:
 800f21e:	b570      	push	{r4, r5, r6, lr}
 800f220:	2300      	movs	r3, #0
 800f222:	460c      	mov	r4, r1
 800f224:	b086      	sub	sp, #24
 800f226:	1d06      	adds	r6, r0, #4
 800f228:	4631      	mov	r1, r6
 800f22a:	4605      	mov	r5, r0
 800f22c:	a802      	add	r0, sp, #8
 800f22e:	9301      	str	r3, [sp, #4]
 800f230:	f7ff f970 	bl	800e514 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800f234:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 800f238:	8822      	ldrh	r2, [r4, #0]
 800f23a:	f8bd 100a 	ldrh.w	r1, [sp, #10]
 800f23e:	1ad2      	subs	r2, r2, r3
 800f240:	8863      	ldrh	r3, [r4, #2]
 800f242:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 800f246:	1a5b      	subs	r3, r3, r1
 800f248:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 800f24c:	f8ad 2010 	strh.w	r2, [sp, #16]
 800f250:	f8ad 0014 	strh.w	r0, [sp, #20]
 800f254:	f8ad 1016 	strh.w	r1, [sp, #22]
 800f258:	aa01      	add	r2, sp, #4
 800f25a:	a904      	add	r1, sp, #16
 800f25c:	4630      	mov	r0, r6
 800f25e:	f8ad 3012 	strh.w	r3, [sp, #18]
 800f262:	f7fb ff1d 	bl	800b0a0 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>
 800f266:	9a01      	ldr	r2, [sp, #4]
 800f268:	b11a      	cbz	r2, 800f272 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE+0x54>
 800f26a:	4621      	mov	r1, r4
 800f26c:	4628      	mov	r0, r5
 800f26e:	f7ff fed5 	bl	800f01c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800f272:	b006      	add	sp, #24
 800f274:	bd70      	pop	{r4, r5, r6, pc}

0800f276 <_ZN8touchgfx6Screen4drawERNS_4RectE>:
 800f276:	b530      	push	{r4, r5, lr}
 800f278:	4602      	mov	r2, r0
 800f27a:	b085      	sub	sp, #20
 800f27c:	460d      	mov	r5, r1
 800f27e:	466b      	mov	r3, sp
 800f280:	4604      	mov	r4, r0
 800f282:	f852 0f08 	ldr.w	r0, [r2, #8]!
 800f286:	6851      	ldr	r1, [r2, #4]
 800f288:	c303      	stmia	r3!, {r0, r1}
 800f28a:	4629      	mov	r1, r5
 800f28c:	4668      	mov	r0, sp
 800f28e:	f7fb fe2f 	bl	800aef0 <_ZN8touchgfx4RectaNERKS0_>
 800f292:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
 800f296:	b12b      	cbz	r3, 800f2a4 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2e>
 800f298:	4669      	mov	r1, sp
 800f29a:	4620      	mov	r0, r4
 800f29c:	f7ff ffbf 	bl	800f21e <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>
 800f2a0:	b005      	add	sp, #20
 800f2a2:	bd30      	pop	{r4, r5, pc}
 800f2a4:	3404      	adds	r4, #4
 800f2a6:	4621      	mov	r1, r4
 800f2a8:	a802      	add	r0, sp, #8
 800f2aa:	f7ff f933 	bl	800e514 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800f2ae:	f8bd 3000 	ldrh.w	r3, [sp]
 800f2b2:	f8bd 2008 	ldrh.w	r2, [sp, #8]
 800f2b6:	4669      	mov	r1, sp
 800f2b8:	1a9b      	subs	r3, r3, r2
 800f2ba:	f8ad 3000 	strh.w	r3, [sp]
 800f2be:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 800f2c2:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800f2c6:	4620      	mov	r0, r4
 800f2c8:	1a9b      	subs	r3, r3, r2
 800f2ca:	f8ad 3002 	strh.w	r3, [sp, #2]
 800f2ce:	f7fb feae 	bl	800b02e <_ZNK8touchgfx9Container4drawERKNS_4RectE>
 800f2d2:	e7e5      	b.n	800f2a0 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2a>

0800f2d4 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>:
 800f2d4:	460b      	mov	r3, r1
 800f2d6:	680a      	ldr	r2, [r1, #0]
 800f2d8:	1d01      	adds	r1, r0, #4
 800f2da:	6992      	ldr	r2, [r2, #24]
 800f2dc:	4618      	mov	r0, r3
 800f2de:	4710      	bx	r2

0800f2e0 <_ZN8touchgfx12TextProviderC1Ev>:
 800f2e0:	b538      	push	{r3, r4, r5, lr}
 800f2e2:	2500      	movs	r5, #0
 800f2e4:	2302      	movs	r3, #2
 800f2e6:	4604      	mov	r4, r0
 800f2e8:	e9c0 5500 	strd	r5, r5, [r0]
 800f2ec:	7403      	strb	r3, [r0, #16]
 800f2ee:	6145      	str	r5, [r0, #20]
 800f2f0:	7605      	strb	r5, [r0, #24]
 800f2f2:	83c5      	strh	r5, [r0, #30]
 800f2f4:	8405      	strh	r5, [r0, #32]
 800f2f6:	86c5      	strh	r5, [r0, #54]	@ 0x36
 800f2f8:	8705      	strh	r5, [r0, #56]	@ 0x38
 800f2fa:	87c5      	strh	r5, [r0, #62]	@ 0x3e
 800f2fc:	f8a0 5040 	strh.w	r5, [r0, #64]	@ 0x40
 800f300:	e9c0 5511 	strd	r5, r5, [r0, #68]	@ 0x44
 800f304:	220e      	movs	r2, #14
 800f306:	4629      	mov	r1, r5
 800f308:	304c      	adds	r0, #76	@ 0x4c
 800f30a:	f023 fc3c 	bl	8032b86 <memset>
 800f30e:	2301      	movs	r3, #1
 800f310:	4620      	mov	r0, r4
 800f312:	f8a4 505a 	strh.w	r5, [r4, #90]	@ 0x5a
 800f316:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
 800f31a:	f8a4 505e 	strh.w	r5, [r4, #94]	@ 0x5e
 800f31e:	f884 3060 	strb.w	r3, [r4, #96]	@ 0x60
 800f322:	f884 5061 	strb.w	r5, [r4, #97]	@ 0x61
 800f326:	f7f4 faf9 	bl	800391c <_ZN8touchgfx12TextProvider18initializeInternalEv>
 800f32a:	4620      	mov	r0, r4
 800f32c:	bd38      	pop	{r3, r4, r5, pc}

0800f32e <_ZN8touchgfx12TextProvider19getNextCharInternalEv>:
 800f32e:	b530      	push	{r4, r5, lr}
 800f330:	2500      	movs	r5, #0
 800f332:	2401      	movs	r4, #1
 800f334:	6843      	ldr	r3, [r0, #4]
 800f336:	b913      	cbnz	r3, 800f33e <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x10>
 800f338:	6803      	ldr	r3, [r0, #0]
 800f33a:	b313      	cbz	r3, 800f382 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 800f33c:	6043      	str	r3, [r0, #4]
 800f33e:	7e03      	ldrb	r3, [r0, #24]
 800f340:	b143      	cbz	r3, 800f354 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x26>
 800f342:	6943      	ldr	r3, [r0, #20]
 800f344:	b12b      	cbz	r3, 800f352 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 800f346:	881a      	ldrh	r2, [r3, #0]
 800f348:	b11a      	cbz	r2, 800f352 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 800f34a:	1c9a      	adds	r2, r3, #2
 800f34c:	6142      	str	r2, [r0, #20]
 800f34e:	8818      	ldrh	r0, [r3, #0]
 800f350:	bd30      	pop	{r4, r5, pc}
 800f352:	7605      	strb	r5, [r0, #24]
 800f354:	6843      	ldr	r3, [r0, #4]
 800f356:	8819      	ldrh	r1, [r3, #0]
 800f358:	b199      	cbz	r1, 800f382 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 800f35a:	1c9a      	adds	r2, r3, #2
 800f35c:	2902      	cmp	r1, #2
 800f35e:	6042      	str	r2, [r0, #4]
 800f360:	d1f5      	bne.n	800f34e <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x20>
 800f362:	7c03      	ldrb	r3, [r0, #16]
 800f364:	2b01      	cmp	r3, #1
 800f366:	d8e5      	bhi.n	800f334 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 800f368:	1c5a      	adds	r2, r3, #1
 800f36a:	7402      	strb	r2, [r0, #16]
 800f36c:	3302      	adds	r3, #2
 800f36e:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 800f372:	6143      	str	r3, [r0, #20]
 800f374:	2b00      	cmp	r3, #0
 800f376:	d0dd      	beq.n	800f334 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 800f378:	881b      	ldrh	r3, [r3, #0]
 800f37a:	2b00      	cmp	r3, #0
 800f37c:	d0da      	beq.n	800f334 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 800f37e:	7604      	strb	r4, [r0, #24]
 800f380:	e7d8      	b.n	800f334 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 800f382:	2000      	movs	r0, #0
 800f384:	e7e4      	b.n	800f350 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x22>

0800f386 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>:
 800f386:	6001      	str	r1, [r0, #0]
 800f388:	2100      	movs	r1, #0
 800f38a:	b430      	push	{r4, r5}
 800f38c:	6041      	str	r1, [r0, #4]
 800f38e:	6815      	ldr	r5, [r2, #0]
 800f390:	6085      	str	r5, [r0, #8]
 800f392:	6852      	ldr	r2, [r2, #4]
 800f394:	6443      	str	r3, [r0, #68]	@ 0x44
 800f396:	9b02      	ldr	r3, [sp, #8]
 800f398:	60c2      	str	r2, [r0, #12]
 800f39a:	7401      	strb	r1, [r0, #16]
 800f39c:	6141      	str	r1, [r0, #20]
 800f39e:	7601      	strb	r1, [r0, #24]
 800f3a0:	8701      	strh	r1, [r0, #56]	@ 0x38
 800f3a2:	8401      	strh	r1, [r0, #32]
 800f3a4:	f8a0 1040 	strh.w	r1, [r0, #64]	@ 0x40
 800f3a8:	6483      	str	r3, [r0, #72]	@ 0x48
 800f3aa:	bc30      	pop	{r4, r5}
 800f3ac:	f7f4 bab6 	b.w	800391c <_ZN8touchgfx12TextProvider18initializeInternalEv>

0800f3b0 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>:
 800f3b0:	b5f0      	push	{r4, r5, r6, r7, lr}
 800f3b2:	4605      	mov	r5, r0
 800f3b4:	4608      	mov	r0, r1
 800f3b6:	b1e9      	cbz	r1, 800f3f4 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x44>
 800f3b8:	f105 044c 	add.w	r4, r5, #76	@ 0x4c
 800f3bc:	460b      	mov	r3, r1
 800f3be:	4622      	mov	r2, r4
 800f3c0:	f101 0708 	add.w	r7, r1, #8
 800f3c4:	4626      	mov	r6, r4
 800f3c6:	6818      	ldr	r0, [r3, #0]
 800f3c8:	6859      	ldr	r1, [r3, #4]
 800f3ca:	3308      	adds	r3, #8
 800f3cc:	c603      	stmia	r6!, {r0, r1}
 800f3ce:	42bb      	cmp	r3, r7
 800f3d0:	4634      	mov	r4, r6
 800f3d2:	d1f7      	bne.n	800f3c4 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x14>
 800f3d4:	6818      	ldr	r0, [r3, #0]
 800f3d6:	6030      	str	r0, [r6, #0]
 800f3d8:	4610      	mov	r0, r2
 800f3da:	889b      	ldrh	r3, [r3, #4]
 800f3dc:	80b3      	strh	r3, [r6, #4]
 800f3de:	f895 3059 	ldrb.w	r3, [r5, #89]	@ 0x59
 800f3e2:	015b      	lsls	r3, r3, #5
 800f3e4:	f403 7180 	and.w	r1, r3, #256	@ 0x100
 800f3e8:	f895 3052 	ldrb.w	r3, [r5, #82]	@ 0x52
 800f3ec:	430b      	orrs	r3, r1
 800f3ee:	425b      	negs	r3, r3
 800f3f0:	f885 3055 	strb.w	r3, [r5, #85]	@ 0x55
 800f3f4:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800f3f6 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>:
 800f3f6:	b538      	push	{r3, r4, r5, lr}
 800f3f8:	460c      	mov	r4, r1
 800f3fa:	6811      	ldr	r1, [r2, #0]
 800f3fc:	4610      	mov	r0, r2
 800f3fe:	68cd      	ldr	r5, [r1, #12]
 800f400:	4619      	mov	r1, r3
 800f402:	47a8      	blx	r5
 800f404:	2800      	cmp	r0, #0
 800f406:	bf08      	it	eq
 800f408:	4620      	moveq	r0, r4
 800f40a:	bd38      	pop	{r3, r4, r5, pc}

0800f40c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>:
 800f40c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800f40e:	4604      	mov	r4, r0
 800f410:	4615      	mov	r5, r2
 800f412:	4608      	mov	r0, r1
 800f414:	b93a      	cbnz	r2, 800f426 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1a>
 800f416:	f8a4 205a 	strh.w	r2, [r4, #90]	@ 0x5a
 800f41a:	f8a4 205c 	strh.w	r2, [r4, #92]	@ 0x5c
 800f41e:	f8a4 205e 	strh.w	r2, [r4, #94]	@ 0x5e
 800f422:	4628      	mov	r0, r5
 800f424:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800f426:	f46f 6763 	mvn.w	r7, #3632	@ 0xe30
 800f42a:	f892 c00d 	ldrb.w	ip, [r2, #13]
 800f42e:	8893      	ldrh	r3, [r2, #4]
 800f430:	ea4f 160c 	mov.w	r6, ip, lsl #4
 800f434:	f406 7280 	and.w	r2, r6, #256	@ 0x100
 800f438:	79ee      	ldrb	r6, [r5, #7]
 800f43a:	4316      	orrs	r6, r2
 800f43c:	19da      	adds	r2, r3, r7
 800f43e:	b291      	uxth	r1, r2
 800f440:	291d      	cmp	r1, #29
 800f442:	b2b7      	uxth	r7, r6
 800f444:	d879      	bhi.n	800f53a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x12e>
 800f446:	2201      	movs	r2, #1
 800f448:	408a      	lsls	r2, r1
 800f44a:	4974      	ldr	r1, [pc, #464]	@ (800f61c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x210>)
 800f44c:	10f6      	asrs	r6, r6, #3
 800f44e:	420a      	tst	r2, r1
 800f450:	d12d      	bne.n	800f4ae <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa2>
 800f452:	f412 7f60 	tst.w	r2, #896	@ 0x380
 800f456:	d070      	beq.n	800f53a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x12e>
 800f458:	f104 024c 	add.w	r2, r4, #76	@ 0x4c
 800f45c:	462b      	mov	r3, r5
 800f45e:	f105 0e08 	add.w	lr, r5, #8
 800f462:	4615      	mov	r5, r2
 800f464:	4694      	mov	ip, r2
 800f466:	6818      	ldr	r0, [r3, #0]
 800f468:	6859      	ldr	r1, [r3, #4]
 800f46a:	3308      	adds	r3, #8
 800f46c:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 800f470:	4573      	cmp	r3, lr
 800f472:	4662      	mov	r2, ip
 800f474:	d1f6      	bne.n	800f464 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x58>
 800f476:	6818      	ldr	r0, [r3, #0]
 800f478:	f8cc 0000 	str.w	r0, [ip]
 800f47c:	889b      	ldrh	r3, [r3, #4]
 800f47e:	f8ac 3004 	strh.w	r3, [ip, #4]
 800f482:	f8b4 105c 	ldrh.w	r1, [r4, #92]	@ 0x5c
 800f486:	b2b3      	uxth	r3, r6
 800f488:	1aca      	subs	r2, r1, r3
 800f48a:	b292      	uxth	r2, r2
 800f48c:	f894 0059 	ldrb.w	r0, [r4, #89]	@ 0x59
 800f490:	f884 2054 	strb.w	r2, [r4, #84]	@ 0x54
 800f494:	10d2      	asrs	r2, r2, #3
 800f496:	f020 0060 	bic.w	r0, r0, #96	@ 0x60
 800f49a:	f002 0260 	and.w	r2, r2, #96	@ 0x60
 800f49e:	4302      	orrs	r2, r0
 800f4a0:	1bcf      	subs	r7, r1, r7
 800f4a2:	f884 2059 	strb.w	r2, [r4, #89]	@ 0x59
 800f4a6:	1afb      	subs	r3, r7, r3
 800f4a8:	f8a4 305c 	strh.w	r3, [r4, #92]	@ 0x5c
 800f4ac:	e7b9      	b.n	800f422 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 800f4ae:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 800f4b0:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 800f4b4:	8c59      	ldrh	r1, [r3, #34]	@ 0x22
 800f4b6:	f640 6333 	movw	r3, #3635	@ 0xe33
 800f4ba:	4299      	cmp	r1, r3
 800f4bc:	d110      	bne.n	800f4e0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xd4>
 800f4be:	6803      	ldr	r3, [r0, #0]
 800f4c0:	68db      	ldr	r3, [r3, #12]
 800f4c2:	4798      	blx	r3
 800f4c4:	7b41      	ldrb	r1, [r0, #13]
 800f4c6:	00cb      	lsls	r3, r1, #3
 800f4c8:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 800f4cc:	7a03      	ldrb	r3, [r0, #8]
 800f4ce:	0648      	lsls	r0, r1, #25
 800f4d0:	ea43 0302 	orr.w	r3, r3, r2
 800f4d4:	bf44      	itt	mi
 800f4d6:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 800f4da:	b21b      	sxthmi	r3, r3
 800f4dc:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
 800f4e0:	f8b4 305a 	ldrh.w	r3, [r4, #90]	@ 0x5a
 800f4e4:	462a      	mov	r2, r5
 800f4e6:	443b      	add	r3, r7
 800f4e8:	4433      	add	r3, r6
 800f4ea:	f104 064c 	add.w	r6, r4, #76	@ 0x4c
 800f4ee:	f105 0c08 	add.w	ip, r5, #8
 800f4f2:	4635      	mov	r5, r6
 800f4f4:	b29b      	uxth	r3, r3
 800f4f6:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
 800f4fa:	4637      	mov	r7, r6
 800f4fc:	6810      	ldr	r0, [r2, #0]
 800f4fe:	6851      	ldr	r1, [r2, #4]
 800f500:	3208      	adds	r2, #8
 800f502:	c703      	stmia	r7!, {r0, r1}
 800f504:	4562      	cmp	r2, ip
 800f506:	463e      	mov	r6, r7
 800f508:	d1f7      	bne.n	800f4fa <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xee>
 800f50a:	6810      	ldr	r0, [r2, #0]
 800f50c:	6038      	str	r0, [r7, #0]
 800f50e:	8892      	ldrh	r2, [r2, #4]
 800f510:	80ba      	strh	r2, [r7, #4]
 800f512:	f894 2059 	ldrb.w	r2, [r4, #89]	@ 0x59
 800f516:	f884 3054 	strb.w	r3, [r4, #84]	@ 0x54
 800f51a:	10db      	asrs	r3, r3, #3
 800f51c:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
 800f520:	f003 0360 	and.w	r3, r3, #96	@ 0x60
 800f524:	4313      	orrs	r3, r2
 800f526:	f884 3059 	strb.w	r3, [r4, #89]	@ 0x59
 800f52a:	f894 205e 	ldrb.w	r2, [r4, #94]	@ 0x5e
 800f52e:	f894 3055 	ldrb.w	r3, [r4, #85]	@ 0x55
 800f532:	1a9b      	subs	r3, r3, r2
 800f534:	f884 3055 	strb.w	r3, [r4, #85]	@ 0x55
 800f538:	e773      	b.n	800f422 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 800f53a:	f640 611b 	movw	r1, #3611	@ 0xe1b
 800f53e:	f023 0204 	bic.w	r2, r3, #4
 800f542:	428a      	cmp	r2, r1
 800f544:	d003      	beq.n	800f54e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x142>
 800f546:	f640 621d 	movw	r2, #3613	@ 0xe1d
 800f54a:	4293      	cmp	r3, r2
 800f54c:	d120      	bne.n	800f590 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x184>
 800f54e:	3b01      	subs	r3, #1
 800f550:	4602      	mov	r2, r0
 800f552:	b29b      	uxth	r3, r3
 800f554:	4629      	mov	r1, r5
 800f556:	4620      	mov	r0, r4
 800f558:	f7ff ff4d 	bl	800f3f6 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 800f55c:	7b41      	ldrb	r1, [r0, #13]
 800f55e:	00cb      	lsls	r3, r1, #3
 800f560:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 800f564:	7a03      	ldrb	r3, [r0, #8]
 800f566:	0649      	lsls	r1, r1, #25
 800f568:	ea43 0302 	orr.w	r3, r3, r2
 800f56c:	bf44      	itt	mi
 800f56e:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 800f572:	b21b      	sxthmi	r3, r3
 800f574:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
 800f578:	7b6b      	ldrb	r3, [r5, #13]
 800f57a:	7aaa      	ldrb	r2, [r5, #10]
 800f57c:	005b      	lsls	r3, r3, #1
 800f57e:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800f582:	4313      	orrs	r3, r2
 800f584:	115a      	asrs	r2, r3, #5
 800f586:	eb02 0393 	add.w	r3, r2, r3, lsr #2
 800f58a:	f8a4 305e 	strh.w	r3, [r4, #94]	@ 0x5e
 800f58e:	e036      	b.n	800f5fe <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1f2>
 800f590:	ea4f 02cc 	mov.w	r2, ip, lsl #3
 800f594:	f402 7180 	and.w	r1, r2, #256	@ 0x100
 800f598:	7a2a      	ldrb	r2, [r5, #8]
 800f59a:	f01c 0f40 	tst.w	ip, #64	@ 0x40
 800f59e:	ea42 0201 	orr.w	r2, r2, r1
 800f5a2:	f640 6109 	movw	r1, #3593	@ 0xe09
 800f5a6:	bf1c      	itt	ne
 800f5a8:	f5a2 7200 	subne.w	r2, r2, #512	@ 0x200
 800f5ac:	b212      	sxthne	r2, r2
 800f5ae:	f8a4 205a 	strh.w	r2, [r4, #90]	@ 0x5a
 800f5b2:	f023 0210 	bic.w	r2, r3, #16
 800f5b6:	428a      	cmp	r2, r1
 800f5b8:	d003      	beq.n	800f5c2 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1b6>
 800f5ba:	f640 6213 	movw	r2, #3603	@ 0xe13
 800f5be:	4293      	cmp	r3, r2
 800f5c0:	d12a      	bne.n	800f618 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x20c>
 800f5c2:	7b6e      	ldrb	r6, [r5, #13]
 800f5c4:	4629      	mov	r1, r5
 800f5c6:	0076      	lsls	r6, r6, #1
 800f5c8:	f406 7280 	and.w	r2, r6, #256	@ 0x100
 800f5cc:	7aae      	ldrb	r6, [r5, #10]
 800f5ce:	4316      	orrs	r6, r2
 800f5d0:	f640 6213 	movw	r2, #3603	@ 0xe13
 800f5d4:	4293      	cmp	r3, r2
 800f5d6:	bf18      	it	ne
 800f5d8:	f103 33ff 	addne.w	r3, r3, #4294967295
 800f5dc:	4602      	mov	r2, r0
 800f5de:	bf14      	ite	ne
 800f5e0:	b29b      	uxthne	r3, r3
 800f5e2:	f640 630c 	movweq	r3, #3596	@ 0xe0c
 800f5e6:	4620      	mov	r0, r4
 800f5e8:	f7ff ff05 	bl	800f3f6 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 800f5ec:	7b43      	ldrb	r3, [r0, #13]
 800f5ee:	7a82      	ldrb	r2, [r0, #10]
 800f5f0:	005b      	lsls	r3, r3, #1
 800f5f2:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800f5f6:	4313      	orrs	r3, r2
 800f5f8:	1af6      	subs	r6, r6, r3
 800f5fa:	f8a4 605e 	strh.w	r6, [r4, #94]	@ 0x5e
 800f5fe:	7b69      	ldrb	r1, [r5, #13]
 800f600:	00cb      	lsls	r3, r1, #3
 800f602:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 800f606:	7a2b      	ldrb	r3, [r5, #8]
 800f608:	4313      	orrs	r3, r2
 800f60a:	064a      	lsls	r2, r1, #25
 800f60c:	bf44      	itt	mi
 800f60e:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 800f612:	b21b      	sxthmi	r3, r3
 800f614:	1bdb      	subs	r3, r3, r7
 800f616:	e747      	b.n	800f4a8 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x9c>
 800f618:	2300      	movs	r3, #0
 800f61a:	e7b6      	b.n	800f58a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x17e>
 800f61c:	3fc00079 	.word	0x3fc00079

0800f620 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>:
 800f620:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800f624:	4604      	mov	r4, r0
 800f626:	b942      	cbnz	r2, 800f63a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1a>
 800f628:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 800f62c:	f8a0 305a 	strh.w	r3, [r0, #90]	@ 0x5a
 800f630:	f8a0 305c 	strh.w	r3, [r0, #92]	@ 0x5c
 800f634:	f8a4 305e 	strh.w	r3, [r4, #94]	@ 0x5e
 800f638:	e047      	b.n	800f6ca <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 800f63a:	7b51      	ldrb	r1, [r2, #13]
 800f63c:	8893      	ldrh	r3, [r2, #4]
 800f63e:	010d      	lsls	r5, r1, #4
 800f640:	f405 7080 	and.w	r0, r5, #256	@ 0x100
 800f644:	79d5      	ldrb	r5, [r2, #7]
 800f646:	4305      	orrs	r5, r0
 800f648:	2d04      	cmp	r5, #4
 800f64a:	bfcc      	ite	gt
 800f64c:	ea4f 0e95 	movgt.w	lr, r5, lsr #2
 800f650:	f04f 0e01 	movle.w	lr, #1
 800f654:	f5b3 6fdd 	cmp.w	r3, #1768	@ 0x6e8
 800f658:	f200 80ab 	bhi.w	800f7b2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x192>
 800f65c:	f240 60e7 	movw	r0, #1767	@ 0x6e7
 800f660:	4283      	cmp	r3, r0
 800f662:	d216      	bcs.n	800f692 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 800f664:	f240 605b 	movw	r0, #1627	@ 0x65b
 800f668:	4283      	cmp	r3, r0
 800f66a:	d859      	bhi.n	800f720 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x100>
 800f66c:	f240 6057 	movw	r0, #1623	@ 0x657
 800f670:	4283      	cmp	r3, r0
 800f672:	d20e      	bcs.n	800f692 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 800f674:	f5b3 6fca 	cmp.w	r3, #1616	@ 0x650
 800f678:	d24a      	bcs.n	800f710 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xf0>
 800f67a:	f240 604e 	movw	r0, #1614	@ 0x64e
 800f67e:	4283      	cmp	r3, r0
 800f680:	d207      	bcs.n	800f692 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 800f682:	f240 601a 	movw	r0, #1562	@ 0x61a
 800f686:	4283      	cmp	r3, r0
 800f688:	d02a      	beq.n	800f6e0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 800f68a:	d821      	bhi.n	800f6d0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xb0>
 800f68c:	f5b3 6fc2 	cmp.w	r3, #1552	@ 0x610
 800f690:	d35b      	bcc.n	800f74a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 800f692:	f9b4 305a 	ldrsh.w	r3, [r4, #90]	@ 0x5a
 800f696:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
 800f69a:	f040 80d0 	bne.w	800f83e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 800f69e:	f9b4 005c 	ldrsh.w	r0, [r4, #92]	@ 0x5c
 800f6a2:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
 800f6a6:	f040 80ca 	bne.w	800f83e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 800f6aa:	00cb      	lsls	r3, r1, #3
 800f6ac:	f403 7080 	and.w	r0, r3, #256	@ 0x100
 800f6b0:	7a13      	ldrb	r3, [r2, #8]
 800f6b2:	0649      	lsls	r1, r1, #25
 800f6b4:	ea43 0300 	orr.w	r3, r3, r0
 800f6b8:	bf44      	itt	mi
 800f6ba:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 800f6be:	b21b      	sxthmi	r3, r3
 800f6c0:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
 800f6c4:	1b5d      	subs	r5, r3, r5
 800f6c6:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
 800f6ca:	4610      	mov	r0, r2
 800f6cc:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800f6d0:	f240 604b 	movw	r0, #1611	@ 0x64b
 800f6d4:	4283      	cmp	r3, r0
 800f6d6:	d338      	bcc.n	800f74a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 800f6d8:	f240 604c 	movw	r0, #1612	@ 0x64c
 800f6dc:	4283      	cmp	r3, r0
 800f6de:	d9d8      	bls.n	800f692 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 800f6e0:	f9b4 005a 	ldrsh.w	r0, [r4, #90]	@ 0x5a
 800f6e4:	f9b4 305c 	ldrsh.w	r3, [r4, #92]	@ 0x5c
 800f6e8:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
 800f6ec:	f040 80f2 	bne.w	800f8d4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b4>
 800f6f0:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
 800f6f4:	f040 80ee 	bne.w	800f8d4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b4>
 800f6f8:	00cb      	lsls	r3, r1, #3
 800f6fa:	f403 7080 	and.w	r0, r3, #256	@ 0x100
 800f6fe:	7a13      	ldrb	r3, [r2, #8]
 800f700:	064e      	lsls	r6, r1, #25
 800f702:	ea43 0300 	orr.w	r3, r3, r0
 800f706:	bf44      	itt	mi
 800f708:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 800f70c:	b21b      	sxthmi	r3, r3
 800f70e:	e7d9      	b.n	800f6c4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa4>
 800f710:	f240 6054 	movw	r0, #1620	@ 0x654
 800f714:	4283      	cmp	r3, r0
 800f716:	d8e3      	bhi.n	800f6e0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 800f718:	f5b3 6fca 	cmp.w	r3, #1616	@ 0x650
 800f71c:	d9e0      	bls.n	800f6e0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 800f71e:	e7b8      	b.n	800f692 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 800f720:	f240 6074 	movw	r0, #1652	@ 0x674
 800f724:	4283      	cmp	r3, r0
 800f726:	d0b4      	beq.n	800f692 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 800f728:	d82d      	bhi.n	800f786 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x166>
 800f72a:	f240 605e 	movw	r0, #1630	@ 0x65e
 800f72e:	4283      	cmp	r3, r0
 800f730:	d804      	bhi.n	800f73c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x11c>
 800f732:	f240 605d 	movw	r0, #1629	@ 0x65d
 800f736:	4283      	cmp	r3, r0
 800f738:	d3d2      	bcc.n	800f6e0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 800f73a:	e7aa      	b.n	800f692 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 800f73c:	f240 605f 	movw	r0, #1631	@ 0x65f
 800f740:	4283      	cmp	r3, r0
 800f742:	d0cd      	beq.n	800f6e0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 800f744:	f5b3 6fce 	cmp.w	r3, #1648	@ 0x670
 800f748:	d0a3      	beq.n	800f692 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 800f74a:	00cb      	lsls	r3, r1, #3
 800f74c:	f403 7080 	and.w	r0, r3, #256	@ 0x100
 800f750:	7a13      	ldrb	r3, [r2, #8]
 800f752:	0649      	lsls	r1, r1, #25
 800f754:	ea43 0300 	orr.w	r3, r3, r0
 800f758:	bf44      	itt	mi
 800f75a:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 800f75e:	b21b      	sxthmi	r3, r3
 800f760:	1b5d      	subs	r5, r3, r5
 800f762:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
 800f766:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
 800f76a:	7b53      	ldrb	r3, [r2, #13]
 800f76c:	015b      	lsls	r3, r3, #5
 800f76e:	f403 7180 	and.w	r1, r3, #256	@ 0x100
 800f772:	7993      	ldrb	r3, [r2, #6]
 800f774:	430b      	orrs	r3, r1
 800f776:	2105      	movs	r1, #5
 800f778:	005b      	lsls	r3, r3, #1
 800f77a:	fb93 f3f1 	sdiv	r3, r3, r1
 800f77e:	f992 1009 	ldrsb.w	r1, [r2, #9]
 800f782:	440b      	add	r3, r1
 800f784:	e756      	b.n	800f634 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x14>
 800f786:	f240 60e2 	movw	r0, #1762	@ 0x6e2
 800f78a:	4283      	cmp	r3, r0
 800f78c:	d809      	bhi.n	800f7a2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x182>
 800f78e:	f240 60df 	movw	r0, #1759	@ 0x6df
 800f792:	4283      	cmp	r3, r0
 800f794:	f4bf af7d 	bcs.w	800f692 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 800f798:	f2a3 63d6 	subw	r3, r3, #1750	@ 0x6d6
 800f79c:	2b05      	cmp	r3, #5
 800f79e:	d8d4      	bhi.n	800f74a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 800f7a0:	e777      	b.n	800f692 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 800f7a2:	f240 60e3 	movw	r0, #1763	@ 0x6e3
 800f7a6:	4283      	cmp	r3, r0
 800f7a8:	d09a      	beq.n	800f6e0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 800f7aa:	f240 60e4 	movw	r0, #1764	@ 0x6e4
 800f7ae:	4283      	cmp	r3, r0
 800f7b0:	e7ca      	b.n	800f748 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 800f7b2:	f5b3 6f0f 	cmp.w	r3, #2288	@ 0x8f0
 800f7b6:	d22b      	bcs.n	800f810 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1f0>
 800f7b8:	f640 00ed 	movw	r0, #2285	@ 0x8ed
 800f7bc:	4283      	cmp	r3, r0
 800f7be:	d28f      	bcs.n	800f6e0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 800f7c0:	f640 00e5 	movw	r0, #2277	@ 0x8e5
 800f7c4:	4283      	cmp	r3, r0
 800f7c6:	d816      	bhi.n	800f7f6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d6>
 800f7c8:	f640 00e4 	movw	r0, #2276	@ 0x8e4
 800f7cc:	4283      	cmp	r3, r0
 800f7ce:	f4bf af60 	bcs.w	800f692 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 800f7d2:	f240 60ec 	movw	r0, #1772	@ 0x6ec
 800f7d6:	4283      	cmp	r3, r0
 800f7d8:	d80a      	bhi.n	800f7f0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d0>
 800f7da:	f240 60eb 	movw	r0, #1771	@ 0x6eb
 800f7de:	4283      	cmp	r3, r0
 800f7e0:	f4bf af57 	bcs.w	800f692 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 800f7e4:	f240 60ea 	movw	r0, #1770	@ 0x6ea
 800f7e8:	4283      	cmp	r3, r0
 800f7ea:	f43f af79 	beq.w	800f6e0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 800f7ee:	e7ac      	b.n	800f74a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 800f7f0:	f240 60ed 	movw	r0, #1773	@ 0x6ed
 800f7f4:	e7f8      	b.n	800f7e8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1c8>
 800f7f6:	f640 00e8 	movw	r0, #2280	@ 0x8e8
 800f7fa:	4283      	cmp	r3, r0
 800f7fc:	d802      	bhi.n	800f804 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e4>
 800f7fe:	f640 00e7 	movw	r0, #2279	@ 0x8e7
 800f802:	e798      	b.n	800f736 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x116>
 800f804:	f640 00e9 	movw	r0, #2281	@ 0x8e9
 800f808:	4283      	cmp	r3, r0
 800f80a:	f47f af42 	bne.w	800f692 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 800f80e:	e767      	b.n	800f6e0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 800f810:	f640 00f6 	movw	r0, #2294	@ 0x8f6
 800f814:	4283      	cmp	r3, r0
 800f816:	f43f af63 	beq.w	800f6e0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 800f81a:	d802      	bhi.n	800f822 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x202>
 800f81c:	f640 00f2 	movw	r0, #2290	@ 0x8f2
 800f820:	e7f2      	b.n	800f808 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e8>
 800f822:	f640 00fa 	movw	r0, #2298	@ 0x8fa
 800f826:	4283      	cmp	r3, r0
 800f828:	d805      	bhi.n	800f836 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x216>
 800f82a:	f640 00f9 	movw	r0, #2297	@ 0x8f9
 800f82e:	4283      	cmp	r3, r0
 800f830:	f4ff af2f 	bcc.w	800f692 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 800f834:	e754      	b.n	800f6e0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 800f836:	f640 00fe 	movw	r0, #2302	@ 0x8fe
 800f83a:	4283      	cmp	r3, r0
 800f83c:	e7af      	b.n	800f79e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x17e>
 800f83e:	f104 0c4c 	add.w	ip, r4, #76	@ 0x4c
 800f842:	4617      	mov	r7, r2
 800f844:	4666      	mov	r6, ip
 800f846:	f102 0808 	add.w	r8, r2, #8
 800f84a:	46e6      	mov	lr, ip
 800f84c:	6838      	ldr	r0, [r7, #0]
 800f84e:	6879      	ldr	r1, [r7, #4]
 800f850:	3708      	adds	r7, #8
 800f852:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 800f856:	4547      	cmp	r7, r8
 800f858:	46f4      	mov	ip, lr
 800f85a:	d1f6      	bne.n	800f84a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x22a>
 800f85c:	6838      	ldr	r0, [r7, #0]
 800f85e:	f8ce 0000 	str.w	r0, [lr]
 800f862:	88b9      	ldrh	r1, [r7, #4]
 800f864:	f8ae 1004 	strh.w	r1, [lr, #4]
 800f868:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	@ 0x5e
 800f86c:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
 800f870:	d009      	beq.n	800f886 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x266>
 800f872:	7b51      	ldrb	r1, [r2, #13]
 800f874:	7992      	ldrb	r2, [r2, #6]
 800f876:	0149      	lsls	r1, r1, #5
 800f878:	f401 7180 	and.w	r1, r1, #256	@ 0x100
 800f87c:	4311      	orrs	r1, r2
 800f87e:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 800f882:	f884 0055 	strb.w	r0, [r4, #85]	@ 0x55
 800f886:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
 800f88a:	b2ad      	uxth	r5, r5
 800f88c:	d00d      	beq.n	800f8aa <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x28a>
 800f88e:	442b      	add	r3, r5
 800f890:	b29b      	uxth	r3, r3
 800f892:	f894 2059 	ldrb.w	r2, [r4, #89]	@ 0x59
 800f896:	f884 3054 	strb.w	r3, [r4, #84]	@ 0x54
 800f89a:	10db      	asrs	r3, r3, #3
 800f89c:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
 800f8a0:	f003 0360 	and.w	r3, r3, #96	@ 0x60
 800f8a4:	4313      	orrs	r3, r2
 800f8a6:	f884 3059 	strb.w	r3, [r4, #89]	@ 0x59
 800f8aa:	f894 1059 	ldrb.w	r1, [r4, #89]	@ 0x59
 800f8ae:	00cb      	lsls	r3, r1, #3
 800f8b0:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 800f8b4:	f894 3054 	ldrb.w	r3, [r4, #84]	@ 0x54
 800f8b8:	064f      	lsls	r7, r1, #25
 800f8ba:	ea43 0302 	orr.w	r3, r3, r2
 800f8be:	bf44      	itt	mi
 800f8c0:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 800f8c4:	b21b      	sxthmi	r3, r3
 800f8c6:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
 800f8ca:	1b5b      	subs	r3, r3, r5
 800f8cc:	f8a4 305c 	strh.w	r3, [r4, #92]	@ 0x5c
 800f8d0:	4632      	mov	r2, r6
 800f8d2:	e6fa      	b.n	800f6ca <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 800f8d4:	f104 0c4c 	add.w	ip, r4, #76	@ 0x4c
 800f8d8:	4617      	mov	r7, r2
 800f8da:	4666      	mov	r6, ip
 800f8dc:	f102 0908 	add.w	r9, r2, #8
 800f8e0:	46e0      	mov	r8, ip
 800f8e2:	6838      	ldr	r0, [r7, #0]
 800f8e4:	6879      	ldr	r1, [r7, #4]
 800f8e6:	3708      	adds	r7, #8
 800f8e8:	e8a8 0003 	stmia.w	r8!, {r0, r1}
 800f8ec:	454f      	cmp	r7, r9
 800f8ee:	46c4      	mov	ip, r8
 800f8f0:	d1f6      	bne.n	800f8e0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2c0>
 800f8f2:	6838      	ldr	r0, [r7, #0]
 800f8f4:	f8c8 0000 	str.w	r0, [r8]
 800f8f8:	88b9      	ldrh	r1, [r7, #4]
 800f8fa:	f8a8 1004 	strh.w	r1, [r8, #4]
 800f8fe:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	@ 0x5e
 800f902:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
 800f906:	d009      	beq.n	800f91c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2fc>
 800f908:	7b51      	ldrb	r1, [r2, #13]
 800f90a:	7992      	ldrb	r2, [r2, #6]
 800f90c:	0149      	lsls	r1, r1, #5
 800f90e:	f401 7180 	and.w	r1, r1, #256	@ 0x100
 800f912:	4311      	orrs	r1, r2
 800f914:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 800f918:	f884 0055 	strb.w	r0, [r4, #85]	@ 0x55
 800f91c:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
 800f920:	d00e      	beq.n	800f940 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x320>
 800f922:	eba3 030e 	sub.w	r3, r3, lr
 800f926:	f894 2059 	ldrb.w	r2, [r4, #89]	@ 0x59
 800f92a:	b29b      	uxth	r3, r3
 800f92c:	f884 3054 	strb.w	r3, [r4, #84]	@ 0x54
 800f930:	10db      	asrs	r3, r3, #3
 800f932:	f003 0360 	and.w	r3, r3, #96	@ 0x60
 800f936:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
 800f93a:	4313      	orrs	r3, r2
 800f93c:	f884 3059 	strb.w	r3, [r4, #89]	@ 0x59
 800f940:	f894 1059 	ldrb.w	r1, [r4, #89]	@ 0x59
 800f944:	00cb      	lsls	r3, r1, #3
 800f946:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 800f94a:	f894 3054 	ldrb.w	r3, [r4, #84]	@ 0x54
 800f94e:	0648      	lsls	r0, r1, #25
 800f950:	ea43 0302 	orr.w	r3, r3, r2
 800f954:	bf44      	itt	mi
 800f956:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 800f95a:	b21b      	sxthmi	r3, r3
 800f95c:	1b5d      	subs	r5, r3, r5
 800f95e:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
 800f962:	e7b5      	b.n	800f8d0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b0>

0800f964 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>:
 800f964:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800f968:	461e      	mov	r6, r3
 800f96a:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
 800f96c:	4604      	mov	r4, r0
 800f96e:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 800f972:	4617      	mov	r7, r2
 800f974:	f8b3 8022 	ldrh.w	r8, [r3, #34]	@ 0x22
 800f978:	f7f3 ff8e 	bl	8003898 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 800f97c:	4605      	mov	r5, r0
 800f97e:	b918      	cbnz	r0, 800f988 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x24>
 800f980:	6030      	str	r0, [r6, #0]
 800f982:	4628      	mov	r0, r5
 800f984:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800f988:	683b      	ldr	r3, [r7, #0]
 800f98a:	4601      	mov	r1, r0
 800f98c:	68db      	ldr	r3, [r3, #12]
 800f98e:	4638      	mov	r0, r7
 800f990:	4798      	blx	r3
 800f992:	f5a8 63c0 	sub.w	r3, r8, #1536	@ 0x600
 800f996:	f5b3 7f40 	cmp.w	r3, #768	@ 0x300
 800f99a:	4602      	mov	r2, r0
 800f99c:	6030      	str	r0, [r6, #0]
 800f99e:	d213      	bcs.n	800f9c8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x64>
 800f9a0:	4643      	mov	r3, r8
 800f9a2:	4639      	mov	r1, r7
 800f9a4:	4620      	mov	r0, r4
 800f9a6:	f7ff fe3b 	bl	800f620 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 800f9aa:	6030      	str	r0, [r6, #0]
 800f9ac:	6833      	ldr	r3, [r6, #0]
 800f9ae:	b143      	cbz	r3, 800f9c2 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x5e>
 800f9b0:	7b5a      	ldrb	r2, [r3, #13]
 800f9b2:	7a9b      	ldrb	r3, [r3, #10]
 800f9b4:	0052      	lsls	r2, r2, #1
 800f9b6:	f402 7280 	and.w	r2, r2, #256	@ 0x100
 800f9ba:	4313      	orrs	r3, r2
 800f9bc:	bf0c      	ite	eq
 800f9be:	2301      	moveq	r3, #1
 800f9c0:	2300      	movne	r3, #0
 800f9c2:	f884 3061 	strb.w	r3, [r4, #97]	@ 0x61
 800f9c6:	e7dc      	b.n	800f982 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x1e>
 800f9c8:	f5a5 6360 	sub.w	r3, r5, #3584	@ 0xe00
 800f9cc:	b29b      	uxth	r3, r3
 800f9ce:	2b7f      	cmp	r3, #127	@ 0x7f
 800f9d0:	d804      	bhi.n	800f9dc <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x78>
 800f9d2:	4639      	mov	r1, r7
 800f9d4:	4620      	mov	r0, r4
 800f9d6:	f7ff fd19 	bl	800f40c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 800f9da:	e7e6      	b.n	800f9aa <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>
 800f9dc:	f894 3061 	ldrb.w	r3, [r4, #97]	@ 0x61
 800f9e0:	2b00      	cmp	r3, #0
 800f9e2:	d0e3      	beq.n	800f9ac <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 800f9e4:	f640 1302 	movw	r3, #2306	@ 0x902
 800f9e8:	429d      	cmp	r5, r3
 800f9ea:	d1df      	bne.n	800f9ac <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 800f9ec:	4601      	mov	r1, r0
 800f9ee:	4620      	mov	r0, r4
 800f9f0:	f7ff fcde 	bl	800f3b0 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 800f9f4:	e7d9      	b.n	800f9aa <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>

0800f9f6 <_ZN8touchgfx12TextProvider15fillInputBufferEv>:
 800f9f6:	b510      	push	{r4, lr}
 800f9f8:	4604      	mov	r4, r0
 800f9fa:	f8b4 1040 	ldrh.w	r1, [r4, #64]	@ 0x40
 800f9fe:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
 800fa00:	b1f1      	cbz	r1, 800fa40 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4a>
 800fa02:	2b0a      	cmp	r3, #10
 800fa04:	d02f      	beq.n	800fa66 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 800fa06:	8fe2      	ldrh	r2, [r4, #62]	@ 0x3e
 800fa08:	3901      	subs	r1, #1
 800fa0a:	eb04 0042 	add.w	r0, r4, r2, lsl #1
 800fa0e:	8f40      	ldrh	r0, [r0, #58]	@ 0x3a
 800fa10:	f8a4 1040 	strh.w	r1, [r4, #64]	@ 0x40
 800fa14:	1c51      	adds	r1, r2, #1
 800fa16:	b289      	uxth	r1, r1
 800fa18:	2901      	cmp	r1, #1
 800fa1a:	bf84      	itt	hi
 800fa1c:	f102 32ff 	addhi.w	r2, r2, #4294967295
 800fa20:	87e2      	strhhi	r2, [r4, #62]	@ 0x3e
 800fa22:	f103 0201 	add.w	r2, r3, #1
 800fa26:	8722      	strh	r2, [r4, #56]	@ 0x38
 800fa28:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
 800fa2a:	bf98      	it	ls
 800fa2c:	87e1      	strhls	r1, [r4, #62]	@ 0x3e
 800fa2e:	4413      	add	r3, r2
 800fa30:	b29b      	uxth	r3, r3
 800fa32:	2b09      	cmp	r3, #9
 800fa34:	bf88      	it	hi
 800fa36:	3b0a      	subhi	r3, #10
 800fa38:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 800fa3c:	8458      	strh	r0, [r3, #34]	@ 0x22
 800fa3e:	e7dc      	b.n	800f9fa <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4>
 800fa40:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
 800fa42:	2b0a      	cmp	r3, #10
 800fa44:	d00f      	beq.n	800fa66 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 800fa46:	4620      	mov	r0, r4
 800fa48:	f7ff fc71 	bl	800f32e <_ZN8touchgfx12TextProvider19getNextCharInternalEv>
 800fa4c:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
 800fa4e:	1c5a      	adds	r2, r3, #1
 800fa50:	8722      	strh	r2, [r4, #56]	@ 0x38
 800fa52:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
 800fa54:	4413      	add	r3, r2
 800fa56:	b29b      	uxth	r3, r3
 800fa58:	2b09      	cmp	r3, #9
 800fa5a:	bf88      	it	hi
 800fa5c:	3b0a      	subhi	r3, #10
 800fa5e:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 800fa62:	8458      	strh	r0, [r3, #34]	@ 0x22
 800fa64:	e7ec      	b.n	800fa40 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4a>
 800fa66:	bd10      	pop	{r4, pc}

0800fa68 <_ZN8touchgfx12TextProvider11getNextCharEv>:
 800fa68:	b538      	push	{r3, r4, r5, lr}
 800fa6a:	4604      	mov	r4, r0
 800fa6c:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
 800fa6e:	eb00 0243 	add.w	r2, r0, r3, lsl #1
 800fa72:	8c55      	ldrh	r5, [r2, #34]	@ 0x22
 800fa74:	8f02      	ldrh	r2, [r0, #56]	@ 0x38
 800fa76:	3a01      	subs	r2, #1
 800fa78:	8702      	strh	r2, [r0, #56]	@ 0x38
 800fa7a:	1c5a      	adds	r2, r3, #1
 800fa7c:	b292      	uxth	r2, r2
 800fa7e:	2a09      	cmp	r2, #9
 800fa80:	bf86      	itte	hi
 800fa82:	3b09      	subhi	r3, #9
 800fa84:	86c3      	strhhi	r3, [r0, #54]	@ 0x36
 800fa86:	86c2      	strhls	r2, [r0, #54]	@ 0x36
 800fa88:	f7ff ffb5 	bl	800f9f6 <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 800fa8c:	8c23      	ldrh	r3, [r4, #32]
 800fa8e:	2b01      	cmp	r3, #1
 800fa90:	bf9c      	itt	ls
 800fa92:	3301      	addls	r3, #1
 800fa94:	8423      	strhls	r3, [r4, #32]
 800fa96:	8be3      	ldrh	r3, [r4, #30]
 800fa98:	b90b      	cbnz	r3, 800fa9e <_ZN8touchgfx12TextProvider11getNextCharEv+0x36>
 800fa9a:	2302      	movs	r3, #2
 800fa9c:	83e3      	strh	r3, [r4, #30]
 800fa9e:	8be3      	ldrh	r3, [r4, #30]
 800faa0:	4628      	mov	r0, r5
 800faa2:	3b01      	subs	r3, #1
 800faa4:	b29b      	uxth	r3, r3
 800faa6:	83e3      	strh	r3, [r4, #30]
 800faa8:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 800faac:	8365      	strh	r5, [r4, #26]
 800faae:	bd38      	pop	{r3, r4, r5, pc}

0800fab0 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>:
 800fab0:	428a      	cmp	r2, r1
 800fab2:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800fab6:	8ec7      	ldrh	r7, [r0, #54]	@ 0x36
 800fab8:	d931      	bls.n	800fb1e <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x6e>
 800faba:	8f05      	ldrh	r5, [r0, #56]	@ 0x38
 800fabc:	1a54      	subs	r4, r2, r1
 800fabe:	19ee      	adds	r6, r5, r7
 800fac0:	3e01      	subs	r6, #1
 800fac2:	fa1f fe84 	uxth.w	lr, r4
 800fac6:	b2b4      	uxth	r4, r6
 800fac8:	eba4 090e 	sub.w	r9, r4, lr
 800facc:	f8b0 8040 	ldrh.w	r8, [r0, #64]	@ 0x40
 800fad0:	f8b0 c03e 	ldrh.w	ip, [r0, #62]	@ 0x3e
 800fad4:	fa1f f989 	uxth.w	r9, r9
 800fad8:	2c09      	cmp	r4, #9
 800fada:	4626      	mov	r6, r4
 800fadc:	bf88      	it	hi
 800fade:	f1a4 060a 	subhi.w	r6, r4, #10
 800fae2:	f1bc 0f00 	cmp.w	ip, #0
 800fae6:	bf08      	it	eq
 800fae8:	f04f 0c02 	moveq.w	ip, #2
 800faec:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 800faf0:	f10c 3cff 	add.w	ip, ip, #4294967295
 800faf4:	3c01      	subs	r4, #1
 800faf6:	f8b6 a022 	ldrh.w	sl, [r6, #34]	@ 0x22
 800fafa:	fa1f fc8c 	uxth.w	ip, ip
 800fafe:	b2a4      	uxth	r4, r4
 800fb00:	eb00 064c 	add.w	r6, r0, ip, lsl #1
 800fb04:	454c      	cmp	r4, r9
 800fb06:	f8a6 a03a 	strh.w	sl, [r6, #58]	@ 0x3a
 800fb0a:	d1e5      	bne.n	800fad8 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x28>
 800fb0c:	eba5 050e 	sub.w	r5, r5, lr
 800fb10:	eb0e 0408 	add.w	r4, lr, r8
 800fb14:	8705      	strh	r5, [r0, #56]	@ 0x38
 800fb16:	f8a0 4040 	strh.w	r4, [r0, #64]	@ 0x40
 800fb1a:	f8a0 c03e 	strh.w	ip, [r0, #62]	@ 0x3e
 800fb1e:	250a      	movs	r5, #10
 800fb20:	8f04      	ldrh	r4, [r0, #56]	@ 0x38
 800fb22:	1a64      	subs	r4, r4, r1
 800fb24:	4439      	add	r1, r7
 800fb26:	b289      	uxth	r1, r1
 800fb28:	2909      	cmp	r1, #9
 800fb2a:	bf88      	it	hi
 800fb2c:	390a      	subhi	r1, #10
 800fb2e:	8704      	strh	r4, [r0, #56]	@ 0x38
 800fb30:	86c1      	strh	r1, [r0, #54]	@ 0x36
 800fb32:	b18a      	cbz	r2, 800fb58 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0xa8>
 800fb34:	8f01      	ldrh	r1, [r0, #56]	@ 0x38
 800fb36:	3a01      	subs	r2, #1
 800fb38:	3101      	adds	r1, #1
 800fb3a:	b292      	uxth	r2, r2
 800fb3c:	f833 4012 	ldrh.w	r4, [r3, r2, lsl #1]
 800fb40:	8701      	strh	r1, [r0, #56]	@ 0x38
 800fb42:	8ec1      	ldrh	r1, [r0, #54]	@ 0x36
 800fb44:	b901      	cbnz	r1, 800fb48 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x98>
 800fb46:	86c5      	strh	r5, [r0, #54]	@ 0x36
 800fb48:	8ec1      	ldrh	r1, [r0, #54]	@ 0x36
 800fb4a:	3901      	subs	r1, #1
 800fb4c:	b289      	uxth	r1, r1
 800fb4e:	86c1      	strh	r1, [r0, #54]	@ 0x36
 800fb50:	eb00 0141 	add.w	r1, r0, r1, lsl #1
 800fb54:	844c      	strh	r4, [r1, #34]	@ 0x22
 800fb56:	e7ec      	b.n	800fb32 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x82>
 800fb58:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800fb5c:	f7ff bf4b 	b.w	800f9f6 <_ZN8touchgfx12TextProvider15fillInputBufferEv>

0800fb60 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>:
 800fb60:	b570      	push	{r4, r5, r6, lr}
 800fb62:	2500      	movs	r5, #0
 800fb64:	4295      	cmp	r5, r2
 800fb66:	d011      	beq.n	800fb8c <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x2c>
 800fb68:	8bc4      	ldrh	r4, [r0, #30]
 800fb6a:	f831 6b02 	ldrh.w	r6, [r1], #2
 800fb6e:	4414      	add	r4, r2
 800fb70:	3c01      	subs	r4, #1
 800fb72:	1b64      	subs	r4, r4, r5
 800fb74:	b2a4      	uxth	r4, r4
 800fb76:	2c01      	cmp	r4, #1
 800fb78:	bf88      	it	hi
 800fb7a:	3c02      	subhi	r4, #2
 800fb7c:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 800fb80:	8b64      	ldrh	r4, [r4, #26]
 800fb82:	42b4      	cmp	r4, r6
 800fb84:	d117      	bne.n	800fbb6 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x56>
 800fb86:	3501      	adds	r5, #1
 800fb88:	b2ad      	uxth	r5, r5
 800fb8a:	e7eb      	b.n	800fb64 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x4>
 800fb8c:	2400      	movs	r4, #0
 800fb8e:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 800fb92:	4413      	add	r3, r2
 800fb94:	b2a2      	uxth	r2, r4
 800fb96:	429a      	cmp	r2, r3
 800fb98:	da0f      	bge.n	800fbba <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x5a>
 800fb9a:	8ec6      	ldrh	r6, [r0, #54]	@ 0x36
 800fb9c:	f831 5014 	ldrh.w	r5, [r1, r4, lsl #1]
 800fba0:	4432      	add	r2, r6
 800fba2:	b292      	uxth	r2, r2
 800fba4:	2a09      	cmp	r2, #9
 800fba6:	bf88      	it	hi
 800fba8:	3a0a      	subhi	r2, #10
 800fbaa:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 800fbae:	8c52      	ldrh	r2, [r2, #34]	@ 0x22
 800fbb0:	3401      	adds	r4, #1
 800fbb2:	42aa      	cmp	r2, r5
 800fbb4:	d0ee      	beq.n	800fb94 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x34>
 800fbb6:	2000      	movs	r0, #0
 800fbb8:	bd70      	pop	{r4, r5, r6, pc}
 800fbba:	2001      	movs	r0, #1
 800fbbc:	e7fc      	b.n	800fbb8 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x58>

0800fbbe <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>:
 800fbbe:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800fbc2:	4605      	mov	r5, r0
 800fbc4:	4616      	mov	r6, r2
 800fbc6:	1c8c      	adds	r4, r1, #2
 800fbc8:	8809      	ldrh	r1, [r1, #0]
 800fbca:	ea4f 3a11 	mov.w	sl, r1, lsr #12
 800fbce:	f834 301a 	ldrh.w	r3, [r4, sl, lsl #1]
 800fbd2:	42b3      	cmp	r3, r6
 800fbd4:	d124      	bne.n	800fc20 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x62>
 800fbd6:	f3c1 2903 	ubfx	r9, r1, #8, #4
 800fbda:	f3c1 1803 	ubfx	r8, r1, #4, #4
 800fbde:	f001 070f 	and.w	r7, r1, #15
 800fbe2:	f8cd 8000 	str.w	r8, [sp]
 800fbe6:	464b      	mov	r3, r9
 800fbe8:	4652      	mov	r2, sl
 800fbea:	4621      	mov	r1, r4
 800fbec:	4628      	mov	r0, r5
 800fbee:	f7ff ffb7 	bl	800fb60 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>
 800fbf2:	4683      	mov	fp, r0
 800fbf4:	b168      	cbz	r0, 800fc12 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x54>
 800fbf6:	eb0a 0109 	add.w	r1, sl, r9
 800fbfa:	4441      	add	r1, r8
 800fbfc:	eb04 0341 	add.w	r3, r4, r1, lsl #1
 800fc00:	463a      	mov	r2, r7
 800fc02:	4649      	mov	r1, r9
 800fc04:	4628      	mov	r0, r5
 800fc06:	f7ff ff53 	bl	800fab0 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>
 800fc0a:	4658      	mov	r0, fp
 800fc0c:	b003      	add	sp, #12
 800fc0e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800fc12:	eb07 010a 	add.w	r1, r7, sl
 800fc16:	4449      	add	r1, r9
 800fc18:	4441      	add	r1, r8
 800fc1a:	eb04 0141 	add.w	r1, r4, r1, lsl #1
 800fc1e:	e7d2      	b.n	800fbc6 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x8>
 800fc20:	f04f 0b00 	mov.w	fp, #0
 800fc24:	e7f1      	b.n	800fc0a <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x4c>

0800fc26 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>:
 800fc26:	b570      	push	{r4, r5, r6, lr}
 800fc28:	8810      	ldrh	r0, [r2, #0]
 800fc2a:	4298      	cmp	r0, r3
 800fc2c:	d817      	bhi.n	800fc5e <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 800fc2e:	1e48      	subs	r0, r1, #1
 800fc30:	f832 0020 	ldrh.w	r0, [r2, r0, lsl #2]
 800fc34:	4298      	cmp	r0, r3
 800fc36:	d312      	bcc.n	800fc5e <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 800fc38:	2400      	movs	r4, #0
 800fc3a:	428c      	cmp	r4, r1
 800fc3c:	d20f      	bcs.n	800fc5e <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 800fc3e:	1860      	adds	r0, r4, r1
 800fc40:	1040      	asrs	r0, r0, #1
 800fc42:	f832 6020 	ldrh.w	r6, [r2, r0, lsl #2]
 800fc46:	0085      	lsls	r5, r0, #2
 800fc48:	42b3      	cmp	r3, r6
 800fc4a:	d902      	bls.n	800fc52 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x2c>
 800fc4c:	3001      	adds	r0, #1
 800fc4e:	b284      	uxth	r4, r0
 800fc50:	e7f3      	b.n	800fc3a <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 800fc52:	d201      	bcs.n	800fc58 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x32>
 800fc54:	b281      	uxth	r1, r0
 800fc56:	e7f0      	b.n	800fc3a <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 800fc58:	442a      	add	r2, r5
 800fc5a:	8850      	ldrh	r0, [r2, #2]
 800fc5c:	bd70      	pop	{r4, r5, r6, pc}
 800fc5e:	2000      	movs	r0, #0
 800fc60:	e7fc      	b.n	800fc5c <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x36>

0800fc62 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>:
 800fc62:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800fc66:	4604      	mov	r4, r0
 800fc68:	260b      	movs	r6, #11
 800fc6a:	6c45      	ldr	r5, [r0, #68]	@ 0x44
 800fc6c:	886f      	ldrh	r7, [r5, #2]
 800fc6e:	087f      	lsrs	r7, r7, #1
 800fc70:	3e01      	subs	r6, #1
 800fc72:	d013      	beq.n	800fc9c <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 800fc74:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 800fc76:	462a      	mov	r2, r5
 800fc78:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 800fc7c:	f8b3 8022 	ldrh.w	r8, [r3, #34]	@ 0x22
 800fc80:	4639      	mov	r1, r7
 800fc82:	4643      	mov	r3, r8
 800fc84:	4620      	mov	r0, r4
 800fc86:	f7ff ffce 	bl	800fc26 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>
 800fc8a:	b138      	cbz	r0, 800fc9c <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 800fc8c:	eb05 0140 	add.w	r1, r5, r0, lsl #1
 800fc90:	4642      	mov	r2, r8
 800fc92:	4620      	mov	r0, r4
 800fc94:	f7ff ff93 	bl	800fbbe <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>
 800fc98:	2800      	cmp	r0, #0
 800fc9a:	d1e9      	bne.n	800fc70 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0xe>
 800fc9c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800fca0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>:
 800fca0:	b570      	push	{r4, r5, r6, lr}
 800fca2:	694a      	ldr	r2, [r1, #20]
 800fca4:	6a8d      	ldr	r5, [r1, #40]	@ 0x28
 800fca6:	684b      	ldr	r3, [r1, #4]
 800fca8:	1b54      	subs	r4, r2, r5
 800fcaa:	6ace      	ldr	r6, [r1, #44]	@ 0x2c
 800fcac:	f000 8107 	beq.w	800febe <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x21e>
 800fcb0:	1b9b      	subs	r3, r3, r6
 800fcb2:	d003      	beq.n	800fcbc <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 800fcb4:	2210      	movs	r2, #16
 800fcb6:	4363      	muls	r3, r4
 800fcb8:	fb93 f3f2 	sdiv	r3, r3, r2
 800fcbc:	680c      	ldr	r4, [r1, #0]
 800fcbe:	698a      	ldr	r2, [r1, #24]
 800fcc0:	1b65      	subs	r5, r4, r5
 800fcc2:	f000 80fe 	beq.w	800fec2 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x222>
 800fcc6:	1b92      	subs	r2, r2, r6
 800fcc8:	d003      	beq.n	800fcd2 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 800fcca:	2410      	movs	r4, #16
 800fccc:	436a      	muls	r2, r5
 800fcce:	fb92 f2f4 	sdiv	r2, r2, r4
 800fcd2:	1a9b      	subs	r3, r3, r2
 800fcd4:	ee07 3a90 	vmov	s15, r3
 800fcd8:	ed9f 4a89 	vldr	s8, [pc, #548]	@ 800ff00 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x260>
 800fcdc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800fce0:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 800fce4:	ee67 7a84 	vmul.f32	s15, s15, s8
 800fce8:	ee87 3a27 	vdiv.f32	s6, s14, s15
 800fcec:	460a      	mov	r2, r1
 800fcee:	eeb1 6a43 	vneg.f32	s12, s6
 800fcf2:	4603      	mov	r3, r0
 800fcf4:	f100 040c 	add.w	r4, r0, #12
 800fcf8:	edd2 7a02 	vldr	s15, [r2, #8]
 800fcfc:	eec7 6a27 	vdiv.f32	s13, s14, s15
 800fd00:	ece3 6a01 	vstmia	r3!, {s13}
 800fd04:	edd2 7a03 	vldr	s15, [r2, #12]
 800fd08:	ee67 7aa6 	vmul.f32	s15, s15, s13
 800fd0c:	edc3 7a02 	vstr	s15, [r3, #8]
 800fd10:	edd2 7a04 	vldr	s15, [r2, #16]
 800fd14:	ee67 7aa6 	vmul.f32	s15, s15, s13
 800fd18:	429c      	cmp	r4, r3
 800fd1a:	edc3 7a05 	vstr	s15, [r3, #20]
 800fd1e:	f102 0214 	add.w	r2, r2, #20
 800fd22:	d1e9      	bne.n	800fcf8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x58>
 800fd24:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
 800fd26:	698b      	ldr	r3, [r1, #24]
 800fd28:	edd0 4a02 	vldr	s9, [r0, #8]
 800fd2c:	1a9b      	subs	r3, r3, r2
 800fd2e:	ee07 3a90 	vmov	s15, r3
 800fd32:	684b      	ldr	r3, [r1, #4]
 800fd34:	edd0 3a00 	vldr	s7, [r0]
 800fd38:	1a9b      	subs	r3, r3, r2
 800fd3a:	edd0 6a01 	vldr	s13, [r0, #4]
 800fd3e:	ee07 3a10 	vmov	s14, r3
 800fd42:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800fd46:	ee76 6ae4 	vsub.f32	s13, s13, s9
 800fd4a:	ee67 7a84 	vmul.f32	s15, s15, s8
 800fd4e:	ee73 4ae4 	vsub.f32	s9, s7, s9
 800fd52:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800fd56:	ee64 7ae7 	vnmul.f32	s15, s9, s15
 800fd5a:	ee27 7a04 	vmul.f32	s14, s14, s8
 800fd5e:	eee6 7a87 	vfma.f32	s15, s13, s14
 800fd62:	ee67 7a83 	vmul.f32	s15, s15, s6
 800fd66:	edc0 7a09 	vstr	s15, [r0, #36]	@ 0x24
 800fd6a:	6a8c      	ldr	r4, [r1, #40]	@ 0x28
 800fd6c:	694a      	ldr	r2, [r1, #20]
 800fd6e:	ed90 5a05 	vldr	s10, [r0, #20]
 800fd72:	1b13      	subs	r3, r2, r4
 800fd74:	ee07 3a10 	vmov	s14, r3
 800fd78:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800fd7c:	ee27 7a04 	vmul.f32	s14, s14, s8
 800fd80:	680b      	ldr	r3, [r1, #0]
 800fd82:	ee64 4ac7 	vnmul.f32	s9, s9, s14
 800fd86:	1b1b      	subs	r3, r3, r4
 800fd88:	ee07 3a10 	vmov	s14, r3
 800fd8c:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800fd90:	ee27 7a04 	vmul.f32	s14, s14, s8
 800fd94:	eee6 4a87 	vfma.f32	s9, s13, s14
 800fd98:	ee64 4a86 	vmul.f32	s9, s9, s12
 800fd9c:	edc0 4a0a 	vstr	s9, [r0, #40]	@ 0x28
 800fda0:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
 800fda2:	698b      	ldr	r3, [r1, #24]
 800fda4:	ed90 2a03 	vldr	s4, [r0, #12]
 800fda8:	1a9b      	subs	r3, r3, r2
 800fdaa:	ee06 3a90 	vmov	s13, r3
 800fdae:	684b      	ldr	r3, [r1, #4]
 800fdb0:	edd0 5a04 	vldr	s11, [r0, #16]
 800fdb4:	1a9b      	subs	r3, r3, r2
 800fdb6:	ee07 3a10 	vmov	s14, r3
 800fdba:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 800fdbe:	ee75 5ac5 	vsub.f32	s11, s11, s10
 800fdc2:	ee66 6a84 	vmul.f32	s13, s13, s8
 800fdc6:	ee32 5a45 	vsub.f32	s10, s4, s10
 800fdca:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800fdce:	ee65 6a66 	vnmul.f32	s13, s10, s13
 800fdd2:	ee27 7a04 	vmul.f32	s14, s14, s8
 800fdd6:	eee5 6a87 	vfma.f32	s13, s11, s14
 800fdda:	ee66 6a83 	vmul.f32	s13, s13, s6
 800fdde:	edc0 6a0b 	vstr	s13, [r0, #44]	@ 0x2c
 800fde2:	6a8c      	ldr	r4, [r1, #40]	@ 0x28
 800fde4:	694a      	ldr	r2, [r1, #20]
 800fde6:	ed90 1a07 	vldr	s2, [r0, #28]
 800fdea:	1b13      	subs	r3, r2, r4
 800fdec:	ee07 3a10 	vmov	s14, r3
 800fdf0:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800fdf4:	ee27 7a04 	vmul.f32	s14, s14, s8
 800fdf8:	680b      	ldr	r3, [r1, #0]
 800fdfa:	ee25 5a47 	vnmul.f32	s10, s10, s14
 800fdfe:	1b1b      	subs	r3, r3, r4
 800fe00:	ee07 3a10 	vmov	s14, r3
 800fe04:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800fe08:	ee27 7a04 	vmul.f32	s14, s14, s8
 800fe0c:	eea5 5a87 	vfma.f32	s10, s11, s14
 800fe10:	ee25 5a06 	vmul.f32	s10, s10, s12
 800fe14:	ed80 5a0c 	vstr	s10, [r0, #48]	@ 0x30
 800fe18:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
 800fe1a:	698b      	ldr	r3, [r1, #24]
 800fe1c:	edd0 5a08 	vldr	s11, [r0, #32]
 800fe20:	1a9b      	subs	r3, r3, r2
 800fe22:	ee07 3a10 	vmov	s14, r3
 800fe26:	684b      	ldr	r3, [r1, #4]
 800fe28:	edd0 2a06 	vldr	s5, [r0, #24]
 800fe2c:	1a9b      	subs	r3, r3, r2
 800fe2e:	ee01 3a90 	vmov	s3, r3
 800fe32:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800fe36:	ee31 1a65 	vsub.f32	s2, s2, s11
 800fe3a:	ee27 7a04 	vmul.f32	s14, s14, s8
 800fe3e:	ee72 5ae5 	vsub.f32	s11, s5, s11
 800fe42:	eef8 1ae1 	vcvt.f32.s32	s3, s3
 800fe46:	ee25 7ac7 	vnmul.f32	s14, s11, s14
 800fe4a:	ee61 1a84 	vmul.f32	s3, s3, s8
 800fe4e:	eea1 7a21 	vfma.f32	s14, s2, s3
 800fe52:	ee27 7a03 	vmul.f32	s14, s14, s6
 800fe56:	ed80 7a0d 	vstr	s14, [r0, #52]	@ 0x34
 800fe5a:	6a8c      	ldr	r4, [r1, #40]	@ 0x28
 800fe5c:	694a      	ldr	r2, [r1, #20]
 800fe5e:	1b13      	subs	r3, r2, r4
 800fe60:	ee03 3a10 	vmov	s6, r3
 800fe64:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 800fe68:	ee23 3a04 	vmul.f32	s6, s6, s8
 800fe6c:	680b      	ldr	r3, [r1, #0]
 800fe6e:	ee65 5ac3 	vnmul.f32	s11, s11, s6
 800fe72:	1b1b      	subs	r3, r3, r4
 800fe74:	ee03 3a10 	vmov	s6, r3
 800fe78:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 800fe7c:	ee23 4a04 	vmul.f32	s8, s6, s8
 800fe80:	eee1 5a04 	vfma.f32	s11, s2, s8
 800fe84:	ee25 6a86 	vmul.f32	s12, s11, s12
 800fe88:	ee62 5a67 	vnmul.f32	s11, s4, s15
 800fe8c:	eee3 5aa6 	vfma.f32	s11, s7, s13
 800fe90:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 800fe94:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800fe98:	ed80 6a0e 	vstr	s12, [r0, #56]	@ 0x38
 800fe9c:	dd13      	ble.n	800fec6 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x226>
 800fe9e:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 800fea2:	ee62 7ae7 	vnmul.f32	s15, s5, s15
 800fea6:	eee3 7a87 	vfma.f32	s15, s7, s14
 800feaa:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800feae:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800feb2:	63c3      	str	r3, [r0, #60]	@ 0x3c
 800feb4:	dd15      	ble.n	800fee2 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x242>
 800feb6:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 800feba:	6403      	str	r3, [r0, #64]	@ 0x40
 800febc:	bd70      	pop	{r4, r5, r6, pc}
 800febe:	4623      	mov	r3, r4
 800fec0:	e6fc      	b.n	800fcbc <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 800fec2:	462a      	mov	r2, r5
 800fec4:	e705      	b.n	800fcd2 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 800fec6:	d502      	bpl.n	800fece <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x22e>
 800fec8:	f647 73ff 	movw	r3, #32767	@ 0x7fff
 800fecc:	e7e9      	b.n	800fea2 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x202>
 800fece:	ee22 2a64 	vnmul.f32	s4, s4, s9
 800fed2:	eea3 2a85 	vfma.f32	s4, s7, s10
 800fed6:	eeb5 2ac0 	vcmpe.f32	s4, #0.0
 800feda:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800fede:	dade      	bge.n	800fe9e <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1fe>
 800fee0:	e7f2      	b.n	800fec8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x228>
 800fee2:	d502      	bpl.n	800feea <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x24a>
 800fee4:	f647 73ff 	movw	r3, #32767	@ 0x7fff
 800fee8:	e7e7      	b.n	800feba <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x21a>
 800feea:	ee62 4ae4 	vnmul.f32	s9, s5, s9
 800feee:	eee3 4a86 	vfma.f32	s9, s7, s12
 800fef2:	eef5 4ac0 	vcmpe.f32	s9, #0.0
 800fef6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800fefa:	dadc      	bge.n	800feb6 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x216>
 800fefc:	e7f2      	b.n	800fee4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x244>
 800fefe:	bf00      	nop
 800ff00:	3d800000 	.word	0x3d800000

0800ff04 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>:
 800ff04:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800ff08:	2714      	movs	r7, #20
 800ff0a:	435f      	muls	r7, r3
 800ff0c:	eb02 0c07 	add.w	ip, r2, r7
 800ff10:	f8dc 5004 	ldr.w	r5, [ip, #4]
 800ff14:	f115 0e0f 	adds.w	lr, r5, #15
 800ff18:	f100 80a2 	bmi.w	8010060 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x15c>
 800ff1c:	ea4f 1e2e 	mov.w	lr, lr, asr #4
 800ff20:	2614      	movs	r6, #20
 800ff22:	9c08      	ldr	r4, [sp, #32]
 800ff24:	f8c0 e014 	str.w	lr, [r0, #20]
 800ff28:	4366      	muls	r6, r4
 800ff2a:	eb02 0806 	add.w	r8, r2, r6
 800ff2e:	f8d8 5004 	ldr.w	r5, [r8, #4]
 800ff32:	f115 040f 	adds.w	r4, r5, #15
 800ff36:	f100 809f 	bmi.w	8010078 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x174>
 800ff3a:	1124      	asrs	r4, r4, #4
 800ff3c:	eba4 040e 	sub.w	r4, r4, lr
 800ff40:	6184      	str	r4, [r0, #24]
 800ff42:	2c00      	cmp	r4, #0
 800ff44:	f000 808a 	beq.w	801005c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x158>
 800ff48:	f8dc 9004 	ldr.w	r9, [ip, #4]
 800ff4c:	f8d8 4004 	ldr.w	r4, [r8, #4]
 800ff50:	5995      	ldr	r5, [r2, r6]
 800ff52:	eba4 0809 	sub.w	r8, r4, r9
 800ff56:	59d4      	ldr	r4, [r2, r7]
 800ff58:	ea4f 1608 	mov.w	r6, r8, lsl #4
 800ff5c:	eba5 0a04 	sub.w	sl, r5, r4
 800ff60:	ea4f 150a 	mov.w	r5, sl, lsl #4
 800ff64:	fb0e fe05 	mul.w	lr, lr, r5
 800ff68:	fb0a ee19 	mls	lr, sl, r9, lr
 800ff6c:	fb08 e404 	mla	r4, r8, r4, lr
 800ff70:	3c01      	subs	r4, #1
 800ff72:	19a4      	adds	r4, r4, r6
 800ff74:	f100 808c 	bmi.w	8010090 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x18c>
 800ff78:	fb94 fef6 	sdiv	lr, r4, r6
 800ff7c:	fb06 441e 	mls	r4, r6, lr, r4
 800ff80:	f8c0 e000 	str.w	lr, [r0]
 800ff84:	6104      	str	r4, [r0, #16]
 800ff86:	2d00      	cmp	r5, #0
 800ff88:	f2c0 8095 	blt.w	80100b6 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1b2>
 800ff8c:	fb95 f4f6 	sdiv	r4, r5, r6
 800ff90:	fb06 5514 	mls	r5, r6, r4, r5
 800ff94:	6044      	str	r4, [r0, #4]
 800ff96:	6085      	str	r5, [r0, #8]
 800ff98:	60c6      	str	r6, [r0, #12]
 800ff9a:	f8dc 4004 	ldr.w	r4, [ip, #4]
 800ff9e:	6945      	ldr	r5, [r0, #20]
 800ffa0:	59d2      	ldr	r2, [r2, r7]
 800ffa2:	ebc4 1405 	rsb	r4, r4, r5, lsl #4
 800ffa6:	ee07 4a10 	vmov	s14, r4
 800ffaa:	6804      	ldr	r4, [r0, #0]
 800ffac:	eddf 6a4a 	vldr	s13, [pc, #296]	@ 80100d8 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1d4>
 800ffb0:	ebc2 1204 	rsb	r2, r2, r4, lsl #4
 800ffb4:	ee07 2a90 	vmov	s15, r2
 800ffb8:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800ffbc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800ffc0:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 800ffc4:	ed91 6a0a 	vldr	s12, [r1, #40]	@ 0x28
 800ffc8:	ee27 7a26 	vmul.f32	s14, s14, s13
 800ffcc:	ee67 7aa6 	vmul.f32	s15, s15, s13
 800ffd0:	edd3 6a00 	vldr	s13, [r3]
 800ffd4:	eee6 6a07 	vfma.f32	s13, s12, s14
 800ffd8:	ed91 6a09 	vldr	s12, [r1, #36]	@ 0x24
 800ffdc:	eee6 6a27 	vfma.f32	s13, s12, s15
 800ffe0:	edc0 6a07 	vstr	s13, [r0, #28]
 800ffe4:	edd0 6a01 	vldr	s13, [r0, #4]
 800ffe8:	edd1 5a09 	vldr	s11, [r1, #36]	@ 0x24
 800ffec:	ed91 6a0a 	vldr	s12, [r1, #40]	@ 0x28
 800fff0:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 800fff4:	eea6 6aa5 	vfma.f32	s12, s13, s11
 800fff8:	ed80 6a08 	vstr	s12, [r0, #32]
 800fffc:	6a4a      	ldr	r2, [r1, #36]	@ 0x24
 800fffe:	6242      	str	r2, [r0, #36]	@ 0x24
 8010000:	edd1 5a0c 	vldr	s11, [r1, #48]	@ 0x30
 8010004:	ed93 6a03 	vldr	s12, [r3, #12]
 8010008:	eea5 6a87 	vfma.f32	s12, s11, s14
 801000c:	edd1 5a0b 	vldr	s11, [r1, #44]	@ 0x2c
 8010010:	eea5 6aa7 	vfma.f32	s12, s11, s15
 8010014:	ed80 6a0a 	vstr	s12, [r0, #40]	@ 0x28
 8010018:	edd1 5a0b 	vldr	s11, [r1, #44]	@ 0x2c
 801001c:	ed91 6a0c 	vldr	s12, [r1, #48]	@ 0x30
 8010020:	eea6 6aa5 	vfma.f32	s12, s13, s11
 8010024:	ed80 6a0b 	vstr	s12, [r0, #44]	@ 0x2c
 8010028:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
 801002a:	6302      	str	r2, [r0, #48]	@ 0x30
 801002c:	ed93 6a06 	vldr	s12, [r3, #24]
 8010030:	edd1 5a0e 	vldr	s11, [r1, #56]	@ 0x38
 8010034:	eea5 6a87 	vfma.f32	s12, s11, s14
 8010038:	eeb0 7a46 	vmov.f32	s14, s12
 801003c:	ed91 6a0d 	vldr	s12, [r1, #52]	@ 0x34
 8010040:	eea6 7a27 	vfma.f32	s14, s12, s15
 8010044:	ed80 7a0d 	vstr	s14, [r0, #52]	@ 0x34
 8010048:	ed91 7a0d 	vldr	s14, [r1, #52]	@ 0x34
 801004c:	edd1 7a0e 	vldr	s15, [r1, #56]	@ 0x38
 8010050:	eee6 7a87 	vfma.f32	s15, s13, s14
 8010054:	edc0 7a0e 	vstr	s15, [r0, #56]	@ 0x38
 8010058:	6b4b      	ldr	r3, [r1, #52]	@ 0x34
 801005a:	63c3      	str	r3, [r0, #60]	@ 0x3c
 801005c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8010060:	2410      	movs	r4, #16
 8010062:	f1c5 0501 	rsb	r5, r5, #1
 8010066:	f015 050f 	ands.w	r5, r5, #15
 801006a:	fb9e fef4 	sdiv	lr, lr, r4
 801006e:	bf18      	it	ne
 8010070:	2501      	movne	r5, #1
 8010072:	ebae 0e05 	sub.w	lr, lr, r5
 8010076:	e753      	b.n	800ff20 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1c>
 8010078:	f04f 0910 	mov.w	r9, #16
 801007c:	f1c5 0501 	rsb	r5, r5, #1
 8010080:	f015 050f 	ands.w	r5, r5, #15
 8010084:	fb94 f4f9 	sdiv	r4, r4, r9
 8010088:	bf18      	it	ne
 801008a:	2501      	movne	r5, #1
 801008c:	1b64      	subs	r4, r4, r5
 801008e:	e755      	b.n	800ff3c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x38>
 8010090:	4264      	negs	r4, r4
 8010092:	fb94 fef6 	sdiv	lr, r4, r6
 8010096:	fb06 441e 	mls	r4, r6, lr, r4
 801009a:	f1ce 0800 	rsb	r8, lr, #0
 801009e:	f8c0 8000 	str.w	r8, [r0]
 80100a2:	6104      	str	r4, [r0, #16]
 80100a4:	2c00      	cmp	r4, #0
 80100a6:	f43f af6e 	beq.w	800ff86 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x82>
 80100aa:	ea6f 0e0e 	mvn.w	lr, lr
 80100ae:	1b34      	subs	r4, r6, r4
 80100b0:	f8c0 e000 	str.w	lr, [r0]
 80100b4:	e766      	b.n	800ff84 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x80>
 80100b6:	426d      	negs	r5, r5
 80100b8:	fb95 f4f6 	sdiv	r4, r5, r6
 80100bc:	fb06 5514 	mls	r5, r6, r4, r5
 80100c0:	f1c4 0e00 	rsb	lr, r4, #0
 80100c4:	f8c0 e004 	str.w	lr, [r0, #4]
 80100c8:	6085      	str	r5, [r0, #8]
 80100ca:	2d00      	cmp	r5, #0
 80100cc:	f43f af64 	beq.w	800ff98 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x94>
 80100d0:	43e4      	mvns	r4, r4
 80100d2:	1b75      	subs	r5, r6, r5
 80100d4:	6044      	str	r4, [r0, #4]
 80100d6:	e75e      	b.n	800ff96 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x92>
 80100d8:	3d800000 	.word	0x3d800000

080100dc <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>:
 80100dc:	4b01      	ldr	r3, [pc, #4]	@ (80100e4 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE+0x8>)
 80100de:	6018      	str	r0, [r3, #0]
 80100e0:	4770      	bx	lr
 80100e2:	bf00      	nop
 80100e4:	20083104 	.word	0x20083104

080100e8 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>:
 80100e8:	4b06      	ldr	r3, [pc, #24]	@ (8010104 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x1c>)
 80100ea:	881a      	ldrh	r2, [r3, #0]
 80100ec:	4282      	cmp	r2, r0
 80100ee:	d807      	bhi.n	8010100 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x18>
 80100f0:	4b05      	ldr	r3, [pc, #20]	@ (8010108 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x20>)
 80100f2:	881b      	ldrh	r3, [r3, #0]
 80100f4:	4413      	add	r3, r2
 80100f6:	4298      	cmp	r0, r3
 80100f8:	bfac      	ite	ge
 80100fa:	2000      	movge	r0, #0
 80100fc:	2001      	movlt	r0, #1
 80100fe:	4770      	bx	lr
 8010100:	2000      	movs	r0, #0
 8010102:	4770      	bx	lr
 8010104:	20083124 	.word	0x20083124
 8010108:	20083128 	.word	0x20083128

0801010c <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>:
 801010c:	b508      	push	{r3, lr}
 801010e:	4601      	mov	r1, r0
 8010110:	f7ff ffea 	bl	80100e8 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>
 8010114:	b118      	cbz	r0, 801011e <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x12>
 8010116:	4b02      	ldr	r3, [pc, #8]	@ (8010120 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x14>)
 8010118:	681b      	ldr	r3, [r3, #0]
 801011a:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 801011e:	bd08      	pop	{r3, pc}
 8010120:	20083108 	.word	0x20083108

08010124 <_ZN8touchgfx6Bitmap10clearCacheEv>:
 8010124:	b5f0      	push	{r4, r5, r6, r7, lr}
 8010126:	4c24      	ldr	r4, [pc, #144]	@ (80101b8 <_ZN8touchgfx6Bitmap10clearCacheEv+0x94>)
 8010128:	6823      	ldr	r3, [r4, #0]
 801012a:	2b00      	cmp	r3, #0
 801012c:	d042      	beq.n	80101b4 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 801012e:	4a23      	ldr	r2, [pc, #140]	@ (80101bc <_ZN8touchgfx6Bitmap10clearCacheEv+0x98>)
 8010130:	4d23      	ldr	r5, [pc, #140]	@ (80101c0 <_ZN8touchgfx6Bitmap10clearCacheEv+0x9c>)
 8010132:	8811      	ldrh	r1, [r2, #0]
 8010134:	f8b5 c000 	ldrh.w	ip, [r5]
 8010138:	4822      	ldr	r0, [pc, #136]	@ (80101c4 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa0>)
 801013a:	4461      	add	r1, ip
 801013c:	1c4a      	adds	r2, r1, #1
 801013e:	f022 0201 	bic.w	r2, r2, #1
 8010142:	008f      	lsls	r7, r1, #2
 8010144:	0412      	lsls	r2, r2, #16
 8010146:	19de      	adds	r6, r3, r7
 8010148:	0c12      	lsrs	r2, r2, #16
 801014a:	eb07 0742 	add.w	r7, r7, r2, lsl #1
 801014e:	6006      	str	r6, [r0, #0]
 8010150:	4e1d      	ldr	r6, [pc, #116]	@ (80101c8 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa4>)
 8010152:	19da      	adds	r2, r3, r7
 8010154:	6032      	str	r2, [r6, #0]
 8010156:	220e      	movs	r2, #14
 8010158:	fb02 f20c 	mul.w	r2, r2, ip
 801015c:	3203      	adds	r2, #3
 801015e:	f022 0203 	bic.w	r2, r2, #3
 8010162:	443a      	add	r2, r7
 8010164:	4f19      	ldr	r7, [pc, #100]	@ (80101cc <_ZN8touchgfx6Bitmap10clearCacheEv+0xa8>)
 8010166:	4413      	add	r3, r2
 8010168:	603b      	str	r3, [r7, #0]
 801016a:	2300      	movs	r3, #0
 801016c:	4f18      	ldr	r7, [pc, #96]	@ (80101d0 <_ZN8touchgfx6Bitmap10clearCacheEv+0xac>)
 801016e:	469c      	mov	ip, r3
 8010170:	803b      	strh	r3, [r7, #0]
 8010172:	4f18      	ldr	r7, [pc, #96]	@ (80101d4 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb0>)
 8010174:	683f      	ldr	r7, [r7, #0]
 8010176:	1aba      	subs	r2, r7, r2
 8010178:	4f17      	ldr	r7, [pc, #92]	@ (80101d8 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb4>)
 801017a:	603a      	str	r2, [r7, #0]
 801017c:	f64f 77ff 	movw	r7, #65535	@ 0xffff
 8010180:	4a16      	ldr	r2, [pc, #88]	@ (80101dc <_ZN8touchgfx6Bitmap10clearCacheEv+0xb8>)
 8010182:	8013      	strh	r3, [r2, #0]
 8010184:	428b      	cmp	r3, r1
 8010186:	d10d      	bne.n	80101a4 <_ZN8touchgfx6Bitmap10clearCacheEv+0x80>
 8010188:	2300      	movs	r3, #0
 801018a:	240e      	movs	r4, #14
 801018c:	882d      	ldrh	r5, [r5, #0]
 801018e:	6830      	ldr	r0, [r6, #0]
 8010190:	429d      	cmp	r5, r3
 8010192:	d90f      	bls.n	80101b4 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 8010194:	fb04 0203 	mla	r2, r4, r3, r0
 8010198:	7b11      	ldrb	r1, [r2, #12]
 801019a:	3301      	adds	r3, #1
 801019c:	f36f 1145 	bfc	r1, #5, #1
 80101a0:	7311      	strb	r1, [r2, #12]
 80101a2:	e7f5      	b.n	8010190 <_ZN8touchgfx6Bitmap10clearCacheEv+0x6c>
 80101a4:	6822      	ldr	r2, [r4, #0]
 80101a6:	f842 c023 	str.w	ip, [r2, r3, lsl #2]
 80101aa:	6802      	ldr	r2, [r0, #0]
 80101ac:	f822 7013 	strh.w	r7, [r2, r3, lsl #1]
 80101b0:	3301      	adds	r3, #1
 80101b2:	e7e7      	b.n	8010184 <_ZN8touchgfx6Bitmap10clearCacheEv+0x60>
 80101b4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80101b6:	bf00      	nop
 80101b8:	20083108 	.word	0x20083108
 80101bc:	20083124 	.word	0x20083124
 80101c0:	20083128 	.word	0x20083128
 80101c4:	2008311c 	.word	0x2008311c
 80101c8:	2008310c 	.word	0x2008310c
 80101cc:	20083114 	.word	0x20083114
 80101d0:	20083126 	.word	0x20083126
 80101d4:	20083110 	.word	0x20083110
 80101d8:	20083120 	.word	0x20083120
 80101dc:	20083118 	.word	0x20083118

080101e0 <_ZN8touchgfx6Bitmap8setCacheEPtmm>:
 80101e0:	4b06      	ldr	r3, [pc, #24]	@ (80101fc <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x1c>)
 80101e2:	681b      	ldr	r3, [r3, #0]
 80101e4:	b943      	cbnz	r3, 80101f8 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 80101e6:	b139      	cbz	r1, 80101f8 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 80101e8:	4b05      	ldr	r3, [pc, #20]	@ (8010200 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x20>)
 80101ea:	801a      	strh	r2, [r3, #0]
 80101ec:	4b05      	ldr	r3, [pc, #20]	@ (8010204 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x24>)
 80101ee:	6019      	str	r1, [r3, #0]
 80101f0:	4b05      	ldr	r3, [pc, #20]	@ (8010208 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x28>)
 80101f2:	6018      	str	r0, [r3, #0]
 80101f4:	f7ff bf96 	b.w	8010124 <_ZN8touchgfx6Bitmap10clearCacheEv>
 80101f8:	4770      	bx	lr
 80101fa:	bf00      	nop
 80101fc:	20083114 	.word	0x20083114
 8010200:	20083128 	.word	0x20083128
 8010204:	20083110 	.word	0x20083110
 8010208:	20083108 	.word	0x20083108

0801020c <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>:
 801020c:	b470      	push	{r4, r5, r6}
 801020e:	4c07      	ldr	r4, [pc, #28]	@ (801022c <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x20>)
 8010210:	4605      	mov	r5, r0
 8010212:	6826      	ldr	r6, [r4, #0]
 8010214:	4610      	mov	r0, r2
 8010216:	9a03      	ldr	r2, [sp, #12]
 8010218:	b936      	cbnz	r6, 8010228 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x1c>
 801021a:	6025      	str	r5, [r4, #0]
 801021c:	4c04      	ldr	r4, [pc, #16]	@ (8010230 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x24>)
 801021e:	8021      	strh	r1, [r4, #0]
 8010220:	bc70      	pop	{r4, r5, r6}
 8010222:	4619      	mov	r1, r3
 8010224:	f7ff bfdc 	b.w	80101e0 <_ZN8touchgfx6Bitmap8setCacheEPtmm>
 8010228:	bc70      	pop	{r4, r5, r6}
 801022a:	4770      	bx	lr
 801022c:	2008312c 	.word	0x2008312c
 8010230:	20083124 	.word	0x20083124

08010234 <_ZNK8touchgfx6Bitmap8getWidthEv>:
 8010234:	4a12      	ldr	r2, [pc, #72]	@ (8010280 <_ZNK8touchgfx6Bitmap8getWidthEv+0x4c>)
 8010236:	8803      	ldrh	r3, [r0, #0]
 8010238:	8812      	ldrh	r2, [r2, #0]
 801023a:	4293      	cmp	r3, r2
 801023c:	d207      	bcs.n	801024e <_ZNK8touchgfx6Bitmap8getWidthEv+0x1a>
 801023e:	2114      	movs	r1, #20
 8010240:	4a10      	ldr	r2, [pc, #64]	@ (8010284 <_ZNK8touchgfx6Bitmap8getWidthEv+0x50>)
 8010242:	6812      	ldr	r2, [r2, #0]
 8010244:	fb01 2303 	mla	r3, r1, r3, r2
 8010248:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
 801024c:	4770      	bx	lr
 801024e:	490e      	ldr	r1, [pc, #56]	@ (8010288 <_ZNK8touchgfx6Bitmap8getWidthEv+0x54>)
 8010250:	8809      	ldrh	r1, [r1, #0]
 8010252:	4411      	add	r1, r2
 8010254:	428b      	cmp	r3, r1
 8010256:	da04      	bge.n	8010262 <_ZNK8touchgfx6Bitmap8getWidthEv+0x2e>
 8010258:	1a9b      	subs	r3, r3, r2
 801025a:	4a0c      	ldr	r2, [pc, #48]	@ (801028c <_ZNK8touchgfx6Bitmap8getWidthEv+0x58>)
 801025c:	210e      	movs	r1, #14
 801025e:	6812      	ldr	r2, [r2, #0]
 8010260:	e7f0      	b.n	8010244 <_ZNK8touchgfx6Bitmap8getWidthEv+0x10>
 8010262:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
 8010266:	4293      	cmp	r3, r2
 8010268:	d108      	bne.n	801027c <_ZNK8touchgfx6Bitmap8getWidthEv+0x48>
 801026a:	4b09      	ldr	r3, [pc, #36]	@ (8010290 <_ZNK8touchgfx6Bitmap8getWidthEv+0x5c>)
 801026c:	781b      	ldrb	r3, [r3, #0]
 801026e:	b91b      	cbnz	r3, 8010278 <_ZNK8touchgfx6Bitmap8getWidthEv+0x44>
 8010270:	4b08      	ldr	r3, [pc, #32]	@ (8010294 <_ZNK8touchgfx6Bitmap8getWidthEv+0x60>)
 8010272:	f9b3 0000 	ldrsh.w	r0, [r3]
 8010276:	4770      	bx	lr
 8010278:	4b07      	ldr	r3, [pc, #28]	@ (8010298 <_ZNK8touchgfx6Bitmap8getWidthEv+0x64>)
 801027a:	e7fa      	b.n	8010272 <_ZNK8touchgfx6Bitmap8getWidthEv+0x3e>
 801027c:	2000      	movs	r0, #0
 801027e:	4770      	bx	lr
 8010280:	20083124 	.word	0x20083124
 8010284:	2008312c 	.word	0x2008312c
 8010288:	20083128 	.word	0x20083128
 801028c:	2008310c 	.word	0x2008310c
 8010290:	2008309c 	.word	0x2008309c
 8010294:	2008309e 	.word	0x2008309e
 8010298:	200830a0 	.word	0x200830a0

0801029c <_ZNK8touchgfx6Bitmap9getHeightEv>:
 801029c:	4a12      	ldr	r2, [pc, #72]	@ (80102e8 <_ZNK8touchgfx6Bitmap9getHeightEv+0x4c>)
 801029e:	8803      	ldrh	r3, [r0, #0]
 80102a0:	8812      	ldrh	r2, [r2, #0]
 80102a2:	4293      	cmp	r3, r2
 80102a4:	d207      	bcs.n	80102b6 <_ZNK8touchgfx6Bitmap9getHeightEv+0x1a>
 80102a6:	2114      	movs	r1, #20
 80102a8:	4a10      	ldr	r2, [pc, #64]	@ (80102ec <_ZNK8touchgfx6Bitmap9getHeightEv+0x50>)
 80102aa:	6812      	ldr	r2, [r2, #0]
 80102ac:	fb01 2303 	mla	r3, r1, r3, r2
 80102b0:	f9b3 000a 	ldrsh.w	r0, [r3, #10]
 80102b4:	4770      	bx	lr
 80102b6:	490e      	ldr	r1, [pc, #56]	@ (80102f0 <_ZNK8touchgfx6Bitmap9getHeightEv+0x54>)
 80102b8:	8809      	ldrh	r1, [r1, #0]
 80102ba:	4411      	add	r1, r2
 80102bc:	428b      	cmp	r3, r1
 80102be:	da04      	bge.n	80102ca <_ZNK8touchgfx6Bitmap9getHeightEv+0x2e>
 80102c0:	1a9b      	subs	r3, r3, r2
 80102c2:	4a0c      	ldr	r2, [pc, #48]	@ (80102f4 <_ZNK8touchgfx6Bitmap9getHeightEv+0x58>)
 80102c4:	210e      	movs	r1, #14
 80102c6:	6812      	ldr	r2, [r2, #0]
 80102c8:	e7f0      	b.n	80102ac <_ZNK8touchgfx6Bitmap9getHeightEv+0x10>
 80102ca:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
 80102ce:	4293      	cmp	r3, r2
 80102d0:	d108      	bne.n	80102e4 <_ZNK8touchgfx6Bitmap9getHeightEv+0x48>
 80102d2:	4b09      	ldr	r3, [pc, #36]	@ (80102f8 <_ZNK8touchgfx6Bitmap9getHeightEv+0x5c>)
 80102d4:	781b      	ldrb	r3, [r3, #0]
 80102d6:	b91b      	cbnz	r3, 80102e0 <_ZNK8touchgfx6Bitmap9getHeightEv+0x44>
 80102d8:	4b08      	ldr	r3, [pc, #32]	@ (80102fc <_ZNK8touchgfx6Bitmap9getHeightEv+0x60>)
 80102da:	f9b3 0000 	ldrsh.w	r0, [r3]
 80102de:	4770      	bx	lr
 80102e0:	4b07      	ldr	r3, [pc, #28]	@ (8010300 <_ZNK8touchgfx6Bitmap9getHeightEv+0x64>)
 80102e2:	e7fa      	b.n	80102da <_ZNK8touchgfx6Bitmap9getHeightEv+0x3e>
 80102e4:	2000      	movs	r0, #0
 80102e6:	4770      	bx	lr
 80102e8:	20083124 	.word	0x20083124
 80102ec:	2008312c 	.word	0x2008312c
 80102f0:	20083128 	.word	0x20083128
 80102f4:	2008310c 	.word	0x2008310c
 80102f8:	2008309c 	.word	0x2008309c
 80102fc:	200830a0 	.word	0x200830a0
 8010300:	2008309e 	.word	0x2008309e

08010304 <_ZNK8touchgfx6Bitmap12getSolidRectEv>:
 8010304:	b530      	push	{r4, r5, lr}
 8010306:	4a22      	ldr	r2, [pc, #136]	@ (8010390 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x8c>)
 8010308:	880b      	ldrh	r3, [r1, #0]
 801030a:	8812      	ldrh	r2, [r2, #0]
 801030c:	4293      	cmp	r3, r2
 801030e:	d213      	bcs.n	8010338 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x34>
 8010310:	2114      	movs	r1, #20
 8010312:	4a20      	ldr	r2, [pc, #128]	@ (8010394 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x90>)
 8010314:	6812      	ldr	r2, [r2, #0]
 8010316:	fb01 2303 	mla	r3, r1, r3, r2
 801031a:	8a1a      	ldrh	r2, [r3, #16]
 801031c:	f9b3 400c 	ldrsh.w	r4, [r3, #12]
 8010320:	f9b3 100e 	ldrsh.w	r1, [r3, #14]
 8010324:	8a5b      	ldrh	r3, [r3, #18]
 8010326:	f3c2 020c 	ubfx	r2, r2, #0, #13
 801032a:	f3c3 030c 	ubfx	r3, r3, #0, #13
 801032e:	8004      	strh	r4, [r0, #0]
 8010330:	8041      	strh	r1, [r0, #2]
 8010332:	8082      	strh	r2, [r0, #4]
 8010334:	80c3      	strh	r3, [r0, #6]
 8010336:	e024      	b.n	8010382 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x7e>
 8010338:	4917      	ldr	r1, [pc, #92]	@ (8010398 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x94>)
 801033a:	8809      	ldrh	r1, [r1, #0]
 801033c:	4411      	add	r1, r2
 801033e:	428b      	cmp	r3, r1
 8010340:	da10      	bge.n	8010364 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x60>
 8010342:	1a9b      	subs	r3, r3, r2
 8010344:	220e      	movs	r2, #14
 8010346:	4353      	muls	r3, r2
 8010348:	4a14      	ldr	r2, [pc, #80]	@ (801039c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x98>)
 801034a:	6811      	ldr	r1, [r2, #0]
 801034c:	18ca      	adds	r2, r1, r3
 801034e:	5ecd      	ldrsh	r5, [r1, r3]
 8010350:	f9b2 4002 	ldrsh.w	r4, [r2, #2]
 8010354:	f9b2 1004 	ldrsh.w	r1, [r2, #4]
 8010358:	f9b2 3006 	ldrsh.w	r3, [r2, #6]
 801035c:	8005      	strh	r5, [r0, #0]
 801035e:	8044      	strh	r4, [r0, #2]
 8010360:	8081      	strh	r1, [r0, #4]
 8010362:	e7e7      	b.n	8010334 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x30>
 8010364:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
 8010368:	4293      	cmp	r3, r2
 801036a:	d10b      	bne.n	8010384 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x80>
 801036c:	4b0c      	ldr	r3, [pc, #48]	@ (80103a0 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x9c>)
 801036e:	f9b3 1000 	ldrsh.w	r1, [r3]
 8010372:	4b0c      	ldr	r3, [pc, #48]	@ (80103a4 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xa0>)
 8010374:	8081      	strh	r1, [r0, #4]
 8010376:	f9b3 2000 	ldrsh.w	r2, [r3]
 801037a:	2300      	movs	r3, #0
 801037c:	80c2      	strh	r2, [r0, #6]
 801037e:	8003      	strh	r3, [r0, #0]
 8010380:	8043      	strh	r3, [r0, #2]
 8010382:	bd30      	pop	{r4, r5, pc}
 8010384:	2300      	movs	r3, #0
 8010386:	8003      	strh	r3, [r0, #0]
 8010388:	8043      	strh	r3, [r0, #2]
 801038a:	8083      	strh	r3, [r0, #4]
 801038c:	e7d2      	b.n	8010334 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x30>
 801038e:	bf00      	nop
 8010390:	20083124 	.word	0x20083124
 8010394:	2008312c 	.word	0x2008312c
 8010398:	20083128 	.word	0x20083128
 801039c:	2008310c 	.word	0x2008310c
 80103a0:	20083098 	.word	0x20083098
 80103a4:	2008309a 	.word	0x2008309a

080103a8 <_ZNK8touchgfx6Bitmap7getDataEv>:
 80103a8:	4a12      	ldr	r2, [pc, #72]	@ (80103f4 <_ZNK8touchgfx6Bitmap7getDataEv+0x4c>)
 80103aa:	8803      	ldrh	r3, [r0, #0]
 80103ac:	8811      	ldrh	r1, [r2, #0]
 80103ae:	428b      	cmp	r3, r1
 80103b0:	d20b      	bcs.n	80103ca <_ZNK8touchgfx6Bitmap7getDataEv+0x22>
 80103b2:	4a11      	ldr	r2, [pc, #68]	@ (80103f8 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 80103b4:	6812      	ldr	r2, [r2, #0]
 80103b6:	b112      	cbz	r2, 80103be <_ZNK8touchgfx6Bitmap7getDataEv+0x16>
 80103b8:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 80103bc:	b9c0      	cbnz	r0, 80103f0 <_ZNK8touchgfx6Bitmap7getDataEv+0x48>
 80103be:	4a0f      	ldr	r2, [pc, #60]	@ (80103fc <_ZNK8touchgfx6Bitmap7getDataEv+0x54>)
 80103c0:	6811      	ldr	r1, [r2, #0]
 80103c2:	2214      	movs	r2, #20
 80103c4:	4353      	muls	r3, r2
 80103c6:	58c8      	ldr	r0, [r1, r3]
 80103c8:	4770      	bx	lr
 80103ca:	4a0d      	ldr	r2, [pc, #52]	@ (8010400 <_ZNK8touchgfx6Bitmap7getDataEv+0x58>)
 80103cc:	8812      	ldrh	r2, [r2, #0]
 80103ce:	440a      	add	r2, r1
 80103d0:	4293      	cmp	r3, r2
 80103d2:	da04      	bge.n	80103de <_ZNK8touchgfx6Bitmap7getDataEv+0x36>
 80103d4:	4a08      	ldr	r2, [pc, #32]	@ (80103f8 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 80103d6:	6812      	ldr	r2, [r2, #0]
 80103d8:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 80103dc:	4770      	bx	lr
 80103de:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
 80103e2:	4293      	cmp	r3, r2
 80103e4:	d103      	bne.n	80103ee <_ZNK8touchgfx6Bitmap7getDataEv+0x46>
 80103e6:	4b07      	ldr	r3, [pc, #28]	@ (8010404 <_ZNK8touchgfx6Bitmap7getDataEv+0x5c>)
 80103e8:	681b      	ldr	r3, [r3, #0]
 80103ea:	6c58      	ldr	r0, [r3, #68]	@ 0x44
 80103ec:	4770      	bx	lr
 80103ee:	2000      	movs	r0, #0
 80103f0:	4770      	bx	lr
 80103f2:	bf00      	nop
 80103f4:	20083124 	.word	0x20083124
 80103f8:	20083108 	.word	0x20083108
 80103fc:	2008312c 	.word	0x2008312c
 8010400:	20083128 	.word	0x20083128
 8010404:	200830a4 	.word	0x200830a4

08010408 <_ZNK8touchgfx6Bitmap12getExtraDataEv>:
 8010408:	4b24      	ldr	r3, [pc, #144]	@ (801049c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x94>)
 801040a:	8802      	ldrh	r2, [r0, #0]
 801040c:	8818      	ldrh	r0, [r3, #0]
 801040e:	4282      	cmp	r2, r0
 8010410:	d221      	bcs.n	8010456 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x4e>
 8010412:	4b23      	ldr	r3, [pc, #140]	@ (80104a0 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>)
 8010414:	6819      	ldr	r1, [r3, #0]
 8010416:	2314      	movs	r3, #20
 8010418:	fb03 1302 	mla	r3, r3, r2, r1
 801041c:	6858      	ldr	r0, [r3, #4]
 801041e:	2800      	cmp	r0, #0
 8010420:	d03a      	beq.n	8010498 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 8010422:	4920      	ldr	r1, [pc, #128]	@ (80104a4 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 8010424:	6809      	ldr	r1, [r1, #0]
 8010426:	2900      	cmp	r1, #0
 8010428:	d036      	beq.n	8010498 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 801042a:	f851 1022 	ldr.w	r1, [r1, r2, lsl #2]
 801042e:	2900      	cmp	r1, #0
 8010430:	d032      	beq.n	8010498 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 8010432:	891a      	ldrh	r2, [r3, #8]
 8010434:	8958      	ldrh	r0, [r3, #10]
 8010436:	4350      	muls	r0, r2
 8010438:	7c5a      	ldrb	r2, [r3, #17]
 801043a:	7cdb      	ldrb	r3, [r3, #19]
 801043c:	0952      	lsrs	r2, r2, #5
 801043e:	f3c3 1342 	ubfx	r3, r3, #5, #3
 8010442:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 8010446:	2b0b      	cmp	r3, #11
 8010448:	bf18      	it	ne
 801044a:	0040      	lslne	r0, r0, #1
 801044c:	3003      	adds	r0, #3
 801044e:	f020 0003 	bic.w	r0, r0, #3
 8010452:	4408      	add	r0, r1
 8010454:	4770      	bx	lr
 8010456:	4b14      	ldr	r3, [pc, #80]	@ (80104a8 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa0>)
 8010458:	881b      	ldrh	r3, [r3, #0]
 801045a:	4403      	add	r3, r0
 801045c:	429a      	cmp	r2, r3
 801045e:	da1a      	bge.n	8010496 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 8010460:	210e      	movs	r1, #14
 8010462:	4b12      	ldr	r3, [pc, #72]	@ (80104ac <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa4>)
 8010464:	1a10      	subs	r0, r2, r0
 8010466:	681b      	ldr	r3, [r3, #0]
 8010468:	fb01 3000 	mla	r0, r1, r0, r3
 801046c:	7b03      	ldrb	r3, [r0, #12]
 801046e:	f003 031f 	and.w	r3, r3, #31
 8010472:	2b0b      	cmp	r3, #11
 8010474:	d10b      	bne.n	801048e <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x86>
 8010476:	8903      	ldrh	r3, [r0, #8]
 8010478:	8940      	ldrh	r0, [r0, #10]
 801047a:	4358      	muls	r0, r3
 801047c:	4b09      	ldr	r3, [pc, #36]	@ (80104a4 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 801047e:	3003      	adds	r0, #3
 8010480:	6819      	ldr	r1, [r3, #0]
 8010482:	f020 0303 	bic.w	r3, r0, #3
 8010486:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
 801048a:	4418      	add	r0, r3
 801048c:	4770      	bx	lr
 801048e:	2b0d      	cmp	r3, #13
 8010490:	d101      	bne.n	8010496 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 8010492:	300d      	adds	r0, #13
 8010494:	4770      	bx	lr
 8010496:	2000      	movs	r0, #0
 8010498:	4770      	bx	lr
 801049a:	bf00      	nop
 801049c:	20083124 	.word	0x20083124
 80104a0:	2008312c 	.word	0x2008312c
 80104a4:	20083108 	.word	0x20083108
 80104a8:	20083128 	.word	0x20083128
 80104ac:	2008310c 	.word	0x2008310c

080104b0 <_ZNK8touchgfx6Bitmap9getFormatEv>:
 80104b0:	b510      	push	{r4, lr}
 80104b2:	4a17      	ldr	r2, [pc, #92]	@ (8010510 <_ZNK8touchgfx6Bitmap9getFormatEv+0x60>)
 80104b4:	8803      	ldrh	r3, [r0, #0]
 80104b6:	8812      	ldrh	r2, [r2, #0]
 80104b8:	4293      	cmp	r3, r2
 80104ba:	d20c      	bcs.n	80104d6 <_ZNK8touchgfx6Bitmap9getFormatEv+0x26>
 80104bc:	2114      	movs	r1, #20
 80104be:	4a15      	ldr	r2, [pc, #84]	@ (8010514 <_ZNK8touchgfx6Bitmap9getFormatEv+0x64>)
 80104c0:	6812      	ldr	r2, [r2, #0]
 80104c2:	fb01 2303 	mla	r3, r1, r3, r2
 80104c6:	7c58      	ldrb	r0, [r3, #17]
 80104c8:	0942      	lsrs	r2, r0, #5
 80104ca:	7cd8      	ldrb	r0, [r3, #19]
 80104cc:	f3c0 1042 	ubfx	r0, r0, #5, #3
 80104d0:	ea40 00c2 	orr.w	r0, r0, r2, lsl #3
 80104d4:	bd10      	pop	{r4, pc}
 80104d6:	4910      	ldr	r1, [pc, #64]	@ (8010518 <_ZNK8touchgfx6Bitmap9getFormatEv+0x68>)
 80104d8:	8809      	ldrh	r1, [r1, #0]
 80104da:	4411      	add	r1, r2
 80104dc:	428b      	cmp	r3, r1
 80104de:	da09      	bge.n	80104f4 <_ZNK8touchgfx6Bitmap9getFormatEv+0x44>
 80104e0:	210e      	movs	r1, #14
 80104e2:	1a9b      	subs	r3, r3, r2
 80104e4:	4a0d      	ldr	r2, [pc, #52]	@ (801051c <_ZNK8touchgfx6Bitmap9getFormatEv+0x6c>)
 80104e6:	6812      	ldr	r2, [r2, #0]
 80104e8:	fb01 2303 	mla	r3, r1, r3, r2
 80104ec:	7b18      	ldrb	r0, [r3, #12]
 80104ee:	f000 001f 	and.w	r0, r0, #31
 80104f2:	e7ef      	b.n	80104d4 <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
 80104f4:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
 80104f8:	4293      	cmp	r3, r2
 80104fa:	d106      	bne.n	801050a <_ZNK8touchgfx6Bitmap9getFormatEv+0x5a>
 80104fc:	f7fa ffdc 	bl	800b4b8 <_ZN8touchgfx3HAL3lcdEv>
 8010500:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8010504:	6803      	ldr	r3, [r0, #0]
 8010506:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8010508:	4718      	bx	r3
 801050a:	2000      	movs	r0, #0
 801050c:	e7e2      	b.n	80104d4 <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
 801050e:	bf00      	nop
 8010510:	20083124 	.word	0x20083124
 8010514:	2008312c 	.word	0x2008312c
 8010518:	20083128 	.word	0x20083128
 801051c:	2008310c 	.word	0x2008310c

08010520 <CRC_Lock>:
 8010520:	b530      	push	{r4, r5, lr}
 8010522:	4a2d      	ldr	r2, [pc, #180]	@ (80105d8 <CRC_Lock+0xb8>)
 8010524:	f24c 2540 	movw	r5, #49728	@ 0xc240
 8010528:	6813      	ldr	r3, [r2, #0]
 801052a:	f023 0301 	bic.w	r3, r3, #1
 801052e:	6013      	str	r3, [r2, #0]
 8010530:	f64f 72f0 	movw	r2, #65520	@ 0xfff0
 8010534:	4b29      	ldr	r3, [pc, #164]	@ (80105dc <CRC_Lock+0xbc>)
 8010536:	681c      	ldr	r4, [r3, #0]
 8010538:	4014      	ands	r4, r2
 801053a:	42ac      	cmp	r4, r5
 801053c:	d005      	beq.n	801054a <CRC_Lock+0x2a>
 801053e:	f24c 2570 	movw	r5, #49776	@ 0xc270
 8010542:	681c      	ldr	r4, [r3, #0]
 8010544:	4014      	ands	r4, r2
 8010546:	42ac      	cmp	r4, r5
 8010548:	d125      	bne.n	8010596 <CRC_Lock+0x76>
 801054a:	4b25      	ldr	r3, [pc, #148]	@ (80105e0 <CRC_Lock+0xc0>)
 801054c:	681b      	ldr	r3, [r3, #0]
 801054e:	2b00      	cmp	r3, #0
 8010550:	d139      	bne.n	80105c6 <CRC_Lock+0xa6>
 8010552:	4b24      	ldr	r3, [pc, #144]	@ (80105e4 <CRC_Lock+0xc4>)
 8010554:	681a      	ldr	r2, [r3, #0]
 8010556:	f3c2 020b 	ubfx	r2, r2, #0, #12
 801055a:	f5b2 6f8a 	cmp.w	r2, #1104	@ 0x450
 801055e:	d00d      	beq.n	801057c <CRC_Lock+0x5c>
 8010560:	f240 4483 	movw	r4, #1155	@ 0x483
 8010564:	681a      	ldr	r2, [r3, #0]
 8010566:	f3c2 020b 	ubfx	r2, r2, #0, #12
 801056a:	42a2      	cmp	r2, r4
 801056c:	d006      	beq.n	801057c <CRC_Lock+0x5c>
 801056e:	f240 4285 	movw	r2, #1157	@ 0x485
 8010572:	681b      	ldr	r3, [r3, #0]
 8010574:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8010578:	4293      	cmp	r3, r2
 801057a:	d124      	bne.n	80105c6 <CRC_Lock+0xa6>
 801057c:	2201      	movs	r2, #1
 801057e:	4b1a      	ldr	r3, [pc, #104]	@ (80105e8 <CRC_Lock+0xc8>)
 8010580:	601a      	str	r2, [r3, #0]
 8010582:	681a      	ldr	r2, [r3, #0]
 8010584:	2a00      	cmp	r2, #0
 8010586:	d1fc      	bne.n	8010582 <CRC_Lock+0x62>
 8010588:	4b18      	ldr	r3, [pc, #96]	@ (80105ec <CRC_Lock+0xcc>)
 801058a:	6018      	str	r0, [r3, #0]
 801058c:	6818      	ldr	r0, [r3, #0]
 801058e:	1a43      	subs	r3, r0, r1
 8010590:	4258      	negs	r0, r3
 8010592:	4158      	adcs	r0, r3
 8010594:	e00e      	b.n	80105b4 <CRC_Lock+0x94>
 8010596:	681b      	ldr	r3, [r3, #0]
 8010598:	4013      	ands	r3, r2
 801059a:	f24d 2220 	movw	r2, #53792	@ 0xd220
 801059e:	4293      	cmp	r3, r2
 80105a0:	d111      	bne.n	80105c6 <CRC_Lock+0xa6>
 80105a2:	f240 4286 	movw	r2, #1158	@ 0x486
 80105a6:	4b12      	ldr	r3, [pc, #72]	@ (80105f0 <CRC_Lock+0xd0>)
 80105a8:	681b      	ldr	r3, [r3, #0]
 80105aa:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80105ae:	4293      	cmp	r3, r2
 80105b0:	d001      	beq.n	80105b6 <CRC_Lock+0x96>
 80105b2:	2000      	movs	r0, #0
 80105b4:	bd30      	pop	{r4, r5, pc}
 80105b6:	2201      	movs	r2, #1
 80105b8:	4b0e      	ldr	r3, [pc, #56]	@ (80105f4 <CRC_Lock+0xd4>)
 80105ba:	601a      	str	r2, [r3, #0]
 80105bc:	681a      	ldr	r2, [r3, #0]
 80105be:	2a00      	cmp	r2, #0
 80105c0:	d1fc      	bne.n	80105bc <CRC_Lock+0x9c>
 80105c2:	4b0d      	ldr	r3, [pc, #52]	@ (80105f8 <CRC_Lock+0xd8>)
 80105c4:	e7e1      	b.n	801058a <CRC_Lock+0x6a>
 80105c6:	2201      	movs	r2, #1
 80105c8:	4b0c      	ldr	r3, [pc, #48]	@ (80105fc <CRC_Lock+0xdc>)
 80105ca:	601a      	str	r2, [r3, #0]
 80105cc:	681a      	ldr	r2, [r3, #0]
 80105ce:	2a00      	cmp	r2, #0
 80105d0:	d1fc      	bne.n	80105cc <CRC_Lock+0xac>
 80105d2:	4b0b      	ldr	r3, [pc, #44]	@ (8010600 <CRC_Lock+0xe0>)
 80105d4:	e7d9      	b.n	801058a <CRC_Lock+0x6a>
 80105d6:	bf00      	nop
 80105d8:	e0002000 	.word	0xe0002000
 80105dc:	e000ed00 	.word	0xe000ed00
 80105e0:	e0042000 	.word	0xe0042000
 80105e4:	5c001000 	.word	0x5c001000
 80105e8:	58024c08 	.word	0x58024c08
 80105ec:	58024c00 	.word	0x58024c00
 80105f0:	46008ff0 	.word	0x46008ff0
 80105f4:	46024c08 	.word	0x46024c08
 80105f8:	46024c00 	.word	0x46024c00
 80105fc:	40023008 	.word	0x40023008
 8010600:	40023000 	.word	0x40023000

08010604 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>:
 8010604:	6101      	str	r1, [r0, #16]
 8010606:	4770      	bx	lr

08010608 <_ZN8touchgfx8Gestures4tickEv>:
 8010608:	7b83      	ldrb	r3, [r0, #14]
 801060a:	b14b      	cbz	r3, 8010620 <_ZN8touchgfx8Gestures4tickEv+0x18>
 801060c:	8903      	ldrh	r3, [r0, #8]
 801060e:	3301      	adds	r3, #1
 8010610:	b29b      	uxth	r3, r3
 8010612:	2b07      	cmp	r3, #7
 8010614:	8103      	strh	r3, [r0, #8]
 8010616:	bf81      	itttt	hi
 8010618:	2300      	movhi	r3, #0
 801061a:	8143      	strhhi	r3, [r0, #10]
 801061c:	8183      	strhhi	r3, [r0, #12]
 801061e:	7383      	strbhi	r3, [r0, #14]
 8010620:	4770      	bx	lr
	...

08010624 <_ZN8touchgfx8Gestures17registerDragEventEtttt>:
 8010624:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8010628:	4698      	mov	r8, r3
 801062a:	4604      	mov	r4, r0
 801062c:	8883      	ldrh	r3, [r0, #4]
 801062e:	460e      	mov	r6, r1
 8010630:	88c1      	ldrh	r1, [r0, #6]
 8010632:	2000      	movs	r0, #0
 8010634:	f8ad 3006 	strh.w	r3, [sp, #6]
 8010638:	eba8 0303 	sub.w	r3, r8, r3
 801063c:	b21b      	sxth	r3, r3
 801063e:	4617      	mov	r7, r2
 8010640:	4a17      	ldr	r2, [pc, #92]	@ (80106a0 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x7c>)
 8010642:	2b00      	cmp	r3, #0
 8010644:	bfb8      	it	lt
 8010646:	425b      	neglt	r3, r3
 8010648:	9200      	str	r2, [sp, #0]
 801064a:	8aa2      	ldrh	r2, [r4, #20]
 801064c:	f8bd 5028 	ldrh.w	r5, [sp, #40]	@ 0x28
 8010650:	b21b      	sxth	r3, r3
 8010652:	4293      	cmp	r3, r2
 8010654:	f88d 0004 	strb.w	r0, [sp, #4]
 8010658:	f8ad 1008 	strh.w	r1, [sp, #8]
 801065c:	f8ad 800a 	strh.w	r8, [sp, #10]
 8010660:	f8ad 500c 	strh.w	r5, [sp, #12]
 8010664:	dc07      	bgt.n	8010676 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x52>
 8010666:	1a69      	subs	r1, r5, r1
 8010668:	b209      	sxth	r1, r1
 801066a:	2900      	cmp	r1, #0
 801066c:	bfb8      	it	lt
 801066e:	4249      	neglt	r1, r1
 8010670:	b209      	sxth	r1, r1
 8010672:	428a      	cmp	r2, r1
 8010674:	da10      	bge.n	8010698 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x74>
 8010676:	6920      	ldr	r0, [r4, #16]
 8010678:	4669      	mov	r1, sp
 801067a:	6803      	ldr	r3, [r0, #0]
 801067c:	eba8 0606 	sub.w	r6, r8, r6
 8010680:	685b      	ldr	r3, [r3, #4]
 8010682:	4798      	blx	r3
 8010684:	2300      	movs	r3, #0
 8010686:	2001      	movs	r0, #1
 8010688:	1bef      	subs	r7, r5, r7
 801068a:	8123      	strh	r3, [r4, #8]
 801068c:	8166      	strh	r6, [r4, #10]
 801068e:	81a7      	strh	r7, [r4, #12]
 8010690:	f8a4 8004 	strh.w	r8, [r4, #4]
 8010694:	80e5      	strh	r5, [r4, #6]
 8010696:	73a0      	strb	r0, [r4, #14]
 8010698:	b004      	add	sp, #16
 801069a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801069e:	bf00      	nop
 80106a0:	08035ed0 	.word	0x08035ed0

080106a4 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>:
 80106a4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80106a6:	461e      	mov	r6, r3
 80106a8:	1e4b      	subs	r3, r1, #1
 80106aa:	2b01      	cmp	r3, #1
 80106ac:	b085      	sub	sp, #20
 80106ae:	4604      	mov	r4, r0
 80106b0:	460d      	mov	r5, r1
 80106b2:	4617      	mov	r7, r2
 80106b4:	d84b      	bhi.n	801074e <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xaa>
 80106b6:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 80106ba:	1cd3      	adds	r3, r2, #3
 80106bc:	b29b      	uxth	r3, r3
 80106be:	2b06      	cmp	r3, #6
 80106c0:	d916      	bls.n	80106f0 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x4c>
 80106c2:	f8df c0a0 	ldr.w	ip, [pc, #160]	@ 8010764 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 80106c6:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 80106ca:	f8cd c004 	str.w	ip, [sp, #4]
 80106ce:	f04f 0c00 	mov.w	ip, #0
 80106d2:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 80106d6:	6900      	ldr	r0, [r0, #16]
 80106d8:	f8ad 100c 	strh.w	r1, [sp, #12]
 80106dc:	f88d c008 	strb.w	ip, [sp, #8]
 80106e0:	f8ad 200a 	strh.w	r2, [sp, #10]
 80106e4:	f8ad 300e 	strh.w	r3, [sp, #14]
 80106e8:	6803      	ldr	r3, [r0, #0]
 80106ea:	a901      	add	r1, sp, #4
 80106ec:	689b      	ldr	r3, [r3, #8]
 80106ee:	4798      	blx	r3
 80106f0:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 80106f4:	1cd3      	adds	r3, r2, #3
 80106f6:	b29b      	uxth	r3, r3
 80106f8:	2b06      	cmp	r3, #6
 80106fa:	d916      	bls.n	801072a <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 80106fc:	f8df c064 	ldr.w	ip, [pc, #100]	@ 8010764 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 8010700:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8010704:	f8cd c004 	str.w	ip, [sp, #4]
 8010708:	f04f 0c01 	mov.w	ip, #1
 801070c:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8010710:	6920      	ldr	r0, [r4, #16]
 8010712:	f8ad 100c 	strh.w	r1, [sp, #12]
 8010716:	f88d c008 	strb.w	ip, [sp, #8]
 801071a:	f8ad 200a 	strh.w	r2, [sp, #10]
 801071e:	f8ad 300e 	strh.w	r3, [sp, #14]
 8010722:	6803      	ldr	r3, [r0, #0]
 8010724:	a901      	add	r1, sp, #4
 8010726:	689b      	ldr	r3, [r3, #8]
 8010728:	4798      	blx	r3
 801072a:	4b0d      	ldr	r3, [pc, #52]	@ (8010760 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xbc>)
 801072c:	6920      	ldr	r0, [r4, #16]
 801072e:	9301      	str	r3, [sp, #4]
 8010730:	2300      	movs	r3, #0
 8010732:	f88d 5008 	strb.w	r5, [sp, #8]
 8010736:	f8ad 700a 	strh.w	r7, [sp, #10]
 801073a:	f8ad 600c 	strh.w	r6, [sp, #12]
 801073e:	f8ad 300e 	strh.w	r3, [sp, #14]
 8010742:	6803      	ldr	r3, [r0, #0]
 8010744:	a901      	add	r1, sp, #4
 8010746:	681b      	ldr	r3, [r3, #0]
 8010748:	4798      	blx	r3
 801074a:	b005      	add	sp, #20
 801074c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801074e:	2900      	cmp	r1, #0
 8010750:	d1eb      	bne.n	801072a <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 8010752:	80a2      	strh	r2, [r4, #4]
 8010754:	80c6      	strh	r6, [r0, #6]
 8010756:	60a1      	str	r1, [r4, #8]
 8010758:	81a1      	strh	r1, [r4, #12]
 801075a:	73a1      	strb	r1, [r4, #14]
 801075c:	e7e5      	b.n	801072a <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 801075e:	bf00      	nop
 8010760:	08035ebc 	.word	0x08035ebc
 8010764:	08035ee4 	.word	0x08035ee4

08010768 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE>:
 8010768:	790b      	ldrb	r3, [r1, #4]
 801076a:	b570      	push	{r4, r5, r6, lr}
 801076c:	2b00      	cmp	r3, #0
 801076e:	bf0c      	ite	eq
 8010770:	2301      	moveq	r3, #1
 8010772:	2300      	movne	r3, #0
 8010774:	f890 502c 	ldrb.w	r5, [r0, #44]	@ 0x2c
 8010778:	4604      	mov	r4, r0
 801077a:	460e      	mov	r6, r1
 801077c:	f880 302c 	strb.w	r3, [r0, #44]	@ 0x2c
 8010780:	d109      	bne.n	8010796 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x2e>
 8010782:	b14d      	cbz	r5, 8010798 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x30>
 8010784:	7933      	ldrb	r3, [r6, #4]
 8010786:	2b01      	cmp	r3, #1
 8010788:	d10c      	bne.n	80107a4 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 801078a:	6823      	ldr	r3, [r4, #0]
 801078c:	4620      	mov	r0, r4
 801078e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010792:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8010794:	4718      	bx	r3
 8010796:	b12d      	cbz	r5, 80107a4 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 8010798:	6823      	ldr	r3, [r4, #0]
 801079a:	4620      	mov	r0, r4
 801079c:	695b      	ldr	r3, [r3, #20]
 801079e:	4798      	blx	r3
 80107a0:	2d00      	cmp	r5, #0
 80107a2:	d1ef      	bne.n	8010784 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x1c>
 80107a4:	bd70      	pop	{r4, r5, r6, pc}

080107a6 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>:
 80107a6:	b570      	push	{r4, r5, r6, lr}
 80107a8:	4605      	mov	r5, r0
 80107aa:	880b      	ldrh	r3, [r1, #0]
 80107ac:	4604      	mov	r4, r0
 80107ae:	85c3      	strh	r3, [r0, #46]	@ 0x2e
 80107b0:	8813      	ldrh	r3, [r2, #0]
 80107b2:	f825 3f30 	strh.w	r3, [r5, #48]!
 80107b6:	4628      	mov	r0, r5
 80107b8:	f7ff fd3c 	bl	8010234 <_ZNK8touchgfx6Bitmap8getWidthEv>
 80107bc:	4606      	mov	r6, r0
 80107be:	4628      	mov	r0, r5
 80107c0:	f7ff fd6c 	bl	801029c <_ZNK8touchgfx6Bitmap9getHeightEv>
 80107c4:	4605      	mov	r5, r0
 80107c6:	6823      	ldr	r3, [r4, #0]
 80107c8:	4631      	mov	r1, r6
 80107ca:	4620      	mov	r0, r4
 80107cc:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80107ce:	4798      	blx	r3
 80107d0:	6823      	ldr	r3, [r4, #0]
 80107d2:	4629      	mov	r1, r5
 80107d4:	4620      	mov	r0, r4
 80107d6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80107da:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80107dc:	4718      	bx	r3

080107de <_ZNK8touchgfx6Button12getSolidRectEv>:
 80107de:	b510      	push	{r4, lr}
 80107e0:	f891 3032 	ldrb.w	r3, [r1, #50]	@ 0x32
 80107e4:	4604      	mov	r4, r0
 80107e6:	2bff      	cmp	r3, #255	@ 0xff
 80107e8:	d006      	beq.n	80107f8 <_ZNK8touchgfx6Button12getSolidRectEv+0x1a>
 80107ea:	2300      	movs	r3, #0
 80107ec:	8003      	strh	r3, [r0, #0]
 80107ee:	8043      	strh	r3, [r0, #2]
 80107f0:	8083      	strh	r3, [r0, #4]
 80107f2:	80c3      	strh	r3, [r0, #6]
 80107f4:	4620      	mov	r0, r4
 80107f6:	bd10      	pop	{r4, pc}
 80107f8:	f891 302c 	ldrb.w	r3, [r1, #44]	@ 0x2c
 80107fc:	b11b      	cbz	r3, 8010806 <_ZNK8touchgfx6Button12getSolidRectEv+0x28>
 80107fe:	3130      	adds	r1, #48	@ 0x30
 8010800:	f7ff fd80 	bl	8010304 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8010804:	e7f6      	b.n	80107f4 <_ZNK8touchgfx6Button12getSolidRectEv+0x16>
 8010806:	312e      	adds	r1, #46	@ 0x2e
 8010808:	e7fa      	b.n	8010800 <_ZNK8touchgfx6Button12getSolidRectEv+0x22>
	...

0801080c <_ZNK8touchgfx6Button4drawERKNS_4RectE>:
 801080c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010810:	f890 302c 	ldrb.w	r3, [r0, #44]	@ 0x2c
 8010814:	b08a      	sub	sp, #40	@ 0x28
 8010816:	4604      	mov	r4, r0
 8010818:	4688      	mov	r8, r1
 801081a:	2b00      	cmp	r3, #0
 801081c:	d066      	beq.n	80108ec <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe0>
 801081e:	8e03      	ldrh	r3, [r0, #48]	@ 0x30
 8010820:	a805      	add	r0, sp, #20
 8010822:	f8ad 3014 	strh.w	r3, [sp, #20]
 8010826:	f7ff fd05 	bl	8010234 <_ZNK8touchgfx6Bitmap8getWidthEv>
 801082a:	4607      	mov	r7, r0
 801082c:	a805      	add	r0, sp, #20
 801082e:	f7ff fd35 	bl	801029c <_ZNK8touchgfx6Bitmap9getHeightEv>
 8010832:	2300      	movs	r3, #0
 8010834:	f9b8 6000 	ldrsh.w	r6, [r8]
 8010838:	f8b8 2004 	ldrh.w	r2, [r8, #4]
 801083c:	9306      	str	r3, [sp, #24]
 801083e:	4432      	add	r2, r6
 8010840:	b292      	uxth	r2, r2
 8010842:	fa0f fc82 	sxth.w	ip, r2
 8010846:	459c      	cmp	ip, r3
 8010848:	dd52      	ble.n	80108f0 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 801084a:	42b7      	cmp	r7, r6
 801084c:	dd50      	ble.n	80108f0 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 801084e:	f9b8 5002 	ldrsh.w	r5, [r8, #2]
 8010852:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 8010856:	442b      	add	r3, r5
 8010858:	b29b      	uxth	r3, r3
 801085a:	b219      	sxth	r1, r3
 801085c:	2900      	cmp	r1, #0
 801085e:	dd47      	ble.n	80108f0 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 8010860:	42a8      	cmp	r0, r5
 8010862:	dd45      	ble.n	80108f0 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 8010864:	4567      	cmp	r7, ip
 8010866:	bfb8      	it	lt
 8010868:	b2ba      	uxthlt	r2, r7
 801086a:	4288      	cmp	r0, r1
 801086c:	ea26 76e6 	bic.w	r6, r6, r6, asr #31
 8010870:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8010874:	bfb8      	it	lt
 8010876:	b283      	uxthlt	r3, r0
 8010878:	1b92      	subs	r2, r2, r6
 801087a:	1b5b      	subs	r3, r3, r5
 801087c:	f8ad 201c 	strh.w	r2, [sp, #28]
 8010880:	f8ad 301e 	strh.w	r3, [sp, #30]
 8010884:	f8ad 6018 	strh.w	r6, [sp, #24]
 8010888:	f8ad 501a 	strh.w	r5, [sp, #26]
 801088c:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 8010890:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 8010894:	429a      	cmp	r2, r3
 8010896:	d026      	beq.n	80108e6 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 8010898:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 801089c:	2b00      	cmp	r3, #0
 801089e:	dd22      	ble.n	80108e6 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 80108a0:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 80108a4:	2b00      	cmp	r3, #0
 80108a6:	dd1e      	ble.n	80108e6 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 80108a8:	2300      	movs	r3, #0
 80108aa:	e9cd 3308 	strd	r3, r3, [sp, #32]
 80108ae:	6823      	ldr	r3, [r4, #0]
 80108b0:	a908      	add	r1, sp, #32
 80108b2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80108b4:	4620      	mov	r0, r4
 80108b6:	4798      	blx	r3
 80108b8:	4b0f      	ldr	r3, [pc, #60]	@ (80108f8 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xec>)
 80108ba:	681b      	ldr	r3, [r3, #0]
 80108bc:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
 80108c0:	b10a      	cbz	r2, 80108c6 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xba>
 80108c2:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
 80108c4:	b900      	cbnz	r0, 80108c8 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xbc>
 80108c6:	6898      	ldr	r0, [r3, #8]
 80108c8:	2501      	movs	r5, #1
 80108ca:	6801      	ldr	r1, [r0, #0]
 80108cc:	9502      	str	r5, [sp, #8]
 80108ce:	f894 4032 	ldrb.w	r4, [r4, #50]	@ 0x32
 80108d2:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	@ 0x22
 80108d6:	9401      	str	r4, [sp, #4]
 80108d8:	ac06      	add	r4, sp, #24
 80108da:	9400      	str	r4, [sp, #0]
 80108dc:	688c      	ldr	r4, [r1, #8]
 80108de:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 80108e2:	a905      	add	r1, sp, #20
 80108e4:	47a0      	blx	r4
 80108e6:	b00a      	add	sp, #40	@ 0x28
 80108e8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80108ec:	8dc3      	ldrh	r3, [r0, #46]	@ 0x2e
 80108ee:	e797      	b.n	8010820 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x14>
 80108f0:	2300      	movs	r3, #0
 80108f2:	9307      	str	r3, [sp, #28]
 80108f4:	e7ca      	b.n	801088c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x80>
 80108f6:	bf00      	nop
 80108f8:	200830a4 	.word	0x200830a4

080108fc <nema_rb_init>:
 80108fc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010900:	6805      	ldr	r5, [r0, #0]
 8010902:	4f23      	ldr	r7, [pc, #140]	@ (8010990 <nema_rb_init+0x94>)
 8010904:	2d00      	cmp	r5, #0
 8010906:	603d      	str	r5, [r7, #0]
 8010908:	dd3c      	ble.n	8010984 <nema_rb_init+0x88>
 801090a:	f8df c090 	ldr.w	ip, [pc, #144]	@ 801099c <nema_rb_init+0xa0>
 801090e:	10ab      	asrs	r3, r5, #2
 8010910:	3b04      	subs	r3, #4
 8010912:	f8df e08c 	ldr.w	lr, [pc, #140]	@ 80109a0 <nema_rb_init+0xa4>
 8010916:	6886      	ldr	r6, [r0, #8]
 8010918:	4c1e      	ldr	r4, [pc, #120]	@ (8010994 <nema_rb_init+0x98>)
 801091a:	f8cc 3000 	str.w	r3, [ip]
 801091e:	f8df 8084 	ldr.w	r8, [pc, #132]	@ 80109a4 <nema_rb_init+0xa8>
 8010922:	f8d0 c00c 	ldr.w	ip, [r0, #12]
 8010926:	f8ce 0000 	str.w	r0, [lr]
 801092a:	6026      	str	r6, [r4, #0]
 801092c:	f8c8 c000 	str.w	ip, [r8]
 8010930:	b329      	cbz	r1, 801097e <nema_rb_init+0x82>
 8010932:	2400      	movs	r4, #0
 8010934:	f8df e070 	ldr.w	lr, [pc, #112]	@ 80109a8 <nema_rb_init+0xac>
 8010938:	4917      	ldr	r1, [pc, #92]	@ (8010998 <nema_rb_init+0x9c>)
 801093a:	e9c0 4404 	strd	r4, r4, [r0, #16]
 801093e:	f846 e023 	str.w	lr, [r6, r3, lsl #2]
 8010942:	eb06 0383 	add.w	r3, r6, r3, lsl #2
 8010946:	e9c3 1502 	strd	r1, r5, [r3, #8]
 801094a:	f8c3 c004 	str.w	ip, [r3, #4]
 801094e:	f7f2 fabb 	bl	8002ec8 <nema_buffer_flush>
 8010952:	4621      	mov	r1, r4
 8010954:	f44f 70a4 	mov.w	r0, #328	@ 0x148
 8010958:	f7f2 f9dc 	bl	8002d14 <nema_reg_write>
 801095c:	f8d8 1000 	ldr.w	r1, [r8]
 8010960:	20ec      	movs	r0, #236	@ 0xec
 8010962:	f041 0106 	orr.w	r1, r1, #6
 8010966:	f7f2 f9d5 	bl	8002d14 <nema_reg_write>
 801096a:	f8d8 1000 	ldr.w	r1, [r8]
 801096e:	20f0      	movs	r0, #240	@ 0xf0
 8010970:	f7f2 f9d0 	bl	8002d14 <nema_reg_write>
 8010974:	6839      	ldr	r1, [r7, #0]
 8010976:	20f4      	movs	r0, #244	@ 0xf4
 8010978:	f7f2 f9cc 	bl	8002d14 <nema_reg_write>
 801097c:	4621      	mov	r1, r4
 801097e:	4608      	mov	r0, r1
 8010980:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8010984:	2004      	movs	r0, #4
 8010986:	f000 fa25 	bl	8010dd4 <nema_set_error>
 801098a:	f04f 31ff 	mov.w	r1, #4294967295
 801098e:	e7f6      	b.n	801097e <nema_rb_init+0x82>
 8010990:	20083140 	.word	0x20083140
 8010994:	20083138 	.word	0x20083138
 8010998:	ff0000f4 	.word	0xff0000f4
 801099c:	2008313c 	.word	0x2008313c
 80109a0:	20083130 	.word	0x20083130
 80109a4:	20083134 	.word	0x20083134
 80109a8:	ff0000f0 	.word	0xff0000f0

080109ac <nema_rb_submit_cmdlist2>:
 80109ac:	2900      	cmp	r1, #0
 80109ae:	d074      	beq.n	8010a9a <nema_rb_submit_cmdlist2+0xee>
 80109b0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80109b4:	f8df 80f8 	ldr.w	r8, [pc, #248]	@ 8010ab0 <nema_rb_submit_cmdlist2+0x104>
 80109b8:	4b39      	ldr	r3, [pc, #228]	@ (8010aa0 <nema_rb_submit_cmdlist2+0xf4>)
 80109ba:	f8d8 2000 	ldr.w	r2, [r8]
 80109be:	681d      	ldr	r5, [r3, #0]
 80109c0:	6913      	ldr	r3, [r2, #16]
 80109c2:	468c      	mov	ip, r1
 80109c4:	4c37      	ldr	r4, [pc, #220]	@ (8010aa4 <nema_rb_submit_cmdlist2+0xf8>)
 80109c6:	1d19      	adds	r1, r3, #4
 80109c8:	42a9      	cmp	r1, r5
 80109ca:	6824      	ldr	r4, [r4, #0]
 80109cc:	db0a      	blt.n	80109e4 <nema_rb_submit_cmdlist2+0x38>
 80109ce:	f44f 3180 	mov.w	r1, #65536	@ 0x10000
 80109d2:	f844 1023 	str.w	r1, [r4, r3, lsl #2]
 80109d6:	6913      	ldr	r3, [r2, #16]
 80109d8:	3301      	adds	r3, #1
 80109da:	429d      	cmp	r5, r3
 80109dc:	6113      	str	r3, [r2, #16]
 80109de:	dc59      	bgt.n	8010a94 <nema_rb_submit_cmdlist2+0xe8>
 80109e0:	2300      	movs	r3, #0
 80109e2:	6113      	str	r3, [r2, #16]
 80109e4:	f44f 3180 	mov.w	r1, #65536	@ 0x10000
 80109e8:	f04f 0e00 	mov.w	lr, #0
 80109ec:	e009      	b.n	8010a02 <nema_rb_submit_cmdlist2+0x56>
 80109ee:	f844 1023 	str.w	r1, [r4, r3, lsl #2]
 80109f2:	6913      	ldr	r3, [r2, #16]
 80109f4:	3301      	adds	r3, #1
 80109f6:	429d      	cmp	r5, r3
 80109f8:	6113      	str	r3, [r2, #16]
 80109fa:	bfdc      	itt	le
 80109fc:	2300      	movle	r3, #0
 80109fe:	f8c2 e010 	strle.w	lr, [r2, #16]
 8010a02:	f013 0703 	ands.w	r7, r3, #3
 8010a06:	eb04 0683 	add.w	r6, r4, r3, lsl #2
 8010a0a:	d1f0      	bne.n	80109ee <nema_rb_submit_cmdlist2+0x42>
 8010a0c:	23f0      	movs	r3, #240	@ 0xf0
 8010a0e:	6033      	str	r3, [r6, #0]
 8010a10:	6913      	ldr	r3, [r2, #16]
 8010a12:	3301      	adds	r3, #1
 8010a14:	429d      	cmp	r5, r3
 8010a16:	bfd3      	iteet	le
 8010a18:	4623      	movle	r3, r4
 8010a1a:	6113      	strgt	r3, [r2, #16]
 8010a1c:	eb04 0383 	addgt.w	r3, r4, r3, lsl #2
 8010a20:	6117      	strle	r7, [r2, #16]
 8010a22:	6018      	str	r0, [r3, #0]
 8010a24:	6913      	ldr	r3, [r2, #16]
 8010a26:	3301      	adds	r3, #1
 8010a28:	429d      	cmp	r5, r3
 8010a2a:	dd2f      	ble.n	8010a8c <nema_rb_submit_cmdlist2+0xe0>
 8010a2c:	6113      	str	r3, [r2, #16]
 8010a2e:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 8010a32:	491d      	ldr	r1, [pc, #116]	@ (8010aa8 <nema_rb_submit_cmdlist2+0xfc>)
 8010a34:	4610      	mov	r0, r2
 8010a36:	6019      	str	r1, [r3, #0]
 8010a38:	6913      	ldr	r3, [r2, #16]
 8010a3a:	3301      	adds	r3, #1
 8010a3c:	429d      	cmp	r5, r3
 8010a3e:	bfd3      	iteet	le
 8010a40:	2300      	movle	r3, #0
 8010a42:	eb04 0483 	addgt.w	r4, r4, r3, lsl #2
 8010a46:	6113      	strgt	r3, [r2, #16]
 8010a48:	6113      	strle	r3, [r2, #16]
 8010a4a:	f8c4 c000 	str.w	ip, [r4]
 8010a4e:	6913      	ldr	r3, [r2, #16]
 8010a50:	3301      	adds	r3, #1
 8010a52:	429d      	cmp	r5, r3
 8010a54:	bfd8      	it	le
 8010a56:	2300      	movle	r3, #0
 8010a58:	6113      	str	r3, [r2, #16]
 8010a5a:	f7f2 fa35 	bl	8002ec8 <nema_buffer_flush>
 8010a5e:	4a13      	ldr	r2, [pc, #76]	@ (8010aac <nema_rb_submit_cmdlist2+0x100>)
 8010a60:	f8d8 3000 	ldr.w	r3, [r8]
 8010a64:	6811      	ldr	r1, [r2, #0]
 8010a66:	691b      	ldr	r3, [r3, #16]
 8010a68:	20ec      	movs	r0, #236	@ 0xec
 8010a6a:	eb01 0183 	add.w	r1, r1, r3, lsl #2
 8010a6e:	f041 0104 	orr.w	r1, r1, #4
 8010a72:	f7f2 f94f 	bl	8002d14 <nema_reg_write>
 8010a76:	f8d8 3000 	ldr.w	r3, [r8]
 8010a7a:	6958      	ldr	r0, [r3, #20]
 8010a7c:	3001      	adds	r0, #1
 8010a7e:	f1b0 7f80 	cmp.w	r0, #16777216	@ 0x1000000
 8010a82:	bfa8      	it	ge
 8010a84:	2000      	movge	r0, #0
 8010a86:	6158      	str	r0, [r3, #20]
 8010a88:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8010a8c:	2100      	movs	r1, #0
 8010a8e:	4623      	mov	r3, r4
 8010a90:	6111      	str	r1, [r2, #16]
 8010a92:	e7ce      	b.n	8010a32 <nema_rb_submit_cmdlist2+0x86>
 8010a94:	2b00      	cmp	r3, #0
 8010a96:	d19c      	bne.n	80109d2 <nema_rb_submit_cmdlist2+0x26>
 8010a98:	e7a4      	b.n	80109e4 <nema_rb_submit_cmdlist2+0x38>
 8010a9a:	f04f 30ff 	mov.w	r0, #4294967295
 8010a9e:	4770      	bx	lr
 8010aa0:	2008313c 	.word	0x2008313c
 8010aa4:	20083138 	.word	0x20083138
 8010aa8:	000200f4 	.word	0x000200f4
 8010aac:	20083134 	.word	0x20083134
 8010ab0:	20083130 	.word	0x20083130

08010ab4 <nema_rb_submit_cmdlist>:
 8010ab4:	68c0      	ldr	r0, [r0, #12]
 8010ab6:	f7ff bf79 	b.w	80109ac <nema_rb_submit_cmdlist2>
 8010aba:	bf00      	nop

08010abc <nema_rb_inline_cmd>:
 8010abc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8010abe:	4e21      	ldr	r6, [pc, #132]	@ (8010b44 <nema_rb_inline_cmd+0x88>)
 8010ac0:	4b21      	ldr	r3, [pc, #132]	@ (8010b48 <nema_rb_inline_cmd+0x8c>)
 8010ac2:	6832      	ldr	r2, [r6, #0]
 8010ac4:	681d      	ldr	r5, [r3, #0]
 8010ac6:	6913      	ldr	r3, [r2, #16]
 8010ac8:	4c20      	ldr	r4, [pc, #128]	@ (8010b4c <nema_rb_inline_cmd+0x90>)
 8010aca:	1c5f      	adds	r7, r3, #1
 8010acc:	42af      	cmp	r7, r5
 8010ace:	6824      	ldr	r4, [r4, #0]
 8010ad0:	db24      	blt.n	8010b1c <nema_rb_inline_cmd+0x60>
 8010ad2:	f44f 3780 	mov.w	r7, #65536	@ 0x10000
 8010ad6:	f844 7023 	str.w	r7, [r4, r3, lsl #2]
 8010ada:	6913      	ldr	r3, [r2, #16]
 8010adc:	3301      	adds	r3, #1
 8010ade:	429d      	cmp	r5, r3
 8010ae0:	6113      	str	r3, [r2, #16]
 8010ae2:	dc17      	bgt.n	8010b14 <nema_rb_inline_cmd+0x58>
 8010ae4:	2700      	movs	r7, #0
 8010ae6:	4623      	mov	r3, r4
 8010ae8:	6117      	str	r7, [r2, #16]
 8010aea:	6018      	str	r0, [r3, #0]
 8010aec:	6913      	ldr	r3, [r2, #16]
 8010aee:	3301      	adds	r3, #1
 8010af0:	429d      	cmp	r5, r3
 8010af2:	bfd3      	iteet	le
 8010af4:	2300      	movle	r3, #0
 8010af6:	eb04 0483 	addgt.w	r4, r4, r3, lsl #2
 8010afa:	6113      	strgt	r3, [r2, #16]
 8010afc:	6113      	strle	r3, [r2, #16]
 8010afe:	6021      	str	r1, [r4, #0]
 8010b00:	6913      	ldr	r3, [r2, #16]
 8010b02:	3301      	adds	r3, #1
 8010b04:	429d      	cmp	r5, r3
 8010b06:	bfd8      	it	le
 8010b08:	2300      	movle	r3, #0
 8010b0a:	f010 4f7f 	tst.w	r0, #4278190080	@ 0xff000000
 8010b0e:	6113      	str	r3, [r2, #16]
 8010b10:	d107      	bne.n	8010b22 <nema_rb_inline_cmd+0x66>
 8010b12:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8010b14:	2b00      	cmp	r3, #0
 8010b16:	d1de      	bne.n	8010ad6 <nema_rb_inline_cmd+0x1a>
 8010b18:	4623      	mov	r3, r4
 8010b1a:	e7e6      	b.n	8010aea <nema_rb_inline_cmd+0x2e>
 8010b1c:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 8010b20:	e7e3      	b.n	8010aea <nema_rb_inline_cmd+0x2e>
 8010b22:	4610      	mov	r0, r2
 8010b24:	f7f2 f9d0 	bl	8002ec8 <nema_buffer_flush>
 8010b28:	6833      	ldr	r3, [r6, #0]
 8010b2a:	4a09      	ldr	r2, [pc, #36]	@ (8010b50 <nema_rb_inline_cmd+0x94>)
 8010b2c:	691b      	ldr	r3, [r3, #16]
 8010b2e:	6811      	ldr	r1, [r2, #0]
 8010b30:	20ec      	movs	r0, #236	@ 0xec
 8010b32:	eb01 0183 	add.w	r1, r1, r3, lsl #2
 8010b36:	f041 0104 	orr.w	r1, r1, #4
 8010b3a:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 8010b3e:	f7f2 b8e9 	b.w	8002d14 <nema_reg_write>
 8010b42:	bf00      	nop
 8010b44:	20083130 	.word	0x20083130
 8010b48:	2008313c 	.word	0x2008313c
 8010b4c:	20083138 	.word	0x20083138
 8010b50:	20083134 	.word	0x20083134

08010b54 <nema_rb_force_flush>:
 8010b54:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8010b56:	4e36      	ldr	r6, [pc, #216]	@ (8010c30 <nema_rb_force_flush+0xdc>)
 8010b58:	4b36      	ldr	r3, [pc, #216]	@ (8010c34 <nema_rb_force_flush+0xe0>)
 8010b5a:	6830      	ldr	r0, [r6, #0]
 8010b5c:	6819      	ldr	r1, [r3, #0]
 8010b5e:	6903      	ldr	r3, [r0, #16]
 8010b60:	4a35      	ldr	r2, [pc, #212]	@ (8010c38 <nema_rb_force_flush+0xe4>)
 8010b62:	1d1c      	adds	r4, r3, #4
 8010b64:	428c      	cmp	r4, r1
 8010b66:	6812      	ldr	r2, [r2, #0]
 8010b68:	db0a      	blt.n	8010b80 <nema_rb_force_flush+0x2c>
 8010b6a:	f44f 3480 	mov.w	r4, #65536	@ 0x10000
 8010b6e:	f842 4023 	str.w	r4, [r2, r3, lsl #2]
 8010b72:	6903      	ldr	r3, [r0, #16]
 8010b74:	3301      	adds	r3, #1
 8010b76:	4299      	cmp	r1, r3
 8010b78:	6103      	str	r3, [r0, #16]
 8010b7a:	dc51      	bgt.n	8010c20 <nema_rb_force_flush+0xcc>
 8010b7c:	2300      	movs	r3, #0
 8010b7e:	6103      	str	r3, [r0, #16]
 8010b80:	f44f 3580 	mov.w	r5, #65536	@ 0x10000
 8010b84:	2700      	movs	r7, #0
 8010b86:	e008      	b.n	8010b9a <nema_rb_force_flush+0x46>
 8010b88:	f842 5023 	str.w	r5, [r2, r3, lsl #2]
 8010b8c:	6903      	ldr	r3, [r0, #16]
 8010b8e:	3301      	adds	r3, #1
 8010b90:	4299      	cmp	r1, r3
 8010b92:	6103      	str	r3, [r0, #16]
 8010b94:	bfdc      	itt	le
 8010b96:	2300      	movle	r3, #0
 8010b98:	6107      	strle	r7, [r0, #16]
 8010b9a:	f013 0c03 	ands.w	ip, r3, #3
 8010b9e:	eb02 0483 	add.w	r4, r2, r3, lsl #2
 8010ba2:	d1f1      	bne.n	8010b88 <nema_rb_force_flush+0x34>
 8010ba4:	4d25      	ldr	r5, [pc, #148]	@ (8010c3c <nema_rb_force_flush+0xe8>)
 8010ba6:	4f26      	ldr	r7, [pc, #152]	@ (8010c40 <nema_rb_force_flush+0xec>)
 8010ba8:	6025      	str	r5, [r4, #0]
 8010baa:	6904      	ldr	r4, [r0, #16]
 8010bac:	683d      	ldr	r5, [r7, #0]
 8010bae:	3401      	adds	r4, #1
 8010bb0:	42a1      	cmp	r1, r4
 8010bb2:	bfd8      	it	le
 8010bb4:	4614      	movle	r4, r2
 8010bb6:	f103 0304 	add.w	r3, r3, #4
 8010bba:	bfc8      	it	gt
 8010bbc:	6104      	strgt	r4, [r0, #16]
 8010bbe:	eb05 0383 	add.w	r3, r5, r3, lsl #2
 8010bc2:	bfcc      	ite	gt
 8010bc4:	eb02 0484 	addgt.w	r4, r2, r4, lsl #2
 8010bc8:	f8c0 c010 	strle.w	ip, [r0, #16]
 8010bcc:	6023      	str	r3, [r4, #0]
 8010bce:	6903      	ldr	r3, [r0, #16]
 8010bd0:	3301      	adds	r3, #1
 8010bd2:	4299      	cmp	r1, r3
 8010bd4:	dd27      	ble.n	8010c26 <nema_rb_force_flush+0xd2>
 8010bd6:	6103      	str	r3, [r0, #16]
 8010bd8:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 8010bdc:	4c19      	ldr	r4, [pc, #100]	@ (8010c44 <nema_rb_force_flush+0xf0>)
 8010bde:	601c      	str	r4, [r3, #0]
 8010be0:	6903      	ldr	r3, [r0, #16]
 8010be2:	3301      	adds	r3, #1
 8010be4:	4299      	cmp	r1, r3
 8010be6:	bfd5      	itete	le
 8010be8:	2300      	movle	r3, #0
 8010bea:	6103      	strgt	r3, [r0, #16]
 8010bec:	6103      	strle	r3, [r0, #16]
 8010bee:	eb02 0283 	addgt.w	r2, r2, r3, lsl #2
 8010bf2:	4b15      	ldr	r3, [pc, #84]	@ (8010c48 <nema_rb_force_flush+0xf4>)
 8010bf4:	681b      	ldr	r3, [r3, #0]
 8010bf6:	6013      	str	r3, [r2, #0]
 8010bf8:	6903      	ldr	r3, [r0, #16]
 8010bfa:	3301      	adds	r3, #1
 8010bfc:	4299      	cmp	r1, r3
 8010bfe:	bfd8      	it	le
 8010c00:	2300      	movle	r3, #0
 8010c02:	6103      	str	r3, [r0, #16]
 8010c04:	f7f2 f960 	bl	8002ec8 <nema_buffer_flush>
 8010c08:	6833      	ldr	r3, [r6, #0]
 8010c0a:	6839      	ldr	r1, [r7, #0]
 8010c0c:	691b      	ldr	r3, [r3, #16]
 8010c0e:	20ec      	movs	r0, #236	@ 0xec
 8010c10:	eb01 0183 	add.w	r1, r1, r3, lsl #2
 8010c14:	f041 0104 	orr.w	r1, r1, #4
 8010c18:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 8010c1c:	f7f2 b87a 	b.w	8002d14 <nema_reg_write>
 8010c20:	2b00      	cmp	r3, #0
 8010c22:	d1a4      	bne.n	8010b6e <nema_rb_force_flush+0x1a>
 8010c24:	e7ac      	b.n	8010b80 <nema_rb_force_flush+0x2c>
 8010c26:	2400      	movs	r4, #0
 8010c28:	4613      	mov	r3, r2
 8010c2a:	6104      	str	r4, [r0, #16]
 8010c2c:	e7d6      	b.n	8010bdc <nema_rb_force_flush+0x88>
 8010c2e:	bf00      	nop
 8010c30:	20083130 	.word	0x20083130
 8010c34:	2008313c 	.word	0x2008313c
 8010c38:	20083138 	.word	0x20083138
 8010c3c:	ff0000f0 	.word	0xff0000f0
 8010c40:	20083134 	.word	0x20083134
 8010c44:	ff0000f4 	.word	0xff0000f4
 8010c48:	20083140 	.word	0x20083140

08010c4c <nema_rb_submit_cl_id>:
 8010c4c:	b510      	push	{r4, lr}
 8010c4e:	1e04      	subs	r4, r0, #0
 8010c50:	dd40      	ble.n	8010cd4 <nema_rb_submit_cl_id+0x88>
 8010c52:	2000      	movs	r0, #0
 8010c54:	f7f2 f939 	bl	8002eca <nema_mutex_lock>
 8010c58:	4621      	mov	r1, r4
 8010c5a:	f44f 70a4 	mov.w	r0, #328	@ 0x148
 8010c5e:	f7ff ff2d 	bl	8010abc <nema_rb_inline_cmd>
 8010c62:	4a1d      	ldr	r2, [pc, #116]	@ (8010cd8 <nema_rb_submit_cl_id+0x8c>)
 8010c64:	4b1d      	ldr	r3, [pc, #116]	@ (8010cdc <nema_rb_submit_cl_id+0x90>)
 8010c66:	6812      	ldr	r2, [r2, #0]
 8010c68:	6818      	ldr	r0, [r3, #0]
 8010c6a:	6913      	ldr	r3, [r2, #16]
 8010c6c:	1c59      	adds	r1, r3, #1
 8010c6e:	4281      	cmp	r1, r0
 8010c70:	db0e      	blt.n	8010c90 <nema_rb_submit_cl_id+0x44>
 8010c72:	f44f 3480 	mov.w	r4, #65536	@ 0x10000
 8010c76:	491a      	ldr	r1, [pc, #104]	@ (8010ce0 <nema_rb_submit_cl_id+0x94>)
 8010c78:	6809      	ldr	r1, [r1, #0]
 8010c7a:	f841 4023 	str.w	r4, [r1, r3, lsl #2]
 8010c7e:	6913      	ldr	r3, [r2, #16]
 8010c80:	3301      	adds	r3, #1
 8010c82:	4298      	cmp	r0, r3
 8010c84:	6113      	str	r3, [r2, #16]
 8010c86:	dc21      	bgt.n	8010ccc <nema_rb_submit_cl_id+0x80>
 8010c88:	2400      	movs	r4, #0
 8010c8a:	460b      	mov	r3, r1
 8010c8c:	6114      	str	r4, [r2, #16]
 8010c8e:	e003      	b.n	8010c98 <nema_rb_submit_cl_id+0x4c>
 8010c90:	4913      	ldr	r1, [pc, #76]	@ (8010ce0 <nema_rb_submit_cl_id+0x94>)
 8010c92:	6809      	ldr	r1, [r1, #0]
 8010c94:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 8010c98:	24f8      	movs	r4, #248	@ 0xf8
 8010c9a:	601c      	str	r4, [r3, #0]
 8010c9c:	6913      	ldr	r3, [r2, #16]
 8010c9e:	3301      	adds	r3, #1
 8010ca0:	4298      	cmp	r0, r3
 8010ca2:	bfd5      	itete	le
 8010ca4:	2300      	movle	r3, #0
 8010ca6:	6113      	strgt	r3, [r2, #16]
 8010ca8:	6113      	strle	r3, [r2, #16]
 8010caa:	eb01 0183 	addgt.w	r1, r1, r3, lsl #2
 8010cae:	2301      	movs	r3, #1
 8010cb0:	600b      	str	r3, [r1, #0]
 8010cb2:	6913      	ldr	r3, [r2, #16]
 8010cb4:	3301      	adds	r3, #1
 8010cb6:	4298      	cmp	r0, r3
 8010cb8:	bfd8      	it	le
 8010cba:	2300      	movle	r3, #0
 8010cbc:	6113      	str	r3, [r2, #16]
 8010cbe:	f7ff ff49 	bl	8010b54 <nema_rb_force_flush>
 8010cc2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8010cc6:	2000      	movs	r0, #0
 8010cc8:	f7f2 b901 	b.w	8002ece <nema_mutex_unlock>
 8010ccc:	2b00      	cmp	r3, #0
 8010cce:	d1d4      	bne.n	8010c7a <nema_rb_submit_cl_id+0x2e>
 8010cd0:	460b      	mov	r3, r1
 8010cd2:	e7e1      	b.n	8010c98 <nema_rb_submit_cl_id+0x4c>
 8010cd4:	bd10      	pop	{r4, pc}
 8010cd6:	bf00      	nop
 8010cd8:	20083130 	.word	0x20083130
 8010cdc:	2008313c 	.word	0x2008313c
 8010ce0:	20083138 	.word	0x20083138

08010ce4 <init_nema_regs>:
 8010ce4:	b538      	push	{r3, r4, r5, lr}
 8010ce6:	2100      	movs	r1, #0
 8010ce8:	20e8      	movs	r0, #232	@ 0xe8
 8010cea:	f7f2 f813 	bl	8002d14 <nema_reg_write>
 8010cee:	2100      	movs	r1, #0
 8010cf0:	20fc      	movs	r0, #252	@ 0xfc
 8010cf2:	f7f2 f80f 	bl	8002d14 <nema_reg_write>
 8010cf6:	2101      	movs	r1, #1
 8010cf8:	f44f 7062 	mov.w	r0, #904	@ 0x388
 8010cfc:	f7f2 f80a 	bl	8002d14 <nema_reg_write>
 8010d00:	2000      	movs	r0, #0
 8010d02:	f001 fd35 	bl	8012770 <nema_set_interrupt_ctrl>
 8010d06:	f00d fa9d 	bl	801e244 <nema_blender_init>
 8010d0a:	2100      	movs	r1, #0
 8010d0c:	f44f 7000 	mov.w	r0, #512	@ 0x200
 8010d10:	f00d f9a4 	bl	801e05c <nema_cl_add_cmd>
 8010d14:	f04f 31ff 	mov.w	r1, #4294967295
 8010d18:	f44f 7001 	mov.w	r0, #516	@ 0x204
 8010d1c:	f00d f99e 	bl	801e05c <nema_cl_add_cmd>
 8010d20:	f001 fa92 	bl	8012248 <nema_readHwConfig>
 8010d24:	f410 2080 	ands.w	r0, r0, #262144	@ 0x40000
 8010d28:	d015      	beq.n	8010d56 <init_nema_regs+0x72>
 8010d2a:	2007      	movs	r0, #7
 8010d2c:	f001 fc20 	bl	8012570 <nema_set_depth_ctrl>
 8010d30:	2300      	movs	r3, #0
 8010d32:	4c10      	ldr	r4, [pc, #64]	@ (8010d74 <init_nema_regs+0x90>)
 8010d34:	7820      	ldrb	r0, [r4, #0]
 8010d36:	7063      	strb	r3, [r4, #1]
 8010d38:	f001 fa98 	bl	801226c <nema_enable_tiling>
 8010d3c:	e9d4 3101 	ldrd	r3, r1, [r4, #4]
 8010d40:	2500      	movs	r5, #0
 8010d42:	6962      	ldr	r2, [r4, #20]
 8010d44:	430b      	orrs	r3, r1
 8010d46:	4313      	orrs	r3, r2
 8010d48:	e9c4 5303 	strd	r5, r3, [r4, #12]
 8010d4c:	f001 fa8a 	bl	8012264 <nema_readHwConfigH>
 8010d50:	0583      	lsls	r3, r0, #22
 8010d52:	d403      	bmi.n	8010d5c <init_nema_regs+0x78>
 8010d54:	bd38      	pop	{r3, r4, r5, pc}
 8010d56:	4c07      	ldr	r4, [pc, #28]	@ (8010d74 <init_nema_regs+0x90>)
 8010d58:	70a0      	strb	r0, [r4, #2]
 8010d5a:	e7ef      	b.n	8010d3c <init_nema_regs+0x58>
 8010d5c:	4629      	mov	r1, r5
 8010d5e:	f44f 705d 	mov.w	r0, #884	@ 0x374
 8010d62:	f7f1 ffd7 	bl	8002d14 <nema_reg_write>
 8010d66:	4629      	mov	r1, r5
 8010d68:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8010d6c:	f44f 705a 	mov.w	r0, #872	@ 0x368
 8010d70:	f7f1 bfd0 	b.w	8002d14 <nema_reg_write>
 8010d74:	20000064 	.word	0x20000064

08010d78 <nema_init>:
 8010d78:	b510      	push	{r4, lr}
 8010d7a:	f7f2 f813 	bl	8002da4 <nema_sys_init>
 8010d7e:	1e04      	subs	r4, r0, #0
 8010d80:	db11      	blt.n	8010da6 <nema_init+0x2e>
 8010d82:	f44f 70f6 	mov.w	r0, #492	@ 0x1ec
 8010d86:	f7f1 ffbf 	bl	8002d08 <nema_reg_read>
 8010d8a:	4b10      	ldr	r3, [pc, #64]	@ (8010dcc <nema_init+0x54>)
 8010d8c:	4298      	cmp	r0, r3
 8010d8e:	d114      	bne.n	8010dba <nema_init+0x42>
 8010d90:	f00d f870 	bl	801de74 <nema_cl_unbind>
 8010d94:	22d0      	movs	r2, #208	@ 0xd0
 8010d96:	2100      	movs	r1, #0
 8010d98:	480d      	ldr	r0, [pc, #52]	@ (8010dd0 <nema_init+0x58>)
 8010d9a:	f021 fef4 	bl	8032b86 <memset>
 8010d9e:	b14c      	cbz	r4, 8010db4 <nema_init+0x3c>
 8010da0:	2400      	movs	r4, #0
 8010da2:	4620      	mov	r0, r4
 8010da4:	bd10      	pop	{r4, pc}
 8010da6:	4a0a      	ldr	r2, [pc, #40]	@ (8010dd0 <nema_init+0x58>)
 8010da8:	4620      	mov	r0, r4
 8010daa:	6993      	ldr	r3, [r2, #24]
 8010dac:	f043 0301 	orr.w	r3, r3, #1
 8010db0:	6193      	str	r3, [r2, #24]
 8010db2:	bd10      	pop	{r4, pc}
 8010db4:	f7ff ff96 	bl	8010ce4 <init_nema_regs>
 8010db8:	e7f3      	b.n	8010da2 <nema_init+0x2a>
 8010dba:	4a05      	ldr	r2, [pc, #20]	@ (8010dd0 <nema_init+0x58>)
 8010dbc:	f04f 34ff 	mov.w	r4, #4294967295
 8010dc0:	6993      	ldr	r3, [r2, #24]
 8010dc2:	f043 0302 	orr.w	r3, r3, #2
 8010dc6:	6193      	str	r3, [r2, #24]
 8010dc8:	e7eb      	b.n	8010da2 <nema_init+0x2a>
 8010dca:	bf00      	nop
 8010dcc:	86362000 	.word	0x86362000
 8010dd0:	20000064 	.word	0x20000064

08010dd4 <nema_set_error>:
 8010dd4:	4a02      	ldr	r2, [pc, #8]	@ (8010de0 <nema_set_error+0xc>)
 8010dd6:	6993      	ldr	r3, [r2, #24]
 8010dd8:	4318      	orrs	r0, r3
 8010dda:	6190      	str	r0, [r2, #24]
 8010ddc:	4770      	bx	lr
 8010dde:	bf00      	nop
 8010de0:	20000064 	.word	0x20000064

08010de4 <nema_bind_tex>:
 8010de4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8010de8:	1c44      	adds	r4, r0, #1
 8010dea:	f8dd a020 	ldr.w	sl, [sp, #32]
 8010dee:	f89d 6028 	ldrb.w	r6, [sp, #40]	@ 0x28
 8010df2:	d029      	beq.n	8010e48 <nema_bind_tex+0x64>
 8010df4:	4698      	mov	r8, r3
 8010df6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8010df8:	4617      	mov	r7, r2
 8010dfa:	3301      	adds	r3, #1
 8010dfc:	4689      	mov	r9, r1
 8010dfe:	4604      	mov	r4, r0
 8010e00:	d035      	beq.n	8010e6e <nema_bind_tex+0x8a>
 8010e02:	b31c      	cbz	r4, 8010e4c <nema_bind_tex+0x68>
 8010e04:	4d50      	ldr	r5, [pc, #320]	@ (8010f48 <nema_bind_tex+0x164>)
 8010e06:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8010e08:	2201      	movs	r2, #1
 8010e0a:	0436      	lsls	r6, r6, #16
 8010e0c:	b29b      	uxth	r3, r3
 8010e0e:	ea46 660a 	orr.w	r6, r6, sl, lsl #24
 8010e12:	431e      	orrs	r6, r3
 8010e14:	eb04 0384 	add.w	r3, r4, r4, lsl #2
 8010e18:	eb05 0583 	add.w	r5, r5, r3, lsl #2
 8010e1c:	2003      	movs	r0, #3
 8010e1e:	63ee      	str	r6, [r5, #60]	@ 0x3c
 8010e20:	e9c5 970c 	strd	r9, r7, [r5, #48]	@ 0x30
 8010e24:	f8c5 8038 	str.w	r8, [r5, #56]	@ 0x38
 8010e28:	642a      	str	r2, [r5, #64]	@ 0x40
 8010e2a:	f00d f8bb 	bl	801dfa4 <nema_cl_get_space>
 8010e2e:	b158      	cbz	r0, 8010e48 <nema_bind_tex+0x64>
 8010e30:	0124      	lsls	r4, r4, #4
 8010e32:	e9c0 4900 	strd	r4, r9, [r0]
 8010e36:	1d23      	adds	r3, r4, #4
 8010e38:	6083      	str	r3, [r0, #8]
 8010e3a:	6beb      	ldr	r3, [r5, #60]	@ 0x3c
 8010e3c:	3408      	adds	r4, #8
 8010e3e:	e9c0 3403 	strd	r3, r4, [r0, #12]
 8010e42:	ea47 4708 	orr.w	r7, r7, r8, lsl #16
 8010e46:	6147      	str	r7, [r0, #20]
 8010e48:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8010e4c:	f00a 037f 	and.w	r3, sl, #127	@ 0x7f
 8010e50:	2b12      	cmp	r3, #18
 8010e52:	d03d      	beq.n	8010ed0 <nema_bind_tex+0xec>
 8010e54:	f1a3 0216 	sub.w	r2, r3, #22
 8010e58:	2a01      	cmp	r2, #1
 8010e5a:	d939      	bls.n	8010ed0 <nema_bind_tex+0xec>
 8010e5c:	3b4c      	subs	r3, #76	@ 0x4c
 8010e5e:	2b01      	cmp	r3, #1
 8010e60:	d96a      	bls.n	8010f38 <nema_bind_tex+0x154>
 8010e62:	4d39      	ldr	r5, [pc, #228]	@ (8010f48 <nema_bind_tex+0x164>)
 8010e64:	7868      	ldrb	r0, [r5, #1]
 8010e66:	f001 fa01 	bl	801226c <nema_enable_tiling>
 8010e6a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8010e6c:	e7cc      	b.n	8010e08 <nema_bind_tex+0x24>
 8010e6e:	06f3      	lsls	r3, r6, #27
 8010e70:	f00a 017f 	and.w	r1, sl, #127	@ 0x7f
 8010e74:	d434      	bmi.n	8010ee0 <nema_bind_tex+0xfc>
 8010e76:	4613      	mov	r3, r2
 8010e78:	f1a1 020b 	sub.w	r2, r1, #11
 8010e7c:	2a42      	cmp	r2, #66	@ 0x42
 8010e7e:	d84f      	bhi.n	8010f20 <nema_bind_tex+0x13c>
 8010e80:	e8df f002 	tbb	[pc, r2]
 8010e84:	4e4e3535 	.word	0x4e4e3535
 8010e88:	484e4e4e 	.word	0x484e4e4e
 8010e8c:	224e4e4e 	.word	0x224e4e4e
 8010e90:	4e4e4e22 	.word	0x4e4e4e22
 8010e94:	4e4e4e4e 	.word	0x4e4e4e4e
 8010e98:	4e4e4e4e 	.word	0x4e4e4e4e
 8010e9c:	4e4e4e4e 	.word	0x4e4e4e4e
 8010ea0:	35343c35 	.word	0x35343c35
 8010ea4:	4e4e343c 	.word	0x4e4e343c
 8010ea8:	4e3c3c4e 	.word	0x4e3c3c4e
 8010eac:	4e34344e 	.word	0x4e34344e
 8010eb0:	4e4e4e4e 	.word	0x4e4e4e4e
 8010eb4:	4e4e4e4e 	.word	0x4e4e4e4e
 8010eb8:	4e4e4e4e 	.word	0x4e4e4e4e
 8010ebc:	4e4e4e4e 	.word	0x4e4e4e4e
 8010ec0:	4e4e4e4e 	.word	0x4e4e4e4e
 8010ec4:	424e      	.short	0x424e
 8010ec6:	42          	.byte	0x42
 8010ec7:	00          	.byte	0x00
 8010ec8:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8010ecc:	9309      	str	r3, [sp, #36]	@ 0x24
 8010ece:	bb2c      	cbnz	r4, 8010f1c <nema_bind_tex+0x138>
 8010ed0:	2301      	movs	r3, #1
 8010ed2:	4d1d      	ldr	r5, [pc, #116]	@ (8010f48 <nema_bind_tex+0x164>)
 8010ed4:	4618      	mov	r0, r3
 8010ed6:	702b      	strb	r3, [r5, #0]
 8010ed8:	f001 f9c8 	bl	801226c <nema_enable_tiling>
 8010edc:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8010ede:	e793      	b.n	8010e08 <nema_bind_tex+0x24>
 8010ee0:	1cd3      	adds	r3, r2, #3
 8010ee2:	bf48      	it	mi
 8010ee4:	1d93      	addmi	r3, r2, #6
 8010ee6:	f023 0303 	bic.w	r3, r3, #3
 8010eea:	e7c5      	b.n	8010e78 <nema_bind_tex+0x94>
 8010eec:	009b      	lsls	r3, r3, #2
 8010eee:	1dda      	adds	r2, r3, #7
 8010ef0:	d407      	bmi.n	8010f02 <nema_bind_tex+0x11e>
 8010ef2:	10d3      	asrs	r3, r2, #3
 8010ef4:	9309      	str	r3, [sp, #36]	@ 0x24
 8010ef6:	2c00      	cmp	r4, #0
 8010ef8:	d0a8      	beq.n	8010e4c <nema_bind_tex+0x68>
 8010efa:	e783      	b.n	8010e04 <nema_bind_tex+0x20>
 8010efc:	005b      	lsls	r3, r3, #1
 8010efe:	1dda      	adds	r2, r3, #7
 8010f00:	d5f7      	bpl.n	8010ef2 <nema_bind_tex+0x10e>
 8010f02:	f103 020e 	add.w	r2, r3, #14
 8010f06:	e7f4      	b.n	8010ef2 <nema_bind_tex+0x10e>
 8010f08:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8010f0c:	9309      	str	r3, [sp, #36]	@ 0x24
 8010f0e:	2c00      	cmp	r4, #0
 8010f10:	d09c      	beq.n	8010e4c <nema_bind_tex+0x68>
 8010f12:	e777      	b.n	8010e04 <nema_bind_tex+0x20>
 8010f14:	005b      	lsls	r3, r3, #1
 8010f16:	9309      	str	r3, [sp, #36]	@ 0x24
 8010f18:	2c00      	cmp	r4, #0
 8010f1a:	d0d9      	beq.n	8010ed0 <nema_bind_tex+0xec>
 8010f1c:	4d0a      	ldr	r5, [pc, #40]	@ (8010f48 <nema_bind_tex+0x164>)
 8010f1e:	e773      	b.n	8010e08 <nema_bind_tex+0x24>
 8010f20:	3904      	subs	r1, #4
 8010f22:	2949      	cmp	r1, #73	@ 0x49
 8010f24:	bf8e      	itee	hi
 8010f26:	2204      	movhi	r2, #4
 8010f28:	4a08      	ldrls	r2, [pc, #32]	@ (8010f4c <nema_bind_tex+0x168>)
 8010f2a:	5652      	ldrsbls	r2, [r2, r1]
 8010f2c:	fb02 f303 	mul.w	r3, r2, r3
 8010f30:	9309      	str	r3, [sp, #36]	@ 0x24
 8010f32:	2c00      	cmp	r4, #0
 8010f34:	d08a      	beq.n	8010e4c <nema_bind_tex+0x68>
 8010f36:	e765      	b.n	8010e04 <nema_bind_tex+0x20>
 8010f38:	2301      	movs	r3, #1
 8010f3a:	4d03      	ldr	r5, [pc, #12]	@ (8010f48 <nema_bind_tex+0x164>)
 8010f3c:	4618      	mov	r0, r3
 8010f3e:	702b      	strb	r3, [r5, #0]
 8010f40:	f001 f9a8 	bl	8012294 <nema_enable_tiling_2x2>
 8010f44:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8010f46:	e75f      	b.n	8010e08 <nema_bind_tex+0x24>
 8010f48:	20000064 	.word	0x20000064
 8010f4c:	08035f24 	.word	0x08035f24

08010f50 <nema_set_tex_color>:
 8010f50:	4601      	mov	r1, r0
 8010f52:	201c      	movs	r0, #28
 8010f54:	f00d b882 	b.w	801e05c <nema_cl_add_cmd>

08010f58 <nema_set_const_reg>:
 8010f58:	3080      	adds	r0, #128	@ 0x80
 8010f5a:	0080      	lsls	r0, r0, #2
 8010f5c:	f5b0 7f03 	cmp.w	r0, #524	@ 0x20c
 8010f60:	d900      	bls.n	8010f64 <nema_set_const_reg+0xc>
 8010f62:	4770      	bx	lr
 8010f64:	f00d b87a 	b.w	801e05c <nema_cl_add_cmd>

08010f68 <nema_set_clip>:
 8010f68:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8010f6a:	460c      	mov	r4, r1
 8010f6c:	4607      	mov	r7, r0
 8010f6e:	ea20 71e0 	bic.w	r1, r0, r0, asr #31
 8010f72:	4d0c      	ldr	r5, [pc, #48]	@ (8010fa4 <nema_set_clip+0x3c>)
 8010f74:	ea24 70e4 	bic.w	r0, r4, r4, asr #31
 8010f78:	b289      	uxth	r1, r1
 8010f7a:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
 8010f7e:	19d6      	adds	r6, r2, r7
 8010f80:	f44f 7088 	mov.w	r0, #272	@ 0x110
 8010f84:	e9c5 7407 	strd	r7, r4, [r5, #28]
 8010f88:	e9c5 2309 	strd	r2, r3, [r5, #36]	@ 0x24
 8010f8c:	441c      	add	r4, r3
 8010f8e:	f00d f865 	bl	801e05c <nema_cl_add_cmd>
 8010f92:	b2b1      	uxth	r1, r6
 8010f94:	ea41 4104 	orr.w	r1, r1, r4, lsl #16
 8010f98:	f44f 708a 	mov.w	r0, #276	@ 0x114
 8010f9c:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 8010fa0:	f00d b85c 	b.w	801e05c <nema_cl_add_cmd>
 8010fa4:	20000064 	.word	0x20000064

08010fa8 <nema_set_clip2>:
 8010fa8:	b570      	push	{r4, r5, r6, lr}
 8010faa:	460d      	mov	r5, r1
 8010fac:	ea20 71e0 	bic.w	r1, r0, r0, asr #31
 8010fb0:	ea25 76e5 	bic.w	r6, r5, r5, asr #31
 8010fb4:	b289      	uxth	r1, r1
 8010fb6:	1814      	adds	r4, r2, r0
 8010fb8:	ea41 4106 	orr.w	r1, r1, r6, lsl #16
 8010fbc:	f44f 70ac 	mov.w	r0, #344	@ 0x158
 8010fc0:	441d      	add	r5, r3
 8010fc2:	f00d f84b 	bl	801e05c <nema_cl_add_cmd>
 8010fc6:	b2a1      	uxth	r1, r4
 8010fc8:	ea41 4105 	orr.w	r1, r1, r5, lsl #16
 8010fcc:	f44f 70ae 	mov.w	r0, #348	@ 0x15c
 8010fd0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010fd4:	f00d b842 	b.w	801e05c <nema_cl_add_cmd>

08010fd8 <nema_supports_clip2>:
 8010fd8:	b508      	push	{r3, lr}
 8010fda:	f44f 70ae 	mov.w	r0, #348	@ 0x15c
 8010fde:	f7f1 fe93 	bl	8002d08 <nema_reg_read>
 8010fe2:	3000      	adds	r0, #0
 8010fe4:	bf18      	it	ne
 8010fe6:	2001      	movne	r0, #1
 8010fe8:	bd08      	pop	{r3, pc}
 8010fea:	bf00      	nop

08010fec <nema_set_clip_temp>:
 8010fec:	b570      	push	{r4, r5, r6, lr}
 8010fee:	460d      	mov	r5, r1
 8010ff0:	ea20 71e0 	bic.w	r1, r0, r0, asr #31
 8010ff4:	ea25 76e5 	bic.w	r6, r5, r5, asr #31
 8010ff8:	b289      	uxth	r1, r1
 8010ffa:	1814      	adds	r4, r2, r0
 8010ffc:	ea41 4106 	orr.w	r1, r1, r6, lsl #16
 8011000:	f44f 7088 	mov.w	r0, #272	@ 0x110
 8011004:	441d      	add	r5, r3
 8011006:	f00d f829 	bl	801e05c <nema_cl_add_cmd>
 801100a:	b2a1      	uxth	r1, r4
 801100c:	ea41 4105 	orr.w	r1, r1, r5, lsl #16
 8011010:	f44f 708a 	mov.w	r0, #276	@ 0x114
 8011014:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8011018:	f00d b820 	b.w	801e05c <nema_cl_add_cmd>

0801101c <nema_set_clip_pop>:
 801101c:	b538      	push	{r3, r4, r5, lr}
 801101e:	4d0d      	ldr	r5, [pc, #52]	@ (8011054 <nema_set_clip_pop+0x38>)
 8011020:	f44f 7088 	mov.w	r0, #272	@ 0x110
 8011024:	e9d5 3207 	ldrd	r3, r2, [r5, #28]
 8011028:	ea23 71e3 	bic.w	r1, r3, r3, asr #31
 801102c:	ea22 74e2 	bic.w	r4, r2, r2, asr #31
 8011030:	b289      	uxth	r1, r1
 8011032:	ea41 4104 	orr.w	r1, r1, r4, lsl #16
 8011036:	e9d5 4509 	ldrd	r4, r5, [r5, #36]	@ 0x24
 801103a:	441c      	add	r4, r3
 801103c:	4415      	add	r5, r2
 801103e:	f00d f80d 	bl	801e05c <nema_cl_add_cmd>
 8011042:	b2a1      	uxth	r1, r4
 8011044:	ea41 4105 	orr.w	r1, r1, r5, lsl #16
 8011048:	f44f 708a 	mov.w	r0, #276	@ 0x114
 801104c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8011050:	f00d b804 	b.w	801e05c <nema_cl_add_cmd>
 8011054:	20000064 	.word	0x20000064

08011058 <nema_enable_gradient>:
 8011058:	2800      	cmp	r0, #0
 801105a:	bf14      	ite	ne
 801105c:	f04f 6100 	movne.w	r1, #134217728	@ 0x8000000
 8011060:	2100      	moveq	r1, #0
 8011062:	b410      	push	{r4}
 8011064:	4a05      	ldr	r2, [pc, #20]	@ (801107c <nema_enable_gradient+0x24>)
 8011066:	6950      	ldr	r0, [r2, #20]
 8011068:	e9d2 3401 	ldrd	r3, r4, [r2, #4]
 801106c:	4323      	orrs	r3, r4
 801106e:	4303      	orrs	r3, r0
 8011070:	430b      	orrs	r3, r1
 8011072:	e9c2 1303 	strd	r1, r3, [r2, #12]
 8011076:	f85d 4b04 	ldr.w	r4, [sp], #4
 801107a:	4770      	bx	lr
 801107c:	20000064 	.word	0x20000064

08011080 <nema_stride_size>:
 8011080:	06cb      	lsls	r3, r1, #27
 8011082:	d504      	bpl.n	801108e <nema_stride_size+0xe>
 8011084:	1cd3      	adds	r3, r2, #3
 8011086:	bf48      	it	mi
 8011088:	1d93      	addmi	r3, r2, #6
 801108a:	f023 0203 	bic.w	r2, r3, #3
 801108e:	f000 007f 	and.w	r0, r0, #127	@ 0x7f
 8011092:	f1a0 030b 	sub.w	r3, r0, #11
 8011096:	2b42      	cmp	r3, #66	@ 0x42
 8011098:	d839      	bhi.n	801110e <nema_stride_size+0x8e>
 801109a:	e8df f003 	tbb	[pc, r3]
 801109e:	3232      	.short	0x3232
 80110a0:	38383838 	.word	0x38383838
 80110a4:	38382538 	.word	0x38382538
 80110a8:	38222238 	.word	0x38222238
 80110ac:	38383838 	.word	0x38383838
 80110b0:	38383838 	.word	0x38383838
 80110b4:	38383838 	.word	0x38383838
 80110b8:	2c323838 	.word	0x2c323838
 80110bc:	272c3227 	.word	0x272c3227
 80110c0:	2c383838 	.word	0x2c383838
 80110c4:	2738382c 	.word	0x2738382c
 80110c8:	38383827 	.word	0x38383827
 80110cc:	38383838 	.word	0x38383838
 80110d0:	38383838 	.word	0x38383838
 80110d4:	38383838 	.word	0x38383838
 80110d8:	38383838 	.word	0x38383838
 80110dc:	22383838 	.word	0x22383838
 80110e0:	22          	.byte	0x22
 80110e1:	00          	.byte	0x00
 80110e2:	eb02 0042 	add.w	r0, r2, r2, lsl #1
 80110e6:	4770      	bx	lr
 80110e8:	0050      	lsls	r0, r2, #1
 80110ea:	4770      	bx	lr
 80110ec:	0090      	lsls	r0, r2, #2
 80110ee:	1dc2      	adds	r2, r0, #7
 80110f0:	d404      	bmi.n	80110fc <nema_stride_size+0x7c>
 80110f2:	10d0      	asrs	r0, r2, #3
 80110f4:	4770      	bx	lr
 80110f6:	0050      	lsls	r0, r2, #1
 80110f8:	1dc2      	adds	r2, r0, #7
 80110fa:	d5fa      	bpl.n	80110f2 <nema_stride_size+0x72>
 80110fc:	f100 020e 	add.w	r2, r0, #14
 8011100:	e7f7      	b.n	80110f2 <nema_stride_size+0x72>
 8011102:	1dd0      	adds	r0, r2, #7
 8011104:	bf48      	it	mi
 8011106:	f102 000e 	addmi.w	r0, r2, #14
 801110a:	10c0      	asrs	r0, r0, #3
 801110c:	4770      	bx	lr
 801110e:	3804      	subs	r0, #4
 8011110:	2849      	cmp	r0, #73	@ 0x49
 8011112:	bf8e      	itee	hi
 8011114:	2004      	movhi	r0, #4
 8011116:	4b02      	ldrls	r3, [pc, #8]	@ (8011120 <nema_stride_size+0xa0>)
 8011118:	5618      	ldrsbls	r0, [r3, r0]
 801111a:	fb00 f002 	mul.w	r0, r0, r2
 801111e:	4770      	bx	lr
 8011120:	08035f24 	.word	0x08035f24

08011124 <nema_rgba>:
 8011124:	061b      	lsls	r3, r3, #24
 8011126:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 801112a:	4318      	orrs	r0, r3
 801112c:	ea40 2001 	orr.w	r0, r0, r1, lsl #8
 8011130:	4770      	bx	lr
 8011132:	bf00      	nop

08011134 <nema_bind_src_tex>:
 8011134:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011138:	9c06      	ldr	r4, [sp, #24]
 801113a:	460e      	mov	r6, r1
 801113c:	1c61      	adds	r1, r4, #1
 801113e:	4605      	mov	r5, r0
 8011140:	4617      	mov	r7, r2
 8011142:	f89d 001c 	ldrb.w	r0, [sp, #28]
 8011146:	d022      	beq.n	801118e <nema_bind_src_tex+0x5a>
 8011148:	2201      	movs	r2, #1
 801114a:	0400      	lsls	r0, r0, #16
 801114c:	f8df 80e8 	ldr.w	r8, [pc, #232]	@ 8011238 <nema_bind_src_tex+0x104>
 8011150:	ea40 6303 	orr.w	r3, r0, r3, lsl #24
 8011154:	b2a4      	uxth	r4, r4
 8011156:	4323      	orrs	r3, r4
 8011158:	2003      	movs	r0, #3
 801115a:	f8c8 3050 	str.w	r3, [r8, #80]	@ 0x50
 801115e:	e9c8 5611 	strd	r5, r6, [r8, #68]	@ 0x44
 8011162:	f8c8 704c 	str.w	r7, [r8, #76]	@ 0x4c
 8011166:	f8c8 2054 	str.w	r2, [r8, #84]	@ 0x54
 801116a:	f00c ff1b 	bl	801dfa4 <nema_cl_get_space>
 801116e:	b160      	cbz	r0, 801118a <nema_bind_src_tex+0x56>
 8011170:	2110      	movs	r1, #16
 8011172:	2214      	movs	r2, #20
 8011174:	2318      	movs	r3, #24
 8011176:	e9c0 1500 	strd	r1, r5, [r0]
 801117a:	6082      	str	r2, [r0, #8]
 801117c:	f8d8 2050 	ldr.w	r2, [r8, #80]	@ 0x50
 8011180:	ea46 4607 	orr.w	r6, r6, r7, lsl #16
 8011184:	e9c0 2303 	strd	r2, r3, [r0, #12]
 8011188:	6146      	str	r6, [r0, #20]
 801118a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801118e:	06c2      	lsls	r2, r0, #27
 8011190:	f003 017f 	and.w	r1, r3, #127	@ 0x7f
 8011194:	d428      	bmi.n	80111e8 <nema_bind_src_tex+0xb4>
 8011196:	4634      	mov	r4, r6
 8011198:	f1a1 020b 	sub.w	r2, r1, #11
 801119c:	2a42      	cmp	r2, #66	@ 0x42
 801119e:	d83f      	bhi.n	8011220 <nema_bind_src_tex+0xec>
 80111a0:	e8df f002 	tbb	[pc, r2]
 80111a4:	3e3e3636 	.word	0x3e3e3636
 80111a8:	3c3e3e3e 	.word	0x3c3e3e3e
 80111ac:	283e3e3e 	.word	0x283e3e3e
 80111b0:	3e3e3e28 	.word	0x3e3e3e28
 80111b4:	3e3e3e3e 	.word	0x3e3e3e3e
 80111b8:	3e3e3e3e 	.word	0x3e3e3e3e
 80111bc:	3e3e3e3e 	.word	0x3e3e3e3e
 80111c0:	36302b36 	.word	0x36302b36
 80111c4:	3e3e302b 	.word	0x3e3e302b
 80111c8:	3e2b2b3e 	.word	0x3e2b2b3e
 80111cc:	3e30303e 	.word	0x3e30303e
 80111d0:	3e3e3e3e 	.word	0x3e3e3e3e
 80111d4:	3e3e3e3e 	.word	0x3e3e3e3e
 80111d8:	3e3e3e3e 	.word	0x3e3e3e3e
 80111dc:	3e3e3e3e 	.word	0x3e3e3e3e
 80111e0:	3e3e3e3e 	.word	0x3e3e3e3e
 80111e4:	283e      	.short	0x283e
 80111e6:	28          	.byte	0x28
 80111e7:	00          	.byte	0x00
 80111e8:	1cf4      	adds	r4, r6, #3
 80111ea:	bf48      	it	mi
 80111ec:	1db4      	addmi	r4, r6, #6
 80111ee:	f024 0403 	bic.w	r4, r4, #3
 80111f2:	e7d1      	b.n	8011198 <nema_bind_src_tex+0x64>
 80111f4:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 80111f8:	e7a6      	b.n	8011148 <nema_bind_src_tex+0x14>
 80111fa:	0062      	lsls	r2, r4, #1
 80111fc:	1dd4      	adds	r4, r2, #7
 80111fe:	d404      	bmi.n	801120a <nema_bind_src_tex+0xd6>
 8011200:	10e4      	asrs	r4, r4, #3
 8011202:	e7a1      	b.n	8011148 <nema_bind_src_tex+0x14>
 8011204:	00a2      	lsls	r2, r4, #2
 8011206:	1dd4      	adds	r4, r2, #7
 8011208:	d5fa      	bpl.n	8011200 <nema_bind_src_tex+0xcc>
 801120a:	f102 040e 	add.w	r4, r2, #14
 801120e:	e7f7      	b.n	8011200 <nema_bind_src_tex+0xcc>
 8011210:	1de2      	adds	r2, r4, #7
 8011212:	bf48      	it	mi
 8011214:	f104 020e 	addmi.w	r2, r4, #14
 8011218:	10d4      	asrs	r4, r2, #3
 801121a:	e795      	b.n	8011148 <nema_bind_src_tex+0x14>
 801121c:	0064      	lsls	r4, r4, #1
 801121e:	e793      	b.n	8011148 <nema_bind_src_tex+0x14>
 8011220:	3904      	subs	r1, #4
 8011222:	2949      	cmp	r1, #73	@ 0x49
 8011224:	bf8e      	itee	hi
 8011226:	2204      	movhi	r2, #4
 8011228:	4a02      	ldrls	r2, [pc, #8]	@ (8011234 <nema_bind_src_tex+0x100>)
 801122a:	5652      	ldrsbls	r2, [r2, r1]
 801122c:	fb02 f404 	mul.w	r4, r2, r4
 8011230:	e78a      	b.n	8011148 <nema_bind_src_tex+0x14>
 8011232:	bf00      	nop
 8011234:	08035f24 	.word	0x08035f24
 8011238:	20000064 	.word	0x20000064

0801123c <nema_bind_dst_tex>:
 801123c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8011240:	9d08      	ldr	r5, [sp, #32]
 8011242:	4699      	mov	r9, r3
 8011244:	4617      	mov	r7, r2
 8011246:	f003 027f 	and.w	r2, r3, #127	@ 0x7f
 801124a:	1c6b      	adds	r3, r5, #1
 801124c:	4680      	mov	r8, r0
 801124e:	460e      	mov	r6, r1
 8011250:	d031      	beq.n	80112b6 <nema_bind_dst_tex+0x7a>
 8011252:	2a12      	cmp	r2, #18
 8011254:	d00e      	beq.n	8011274 <nema_bind_dst_tex+0x38>
 8011256:	f1a2 0316 	sub.w	r3, r2, #22
 801125a:	2b01      	cmp	r3, #1
 801125c:	d90a      	bls.n	8011274 <nema_bind_dst_tex+0x38>
 801125e:	3a4c      	subs	r2, #76	@ 0x4c
 8011260:	2a01      	cmp	r2, #1
 8011262:	f240 80b7 	bls.w	80113d4 <nema_bind_dst_tex+0x198>
 8011266:	4c6e      	ldr	r4, [pc, #440]	@ (8011420 <nema_bind_dst_tex+0x1e4>)
 8011268:	7860      	ldrb	r0, [r4, #1]
 801126a:	f000 ffff 	bl	801226c <nema_enable_tiling>
 801126e:	e007      	b.n	8011280 <nema_bind_dst_tex+0x44>
 8011270:	eb06 0546 	add.w	r5, r6, r6, lsl #1
 8011274:	2301      	movs	r3, #1
 8011276:	4c6a      	ldr	r4, [pc, #424]	@ (8011420 <nema_bind_dst_tex+0x1e4>)
 8011278:	4618      	mov	r0, r3
 801127a:	7023      	strb	r3, [r4, #0]
 801127c:	f000 fff6 	bl	801226c <nema_enable_tiling>
 8011280:	2201      	movs	r2, #1
 8011282:	b2ad      	uxth	r5, r5
 8011284:	ea45 6509 	orr.w	r5, r5, r9, lsl #24
 8011288:	2003      	movs	r0, #3
 801128a:	63e5      	str	r5, [r4, #60]	@ 0x3c
 801128c:	e9c4 860c 	strd	r8, r6, [r4, #48]	@ 0x30
 8011290:	63a7      	str	r7, [r4, #56]	@ 0x38
 8011292:	6422      	str	r2, [r4, #64]	@ 0x40
 8011294:	f00c fe86 	bl	801dfa4 <nema_cl_get_space>
 8011298:	b158      	cbz	r0, 80112b2 <nema_bind_dst_tex+0x76>
 801129a:	2100      	movs	r1, #0
 801129c:	2204      	movs	r2, #4
 801129e:	2308      	movs	r3, #8
 80112a0:	e9c0 1800 	strd	r1, r8, [r0]
 80112a4:	6082      	str	r2, [r0, #8]
 80112a6:	6be2      	ldr	r2, [r4, #60]	@ 0x3c
 80112a8:	ea46 4607 	orr.w	r6, r6, r7, lsl #16
 80112ac:	e9c0 2303 	strd	r2, r3, [r0, #12]
 80112b0:	6146      	str	r6, [r0, #20]
 80112b2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80112b6:	f1a2 030b 	sub.w	r3, r2, #11
 80112ba:	2b42      	cmp	r3, #66	@ 0x42
 80112bc:	f200 80a6 	bhi.w	801140c <nema_bind_dst_tex+0x1d0>
 80112c0:	a101      	add	r1, pc, #4	@ (adr r1, 80112c8 <nema_bind_dst_tex+0x8c>)
 80112c2:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 80112c6:	bf00      	nop
 80112c8:	080113ff 	.word	0x080113ff
 80112cc:	080113ff 	.word	0x080113ff
 80112d0:	0801140d 	.word	0x0801140d
 80112d4:	0801140d 	.word	0x0801140d
 80112d8:	0801140d 	.word	0x0801140d
 80112dc:	0801140d 	.word	0x0801140d
 80112e0:	0801140d 	.word	0x0801140d
 80112e4:	08011409 	.word	0x08011409
 80112e8:	0801140d 	.word	0x0801140d
 80112ec:	0801140d 	.word	0x0801140d
 80112f0:	0801140d 	.word	0x0801140d
 80112f4:	08011271 	.word	0x08011271
 80112f8:	08011271 	.word	0x08011271
 80112fc:	0801140d 	.word	0x0801140d
 8011300:	0801140d 	.word	0x0801140d
 8011304:	0801140d 	.word	0x0801140d
 8011308:	0801140d 	.word	0x0801140d
 801130c:	0801140d 	.word	0x0801140d
 8011310:	0801140d 	.word	0x0801140d
 8011314:	0801140d 	.word	0x0801140d
 8011318:	0801140d 	.word	0x0801140d
 801131c:	0801140d 	.word	0x0801140d
 8011320:	0801140d 	.word	0x0801140d
 8011324:	0801140d 	.word	0x0801140d
 8011328:	0801140d 	.word	0x0801140d
 801132c:	0801140d 	.word	0x0801140d
 8011330:	0801140d 	.word	0x0801140d
 8011334:	0801140d 	.word	0x0801140d
 8011338:	080113ff 	.word	0x080113ff
 801133c:	080113e9 	.word	0x080113e9
 8011340:	080113f3 	.word	0x080113f3
 8011344:	080113ff 	.word	0x080113ff
 8011348:	080113e9 	.word	0x080113e9
 801134c:	080113f3 	.word	0x080113f3
 8011350:	0801140d 	.word	0x0801140d
 8011354:	0801140d 	.word	0x0801140d
 8011358:	0801140d 	.word	0x0801140d
 801135c:	080113e9 	.word	0x080113e9
 8011360:	080113e9 	.word	0x080113e9
 8011364:	0801140d 	.word	0x0801140d
 8011368:	0801140d 	.word	0x0801140d
 801136c:	080113f3 	.word	0x080113f3
 8011370:	080113f3 	.word	0x080113f3
 8011374:	0801140d 	.word	0x0801140d
 8011378:	0801140d 	.word	0x0801140d
 801137c:	0801140d 	.word	0x0801140d
 8011380:	0801140d 	.word	0x0801140d
 8011384:	0801140d 	.word	0x0801140d
 8011388:	0801140d 	.word	0x0801140d
 801138c:	0801140d 	.word	0x0801140d
 8011390:	0801140d 	.word	0x0801140d
 8011394:	0801140d 	.word	0x0801140d
 8011398:	0801140d 	.word	0x0801140d
 801139c:	0801140d 	.word	0x0801140d
 80113a0:	0801140d 	.word	0x0801140d
 80113a4:	0801140d 	.word	0x0801140d
 80113a8:	0801140d 	.word	0x0801140d
 80113ac:	0801140d 	.word	0x0801140d
 80113b0:	0801140d 	.word	0x0801140d
 80113b4:	0801140d 	.word	0x0801140d
 80113b8:	0801140d 	.word	0x0801140d
 80113bc:	0801140d 	.word	0x0801140d
 80113c0:	0801140d 	.word	0x0801140d
 80113c4:	0801140d 	.word	0x0801140d
 80113c8:	0801140d 	.word	0x0801140d
 80113cc:	080113e3 	.word	0x080113e3
 80113d0:	080113e3 	.word	0x080113e3
 80113d4:	2301      	movs	r3, #1
 80113d6:	4c12      	ldr	r4, [pc, #72]	@ (8011420 <nema_bind_dst_tex+0x1e4>)
 80113d8:	4618      	mov	r0, r3
 80113da:	7023      	strb	r3, [r4, #0]
 80113dc:	f000 ff5a 	bl	8012294 <nema_enable_tiling_2x2>
 80113e0:	e74e      	b.n	8011280 <nema_bind_dst_tex+0x44>
 80113e2:	eb06 0546 	add.w	r5, r6, r6, lsl #1
 80113e6:	e734      	b.n	8011252 <nema_bind_dst_tex+0x16>
 80113e8:	0073      	lsls	r3, r6, #1
 80113ea:	1ddd      	adds	r5, r3, #7
 80113ec:	d404      	bmi.n	80113f8 <nema_bind_dst_tex+0x1bc>
 80113ee:	10ed      	asrs	r5, r5, #3
 80113f0:	e72f      	b.n	8011252 <nema_bind_dst_tex+0x16>
 80113f2:	00b3      	lsls	r3, r6, #2
 80113f4:	1ddd      	adds	r5, r3, #7
 80113f6:	d5fa      	bpl.n	80113ee <nema_bind_dst_tex+0x1b2>
 80113f8:	f103 050e 	add.w	r5, r3, #14
 80113fc:	e7f7      	b.n	80113ee <nema_bind_dst_tex+0x1b2>
 80113fe:	1df5      	adds	r5, r6, #7
 8011400:	d5f5      	bpl.n	80113ee <nema_bind_dst_tex+0x1b2>
 8011402:	f106 050e 	add.w	r5, r6, #14
 8011406:	e7f2      	b.n	80113ee <nema_bind_dst_tex+0x1b2>
 8011408:	0075      	lsls	r5, r6, #1
 801140a:	e733      	b.n	8011274 <nema_bind_dst_tex+0x38>
 801140c:	1f13      	subs	r3, r2, #4
 801140e:	2b49      	cmp	r3, #73	@ 0x49
 8011410:	bf8e      	itee	hi
 8011412:	2504      	movhi	r5, #4
 8011414:	4903      	ldrls	r1, [pc, #12]	@ (8011424 <nema_bind_dst_tex+0x1e8>)
 8011416:	56cd      	ldrsbls	r5, [r1, r3]
 8011418:	fb05 f506 	mul.w	r5, r5, r6
 801141c:	e719      	b.n	8011252 <nema_bind_dst_tex+0x16>
 801141e:	bf00      	nop
 8011420:	20000064 	.word	0x20000064
 8011424:	08035f24 	.word	0x08035f24

08011428 <nema_bind_lut_tex>:
 8011428:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801142c:	f1a3 040b 	sub.w	r4, r3, #11
 8011430:	2c2a      	cmp	r4, #42	@ 0x2a
 8011432:	469a      	mov	sl, r3
 8011434:	4680      	mov	r8, r0
 8011436:	460e      	mov	r6, r1
 8011438:	4617      	mov	r7, r2
 801143a:	f8dd 9028 	ldr.w	r9, [sp, #40]	@ 0x28
 801143e:	f89d 502c 	ldrb.w	r5, [sp, #44]	@ 0x2c
 8011442:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8011444:	d84a      	bhi.n	80114dc <nema_bind_lut_tex+0xb4>
 8011446:	4a27      	ldr	r2, [pc, #156]	@ (80114e4 <nema_bind_lut_tex+0xbc>)
 8011448:	f832 b014 	ldrh.w	fp, [r2, r4, lsl #1]
 801144c:	465a      	mov	r2, fp
 801144e:	2101      	movs	r1, #1
 8011450:	4c25      	ldr	r4, [pc, #148]	@ (80114e8 <nema_bind_lut_tex+0xc0>)
 8011452:	061b      	lsls	r3, r3, #24
 8011454:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 8011458:	6663      	str	r3, [r4, #100]	@ 0x64
 801145a:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801145c:	2003      	movs	r0, #3
 801145e:	e9c4 3216 	strd	r3, r2, [r4, #88]	@ 0x58
 8011462:	6621      	str	r1, [r4, #96]	@ 0x60
 8011464:	66a1      	str	r1, [r4, #104]	@ 0x68
 8011466:	f00c fd9d 	bl	801dfa4 <nema_cl_get_space>
 801146a:	b170      	cbz	r0, 801148a <nema_bind_lut_tex+0x62>
 801146c:	2220      	movs	r2, #32
 801146e:	f04f 0c24 	mov.w	ip, #36	@ 0x24
 8011472:	2128      	movs	r1, #40	@ 0x28
 8011474:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8011476:	f8c0 c008 	str.w	ip, [r0, #8]
 801147a:	e9c0 2300 	strd	r2, r3, [r0]
 801147e:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8011480:	f44b 3280 	orr.w	r2, fp, #65536	@ 0x10000
 8011484:	e9c0 3103 	strd	r3, r1, [r0, #12]
 8011488:	6142      	str	r2, [r0, #20]
 801148a:	f1b9 3fff 	cmp.w	r9, #4294967295
 801148e:	d106      	bne.n	801149e <nema_bind_lut_tex+0x76>
 8011490:	4632      	mov	r2, r6
 8011492:	4629      	mov	r1, r5
 8011494:	f00a 007f 	and.w	r0, sl, #127	@ 0x7f
 8011498:	f7ff fdf2 	bl	8011080 <nema_stride_size>
 801149c:	4681      	mov	r9, r0
 801149e:	2201      	movs	r2, #1
 80114a0:	042d      	lsls	r5, r5, #16
 80114a2:	ea45 630a 	orr.w	r3, r5, sl, lsl #24
 80114a6:	fa1f f989 	uxth.w	r9, r9
 80114aa:	ea43 0309 	orr.w	r3, r3, r9
 80114ae:	2003      	movs	r0, #3
 80114b0:	6523      	str	r3, [r4, #80]	@ 0x50
 80114b2:	e9c4 8611 	strd	r8, r6, [r4, #68]	@ 0x44
 80114b6:	64e7      	str	r7, [r4, #76]	@ 0x4c
 80114b8:	6562      	str	r2, [r4, #84]	@ 0x54
 80114ba:	f00c fd73 	bl	801dfa4 <nema_cl_get_space>
 80114be:	b158      	cbz	r0, 80114d8 <nema_bind_lut_tex+0xb0>
 80114c0:	2110      	movs	r1, #16
 80114c2:	2214      	movs	r2, #20
 80114c4:	2318      	movs	r3, #24
 80114c6:	e9c0 1800 	strd	r1, r8, [r0]
 80114ca:	6082      	str	r2, [r0, #8]
 80114cc:	6d22      	ldr	r2, [r4, #80]	@ 0x50
 80114ce:	ea46 4607 	orr.w	r6, r6, r7, lsl #16
 80114d2:	e9c0 2303 	strd	r2, r3, [r0, #12]
 80114d6:	6146      	str	r6, [r0, #20]
 80114d8:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80114dc:	f44f 7280 	mov.w	r2, #256	@ 0x100
 80114e0:	4693      	mov	fp, r2
 80114e2:	e7b4      	b.n	801144e <nema_bind_lut_tex+0x26>
 80114e4:	08035f70 	.word	0x08035f70
 80114e8:	20000064 	.word	0x20000064

080114ec <nema_set_gradient>:
 80114ec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80114f0:	ed2d 8b0c 	vpush	{d8-d13}
 80114f4:	eeb0 da60 	vmov.f32	s26, s1
 80114f8:	b08d      	sub	sp, #52	@ 0x34
 80114fa:	eef0 ca41 	vmov.f32	s25, s2
 80114fe:	eeb0 ca61 	vmov.f32	s24, s3
 8011502:	eef0 ba42 	vmov.f32	s23, s4
 8011506:	eeb0 ba62 	vmov.f32	s22, s5
 801150a:	eef0 aa43 	vmov.f32	s21, s6
 801150e:	eeb0 aa63 	vmov.f32	s20, s7
 8011512:	eef0 9a44 	vmov.f32	s19, s8
 8011516:	eeb0 9a64 	vmov.f32	s18, s9
 801151a:	eef0 8a45 	vmov.f32	s17, s10
 801151e:	eeb0 8a65 	vmov.f32	s16, s11
 8011522:	f000 fb25 	bl	8011b70 <nema_f2fx>
 8011526:	eeb0 0a4d 	vmov.f32	s0, s26
 801152a:	4604      	mov	r4, r0
 801152c:	f000 fb20 	bl	8011b70 <nema_f2fx>
 8011530:	eeb0 0a6c 	vmov.f32	s0, s25
 8011534:	4605      	mov	r5, r0
 8011536:	f000 fb1b 	bl	8011b70 <nema_f2fx>
 801153a:	eeb0 0a4c 	vmov.f32	s0, s24
 801153e:	4606      	mov	r6, r0
 8011540:	f000 fb16 	bl	8011b70 <nema_f2fx>
 8011544:	eeb0 0a6b 	vmov.f32	s0, s23
 8011548:	4607      	mov	r7, r0
 801154a:	f000 fb11 	bl	8011b70 <nema_f2fx>
 801154e:	eeb0 0a4b 	vmov.f32	s0, s22
 8011552:	900b      	str	r0, [sp, #44]	@ 0x2c
 8011554:	f000 fb0c 	bl	8011b70 <nema_f2fx>
 8011558:	eeb0 0a6a 	vmov.f32	s0, s21
 801155c:	4680      	mov	r8, r0
 801155e:	f000 fb07 	bl	8011b70 <nema_f2fx>
 8011562:	eeb0 0a4a 	vmov.f32	s0, s20
 8011566:	4681      	mov	r9, r0
 8011568:	f000 fb02 	bl	8011b70 <nema_f2fx>
 801156c:	eeb0 0a69 	vmov.f32	s0, s19
 8011570:	4682      	mov	sl, r0
 8011572:	f000 fafd 	bl	8011b70 <nema_f2fx>
 8011576:	eeb0 0a49 	vmov.f32	s0, s18
 801157a:	4683      	mov	fp, r0
 801157c:	f000 faf8 	bl	8011b70 <nema_f2fx>
 8011580:	eeb0 0a68 	vmov.f32	s0, s17
 8011584:	900a      	str	r0, [sp, #40]	@ 0x28
 8011586:	f000 faf3 	bl	8011b70 <nema_f2fx>
 801158a:	eeb0 0a48 	vmov.f32	s0, s16
 801158e:	9009      	str	r0, [sp, #36]	@ 0x24
 8011590:	f000 faee 	bl	8011b70 <nema_f2fx>
 8011594:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 8011596:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8011598:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801159a:	9100      	str	r1, [sp, #0]
 801159c:	9007      	str	r0, [sp, #28]
 801159e:	9206      	str	r2, [sp, #24]
 80115a0:	e9cd b304 	strd	fp, r3, [sp, #16]
 80115a4:	e9cd 9a02 	strd	r9, sl, [sp, #8]
 80115a8:	f8cd 8004 	str.w	r8, [sp, #4]
 80115ac:	463b      	mov	r3, r7
 80115ae:	4632      	mov	r2, r6
 80115b0:	4629      	mov	r1, r5
 80115b2:	4620      	mov	r0, r4
 80115b4:	f000 ffe2 	bl	801257c <nema_set_gradient_fx>
 80115b8:	b00d      	add	sp, #52	@ 0x34
 80115ba:	ecbd 8b0c 	vpop	{d8-d13}
 80115be:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80115c2:	bf00      	nop

080115c4 <nema_fill_rect>:
 80115c4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80115c8:	4604      	mov	r4, r0
 80115ca:	460d      	mov	r5, r1
 80115cc:	4616      	mov	r6, r2
 80115ce:	461f      	mov	r7, r3
 80115d0:	9806      	ldr	r0, [sp, #24]
 80115d2:	f001 f81f 	bl	8012614 <nema_set_raster_color>
 80115d6:	463b      	mov	r3, r7
 80115d8:	4632      	mov	r2, r6
 80115da:	4629      	mov	r1, r5
 80115dc:	4620      	mov	r0, r4
 80115de:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80115e2:	f001 b859 	b.w	8012698 <nema_raster_rect>
 80115e6:	bf00      	nop

080115e8 <nema_blit>:
 80115e8:	ee07 0a90 	vmov	s15, r0
 80115ec:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
 80115f0:	ee07 1a90 	vmov	s15, r1
 80115f4:	b500      	push	{lr}
 80115f6:	eef8 0ae7 	vcvt.f32.s32	s1, s15
 80115fa:	b083      	sub	sp, #12
 80115fc:	e9cd 0100 	strd	r0, r1, [sp]
 8011600:	f000 ff56 	bl	80124b0 <nema_set_matrix_translate>
 8011604:	e9dd 0100 	ldrd	r0, r1, [sp]
 8011608:	4a03      	ldr	r2, [pc, #12]	@ (8011618 <nema_blit+0x30>)
 801160a:	e9d2 2312 	ldrd	r2, r3, [r2, #72]	@ 0x48
 801160e:	b003      	add	sp, #12
 8011610:	f85d eb04 	ldr.w	lr, [sp], #4
 8011614:	f001 b840 	b.w	8012698 <nema_raster_rect>
 8011618:	20000064 	.word	0x20000064

0801161c <nema_blit_rotate>:
 801161c:	b5f0      	push	{r4, r5, r6, r7, lr}
 801161e:	2600      	movs	r6, #0
 8011620:	f04f 577e 	mov.w	r7, #1065353216	@ 0x3f800000
 8011624:	4b68      	ldr	r3, [pc, #416]	@ (80117c8 <nema_blit_rotate+0x1ac>)
 8011626:	b08b      	sub	sp, #44	@ 0x2c
 8011628:	3a01      	subs	r2, #1
 801162a:	9607      	str	r6, [sp, #28]
 801162c:	9608      	str	r6, [sp, #32]
 801162e:	9709      	str	r7, [sp, #36]	@ 0x24
 8011630:	4604      	mov	r4, r0
 8011632:	e9d3 6712 	ldrd	r6, r7, [r3, #72]	@ 0x48
 8011636:	460d      	mov	r5, r1
 8011638:	2a0e      	cmp	r2, #14
 801163a:	f200 80b0 	bhi.w	801179e <nema_blit_rotate+0x182>
 801163e:	e8df f002 	tbb	[pc, r2]
 8011642:	4730      	.short	0x4730
 8011644:	9a836f58 	.word	0x9a836f58
 8011648:	6f089a08 	.word	0x6f089a08
 801164c:	ae584783 	.word	0xae584783
 8011650:	30          	.byte	0x30
 8011651:	00          	.byte	0x00
 8011652:	1970      	adds	r0, r6, r5
 8011654:	ee07 0a10 	vmov	s14, r0
 8011658:	1938      	adds	r0, r7, r4
 801165a:	4631      	mov	r1, r6
 801165c:	ee07 0a90 	vmov	s15, r0
 8011660:	2200      	movs	r2, #0
 8011662:	463e      	mov	r6, r7
 8011664:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8011668:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801166c:	460f      	mov	r7, r1
 801166e:	4b57      	ldr	r3, [pc, #348]	@ (80117cc <nema_blit_rotate+0x1b0>)
 8011670:	9201      	str	r2, [sp, #4]
 8011672:	9205      	str	r2, [sp, #20]
 8011674:	9302      	str	r3, [sp, #8]
 8011676:	9304      	str	r3, [sp, #16]
 8011678:	eddf 6a55 	vldr	s13, [pc, #340]	@ 80117d0 <nema_blit_rotate+0x1b4>
 801167c:	ee37 7a26 	vadd.f32	s14, s14, s13
 8011680:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8011684:	a801      	add	r0, sp, #4
 8011686:	ed8d 7a03 	vstr	s14, [sp, #12]
 801168a:	edcd 7a06 	vstr	s15, [sp, #24]
 801168e:	f000 fe55 	bl	801233c <nema_set_matrix>
 8011692:	463b      	mov	r3, r7
 8011694:	4632      	mov	r2, r6
 8011696:	4629      	mov	r1, r5
 8011698:	4620      	mov	r0, r4
 801169a:	f000 fffd 	bl	8012698 <nema_raster_rect>
 801169e:	b00b      	add	sp, #44	@ 0x2c
 80116a0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80116a2:	ee07 4a90 	vmov	s15, r4
 80116a6:	4630      	mov	r0, r6
 80116a8:	442e      	add	r6, r5
 80116aa:	2300      	movs	r3, #0
 80116ac:	ee07 6a10 	vmov	s14, r6
 80116b0:	f04f 527e 	mov.w	r2, #1065353216	@ 0x3f800000
 80116b4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80116b8:	4944      	ldr	r1, [pc, #272]	@ (80117cc <nema_blit_rotate+0x1b0>)
 80116ba:	463e      	mov	r6, r7
 80116bc:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80116c0:	9301      	str	r3, [sp, #4]
 80116c2:	4607      	mov	r7, r0
 80116c4:	9305      	str	r3, [sp, #20]
 80116c6:	9102      	str	r1, [sp, #8]
 80116c8:	9204      	str	r2, [sp, #16]
 80116ca:	eef1 7a67 	vneg.f32	s15, s15
 80116ce:	e7d3      	b.n	8011678 <nema_blit_rotate+0x5c>
 80116d0:	4b3e      	ldr	r3, [pc, #248]	@ (80117cc <nema_blit_rotate+0x1b0>)
 80116d2:	2200      	movs	r2, #0
 80116d4:	9301      	str	r3, [sp, #4]
 80116d6:	9305      	str	r3, [sp, #20]
 80116d8:	1833      	adds	r3, r6, r0
 80116da:	ee07 3a90 	vmov	s15, r3
 80116de:	1878      	adds	r0, r7, r1
 80116e0:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 80116e4:	ee07 0a90 	vmov	s15, r0
 80116e8:	9202      	str	r2, [sp, #8]
 80116ea:	9204      	str	r2, [sp, #16]
 80116ec:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80116f0:	e7c2      	b.n	8011678 <nema_blit_rotate+0x5c>
 80116f2:	ee07 5a10 	vmov	s14, r5
 80116f6:	4630      	mov	r0, r6
 80116f8:	193e      	adds	r6, r7, r4
 80116fa:	2300      	movs	r3, #0
 80116fc:	ee07 6a90 	vmov	s15, r6
 8011700:	f04f 517e 	mov.w	r1, #1065353216	@ 0x3f800000
 8011704:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8011708:	4a30      	ldr	r2, [pc, #192]	@ (80117cc <nema_blit_rotate+0x1b0>)
 801170a:	463e      	mov	r6, r7
 801170c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8011710:	4607      	mov	r7, r0
 8011712:	9301      	str	r3, [sp, #4]
 8011714:	9305      	str	r3, [sp, #20]
 8011716:	9102      	str	r1, [sp, #8]
 8011718:	eeb1 7a47 	vneg.f32	s14, s14
 801171c:	9204      	str	r2, [sp, #16]
 801171e:	e7ab      	b.n	8011678 <nema_blit_rotate+0x5c>
 8011720:	ee07 4a90 	vmov	s15, r4
 8011724:	1978      	adds	r0, r7, r5
 8011726:	2300      	movs	r3, #0
 8011728:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 801172c:	f04f 517e 	mov.w	r1, #1065353216	@ 0x3f800000
 8011730:	ee07 0a90 	vmov	s15, r0
 8011734:	4a25      	ldr	r2, [pc, #148]	@ (80117cc <nema_blit_rotate+0x1b0>)
 8011736:	9101      	str	r1, [sp, #4]
 8011738:	9302      	str	r3, [sp, #8]
 801173a:	9304      	str	r3, [sp, #16]
 801173c:	eeb1 7a47 	vneg.f32	s14, s14
 8011740:	9205      	str	r2, [sp, #20]
 8011742:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8011746:	e797      	b.n	8011678 <nema_blit_rotate+0x5c>
 8011748:	ee07 5a90 	vmov	s15, r5
 801174c:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8011750:	ee07 0a90 	vmov	s15, r0
 8011754:	4631      	mov	r1, r6
 8011756:	2200      	movs	r2, #0
 8011758:	f04f 537e 	mov.w	r3, #1065353216	@ 0x3f800000
 801175c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8011760:	463e      	mov	r6, r7
 8011762:	eeb1 7a47 	vneg.f32	s14, s14
 8011766:	460f      	mov	r7, r1
 8011768:	eef1 7a67 	vneg.f32	s15, s15
 801176c:	9201      	str	r2, [sp, #4]
 801176e:	9205      	str	r2, [sp, #20]
 8011770:	9302      	str	r3, [sp, #8]
 8011772:	9304      	str	r3, [sp, #16]
 8011774:	e780      	b.n	8011678 <nema_blit_rotate+0x5c>
 8011776:	ee07 5a90 	vmov	s15, r5
 801177a:	1830      	adds	r0, r6, r0
 801177c:	2300      	movs	r3, #0
 801177e:	f04f 527e 	mov.w	r2, #1065353216	@ 0x3f800000
 8011782:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8011786:	ee07 0a10 	vmov	s14, r0
 801178a:	4910      	ldr	r1, [pc, #64]	@ (80117cc <nema_blit_rotate+0x1b0>)
 801178c:	9302      	str	r3, [sp, #8]
 801178e:	9101      	str	r1, [sp, #4]
 8011790:	9304      	str	r3, [sp, #16]
 8011792:	9205      	str	r2, [sp, #20]
 8011794:	eef1 7a67 	vneg.f32	s15, s15
 8011798:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801179c:	e76c      	b.n	8011678 <nema_blit_rotate+0x5c>
 801179e:	ee07 0a90 	vmov	s15, r0
 80117a2:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 80117a6:	ee07 1a90 	vmov	s15, r1
 80117aa:	f04f 527e 	mov.w	r2, #1065353216	@ 0x3f800000
 80117ae:	2300      	movs	r3, #0
 80117b0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80117b4:	9201      	str	r2, [sp, #4]
 80117b6:	9205      	str	r2, [sp, #20]
 80117b8:	9302      	str	r3, [sp, #8]
 80117ba:	9304      	str	r3, [sp, #16]
 80117bc:	eeb1 7a47 	vneg.f32	s14, s14
 80117c0:	eef1 7a67 	vneg.f32	s15, s15
 80117c4:	e758      	b.n	8011678 <nema_blit_rotate+0x5c>
 80117c6:	bf00      	nop
 80117c8:	20000064 	.word	0x20000064
 80117cc:	bf800000 	.word	0xbf800000
 80117d0:	00000000 	.word	0x00000000

080117d4 <nema_blit_tri_fit>:
 80117d4:	2803      	cmp	r0, #3
 80117d6:	d801      	bhi.n	80117dc <nema_blit_tri_fit+0x8>
 80117d8:	2903      	cmp	r1, #3
 80117da:	d900      	bls.n	80117de <nema_blit_tri_fit+0xa>
 80117dc:	4770      	bx	lr
 80117de:	2a03      	cmp	r2, #3
 80117e0:	d8fc      	bhi.n	80117dc <nema_blit_tri_fit+0x8>
 80117e2:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80117e6:	460c      	mov	r4, r1
 80117e8:	493b      	ldr	r1, [pc, #236]	@ (80118d8 <nema_blit_tri_fit+0x104>)
 80117ea:	4603      	mov	r3, r0
 80117ec:	e9d1 0112 	ldrd	r0, r1, [r1, #72]	@ 0x48
 80117f0:	ee07 0a90 	vmov	s15, r0
 80117f4:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 80117f8:	ee07 1a90 	vmov	s15, r1
 80117fc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8011800:	b08a      	sub	sp, #40	@ 0x28
 8011802:	f04f 0c00 	mov.w	ip, #0
 8011806:	edcd 7a08 	vstr	s15, [sp, #32]
 801180a:	edcd 7a09 	vstr	s15, [sp, #36]	@ 0x24
 801180e:	eeb7 6a00 	vmov.f32	s12, #112	@ 0x3f800000  1.0
 8011812:	ed8d 7a03 	vstr	s14, [sp, #12]
 8011816:	ed8d 7a04 	vstr	s14, [sp, #16]
 801181a:	ee12 8a10 	vmov	r8, s4
 801181e:	ee11 9a90 	vmov	r9, s3
 8011822:	ee11 aa10 	vmov	sl, s2
 8011826:	ee10 6a10 	vmov	r6, s0
 801182a:	f10d 0e28 	add.w	lr, sp, #40	@ 0x28
 801182e:	eb0e 0282 	add.w	r2, lr, r2, lsl #2
 8011832:	eb0e 0484 	add.w	r4, lr, r4, lsl #2
 8011836:	eb0e 0383 	add.w	r3, lr, r3, lsl #2
 801183a:	f8cd c008 	str.w	ip, [sp, #8]
 801183e:	f8cd c014 	str.w	ip, [sp, #20]
 8011842:	f8cd c018 	str.w	ip, [sp, #24]
 8011846:	f8cd c01c 	str.w	ip, [sp, #28]
 801184a:	ed52 6a08 	vldr	s13, [r2, #-32]	@ 0xffffffe0
 801184e:	ed14 4a08 	vldr	s8, [r4, #-32]	@ 0xffffffe0
 8011852:	ed53 1a08 	vldr	s3, [r3, #-32]	@ 0xffffffe0
 8011856:	ed12 7a04 	vldr	s14, [r2, #-16]
 801185a:	ed54 4a04 	vldr	s9, [r4, #-16]
 801185e:	ed13 2a04 	vldr	s4, [r3, #-16]
 8011862:	eef0 5a62 	vmov.f32	s11, s5
 8011866:	ee05 8a10 	vmov	s10, r8
 801186a:	ee03 9a10 	vmov	s6, r9
 801186e:	eef0 3a46 	vmov.f32	s7, s12
 8011872:	eeb0 1a46 	vmov.f32	s2, s12
 8011876:	ee12 7a90 	vmov	r7, s5
 801187a:	ee02 aa90 	vmov	s5, sl
 801187e:	ee10 5a90 	vmov	r5, s1
 8011882:	f000 f8d1 	bl	8011a28 <nema_interpolate_tx_ty>
 8011886:	ee00 6a10 	vmov	s0, r6
 801188a:	f000 f971 	bl	8011b70 <nema_f2fx>
 801188e:	ee00 5a10 	vmov	s0, r5
 8011892:	4604      	mov	r4, r0
 8011894:	f000 f96c 	bl	8011b70 <nema_f2fx>
 8011898:	ee00 aa10 	vmov	s0, sl
 801189c:	4605      	mov	r5, r0
 801189e:	f000 f967 	bl	8011b70 <nema_f2fx>
 80118a2:	ee00 9a10 	vmov	s0, r9
 80118a6:	4606      	mov	r6, r0
 80118a8:	f000 f962 	bl	8011b70 <nema_f2fx>
 80118ac:	ee00 8a10 	vmov	s0, r8
 80118b0:	4681      	mov	r9, r0
 80118b2:	f000 f95d 	bl	8011b70 <nema_f2fx>
 80118b6:	ee00 7a10 	vmov	s0, r7
 80118ba:	4680      	mov	r8, r0
 80118bc:	f000 f958 	bl	8011b70 <nema_f2fx>
 80118c0:	464b      	mov	r3, r9
 80118c2:	e9cd 8000 	strd	r8, r0, [sp]
 80118c6:	4632      	mov	r2, r6
 80118c8:	4629      	mov	r1, r5
 80118ca:	4620      	mov	r0, r4
 80118cc:	f000 fea8 	bl	8012620 <nema_raster_triangle_fx>
 80118d0:	b00a      	add	sp, #40	@ 0x28
 80118d2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80118d6:	bf00      	nop
 80118d8:	20000064 	.word	0x20000064

080118dc <nema_blit_quad_fit>:
 80118dc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80118e0:	ed2d 8b08 	vpush	{d8-d11}
 80118e4:	4b2b      	ldr	r3, [pc, #172]	@ (8011994 <nema_blit_quad_fit+0xb8>)
 80118e6:	b08e      	sub	sp, #56	@ 0x38
 80118e8:	e9d3 0112 	ldrd	r0, r1, [r3, #72]	@ 0x48
 80118ec:	aa05      	add	r2, sp, #20
 80118ee:	eef0 ba40 	vmov.f32	s23, s0
 80118f2:	eeb0 ba60 	vmov.f32	s22, s1
 80118f6:	eef0 aa41 	vmov.f32	s21, s2
 80118fa:	eeb0 aa61 	vmov.f32	s20, s3
 80118fe:	eef0 9a42 	vmov.f32	s19, s4
 8011902:	eeb0 9a62 	vmov.f32	s18, s5
 8011906:	eef0 8a43 	vmov.f32	s17, s6
 801190a:	eeb0 8a63 	vmov.f32	s16, s7
 801190e:	f000 fb33 	bl	8011f78 <nema_mat3x3_quad_to_rect>
 8011912:	b120      	cbz	r0, 801191e <nema_blit_quad_fit+0x42>
 8011914:	b00e      	add	sp, #56	@ 0x38
 8011916:	ecbd 8b08 	vpop	{d8-d11}
 801191a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801191e:	a805      	add	r0, sp, #20
 8011920:	f000 fd0c 	bl	801233c <nema_set_matrix>
 8011924:	eeb0 0a6b 	vmov.f32	s0, s23
 8011928:	f000 f922 	bl	8011b70 <nema_f2fx>
 801192c:	eeb0 0a4b 	vmov.f32	s0, s22
 8011930:	4604      	mov	r4, r0
 8011932:	f000 f91d 	bl	8011b70 <nema_f2fx>
 8011936:	eeb0 0a6a 	vmov.f32	s0, s21
 801193a:	4605      	mov	r5, r0
 801193c:	f000 f918 	bl	8011b70 <nema_f2fx>
 8011940:	eeb0 0a4a 	vmov.f32	s0, s20
 8011944:	4606      	mov	r6, r0
 8011946:	f000 f913 	bl	8011b70 <nema_f2fx>
 801194a:	eeb0 0a69 	vmov.f32	s0, s19
 801194e:	4607      	mov	r7, r0
 8011950:	f000 f90e 	bl	8011b70 <nema_f2fx>
 8011954:	eeb0 0a49 	vmov.f32	s0, s18
 8011958:	4682      	mov	sl, r0
 801195a:	f000 f909 	bl	8011b70 <nema_f2fx>
 801195e:	eeb0 0a68 	vmov.f32	s0, s17
 8011962:	4680      	mov	r8, r0
 8011964:	f000 f904 	bl	8011b70 <nema_f2fx>
 8011968:	eeb0 0a48 	vmov.f32	s0, s16
 801196c:	4681      	mov	r9, r0
 801196e:	f000 f8ff 	bl	8011b70 <nema_f2fx>
 8011972:	f8cd a000 	str.w	sl, [sp]
 8011976:	e9cd 9002 	strd	r9, r0, [sp, #8]
 801197a:	f8cd 8004 	str.w	r8, [sp, #4]
 801197e:	463b      	mov	r3, r7
 8011980:	4632      	mov	r2, r6
 8011982:	4629      	mov	r1, r5
 8011984:	4620      	mov	r0, r4
 8011986:	f000 feb1 	bl	80126ec <nema_raster_quad_fx>
 801198a:	b00e      	add	sp, #56	@ 0x38
 801198c:	ecbd 8b08 	vpop	{d8-d11}
 8011990:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8011994:	20000064 	.word	0x20000064

08011998 <nema_interpolate_rect_colors>:
 8011998:	b410      	push	{r4}
 801199a:	9803      	ldr	r0, [sp, #12]
 801199c:	e9dd 1401 	ldrd	r1, r4, [sp, #4]
 80119a0:	edd0 2a00 	vldr	s5, [r0]
 80119a4:	edd4 7a00 	vldr	s15, [r4]
 80119a8:	ed91 0a00 	vldr	s0, [r1]
 80119ac:	ee72 2ae7 	vsub.f32	s5, s5, s15
 80119b0:	ee37 2ac0 	vsub.f32	s4, s15, s0
 80119b4:	ee07 3a90 	vmov	s15, r3
 80119b8:	ed94 3a01 	vldr	s6, [r4, #4]
 80119bc:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 80119c0:	ed94 4a02 	vldr	s8, [r4, #8]
 80119c4:	ed94 5a03 	vldr	s10, [r4, #12]
 80119c8:	edd0 3a01 	vldr	s7, [r0, #4]
 80119cc:	edd1 0a01 	vldr	s1, [r1, #4]
 80119d0:	edd0 4a02 	vldr	s9, [r0, #8]
 80119d4:	edd0 5a03 	vldr	s11, [r0, #12]
 80119d8:	edd1 1a03 	vldr	s3, [r1, #12]
 80119dc:	ed91 1a02 	vldr	s2, [r1, #8]
 80119e0:	ee07 2a90 	vmov	s15, r2
 80119e4:	ee73 3ac3 	vsub.f32	s7, s7, s6
 80119e8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80119ec:	ee74 4ac4 	vsub.f32	s9, s9, s8
 80119f0:	ee75 5ac5 	vsub.f32	s11, s11, s10
 80119f4:	ee33 3a60 	vsub.f32	s6, s6, s1
 80119f8:	ee35 5a61 	vsub.f32	s10, s10, s3
 80119fc:	ee34 4a41 	vsub.f32	s8, s8, s2
 8011a00:	eec2 2a87 	vdiv.f32	s5, s5, s14
 8011a04:	ee82 2a27 	vdiv.f32	s4, s4, s15
 8011a08:	eec3 3a87 	vdiv.f32	s7, s7, s14
 8011a0c:	ee83 3a27 	vdiv.f32	s6, s6, s15
 8011a10:	eec4 4a87 	vdiv.f32	s9, s9, s14
 8011a14:	eec5 5a87 	vdiv.f32	s11, s11, s14
 8011a18:	ee85 5a27 	vdiv.f32	s10, s10, s15
 8011a1c:	ee84 4a27 	vdiv.f32	s8, s8, s15
 8011a20:	f85d 4b04 	ldr.w	r4, [sp], #4
 8011a24:	f7ff bd62 	b.w	80114ec <nema_set_gradient>

08011a28 <nema_interpolate_tx_ty>:
 8011a28:	eeb5 1ac0 	vcmpe.f32	s2, #0.0
 8011a2c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8011a30:	d407      	bmi.n	8011a42 <nema_interpolate_tx_ty+0x1a>
 8011a32:	eddf 7a40 	vldr	s15, [pc, #256]	@ 8011b34 <nema_interpolate_tx_ty+0x10c>
 8011a36:	eeb4 1ae7 	vcmpe.f32	s2, s15
 8011a3a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8011a3e:	d807      	bhi.n	8011a50 <nema_interpolate_tx_ty+0x28>
 8011a40:	4770      	bx	lr
 8011a42:	eddf 7a3d 	vldr	s15, [pc, #244]	@ 8011b38 <nema_interpolate_tx_ty+0x110>
 8011a46:	eeb4 1ae7 	vcmpe.f32	s2, s15
 8011a4a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8011a4e:	daf7      	bge.n	8011a40 <nema_interpolate_tx_ty+0x18>
 8011a50:	eef5 3ac0 	vcmpe.f32	s7, #0.0
 8011a54:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8011a58:	d45b      	bmi.n	8011b12 <nema_interpolate_tx_ty+0xea>
 8011a5a:	eddf 7a36 	vldr	s15, [pc, #216]	@ 8011b34 <nema_interpolate_tx_ty+0x10c>
 8011a5e:	eef4 3ae7 	vcmpe.f32	s7, s15
 8011a62:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8011a66:	d9eb      	bls.n	8011a40 <nema_interpolate_tx_ty+0x18>
 8011a68:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
 8011a6c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8011a70:	d457      	bmi.n	8011b22 <nema_interpolate_tx_ty+0xfa>
 8011a72:	eddf 7a30 	vldr	s15, [pc, #192]	@ 8011b34 <nema_interpolate_tx_ty+0x10c>
 8011a76:	eeb4 6ae7 	vcmpe.f32	s12, s15
 8011a7a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8011a7e:	d9df      	bls.n	8011a40 <nema_interpolate_tx_ty+0x18>
 8011a80:	eef7 7a00 	vmov.f32	s15, #112	@ 0x3f800000  1.0
 8011a84:	b570      	push	{r4, r5, r6, lr}
 8011a86:	ee15 3a90 	vmov	r3, s11
 8011a8a:	ee13 2a10 	vmov	r2, s6
 8011a8e:	eec7 5a86 	vdiv.f32	s11, s15, s12
 8011a92:	ee87 3a81 	vdiv.f32	s6, s15, s2
 8011a96:	ee15 4a10 	vmov	r4, s10
 8011a9a:	ee87 5aa3 	vdiv.f32	s10, s15, s7
 8011a9e:	ee63 1a21 	vmul.f32	s3, s6, s3
 8011aa2:	ee23 2a02 	vmul.f32	s4, s6, s4
 8011aa6:	ee25 4a04 	vmul.f32	s8, s10, s8
 8011aaa:	ee65 4a24 	vmul.f32	s9, s10, s9
 8011aae:	ee65 6aa6 	vmul.f32	s13, s11, s13
 8011ab2:	ee25 7a87 	vmul.f32	s14, s11, s14
 8011ab6:	b092      	sub	sp, #72	@ 0x48
 8011ab8:	a809      	add	r0, sp, #36	@ 0x24
 8011aba:	ed8d 0a09 	vstr	s0, [sp, #36]	@ 0x24
 8011abe:	edcd 2a0a 	vstr	s5, [sp, #40]	@ 0x28
 8011ac2:	edcd 0a0c 	vstr	s1, [sp, #48]	@ 0x30
 8011ac6:	920d      	str	r2, [sp, #52]	@ 0x34
 8011ac8:	930e      	str	r3, [sp, #56]	@ 0x38
 8011aca:	edcd 1a00 	vstr	s3, [sp]
 8011ace:	ed8d 2a03 	vstr	s4, [sp, #12]
 8011ad2:	ed8d 4a01 	vstr	s8, [sp, #4]
 8011ad6:	edcd 4a04 	vstr	s9, [sp, #16]
 8011ada:	edcd 6a02 	vstr	s13, [sp, #8]
 8011ade:	ed8d 7a05 	vstr	s14, [sp, #20]
 8011ae2:	ed8d 3a06 	vstr	s6, [sp, #24]
 8011ae6:	ed8d 5a07 	vstr	s10, [sp, #28]
 8011aea:	edcd 5a08 	vstr	s11, [sp, #32]
 8011aee:	edcd 7a0f 	vstr	s15, [sp, #60]	@ 0x3c
 8011af2:	edcd 7a10 	vstr	s15, [sp, #64]	@ 0x40
 8011af6:	edcd 7a11 	vstr	s15, [sp, #68]	@ 0x44
 8011afa:	940b      	str	r4, [sp, #44]	@ 0x2c
 8011afc:	f000 f938 	bl	8011d70 <nema_mat3x3_adj>
 8011b00:	a909      	add	r1, sp, #36	@ 0x24
 8011b02:	4668      	mov	r0, sp
 8011b04:	f000 f89e 	bl	8011c44 <nema_mat3x3_mul>
 8011b08:	4668      	mov	r0, sp
 8011b0a:	f000 fc17 	bl	801233c <nema_set_matrix>
 8011b0e:	b012      	add	sp, #72	@ 0x48
 8011b10:	bd70      	pop	{r4, r5, r6, pc}
 8011b12:	eddf 7a09 	vldr	s15, [pc, #36]	@ 8011b38 <nema_interpolate_tx_ty+0x110>
 8011b16:	eef4 3ae7 	vcmpe.f32	s7, s15
 8011b1a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8011b1e:	da8f      	bge.n	8011a40 <nema_interpolate_tx_ty+0x18>
 8011b20:	e7a2      	b.n	8011a68 <nema_interpolate_tx_ty+0x40>
 8011b22:	eddf 7a05 	vldr	s15, [pc, #20]	@ 8011b38 <nema_interpolate_tx_ty+0x110>
 8011b26:	eeb4 6ae7 	vcmpe.f32	s12, s15
 8011b2a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8011b2e:	da87      	bge.n	8011a40 <nema_interpolate_tx_ty+0x18>
 8011b30:	e7a6      	b.n	8011a80 <nema_interpolate_tx_ty+0x58>
 8011b32:	bf00      	nop
 8011b34:	3727c5ac 	.word	0x3727c5ac
 8011b38:	b727c5ac 	.word	0xb727c5ac

08011b3c <nema_sqrt>:
 8011b3c:	ee10 2a10 	vmov	r2, s0
 8011b40:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 8011b44:	4b09      	ldr	r3, [pc, #36]	@ (8011b6c <nema_sqrt+0x30>)
 8011b46:	ee20 7a07 	vmul.f32	s14, s0, s14
 8011b4a:	eba3 0352 	sub.w	r3, r3, r2, lsr #1
 8011b4e:	ee07 3a90 	vmov	s15, r3
 8011b52:	ee27 7a27 	vmul.f32	s14, s14, s15
 8011b56:	eef7 6a08 	vmov.f32	s13, #120	@ 0x3fc00000  1.5
 8011b5a:	ee27 7a27 	vmul.f32	s14, s14, s15
 8011b5e:	ee67 7a80 	vmul.f32	s15, s15, s0
 8011b62:	ee36 0ac7 	vsub.f32	s0, s13, s14
 8011b66:	ee20 0a27 	vmul.f32	s0, s0, s15
 8011b6a:	4770      	bx	lr
 8011b6c:	5f3759df 	.word	0x5f3759df

08011b70 <nema_f2fx>:
 8011b70:	eddf 7a06 	vldr	s15, [pc, #24]	@ 8011b8c <nema_f2fx+0x1c>
 8011b74:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 8011b78:	ee20 0a27 	vmul.f32	s0, s0, s15
 8011b7c:	ee30 0a07 	vadd.f32	s0, s0, s14
 8011b80:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 8011b84:	ee17 0a90 	vmov	r0, s15
 8011b88:	4770      	bx	lr
 8011b8a:	bf00      	nop
 8011b8c:	47800000 	.word	0x47800000

08011b90 <nema_mat3x3_load_identity>:
 8011b90:	2300      	movs	r3, #0
 8011b92:	f04f 527e 	mov.w	r2, #1065353216	@ 0x3f800000
 8011b96:	61c3      	str	r3, [r0, #28]
 8011b98:	6202      	str	r2, [r0, #32]
 8011b9a:	6102      	str	r2, [r0, #16]
 8011b9c:	6002      	str	r2, [r0, #0]
 8011b9e:	6183      	str	r3, [r0, #24]
 8011ba0:	6143      	str	r3, [r0, #20]
 8011ba2:	60c3      	str	r3, [r0, #12]
 8011ba4:	6083      	str	r3, [r0, #8]
 8011ba6:	6043      	str	r3, [r0, #4]
 8011ba8:	4770      	bx	lr
 8011baa:	bf00      	nop

08011bac <nema_mat3x3_copy>:
 8011bac:	680b      	ldr	r3, [r1, #0]
 8011bae:	6003      	str	r3, [r0, #0]
 8011bb0:	684b      	ldr	r3, [r1, #4]
 8011bb2:	6043      	str	r3, [r0, #4]
 8011bb4:	688b      	ldr	r3, [r1, #8]
 8011bb6:	6083      	str	r3, [r0, #8]
 8011bb8:	68cb      	ldr	r3, [r1, #12]
 8011bba:	60c3      	str	r3, [r0, #12]
 8011bbc:	690b      	ldr	r3, [r1, #16]
 8011bbe:	6103      	str	r3, [r0, #16]
 8011bc0:	694b      	ldr	r3, [r1, #20]
 8011bc2:	6143      	str	r3, [r0, #20]
 8011bc4:	698b      	ldr	r3, [r1, #24]
 8011bc6:	6183      	str	r3, [r0, #24]
 8011bc8:	69cb      	ldr	r3, [r1, #28]
 8011bca:	61c3      	str	r3, [r0, #28]
 8011bcc:	6a0b      	ldr	r3, [r1, #32]
 8011bce:	6203      	str	r3, [r0, #32]
 8011bd0:	4770      	bx	lr
 8011bd2:	bf00      	nop

08011bd4 <nema_mat3x3_translate>:
 8011bd4:	edd0 6a06 	vldr	s13, [r0, #24]
 8011bd8:	ed90 7a07 	vldr	s14, [r0, #28]
 8011bdc:	edd0 7a08 	vldr	s15, [r0, #32]
 8011be0:	ee26 3a80 	vmul.f32	s6, s13, s0
 8011be4:	ee67 3a00 	vmul.f32	s7, s14, s0
 8011be8:	ee66 6aa0 	vmul.f32	s13, s13, s1
 8011bec:	ed90 4a00 	vldr	s8, [r0]
 8011bf0:	edd0 4a03 	vldr	s9, [r0, #12]
 8011bf4:	ee27 7a20 	vmul.f32	s14, s14, s1
 8011bf8:	ed90 5a01 	vldr	s10, [r0, #4]
 8011bfc:	edd0 5a04 	vldr	s11, [r0, #16]
 8011c00:	ee27 0a80 	vmul.f32	s0, s15, s0
 8011c04:	ed90 6a02 	vldr	s12, [r0, #8]
 8011c08:	ee67 7aa0 	vmul.f32	s15, s15, s1
 8011c0c:	edd0 0a05 	vldr	s1, [r0, #20]
 8011c10:	ee34 4a03 	vadd.f32	s8, s8, s6
 8011c14:	ee74 6aa6 	vadd.f32	s13, s9, s13
 8011c18:	ee35 5a23 	vadd.f32	s10, s10, s7
 8011c1c:	ee35 7a87 	vadd.f32	s14, s11, s14
 8011c20:	ee36 0a00 	vadd.f32	s0, s12, s0
 8011c24:	ee70 7aa7 	vadd.f32	s15, s1, s15
 8011c28:	ed80 4a00 	vstr	s8, [r0]
 8011c2c:	edc0 6a03 	vstr	s13, [r0, #12]
 8011c30:	ed80 5a01 	vstr	s10, [r0, #4]
 8011c34:	ed80 7a04 	vstr	s14, [r0, #16]
 8011c38:	ed80 0a02 	vstr	s0, [r0, #8]
 8011c3c:	edc0 7a05 	vstr	s15, [r0, #20]
 8011c40:	4770      	bx	lr
 8011c42:	bf00      	nop

08011c44 <nema_mat3x3_mul>:
 8011c44:	edd1 4a01 	vldr	s9, [r1, #4]
 8011c48:	ed91 0a04 	vldr	s0, [r1, #16]
 8011c4c:	edd1 0a05 	vldr	s1, [r1, #20]
 8011c50:	ed2d 8b0c 	vpush	{d8-d13}
 8011c54:	ed91 6a00 	vldr	s12, [r1]
 8011c58:	ed91 4a03 	vldr	s8, [r1, #12]
 8011c5c:	ed91 aa02 	vldr	s20, [r1, #8]
 8011c60:	edd0 3a03 	vldr	s7, [r0, #12]
 8011c64:	ed90 8a04 	vldr	s16, [r0, #16]
 8011c68:	ed90 9a00 	vldr	s18, [r0]
 8011c6c:	edd0 8a01 	vldr	s17, [r0, #4]
 8011c70:	edd0 9a06 	vldr	s19, [r0, #24]
 8011c74:	ed90 1a07 	vldr	s2, [r0, #28]
 8011c78:	edd1 aa06 	vldr	s21, [r1, #24]
 8011c7c:	edd1 6a07 	vldr	s13, [r1, #28]
 8011c80:	ed91 7a08 	vldr	s14, [r1, #32]
 8011c84:	ed90 5a02 	vldr	s10, [r0, #8]
 8011c88:	edd0 5a05 	vldr	s11, [r0, #20]
 8011c8c:	ee69 da06 	vmul.f32	s27, s18, s12
 8011c90:	ee29 da24 	vmul.f32	s26, s18, s9
 8011c94:	ee66 ca23 	vmul.f32	s25, s12, s7
 8011c98:	ee24 caa3 	vmul.f32	s24, s9, s7
 8011c9c:	ee68 1a84 	vmul.f32	s3, s17, s8
 8011ca0:	ee29 9a0a 	vmul.f32	s18, s18, s20
 8011ca4:	ee28 2a80 	vmul.f32	s4, s17, s0
 8011ca8:	ee26 6a29 	vmul.f32	s12, s12, s19
 8011cac:	ee64 2a08 	vmul.f32	s5, s8, s16
 8011cb0:	ee6a ba23 	vmul.f32	s23, s20, s7
 8011cb4:	ee24 baa9 	vmul.f32	s22, s9, s19
 8011cb8:	ee20 3a08 	vmul.f32	s6, s0, s16
 8011cbc:	ee60 3a88 	vmul.f32	s7, s1, s16
 8011cc0:	ee60 4a01 	vmul.f32	s9, s0, s2
 8011cc4:	ee68 8aa0 	vmul.f32	s17, s17, s1
 8011cc8:	ee24 4a01 	vmul.f32	s8, s8, s2
 8011ccc:	ee6a 7a29 	vmul.f32	s15, s20, s19
 8011cd0:	ee20 1a81 	vmul.f32	s2, s1, s2
 8011cd4:	edd0 0a08 	vldr	s1, [r0, #32]
 8011cd8:	ee25 0a2a 	vmul.f32	s0, s10, s21
 8011cdc:	ee79 8a28 	vadd.f32	s17, s18, s17
 8011ce0:	ee2a 8aa5 	vmul.f32	s16, s21, s11
 8011ce4:	ee25 9a26 	vmul.f32	s18, s10, s13
 8011ce8:	ee7d 1aa1 	vadd.f32	s3, s27, s3
 8011cec:	ee3d 2a02 	vadd.f32	s4, s26, s4
 8011cf0:	ee7c 2aa2 	vadd.f32	s5, s25, s5
 8011cf4:	ee3c 3a03 	vadd.f32	s6, s24, s6
 8011cf8:	ee7b 3aa3 	vadd.f32	s7, s23, s7
 8011cfc:	ee36 4a04 	vadd.f32	s8, s12, s8
 8011d00:	ee7b 4a24 	vadd.f32	s9, s22, s9
 8011d04:	ee77 7a81 	vadd.f32	s15, s15, s2
 8011d08:	ee25 5a07 	vmul.f32	s10, s10, s14
 8011d0c:	ee26 1aa5 	vmul.f32	s2, s13, s11
 8011d10:	ee2a 6aa0 	vmul.f32	s12, s21, s1
 8011d14:	ee67 5a25 	vmul.f32	s11, s14, s11
 8011d18:	ee66 6aa0 	vmul.f32	s13, s13, s1
 8011d1c:	ee27 7a20 	vmul.f32	s14, s14, s1
 8011d20:	ee32 2a09 	vadd.f32	s4, s4, s18
 8011d24:	ee38 5a85 	vadd.f32	s10, s17, s10
 8011d28:	ee72 2a88 	vadd.f32	s5, s5, s16
 8011d2c:	ee71 1a80 	vadd.f32	s3, s3, s0
 8011d30:	ee33 3a01 	vadd.f32	s6, s6, s2
 8011d34:	ee73 5aa5 	vadd.f32	s11, s7, s11
 8011d38:	ee34 6a06 	vadd.f32	s12, s8, s12
 8011d3c:	ee74 6aa6 	vadd.f32	s13, s9, s13
 8011d40:	ee77 7a87 	vadd.f32	s15, s15, s14
 8011d44:	edc0 1a00 	vstr	s3, [r0]
 8011d48:	ed80 2a01 	vstr	s4, [r0, #4]
 8011d4c:	ed80 5a02 	vstr	s10, [r0, #8]
 8011d50:	edc0 2a03 	vstr	s5, [r0, #12]
 8011d54:	ed80 3a04 	vstr	s6, [r0, #16]
 8011d58:	edc0 5a05 	vstr	s11, [r0, #20]
 8011d5c:	ed80 6a06 	vstr	s12, [r0, #24]
 8011d60:	edc0 6a07 	vstr	s13, [r0, #28]
 8011d64:	edc0 7a08 	vstr	s15, [r0, #32]
 8011d68:	ecbd 8b0c 	vpop	{d8-d13}
 8011d6c:	4770      	bx	lr
 8011d6e:	bf00      	nop

08011d70 <nema_mat3x3_adj>:
 8011d70:	edd0 3a03 	vldr	s7, [r0, #12]
 8011d74:	edd0 4a04 	vldr	s9, [r0, #16]
 8011d78:	ed90 6a08 	vldr	s12, [r0, #32]
 8011d7c:	ed90 5a07 	vldr	s10, [r0, #28]
 8011d80:	ed90 4a05 	vldr	s8, [r0, #20]
 8011d84:	edd0 7a00 	vldr	s15, [r0]
 8011d88:	edd0 6a02 	vldr	s13, [r0, #8]
 8011d8c:	edd0 5a01 	vldr	s11, [r0, #4]
 8011d90:	ed90 7a06 	vldr	s14, [r0, #24]
 8011d94:	ed2d 8b04 	vpush	{d8-d9}
 8011d98:	ee24 1a86 	vmul.f32	s2, s9, s12
 8011d9c:	ee25 9a04 	vmul.f32	s18, s10, s8
 8011da0:	ee66 8a25 	vmul.f32	s17, s12, s11
 8011da4:	ee24 8aa6 	vmul.f32	s16, s9, s13
 8011da8:	ee65 1a26 	vmul.f32	s3, s10, s13
 8011dac:	ee24 2a25 	vmul.f32	s4, s8, s11
 8011db0:	ee64 2a07 	vmul.f32	s5, s8, s14
 8011db4:	ee66 0a87 	vmul.f32	s1, s13, s14
 8011db8:	ee25 3a23 	vmul.f32	s6, s10, s7
 8011dbc:	ee24 4a27 	vmul.f32	s8, s8, s15
 8011dc0:	ee26 0a23 	vmul.f32	s0, s12, s7
 8011dc4:	ee66 6aa3 	vmul.f32	s13, s13, s7
 8011dc8:	ee26 6a27 	vmul.f32	s12, s12, s15
 8011dcc:	ee25 5a27 	vmul.f32	s10, s10, s15
 8011dd0:	ee64 7aa7 	vmul.f32	s15, s9, s15
 8011dd4:	ee64 4a87 	vmul.f32	s9, s9, s14
 8011dd8:	ee25 7a87 	vmul.f32	s14, s11, s14
 8011ddc:	ee65 5aa3 	vmul.f32	s11, s11, s7
 8011de0:	ee31 1a49 	vsub.f32	s2, s2, s18
 8011de4:	ee71 1ae8 	vsub.f32	s3, s3, s17
 8011de8:	ee32 2a48 	vsub.f32	s4, s4, s16
 8011dec:	ecbd 8b04 	vpop	{d8-d9}
 8011df0:	ee72 3ac0 	vsub.f32	s7, s5, s0
 8011df4:	ee36 6a60 	vsub.f32	s12, s12, s1
 8011df8:	ee76 6ac4 	vsub.f32	s13, s13, s8
 8011dfc:	ee73 4a64 	vsub.f32	s9, s6, s9
 8011e00:	ee37 7a45 	vsub.f32	s14, s14, s10
 8011e04:	ee77 7ae5 	vsub.f32	s15, s15, s11
 8011e08:	ed80 1a00 	vstr	s2, [r0]
 8011e0c:	edc0 1a01 	vstr	s3, [r0, #4]
 8011e10:	ed80 2a02 	vstr	s4, [r0, #8]
 8011e14:	edc0 3a03 	vstr	s7, [r0, #12]
 8011e18:	ed80 6a04 	vstr	s12, [r0, #16]
 8011e1c:	edc0 6a05 	vstr	s13, [r0, #20]
 8011e20:	edc0 4a06 	vstr	s9, [r0, #24]
 8011e24:	ed80 7a07 	vstr	s14, [r0, #28]
 8011e28:	edc0 7a08 	vstr	s15, [r0, #32]
 8011e2c:	4770      	bx	lr
 8011e2e:	bf00      	nop

08011e30 <nema_mat3x3_invert>:
 8011e30:	ed90 6a08 	vldr	s12, [r0, #32]
 8011e34:	edd0 2a04 	vldr	s5, [r0, #16]
 8011e38:	ed90 3a05 	vldr	s6, [r0, #20]
 8011e3c:	ed90 2a07 	vldr	s4, [r0, #28]
 8011e40:	edd0 4a03 	vldr	s9, [r0, #12]
 8011e44:	edd0 6a06 	vldr	s13, [r0, #24]
 8011e48:	ee63 7a02 	vmul.f32	s15, s6, s4
 8011e4c:	ee66 3a22 	vmul.f32	s7, s12, s5
 8011e50:	ee26 0a24 	vmul.f32	s0, s12, s9
 8011e54:	ee63 1a26 	vmul.f32	s3, s6, s13
 8011e58:	ee73 3ae7 	vsub.f32	s7, s7, s15
 8011e5c:	ee22 7aa6 	vmul.f32	s14, s5, s13
 8011e60:	edd0 7a00 	vldr	s15, [r0]
 8011e64:	ee30 1a61 	vsub.f32	s2, s0, s3
 8011e68:	edd0 5a01 	vldr	s11, [r0, #4]
 8011e6c:	ee22 4a24 	vmul.f32	s8, s4, s9
 8011e70:	ee21 1a25 	vmul.f32	s2, s2, s11
 8011e74:	ee34 4a47 	vsub.f32	s8, s8, s14
 8011e78:	ee27 5aa3 	vmul.f32	s10, s15, s7
 8011e7c:	ed90 7a02 	vldr	s14, [r0, #8]
 8011e80:	ee35 5a41 	vsub.f32	s10, s10, s2
 8011e84:	ee27 1a04 	vmul.f32	s2, s14, s8
 8011e88:	ee35 5a01 	vadd.f32	s10, s10, s2
 8011e8c:	eeb5 5ac0 	vcmpe.f32	s10, #0.0
 8011e90:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8011e94:	4603      	mov	r3, r0
 8011e96:	d45d      	bmi.n	8011f54 <nema_mat3x3_invert+0x124>
 8011e98:	ed9f 1a35 	vldr	s2, [pc, #212]	@ 8011f70 <nema_mat3x3_invert+0x140>
 8011e9c:	eeb4 5ac1 	vcmpe.f32	s10, s2
 8011ea0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8011ea4:	bf94      	ite	ls
 8011ea6:	2001      	movls	r0, #1
 8011ea8:	2000      	movhi	r0, #0
 8011eaa:	2800      	cmp	r0, #0
 8011eac:	d15c      	bne.n	8011f68 <nema_mat3x3_invert+0x138>
 8011eae:	ed2d 8b04 	vpush	{d8-d9}
 8011eb2:	ee62 0a07 	vmul.f32	s1, s4, s14
 8011eb6:	ee66 8a25 	vmul.f32	s17, s12, s11
 8011eba:	ee26 8a87 	vmul.f32	s16, s13, s14
 8011ebe:	ee23 1a25 	vmul.f32	s2, s6, s11
 8011ec2:	eeb7 9a00 	vmov.f32	s18, #112	@ 0x3f800000  1.0
 8011ec6:	ee27 2a82 	vmul.f32	s4, s15, s4
 8011eca:	ee27 6a86 	vmul.f32	s12, s15, s12
 8011ece:	ee65 6aa6 	vmul.f32	s13, s11, s13
 8011ed2:	ee27 3a83 	vmul.f32	s6, s15, s6
 8011ed6:	ee67 7aa2 	vmul.f32	s15, s15, s5
 8011eda:	ee62 2a87 	vmul.f32	s5, s5, s14
 8011ede:	ee24 7a87 	vmul.f32	s14, s9, s14
 8011ee2:	ee65 4aa4 	vmul.f32	s9, s11, s9
 8011ee6:	ee36 6a48 	vsub.f32	s12, s12, s16
 8011eea:	eec9 5a05 	vdiv.f32	s11, s18, s10
 8011eee:	ee71 1ac0 	vsub.f32	s3, s3, s0
 8011ef2:	ee30 5ae8 	vsub.f32	s10, s1, s17
 8011ef6:	ee76 6ac2 	vsub.f32	s13, s13, s4
 8011efa:	ee71 2a62 	vsub.f32	s5, s2, s5
 8011efe:	ee37 7a43 	vsub.f32	s14, s14, s6
 8011f02:	ee77 7ae4 	vsub.f32	s15, s15, s9
 8011f06:	ee63 3aa5 	vmul.f32	s7, s7, s11
 8011f0a:	ee61 1aa5 	vmul.f32	s3, s3, s11
 8011f0e:	ee24 4a25 	vmul.f32	s8, s8, s11
 8011f12:	ee25 5a25 	vmul.f32	s10, s10, s11
 8011f16:	ee26 6a25 	vmul.f32	s12, s12, s11
 8011f1a:	ee66 6aa5 	vmul.f32	s13, s13, s11
 8011f1e:	ee62 2aa5 	vmul.f32	s5, s5, s11
 8011f22:	ee27 7a25 	vmul.f32	s14, s14, s11
 8011f26:	ee67 7aa5 	vmul.f32	s15, s15, s11
 8011f2a:	edc3 3a00 	vstr	s7, [r3]
 8011f2e:	edc3 1a03 	vstr	s3, [r3, #12]
 8011f32:	ed83 4a06 	vstr	s8, [r3, #24]
 8011f36:	ed83 5a01 	vstr	s10, [r3, #4]
 8011f3a:	ed83 6a04 	vstr	s12, [r3, #16]
 8011f3e:	edc3 6a07 	vstr	s13, [r3, #28]
 8011f42:	edc3 2a02 	vstr	s5, [r3, #8]
 8011f46:	ed83 7a05 	vstr	s14, [r3, #20]
 8011f4a:	edc3 7a08 	vstr	s15, [r3, #32]
 8011f4e:	ecbd 8b04 	vpop	{d8-d9}
 8011f52:	4770      	bx	lr
 8011f54:	ed9f 1a07 	vldr	s2, [pc, #28]	@ 8011f74 <nema_mat3x3_invert+0x144>
 8011f58:	eeb4 5ac1 	vcmpe.f32	s10, s2
 8011f5c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8011f60:	bfac      	ite	ge
 8011f62:	2001      	movge	r0, #1
 8011f64:	2000      	movlt	r0, #0
 8011f66:	e7a0      	b.n	8011eaa <nema_mat3x3_invert+0x7a>
 8011f68:	f04f 30ff 	mov.w	r0, #4294967295
 8011f6c:	4770      	bx	lr
 8011f6e:	bf00      	nop
 8011f70:	3727c5ac 	.word	0x3727c5ac
 8011f74:	b727c5ac 	.word	0xb727c5ac

08011f78 <nema_mat3x3_quad_to_rect>:
 8011f78:	ee70 6a41 	vsub.f32	s13, s0, s2
 8011f7c:	ee76 6a82 	vadd.f32	s13, s13, s4
 8011f80:	ee76 6ac3 	vsub.f32	s13, s13, s6
 8011f84:	ee30 6ae1 	vsub.f32	s12, s1, s3
 8011f88:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 8011f8c:	ee36 6a22 	vadd.f32	s12, s12, s5
 8011f90:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8011f94:	ed2d 8b06 	vpush	{d8-d10}
 8011f98:	ee36 6a63 	vsub.f32	s12, s12, s7
 8011f9c:	ee09 0a10 	vmov	s18, r0
 8011fa0:	ee08 1a90 	vmov	s17, r1
 8011fa4:	f100 812e 	bmi.w	8012204 <nema_mat3x3_quad_to_rect+0x28c>
 8011fa8:	eddf 7aa4 	vldr	s15, [pc, #656]	@ 801223c <nema_mat3x3_quad_to_rect+0x2c4>
 8011fac:	eef4 6ae7 	vcmpe.f32	s13, s15
 8011fb0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8011fb4:	d80d      	bhi.n	8011fd2 <nema_mat3x3_quad_to_rect+0x5a>
 8011fb6:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
 8011fba:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8011fbe:	f100 80f7 	bmi.w	80121b0 <nema_mat3x3_quad_to_rect+0x238>
 8011fc2:	eddf 7a9e 	vldr	s15, [pc, #632]	@ 801223c <nema_mat3x3_quad_to_rect+0x2c4>
 8011fc6:	eeb4 6ae7 	vcmpe.f32	s12, s15
 8011fca:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8011fce:	f240 80f7 	bls.w	80121c0 <nema_mat3x3_quad_to_rect+0x248>
 8011fd2:	ee31 7a42 	vsub.f32	s14, s2, s4
 8011fd6:	ee73 7ae2 	vsub.f32	s15, s7, s5
 8011fda:	ee33 2a42 	vsub.f32	s4, s6, s4
 8011fde:	ee71 2ae2 	vsub.f32	s5, s3, s5
 8011fe2:	ee67 5a27 	vmul.f32	s11, s14, s15
 8011fe6:	ee22 5a22 	vmul.f32	s10, s4, s5
 8011fea:	ee75 5ac5 	vsub.f32	s11, s11, s10
 8011fee:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 8011ff2:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8011ff6:	ee26 7a07 	vmul.f32	s14, s12, s14
 8011ffa:	ee66 6aa2 	vmul.f32	s13, s13, s5
 8011ffe:	ee26 6a02 	vmul.f32	s12, s12, s4
 8012002:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8012006:	ee77 7ac6 	vsub.f32	s15, s15, s12
 801200a:	ee77 6a66 	vsub.f32	s13, s14, s13
 801200e:	f100 80c5 	bmi.w	801219c <nema_mat3x3_quad_to_rect+0x224>
 8012012:	ed9f 7a8a 	vldr	s14, [pc, #552]	@ 801223c <nema_mat3x3_quad_to_rect+0x2c4>
 8012016:	eef4 5ac7 	vcmpe.f32	s11, s14
 801201a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801201e:	bf94      	ite	ls
 8012020:	2301      	movls	r3, #1
 8012022:	2300      	movhi	r3, #0
 8012024:	2b00      	cmp	r3, #0
 8012026:	f040 8106 	bne.w	8012236 <nema_mat3x3_quad_to_rect+0x2be>
 801202a:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801202e:	ee87 6a25 	vdiv.f32	s12, s14, s11
 8012032:	ee67 7a86 	vmul.f32	s15, s15, s12
 8012036:	ee66 6a86 	vmul.f32	s13, s13, s12
 801203a:	ee21 5a27 	vmul.f32	s10, s2, s15
 801203e:	ee61 5aa7 	vmul.f32	s11, s3, s15
 8012042:	ee63 2aa6 	vmul.f32	s5, s7, s13
 8012046:	ee31 1a40 	vsub.f32	s2, s2, s0
 801204a:	ee23 6a26 	vmul.f32	s12, s6, s13
 801204e:	ee33 2a40 	vsub.f32	s4, s6, s0
 8012052:	ee71 1ae0 	vsub.f32	s3, s3, s1
 8012056:	ee73 3ae0 	vsub.f32	s7, s7, s1
 801205a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801205e:	ee32 2a06 	vadd.f32	s4, s4, s12
 8012062:	ee71 1aa5 	vadd.f32	s3, s3, s11
 8012066:	ee73 2aa2 	vadd.f32	s5, s7, s5
 801206a:	ed82 0a02 	vstr	s0, [r2, #8]
 801206e:	edc2 0a05 	vstr	s1, [r2, #20]
 8012072:	edc2 7a06 	vstr	s15, [r2, #24]
 8012076:	edc2 6a07 	vstr	s13, [r2, #28]
 801207a:	ed82 7a08 	vstr	s14, [r2, #32]
 801207e:	ed82 1a00 	vstr	s2, [r2]
 8012082:	ed82 2a01 	vstr	s4, [r2, #4]
 8012086:	edc2 1a03 	vstr	s3, [r2, #12]
 801208a:	edc2 2a04 	vstr	s5, [r2, #16]
 801208e:	ee20 4aa6 	vmul.f32	s8, s1, s13
 8012092:	ee60 5aa7 	vmul.f32	s11, s1, s15
 8012096:	ee32 3ac4 	vsub.f32	s6, s5, s8
 801209a:	ee31 7ae5 	vsub.f32	s14, s3, s11
 801209e:	ee21 8aa6 	vmul.f32	s16, s3, s13
 80120a2:	ee22 6aa7 	vmul.f32	s12, s5, s15
 80120a6:	ee27 7a02 	vmul.f32	s14, s14, s4
 80120aa:	ee23 4a01 	vmul.f32	s8, s6, s2
 80120ae:	ee38 8a46 	vsub.f32	s16, s16, s12
 80120b2:	ee34 4a47 	vsub.f32	s8, s8, s14
 80120b6:	ee20 7a08 	vmul.f32	s14, s0, s16
 80120ba:	ee34 4a07 	vadd.f32	s8, s8, s14
 80120be:	eeb5 4ac0 	vcmpe.f32	s8, #0.0
 80120c2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80120c6:	f100 80ac 	bmi.w	8012222 <nema_mat3x3_quad_to_rect+0x2aa>
 80120ca:	ed9f 7a5c 	vldr	s14, [pc, #368]	@ 801223c <nema_mat3x3_quad_to_rect+0x2c4>
 80120ce:	eeb4 4ac7 	vcmpe.f32	s8, s14
 80120d2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80120d6:	bf94      	ite	ls
 80120d8:	2001      	movls	r0, #1
 80120da:	2000      	movhi	r0, #0
 80120dc:	2800      	cmp	r0, #0
 80120de:	f040 80aa 	bne.w	8012236 <nema_mat3x3_quad_to_rect+0x2be>
 80120e2:	ee20 5a82 	vmul.f32	s10, s1, s4
 80120e6:	ee60 4a26 	vmul.f32	s9, s0, s13
 80120ea:	ee20 6a27 	vmul.f32	s12, s0, s15
 80120ee:	ee60 9a22 	vmul.f32	s19, s0, s5
 80120f2:	eeb7 aa00 	vmov.f32	s20, #112	@ 0x3f800000  1.0
 80120f6:	ee60 0a81 	vmul.f32	s1, s1, s2
 80120fa:	ee20 7a21 	vmul.f32	s14, s0, s3
 80120fe:	eeca 3a04 	vdiv.f32	s7, s20, s8
 8012102:	ee74 4ac2 	vsub.f32	s9, s9, s4
 8012106:	ee61 6a26 	vmul.f32	s13, s2, s13
 801210a:	ee67 7a82 	vmul.f32	s15, s15, s4
 801210e:	ee35 5a69 	vsub.f32	s10, s10, s19
 8012112:	ee75 5ae1 	vsub.f32	s11, s11, s3
 8012116:	ee31 6a46 	vsub.f32	s12, s2, s12
 801211a:	ee62 2a81 	vmul.f32	s5, s5, s2
 801211e:	ee37 7a60 	vsub.f32	s14, s14, s1
 8012122:	ee21 2a82 	vmul.f32	s4, s3, s4
 8012126:	eeb8 9ac9 	vcvt.f32.s32	s18, s18
 801212a:	eef8 8ae8 	vcvt.f32.s32	s17, s17
 801212e:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8012132:	ee23 4a23 	vmul.f32	s8, s6, s7
 8012136:	ee65 6a23 	vmul.f32	s13, s10, s7
 801213a:	ee65 5aa3 	vmul.f32	s11, s11, s7
 801213e:	ee64 4aa3 	vmul.f32	s9, s9, s7
 8012142:	ee26 6a23 	vmul.f32	s12, s12, s7
 8012146:	ee27 7a23 	vmul.f32	s14, s14, s7
 801214a:	ee72 2ac2 	vsub.f32	s5, s5, s4
 801214e:	ee24 4a09 	vmul.f32	s8, s8, s18
 8012152:	ee65 5aa8 	vmul.f32	s11, s11, s17
 8012156:	ee28 8a23 	vmul.f32	s16, s16, s7
 801215a:	ee24 5a89 	vmul.f32	s10, s9, s18
 801215e:	ee26 6a28 	vmul.f32	s12, s12, s17
 8012162:	ee67 7aa3 	vmul.f32	s15, s15, s7
 8012166:	ee66 6a89 	vmul.f32	s13, s13, s18
 801216a:	ee27 7a28 	vmul.f32	s14, s14, s17
 801216e:	ee62 2aa3 	vmul.f32	s5, s5, s7
 8012172:	ed82 4a00 	vstr	s8, [r2]
 8012176:	edc2 5a03 	vstr	s11, [r2, #12]
 801217a:	ed82 8a06 	vstr	s16, [r2, #24]
 801217e:	ed82 5a01 	vstr	s10, [r2, #4]
 8012182:	ed82 6a04 	vstr	s12, [r2, #16]
 8012186:	edc2 7a07 	vstr	s15, [r2, #28]
 801218a:	edc2 6a02 	vstr	s13, [r2, #8]
 801218e:	ed82 7a05 	vstr	s14, [r2, #20]
 8012192:	edc2 2a08 	vstr	s5, [r2, #32]
 8012196:	ecbd 8b06 	vpop	{d8-d10}
 801219a:	4770      	bx	lr
 801219c:	ed9f 7a28 	vldr	s14, [pc, #160]	@ 8012240 <nema_mat3x3_quad_to_rect+0x2c8>
 80121a0:	eef4 5ac7 	vcmpe.f32	s11, s14
 80121a4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80121a8:	bfac      	ite	ge
 80121aa:	2301      	movge	r3, #1
 80121ac:	2300      	movlt	r3, #0
 80121ae:	e739      	b.n	8012024 <nema_mat3x3_quad_to_rect+0xac>
 80121b0:	eddf 7a23 	vldr	s15, [pc, #140]	@ 8012240 <nema_mat3x3_quad_to_rect+0x2c8>
 80121b4:	eeb4 6ae7 	vcmpe.f32	s12, s15
 80121b8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80121bc:	f6ff af09 	blt.w	8011fd2 <nema_mat3x3_quad_to_rect+0x5a>
 80121c0:	ed9f 7a20 	vldr	s14, [pc, #128]	@ 8012244 <nema_mat3x3_quad_to_rect+0x2cc>
 80121c4:	ee32 2a41 	vsub.f32	s4, s4, s2
 80121c8:	ee72 2ae1 	vsub.f32	s5, s5, s3
 80121cc:	ee31 1a40 	vsub.f32	s2, s2, s0
 80121d0:	ee71 1ae0 	vsub.f32	s3, s3, s1
 80121d4:	f04f 537e 	mov.w	r3, #1065353216	@ 0x3f800000
 80121d8:	eef0 7a47 	vmov.f32	s15, s14
 80121dc:	ed82 2a01 	vstr	s4, [r2, #4]
 80121e0:	ed82 1a00 	vstr	s2, [r2]
 80121e4:	edc2 2a04 	vstr	s5, [r2, #16]
 80121e8:	edc2 1a03 	vstr	s3, [r2, #12]
 80121ec:	ed82 0a02 	vstr	s0, [r2, #8]
 80121f0:	edc2 0a05 	vstr	s1, [r2, #20]
 80121f4:	ed82 7a06 	vstr	s14, [r2, #24]
 80121f8:	ed82 7a07 	vstr	s14, [r2, #28]
 80121fc:	eef0 6a47 	vmov.f32	s13, s14
 8012200:	6213      	str	r3, [r2, #32]
 8012202:	e744      	b.n	801208e <nema_mat3x3_quad_to_rect+0x116>
 8012204:	eddf 7a0e 	vldr	s15, [pc, #56]	@ 8012240 <nema_mat3x3_quad_to_rect+0x2c8>
 8012208:	eef4 6ae7 	vcmpe.f32	s13, s15
 801220c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8012210:	f6ff aedf 	blt.w	8011fd2 <nema_mat3x3_quad_to_rect+0x5a>
 8012214:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
 8012218:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801221c:	f57f aed1 	bpl.w	8011fc2 <nema_mat3x3_quad_to_rect+0x4a>
 8012220:	e7c6      	b.n	80121b0 <nema_mat3x3_quad_to_rect+0x238>
 8012222:	ed9f 7a07 	vldr	s14, [pc, #28]	@ 8012240 <nema_mat3x3_quad_to_rect+0x2c8>
 8012226:	eeb4 4ac7 	vcmpe.f32	s8, s14
 801222a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801222e:	bfac      	ite	ge
 8012230:	2001      	movge	r0, #1
 8012232:	2000      	movlt	r0, #0
 8012234:	e752      	b.n	80120dc <nema_mat3x3_quad_to_rect+0x164>
 8012236:	f04f 30ff 	mov.w	r0, #4294967295
 801223a:	e7ac      	b.n	8012196 <nema_mat3x3_quad_to_rect+0x21e>
 801223c:	3727c5ac 	.word	0x3727c5ac
 8012240:	b727c5ac 	.word	0xb727c5ac
 8012244:	00000000 	.word	0x00000000

08012248 <nema_readHwConfig>:
 8012248:	b510      	push	{r4, lr}
 801224a:	4c05      	ldr	r4, [pc, #20]	@ (8012260 <nema_readHwConfig+0x18>)
 801224c:	6820      	ldr	r0, [r4, #0]
 801224e:	b100      	cbz	r0, 8012252 <nema_readHwConfig+0xa>
 8012250:	bd10      	pop	{r4, pc}
 8012252:	f44f 70f8 	mov.w	r0, #496	@ 0x1f0
 8012256:	f7f0 fd57 	bl	8002d08 <nema_reg_read>
 801225a:	6020      	str	r0, [r4, #0]
 801225c:	bd10      	pop	{r4, pc}
 801225e:	bf00      	nop
 8012260:	20083144 	.word	0x20083144

08012264 <nema_readHwConfigH>:
 8012264:	f44f 70fa 	mov.w	r0, #500	@ 0x1f4
 8012268:	f7f0 bd4e 	b.w	8002d08 <nema_reg_read>

0801226c <nema_enable_tiling>:
 801226c:	2800      	cmp	r0, #0
 801226e:	bf14      	ite	ne
 8012270:	f04f 4080 	movne.w	r0, #1073741824	@ 0x40000000
 8012274:	2000      	moveq	r0, #0
 8012276:	b410      	push	{r4}
 8012278:	4a05      	ldr	r2, [pc, #20]	@ (8012290 <nema_enable_tiling+0x24>)
 801227a:	6951      	ldr	r1, [r2, #20]
 801227c:	e9d2 4302 	ldrd	r4, r3, [r2, #8]
 8012280:	4323      	orrs	r3, r4
 8012282:	430b      	orrs	r3, r1
 8012284:	4303      	orrs	r3, r0
 8012286:	6050      	str	r0, [r2, #4]
 8012288:	6113      	str	r3, [r2, #16]
 801228a:	f85d 4b04 	ldr.w	r4, [sp], #4
 801228e:	4770      	bx	lr
 8012290:	20000064 	.word	0x20000064

08012294 <nema_enable_tiling_2x2>:
 8012294:	2800      	cmp	r0, #0
 8012296:	bf14      	ite	ne
 8012298:	f04f 4040 	movne.w	r0, #3221225472	@ 0xc0000000
 801229c:	2000      	moveq	r0, #0
 801229e:	b410      	push	{r4}
 80122a0:	4a05      	ldr	r2, [pc, #20]	@ (80122b8 <nema_enable_tiling_2x2+0x24>)
 80122a2:	6951      	ldr	r1, [r2, #20]
 80122a4:	e9d2 4302 	ldrd	r4, r3, [r2, #8]
 80122a8:	4323      	orrs	r3, r4
 80122aa:	430b      	orrs	r3, r1
 80122ac:	4303      	orrs	r3, r0
 80122ae:	6050      	str	r0, [r2, #4]
 80122b0:	6113      	str	r3, [r2, #16]
 80122b2:	f85d 4b04 	ldr.w	r4, [sp], #4
 80122b6:	4770      	bx	lr
 80122b8:	20000064 	.word	0x20000064

080122bc <nema_enable_aa>:
 80122bc:	2800      	cmp	r0, #0
 80122be:	b410      	push	{r4}
 80122c0:	bf19      	ittee	ne
 80122c2:	f04f 6080 	movne.w	r0, #67108864	@ 0x4000000
 80122c6:	f04f 64c0 	movne.w	r4, #100663296	@ 0x6000000
 80122ca:	f04f 7400 	moveq.w	r4, #33554432	@ 0x2000000
 80122ce:	2000      	moveq	r0, #0
 80122d0:	2900      	cmp	r1, #0
 80122d2:	bf08      	it	eq
 80122d4:	4604      	moveq	r4, r0
 80122d6:	b10a      	cbz	r2, 80122dc <nema_enable_aa+0x20>
 80122d8:	f044 7480 	orr.w	r4, r4, #16777216	@ 0x1000000
 80122dc:	b10b      	cbz	r3, 80122e2 <nema_enable_aa+0x26>
 80122de:	f444 0400 	orr.w	r4, r4, #8388608	@ 0x800000
 80122e2:	4a06      	ldr	r2, [pc, #24]	@ (80122fc <nema_enable_aa+0x40>)
 80122e4:	6853      	ldr	r3, [r2, #4]
 80122e6:	e9d2 1002 	ldrd	r1, r0, [r2, #8]
 80122ea:	4303      	orrs	r3, r0
 80122ec:	430b      	orrs	r3, r1
 80122ee:	4323      	orrs	r3, r4
 80122f0:	6950      	ldr	r0, [r2, #20]
 80122f2:	e9c2 3404 	strd	r3, r4, [r2, #16]
 80122f6:	f85d 4b04 	ldr.w	r4, [sp], #4
 80122fa:	4770      	bx	lr
 80122fc:	20000064 	.word	0x20000064

08012300 <nema_enable_aa_flags>:
 8012300:	b410      	push	{r4}
 8012302:	4a07      	ldr	r2, [pc, #28]	@ (8012320 <nema_enable_aa_flags+0x20>)
 8012304:	f000 61f0 	and.w	r1, r0, #125829120	@ 0x7800000
 8012308:	6853      	ldr	r3, [r2, #4]
 801230a:	e9d2 0402 	ldrd	r0, r4, [r2, #8]
 801230e:	4323      	orrs	r3, r4
 8012310:	4303      	orrs	r3, r0
 8012312:	430b      	orrs	r3, r1
 8012314:	6950      	ldr	r0, [r2, #20]
 8012316:	e9c2 3104 	strd	r3, r1, [r2, #16]
 801231a:	f85d 4b04 	ldr.w	r4, [sp], #4
 801231e:	4770      	bx	lr
 8012320:	20000064 	.word	0x20000064

08012324 <nema_matmul_bypass>:
 8012324:	b920      	cbnz	r0, 8012330 <nema_matmul_bypass+0xc>
 8012326:	4601      	mov	r1, r0
 8012328:	f44f 708c 	mov.w	r0, #280	@ 0x118
 801232c:	f00b be96 	b.w	801e05c <nema_cl_add_cmd>
 8012330:	f04f 4110 	mov.w	r1, #2415919104	@ 0x90000000
 8012334:	f44f 708c 	mov.w	r0, #280	@ 0x118
 8012338:	f00b be90 	b.w	801e05c <nema_cl_add_cmd>

0801233c <nema_set_matrix>:
 801233c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012340:	ed9f 7a59 	vldr	s14, [pc, #356]	@ 80124a8 <nema_set_matrix+0x16c>
 8012344:	edd0 7a06 	vldr	s15, [r0, #24]
 8012348:	eef4 7ac7 	vcmpe.f32	s15, s14
 801234c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8012350:	4604      	mov	r4, r0
 8012352:	d506      	bpl.n	8012362 <nema_set_matrix+0x26>
 8012354:	eddf 6a55 	vldr	s13, [pc, #340]	@ 80124ac <nema_set_matrix+0x170>
 8012358:	eef4 7ae6 	vcmpe.f32	s15, s13
 801235c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8012360:	dc47      	bgt.n	80123f2 <nema_set_matrix+0xb6>
 8012362:	2009      	movs	r0, #9
 8012364:	f00b fe1e 	bl	801dfa4 <nema_cl_get_space>
 8012368:	2800      	cmp	r0, #0
 801236a:	d040      	beq.n	80123ee <nema_set_matrix+0xb2>
 801236c:	f44f 73ba 	mov.w	r3, #372	@ 0x174
 8012370:	6003      	str	r3, [r0, #0]
 8012372:	f44f 73b4 	mov.w	r3, #360	@ 0x168
 8012376:	6962      	ldr	r2, [r4, #20]
 8012378:	6083      	str	r3, [r0, #8]
 801237a:	f44f 73bc 	mov.w	r3, #376	@ 0x178
 801237e:	6042      	str	r2, [r0, #4]
 8012380:	68a2      	ldr	r2, [r4, #8]
 8012382:	6103      	str	r3, [r0, #16]
 8012384:	f44f 73be 	mov.w	r3, #380	@ 0x17c
 8012388:	60c2      	str	r2, [r0, #12]
 801238a:	69a2      	ldr	r2, [r4, #24]
 801238c:	6183      	str	r3, [r0, #24]
 801238e:	f44f 73c0 	mov.w	r3, #384	@ 0x180
 8012392:	6142      	str	r2, [r0, #20]
 8012394:	69e2      	ldr	r2, [r4, #28]
 8012396:	6203      	str	r3, [r0, #32]
 8012398:	61c2      	str	r2, [r0, #28]
 801239a:	6a23      	ldr	r3, [r4, #32]
 801239c:	2544      	movs	r5, #68	@ 0x44
 801239e:	6243      	str	r3, [r0, #36]	@ 0x24
 80123a0:	2640      	movs	r6, #64	@ 0x40
 80123a2:	233c      	movs	r3, #60	@ 0x3c
 80123a4:	2738      	movs	r7, #56	@ 0x38
 80123a6:	2234      	movs	r2, #52	@ 0x34
 80123a8:	f04f 0c30 	mov.w	ip, #48	@ 0x30
 80123ac:	212c      	movs	r1, #44	@ 0x2c
 80123ae:	f04f 0e28 	mov.w	lr, #40	@ 0x28
 80123b2:	f44f 78b0 	mov.w	r8, #352	@ 0x160
 80123b6:	f840 800e 	str.w	r8, [r0, lr]
 80123ba:	f44f 7eb2 	mov.w	lr, #356	@ 0x164
 80123be:	f8d4 8000 	ldr.w	r8, [r4]
 80123c2:	4401      	add	r1, r0
 80123c4:	f8c1 8000 	str.w	r8, [r1]
 80123c8:	f840 e00c 	str.w	lr, [r0, ip]
 80123cc:	f44f 71b6 	mov.w	r1, #364	@ 0x16c
 80123d0:	f8d4 c004 	ldr.w	ip, [r4, #4]
 80123d4:	4402      	add	r2, r0
 80123d6:	f8c2 c000 	str.w	ip, [r2]
 80123da:	f44f 72b8 	mov.w	r2, #368	@ 0x170
 80123de:	51c1      	str	r1, [r0, r7]
 80123e0:	68e1      	ldr	r1, [r4, #12]
 80123e2:	4403      	add	r3, r0
 80123e4:	6019      	str	r1, [r3, #0]
 80123e6:	5182      	str	r2, [r0, r6]
 80123e8:	6923      	ldr	r3, [r4, #16]
 80123ea:	4428      	add	r0, r5
 80123ec:	6003      	str	r3, [r0, #0]
 80123ee:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80123f2:	ed90 6a07 	vldr	s12, [r0, #28]
 80123f6:	eeb4 6ac7 	vcmpe.f32	s12, s14
 80123fa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80123fe:	d5b0      	bpl.n	8012362 <nema_set_matrix+0x26>
 8012400:	eeb4 6ae6 	vcmpe.f32	s12, s13
 8012404:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8012408:	ddab      	ble.n	8012362 <nema_set_matrix+0x26>
 801240a:	eeb7 6a00 	vmov.f32	s12, #112	@ 0x3f800000  1.0
 801240e:	ee77 7ac6 	vsub.f32	s15, s15, s12
 8012412:	eef4 7ac7 	vcmpe.f32	s15, s14
 8012416:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801241a:	d43f      	bmi.n	801249c <nema_set_matrix+0x160>
 801241c:	edd4 7a08 	vldr	s15, [r4, #32]
 8012420:	ed94 5a00 	vldr	s10, [r4]
 8012424:	edd4 5a01 	vldr	s11, [r4, #4]
 8012428:	ed94 6a02 	vldr	s12, [r4, #8]
 801242c:	edd4 6a03 	vldr	s13, [r4, #12]
 8012430:	ed94 7a04 	vldr	s14, [r4, #16]
 8012434:	ed94 4a05 	vldr	s8, [r4, #20]
 8012438:	eec5 4a27 	vdiv.f32	s9, s10, s15
 801243c:	ee85 5aa7 	vdiv.f32	s10, s11, s15
 8012440:	eec6 5a27 	vdiv.f32	s11, s12, s15
 8012444:	ee86 6aa7 	vdiv.f32	s12, s13, s15
 8012448:	eec7 6a27 	vdiv.f32	s13, s14, s15
 801244c:	ee84 7a27 	vdiv.f32	s14, s8, s15
 8012450:	edc4 4a00 	vstr	s9, [r4]
 8012454:	ed84 5a01 	vstr	s10, [r4, #4]
 8012458:	edc4 5a02 	vstr	s11, [r4, #8]
 801245c:	ed84 6a03 	vstr	s12, [r4, #12]
 8012460:	edc4 6a04 	vstr	s13, [r4, #16]
 8012464:	ed84 7a05 	vstr	s14, [r4, #20]
 8012468:	2006      	movs	r0, #6
 801246a:	f00b fd9b 	bl	801dfa4 <nema_cl_get_space>
 801246e:	2800      	cmp	r0, #0
 8012470:	d0bd      	beq.n	80123ee <nema_set_matrix+0xb2>
 8012472:	f44f 73ba 	mov.w	r3, #372	@ 0x174
 8012476:	6003      	str	r3, [r0, #0]
 8012478:	f44f 73b4 	mov.w	r3, #360	@ 0x168
 801247c:	6962      	ldr	r2, [r4, #20]
 801247e:	6083      	str	r3, [r0, #8]
 8012480:	6042      	str	r2, [r0, #4]
 8012482:	68a3      	ldr	r3, [r4, #8]
 8012484:	252c      	movs	r5, #44	@ 0x2c
 8012486:	60c3      	str	r3, [r0, #12]
 8012488:	2628      	movs	r6, #40	@ 0x28
 801248a:	2324      	movs	r3, #36	@ 0x24
 801248c:	2720      	movs	r7, #32
 801248e:	221c      	movs	r2, #28
 8012490:	f04f 0c18 	mov.w	ip, #24
 8012494:	2114      	movs	r1, #20
 8012496:	f04f 0e10 	mov.w	lr, #16
 801249a:	e78a      	b.n	80123b2 <nema_set_matrix+0x76>
 801249c:	eef4 7ae6 	vcmpe.f32	s15, s13
 80124a0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80124a4:	dce0      	bgt.n	8012468 <nema_set_matrix+0x12c>
 80124a6:	e7b9      	b.n	801241c <nema_set_matrix+0xe0>
 80124a8:	33d6bf95 	.word	0x33d6bf95
 80124ac:	b3d6bf95 	.word	0xb3d6bf95

080124b0 <nema_set_matrix_translate>:
 80124b0:	b508      	push	{r3, lr}
 80124b2:	2002      	movs	r0, #2
 80124b4:	ed2d 8b02 	vpush	{d8}
 80124b8:	eeb0 8a40 	vmov.f32	s16, s0
 80124bc:	eef0 8a60 	vmov.f32	s17, s1
 80124c0:	f00b fd70 	bl	801dfa4 <nema_cl_get_space>
 80124c4:	b1c8      	cbz	r0, 80124fa <nema_set_matrix_translate+0x4a>
 80124c6:	eddf 7a13 	vldr	s15, [pc, #76]	@ 8012514 <nema_set_matrix_translate+0x64>
 80124ca:	eeb4 8ae7 	vcmpe.f32	s16, s15
 80124ce:	f44f 72ba 	mov.w	r2, #372	@ 0x174
 80124d2:	eef1 6a68 	vneg.f32	s13, s17
 80124d6:	f44f 73b4 	mov.w	r3, #360	@ 0x168
 80124da:	eeb1 7a48 	vneg.f32	s14, s16
 80124de:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80124e2:	6002      	str	r2, [r0, #0]
 80124e4:	edc0 6a01 	vstr	s13, [r0, #4]
 80124e8:	6083      	str	r3, [r0, #8]
 80124ea:	ed80 7a03 	vstr	s14, [r0, #12]
 80124ee:	dc07      	bgt.n	8012500 <nema_set_matrix_translate+0x50>
 80124f0:	eef4 8ae7 	vcmpe.f32	s17, s15
 80124f4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80124f8:	dc02      	bgt.n	8012500 <nema_set_matrix_translate+0x50>
 80124fa:	ecbd 8b02 	vpop	{d8}
 80124fe:	bd08      	pop	{r3, pc}
 8012500:	ecbd 8b02 	vpop	{d8}
 8012504:	f04f 4100 	mov.w	r1, #2147483648	@ 0x80000000
 8012508:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 801250c:	f44f 708c 	mov.w	r0, #280	@ 0x118
 8012510:	f00b bda4 	b.w	801e05c <nema_cl_add_cmd>
 8012514:	45000000 	.word	0x45000000

08012518 <nema_load_frag_shader>:
 8012518:	b570      	push	{r4, r5, r6, lr}
 801251a:	460e      	mov	r6, r1
 801251c:	4604      	mov	r4, r0
 801251e:	4611      	mov	r1, r2
 8012520:	20c4      	movs	r0, #196	@ 0xc4
 8012522:	f00b fd9b 	bl	801e05c <nema_cl_add_cmd>
 8012526:	b186      	cbz	r6, 801254a <nema_load_frag_shader+0x32>
 8012528:	2500      	movs	r5, #0
 801252a:	3408      	adds	r4, #8
 801252c:	f854 1c08 	ldr.w	r1, [r4, #-8]
 8012530:	20c8      	movs	r0, #200	@ 0xc8
 8012532:	f00b fd93 	bl	801e05c <nema_cl_add_cmd>
 8012536:	3501      	adds	r5, #1
 8012538:	f854 1c04 	ldr.w	r1, [r4, #-4]
 801253c:	20cc      	movs	r0, #204	@ 0xcc
 801253e:	f00b fd8d 	bl	801e05c <nema_cl_add_cmd>
 8012542:	42ae      	cmp	r6, r5
 8012544:	f104 0408 	add.w	r4, r4, #8
 8012548:	d1f0      	bne.n	801252c <nema_load_frag_shader+0x14>
 801254a:	bd70      	pop	{r4, r5, r6, pc}

0801254c <nema_set_frag_ptr>:
 801254c:	4601      	mov	r1, r0
 801254e:	f44f 708e 	mov.w	r0, #284	@ 0x11c
 8012552:	f00b bd83 	b.w	801e05c <nema_cl_add_cmd>
 8012556:	bf00      	nop

08012558 <nema_set_rop_blend_mode>:
 8012558:	4601      	mov	r1, r0
 801255a:	f44f 70e8 	mov.w	r0, #464	@ 0x1d0
 801255e:	f00b bd7d 	b.w	801e05c <nema_cl_add_cmd>
 8012562:	bf00      	nop

08012564 <nema_set_rop_const_color>:
 8012564:	4601      	mov	r1, r0
 8012566:	f44f 70ec 	mov.w	r0, #472	@ 0x1d8
 801256a:	f00b bd77 	b.w	801e05c <nema_cl_add_cmd>
 801256e:	bf00      	nop

08012570 <nema_set_depth_ctrl>:
 8012570:	4601      	mov	r1, r0
 8012572:	f44f 70f0 	mov.w	r0, #480	@ 0x1e0
 8012576:	f00b bd71 	b.w	801e05c <nema_cl_add_cmd>
 801257a:	bf00      	nop

0801257c <nema_set_gradient_fx>:
 801257c:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012580:	4607      	mov	r7, r0
 8012582:	200c      	movs	r0, #12
 8012584:	460e      	mov	r6, r1
 8012586:	4615      	mov	r5, r2
 8012588:	461c      	mov	r4, r3
 801258a:	f00b fd0b 	bl	801dfa4 <nema_cl_get_space>
 801258e:	2800      	cmp	r0, #0
 8012590:	d03d      	beq.n	801260e <nema_set_gradient_fx+0x92>
 8012592:	f44f 71d4 	mov.w	r1, #424	@ 0x1a8
 8012596:	6301      	str	r1, [r0, #48]	@ 0x30
 8012598:	f44f 71d6 	mov.w	r1, #428	@ 0x1ac
 801259c:	6381      	str	r1, [r0, #56]	@ 0x38
 801259e:	f44f 71d8 	mov.w	r1, #432	@ 0x1b0
 80125a2:	f44f 7be0 	mov.w	fp, #448	@ 0x1c0
 80125a6:	f44f 7ae2 	mov.w	sl, #452	@ 0x1c4
 80125aa:	f44f 79e4 	mov.w	r9, #456	@ 0x1c8
 80125ae:	f44f 78e6 	mov.w	r8, #460	@ 0x1cc
 80125b2:	f44f 7ed0 	mov.w	lr, #416	@ 0x1a0
 80125b6:	f44f 7cd2 	mov.w	ip, #420	@ 0x1a4
 80125ba:	f44f 72dc 	mov.w	r2, #440	@ 0x1b8
 80125be:	f44f 73de 	mov.w	r3, #444	@ 0x1bc
 80125c2:	6401      	str	r1, [r0, #64]	@ 0x40
 80125c4:	f44f 71da 	mov.w	r1, #436	@ 0x1b4
 80125c8:	61c4      	str	r4, [r0, #28]
 80125ca:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 80125cc:	6047      	str	r7, [r0, #4]
 80125ce:	6244      	str	r4, [r0, #36]	@ 0x24
 80125d0:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 80125d2:	60c6      	str	r6, [r0, #12]
 80125d4:	62c4      	str	r4, [r0, #44]	@ 0x2c
 80125d6:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 80125d8:	6145      	str	r5, [r0, #20]
 80125da:	6344      	str	r4, [r0, #52]	@ 0x34
 80125dc:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 80125de:	f8c0 b000 	str.w	fp, [r0]
 80125e2:	63c4      	str	r4, [r0, #60]	@ 0x3c
 80125e4:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 80125e6:	f8c0 a008 	str.w	sl, [r0, #8]
 80125ea:	6444      	str	r4, [r0, #68]	@ 0x44
 80125ec:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 80125ee:	f8c0 9010 	str.w	r9, [r0, #16]
 80125f2:	64c4      	str	r4, [r0, #76]	@ 0x4c
 80125f4:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 80125f6:	f8c0 8018 	str.w	r8, [r0, #24]
 80125fa:	6544      	str	r4, [r0, #84]	@ 0x54
 80125fc:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 80125fe:	f8c0 e020 	str.w	lr, [r0, #32]
 8012602:	65c4      	str	r4, [r0, #92]	@ 0x5c
 8012604:	f8c0 c028 	str.w	ip, [r0, #40]	@ 0x28
 8012608:	6481      	str	r1, [r0, #72]	@ 0x48
 801260a:	6502      	str	r2, [r0, #80]	@ 0x50
 801260c:	6583      	str	r3, [r0, #88]	@ 0x58
 801260e:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012612:	bf00      	nop

08012614 <nema_set_raster_color>:
 8012614:	4601      	mov	r1, r0
 8012616:	f44f 7096 	mov.w	r0, #300	@ 0x12c
 801261a:	f00b bd1f 	b.w	801e05c <nema_cl_add_cmd>
 801261e:	bf00      	nop

08012620 <nema_raster_triangle_fx>:
 8012620:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012624:	4607      	mov	r7, r0
 8012626:	2007      	movs	r0, #7
 8012628:	460e      	mov	r6, r1
 801262a:	4615      	mov	r5, r2
 801262c:	461c      	mov	r4, r3
 801262e:	f00b fcb9 	bl	801dfa4 <nema_cl_get_space>
 8012632:	b350      	cbz	r0, 801268a <nema_raster_triangle_fx+0x6a>
 8012634:	f44f 7398 	mov.w	r3, #304	@ 0x130
 8012638:	f44f 7292 	mov.w	r2, #292	@ 0x124
 801263c:	f44f 7890 	mov.w	r8, #288	@ 0x120
 8012640:	f44f 7e9a 	mov.w	lr, #308	@ 0x134
 8012644:	f44f 7ca0 	mov.w	ip, #320	@ 0x140
 8012648:	f44f 71a2 	mov.w	r1, #324	@ 0x144
 801264c:	6103      	str	r3, [r0, #16]
 801264e:	4b10      	ldr	r3, [pc, #64]	@ (8012690 <nema_raster_triangle_fx+0x70>)
 8012650:	6047      	str	r7, [r0, #4]
 8012652:	60c6      	str	r6, [r0, #12]
 8012654:	f8c0 8000 	str.w	r8, [r0]
 8012658:	6082      	str	r2, [r0, #8]
 801265a:	691a      	ldr	r2, [r3, #16]
 801265c:	4b0d      	ldr	r3, [pc, #52]	@ (8012694 <nema_raster_triangle_fx+0x74>)
 801265e:	61c4      	str	r4, [r0, #28]
 8012660:	9c06      	ldr	r4, [sp, #24]
 8012662:	6303      	str	r3, [r0, #48]	@ 0x30
 8012664:	01d3      	lsls	r3, r2, #7
 8012666:	6244      	str	r4, [r0, #36]	@ 0x24
 8012668:	bf48      	it	mi
 801266a:	f442 0200 	orrmi.w	r2, r2, #8388608	@ 0x800000
 801266e:	9c07      	ldr	r4, [sp, #28]
 8012670:	bf58      	it	pl
 8012672:	f422 0200 	bicpl.w	r2, r2, #8388608	@ 0x800000
 8012676:	f042 0204 	orr.w	r2, r2, #4
 801267a:	6145      	str	r5, [r0, #20]
 801267c:	62c4      	str	r4, [r0, #44]	@ 0x2c
 801267e:	f8c0 e018 	str.w	lr, [r0, #24]
 8012682:	f8c0 c020 	str.w	ip, [r0, #32]
 8012686:	6281      	str	r1, [r0, #40]	@ 0x28
 8012688:	6342      	str	r2, [r0, #52]	@ 0x34
 801268a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801268e:	bf00      	nop
 8012690:	20000064 	.word	0x20000064
 8012694:	ff000100 	.word	0xff000100

08012698 <nema_raster_rect>:
 8012698:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801269a:	1e17      	subs	r7, r2, #0
 801269c:	dd20      	ble.n	80126e0 <nema_raster_rect+0x48>
 801269e:	2b00      	cmp	r3, #0
 80126a0:	dd1e      	ble.n	80126e0 <nema_raster_rect+0x48>
 80126a2:	4604      	mov	r4, r0
 80126a4:	2003      	movs	r0, #3
 80126a6:	461d      	mov	r5, r3
 80126a8:	460e      	mov	r6, r1
 80126aa:	f00b fc7b 	bl	801dfa4 <nema_cl_get_space>
 80126ae:	b1b8      	cbz	r0, 80126e0 <nema_raster_rect+0x48>
 80126b0:	f44f 7c82 	mov.w	ip, #260	@ 0x104
 80126b4:	f44f 7184 	mov.w	r1, #264	@ 0x108
 80126b8:	193a      	adds	r2, r7, r4
 80126ba:	b292      	uxth	r2, r2
 80126bc:	19ab      	adds	r3, r5, r6
 80126be:	b2a4      	uxth	r4, r4
 80126c0:	4d08      	ldr	r5, [pc, #32]	@ (80126e4 <nema_raster_rect+0x4c>)
 80126c2:	ea42 4303 	orr.w	r3, r2, r3, lsl #16
 80126c6:	ea44 4406 	orr.w	r4, r4, r6, lsl #16
 80126ca:	4a07      	ldr	r2, [pc, #28]	@ (80126e8 <nema_raster_rect+0x50>)
 80126cc:	6044      	str	r4, [r0, #4]
 80126ce:	60c3      	str	r3, [r0, #12]
 80126d0:	f8c0 c000 	str.w	ip, [r0]
 80126d4:	6081      	str	r1, [r0, #8]
 80126d6:	6105      	str	r5, [r0, #16]
 80126d8:	6913      	ldr	r3, [r2, #16]
 80126da:	f043 0302 	orr.w	r3, r3, #2
 80126de:	6143      	str	r3, [r0, #20]
 80126e0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80126e2:	bf00      	nop
 80126e4:	ff000100 	.word	0xff000100
 80126e8:	20000064 	.word	0x20000064

080126ec <nema_raster_quad_fx>:
 80126ec:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80126f0:	4607      	mov	r7, r0
 80126f2:	2009      	movs	r0, #9
 80126f4:	460e      	mov	r6, r1
 80126f6:	4615      	mov	r5, r2
 80126f8:	461c      	mov	r4, r3
 80126fa:	f00b fc53 	bl	801dfa4 <nema_cl_get_space>
 80126fe:	2800      	cmp	r0, #0
 8012700:	d02f      	beq.n	8012762 <nema_raster_quad_fx+0x76>
 8012702:	f44f 7398 	mov.w	r3, #304	@ 0x130
 8012706:	f44f 7292 	mov.w	r2, #292	@ 0x124
 801270a:	f44f 7a90 	mov.w	sl, #288	@ 0x120
 801270e:	f44f 799a 	mov.w	r9, #308	@ 0x134
 8012712:	f44f 78a0 	mov.w	r8, #320	@ 0x140
 8012716:	f44f 7ea2 	mov.w	lr, #324	@ 0x144
 801271a:	f44f 7ca8 	mov.w	ip, #336	@ 0x150
 801271e:	f44f 71aa 	mov.w	r1, #340	@ 0x154
 8012722:	6103      	str	r3, [r0, #16]
 8012724:	4b10      	ldr	r3, [pc, #64]	@ (8012768 <nema_raster_quad_fx+0x7c>)
 8012726:	6047      	str	r7, [r0, #4]
 8012728:	60c6      	str	r6, [r0, #12]
 801272a:	f8c0 a000 	str.w	sl, [r0]
 801272e:	6082      	str	r2, [r0, #8]
 8012730:	691a      	ldr	r2, [r3, #16]
 8012732:	9b08      	ldr	r3, [sp, #32]
 8012734:	f042 0205 	orr.w	r2, r2, #5
 8012738:	6243      	str	r3, [r0, #36]	@ 0x24
 801273a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801273c:	6145      	str	r5, [r0, #20]
 801273e:	62c3      	str	r3, [r0, #44]	@ 0x2c
 8012740:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8012742:	61c4      	str	r4, [r0, #28]
 8012744:	6343      	str	r3, [r0, #52]	@ 0x34
 8012746:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8012748:	6442      	str	r2, [r0, #68]	@ 0x44
 801274a:	63c3      	str	r3, [r0, #60]	@ 0x3c
 801274c:	4b07      	ldr	r3, [pc, #28]	@ (801276c <nema_raster_quad_fx+0x80>)
 801274e:	f8c0 9018 	str.w	r9, [r0, #24]
 8012752:	f8c0 8020 	str.w	r8, [r0, #32]
 8012756:	f8c0 e028 	str.w	lr, [r0, #40]	@ 0x28
 801275a:	f8c0 c030 	str.w	ip, [r0, #48]	@ 0x30
 801275e:	6381      	str	r1, [r0, #56]	@ 0x38
 8012760:	6403      	str	r3, [r0, #64]	@ 0x40
 8012762:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8012766:	bf00      	nop
 8012768:	20000064 	.word	0x20000064
 801276c:	ff000100 	.word	0xff000100

08012770 <nema_set_interrupt_ctrl>:
 8012770:	4601      	mov	r1, r0
 8012772:	20f8      	movs	r0, #248	@ 0xf8
 8012774:	f00b bc72 	b.w	801e05c <nema_cl_add_cmd>

08012778 <flush_lines_>:
 8012778:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801277c:	ed2d 8b06 	vpush	{d8-d10}
 8012780:	4fbc      	ldr	r7, [pc, #752]	@ (8012a74 <flush_lines_+0x2fc>)
 8012782:	b083      	sub	sp, #12
 8012784:	683b      	ldr	r3, [r7, #0]
 8012786:	4680      	mov	r8, r0
 8012788:	7f5e      	ldrb	r6, [r3, #29]
 801278a:	9101      	str	r1, [sp, #4]
 801278c:	f016 0610 	ands.w	r6, r6, #16
 8012790:	f040 8167 	bne.w	8012a62 <flush_lines_+0x2ea>
 8012794:	4cb8      	ldr	r4, [pc, #736]	@ (8012a78 <flush_lines_+0x300>)
 8012796:	f1b8 0f01 	cmp.w	r8, #1
 801279a:	edd4 7a08 	vldr	s15, [r4, #32]
 801279e:	4db7      	ldr	r5, [pc, #732]	@ (8012a7c <flush_lines_+0x304>)
 80127a0:	f000 80f1 	beq.w	8012986 <flush_lines_+0x20e>
 80127a4:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80127a8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80127ac:	dd61      	ble.n	8012872 <flush_lines_+0xfa>
 80127ae:	683b      	ldr	r3, [r7, #0]
 80127b0:	7f5b      	ldrb	r3, [r3, #29]
 80127b2:	f013 0310 	ands.w	r3, r3, #16
 80127b6:	d109      	bne.n	80127cc <flush_lines_+0x54>
 80127b8:	f1b8 0f01 	cmp.w	r8, #1
 80127bc:	f000 81d1 	beq.w	8012b62 <flush_lines_+0x3ea>
 80127c0:	2201      	movs	r2, #1
 80127c2:	4611      	mov	r1, r2
 80127c4:	4610      	mov	r0, r2
 80127c6:	f7ff fd79 	bl	80122bc <nema_enable_aa>
 80127ca:	4606      	mov	r6, r0
 80127cc:	2009      	movs	r0, #9
 80127ce:	f8d4 b000 	ldr.w	fp, [r4]
 80127d2:	f8d4 a010 	ldr.w	sl, [r4, #16]
 80127d6:	ed94 aa01 	vldr	s20, [r4, #4]
 80127da:	edd4 9a05 	vldr	s19, [r4, #20]
 80127de:	ed94 9a02 	vldr	s18, [r4, #8]
 80127e2:	edd4 8a06 	vldr	s17, [r4, #24]
 80127e6:	ed94 8a03 	vldr	s16, [r4, #12]
 80127ea:	f8d4 901c 	ldr.w	r9, [r4, #28]
 80127ee:	f00b fbd9 	bl	801dfa4 <nema_cl_get_space>
 80127f2:	b3b8      	cbz	r0, 8012864 <flush_lines_+0xec>
 80127f4:	f44f 7348 	mov.w	r3, #800	@ 0x320
 80127f8:	f8c0 b004 	str.w	fp, [r0, #4]
 80127fc:	f8c0 a00c 	str.w	sl, [r0, #12]
 8012800:	f44f 7b49 	mov.w	fp, #804	@ 0x324
 8012804:	f44f 7a4c 	mov.w	sl, #816	@ 0x330
 8012808:	6003      	str	r3, [r0, #0]
 801280a:	f44f 7e4d 	mov.w	lr, #820	@ 0x334
 801280e:	f44f 7c50 	mov.w	ip, #832	@ 0x340
 8012812:	f44f 7151 	mov.w	r1, #836	@ 0x344
 8012816:	f44f 7254 	mov.w	r2, #848	@ 0x350
 801281a:	f44f 7355 	mov.w	r3, #852	@ 0x354
 801281e:	ed80 aa05 	vstr	s20, [r0, #20]
 8012822:	edc0 9a07 	vstr	s19, [r0, #28]
 8012826:	ed80 9a09 	vstr	s18, [r0, #36]	@ 0x24
 801282a:	edc0 8a0b 	vstr	s17, [r0, #44]	@ 0x2c
 801282e:	ed80 8a0d 	vstr	s16, [r0, #52]	@ 0x34
 8012832:	f8c0 903c 	str.w	r9, [r0, #60]	@ 0x3c
 8012836:	f8df 9248 	ldr.w	r9, [pc, #584]	@ 8012a80 <flush_lines_+0x308>
 801283a:	f8c0 a010 	str.w	sl, [r0, #16]
 801283e:	f8c0 b008 	str.w	fp, [r0, #8]
 8012842:	f8d9 9010 	ldr.w	r9, [r9, #16]
 8012846:	f8df a23c 	ldr.w	sl, [pc, #572]	@ 8012a84 <flush_lines_+0x30c>
 801284a:	f049 0905 	orr.w	r9, r9, #5
 801284e:	f8c0 9044 	str.w	r9, [r0, #68]	@ 0x44
 8012852:	f8c0 e018 	str.w	lr, [r0, #24]
 8012856:	f8c0 c020 	str.w	ip, [r0, #32]
 801285a:	6281      	str	r1, [r0, #40]	@ 0x28
 801285c:	6302      	str	r2, [r0, #48]	@ 0x30
 801285e:	6383      	str	r3, [r0, #56]	@ 0x38
 8012860:	f8c0 a040 	str.w	sl, [r0, #64]	@ 0x40
 8012864:	2200      	movs	r2, #0
 8012866:	683b      	ldr	r3, [r7, #0]
 8012868:	6222      	str	r2, [r4, #32]
 801286a:	7f5b      	ldrb	r3, [r3, #29]
 801286c:	06d8      	lsls	r0, r3, #27
 801286e:	f140 8086 	bpl.w	801297e <flush_lines_+0x206>
 8012872:	edd5 7a08 	vldr	s15, [r5, #32]
 8012876:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801287a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801287e:	dd1b      	ble.n	80128b8 <flush_lines_+0x140>
 8012880:	9b01      	ldr	r3, [sp, #4]
 8012882:	0619      	lsls	r1, r3, #24
 8012884:	d418      	bmi.n	80128b8 <flush_lines_+0x140>
 8012886:	683b      	ldr	r3, [r7, #0]
 8012888:	7f59      	ldrb	r1, [r3, #29]
 801288a:	f011 0110 	ands.w	r1, r1, #16
 801288e:	f040 8103 	bne.w	8012a98 <flush_lines_+0x320>
 8012892:	f1b8 0f01 	cmp.w	r8, #1
 8012896:	f000 80f9 	beq.w	8012a8c <flush_lines_+0x314>
 801289a:	f8df 81ec 	ldr.w	r8, [pc, #492]	@ 8012a88 <flush_lines_+0x310>
 801289e:	f8d8 3000 	ldr.w	r3, [r8]
 80128a2:	2b01      	cmp	r3, #1
 80128a4:	bf13      	iteet	ne
 80128a6:	2301      	movne	r3, #1
 80128a8:	461a      	moveq	r2, r3
 80128aa:	4619      	moveq	r1, r3
 80128ac:	461a      	movne	r2, r3
 80128ae:	4618      	mov	r0, r3
 80128b0:	f7ff fd04 	bl	80122bc <nema_enable_aa>
 80128b4:	4606      	mov	r6, r0
 80128b6:	e0f1      	b.n	8012a9c <flush_lines_+0x324>
 80128b8:	f8df 81cc 	ldr.w	r8, [pc, #460]	@ 8012a88 <flush_lines_+0x310>
 80128bc:	f8d8 3000 	ldr.w	r3, [r8]
 80128c0:	2b02      	cmp	r3, #2
 80128c2:	d00a      	beq.n	80128da <flush_lines_+0x162>
 80128c4:	4630      	mov	r0, r6
 80128c6:	f7ff fd1b 	bl	8012300 <nema_enable_aa_flags>
 80128ca:	2300      	movs	r3, #0
 80128cc:	f8c8 3000 	str.w	r3, [r8]
 80128d0:	b003      	add	sp, #12
 80128d2:	ecbd 8b06 	vpop	{d8-d10}
 80128d6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80128da:	683b      	ldr	r3, [r7, #0]
 80128dc:	7f5b      	ldrb	r3, [r3, #29]
 80128de:	f013 0310 	ands.w	r3, r3, #16
 80128e2:	f000 8133 	beq.w	8012b4c <flush_lines_+0x3d4>
 80128e6:	2009      	movs	r0, #9
 80128e8:	f8d5 a004 	ldr.w	sl, [r5, #4]
 80128ec:	edd5 9a05 	vldr	s19, [r5, #20]
 80128f0:	f8d4 9000 	ldr.w	r9, [r4]
 80128f4:	ed94 9a04 	vldr	s18, [r4, #16]
 80128f8:	edd5 8a02 	vldr	s17, [r5, #8]
 80128fc:	ed95 8a06 	vldr	s16, [r5, #24]
 8012900:	68e5      	ldr	r5, [r4, #12]
 8012902:	69e4      	ldr	r4, [r4, #28]
 8012904:	f00b fb4e 	bl	801dfa4 <nema_cl_get_space>
 8012908:	b388      	cbz	r0, 801296e <flush_lines_+0x1f6>
 801290a:	f8c0 a004 	str.w	sl, [r0, #4]
 801290e:	f44f 734c 	mov.w	r3, #816	@ 0x330
 8012912:	f44f 7b48 	mov.w	fp, #800	@ 0x320
 8012916:	f44f 7a49 	mov.w	sl, #804	@ 0x324
 801291a:	edc0 9a03 	vstr	s19, [r0, #12]
 801291e:	f8c0 9014 	str.w	r9, [r0, #20]
 8012922:	f44f 7e50 	mov.w	lr, #832	@ 0x340
 8012926:	f44f 794d 	mov.w	r9, #820	@ 0x334
 801292a:	f44f 7c51 	mov.w	ip, #836	@ 0x344
 801292e:	f44f 7154 	mov.w	r1, #848	@ 0x350
 8012932:	f44f 7255 	mov.w	r2, #852	@ 0x354
 8012936:	ed80 9a07 	vstr	s18, [r0, #28]
 801293a:	edc0 8a09 	vstr	s17, [r0, #36]	@ 0x24
 801293e:	ed80 8a0b 	vstr	s16, [r0, #44]	@ 0x2c
 8012942:	63c4      	str	r4, [r0, #60]	@ 0x3c
 8012944:	4c4e      	ldr	r4, [pc, #312]	@ (8012a80 <flush_lines_+0x308>)
 8012946:	f8c0 b000 	str.w	fp, [r0]
 801294a:	f8c0 a008 	str.w	sl, [r0, #8]
 801294e:	6103      	str	r3, [r0, #16]
 8012950:	6923      	ldr	r3, [r4, #16]
 8012952:	4c4c      	ldr	r4, [pc, #304]	@ (8012a84 <flush_lines_+0x30c>)
 8012954:	f043 0305 	orr.w	r3, r3, #5
 8012958:	6345      	str	r5, [r0, #52]	@ 0x34
 801295a:	6443      	str	r3, [r0, #68]	@ 0x44
 801295c:	f8c0 9018 	str.w	r9, [r0, #24]
 8012960:	f8c0 e020 	str.w	lr, [r0, #32]
 8012964:	f8c0 c028 	str.w	ip, [r0, #40]	@ 0x28
 8012968:	6301      	str	r1, [r0, #48]	@ 0x30
 801296a:	6382      	str	r2, [r0, #56]	@ 0x38
 801296c:	6404      	str	r4, [r0, #64]	@ 0x40
 801296e:	683b      	ldr	r3, [r7, #0]
 8012970:	7f5b      	ldrb	r3, [r3, #29]
 8012972:	06db      	lsls	r3, r3, #27
 8012974:	d4a6      	bmi.n	80128c4 <flush_lines_+0x14c>
 8012976:	4630      	mov	r0, r6
 8012978:	f7ff fcc2 	bl	8012300 <nema_enable_aa_flags>
 801297c:	e7a2      	b.n	80128c4 <flush_lines_+0x14c>
 801297e:	4630      	mov	r0, r6
 8012980:	f7ff fcbe 	bl	8012300 <nema_enable_aa_flags>
 8012984:	e775      	b.n	8012872 <flush_lines_+0xfa>
 8012986:	ed95 7a08 	vldr	s14, [r5, #32]
 801298a:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 801298e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8012992:	f77f af07 	ble.w	80127a4 <flush_lines_+0x2c>
 8012996:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801299a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801299e:	f77f af6f 	ble.w	8012880 <flush_lines_+0x108>
 80129a2:	683b      	ldr	r3, [r7, #0]
 80129a4:	7f5b      	ldrb	r3, [r3, #29]
 80129a6:	f013 0310 	ands.w	r3, r3, #16
 80129aa:	f000 80e7 	beq.w	8012b7c <flush_lines_+0x404>
 80129ae:	2009      	movs	r0, #9
 80129b0:	f8d4 b004 	ldr.w	fp, [r4, #4]
 80129b4:	f8d4 a014 	ldr.w	sl, [r4, #20]
 80129b8:	ed95 aa00 	vldr	s20, [r5]
 80129bc:	edd5 9a04 	vldr	s19, [r5, #16]
 80129c0:	ed94 9a02 	vldr	s18, [r4, #8]
 80129c4:	edd4 8a06 	vldr	s17, [r4, #24]
 80129c8:	ed95 8a03 	vldr	s16, [r5, #12]
 80129cc:	f8d5 901c 	ldr.w	r9, [r5, #28]
 80129d0:	f00b fae8 	bl	801dfa4 <nema_cl_get_space>
 80129d4:	b3b8      	cbz	r0, 8012a46 <flush_lines_+0x2ce>
 80129d6:	f44f 7348 	mov.w	r3, #800	@ 0x320
 80129da:	f8c0 b004 	str.w	fp, [r0, #4]
 80129de:	f8c0 a00c 	str.w	sl, [r0, #12]
 80129e2:	f44f 7b49 	mov.w	fp, #804	@ 0x324
 80129e6:	f44f 7a4c 	mov.w	sl, #816	@ 0x330
 80129ea:	6003      	str	r3, [r0, #0]
 80129ec:	f44f 7e4d 	mov.w	lr, #820	@ 0x334
 80129f0:	f44f 7c50 	mov.w	ip, #832	@ 0x340
 80129f4:	f44f 7151 	mov.w	r1, #836	@ 0x344
 80129f8:	f44f 7254 	mov.w	r2, #848	@ 0x350
 80129fc:	f44f 7355 	mov.w	r3, #852	@ 0x354
 8012a00:	ed80 aa05 	vstr	s20, [r0, #20]
 8012a04:	edc0 9a07 	vstr	s19, [r0, #28]
 8012a08:	ed80 9a09 	vstr	s18, [r0, #36]	@ 0x24
 8012a0c:	edc0 8a0b 	vstr	s17, [r0, #44]	@ 0x2c
 8012a10:	ed80 8a0d 	vstr	s16, [r0, #52]	@ 0x34
 8012a14:	f8c0 903c 	str.w	r9, [r0, #60]	@ 0x3c
 8012a18:	f8df 9064 	ldr.w	r9, [pc, #100]	@ 8012a80 <flush_lines_+0x308>
 8012a1c:	f8c0 a010 	str.w	sl, [r0, #16]
 8012a20:	f8c0 b008 	str.w	fp, [r0, #8]
 8012a24:	f8d9 9010 	ldr.w	r9, [r9, #16]
 8012a28:	f8df a058 	ldr.w	sl, [pc, #88]	@ 8012a84 <flush_lines_+0x30c>
 8012a2c:	f049 0905 	orr.w	r9, r9, #5
 8012a30:	f8c0 9044 	str.w	r9, [r0, #68]	@ 0x44
 8012a34:	f8c0 e018 	str.w	lr, [r0, #24]
 8012a38:	f8c0 c020 	str.w	ip, [r0, #32]
 8012a3c:	6281      	str	r1, [r0, #40]	@ 0x28
 8012a3e:	6302      	str	r2, [r0, #48]	@ 0x30
 8012a40:	6383      	str	r3, [r0, #56]	@ 0x38
 8012a42:	f8c0 a040 	str.w	sl, [r0, #64]	@ 0x40
 8012a46:	683b      	ldr	r3, [r7, #0]
 8012a48:	7f5b      	ldrb	r3, [r3, #29]
 8012a4a:	06db      	lsls	r3, r3, #27
 8012a4c:	f140 8090 	bpl.w	8012b70 <flush_lines_+0x3f8>
 8012a50:	edd4 7a08 	vldr	s15, [r4, #32]
 8012a54:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8012a58:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8012a5c:	f73f aeb6 	bgt.w	80127cc <flush_lines_+0x54>
 8012a60:	e707      	b.n	8012872 <flush_lines_+0xfa>
 8012a62:	2300      	movs	r3, #0
 8012a64:	461a      	mov	r2, r3
 8012a66:	4619      	mov	r1, r3
 8012a68:	4618      	mov	r0, r3
 8012a6a:	f7ff fc27 	bl	80122bc <nema_enable_aa>
 8012a6e:	4606      	mov	r6, r0
 8012a70:	e690      	b.n	8012794 <flush_lines_+0x1c>
 8012a72:	bf00      	nop
 8012a74:	20083148 	.word	0x20083148
 8012a78:	20083198 	.word	0x20083198
 8012a7c:	20083160 	.word	0x20083160
 8012a80:	20000064 	.word	0x20000064
 8012a84:	ff000100 	.word	0xff000100
 8012a88:	200831c4 	.word	0x200831c4
 8012a8c:	460b      	mov	r3, r1
 8012a8e:	4642      	mov	r2, r8
 8012a90:	4640      	mov	r0, r8
 8012a92:	f7ff fc13 	bl	80122bc <nema_enable_aa>
 8012a96:	4606      	mov	r6, r0
 8012a98:	f8df 80f0 	ldr.w	r8, [pc, #240]	@ 8012b8c <flush_lines_+0x414>
 8012a9c:	2009      	movs	r0, #9
 8012a9e:	f8d5 b000 	ldr.w	fp, [r5]
 8012aa2:	f8d5 a010 	ldr.w	sl, [r5, #16]
 8012aa6:	ed95 aa01 	vldr	s20, [r5, #4]
 8012aaa:	edd5 9a05 	vldr	s19, [r5, #20]
 8012aae:	ed95 9a02 	vldr	s18, [r5, #8]
 8012ab2:	edd5 8a06 	vldr	s17, [r5, #24]
 8012ab6:	ed95 8a03 	vldr	s16, [r5, #12]
 8012aba:	f8d5 901c 	ldr.w	r9, [r5, #28]
 8012abe:	f00b fa71 	bl	801dfa4 <nema_cl_get_space>
 8012ac2:	b3b8      	cbz	r0, 8012b34 <flush_lines_+0x3bc>
 8012ac4:	f44f 7348 	mov.w	r3, #800	@ 0x320
 8012ac8:	f8c0 b004 	str.w	fp, [r0, #4]
 8012acc:	f8c0 a00c 	str.w	sl, [r0, #12]
 8012ad0:	f44f 7b49 	mov.w	fp, #804	@ 0x324
 8012ad4:	f44f 7a4c 	mov.w	sl, #816	@ 0x330
 8012ad8:	6003      	str	r3, [r0, #0]
 8012ada:	f44f 7e4d 	mov.w	lr, #820	@ 0x334
 8012ade:	f44f 7c50 	mov.w	ip, #832	@ 0x340
 8012ae2:	f44f 7151 	mov.w	r1, #836	@ 0x344
 8012ae6:	f44f 7254 	mov.w	r2, #848	@ 0x350
 8012aea:	f44f 7355 	mov.w	r3, #852	@ 0x354
 8012aee:	ed80 aa05 	vstr	s20, [r0, #20]
 8012af2:	edc0 9a07 	vstr	s19, [r0, #28]
 8012af6:	ed80 9a09 	vstr	s18, [r0, #36]	@ 0x24
 8012afa:	edc0 8a0b 	vstr	s17, [r0, #44]	@ 0x2c
 8012afe:	ed80 8a0d 	vstr	s16, [r0, #52]	@ 0x34
 8012b02:	f8c0 903c 	str.w	r9, [r0, #60]	@ 0x3c
 8012b06:	f8df 9088 	ldr.w	r9, [pc, #136]	@ 8012b90 <flush_lines_+0x418>
 8012b0a:	f8c0 a010 	str.w	sl, [r0, #16]
 8012b0e:	f8c0 b008 	str.w	fp, [r0, #8]
 8012b12:	f8d9 9010 	ldr.w	r9, [r9, #16]
 8012b16:	f8df a07c 	ldr.w	sl, [pc, #124]	@ 8012b94 <flush_lines_+0x41c>
 8012b1a:	f049 0905 	orr.w	r9, r9, #5
 8012b1e:	f8c0 9044 	str.w	r9, [r0, #68]	@ 0x44
 8012b22:	f8c0 e018 	str.w	lr, [r0, #24]
 8012b26:	f8c0 c020 	str.w	ip, [r0, #32]
 8012b2a:	6281      	str	r1, [r0, #40]	@ 0x28
 8012b2c:	6302      	str	r2, [r0, #48]	@ 0x30
 8012b2e:	6383      	str	r3, [r0, #56]	@ 0x38
 8012b30:	f8c0 a040 	str.w	sl, [r0, #64]	@ 0x40
 8012b34:	2200      	movs	r2, #0
 8012b36:	683b      	ldr	r3, [r7, #0]
 8012b38:	622a      	str	r2, [r5, #32]
 8012b3a:	7f5b      	ldrb	r3, [r3, #29]
 8012b3c:	06da      	lsls	r2, r3, #27
 8012b3e:	d50c      	bpl.n	8012b5a <flush_lines_+0x3e2>
 8012b40:	f8d8 3000 	ldr.w	r3, [r8]
 8012b44:	2b02      	cmp	r3, #2
 8012b46:	f47f aebd 	bne.w	80128c4 <flush_lines_+0x14c>
 8012b4a:	e6cc      	b.n	80128e6 <flush_lines_+0x16e>
 8012b4c:	2201      	movs	r2, #1
 8012b4e:	4619      	mov	r1, r3
 8012b50:	4610      	mov	r0, r2
 8012b52:	f7ff fbb3 	bl	80122bc <nema_enable_aa>
 8012b56:	4606      	mov	r6, r0
 8012b58:	e6c5      	b.n	80128e6 <flush_lines_+0x16e>
 8012b5a:	4630      	mov	r0, r6
 8012b5c:	f7ff fbd0 	bl	8012300 <nema_enable_aa_flags>
 8012b60:	e6ac      	b.n	80128bc <flush_lines_+0x144>
 8012b62:	4619      	mov	r1, r3
 8012b64:	4642      	mov	r2, r8
 8012b66:	4640      	mov	r0, r8
 8012b68:	f7ff fba8 	bl	80122bc <nema_enable_aa>
 8012b6c:	4606      	mov	r6, r0
 8012b6e:	e62d      	b.n	80127cc <flush_lines_+0x54>
 8012b70:	4630      	mov	r0, r6
 8012b72:	f7ff fbc5 	bl	8012300 <nema_enable_aa_flags>
 8012b76:	edd4 7a08 	vldr	s15, [r4, #32]
 8012b7a:	e613      	b.n	80127a4 <flush_lines_+0x2c>
 8012b7c:	4619      	mov	r1, r3
 8012b7e:	4642      	mov	r2, r8
 8012b80:	4640      	mov	r0, r8
 8012b82:	f7ff fb9b 	bl	80122bc <nema_enable_aa>
 8012b86:	4606      	mov	r6, r0
 8012b88:	e711      	b.n	80129ae <flush_lines_+0x236>
 8012b8a:	bf00      	nop
 8012b8c:	200831c4 	.word	0x200831c4
 8012b90:	20000064 	.word	0x20000064
 8012b94:	ff000100 	.word	0xff000100

08012b98 <raster_stroked_line_>:
 8012b98:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012b9c:	ed2d 8b10 	vpush	{d8-d15}
 8012ba0:	ee31 9a40 	vsub.f32	s18, s2, s0
 8012ba4:	ee71 8ae0 	vsub.f32	s17, s3, s1
 8012ba8:	ee69 7a09 	vmul.f32	s15, s18, s18
 8012bac:	ee68 6aa8 	vmul.f32	s13, s17, s17
 8012bb0:	ed9f 7ac0 	vldr	s14, [pc, #768]	@ 8012eb4 <raster_stroked_line_+0x31c>
 8012bb4:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8012bb8:	eef4 7ac7 	vcmpe.f32	s15, s14
 8012bbc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8012bc0:	b085      	sub	sp, #20
 8012bc2:	d804      	bhi.n	8012bce <raster_stroked_line_+0x36>
 8012bc4:	b005      	add	sp, #20
 8012bc6:	ecbd 8b10 	vpop	{d8-d15}
 8012bca:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012bce:	eef5 7a40 	vcmp.f32	s15, #0.0
 8012bd2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8012bd6:	eeb0 8a40 	vmov.f32	s16, s0
 8012bda:	eeb1 bae7 	vsqrt.f32	s22, s15
 8012bde:	f100 8206 	bmi.w	8012fee <raster_stroked_line_+0x456>
 8012be2:	eef7 7a00 	vmov.f32	s15, #112	@ 0x3f800000  1.0
 8012be6:	4ab4      	ldr	r2, [pc, #720]	@ (8012eb8 <raster_stroked_line_+0x320>)
 8012be8:	4bb4      	ldr	r3, [pc, #720]	@ (8012ebc <raster_stroked_line_+0x324>)
 8012bea:	eec7 6a8b 	vdiv.f32	s13, s15, s22
 8012bee:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 8012bf2:	edd2 7a00 	vldr	s15, [r2]
 8012bf6:	ed93 aa00 	vldr	s20, [r3]
 8012bfa:	ee29 9a26 	vmul.f32	s18, s18, s13
 8012bfe:	ee68 8aa6 	vmul.f32	s17, s17, s13
 8012c02:	ee67 7a87 	vmul.f32	s15, s15, s14
 8012c06:	ee2a aa07 	vmul.f32	s20, s20, s14
 8012c0a:	ee67 7aa8 	vmul.f32	s15, s15, s17
 8012c0e:	ee2a aa09 	vmul.f32	s20, s20, s18
 8012c12:	4aab      	ldr	r2, [pc, #684]	@ (8012ec0 <raster_stroked_line_+0x328>)
 8012c14:	4bab      	ldr	r3, [pc, #684]	@ (8012ec4 <raster_stroked_line_+0x32c>)
 8012c16:	6812      	ldr	r2, [r2, #0]
 8012c18:	ee78 ba67 	vsub.f32	s23, s16, s15
 8012c1c:	ee3a ca20 	vadd.f32	s24, s20, s1
 8012c20:	ee70 9aca 	vsub.f32	s19, s1, s20
 8012c24:	ee3a da21 	vadd.f32	s26, s20, s3
 8012c28:	ee37 8a88 	vadd.f32	s16, s15, s16
 8012c2c:	ee71 ca67 	vsub.f32	s25, s2, s15
 8012c30:	ee77 aa81 	vadd.f32	s21, s15, s2
 8012c34:	ee31 aaca 	vsub.f32	s20, s3, s20
 8012c38:	681b      	ldr	r3, [r3, #0]
 8012c3a:	2a00      	cmp	r2, #0
 8012c3c:	f000 8150 	beq.w	8012ee0 <raster_stroked_line_+0x348>
 8012c40:	7f5b      	ldrb	r3, [r3, #29]
 8012c42:	f013 0310 	ands.w	r3, r3, #16
 8012c46:	d13b      	bne.n	8012cc0 <raster_stroked_line_+0x128>
 8012c48:	2201      	movs	r2, #1
 8012c4a:	4619      	mov	r1, r3
 8012c4c:	4610      	mov	r0, r2
 8012c4e:	f7ff fb35 	bl	80122bc <nema_enable_aa>
 8012c52:	4607      	mov	r7, r0
 8012c54:	4c9c      	ldr	r4, [pc, #624]	@ (8012ec8 <raster_stroked_line_+0x330>)
 8012c56:	edd4 7a08 	vldr	s15, [r4, #32]
 8012c5a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8012c5e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8012c62:	dc35      	bgt.n	8012cd0 <raster_stroked_line_+0x138>
 8012c64:	4d99      	ldr	r5, [pc, #612]	@ (8012ecc <raster_stroked_line_+0x334>)
 8012c66:	4e9a      	ldr	r6, [pc, #616]	@ (8012ed0 <raster_stroked_line_+0x338>)
 8012c68:	edd5 7a08 	vldr	s15, [r5, #32]
 8012c6c:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8012c70:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8012c74:	6833      	ldr	r3, [r6, #0]
 8012c76:	f340 80f6 	ble.w	8012e66 <raster_stroked_line_+0x2ce>
 8012c7a:	2b01      	cmp	r3, #1
 8012c7c:	f000 8095 	beq.w	8012daa <raster_stroked_line_+0x212>
 8012c80:	3301      	adds	r3, #1
 8012c82:	6033      	str	r3, [r6, #0]
 8012c84:	4638      	mov	r0, r7
 8012c86:	edc4 ba00 	vstr	s23, [r4]
 8012c8a:	ed84 ca04 	vstr	s24, [r4, #16]
 8012c8e:	edc4 ca01 	vstr	s25, [r4, #4]
 8012c92:	ed84 da05 	vstr	s26, [r4, #20]
 8012c96:	edc4 aa02 	vstr	s21, [r4, #8]
 8012c9a:	ed84 aa06 	vstr	s20, [r4, #24]
 8012c9e:	ed84 8a03 	vstr	s16, [r4, #12]
 8012ca2:	edc4 9a07 	vstr	s19, [r4, #28]
 8012ca6:	ed84 ba08 	vstr	s22, [r4, #32]
 8012caa:	ed84 9a09 	vstr	s18, [r4, #36]	@ 0x24
 8012cae:	edc4 8a0a 	vstr	s17, [r4, #40]	@ 0x28
 8012cb2:	b005      	add	sp, #20
 8012cb4:	ecbd 8b10 	vpop	{d8-d15}
 8012cb8:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012cbc:	f7ff bb20 	b.w	8012300 <nema_enable_aa_flags>
 8012cc0:	2300      	movs	r3, #0
 8012cc2:	461a      	mov	r2, r3
 8012cc4:	4619      	mov	r1, r3
 8012cc6:	4618      	mov	r0, r3
 8012cc8:	f7ff faf8 	bl	80122bc <nema_enable_aa>
 8012ccc:	4607      	mov	r7, r0
 8012cce:	e7c1      	b.n	8012c54 <raster_stroked_line_+0xbc>
 8012cd0:	2009      	movs	r0, #9
 8012cd2:	ed94 ea00 	vldr	s28, [r4]
 8012cd6:	edd4 da04 	vldr	s27, [r4, #16]
 8012cda:	f8d4 b004 	ldr.w	fp, [r4, #4]
 8012cde:	f8d4 a014 	ldr.w	sl, [r4, #20]
 8012ce2:	f8d4 9008 	ldr.w	r9, [r4, #8]
 8012ce6:	f8d4 8018 	ldr.w	r8, [r4, #24]
 8012cea:	68e6      	ldr	r6, [r4, #12]
 8012cec:	69e5      	ldr	r5, [r4, #28]
 8012cee:	f00b f959 	bl	801dfa4 <nema_cl_get_space>
 8012cf2:	b380      	cbz	r0, 8012d56 <raster_stroked_line_+0x1be>
 8012cf4:	f44f 7348 	mov.w	r3, #800	@ 0x320
 8012cf8:	f44f 7c49 	mov.w	ip, #804	@ 0x324
 8012cfc:	f44f 7e4c 	mov.w	lr, #816	@ 0x330
 8012d00:	ed80 ea01 	vstr	s28, [r0, #4]
 8012d04:	edc0 da03 	vstr	s27, [r0, #12]
 8012d08:	f44f 714d 	mov.w	r1, #820	@ 0x334
 8012d0c:	f44f 7250 	mov.w	r2, #832	@ 0x340
 8012d10:	f8c0 9024 	str.w	r9, [r0, #36]	@ 0x24
 8012d14:	f8c0 802c 	str.w	r8, [r0, #44]	@ 0x2c
 8012d18:	f44f 7951 	mov.w	r9, #836	@ 0x344
 8012d1c:	f44f 7854 	mov.w	r8, #848	@ 0x350
 8012d20:	6346      	str	r6, [r0, #52]	@ 0x34
 8012d22:	f44f 7655 	mov.w	r6, #852	@ 0x354
 8012d26:	63c5      	str	r5, [r0, #60]	@ 0x3c
 8012d28:	4d6a      	ldr	r5, [pc, #424]	@ (8012ed4 <raster_stroked_line_+0x33c>)
 8012d2a:	6003      	str	r3, [r0, #0]
 8012d2c:	f8c0 c008 	str.w	ip, [r0, #8]
 8012d30:	f8c0 e010 	str.w	lr, [r0, #16]
 8012d34:	692b      	ldr	r3, [r5, #16]
 8012d36:	4d68      	ldr	r5, [pc, #416]	@ (8012ed8 <raster_stroked_line_+0x340>)
 8012d38:	f043 0305 	orr.w	r3, r3, #5
 8012d3c:	f8c0 b014 	str.w	fp, [r0, #20]
 8012d40:	f8c0 a01c 	str.w	sl, [r0, #28]
 8012d44:	6443      	str	r3, [r0, #68]	@ 0x44
 8012d46:	6181      	str	r1, [r0, #24]
 8012d48:	6202      	str	r2, [r0, #32]
 8012d4a:	f8c0 9028 	str.w	r9, [r0, #40]	@ 0x28
 8012d4e:	f8c0 8030 	str.w	r8, [r0, #48]	@ 0x30
 8012d52:	6386      	str	r6, [r0, #56]	@ 0x38
 8012d54:	6405      	str	r5, [r0, #64]	@ 0x40
 8012d56:	edd4 7a09 	vldr	s15, [r4, #36]	@ 0x24
 8012d5a:	ed94 7a0a 	vldr	s14, [r4, #40]	@ 0x28
 8012d5e:	ee68 7aa7 	vmul.f32	s15, s17, s15
 8012d62:	ee29 7a07 	vmul.f32	s14, s18, s14
 8012d66:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8012d6a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8012d6e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8012d72:	ed9f 7a5a 	vldr	s14, [pc, #360]	@ 8012edc <raster_stroked_line_+0x344>
 8012d76:	bf48      	it	mi
 8012d78:	eef1 7a67 	vnegmi.f32	s15, s15
 8012d7c:	eef4 7ac7 	vcmpe.f32	s15, s14
 8012d80:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8012d84:	edd4 da01 	vldr	s27, [r4, #4]
 8012d88:	edd4 ea05 	vldr	s29, [r4, #20]
 8012d8c:	ed94 ea02 	vldr	s28, [r4, #8]
 8012d90:	ed94 fa06 	vldr	s30, [r4, #24]
 8012d94:	f200 80ee 	bhi.w	8012f74 <raster_stroked_line_+0x3dc>
 8012d98:	eef0 9a4f 	vmov.f32	s19, s30
 8012d9c:	eeb0 ca6e 	vmov.f32	s24, s29
 8012da0:	eeb0 8a4e 	vmov.f32	s16, s28
 8012da4:	eef0 ba6d 	vmov.f32	s23, s27
 8012da8:	e75c      	b.n	8012c64 <raster_stroked_line_+0xcc>
 8012daa:	edd5 7a09 	vldr	s15, [r5, #36]	@ 0x24
 8012dae:	ed95 7a0a 	vldr	s14, [r5, #40]	@ 0x28
 8012db2:	ee68 7aa7 	vmul.f32	s15, s17, s15
 8012db6:	ee29 7a07 	vmul.f32	s14, s18, s14
 8012dba:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8012dbe:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8012dc2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8012dc6:	ed9f 7a45 	vldr	s14, [pc, #276]	@ 8012edc <raster_stroked_line_+0x344>
 8012dca:	bf48      	it	mi
 8012dcc:	eef1 7a67 	vnegmi.f32	s15, s15
 8012dd0:	eef4 7ac7 	vcmpe.f32	s15, s14
 8012dd4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8012dd8:	edd5 da01 	vldr	s27, [r5, #4]
 8012ddc:	edd5 ea05 	vldr	s29, [r5, #20]
 8012de0:	ed95 ea02 	vldr	s28, [r5, #8]
 8012de4:	ed95 fa06 	vldr	s30, [r5, #24]
 8012de8:	f240 80bb 	bls.w	8012f62 <raster_stroked_line_+0x3ca>
 8012dec:	2009      	movs	r0, #9
 8012dee:	f00b f8d9 	bl	801dfa4 <nema_cl_get_space>
 8012df2:	2800      	cmp	r0, #0
 8012df4:	f000 80f7 	beq.w	8012fe6 <raster_stroked_line_+0x44e>
 8012df8:	f44f 734c 	mov.w	r3, #816	@ 0x330
 8012dfc:	f44f 7a48 	mov.w	sl, #800	@ 0x320
 8012e00:	f44f 7949 	mov.w	r9, #804	@ 0x324
 8012e04:	edc0 da01 	vstr	s27, [r0, #4]
 8012e08:	edc0 ea03 	vstr	s29, [r0, #12]
 8012e0c:	f44f 7254 	mov.w	r2, #848	@ 0x350
 8012e10:	f44f 784d 	mov.w	r8, #820	@ 0x334
 8012e14:	f44f 7e50 	mov.w	lr, #832	@ 0x340
 8012e18:	f44f 7c51 	mov.w	ip, #836	@ 0x344
 8012e1c:	f44f 7155 	mov.w	r1, #852	@ 0x354
 8012e20:	edc0 ba05 	vstr	s23, [r0, #20]
 8012e24:	ed80 ca07 	vstr	s24, [r0, #28]
 8012e28:	ed80 ea09 	vstr	s28, [r0, #36]	@ 0x24
 8012e2c:	ed80 fa0b 	vstr	s30, [r0, #44]	@ 0x2c
 8012e30:	ed80 8a0d 	vstr	s16, [r0, #52]	@ 0x34
 8012e34:	edc0 9a0f 	vstr	s19, [r0, #60]	@ 0x3c
 8012e38:	edd5 7a08 	vldr	s15, [r5, #32]
 8012e3c:	6103      	str	r3, [r0, #16]
 8012e3e:	4b25      	ldr	r3, [pc, #148]	@ (8012ed4 <raster_stroked_line_+0x33c>)
 8012e40:	f8c0 a000 	str.w	sl, [r0]
 8012e44:	f8c0 9008 	str.w	r9, [r0, #8]
 8012e48:	691b      	ldr	r3, [r3, #16]
 8012e4a:	6302      	str	r2, [r0, #48]	@ 0x30
 8012e4c:	f043 0305 	orr.w	r3, r3, #5
 8012e50:	4a21      	ldr	r2, [pc, #132]	@ (8012ed8 <raster_stroked_line_+0x340>)
 8012e52:	6443      	str	r3, [r0, #68]	@ 0x44
 8012e54:	6833      	ldr	r3, [r6, #0]
 8012e56:	f8c0 8018 	str.w	r8, [r0, #24]
 8012e5a:	f8c0 e020 	str.w	lr, [r0, #32]
 8012e5e:	f8c0 c028 	str.w	ip, [r0, #40]	@ 0x28
 8012e62:	6381      	str	r1, [r0, #56]	@ 0x38
 8012e64:	6402      	str	r2, [r0, #64]	@ 0x40
 8012e66:	eef5 7a40 	vcmp.f32	s15, #0.0
 8012e6a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8012e6e:	f103 0301 	add.w	r3, r3, #1
 8012e72:	6033      	str	r3, [r6, #0]
 8012e74:	f47f af06 	bne.w	8012c84 <raster_stroked_line_+0xec>
 8012e78:	4638      	mov	r0, r7
 8012e7a:	edc5 ba00 	vstr	s23, [r5]
 8012e7e:	ed85 ca04 	vstr	s24, [r5, #16]
 8012e82:	edc5 ca01 	vstr	s25, [r5, #4]
 8012e86:	ed85 da05 	vstr	s26, [r5, #20]
 8012e8a:	edc5 aa02 	vstr	s21, [r5, #8]
 8012e8e:	ed85 aa06 	vstr	s20, [r5, #24]
 8012e92:	ed85 8a03 	vstr	s16, [r5, #12]
 8012e96:	edc5 9a07 	vstr	s19, [r5, #28]
 8012e9a:	ed85 ba08 	vstr	s22, [r5, #32]
 8012e9e:	ed85 9a09 	vstr	s18, [r5, #36]	@ 0x24
 8012ea2:	edc5 8a0a 	vstr	s17, [r5, #40]	@ 0x28
 8012ea6:	b005      	add	sp, #20
 8012ea8:	ecbd 8b10 	vpop	{d8-d15}
 8012eac:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012eb0:	f7ff ba26 	b.w	8012300 <nema_enable_aa_flags>
 8012eb4:	3727c5ac 	.word	0x3727c5ac
 8012eb8:	20000138 	.word	0x20000138
 8012ebc:	2000013c 	.word	0x2000013c
 8012ec0:	20083150 	.word	0x20083150
 8012ec4:	20083148 	.word	0x20083148
 8012ec8:	20083198 	.word	0x20083198
 8012ecc:	20083160 	.word	0x20083160
 8012ed0:	200831c4 	.word	0x200831c4
 8012ed4:	20000064 	.word	0x20000064
 8012ed8:	ff000100 	.word	0xff000100
 8012edc:	3d4ccccd 	.word	0x3d4ccccd
 8012ee0:	6ad8      	ldr	r0, [r3, #44]	@ 0x2c
 8012ee2:	f7ff fa0d 	bl	8012300 <nema_enable_aa_flags>
 8012ee6:	4604      	mov	r4, r0
 8012ee8:	2009      	movs	r0, #9
 8012eea:	f00b f85b 	bl	801dfa4 <nema_cl_get_space>
 8012eee:	b380      	cbz	r0, 8012f52 <raster_stroked_line_+0x3ba>
 8012ef0:	f44f 734c 	mov.w	r3, #816	@ 0x330
 8012ef4:	f44f 7e48 	mov.w	lr, #800	@ 0x320
 8012ef8:	f44f 7c49 	mov.w	ip, #804	@ 0x324
 8012efc:	edc0 ba01 	vstr	s23, [r0, #4]
 8012f00:	ed80 ca03 	vstr	s24, [r0, #12]
 8012f04:	f44f 774d 	mov.w	r7, #820	@ 0x334
 8012f08:	f44f 7650 	mov.w	r6, #832	@ 0x340
 8012f0c:	f44f 7551 	mov.w	r5, #836	@ 0x344
 8012f10:	f44f 7154 	mov.w	r1, #848	@ 0x350
 8012f14:	f44f 7255 	mov.w	r2, #852	@ 0x354
 8012f18:	edc0 ca05 	vstr	s25, [r0, #20]
 8012f1c:	ed80 da07 	vstr	s26, [r0, #28]
 8012f20:	edc0 aa09 	vstr	s21, [r0, #36]	@ 0x24
 8012f24:	ed80 aa0b 	vstr	s20, [r0, #44]	@ 0x2c
 8012f28:	ed80 8a0d 	vstr	s16, [r0, #52]	@ 0x34
 8012f2c:	edc0 9a0f 	vstr	s19, [r0, #60]	@ 0x3c
 8012f30:	6103      	str	r3, [r0, #16]
 8012f32:	4b37      	ldr	r3, [pc, #220]	@ (8013010 <raster_stroked_line_+0x478>)
 8012f34:	f8c0 e000 	str.w	lr, [r0]
 8012f38:	f8c0 c008 	str.w	ip, [r0, #8]
 8012f3c:	691b      	ldr	r3, [r3, #16]
 8012f3e:	6187      	str	r7, [r0, #24]
 8012f40:	f043 0305 	orr.w	r3, r3, #5
 8012f44:	6443      	str	r3, [r0, #68]	@ 0x44
 8012f46:	4b33      	ldr	r3, [pc, #204]	@ (8013014 <raster_stroked_line_+0x47c>)
 8012f48:	6206      	str	r6, [r0, #32]
 8012f4a:	6285      	str	r5, [r0, #40]	@ 0x28
 8012f4c:	6301      	str	r1, [r0, #48]	@ 0x30
 8012f4e:	6382      	str	r2, [r0, #56]	@ 0x38
 8012f50:	6403      	str	r3, [r0, #64]	@ 0x40
 8012f52:	4620      	mov	r0, r4
 8012f54:	b005      	add	sp, #20
 8012f56:	ecbd 8b10 	vpop	{d8-d15}
 8012f5a:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012f5e:	f7ff b9cf 	b.w	8012300 <nema_enable_aa_flags>
 8012f62:	eef0 9a4f 	vmov.f32	s19, s30
 8012f66:	eeb0 ca6e 	vmov.f32	s24, s29
 8012f6a:	eeb0 8a4e 	vmov.f32	s16, s28
 8012f6e:	eef0 ba6d 	vmov.f32	s23, s27
 8012f72:	e685      	b.n	8012c80 <raster_stroked_line_+0xe8>
 8012f74:	2009      	movs	r0, #9
 8012f76:	f00b f815 	bl	801dfa4 <nema_cl_get_space>
 8012f7a:	2800      	cmp	r0, #0
 8012f7c:	f43f ae72 	beq.w	8012c64 <raster_stroked_line_+0xcc>
 8012f80:	f44f 734c 	mov.w	r3, #816	@ 0x330
 8012f84:	f44f 7848 	mov.w	r8, #800	@ 0x320
 8012f88:	f44f 7e49 	mov.w	lr, #804	@ 0x324
 8012f8c:	edc0 da01 	vstr	s27, [r0, #4]
 8012f90:	edc0 ea03 	vstr	s29, [r0, #12]
 8012f94:	f44f 7c4d 	mov.w	ip, #820	@ 0x334
 8012f98:	f44f 7650 	mov.w	r6, #832	@ 0x340
 8012f9c:	f44f 7551 	mov.w	r5, #836	@ 0x344
 8012fa0:	f44f 7154 	mov.w	r1, #848	@ 0x350
 8012fa4:	f44f 7255 	mov.w	r2, #852	@ 0x354
 8012fa8:	6103      	str	r3, [r0, #16]
 8012faa:	4b19      	ldr	r3, [pc, #100]	@ (8013010 <raster_stroked_line_+0x478>)
 8012fac:	f8c0 8000 	str.w	r8, [r0]
 8012fb0:	f8c0 e008 	str.w	lr, [r0, #8]
 8012fb4:	691b      	ldr	r3, [r3, #16]
 8012fb6:	edc0 ba05 	vstr	s23, [r0, #20]
 8012fba:	f043 0305 	orr.w	r3, r3, #5
 8012fbe:	6443      	str	r3, [r0, #68]	@ 0x44
 8012fc0:	4b14      	ldr	r3, [pc, #80]	@ (8013014 <raster_stroked_line_+0x47c>)
 8012fc2:	ed80 ca07 	vstr	s24, [r0, #28]
 8012fc6:	ed80 ea09 	vstr	s28, [r0, #36]	@ 0x24
 8012fca:	ed80 fa0b 	vstr	s30, [r0, #44]	@ 0x2c
 8012fce:	ed80 8a0d 	vstr	s16, [r0, #52]	@ 0x34
 8012fd2:	edc0 9a0f 	vstr	s19, [r0, #60]	@ 0x3c
 8012fd6:	f8c0 c018 	str.w	ip, [r0, #24]
 8012fda:	6206      	str	r6, [r0, #32]
 8012fdc:	6285      	str	r5, [r0, #40]	@ 0x28
 8012fde:	6301      	str	r1, [r0, #48]	@ 0x30
 8012fe0:	6382      	str	r2, [r0, #56]	@ 0x38
 8012fe2:	6403      	str	r3, [r0, #64]	@ 0x40
 8012fe4:	e63e      	b.n	8012c64 <raster_stroked_line_+0xcc>
 8012fe6:	6833      	ldr	r3, [r6, #0]
 8012fe8:	edd5 7a08 	vldr	s15, [r5, #32]
 8012fec:	e73b      	b.n	8012e66 <raster_stroked_line_+0x2ce>
 8012fee:	eeb0 0a67 	vmov.f32	s0, s15
 8012ff2:	edcd 1a03 	vstr	s3, [sp, #12]
 8012ff6:	ed8d 1a02 	vstr	s2, [sp, #8]
 8012ffa:	edcd 0a01 	vstr	s1, [sp, #4]
 8012ffe:	f01e fa57 	bl	80314b0 <sqrtf>
 8013002:	eddd 1a03 	vldr	s3, [sp, #12]
 8013006:	ed9d 1a02 	vldr	s2, [sp, #8]
 801300a:	eddd 0a01 	vldr	s1, [sp, #4]
 801300e:	e5e8      	b.n	8012be2 <raster_stroked_line_+0x4a>
 8013010:	20000064 	.word	0x20000064
 8013014:	ff000100 	.word	0xff000100

08013018 <render_arc.isra.6>:
 8013018:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 801301c:	ed2d 8b10 	vpush	{d8-d15}
 8013020:	eddf 8aa8 	vldr	s17, [pc, #672]	@ 80132c4 <render_arc.isra.6+0x2ac>
 8013024:	ee20 aa28 	vmul.f32	s20, s0, s17
 8013028:	ee60 8aa8 	vmul.f32	s17, s1, s17
 801302c:	eeb5 0a00 	vmov.f32	s0, #80	@ 0x3e800000  0.250
 8013030:	ee78 8aca 	vsub.f32	s17, s17, s20
 8013034:	ee28 0a80 	vmul.f32	s0, s17, s0
 8013038:	4604      	mov	r4, r0
 801303a:	460d      	mov	r5, r1
 801303c:	eef0 ca41 	vmov.f32	s25, s2
 8013040:	eeb0 da61 	vmov.f32	s26, s3
 8013044:	eef0 da42 	vmov.f32	s27, s4
 8013048:	eeb0 ea62 	vmov.f32	s28, s5
 801304c:	ed9f 8a9e 	vldr	s16, [pc, #632]	@ 80132c8 <render_arc.isra.6+0x2b0>
 8013050:	f01e fbb2 	bl	80317b8 <tanf>
 8013054:	ee20 8a08 	vmul.f32	s16, s0, s16
 8013058:	eeb0 0a68 	vmov.f32	s0, s17
 801305c:	f01e fb1a 	bl	8031694 <cosf>
 8013060:	eef0 9a40 	vmov.f32	s19, s0
 8013064:	eeb0 0a68 	vmov.f32	s0, s17
 8013068:	f01e fb60 	bl	803172c <sinf>
 801306c:	eddf 7a97 	vldr	s15, [pc, #604]	@ 80132cc <render_arc.isra.6+0x2b4>
 8013070:	ed94 7a09 	vldr	s14, [r4, #36]	@ 0x24
 8013074:	ee87 9a27 	vdiv.f32	s18, s14, s15
 8013078:	ed9f 7a95 	vldr	s14, [pc, #596]	@ 80132d0 <render_arc.isra.6+0x2b8>
 801307c:	eeb0 ca40 	vmov.f32	s24, s0
 8013080:	ee68 8a00 	vmul.f32	s17, s16, s0
 8013084:	eeb0 0a4a 	vmov.f32	s0, s20
 8013088:	ee29 9a07 	vmul.f32	s18, s18, s14
 801308c:	f01e fb02 	bl	8031694 <cosf>
 8013090:	eeb0 ba40 	vmov.f32	s22, s0
 8013094:	eeb0 0a4a 	vmov.f32	s0, s20
 8013098:	f01e fb48 	bl	803172c <sinf>
 801309c:	eef0 aa40 	vmov.f32	s21, s0
 80130a0:	eeb0 0a49 	vmov.f32	s0, s18
 80130a4:	f01e faf6 	bl	8031694 <cosf>
 80130a8:	ee68 ea29 	vmul.f32	s29, s16, s19
 80130ac:	eeb0 aa40 	vmov.f32	s20, s0
 80130b0:	eeb0 0a49 	vmov.f32	s0, s18
 80130b4:	f01e fb3a 	bl	803172c <sinf>
 80130b8:	07ea      	lsls	r2, r5, #31
 80130ba:	ee78 8aa9 	vadd.f32	s17, s17, s19
 80130be:	ee7c ea6e 	vsub.f32	s29, s24, s29
 80130c2:	f140 80c1 	bpl.w	8013248 <render_arc.isra.6+0x230>
 80130c6:	edd4 ba03 	vldr	s23, [r4, #12]
 80130ca:	ed94 9a04 	vldr	s18, [r4, #16]
 80130ce:	ee28 7a8b 	vmul.f32	s14, s17, s22
 80130d2:	ee68 6a2a 	vmul.f32	s13, s16, s21
 80130d6:	ee68 7aaa 	vmul.f32	s15, s17, s21
 80130da:	ee28 8a0b 	vmul.f32	s16, s16, s22
 80130de:	ee6e 8aaa 	vmul.f32	s17, s29, s21
 80130e2:	ee6e ea8b 	vmul.f32	s29, s29, s22
 80130e6:	eddf 2a7b 	vldr	s5, [pc, #492]	@ 80132d4 <render_arc.isra.6+0x2bc>
 80130ea:	ee7b 6a66 	vsub.f32	s13, s22, s13
 80130ee:	ee77 8a68 	vsub.f32	s17, s14, s17
 80130f2:	ee77 7aae 	vadd.f32	s15, s15, s29
 80130f6:	ee38 8a2a 	vadd.f32	s16, s16, s21
 80130fa:	ee36 7aa2 	vadd.f32	s14, s13, s5
 80130fe:	ee38 8a22 	vadd.f32	s16, s16, s5
 8013102:	ee78 8aa2 	vadd.f32	s17, s17, s5
 8013106:	ee77 7aa2 	vadd.f32	s15, s15, s5
 801310a:	ee27 7a2d 	vmul.f32	s14, s14, s27
 801310e:	ee28 8a0e 	vmul.f32	s16, s16, s28
 8013112:	ee68 8aad 	vmul.f32	s17, s17, s27
 8013116:	ee67 7a8e 	vmul.f32	s15, s15, s28
 801311a:	ee2a fa07 	vmul.f32	s30, s20, s14
 801311e:	ee20 6a08 	vmul.f32	s12, s0, s16
 8013122:	ee6a ea28 	vmul.f32	s29, s20, s17
 8013126:	ee60 6a27 	vmul.f32	s13, s0, s15
 801312a:	ee60 8a28 	vmul.f32	s17, s0, s17
 801312e:	ee20 7a07 	vmul.f32	s14, s0, s14
 8013132:	ee2a 8a08 	vmul.f32	s16, s20, s16
 8013136:	ee6a 7a27 	vmul.f32	s15, s20, s15
 801313a:	ee3f fa46 	vsub.f32	s30, s30, s12
 801313e:	ee37 8a08 	vadd.f32	s16, s14, s16
 8013142:	ee7e eae6 	vsub.f32	s29, s29, s13
 8013146:	ee78 7aa7 	vadd.f32	s15, s17, s15
 801314a:	07ab      	lsls	r3, r5, #30
 801314c:	ee3f fa2c 	vadd.f32	s30, s30, s25
 8013150:	ee38 8a0d 	vadd.f32	s16, s16, s26
 8013154:	ee7e eaac 	vadd.f32	s29, s29, s25
 8013158:	ee77 8a8d 	vadd.f32	s17, s15, s26
 801315c:	f100 809a 	bmi.w	8013294 <render_arc.isra.6+0x27c>
 8013160:	ee29 2a8b 	vmul.f32	s4, s19, s22
 8013164:	ee69 9aaa 	vmul.f32	s19, s19, s21
 8013168:	ee2c ba0b 	vmul.f32	s22, s24, s22
 801316c:	ee6c aa2a 	vmul.f32	s21, s24, s21
 8013170:	ee39 ba8b 	vadd.f32	s22, s19, s22
 8013174:	ee72 aa6a 	vsub.f32	s21, s4, s21
 8013178:	ee7a aaa2 	vadd.f32	s21, s21, s5
 801317c:	ee7b 2a22 	vadd.f32	s5, s22, s5
 8013180:	ee6a daad 	vmul.f32	s27, s21, s27
 8013184:	ee22 ea8e 	vmul.f32	s28, s5, s28
 8013188:	ee2a 1a2d 	vmul.f32	s2, s20, s27
 801318c:	ee60 da2d 	vmul.f32	s27, s0, s27
 8013190:	ee20 0a0e 	vmul.f32	s0, s0, s28
 8013194:	ee2a ea0e 	vmul.f32	s28, s20, s28
 8013198:	ee31 0a40 	vsub.f32	s0, s2, s0
 801319c:	ee3d ea8e 	vadd.f32	s28, s27, s28
 80131a0:	4b4d      	ldr	r3, [pc, #308]	@ (80132d8 <render_arc.isra.6+0x2c0>)
 80131a2:	ee70 ca2c 	vadd.f32	s25, s0, s25
 80131a6:	681b      	ldr	r3, [r3, #0]
 80131a8:	ee3e da0d 	vadd.f32	s26, s28, s26
 80131ac:	7f1a      	ldrb	r2, [r3, #28]
 80131ae:	2a00      	cmp	r2, #0
 80131b0:	d179      	bne.n	80132a6 <render_arc.isra.6+0x28e>
 80131b2:	4a4a      	ldr	r2, [pc, #296]	@ (80132dc <render_arc.isra.6+0x2c4>)
 80131b4:	6814      	ldr	r4, [r2, #0]
 80131b6:	2c01      	cmp	r4, #1
 80131b8:	f000 8098 	beq.w	80132ec <render_arc.isra.6+0x2d4>
 80131bc:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
 80131be:	2509      	movs	r5, #9
 80131c0:	2a00      	cmp	r2, #0
 80131c2:	d164      	bne.n	801328e <render_arc.isra.6+0x276>
 80131c4:	4946      	ldr	r1, [pc, #280]	@ (80132e0 <render_arc.isra.6+0x2c8>)
 80131c6:	6adc      	ldr	r4, [r3, #44]	@ 0x2c
 80131c8:	780b      	ldrb	r3, [r1, #0]
 80131ca:	4014      	ands	r4, r2
 80131cc:	2b01      	cmp	r3, #1
 80131ce:	d103      	bne.n	80131d8 <render_arc.isra.6+0x1c0>
 80131d0:	684b      	ldr	r3, [r1, #4]
 80131d2:	f003 4340 	and.w	r3, r3, #3221225472	@ 0xc0000000
 80131d6:	431c      	orrs	r4, r3
 80131d8:	2009      	movs	r0, #9
 80131da:	f00a fee3 	bl	801dfa4 <nema_cl_get_space>
 80131de:	b378      	cbz	r0, 8013240 <render_arc.isra.6+0x228>
 80131e0:	f44f 734d 	mov.w	r3, #820	@ 0x334
 80131e4:	f44f 7948 	mov.w	r9, #800	@ 0x320
 80131e8:	f44f 7849 	mov.w	r8, #804	@ 0x324
 80131ec:	f44f 7e4c 	mov.w	lr, #816	@ 0x330
 80131f0:	f44f 7c50 	mov.w	ip, #832	@ 0x340
 80131f4:	f44f 7751 	mov.w	r7, #836	@ 0x344
 80131f8:	f44f 7654 	mov.w	r6, #848	@ 0x350
 80131fc:	f44f 7155 	mov.w	r1, #852	@ 0x354
 8013200:	edc0 ba01 	vstr	s23, [r0, #4]
 8013204:	ed80 9a03 	vstr	s18, [r0, #12]
 8013208:	ed80 fa05 	vstr	s30, [r0, #20]
 801320c:	ed80 8a07 	vstr	s16, [r0, #28]
 8013210:	edc0 ea09 	vstr	s29, [r0, #36]	@ 0x24
 8013214:	edc0 8a0b 	vstr	s17, [r0, #44]	@ 0x2c
 8013218:	edc0 ca0d 	vstr	s25, [r0, #52]	@ 0x34
 801321c:	ed80 da0f 	vstr	s26, [r0, #60]	@ 0x3c
 8013220:	6183      	str	r3, [r0, #24]
 8013222:	4b30      	ldr	r3, [pc, #192]	@ (80132e4 <render_arc.isra.6+0x2cc>)
 8013224:	432c      	orrs	r4, r5
 8013226:	6444      	str	r4, [r0, #68]	@ 0x44
 8013228:	f8c0 9000 	str.w	r9, [r0]
 801322c:	f8c0 8008 	str.w	r8, [r0, #8]
 8013230:	f8c0 e010 	str.w	lr, [r0, #16]
 8013234:	f8c0 c020 	str.w	ip, [r0, #32]
 8013238:	6287      	str	r7, [r0, #40]	@ 0x28
 801323a:	6306      	str	r6, [r0, #48]	@ 0x30
 801323c:	6381      	str	r1, [r0, #56]	@ 0x38
 801323e:	6403      	str	r3, [r0, #64]	@ 0x40
 8013240:	ecbd 8b10 	vpop	{d8-d15}
 8013244:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8013248:	ed9f 9a22 	vldr	s18, [pc, #136]	@ 80132d4 <render_arc.isra.6+0x2bc>
 801324c:	ee2a 7a89 	vmul.f32	s14, s21, s18
 8013250:	ee6b 7a09 	vmul.f32	s15, s22, s18
 8013254:	ee3b 7a47 	vsub.f32	s14, s22, s14
 8013258:	ee77 7aaa 	vadd.f32	s15, s15, s21
 801325c:	ee37 7a09 	vadd.f32	s14, s14, s18
 8013260:	ee77 7a89 	vadd.f32	s15, s15, s18
 8013264:	ee27 7a2d 	vmul.f32	s14, s14, s27
 8013268:	ee67 7a8e 	vmul.f32	s15, s15, s28
 801326c:	ee6a ba07 	vmul.f32	s23, s20, s14
 8013270:	ee20 9a07 	vmul.f32	s18, s0, s14
 8013274:	ee20 7a27 	vmul.f32	s14, s0, s15
 8013278:	ee6a 7a27 	vmul.f32	s15, s20, s15
 801327c:	ee7b bac7 	vsub.f32	s23, s23, s14
 8013280:	ee39 9a27 	vadd.f32	s18, s18, s15
 8013284:	ee7b baac 	vadd.f32	s23, s23, s25
 8013288:	ee39 9a0d 	vadd.f32	s18, s18, s26
 801328c:	e71f      	b.n	80130ce <render_arc.isra.6+0xb6>
 801328e:	f04f 62f0 	mov.w	r2, #125829120	@ 0x7800000
 8013292:	e797      	b.n	80131c4 <render_arc.isra.6+0x1ac>
 8013294:	4b10      	ldr	r3, [pc, #64]	@ (80132d8 <render_arc.isra.6+0x2c0>)
 8013296:	edd4 ca05 	vldr	s25, [r4, #20]
 801329a:	681b      	ldr	r3, [r3, #0]
 801329c:	ed94 da06 	vldr	s26, [r4, #24]
 80132a0:	7f1a      	ldrb	r2, [r3, #28]
 80132a2:	2a00      	cmp	r2, #0
 80132a4:	d085      	beq.n	80131b2 <render_arc.isra.6+0x19a>
 80132a6:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
 80132a8:	b90a      	cbnz	r2, 80132ae <render_arc.isra.6+0x296>
 80132aa:	2507      	movs	r5, #7
 80132ac:	e78a      	b.n	80131c4 <render_arc.isra.6+0x1ac>
 80132ae:	4a0e      	ldr	r2, [pc, #56]	@ (80132e8 <render_arc.isra.6+0x2d0>)
 80132b0:	2507      	movs	r5, #7
 80132b2:	6812      	ldr	r2, [r2, #0]
 80132b4:	2a00      	cmp	r2, #0
 80132b6:	bf0c      	ite	eq
 80132b8:	f04f 62f0 	moveq.w	r2, #125829120	@ 0x7800000
 80132bc:	f04f 6280 	movne.w	r2, #67108864	@ 0x4000000
 80132c0:	e780      	b.n	80131c4 <render_arc.isra.6+0x1ac>
 80132c2:	bf00      	nop
 80132c4:	3c8efa35 	.word	0x3c8efa35
 80132c8:	3faaaaab 	.word	0x3faaaaab
 80132cc:	43340000 	.word	0x43340000
 80132d0:	40490fdb 	.word	0x40490fdb
 80132d4:	00000000 	.word	0x00000000
 80132d8:	20083148 	.word	0x20083148
 80132dc:	20083150 	.word	0x20083150
 80132e0:	20000064 	.word	0x20000064
 80132e4:	ff000100 	.word	0xff000100
 80132e8:	2008314c 	.word	0x2008314c
 80132ec:	4626      	mov	r6, r4
 80132ee:	eef6 9a00 	vmov.f32	s19, #96	@ 0x3f000000  0.5
 80132f2:	4d57      	ldr	r5, [pc, #348]	@ (8013450 <render_arc.isra.6+0x438>)
 80132f4:	4f57      	ldr	r7, [pc, #348]	@ (8013454 <render_arc.isra.6+0x43c>)
 80132f6:	ee7b 4a8f 	vadd.f32	s9, s23, s30
 80132fa:	ee7f 7a2e 	vadd.f32	s15, s30, s29
 80132fe:	ee3e 5aac 	vadd.f32	s10, s29, s25
 8013302:	ee67 7aa9 	vmul.f32	s15, s15, s19
 8013306:	ee64 4aa9 	vmul.f32	s9, s9, s19
 801330a:	ee25 5a29 	vmul.f32	s10, s10, s19
 801330e:	ee74 3aa7 	vadd.f32	s7, s9, s15
 8013312:	ee37 6a85 	vadd.f32	s12, s15, s10
 8013316:	ee39 4a08 	vadd.f32	s8, s18, s16
 801331a:	ee78 7a28 	vadd.f32	s15, s16, s17
 801331e:	ee78 5a8d 	vadd.f32	s11, s17, s26
 8013322:	ee67 7aa9 	vmul.f32	s15, s15, s19
 8013326:	ee24 4a29 	vmul.f32	s8, s8, s19
 801332a:	ee65 5aa9 	vmul.f32	s11, s11, s19
 801332e:	ee34 3a27 	vadd.f32	s6, s8, s15
 8013332:	ee63 3aa9 	vmul.f32	s7, s7, s19
 8013336:	ee26 6a29 	vmul.f32	s12, s12, s19
 801333a:	ee77 7aa5 	vadd.f32	s15, s15, s11
 801333e:	ee33 aa86 	vadd.f32	s20, s7, s12
 8013342:	ee3b 7aac 	vadd.f32	s14, s23, s25
 8013346:	ee23 3a29 	vmul.f32	s6, s6, s19
 801334a:	ee67 7aa9 	vmul.f32	s15, s15, s19
 801334e:	ee2a aa29 	vmul.f32	s20, s20, s19
 8013352:	ee27 7a29 	vmul.f32	s14, s14, s19
 8013356:	ee73 aa27 	vadd.f32	s21, s6, s15
 801335a:	ee79 6a0d 	vadd.f32	s13, s18, s26
 801335e:	ee37 7a4a 	vsub.f32	s14, s14, s20
 8013362:	ee6a aaa9 	vmul.f32	s21, s21, s19
 8013366:	ee66 6aa9 	vmul.f32	s13, s13, s19
 801336a:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 801336e:	ee76 6aea 	vsub.f32	s13, s13, s21
 8013372:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013376:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 801337a:	bf48      	it	mi
 801337c:	eeb1 7a47 	vnegmi.f32	s14, s14
 8013380:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013384:	bf48      	it	mi
 8013386:	eef1 6a66 	vnegmi.f32	s13, s13
 801338a:	b94e      	cbnz	r6, 80133a0 <render_arc.isra.6+0x388>
 801338c:	eeb4 7ae9 	vcmpe.f32	s14, s19
 8013390:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013394:	d504      	bpl.n	80133a0 <render_arc.isra.6+0x388>
 8013396:	eef4 6ae9 	vcmpe.f32	s13, s19
 801339a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801339e:	d423      	bmi.n	80133e8 <render_arc.isra.6+0x3d0>
 80133a0:	682a      	ldr	r2, [r5, #0]
 80133a2:	2a09      	cmp	r2, #9
 80133a4:	dc20      	bgt.n	80133e8 <render_arc.isra.6+0x3d0>
 80133a6:	eb02 0342 	add.w	r3, r2, r2, lsl #1
 80133aa:	eb07 03c3 	add.w	r3, r7, r3, lsl #3
 80133ae:	3201      	adds	r2, #1
 80133b0:	edc3 ca04 	vstr	s25, [r3, #16]
 80133b4:	ed83 da05 	vstr	s26, [r3, #20]
 80133b8:	3401      	adds	r4, #1
 80133ba:	eef0 8a43 	vmov.f32	s17, s6
 80133be:	eef0 ea63 	vmov.f32	s29, s7
 80133c2:	eeb0 8a44 	vmov.f32	s16, s8
 80133c6:	eeb0 fa64 	vmov.f32	s30, s9
 80133ca:	ed83 6a00 	vstr	s12, [r3]
 80133ce:	edc3 7a01 	vstr	s15, [r3, #4]
 80133d2:	ed83 5a02 	vstr	s10, [r3, #8]
 80133d6:	edc3 5a03 	vstr	s11, [r3, #12]
 80133da:	602a      	str	r2, [r5, #0]
 80133dc:	eeb0 da6a 	vmov.f32	s26, s21
 80133e0:	eef0 ca4a 	vmov.f32	s25, s20
 80133e4:	2600      	movs	r6, #0
 80133e6:	e786      	b.n	80132f6 <render_arc.isra.6+0x2de>
 80133e8:	eef0 1a6a 	vmov.f32	s3, s21
 80133ec:	eeb0 1a4a 	vmov.f32	s2, s20
 80133f0:	eef0 0a49 	vmov.f32	s1, s18
 80133f4:	eeb0 0a6b 	vmov.f32	s0, s23
 80133f8:	f7ff fbce 	bl	8012b98 <raster_stroked_line_>
 80133fc:	eef0 1a4d 	vmov.f32	s3, s26
 8013400:	eeb0 1a6c 	vmov.f32	s2, s25
 8013404:	eef0 0a6a 	vmov.f32	s1, s21
 8013408:	eeb0 0a4a 	vmov.f32	s0, s20
 801340c:	f7ff fbc4 	bl	8012b98 <raster_stroked_line_>
 8013410:	682b      	ldr	r3, [r5, #0]
 8013412:	3c01      	subs	r4, #1
 8013414:	b1ab      	cbz	r3, 8013442 <render_arc.isra.6+0x42a>
 8013416:	3b01      	subs	r3, #1
 8013418:	eb03 0243 	add.w	r2, r3, r3, lsl #1
 801341c:	eb07 02c2 	add.w	r2, r7, r2, lsl #3
 8013420:	eeb0 9a4d 	vmov.f32	s18, s26
 8013424:	eef0 ba6c 	vmov.f32	s23, s25
 8013428:	ed92 fa00 	vldr	s30, [r2]
 801342c:	ed92 8a01 	vldr	s16, [r2, #4]
 8013430:	edd2 ea02 	vldr	s29, [r2, #8]
 8013434:	edd2 8a03 	vldr	s17, [r2, #12]
 8013438:	ed92 da05 	vldr	s26, [r2, #20]
 801343c:	edd2 ca04 	vldr	s25, [r2, #16]
 8013440:	602b      	str	r3, [r5, #0]
 8013442:	2c00      	cmp	r4, #0
 8013444:	f47f af57 	bne.w	80132f6 <render_arc.isra.6+0x2de>
 8013448:	ecbd 8b10 	vpop	{d8-d15}
 801344c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8013450:	200832e4 	.word	0x200832e4
 8013454:	200831f4 	.word	0x200831f4

08013458 <fill_arc.isra.7>:
 8013458:	b570      	push	{r4, r5, r6, lr}
 801345a:	ed2d 8b10 	vpush	{d8-d15}
 801345e:	ed90 8a07 	vldr	s16, [r0, #28]
 8013462:	eeb5 8ac0 	vcmpe.f32	s16, #0.0
 8013466:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801346a:	b082      	sub	sp, #8
 801346c:	4604      	mov	r4, r0
 801346e:	d42a      	bmi.n	80134c6 <fill_arc.isra.7+0x6e>
 8013470:	eddf 7adf 	vldr	s15, [pc, #892]	@ 80137f0 <fill_arc.isra.7+0x398>
 8013474:	eeb4 8ae7 	vcmpe.f32	s16, s15
 8013478:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801347c:	d92a      	bls.n	80134d4 <fill_arc.isra.7+0x7c>
 801347e:	edd4 9a08 	vldr	s19, [r4, #32]
 8013482:	eef5 9ac0 	vcmpe.f32	s19, #0.0
 8013486:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801348a:	d47a      	bmi.n	8013582 <fill_arc.isra.7+0x12a>
 801348c:	eddf 7ad8 	vldr	s15, [pc, #864]	@ 80137f0 <fill_arc.isra.7+0x398>
 8013490:	eef4 9ae7 	vcmpe.f32	s19, s15
 8013494:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013498:	d91c      	bls.n	80134d4 <fill_arc.isra.7+0x7c>
 801349a:	eeb5 8ac0 	vcmpe.f32	s16, #0.0
 801349e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80134a2:	edd4 aa09 	vldr	s21, [r4, #36]	@ 0x24
 80134a6:	edd4 ba0d 	vldr	s23, [r4, #52]	@ 0x34
 80134aa:	ed94 aa0e 	vldr	s20, [r4, #56]	@ 0x38
 80134ae:	edd4 8a0b 	vldr	s17, [r4, #44]	@ 0x2c
 80134b2:	ed94 9a0c 	vldr	s18, [r4, #48]	@ 0x30
 80134b6:	f100 81b5 	bmi.w	8013824 <fill_arc.isra.7+0x3cc>
 80134ba:	eef5 9ac0 	vcmpe.f32	s19, #0.0
 80134be:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80134c2:	d577      	bpl.n	80135b4 <fill_arc.isra.7+0x15c>
 80134c4:	e074      	b.n	80135b0 <fill_arc.isra.7+0x158>
 80134c6:	eddf 7acb 	vldr	s15, [pc, #812]	@ 80137f4 <fill_arc.isra.7+0x39c>
 80134ca:	eeb4 8ae7 	vcmpe.f32	s16, s15
 80134ce:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80134d2:	dbd4      	blt.n	801347e <fill_arc.isra.7+0x26>
 80134d4:	4bc8      	ldr	r3, [pc, #800]	@ (80137f8 <fill_arc.isra.7+0x3a0>)
 80134d6:	edd4 9a03 	vldr	s19, [r4, #12]
 80134da:	681a      	ldr	r2, [r3, #0]
 80134dc:	ed94 9a04 	vldr	s18, [r4, #16]
 80134e0:	7f15      	ldrb	r5, [r2, #28]
 80134e2:	edd4 8a05 	vldr	s17, [r4, #20]
 80134e6:	ed94 8a06 	vldr	s16, [r4, #24]
 80134ea:	2d00      	cmp	r5, #0
 80134ec:	d035      	beq.n	801355a <fill_arc.isra.7+0x102>
 80134ee:	6a93      	ldr	r3, [r2, #40]	@ 0x28
 80134f0:	b13b      	cbz	r3, 8013502 <fill_arc.isra.7+0xaa>
 80134f2:	4bc2      	ldr	r3, [pc, #776]	@ (80137fc <fill_arc.isra.7+0x3a4>)
 80134f4:	681b      	ldr	r3, [r3, #0]
 80134f6:	2b00      	cmp	r3, #0
 80134f8:	bf14      	ite	ne
 80134fa:	f04f 6380 	movne.w	r3, #67108864	@ 0x4000000
 80134fe:	f04f 63f0 	moveq.w	r3, #125829120	@ 0x7800000
 8013502:	49bf      	ldr	r1, [pc, #764]	@ (8013800 <fill_arc.isra.7+0x3a8>)
 8013504:	6ad4      	ldr	r4, [r2, #44]	@ 0x2c
 8013506:	780a      	ldrb	r2, [r1, #0]
 8013508:	401c      	ands	r4, r3
 801350a:	2a01      	cmp	r2, #1
 801350c:	d103      	bne.n	8013516 <fill_arc.isra.7+0xbe>
 801350e:	684b      	ldr	r3, [r1, #4]
 8013510:	f003 4340 	and.w	r3, r3, #3221225472	@ 0xc0000000
 8013514:	431c      	orrs	r4, r3
 8013516:	2005      	movs	r0, #5
 8013518:	f00a fd44 	bl	801dfa4 <nema_cl_get_space>
 801351c:	b1c0      	cbz	r0, 8013550 <fill_arc.isra.7+0xf8>
 801351e:	f44f 7648 	mov.w	r6, #800	@ 0x320
 8013522:	f44f 7549 	mov.w	r5, #804	@ 0x324
 8013526:	f44f 714c 	mov.w	r1, #816	@ 0x330
 801352a:	f44f 724d 	mov.w	r2, #820	@ 0x334
 801352e:	f044 040b 	orr.w	r4, r4, #11
 8013532:	edc0 9a01 	vstr	s19, [r0, #4]
 8013536:	ed80 9a03 	vstr	s18, [r0, #12]
 801353a:	edc0 8a05 	vstr	s17, [r0, #20]
 801353e:	ed80 8a07 	vstr	s16, [r0, #28]
 8013542:	4bb0      	ldr	r3, [pc, #704]	@ (8013804 <fill_arc.isra.7+0x3ac>)
 8013544:	6244      	str	r4, [r0, #36]	@ 0x24
 8013546:	6006      	str	r6, [r0, #0]
 8013548:	6085      	str	r5, [r0, #8]
 801354a:	6101      	str	r1, [r0, #16]
 801354c:	6182      	str	r2, [r0, #24]
 801354e:	6203      	str	r3, [r0, #32]
 8013550:	2000      	movs	r0, #0
 8013552:	b002      	add	sp, #8
 8013554:	ecbd 8b10 	vpop	{d8-d15}
 8013558:	bd70      	pop	{r4, r5, r6, pc}
 801355a:	4bab      	ldr	r3, [pc, #684]	@ (8013808 <fill_arc.isra.7+0x3b0>)
 801355c:	681b      	ldr	r3, [r3, #0]
 801355e:	2b00      	cmp	r3, #0
 8013560:	f000 8115 	beq.w	801378e <fill_arc.isra.7+0x336>
 8013564:	eef0 1a48 	vmov.f32	s3, s16
 8013568:	eeb0 1a68 	vmov.f32	s2, s17
 801356c:	eef0 0a49 	vmov.f32	s1, s18
 8013570:	eeb0 0a69 	vmov.f32	s0, s19
 8013574:	f7ff fb10 	bl	8012b98 <raster_stroked_line_>
 8013578:	4628      	mov	r0, r5
 801357a:	b002      	add	sp, #8
 801357c:	ecbd 8b10 	vpop	{d8-d15}
 8013580:	bd70      	pop	{r4, r5, r6, pc}
 8013582:	eddf 7a9c 	vldr	s15, [pc, #624]	@ 80137f4 <fill_arc.isra.7+0x39c>
 8013586:	eef4 9ae7 	vcmpe.f32	s19, s15
 801358a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801358e:	daa1      	bge.n	80134d4 <fill_arc.isra.7+0x7c>
 8013590:	eeb5 8ac0 	vcmpe.f32	s16, #0.0
 8013594:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013598:	edd4 aa09 	vldr	s21, [r4, #36]	@ 0x24
 801359c:	edd4 ba0d 	vldr	s23, [r4, #52]	@ 0x34
 80135a0:	ed94 aa0e 	vldr	s20, [r4, #56]	@ 0x38
 80135a4:	edd4 8a0b 	vldr	s17, [r4, #44]	@ 0x2c
 80135a8:	ed94 9a0c 	vldr	s18, [r4, #48]	@ 0x30
 80135ac:	f100 813a 	bmi.w	8013824 <fill_arc.isra.7+0x3cc>
 80135b0:	eef1 9a69 	vneg.f32	s19, s19
 80135b4:	eddf 7a95 	vldr	s15, [pc, #596]	@ 801380c <fill_arc.isra.7+0x3b4>
 80135b8:	ee6a aaa7 	vmul.f32	s21, s21, s15
 80135bc:	eeb0 0a6a 	vmov.f32	s0, s21
 80135c0:	f01e f868 	bl	8031694 <cosf>
 80135c4:	eeb0 ca40 	vmov.f32	s24, s0
 80135c8:	eeb0 0a6a 	vmov.f32	s0, s21
 80135cc:	f01e f8ae 	bl	803172c <sinf>
 80135d0:	ee6c aa28 	vmul.f32	s21, s24, s17
 80135d4:	ee20 7a0a 	vmul.f32	s14, s0, s20
 80135d8:	ee60 7a09 	vmul.f32	s15, s0, s18
 80135dc:	ee6c 6a2b 	vmul.f32	s13, s24, s23
 80135e0:	ee68 8ac0 	vnmul.f32	s17, s17, s0
 80135e4:	ee6b bac0 	vnmul.f32	s23, s23, s0
 80135e8:	ee2c aa0a 	vmul.f32	s20, s24, s20
 80135ec:	ee2c 9a09 	vmul.f32	s18, s24, s18
 80135f0:	ee76 fa87 	vadd.f32	s31, s13, s14
 80135f4:	ee3b aa8a 	vadd.f32	s20, s23, s20
 80135f8:	ee7a aaa7 	vadd.f32	s21, s21, s15
 80135fc:	ee78 8a89 	vadd.f32	s17, s17, s18
 8013600:	ee8f da88 	vdiv.f32	s26, s31, s16
 8013604:	ee8a ea88 	vdiv.f32	s28, s21, s16
 8013608:	eeca ca29 	vdiv.f32	s25, s20, s19
 801360c:	eec8 daa9 	vdiv.f32	s27, s17, s19
 8013610:	ee7d ba4e 	vsub.f32	s23, s26, s28
 8013614:	ee7c eaed 	vsub.f32	s29, s25, s27
 8013618:	eeb0 ba40 	vmov.f32	s22, s0
 801361c:	ee6b 7aab 	vmul.f32	s15, s23, s23
 8013620:	ee2e 0aae 	vmul.f32	s0, s29, s29
 8013624:	ee77 7a80 	vadd.f32	s15, s15, s0
 8013628:	eef5 7a40 	vcmp.f32	s15, #0.0
 801362c:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 8013630:	ee3d 6a0e 	vadd.f32	s12, s26, s28
 8013634:	ee7c 6aad 	vadd.f32	s13, s25, s27
 8013638:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801363c:	ee26 fa07 	vmul.f32	s30, s12, s14
 8013640:	ee26 7a87 	vmul.f32	s14, s13, s14
 8013644:	f000 8117 	beq.w	8013876 <fill_arc.isra.7+0x41e>
 8013648:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 801364c:	eef5 5a00 	vmov.f32	s11, #80	@ 0x3e800000  0.250
 8013650:	ee86 0aa7 	vdiv.f32	s0, s13, s15
 8013654:	ee30 0a65 	vsub.f32	s0, s0, s11
 8013658:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 801365c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013660:	78e5      	ldrb	r5, [r4, #3]
 8013662:	f100 814f 	bmi.w	8013904 <fill_arc.isra.7+0x4ac>
 8013666:	eeb5 0a40 	vcmp.f32	s0, #0.0
 801366a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801366e:	eef1 8ac0 	vsqrt.f32	s17, s0
 8013672:	f100 8174 	bmi.w	801395e <fill_arc.isra.7+0x506>
 8013676:	ee68 baab 	vmul.f32	s23, s17, s23
 801367a:	ee68 eaae 	vmul.f32	s29, s17, s29
 801367e:	ee77 aa6b 	vsub.f32	s21, s14, s23
 8013682:	ee3f aa2e 	vadd.f32	s20, s30, s29
 8013686:	ee3c 0aea 	vsub.f32	s0, s25, s21
 801368a:	ee7d 0a4a 	vsub.f32	s1, s26, s20
 801368e:	ed8d 7a01 	vstr	s14, [sp, #4]
 8013692:	f01d feeb 	bl	803146c <atan2f>
 8013696:	ee7e 0a4a 	vsub.f32	s1, s28, s20
 801369a:	eeb0 9a40 	vmov.f32	s18, s0
 801369e:	ee3d 0aea 	vsub.f32	s0, s27, s21
 80136a2:	f01d fee3 	bl	803146c <atan2f>
 80136a6:	eddf 7a5c 	vldr	s15, [pc, #368]	@ 8013818 <fill_arc.isra.7+0x3c0>
 80136aa:	ee60 8a27 	vmul.f32	s17, s0, s15
 80136ae:	ee29 9a27 	vmul.f32	s18, s18, s15
 80136b2:	ee78 7ac9 	vsub.f32	s15, s17, s18
 80136b6:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80136ba:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80136be:	bf48      	it	mi
 80136c0:	eddf 6a53 	vldrmi	s13, [pc, #332]	@ 8013810 <fill_arc.isra.7+0x3b8>
 80136c4:	eddf 5a53 	vldr	s11, [pc, #332]	@ 8013814 <fill_arc.isra.7+0x3bc>
 80136c8:	bf48      	it	mi
 80136ca:	ee77 7aa6 	vaddmi.f32	s15, s15, s13
 80136ce:	eef4 7ae5 	vcmpe.f32	s15, s11
 80136d2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80136d6:	f005 0640 	and.w	r6, r5, #64	@ 0x40
 80136da:	f3c5 1380 	ubfx	r3, r5, #6, #1
 80136de:	ed9d 7a01 	vldr	s14, [sp, #4]
 80136e2:	f3c5 1540 	ubfx	r5, r5, #5, #1
 80136e6:	f140 80ab 	bpl.w	8013840 <fill_arc.isra.7+0x3e8>
 80136ea:	429d      	cmp	r5, r3
 80136ec:	f000 8130 	beq.w	8013950 <fill_arc.isra.7+0x4f8>
 80136f0:	ee28 aa0a 	vmul.f32	s20, s16, s20
 80136f4:	ee69 aaaa 	vmul.f32	s21, s19, s21
 80136f8:	ee6c 7a0a 	vmul.f32	s15, s24, s20
 80136fc:	ee2b aa0a 	vmul.f32	s20, s22, s20
 8013700:	ee2b ba2a 	vmul.f32	s22, s22, s21
 8013704:	ee6c aa2a 	vmul.f32	s21, s24, s21
 8013708:	ee37 bacb 	vsub.f32	s22, s15, s22
 801370c:	ee7a aa2a 	vadd.f32	s21, s20, s21
 8013710:	eeb4 9ae8 	vcmpe.f32	s18, s17
 8013714:	2e00      	cmp	r6, #0
 8013716:	f000 8088 	beq.w	801382a <fill_arc.isra.7+0x3d2>
 801371a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801371e:	dd03      	ble.n	8013728 <fill_arc.isra.7+0x2d0>
 8013720:	eddf 7a3b 	vldr	s15, [pc, #236]	@ 8013810 <fill_arc.isra.7+0x3b8>
 8013724:	ee78 8aa7 	vadd.f32	s17, s17, s15
 8013728:	2e00      	cmp	r6, #0
 801372a:	f040 80ab 	bne.w	8013884 <fill_arc.isra.7+0x42c>
 801372e:	eef4 8ac9 	vcmpe.f32	s17, s18
 8013732:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013736:	f77f af0b 	ble.w	8013550 <fill_arc.isra.7+0xf8>
 801373a:	2101      	movs	r1, #1
 801373c:	eddf ba37 	vldr	s23, [pc, #220]	@ 801381c <fill_arc.isra.7+0x3c4>
 8013740:	e01a      	b.n	8013778 <fill_arc.isra.7+0x320>
 8013742:	eef0 0a49 	vmov.f32	s1, s18
 8013746:	d801      	bhi.n	801374c <fill_arc.isra.7+0x2f4>
 8013748:	3102      	adds	r1, #2
 801374a:	b2c9      	uxtb	r1, r1
 801374c:	eeb0 0a68 	vmov.f32	s0, s17
 8013750:	eef0 2a69 	vmov.f32	s5, s19
 8013754:	eeb0 2a48 	vmov.f32	s4, s16
 8013758:	eef0 1a6a 	vmov.f32	s3, s21
 801375c:	eeb0 1a4b 	vmov.f32	s2, s22
 8013760:	4620      	mov	r0, r4
 8013762:	f7ff fc59 	bl	8013018 <render_arc.isra.6>
 8013766:	eeb4 aac9 	vcmpe.f32	s20, s18
 801376a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801376e:	f77f aeef 	ble.w	8013550 <fill_arc.isra.7+0xf8>
 8013772:	eef0 8a4a 	vmov.f32	s17, s20
 8013776:	2100      	movs	r1, #0
 8013778:	ee38 aaeb 	vsub.f32	s20, s17, s23
 801377c:	eeb4 aac9 	vcmpe.f32	s20, s18
 8013780:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013784:	dddd      	ble.n	8013742 <fill_arc.isra.7+0x2ea>
 8013786:	d822      	bhi.n	80137ce <fill_arc.isra.7+0x376>
 8013788:	eef0 0a4a 	vmov.f32	s1, s20
 801378c:	e7dc      	b.n	8013748 <fill_arc.isra.7+0x2f0>
 801378e:	6a93      	ldr	r3, [r2, #40]	@ 0x28
 8013790:	491b      	ldr	r1, [pc, #108]	@ (8013800 <fill_arc.isra.7+0x3a8>)
 8013792:	2b00      	cmp	r3, #0
 8013794:	bf18      	it	ne
 8013796:	f04f 63f0 	movne.w	r3, #125829120	@ 0x7800000
 801379a:	6ad4      	ldr	r4, [r2, #44]	@ 0x2c
 801379c:	780a      	ldrb	r2, [r1, #0]
 801379e:	401c      	ands	r4, r3
 80137a0:	2a01      	cmp	r2, #1
 80137a2:	d103      	bne.n	80137ac <fill_arc.isra.7+0x354>
 80137a4:	684b      	ldr	r3, [r1, #4]
 80137a6:	f003 4340 	and.w	r3, r3, #3221225472	@ 0xc0000000
 80137aa:	431c      	orrs	r4, r3
 80137ac:	2005      	movs	r0, #5
 80137ae:	f00a fbf9 	bl	801dfa4 <nema_cl_get_space>
 80137b2:	2800      	cmp	r0, #0
 80137b4:	f43f aecc 	beq.w	8013550 <fill_arc.isra.7+0xf8>
 80137b8:	f44f 7648 	mov.w	r6, #800	@ 0x320
 80137bc:	f44f 7549 	mov.w	r5, #804	@ 0x324
 80137c0:	f44f 714c 	mov.w	r1, #816	@ 0x330
 80137c4:	f44f 724d 	mov.w	r2, #820	@ 0x334
 80137c8:	f044 040a 	orr.w	r4, r4, #10
 80137cc:	e6b1      	b.n	8013532 <fill_arc.isra.7+0xda>
 80137ce:	eeb0 0a68 	vmov.f32	s0, s17
 80137d2:	eef0 2a69 	vmov.f32	s5, s19
 80137d6:	eeb0 2a48 	vmov.f32	s4, s16
 80137da:	eef0 1a6a 	vmov.f32	s3, s21
 80137de:	eeb0 1a4b 	vmov.f32	s2, s22
 80137e2:	eef0 0a4a 	vmov.f32	s1, s20
 80137e6:	4620      	mov	r0, r4
 80137e8:	f7ff fc16 	bl	8013018 <render_arc.isra.6>
 80137ec:	e7c1      	b.n	8013772 <fill_arc.isra.7+0x31a>
 80137ee:	bf00      	nop
 80137f0:	3727c5ac 	.word	0x3727c5ac
 80137f4:	b727c5ac 	.word	0xb727c5ac
 80137f8:	20083148 	.word	0x20083148
 80137fc:	2008314c 	.word	0x2008314c
 8013800:	20000064 	.word	0x20000064
 8013804:	ff000100 	.word	0xff000100
 8013808:	20083150 	.word	0x20083150
 801380c:	3c8efa35 	.word	0x3c8efa35
 8013810:	43b40000 	.word	0x43b40000
 8013814:	43340000 	.word	0x43340000
 8013818:	42652ee1 	.word	0x42652ee1
 801381c:	42b40000 	.word	0x42b40000
 8013820:	00000000 	.word	0x00000000
 8013824:	eeb1 8a48 	vneg.f32	s16, s16
 8013828:	e647      	b.n	80134ba <fill_arc.isra.7+0x62>
 801382a:	eef0 7a49 	vmov.f32	s15, s18
 801382e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013832:	eeb0 9a68 	vmov.f32	s18, s17
 8013836:	eef0 8a67 	vmov.f32	s17, s15
 801383a:	f53f af71 	bmi.w	8013720 <fill_arc.isra.7+0x2c8>
 801383e:	e776      	b.n	801372e <fill_arc.isra.7+0x2d6>
 8013840:	db02      	blt.n	8013848 <fill_arc.isra.7+0x3f0>
 8013842:	429d      	cmp	r5, r3
 8013844:	f43f af54 	beq.w	80136f0 <fill_arc.isra.7+0x298>
 8013848:	ee77 aa2b 	vadd.f32	s21, s14, s23
 801384c:	ee3f aa6e 	vsub.f32	s20, s30, s29
 8013850:	ee3c 0aea 	vsub.f32	s0, s25, s21
 8013854:	ee7d 0a4a 	vsub.f32	s1, s26, s20
 8013858:	f01d fe08 	bl	803146c <atan2f>
 801385c:	ed5f 8a12 	vldr	s17, [pc, #-72]	@ 8013818 <fill_arc.isra.7+0x3c0>
 8013860:	ee7e 0a4a 	vsub.f32	s1, s28, s20
 8013864:	ee20 9a28 	vmul.f32	s18, s0, s17
 8013868:	ee3d 0aea 	vsub.f32	s0, s27, s21
 801386c:	f01d fdfe 	bl	803146c <atan2f>
 8013870:	ee60 8a28 	vmul.f32	s17, s0, s17
 8013874:	e73c      	b.n	80136f0 <fill_arc.isra.7+0x298>
 8013876:	f44f 7080 	mov.w	r0, #256	@ 0x100
 801387a:	f009 fa3b 	bl	801ccf4 <nema_vg_set_error>
 801387e:	f44f 7080 	mov.w	r0, #256	@ 0x100
 8013882:	e666      	b.n	8013552 <fill_arc.isra.7+0xfa>
 8013884:	eeb4 9ae8 	vcmpe.f32	s18, s17
 8013888:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801388c:	f57f ae60 	bpl.w	8013550 <fill_arc.isra.7+0xf8>
 8013890:	2101      	movs	r1, #1
 8013892:	ed5f ba1e 	vldr	s23, [pc, #-120]	@ 801381c <fill_arc.isra.7+0x3c4>
 8013896:	e01a      	b.n	80138ce <fill_arc.isra.7+0x476>
 8013898:	eef0 0a68 	vmov.f32	s1, s17
 801389c:	db01      	blt.n	80138a2 <fill_arc.isra.7+0x44a>
 801389e:	3102      	adds	r1, #2
 80138a0:	b2c9      	uxtb	r1, r1
 80138a2:	eeb0 0a49 	vmov.f32	s0, s18
 80138a6:	eef0 2a69 	vmov.f32	s5, s19
 80138aa:	eeb0 2a48 	vmov.f32	s4, s16
 80138ae:	eef0 1a6a 	vmov.f32	s3, s21
 80138b2:	eeb0 1a4b 	vmov.f32	s2, s22
 80138b6:	4620      	mov	r0, r4
 80138b8:	f7ff fbae 	bl	8013018 <render_arc.isra.6>
 80138bc:	eeb4 aae8 	vcmpe.f32	s20, s17
 80138c0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80138c4:	f57f ae44 	bpl.w	8013550 <fill_arc.isra.7+0xf8>
 80138c8:	eeb0 9a4a 	vmov.f32	s18, s20
 80138cc:	2100      	movs	r1, #0
 80138ce:	ee39 aa2b 	vadd.f32	s20, s18, s23
 80138d2:	eeb4 aae8 	vcmpe.f32	s20, s17
 80138d6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80138da:	d5dd      	bpl.n	8013898 <fill_arc.isra.7+0x440>
 80138dc:	db02      	blt.n	80138e4 <fill_arc.isra.7+0x48c>
 80138de:	eef0 0a4a 	vmov.f32	s1, s20
 80138e2:	e7dc      	b.n	801389e <fill_arc.isra.7+0x446>
 80138e4:	eeb0 0a49 	vmov.f32	s0, s18
 80138e8:	eef0 2a69 	vmov.f32	s5, s19
 80138ec:	eeb0 2a48 	vmov.f32	s4, s16
 80138f0:	eef0 1a6a 	vmov.f32	s3, s21
 80138f4:	eeb0 1a4b 	vmov.f32	s2, s22
 80138f8:	eef0 0a4a 	vmov.f32	s1, s20
 80138fc:	4620      	mov	r0, r4
 80138fe:	f7ff fb8b 	bl	8013018 <render_arc.isra.6>
 8013902:	e7e1      	b.n	80138c8 <fill_arc.isra.7+0x470>
 8013904:	ee67 7aa5 	vmul.f32	s15, s15, s11
 8013908:	eef5 7a40 	vcmp.f32	s15, #0.0
 801390c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013910:	eeb1 9ae7 	vsqrt.f32	s18, s15
 8013914:	d42a      	bmi.n	801396c <fill_arc.isra.7+0x514>
 8013916:	ee28 8a09 	vmul.f32	s16, s16, s18
 801391a:	ee69 9a89 	vmul.f32	s19, s19, s18
 801391e:	ee8f da88 	vdiv.f32	s26, s31, s16
 8013922:	eec8 daa9 	vdiv.f32	s27, s17, s19
 8013926:	ee8a ea88 	vdiv.f32	s28, s21, s16
 801392a:	eeca ca29 	vdiv.f32	s25, s20, s19
 801392e:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 8013932:	ee3d 6a0e 	vadd.f32	s12, s26, s28
 8013936:	ee3c 7aad 	vadd.f32	s14, s25, s27
 801393a:	ee26 fa27 	vmul.f32	s30, s12, s15
 801393e:	ee27 7a27 	vmul.f32	s14, s14, s15
 8013942:	ee7d ba4e 	vsub.f32	s23, s26, s28
 8013946:	ee7c eaed 	vsub.f32	s29, s25, s27
 801394a:	ed5f 8a4b 	vldr	s17, [pc, #-300]	@ 8013820 <fill_arc.isra.7+0x3c8>
 801394e:	e692      	b.n	8013676 <fill_arc.isra.7+0x21e>
 8013950:	eef4 7ae5 	vcmpe.f32	s15, s11
 8013954:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013958:	f6bf aeca 	bge.w	80136f0 <fill_arc.isra.7+0x298>
 801395c:	e774      	b.n	8013848 <fill_arc.isra.7+0x3f0>
 801395e:	ed8d 7a01 	vstr	s14, [sp, #4]
 8013962:	f01d fda5 	bl	80314b0 <sqrtf>
 8013966:	ed9d 7a01 	vldr	s14, [sp, #4]
 801396a:	e684      	b.n	8013676 <fill_arc.isra.7+0x21e>
 801396c:	eeb0 0a67 	vmov.f32	s0, s15
 8013970:	f01d fd9e 	bl	80314b0 <sqrtf>
 8013974:	e7cf      	b.n	8013916 <fill_arc.isra.7+0x4be>
 8013976:	bf00      	nop

08013978 <stroke_thin_path>:
 8013978:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801397c:	ed2d 8b0c 	vpush	{d8-d13}
 8013980:	4682      	mov	sl, r0
 8013982:	b097      	sub	sp, #92	@ 0x5c
 8013984:	2248      	movs	r2, #72	@ 0x48
 8013986:	a804      	add	r0, sp, #16
 8013988:	2100      	movs	r1, #0
 801398a:	2400      	movs	r4, #0
 801398c:	f01f f8fb 	bl	8032b86 <memset>
 8013990:	2201      	movs	r2, #1
 8013992:	f8da 3000 	ldr.w	r3, [sl]
 8013996:	f88d 2010 	strb.w	r2, [sp, #16]
 801399a:	42a3      	cmp	r3, r4
 801399c:	f88d 2012 	strb.w	r2, [sp, #18]
 80139a0:	f8df b344 	ldr.w	fp, [pc, #836]	@ 8013ce8 <stroke_thin_path+0x370>
 80139a4:	ed9f 8aca 	vldr	s16, [pc, #808]	@ 8013cd0 <stroke_thin_path+0x358>
 80139a8:	f240 8092 	bls.w	8013ad0 <stroke_thin_path+0x158>
 80139ac:	f8da 2008 	ldr.w	r2, [sl, #8]
 80139b0:	f10d 0824 	add.w	r8, sp, #36	@ 0x24
 80139b4:	5d15      	ldrb	r5, [r2, r4]
 80139b6:	af07      	add	r7, sp, #28
 80139b8:	f005 066f 	and.w	r6, r5, #111	@ 0x6f
 80139bc:	f005 0210 	and.w	r2, r5, #16
 80139c0:	2e01      	cmp	r6, #1
 80139c2:	e898 0003 	ldmia.w	r8, {r0, r1}
 80139c6:	f104 0901 	add.w	r9, r4, #1
 80139ca:	9200      	str	r2, [sp, #0]
 80139cc:	e887 0003 	stmia.w	r7, {r0, r1}
 80139d0:	f000 809d 	beq.w	8013b0e <stroke_thin_path+0x196>
 80139d4:	066a      	lsls	r2, r5, #25
 80139d6:	f000 8082 	beq.w	8013ade <stroke_thin_path+0x166>
 80139da:	9905      	ldr	r1, [sp, #20]
 80139dc:	f89d c054 	ldrb.w	ip, [sp, #84]	@ 0x54
 80139e0:	b911      	cbnz	r1, 80139e8 <stroke_thin_path+0x70>
 80139e2:	2301      	movs	r3, #1
 80139e4:	f88d 3010 	strb.w	r3, [sp, #16]
 80139e8:	2200      	movs	r2, #0
 80139ea:	f8da 300c 	ldr.w	r3, [sl, #12]
 80139ee:	0088      	lsls	r0, r1, #2
 80139f0:	181c      	adds	r4, r3, r0
 80139f2:	9001      	str	r0, [sp, #4]
 80139f4:	2e06      	cmp	r6, #6
 80139f6:	f101 0001 	add.w	r0, r1, #1
 80139fa:	f88d 2012 	strb.w	r2, [sp, #18]
 80139fe:	46a6      	mov	lr, r4
 8013a00:	4602      	mov	r2, r0
 8013a02:	f000 81ca 	beq.w	8013d9a <stroke_thin_path+0x422>
 8013a06:	2e05      	cmp	r6, #5
 8013a08:	f000 8295 	beq.w	8013f36 <stroke_thin_path+0x5be>
 8013a0c:	2e07      	cmp	r6, #7
 8013a0e:	f00c 0c6f 	and.w	ip, ip, #111	@ 0x6f
 8013a12:	f000 8315 	beq.w	8014040 <stroke_thin_path+0x6c8>
 8013a16:	2e08      	cmp	r6, #8
 8013a18:	f000 83be 	beq.w	8014198 <stroke_thin_path+0x820>
 8013a1c:	f005 0c0f 	and.w	ip, r5, #15
 8013a20:	f1bc 0f09 	cmp.w	ip, #9
 8013a24:	f000 84f7 	beq.w	8014416 <stroke_thin_path+0xa9e>
 8013a28:	2e04      	cmp	r6, #4
 8013a2a:	f040 8205 	bne.w	8013e38 <stroke_thin_path+0x4c0>
 8013a2e:	eddd 6a0f 	vldr	s13, [sp, #60]	@ 0x3c
 8013a32:	edcd 6a09 	vstr	s13, [sp, #36]	@ 0x24
 8013a36:	9b00      	ldr	r3, [sp, #0]
 8013a38:	9005      	str	r0, [sp, #20]
 8013a3a:	edde 7a00 	vldr	s15, [lr]
 8013a3e:	2b00      	cmp	r3, #0
 8013a40:	f000 8266 	beq.w	8013f10 <stroke_thin_path+0x598>
 8013a44:	ed9d 7a10 	vldr	s14, [sp, #64]	@ 0x40
 8013a48:	ee77 7a27 	vadd.f32	s15, s14, s15
 8013a4c:	edcd 7a0a 	vstr	s15, [sp, #40]	@ 0x28
 8013a50:	f8db 3000 	ldr.w	r3, [fp]
 8013a54:	7f1b      	ldrb	r3, [r3, #28]
 8013a56:	2b00      	cmp	r3, #0
 8013a58:	f000 8148 	beq.w	8013cec <stroke_thin_path+0x374>
 8013a5c:	ed9d 7a13 	vldr	s14, [sp, #76]	@ 0x4c
 8013a60:	ee36 7ac7 	vsub.f32	s14, s13, s14
 8013a64:	eeb5 7a40 	vcmp.f32	s14, #0.0
 8013a68:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013a6c:	d109      	bne.n	8013a82 <stroke_thin_path+0x10a>
 8013a6e:	ed9d 7a14 	vldr	s14, [sp, #80]	@ 0x50
 8013a72:	ee37 7ac7 	vsub.f32	s14, s15, s14
 8013a76:	eeb5 7a40 	vcmp.f32	s14, #0.0
 8013a7a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013a7e:	f000 828e 	beq.w	8013f9e <stroke_thin_path+0x626>
 8013a82:	2301      	movs	r3, #1
 8013a84:	f88d 3011 	strb.w	r3, [sp, #17]
 8013a88:	f89d 3012 	ldrb.w	r3, [sp, #18]
 8013a8c:	edcd 6a0f 	vstr	s13, [sp, #60]	@ 0x3c
 8013a90:	edcd 7a10 	vstr	s15, [sp, #64]	@ 0x40
 8013a94:	f88d 5054 	strb.w	r5, [sp, #84]	@ 0x54
 8013a98:	b9a3      	cbnz	r3, 8013ac4 <stroke_thin_path+0x14c>
 8013a9a:	062b      	lsls	r3, r5, #24
 8013a9c:	d412      	bmi.n	8013ac4 <stroke_thin_path+0x14c>
 8013a9e:	f005 036d 	and.w	r3, r5, #109	@ 0x6d
 8013aa2:	2b05      	cmp	r3, #5
 8013aa4:	d072      	beq.n	8013b8c <stroke_thin_path+0x214>
 8013aa6:	2e06      	cmp	r6, #6
 8013aa8:	f000 8126 	beq.w	8013cf8 <stroke_thin_path+0x380>
 8013aac:	2e08      	cmp	r6, #8
 8013aae:	f000 8123 	beq.w	8013cf8 <stroke_thin_path+0x380>
 8013ab2:	f005 050f 	and.w	r5, r5, #15
 8013ab6:	2d09      	cmp	r5, #9
 8013ab8:	f000 8440 	beq.w	801433c <stroke_thin_path+0x9c4>
 8013abc:	3e0a      	subs	r6, #10
 8013abe:	2e01      	cmp	r6, #1
 8013ac0:	f200 834c 	bhi.w	801415c <stroke_thin_path+0x7e4>
 8013ac4:	464c      	mov	r4, r9
 8013ac6:	f8da 3000 	ldr.w	r3, [sl]
 8013aca:	42a3      	cmp	r3, r4
 8013acc:	f63f af6e 	bhi.w	80139ac <stroke_thin_path+0x34>
 8013ad0:	2500      	movs	r5, #0
 8013ad2:	4628      	mov	r0, r5
 8013ad4:	b017      	add	sp, #92	@ 0x5c
 8013ad6:	ecbd 8b0c 	vpop	{d8-d13}
 8013ada:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013ade:	f89d 3010 	ldrb.w	r3, [sp, #16]
 8013ae2:	f88d 5054 	strb.w	r5, [sp, #84]	@ 0x54
 8013ae6:	2b01      	cmp	r3, #1
 8013ae8:	bf04      	itt	eq
 8013aea:	ee18 2a10 	vmoveq	r2, s16
 8013aee:	ee18 1a10 	vmoveq	r1, s16
 8013af2:	f04f 0300 	mov.w	r3, #0
 8013af6:	bf1c      	itt	ne
 8013af8:	9913      	ldrne	r1, [sp, #76]	@ 0x4c
 8013afa:	9a14      	ldrne	r2, [sp, #80]	@ 0x50
 8013afc:	9109      	str	r1, [sp, #36]	@ 0x24
 8013afe:	920a      	str	r2, [sp, #40]	@ 0x28
 8013b00:	910f      	str	r1, [sp, #60]	@ 0x3c
 8013b02:	9210      	str	r2, [sp, #64]	@ 0x40
 8013b04:	f88d 3012 	strb.w	r3, [sp, #18]
 8013b08:	f88d 3011 	strb.w	r3, [sp, #17]
 8013b0c:	e7c5      	b.n	8013a9a <stroke_thin_path+0x122>
 8013b0e:	f89d 1011 	ldrb.w	r1, [sp, #17]
 8013b12:	9a05      	ldr	r2, [sp, #20]
 8013b14:	2901      	cmp	r1, #1
 8013b16:	f000 808d 	beq.w	8013c34 <stroke_thin_path+0x2bc>
 8013b1a:	2401      	movs	r4, #1
 8013b1c:	2600      	movs	r6, #0
 8013b1e:	0090      	lsls	r0, r2, #2
 8013b20:	f8da 100c 	ldr.w	r1, [sl, #12]
 8013b24:	1d07      	adds	r7, r0, #4
 8013b26:	440f      	add	r7, r1
 8013b28:	f88d 4012 	strb.w	r4, [sp, #18]
 8013b2c:	4401      	add	r1, r0
 8013b2e:	1910      	adds	r0, r2, r4
 8013b30:	9c00      	ldr	r4, [sp, #0]
 8013b32:	9206      	str	r2, [sp, #24]
 8013b34:	f88d 6010 	strb.w	r6, [sp, #16]
 8013b38:	3202      	adds	r2, #2
 8013b3a:	9005      	str	r0, [sp, #20]
 8013b3c:	b1e4      	cbz	r4, 8013b78 <stroke_thin_path+0x200>
 8013b3e:	edd1 7a00 	vldr	s15, [r1]
 8013b42:	eddd 6a0f 	vldr	s13, [sp, #60]	@ 0x3c
 8013b46:	ee76 6aa7 	vadd.f32	s13, s13, s15
 8013b4a:	9205      	str	r2, [sp, #20]
 8013b4c:	edcd 6a09 	vstr	s13, [sp, #36]	@ 0x24
 8013b50:	edd7 7a00 	vldr	s15, [r7]
 8013b54:	ed9d 7a10 	vldr	s14, [sp, #64]	@ 0x40
 8013b58:	ee77 7a27 	vadd.f32	s15, s14, s15
 8013b5c:	edcd 7a0a 	vstr	s15, [sp, #40]	@ 0x28
 8013b60:	edcd 6a13 	vstr	s13, [sp, #76]	@ 0x4c
 8013b64:	edcd 7a14 	vstr	s15, [sp, #80]	@ 0x50
 8013b68:	edcd 6a0f 	vstr	s13, [sp, #60]	@ 0x3c
 8013b6c:	edcd 7a10 	vstr	s15, [sp, #64]	@ 0x40
 8013b70:	f88d 5054 	strb.w	r5, [sp, #84]	@ 0x54
 8013b74:	464c      	mov	r4, r9
 8013b76:	e7a8      	b.n	8013aca <stroke_thin_path+0x152>
 8013b78:	edd1 6a00 	vldr	s13, [r1]
 8013b7c:	9205      	str	r2, [sp, #20]
 8013b7e:	edcd 6a09 	vstr	s13, [sp, #36]	@ 0x24
 8013b82:	edd7 7a00 	vldr	s15, [r7]
 8013b86:	edcd 7a0a 	vstr	s15, [sp, #40]	@ 0x28
 8013b8a:	e7e9      	b.n	8013b60 <stroke_thin_path+0x1e8>
 8013b8c:	f8db 3000 	ldr.w	r3, [fp]
 8013b90:	eddd aa0b 	vldr	s21, [sp, #44]	@ 0x2c
 8013b94:	7f1a      	ldrb	r2, [r3, #28]
 8013b96:	ed9d aa0c 	vldr	s20, [sp, #48]	@ 0x30
 8013b9a:	ed9d ca07 	vldr	s24, [sp, #28]
 8013b9e:	eddd ba08 	vldr	s23, [sp, #32]
 8013ba2:	eddd 9a09 	vldr	s19, [sp, #36]	@ 0x24
 8013ba6:	ed9d 9a0a 	vldr	s18, [sp, #40]	@ 0x28
 8013baa:	2a00      	cmp	r2, #0
 8013bac:	f040 81df 	bne.w	8013f6e <stroke_thin_path+0x5f6>
 8013bb0:	4a48      	ldr	r2, [pc, #288]	@ (8013cd4 <stroke_thin_path+0x35c>)
 8013bb2:	6816      	ldr	r6, [r2, #0]
 8013bb4:	2e01      	cmp	r6, #1
 8013bb6:	f000 8319 	beq.w	80141ec <stroke_thin_path+0x874>
 8013bba:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
 8013bbc:	2508      	movs	r5, #8
 8013bbe:	b10a      	cbz	r2, 8013bc4 <stroke_thin_path+0x24c>
 8013bc0:	f04f 62f0 	mov.w	r2, #125829120	@ 0x7800000
 8013bc4:	6adc      	ldr	r4, [r3, #44]	@ 0x2c
 8013bc6:	4b44      	ldr	r3, [pc, #272]	@ (8013cd8 <stroke_thin_path+0x360>)
 8013bc8:	4014      	ands	r4, r2
 8013bca:	7819      	ldrb	r1, [r3, #0]
 8013bcc:	2901      	cmp	r1, #1
 8013bce:	d103      	bne.n	8013bd8 <stroke_thin_path+0x260>
 8013bd0:	685b      	ldr	r3, [r3, #4]
 8013bd2:	f003 4340 	and.w	r3, r3, #3221225472	@ 0xc0000000
 8013bd6:	431c      	orrs	r4, r3
 8013bd8:	2007      	movs	r0, #7
 8013bda:	f00a f9e3 	bl	801dfa4 <nema_cl_get_space>
 8013bde:	2800      	cmp	r0, #0
 8013be0:	f43f af70 	beq.w	8013ac4 <stroke_thin_path+0x14c>
 8013be4:	f44f 7e48 	mov.w	lr, #800	@ 0x320
 8013be8:	f44f 7c49 	mov.w	ip, #804	@ 0x324
 8013bec:	f44f 774c 	mov.w	r7, #816	@ 0x330
 8013bf0:	f44f 764d 	mov.w	r6, #820	@ 0x334
 8013bf4:	f44f 7150 	mov.w	r1, #832	@ 0x340
 8013bf8:	f44f 7251 	mov.w	r2, #836	@ 0x344
 8013bfc:	ed80 ca01 	vstr	s24, [r0, #4]
 8013c00:	edc0 ba03 	vstr	s23, [r0, #12]
 8013c04:	edc0 aa05 	vstr	s21, [r0, #20]
 8013c08:	ed80 aa07 	vstr	s20, [r0, #28]
 8013c0c:	edc0 9a09 	vstr	s19, [r0, #36]	@ 0x24
 8013c10:	ed80 9a0b 	vstr	s18, [r0, #44]	@ 0x2c
 8013c14:	4b31      	ldr	r3, [pc, #196]	@ (8013cdc <stroke_thin_path+0x364>)
 8013c16:	432c      	orrs	r4, r5
 8013c18:	6344      	str	r4, [r0, #52]	@ 0x34
 8013c1a:	f8c0 e000 	str.w	lr, [r0]
 8013c1e:	f8c0 c008 	str.w	ip, [r0, #8]
 8013c22:	6107      	str	r7, [r0, #16]
 8013c24:	6186      	str	r6, [r0, #24]
 8013c26:	6201      	str	r1, [r0, #32]
 8013c28:	6282      	str	r2, [r0, #40]	@ 0x28
 8013c2a:	6303      	str	r3, [r0, #48]	@ 0x30
 8013c2c:	f8da 3000 	ldr.w	r3, [sl]
 8013c30:	464c      	mov	r4, r9
 8013c32:	e74a      	b.n	8013aca <stroke_thin_path+0x152>
 8013c34:	2a00      	cmp	r2, #0
 8013c36:	f43f af70 	beq.w	8013b1a <stroke_thin_path+0x1a2>
 8013c3a:	f8db 1000 	ldr.w	r1, [fp]
 8013c3e:	7f09      	ldrb	r1, [r1, #28]
 8013c40:	2900      	cmp	r1, #0
 8013c42:	f43f af6a 	beq.w	8013b1a <stroke_thin_path+0x1a2>
 8013c46:	f89d 3010 	ldrb.w	r3, [sp, #16]
 8013c4a:	2b00      	cmp	r3, #0
 8013c4c:	f040 83c0 	bne.w	80143d0 <stroke_thin_path+0xa58>
 8013c50:	f8dd 804c 	ldr.w	r8, [sp, #76]	@ 0x4c
 8013c54:	9f14      	ldr	r7, [sp, #80]	@ 0x50
 8013c56:	4a22      	ldr	r2, [pc, #136]	@ (8013ce0 <stroke_thin_path+0x368>)
 8013c58:	4b22      	ldr	r3, [pc, #136]	@ (8013ce4 <stroke_thin_path+0x36c>)
 8013c5a:	2007      	movs	r0, #7
 8013c5c:	6816      	ldr	r6, [r2, #0]
 8013c5e:	681c      	ldr	r4, [r3, #0]
 8013c60:	f00a f9a0 	bl	801dfa4 <nema_cl_get_space>
 8013c64:	2800      	cmp	r0, #0
 8013c66:	d02e      	beq.n	8013cc6 <stroke_thin_path+0x34e>
 8013c68:	4a1b      	ldr	r2, [pc, #108]	@ (8013cd8 <stroke_thin_path+0x360>)
 8013c6a:	f8db 3000 	ldr.w	r3, [fp]
 8013c6e:	7811      	ldrb	r1, [r2, #0]
 8013c70:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8013c72:	2901      	cmp	r1, #1
 8013c74:	f002 62f0 	and.w	r2, r2, #125829120	@ 0x7800000
 8013c78:	d104      	bne.n	8013c84 <stroke_thin_path+0x30c>
 8013c7a:	4b17      	ldr	r3, [pc, #92]	@ (8013cd8 <stroke_thin_path+0x360>)
 8013c7c:	685b      	ldr	r3, [r3, #4]
 8013c7e:	f003 4340 	and.w	r3, r3, #3221225472	@ 0xc0000000
 8013c82:	431a      	orrs	r2, r3
 8013c84:	f44f 7348 	mov.w	r3, #800	@ 0x320
 8013c88:	f44f 7149 	mov.w	r1, #804	@ 0x324
 8013c8c:	6003      	str	r3, [r0, #0]
 8013c8e:	9b07      	ldr	r3, [sp, #28]
 8013c90:	6081      	str	r1, [r0, #8]
 8013c92:	6043      	str	r3, [r0, #4]
 8013c94:	9b08      	ldr	r3, [sp, #32]
 8013c96:	f44f 7c4c 	mov.w	ip, #816	@ 0x330
 8013c9a:	61c7      	str	r7, [r0, #28]
 8013c9c:	60c3      	str	r3, [r0, #12]
 8013c9e:	f44f 774d 	mov.w	r7, #820	@ 0x334
 8013ca2:	f44f 71a0 	mov.w	r1, #320	@ 0x140
 8013ca6:	f44f 73a2 	mov.w	r3, #324	@ 0x144
 8013caa:	f042 0204 	orr.w	r2, r2, #4
 8013cae:	6342      	str	r2, [r0, #52]	@ 0x34
 8013cb0:	4a0a      	ldr	r2, [pc, #40]	@ (8013cdc <stroke_thin_path+0x364>)
 8013cb2:	f8c0 8014 	str.w	r8, [r0, #20]
 8013cb6:	6246      	str	r6, [r0, #36]	@ 0x24
 8013cb8:	62c4      	str	r4, [r0, #44]	@ 0x2c
 8013cba:	f8c0 c010 	str.w	ip, [r0, #16]
 8013cbe:	6187      	str	r7, [r0, #24]
 8013cc0:	6201      	str	r1, [r0, #32]
 8013cc2:	6283      	str	r3, [r0, #40]	@ 0x28
 8013cc4:	6302      	str	r2, [r0, #48]	@ 0x30
 8013cc6:	9a05      	ldr	r2, [sp, #20]
 8013cc8:	f8da 3000 	ldr.w	r3, [sl]
 8013ccc:	e725      	b.n	8013b1a <stroke_thin_path+0x1a2>
 8013cce:	bf00      	nop
 8013cd0:	00000000 	.word	0x00000000
 8013cd4:	20083150 	.word	0x20083150
 8013cd8:	20000064 	.word	0x20000064
 8013cdc:	ff000100 	.word	0xff000100
 8013ce0:	20083154 	.word	0x20083154
 8013ce4:	20083158 	.word	0x20083158
 8013ce8:	20083148 	.word	0x20083148
 8013cec:	2201      	movs	r2, #1
 8013cee:	f89d 3012 	ldrb.w	r3, [sp, #18]
 8013cf2:	f88d 2011 	strb.w	r2, [sp, #17]
 8013cf6:	e6c9      	b.n	8013a8c <stroke_thin_path+0x114>
 8013cf8:	f8db 3000 	ldr.w	r3, [fp]
 8013cfc:	7f1a      	ldrb	r2, [r3, #28]
 8013cfe:	2a00      	cmp	r2, #0
 8013d00:	f040 8244 	bne.w	801418c <stroke_thin_path+0x814>
 8013d04:	4aa9      	ldr	r2, [pc, #676]	@ (8013fac <stroke_thin_path+0x634>)
 8013d06:	6814      	ldr	r4, [r2, #0]
 8013d08:	2c01      	cmp	r4, #1
 8013d0a:	f000 83e7 	beq.w	80144dc <stroke_thin_path+0xb64>
 8013d0e:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
 8013d10:	2509      	movs	r5, #9
 8013d12:	2a00      	cmp	r2, #0
 8013d14:	f040 8140 	bne.w	8013f98 <stroke_thin_path+0x620>
 8013d18:	6adc      	ldr	r4, [r3, #44]	@ 0x2c
 8013d1a:	4ba5      	ldr	r3, [pc, #660]	@ (8013fb0 <stroke_thin_path+0x638>)
 8013d1c:	4014      	ands	r4, r2
 8013d1e:	7819      	ldrb	r1, [r3, #0]
 8013d20:	2901      	cmp	r1, #1
 8013d22:	d103      	bne.n	8013d2c <stroke_thin_path+0x3b4>
 8013d24:	685b      	ldr	r3, [r3, #4]
 8013d26:	f003 4340 	and.w	r3, r3, #3221225472	@ 0xc0000000
 8013d2a:	431c      	orrs	r4, r3
 8013d2c:	2009      	movs	r0, #9
 8013d2e:	f00a f939 	bl	801dfa4 <nema_cl_get_space>
 8013d32:	2800      	cmp	r0, #0
 8013d34:	f43f aec6 	beq.w	8013ac4 <stroke_thin_path+0x14c>
 8013d38:	f44f 7248 	mov.w	r2, #800	@ 0x320
 8013d3c:	f44f 7c49 	mov.w	ip, #804	@ 0x324
 8013d40:	f44f 774c 	mov.w	r7, #816	@ 0x330
 8013d44:	f44f 764d 	mov.w	r6, #820	@ 0x334
 8013d48:	f44f 7150 	mov.w	r1, #832	@ 0x340
 8013d4c:	f44f 7351 	mov.w	r3, #836	@ 0x344
 8013d50:	6002      	str	r2, [r0, #0]
 8013d52:	9a07      	ldr	r2, [sp, #28]
 8013d54:	f8c0 c008 	str.w	ip, [r0, #8]
 8013d58:	6042      	str	r2, [r0, #4]
 8013d5a:	9a08      	ldr	r2, [sp, #32]
 8013d5c:	6107      	str	r7, [r0, #16]
 8013d5e:	60c2      	str	r2, [r0, #12]
 8013d60:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8013d62:	6186      	str	r6, [r0, #24]
 8013d64:	6142      	str	r2, [r0, #20]
 8013d66:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 8013d68:	6201      	str	r1, [r0, #32]
 8013d6a:	61c2      	str	r2, [r0, #28]
 8013d6c:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 8013d6e:	6283      	str	r3, [r0, #40]	@ 0x28
 8013d70:	6242      	str	r2, [r0, #36]	@ 0x24
 8013d72:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8013d74:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8013d76:	62c2      	str	r2, [r0, #44]	@ 0x2c
 8013d78:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8013d7a:	6341      	str	r1, [r0, #52]	@ 0x34
 8013d7c:	63c2      	str	r2, [r0, #60]	@ 0x3c
 8013d7e:	f44f 7154 	mov.w	r1, #848	@ 0x350
 8013d82:	f44f 7255 	mov.w	r2, #852	@ 0x354
 8013d86:	4b8b      	ldr	r3, [pc, #556]	@ (8013fb4 <stroke_thin_path+0x63c>)
 8013d88:	432c      	orrs	r4, r5
 8013d8a:	6444      	str	r4, [r0, #68]	@ 0x44
 8013d8c:	6301      	str	r1, [r0, #48]	@ 0x30
 8013d8e:	6382      	str	r2, [r0, #56]	@ 0x38
 8013d90:	6403      	str	r3, [r0, #64]	@ 0x40
 8013d92:	f8da 3000 	ldr.w	r3, [sl]
 8013d96:	464c      	mov	r4, r9
 8013d98:	e697      	b.n	8013aca <stroke_thin_path+0x152>
 8013d9a:	9005      	str	r0, [sp, #20]
 8013d9c:	ed94 6a00 	vldr	s12, [r4]
 8013da0:	ed8d 6a0b 	vstr	s12, [sp, #44]	@ 0x2c
 8013da4:	1c8a      	adds	r2, r1, #2
 8013da6:	9205      	str	r2, [sp, #20]
 8013da8:	edd4 6a01 	vldr	s13, [r4, #4]
 8013dac:	edcd 6a0c 	vstr	s13, [sp, #48]	@ 0x30
 8013db0:	1cca      	adds	r2, r1, #3
 8013db2:	9205      	str	r2, [sp, #20]
 8013db4:	ed94 7a02 	vldr	s14, [r4, #8]
 8013db8:	ed8d 7a0d 	vstr	s14, [sp, #52]	@ 0x34
 8013dbc:	3104      	adds	r1, #4
 8013dbe:	9105      	str	r1, [sp, #20]
 8013dc0:	edd4 7a03 	vldr	s15, [r4, #12]
 8013dc4:	9a00      	ldr	r2, [sp, #0]
 8013dc6:	edcd 7a0e 	vstr	s15, [sp, #56]	@ 0x38
 8013dca:	b19a      	cbz	r2, 8013df4 <stroke_thin_path+0x47c>
 8013dcc:	ed9d 5a0f 	vldr	s10, [sp, #60]	@ 0x3c
 8013dd0:	eddd 5a10 	vldr	s11, [sp, #64]	@ 0x40
 8013dd4:	ee36 6a05 	vadd.f32	s12, s12, s10
 8013dd8:	ee37 7a05 	vadd.f32	s14, s14, s10
 8013ddc:	ee76 6aa5 	vadd.f32	s13, s13, s11
 8013de0:	ee77 7aa5 	vadd.f32	s15, s15, s11
 8013de4:	ed8d 6a0b 	vstr	s12, [sp, #44]	@ 0x2c
 8013de8:	ed8d 7a0d 	vstr	s14, [sp, #52]	@ 0x34
 8013dec:	edcd 6a0c 	vstr	s13, [sp, #48]	@ 0x30
 8013df0:	edcd 7a0e 	vstr	s15, [sp, #56]	@ 0x38
 8013df4:	ed8d 7a11 	vstr	s14, [sp, #68]	@ 0x44
 8013df8:	edcd 7a12 	vstr	s15, [sp, #72]	@ 0x48
 8013dfc:	008a      	lsls	r2, r1, #2
 8013dfe:	1c48      	adds	r0, r1, #1
 8013e00:	9201      	str	r2, [sp, #4]
 8013e02:	9c01      	ldr	r4, [sp, #4]
 8013e04:	9005      	str	r0, [sp, #20]
 8013e06:	1d22      	adds	r2, r4, #4
 8013e08:	441a      	add	r2, r3
 8013e0a:	4423      	add	r3, r4
 8013e0c:	9c00      	ldr	r4, [sp, #0]
 8013e0e:	3102      	adds	r1, #2
 8013e10:	edd3 6a00 	vldr	s13, [r3]
 8013e14:	2c00      	cmp	r4, #0
 8013e16:	d076      	beq.n	8013f06 <stroke_thin_path+0x58e>
 8013e18:	eddd 7a0f 	vldr	s15, [sp, #60]	@ 0x3c
 8013e1c:	ee76 6aa7 	vadd.f32	s13, s13, s15
 8013e20:	edcd 6a09 	vstr	s13, [sp, #36]	@ 0x24
 8013e24:	9105      	str	r1, [sp, #20]
 8013e26:	ed92 7a00 	vldr	s14, [r2]
 8013e2a:	eddd 7a10 	vldr	s15, [sp, #64]	@ 0x40
 8013e2e:	ee77 7a27 	vadd.f32	s15, s14, s15
 8013e32:	edcd 7a0a 	vstr	s15, [sp, #40]	@ 0x28
 8013e36:	e60b      	b.n	8013a50 <stroke_thin_path+0xd8>
 8013e38:	2e03      	cmp	r6, #3
 8013e3a:	d06c      	beq.n	8013f16 <stroke_thin_path+0x59e>
 8013e3c:	2e0a      	cmp	r6, #10
 8013e3e:	f040 841d 	bne.w	801467c <stroke_thin_path+0xd04>
 8013e42:	9005      	str	r0, [sp, #20]
 8013e44:	edde 7a00 	vldr	s15, [lr]
 8013e48:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8013e4c:	ee17 1a90 	vmov	r1, s15
 8013e50:	eb01 71d1 	add.w	r1, r1, r1, lsr #31
 8013e54:	1049      	asrs	r1, r1, #1
 8013e56:	2900      	cmp	r1, #0
 8013e58:	9101      	str	r1, [sp, #4]
 8013e5a:	f340 8112 	ble.w	8014082 <stroke_thin_path+0x70a>
 8013e5e:	f8cd 9008 	str.w	r9, [sp, #8]
 8013e62:	2400      	movs	r4, #0
 8013e64:	46a9      	mov	r9, r5
 8013e66:	9603      	str	r6, [sp, #12]
 8013e68:	e039      	b.n	8013ede <stroke_thin_path+0x566>
 8013e6a:	ed9d 1a0f 	vldr	s2, [sp, #60]	@ 0x3c
 8013e6e:	ee78 8a81 	vadd.f32	s17, s17, s2
 8013e72:	edcd 8a09 	vstr	s17, [sp, #36]	@ 0x24
 8013e76:	9205      	str	r2, [sp, #20]
 8013e78:	ed91 9a00 	vldr	s18, [r1]
 8013e7c:	eddd 1a10 	vldr	s3, [sp, #64]	@ 0x40
 8013e80:	ee39 9a21 	vadd.f32	s18, s18, s3
 8013e84:	ed8d 9a0a 	vstr	s18, [sp, #40]	@ 0x28
 8013e88:	edcd 8a0f 	vstr	s17, [sp, #60]	@ 0x3c
 8013e8c:	ed8d 9a10 	vstr	s18, [sp, #64]	@ 0x40
 8013e90:	f8db 3000 	ldr.w	r3, [fp]
 8013e94:	f88d 9054 	strb.w	r9, [sp, #84]	@ 0x54
 8013e98:	7f1a      	ldrb	r2, [r3, #28]
 8013e9a:	2a00      	cmp	r2, #0
 8013e9c:	f040 808e 	bne.w	8013fbc <stroke_thin_path+0x644>
 8013ea0:	4a42      	ldr	r2, [pc, #264]	@ (8013fac <stroke_thin_path+0x634>)
 8013ea2:	eddd 9a07 	vldr	s19, [sp, #28]
 8013ea6:	6812      	ldr	r2, [r2, #0]
 8013ea8:	ed9d aa08 	vldr	s20, [sp, #32]
 8013eac:	2a00      	cmp	r2, #0
 8013eae:	f000 82e5 	beq.w	801447c <stroke_thin_path+0xb04>
 8013eb2:	eef0 1a49 	vmov.f32	s3, s18
 8013eb6:	eeb0 1a68 	vmov.f32	s2, s17
 8013eba:	eef0 0a4a 	vmov.f32	s1, s20
 8013ebe:	eeb0 0a69 	vmov.f32	s0, s19
 8013ec2:	f7fe fe69 	bl	8012b98 <raster_stroked_line_>
 8013ec6:	e898 0003 	ldmia.w	r8, {r0, r1}
 8013eca:	9b01      	ldr	r3, [sp, #4]
 8013ecc:	3401      	adds	r4, #1
 8013ece:	429c      	cmp	r4, r3
 8013ed0:	e887 0003 	stmia.w	r7, {r0, r1}
 8013ed4:	f000 80d2 	beq.w	801407c <stroke_thin_path+0x704>
 8013ed8:	f8da 300c 	ldr.w	r3, [sl, #12]
 8013edc:	9a05      	ldr	r2, [sp, #20]
 8013ede:	0090      	lsls	r0, r2, #2
 8013ee0:	1d01      	adds	r1, r0, #4
 8013ee2:	4419      	add	r1, r3
 8013ee4:	9d00      	ldr	r5, [sp, #0]
 8013ee6:	4403      	add	r3, r0
 8013ee8:	1c50      	adds	r0, r2, #1
 8013eea:	9005      	str	r0, [sp, #20]
 8013eec:	3202      	adds	r2, #2
 8013eee:	edd3 8a00 	vldr	s17, [r3]
 8013ef2:	2d00      	cmp	r5, #0
 8013ef4:	d1b9      	bne.n	8013e6a <stroke_thin_path+0x4f2>
 8013ef6:	edcd 8a09 	vstr	s17, [sp, #36]	@ 0x24
 8013efa:	9205      	str	r2, [sp, #20]
 8013efc:	ed91 9a00 	vldr	s18, [r1]
 8013f00:	ed8d 9a0a 	vstr	s18, [sp, #40]	@ 0x28
 8013f04:	e7c0      	b.n	8013e88 <stroke_thin_path+0x510>
 8013f06:	edcd 6a09 	vstr	s13, [sp, #36]	@ 0x24
 8013f0a:	9105      	str	r1, [sp, #20]
 8013f0c:	edd2 7a00 	vldr	s15, [r2]
 8013f10:	edcd 7a0a 	vstr	s15, [sp, #40]	@ 0x28
 8013f14:	e59c      	b.n	8013a50 <stroke_thin_path+0xd8>
 8013f16:	9b00      	ldr	r3, [sp, #0]
 8013f18:	eddd 7a10 	vldr	s15, [sp, #64]	@ 0x40
 8013f1c:	9005      	str	r0, [sp, #20]
 8013f1e:	b353      	cbz	r3, 8013f76 <stroke_thin_path+0x5fe>
 8013f20:	ed9e 7a00 	vldr	s14, [lr]
 8013f24:	eddd 6a0f 	vldr	s13, [sp, #60]	@ 0x3c
 8013f28:	ee76 6a87 	vadd.f32	s13, s13, s14
 8013f2c:	edcd 7a0a 	vstr	s15, [sp, #40]	@ 0x28
 8013f30:	edcd 6a09 	vstr	s13, [sp, #36]	@ 0x24
 8013f34:	e58c      	b.n	8013a50 <stroke_thin_path+0xd8>
 8013f36:	9005      	str	r0, [sp, #20]
 8013f38:	ed94 7a00 	vldr	s14, [r4]
 8013f3c:	ed8d 7a0b 	vstr	s14, [sp, #44]	@ 0x2c
 8013f40:	3102      	adds	r1, #2
 8013f42:	9105      	str	r1, [sp, #20]
 8013f44:	edd4 7a01 	vldr	s15, [r4, #4]
 8013f48:	9a00      	ldr	r2, [sp, #0]
 8013f4a:	edcd 7a0c 	vstr	s15, [sp, #48]	@ 0x30
 8013f4e:	2a00      	cmp	r2, #0
 8013f50:	f43f af50 	beq.w	8013df4 <stroke_thin_path+0x47c>
 8013f54:	ed9d 6a0f 	vldr	s12, [sp, #60]	@ 0x3c
 8013f58:	eddd 6a10 	vldr	s13, [sp, #64]	@ 0x40
 8013f5c:	ee37 7a06 	vadd.f32	s14, s14, s12
 8013f60:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8013f64:	ed8d 7a0b 	vstr	s14, [sp, #44]	@ 0x2c
 8013f68:	edcd 7a0c 	vstr	s15, [sp, #48]	@ 0x30
 8013f6c:	e742      	b.n	8013df4 <stroke_thin_path+0x47c>
 8013f6e:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
 8013f70:	b942      	cbnz	r2, 8013f84 <stroke_thin_path+0x60c>
 8013f72:	2506      	movs	r5, #6
 8013f74:	e626      	b.n	8013bc4 <stroke_thin_path+0x24c>
 8013f76:	edde 6a00 	vldr	s13, [lr]
 8013f7a:	edcd 7a0a 	vstr	s15, [sp, #40]	@ 0x28
 8013f7e:	edcd 6a09 	vstr	s13, [sp, #36]	@ 0x24
 8013f82:	e565      	b.n	8013a50 <stroke_thin_path+0xd8>
 8013f84:	4a0c      	ldr	r2, [pc, #48]	@ (8013fb8 <stroke_thin_path+0x640>)
 8013f86:	2506      	movs	r5, #6
 8013f88:	6812      	ldr	r2, [r2, #0]
 8013f8a:	2a00      	cmp	r2, #0
 8013f8c:	bf14      	ite	ne
 8013f8e:	f04f 6280 	movne.w	r2, #67108864	@ 0x4000000
 8013f92:	f04f 62f0 	moveq.w	r2, #125829120	@ 0x7800000
 8013f96:	e615      	b.n	8013bc4 <stroke_thin_path+0x24c>
 8013f98:	f04f 62f0 	mov.w	r2, #125829120	@ 0x7800000
 8013f9c:	e6bc      	b.n	8013d18 <stroke_thin_path+0x3a0>
 8013f9e:	2300      	movs	r3, #0
 8013fa0:	f88d 3011 	strb.w	r3, [sp, #17]
 8013fa4:	f89d 3012 	ldrb.w	r3, [sp, #18]
 8013fa8:	e570      	b.n	8013a8c <stroke_thin_path+0x114>
 8013faa:	bf00      	nop
 8013fac:	20083150 	.word	0x20083150
 8013fb0:	20000064 	.word	0x20000064
 8013fb4:	ff000100 	.word	0xff000100
 8013fb8:	2008314c 	.word	0x2008314c
 8013fbc:	4aba      	ldr	r2, [pc, #744]	@ (80142a8 <stroke_thin_path+0x930>)
 8013fbe:	4bbb      	ldr	r3, [pc, #748]	@ (80142ac <stroke_thin_path+0x934>)
 8013fc0:	2007      	movs	r0, #7
 8013fc2:	6816      	ldr	r6, [r2, #0]
 8013fc4:	681d      	ldr	r5, [r3, #0]
 8013fc6:	f009 ffed 	bl	801dfa4 <nema_cl_get_space>
 8013fca:	2800      	cmp	r0, #0
 8013fcc:	f43f af7b 	beq.w	8013ec6 <stroke_thin_path+0x54e>
 8013fd0:	4ab7      	ldr	r2, [pc, #732]	@ (80142b0 <stroke_thin_path+0x938>)
 8013fd2:	f8db 3000 	ldr.w	r3, [fp]
 8013fd6:	7812      	ldrb	r2, [r2, #0]
 8013fd8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8013fda:	2a01      	cmp	r2, #1
 8013fdc:	f003 63f0 	and.w	r3, r3, #125829120	@ 0x7800000
 8013fe0:	d104      	bne.n	8013fec <stroke_thin_path+0x674>
 8013fe2:	4ab3      	ldr	r2, [pc, #716]	@ (80142b0 <stroke_thin_path+0x938>)
 8013fe4:	6852      	ldr	r2, [r2, #4]
 8013fe6:	f002 4240 	and.w	r2, r2, #3221225472	@ 0xc0000000
 8013fea:	4313      	orrs	r3, r2
 8013fec:	f44f 7248 	mov.w	r2, #800	@ 0x320
 8013ff0:	6002      	str	r2, [r0, #0]
 8013ff2:	eddd 7a07 	vldr	s15, [sp, #28]
 8013ff6:	f44f 7249 	mov.w	r2, #804	@ 0x324
 8013ffa:	f44f 7e4d 	mov.w	lr, #820	@ 0x334
 8013ffe:	f44f 7c4c 	mov.w	ip, #816	@ 0x330
 8014002:	6082      	str	r2, [r0, #8]
 8014004:	edc0 7a01 	vstr	s15, [r0, #4]
 8014008:	f8c0 e018 	str.w	lr, [r0, #24]
 801400c:	f8dd e020 	ldr.w	lr, [sp, #32]
 8014010:	f8c0 c010 	str.w	ip, [r0, #16]
 8014014:	f8c0 e00c 	str.w	lr, [r0, #12]
 8014018:	f8dd c024 	ldr.w	ip, [sp, #36]	@ 0x24
 801401c:	f043 0304 	orr.w	r3, r3, #4
 8014020:	f8c0 c014 	str.w	ip, [r0, #20]
 8014024:	6343      	str	r3, [r0, #52]	@ 0x34
 8014026:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8014028:	f44f 71a0 	mov.w	r1, #320	@ 0x140
 801402c:	61c3      	str	r3, [r0, #28]
 801402e:	f44f 73a2 	mov.w	r3, #324	@ 0x144
 8014032:	4aa0      	ldr	r2, [pc, #640]	@ (80142b4 <stroke_thin_path+0x93c>)
 8014034:	6246      	str	r6, [r0, #36]	@ 0x24
 8014036:	62c5      	str	r5, [r0, #44]	@ 0x2c
 8014038:	6302      	str	r2, [r0, #48]	@ 0x30
 801403a:	6201      	str	r1, [r0, #32]
 801403c:	6283      	str	r3, [r0, #40]	@ 0x28
 801403e:	e742      	b.n	8013ec6 <stroke_thin_path+0x54e>
 8014040:	f1ac 0c05 	sub.w	ip, ip, #5
 8014044:	f1bc 0f03 	cmp.w	ip, #3
 8014048:	eddd 6a0f 	vldr	s13, [sp, #60]	@ 0x3c
 801404c:	eddd 7a10 	vldr	s15, [sp, #64]	@ 0x40
 8014050:	d80b      	bhi.n	801406a <stroke_thin_path+0x6f2>
 8014052:	ee76 6aa6 	vadd.f32	s13, s13, s13
 8014056:	ee77 7aa7 	vadd.f32	s15, s15, s15
 801405a:	ed9d 6a11 	vldr	s12, [sp, #68]	@ 0x44
 801405e:	ed9d 7a12 	vldr	s14, [sp, #72]	@ 0x48
 8014062:	ee76 6ac6 	vsub.f32	s13, s13, s12
 8014066:	ee77 7ac7 	vsub.f32	s15, s15, s14
 801406a:	edcd 7a0c 	vstr	s15, [sp, #48]	@ 0x30
 801406e:	edcd 6a0b 	vstr	s13, [sp, #44]	@ 0x2c
 8014072:	edcd 6a11 	vstr	s13, [sp, #68]	@ 0x44
 8014076:	edcd 7a12 	vstr	s15, [sp, #72]	@ 0x48
 801407a:	e6c2      	b.n	8013e02 <stroke_thin_path+0x48a>
 801407c:	464d      	mov	r5, r9
 801407e:	e9dd 9602 	ldrd	r9, r6, [sp, #8]
 8014082:	eddd 8a13 	vldr	s17, [sp, #76]	@ 0x4c
 8014086:	eddd 7a0f 	vldr	s15, [sp, #60]	@ 0x3c
 801408a:	ee77 7ae8 	vsub.f32	s15, s15, s17
 801408e:	eef5 7a40 	vcmp.f32	s15, #0.0
 8014092:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8014096:	ed9d 9a14 	vldr	s18, [sp, #80]	@ 0x50
 801409a:	d108      	bne.n	80140ae <stroke_thin_path+0x736>
 801409c:	eddd 7a10 	vldr	s15, [sp, #64]	@ 0x40
 80140a0:	ee77 7ac9 	vsub.f32	s15, s15, s18
 80140a4:	eef5 7a40 	vcmp.f32	s15, #0.0
 80140a8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80140ac:	d050      	beq.n	8014150 <stroke_thin_path+0x7d8>
 80140ae:	e898 0003 	ldmia.w	r8, {r0, r1}
 80140b2:	edcd 8a0f 	vstr	s17, [sp, #60]	@ 0x3c
 80140b6:	ed8d 9a10 	vstr	s18, [sp, #64]	@ 0x40
 80140ba:	f8db 3000 	ldr.w	r3, [fp]
 80140be:	e887 0003 	stmia.w	r7, {r0, r1}
 80140c2:	7f1a      	ldrb	r2, [r3, #28]
 80140c4:	edcd 8a09 	vstr	s17, [sp, #36]	@ 0x24
 80140c8:	ed8d 9a0a 	vstr	s18, [sp, #40]	@ 0x28
 80140cc:	2a00      	cmp	r2, #0
 80140ce:	f000 818e 	beq.w	80143ee <stroke_thin_path+0xa76>
 80140d2:	4a75      	ldr	r2, [pc, #468]	@ (80142a8 <stroke_thin_path+0x930>)
 80140d4:	4b75      	ldr	r3, [pc, #468]	@ (80142ac <stroke_thin_path+0x934>)
 80140d6:	2007      	movs	r0, #7
 80140d8:	6817      	ldr	r7, [r2, #0]
 80140da:	681c      	ldr	r4, [r3, #0]
 80140dc:	f009 ff62 	bl	801dfa4 <nema_cl_get_space>
 80140e0:	2800      	cmp	r0, #0
 80140e2:	d035      	beq.n	8014150 <stroke_thin_path+0x7d8>
 80140e4:	4a72      	ldr	r2, [pc, #456]	@ (80142b0 <stroke_thin_path+0x938>)
 80140e6:	f8db 3000 	ldr.w	r3, [fp]
 80140ea:	7811      	ldrb	r1, [r2, #0]
 80140ec:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 80140ee:	2901      	cmp	r1, #1
 80140f0:	f002 62f0 	and.w	r2, r2, #125829120	@ 0x7800000
 80140f4:	d104      	bne.n	8014100 <stroke_thin_path+0x788>
 80140f6:	4b6e      	ldr	r3, [pc, #440]	@ (80142b0 <stroke_thin_path+0x938>)
 80140f8:	685b      	ldr	r3, [r3, #4]
 80140fa:	f003 4340 	and.w	r3, r3, #3221225472	@ 0xc0000000
 80140fe:	431a      	orrs	r2, r3
 8014100:	f44f 7848 	mov.w	r8, #800	@ 0x320
 8014104:	f44f 7e49 	mov.w	lr, #804	@ 0x324
 8014108:	f44f 7c4d 	mov.w	ip, #820	@ 0x334
 801410c:	f44f 714c 	mov.w	r1, #816	@ 0x330
 8014110:	f8c0 8000 	str.w	r8, [r0]
 8014114:	f8dd 801c 	ldr.w	r8, [sp, #28]
 8014118:	f8c0 e008 	str.w	lr, [r0, #8]
 801411c:	f8c0 8004 	str.w	r8, [r0, #4]
 8014120:	f8c0 c018 	str.w	ip, [r0, #24]
 8014124:	f8dd c020 	ldr.w	ip, [sp, #32]
 8014128:	6101      	str	r1, [r0, #16]
 801412a:	f8c0 c00c 	str.w	ip, [r0, #12]
 801412e:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8014130:	f44f 73a2 	mov.w	r3, #324	@ 0x144
 8014134:	6141      	str	r1, [r0, #20]
 8014136:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8014138:	f042 0204 	orr.w	r2, r2, #4
 801413c:	61c1      	str	r1, [r0, #28]
 801413e:	f44f 71a0 	mov.w	r1, #320	@ 0x140
 8014142:	6342      	str	r2, [r0, #52]	@ 0x34
 8014144:	4a5b      	ldr	r2, [pc, #364]	@ (80142b4 <stroke_thin_path+0x93c>)
 8014146:	6247      	str	r7, [r0, #36]	@ 0x24
 8014148:	62c4      	str	r4, [r0, #44]	@ 0x2c
 801414a:	6201      	str	r1, [r0, #32]
 801414c:	6283      	str	r3, [r0, #40]	@ 0x28
 801414e:	6302      	str	r2, [r0, #48]	@ 0x30
 8014150:	2300      	movs	r3, #0
 8014152:	f88d 3011 	strb.w	r3, [sp, #17]
 8014156:	f89d 3012 	ldrb.w	r3, [sp, #18]
 801415a:	e49d      	b.n	8013a98 <stroke_thin_path+0x120>
 801415c:	4b56      	ldr	r3, [pc, #344]	@ (80142b8 <stroke_thin_path+0x940>)
 801415e:	eddd 8a07 	vldr	s17, [sp, #28]
 8014162:	681b      	ldr	r3, [r3, #0]
 8014164:	ed9d 9a08 	vldr	s18, [sp, #32]
 8014168:	eddd 9a09 	vldr	s19, [sp, #36]	@ 0x24
 801416c:	ed9d aa0a 	vldr	s20, [sp, #40]	@ 0x28
 8014170:	2b00      	cmp	r3, #0
 8014172:	f000 80fb 	beq.w	801436c <stroke_thin_path+0x9f4>
 8014176:	eef0 1a4a 	vmov.f32	s3, s20
 801417a:	eeb0 1a69 	vmov.f32	s2, s19
 801417e:	eef0 0a49 	vmov.f32	s1, s18
 8014182:	eeb0 0a68 	vmov.f32	s0, s17
 8014186:	f7fe fd07 	bl	8012b98 <raster_stroked_line_>
 801418a:	e49b      	b.n	8013ac4 <stroke_thin_path+0x14c>
 801418c:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
 801418e:	2a00      	cmp	r2, #0
 8014190:	f040 8123 	bne.w	80143da <stroke_thin_path+0xa62>
 8014194:	2507      	movs	r5, #7
 8014196:	e5bf      	b.n	8013d18 <stroke_thin_path+0x3a0>
 8014198:	f1ac 0c05 	sub.w	ip, ip, #5
 801419c:	f1bc 0f03 	cmp.w	ip, #3
 80141a0:	ed9d 5a0f 	vldr	s10, [sp, #60]	@ 0x3c
 80141a4:	eddd 5a10 	vldr	s11, [sp, #64]	@ 0x40
 80141a8:	f240 80d3 	bls.w	8014352 <stroke_thin_path+0x9da>
 80141ac:	eeb0 7a65 	vmov.f32	s14, s11
 80141b0:	eef0 7a45 	vmov.f32	s15, s10
 80141b4:	ed8d 7a0c 	vstr	s14, [sp, #48]	@ 0x30
 80141b8:	edcd 7a0b 	vstr	s15, [sp, #44]	@ 0x2c
 80141bc:	9005      	str	r0, [sp, #20]
 80141be:	ed94 7a00 	vldr	s14, [r4]
 80141c2:	ed8d 7a0d 	vstr	s14, [sp, #52]	@ 0x34
 80141c6:	3102      	adds	r1, #2
 80141c8:	9105      	str	r1, [sp, #20]
 80141ca:	edd4 7a01 	vldr	s15, [r4, #4]
 80141ce:	9a00      	ldr	r2, [sp, #0]
 80141d0:	edcd 7a0e 	vstr	s15, [sp, #56]	@ 0x38
 80141d4:	2a00      	cmp	r2, #0
 80141d6:	f43f ae0d 	beq.w	8013df4 <stroke_thin_path+0x47c>
 80141da:	ee37 7a05 	vadd.f32	s14, s14, s10
 80141de:	ee77 7aa5 	vadd.f32	s15, s15, s11
 80141e2:	ed8d 7a0d 	vstr	s14, [sp, #52]	@ 0x34
 80141e6:	edcd 7a0e 	vstr	s15, [sp, #56]	@ 0x38
 80141ea:	e603      	b.n	8013df4 <stroke_thin_path+0x47c>
 80141ec:	eef6 8a00 	vmov.f32	s17, #96	@ 0x3f000000  0.5
 80141f0:	4c32      	ldr	r4, [pc, #200]	@ (80142bc <stroke_thin_path+0x944>)
 80141f2:	4d33      	ldr	r5, [pc, #204]	@ (80142c0 <stroke_thin_path+0x948>)
 80141f4:	7821      	ldrb	r1, [r4, #0]
 80141f6:	ee39 7acc 	vsub.f32	s14, s19, s24
 80141fa:	ee79 7a6b 	vsub.f32	s15, s18, s23
 80141fe:	ee7c 5a2a 	vadd.f32	s11, s24, s21
 8014202:	ee3a 4aa9 	vadd.f32	s8, s21, s19
 8014206:	ee3b 5a8a 	vadd.f32	s10, s23, s20
 801420a:	ee7a 4a09 	vadd.f32	s9, s20, s18
 801420e:	ee3a 6a49 	vsub.f32	s12, s20, s18
 8014212:	ee7a 6ae9 	vsub.f32	s13, s21, s19
 8014216:	ee26 6a07 	vmul.f32	s12, s12, s14
 801421a:	ee66 6aa7 	vmul.f32	s13, s13, s15
 801421e:	ee65 5aa8 	vmul.f32	s11, s11, s17
 8014222:	ee24 4a28 	vmul.f32	s8, s8, s17
 8014226:	ee25 5a28 	vmul.f32	s10, s10, s17
 801422a:	ee64 4aa8 	vmul.f32	s9, s9, s17
 801422e:	ee35 ba84 	vadd.f32	s22, s11, s8
 8014232:	ee75 ca24 	vadd.f32	s25, s10, s9
 8014236:	ee27 7a07 	vmul.f32	s14, s14, s14
 801423a:	ee76 6ac6 	vsub.f32	s13, s13, s12
 801423e:	ee67 7aa7 	vmul.f32	s15, s15, s15
 8014242:	ee2b ba28 	vmul.f32	s22, s22, s17
 8014246:	ee6c caa8 	vmul.f32	s25, s25, s17
 801424a:	ee66 6aa6 	vmul.f32	s13, s13, s13
 801424e:	ee77 7a27 	vadd.f32	s15, s14, s15
 8014252:	2900      	cmp	r1, #0
 8014254:	d038      	beq.n	80142c8 <stroke_thin_path+0x950>
 8014256:	eef4 6ae7 	vcmpe.f32	s13, s15
 801425a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801425e:	bfcc      	ite	gt
 8014260:	2301      	movgt	r3, #1
 8014262:	2300      	movle	r3, #0
 8014264:	2b00      	cmp	r3, #0
 8014266:	d03a      	beq.n	80142de <stroke_thin_path+0x966>
 8014268:	682b      	ldr	r3, [r5, #0]
 801426a:	2b09      	cmp	r3, #9
 801426c:	dc12      	bgt.n	8014294 <stroke_thin_path+0x91c>
 801426e:	4815      	ldr	r0, [pc, #84]	@ (80142c4 <stroke_thin_path+0x94c>)
 8014270:	eb03 0243 	add.w	r2, r3, r3, lsl #1
 8014274:	eb00 02c2 	add.w	r2, r0, r2, lsl #3
 8014278:	ed82 ba00 	vstr	s22, [r2]
 801427c:	edc2 ca01 	vstr	s25, [r2, #4]
 8014280:	ed82 4a02 	vstr	s8, [r2, #8]
 8014284:	edc2 4a03 	vstr	s9, [r2, #12]
 8014288:	edc2 9a04 	vstr	s19, [r2, #16]
 801428c:	ed82 9a05 	vstr	s18, [r2, #20]
 8014290:	3301      	adds	r3, #1
 8014292:	602b      	str	r3, [r5, #0]
 8014294:	3601      	adds	r6, #1
 8014296:	eeb0 9a6c 	vmov.f32	s18, s25
 801429a:	eef0 9a4b 	vmov.f32	s19, s22
 801429e:	eeb0 aa45 	vmov.f32	s20, s10
 80142a2:	eef0 aa65 	vmov.f32	s21, s11
 80142a6:	e7a6      	b.n	80141f6 <stroke_thin_path+0x87e>
 80142a8:	20083154 	.word	0x20083154
 80142ac:	20083158 	.word	0x20083158
 80142b0:	20000064 	.word	0x20000064
 80142b4:	ff000100 	.word	0xff000100
 80142b8:	20083150 	.word	0x20083150
 80142bc:	2008315c 	.word	0x2008315c
 80142c0:	200832e4 	.word	0x200832e4
 80142c4:	200831f4 	.word	0x200831f4
 80142c8:	ee67 7aa8 	vmul.f32	s15, s15, s17
 80142cc:	eef4 7ae6 	vcmpe.f32	s15, s13
 80142d0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80142d4:	bf4c      	ite	mi
 80142d6:	2301      	movmi	r3, #1
 80142d8:	2300      	movpl	r3, #0
 80142da:	2b00      	cmp	r3, #0
 80142dc:	d1c4      	bne.n	8014268 <stroke_thin_path+0x8f0>
 80142de:	eef0 1a6c 	vmov.f32	s3, s25
 80142e2:	eeb0 1a4b 	vmov.f32	s2, s22
 80142e6:	eef0 0a6b 	vmov.f32	s1, s23
 80142ea:	eeb0 0a4c 	vmov.f32	s0, s24
 80142ee:	f7fe fc53 	bl	8012b98 <raster_stroked_line_>
 80142f2:	eef0 1a49 	vmov.f32	s3, s18
 80142f6:	eeb0 1a69 	vmov.f32	s2, s19
 80142fa:	eef0 0a6c 	vmov.f32	s1, s25
 80142fe:	eeb0 0a4b 	vmov.f32	s0, s22
 8014302:	f7fe fc49 	bl	8012b98 <raster_stroked_line_>
 8014306:	682b      	ldr	r3, [r5, #0]
 8014308:	3e01      	subs	r6, #1
 801430a:	b193      	cbz	r3, 8014332 <stroke_thin_path+0x9ba>
 801430c:	3b01      	subs	r3, #1
 801430e:	49d4      	ldr	r1, [pc, #848]	@ (8014660 <stroke_thin_path+0xce8>)
 8014310:	eb03 0243 	add.w	r2, r3, r3, lsl #1
 8014314:	eb01 02c2 	add.w	r2, r1, r2, lsl #3
 8014318:	ed92 ca00 	vldr	s24, [r2]
 801431c:	edd2 ba01 	vldr	s23, [r2, #4]
 8014320:	edd2 aa02 	vldr	s21, [r2, #8]
 8014324:	ed92 aa03 	vldr	s20, [r2, #12]
 8014328:	edd2 9a04 	vldr	s19, [r2, #16]
 801432c:	ed92 9a05 	vldr	s18, [r2, #20]
 8014330:	602b      	str	r3, [r5, #0]
 8014332:	2e00      	cmp	r6, #0
 8014334:	f43f abc6 	beq.w	8013ac4 <stroke_thin_path+0x14c>
 8014338:	7821      	ldrb	r1, [r4, #0]
 801433a:	e75c      	b.n	80141f6 <stroke_thin_path+0x87e>
 801433c:	a804      	add	r0, sp, #16
 801433e:	f7ff f88b 	bl	8013458 <fill_arc.isra.7>
 8014342:	4605      	mov	r5, r0
 8014344:	2800      	cmp	r0, #0
 8014346:	f43f abbd 	beq.w	8013ac4 <stroke_thin_path+0x14c>
 801434a:	f008 fcd3 	bl	801ccf4 <nema_vg_set_error>
 801434e:	f7ff bbc0 	b.w	8013ad2 <stroke_thin_path+0x15a>
 8014352:	ed9d 7a11 	vldr	s14, [sp, #68]	@ 0x44
 8014356:	ee75 7a05 	vadd.f32	s15, s10, s10
 801435a:	ee35 6aa5 	vadd.f32	s12, s11, s11
 801435e:	eddd 6a12 	vldr	s13, [sp, #72]	@ 0x48
 8014362:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8014366:	ee36 7a66 	vsub.f32	s14, s12, s13
 801436a:	e723      	b.n	80141b4 <stroke_thin_path+0x83c>
 801436c:	4bbd      	ldr	r3, [pc, #756]	@ (8014664 <stroke_thin_path+0xcec>)
 801436e:	f8db 2000 	ldr.w	r2, [fp]
 8014372:	7819      	ldrb	r1, [r3, #0]
 8014374:	e9d2 340a 	ldrd	r3, r4, [r2, #40]	@ 0x28
 8014378:	2b00      	cmp	r3, #0
 801437a:	bf18      	it	ne
 801437c:	f04f 63f0 	movne.w	r3, #125829120	@ 0x7800000
 8014380:	2901      	cmp	r1, #1
 8014382:	ea04 0403 	and.w	r4, r4, r3
 8014386:	d073      	beq.n	8014470 <stroke_thin_path+0xaf8>
 8014388:	2005      	movs	r0, #5
 801438a:	f009 fe0b 	bl	801dfa4 <nema_cl_get_space>
 801438e:	2800      	cmp	r0, #0
 8014390:	f43f ab98 	beq.w	8013ac4 <stroke_thin_path+0x14c>
 8014394:	f44f 7648 	mov.w	r6, #800	@ 0x320
 8014398:	f44f 7549 	mov.w	r5, #804	@ 0x324
 801439c:	f44f 714c 	mov.w	r1, #816	@ 0x330
 80143a0:	f44f 724d 	mov.w	r2, #820	@ 0x334
 80143a4:	edc0 8a01 	vstr	s17, [r0, #4]
 80143a8:	ed80 9a03 	vstr	s18, [r0, #12]
 80143ac:	edc0 9a05 	vstr	s19, [r0, #20]
 80143b0:	ed80 aa07 	vstr	s20, [r0, #28]
 80143b4:	4bac      	ldr	r3, [pc, #688]	@ (8014668 <stroke_thin_path+0xcf0>)
 80143b6:	f044 040a 	orr.w	r4, r4, #10
 80143ba:	6244      	str	r4, [r0, #36]	@ 0x24
 80143bc:	6006      	str	r6, [r0, #0]
 80143be:	6085      	str	r5, [r0, #8]
 80143c0:	6101      	str	r1, [r0, #16]
 80143c2:	6182      	str	r2, [r0, #24]
 80143c4:	6203      	str	r3, [r0, #32]
 80143c6:	f8da 3000 	ldr.w	r3, [sl]
 80143ca:	464c      	mov	r4, r9
 80143cc:	f7ff bb7d 	b.w	8013aca <stroke_thin_path+0x152>
 80143d0:	ee18 7a10 	vmov	r7, s16
 80143d4:	ee18 8a10 	vmov	r8, s16
 80143d8:	e43d      	b.n	8013c56 <stroke_thin_path+0x2de>
 80143da:	4aa4      	ldr	r2, [pc, #656]	@ (801466c <stroke_thin_path+0xcf4>)
 80143dc:	2507      	movs	r5, #7
 80143de:	6812      	ldr	r2, [r2, #0]
 80143e0:	2a00      	cmp	r2, #0
 80143e2:	bf14      	ite	ne
 80143e4:	f04f 6280 	movne.w	r2, #67108864	@ 0x4000000
 80143e8:	f04f 62f0 	moveq.w	r2, #125829120	@ 0x7800000
 80143ec:	e494      	b.n	8013d18 <stroke_thin_path+0x3a0>
 80143ee:	4aa0      	ldr	r2, [pc, #640]	@ (8014670 <stroke_thin_path+0xcf8>)
 80143f0:	eddd 9a07 	vldr	s19, [sp, #28]
 80143f4:	6812      	ldr	r2, [r2, #0]
 80143f6:	ed9d aa08 	vldr	s20, [sp, #32]
 80143fa:	2a00      	cmp	r2, #0
 80143fc:	f000 81a2 	beq.w	8014744 <stroke_thin_path+0xdcc>
 8014400:	eef0 1a49 	vmov.f32	s3, s18
 8014404:	eeb0 1a68 	vmov.f32	s2, s17
 8014408:	eef0 0a4a 	vmov.f32	s1, s20
 801440c:	eeb0 0a69 	vmov.f32	s0, s19
 8014410:	f7fe fbc2 	bl	8012b98 <raster_stroked_line_>
 8014414:	e69c      	b.n	8014150 <stroke_thin_path+0x7d8>
 8014416:	9005      	str	r0, [sp, #20]
 8014418:	6822      	ldr	r2, [r4, #0]
 801441a:	1c8b      	adds	r3, r1, #2
 801441c:	9305      	str	r3, [sp, #20]
 801441e:	920b      	str	r2, [sp, #44]	@ 0x2c
 8014420:	6863      	ldr	r3, [r4, #4]
 8014422:	3103      	adds	r1, #3
 8014424:	930c      	str	r3, [sp, #48]	@ 0x30
 8014426:	9105      	str	r1, [sp, #20]
 8014428:	4b92      	ldr	r3, [pc, #584]	@ (8014674 <stroke_thin_path+0xcfc>)
 801442a:	68a2      	ldr	r2, [r4, #8]
 801442c:	edd3 0a00 	vldr	s1, [r3]
 8014430:	ed93 0a03 	vldr	s0, [r3, #12]
 8014434:	920d      	str	r2, [sp, #52]	@ 0x34
 8014436:	f01d f819 	bl	803146c <atan2f>
 801443a:	eddd 7a0d 	vldr	s15, [sp, #52]	@ 0x34
 801443e:	ed9d 7a10 	vldr	s14, [sp, #64]	@ 0x40
 8014442:	ee77 7a80 	vadd.f32	s15, s15, s0
 8014446:	9905      	ldr	r1, [sp, #20]
 8014448:	f8da 300c 	ldr.w	r3, [sl, #12]
 801444c:	f8dd c03c 	ldr.w	ip, [sp, #60]	@ 0x3c
 8014450:	008c      	lsls	r4, r1, #2
 8014452:	1c48      	adds	r0, r1, #1
 8014454:	4602      	mov	r2, r0
 8014456:	9401      	str	r4, [sp, #4]
 8014458:	f88d 5013 	strb.w	r5, [sp, #19]
 801445c:	edcd 7a0d 	vstr	s15, [sp, #52]	@ 0x34
 8014460:	eb03 0e04 	add.w	lr, r3, r4
 8014464:	f8cd c044 	str.w	ip, [sp, #68]	@ 0x44
 8014468:	ed8d 7a12 	vstr	s14, [sp, #72]	@ 0x48
 801446c:	f7ff badc 	b.w	8013a28 <stroke_thin_path+0xb0>
 8014470:	4b7c      	ldr	r3, [pc, #496]	@ (8014664 <stroke_thin_path+0xcec>)
 8014472:	685b      	ldr	r3, [r3, #4]
 8014474:	f003 4340 	and.w	r3, r3, #3221225472	@ 0xc0000000
 8014478:	431c      	orrs	r4, r3
 801447a:	e785      	b.n	8014388 <stroke_thin_path+0xa10>
 801447c:	e9d3 520a 	ldrd	r5, r2, [r3, #40]	@ 0x28
 8014480:	2d00      	cmp	r5, #0
 8014482:	bf18      	it	ne
 8014484:	f04f 65f0 	movne.w	r5, #125829120	@ 0x7800000
 8014488:	4b76      	ldr	r3, [pc, #472]	@ (8014664 <stroke_thin_path+0xcec>)
 801448a:	4015      	ands	r5, r2
 801448c:	781b      	ldrb	r3, [r3, #0]
 801448e:	2b01      	cmp	r3, #1
 8014490:	d104      	bne.n	801449c <stroke_thin_path+0xb24>
 8014492:	4b74      	ldr	r3, [pc, #464]	@ (8014664 <stroke_thin_path+0xcec>)
 8014494:	685b      	ldr	r3, [r3, #4]
 8014496:	f003 4340 	and.w	r3, r3, #3221225472	@ 0xc0000000
 801449a:	431d      	orrs	r5, r3
 801449c:	2005      	movs	r0, #5
 801449e:	f009 fd81 	bl	801dfa4 <nema_cl_get_space>
 80144a2:	2800      	cmp	r0, #0
 80144a4:	f43f ad0f 	beq.w	8013ec6 <stroke_thin_path+0x54e>
 80144a8:	f44f 7648 	mov.w	r6, #800	@ 0x320
 80144ac:	f44f 7149 	mov.w	r1, #804	@ 0x324
 80144b0:	f44f 724c 	mov.w	r2, #816	@ 0x330
 80144b4:	f44f 734d 	mov.w	r3, #820	@ 0x334
 80144b8:	f045 050a 	orr.w	r5, r5, #10
 80144bc:	6245      	str	r5, [r0, #36]	@ 0x24
 80144be:	4d6a      	ldr	r5, [pc, #424]	@ (8014668 <stroke_thin_path+0xcf0>)
 80144c0:	edc0 9a01 	vstr	s19, [r0, #4]
 80144c4:	ed80 aa03 	vstr	s20, [r0, #12]
 80144c8:	edc0 8a05 	vstr	s17, [r0, #20]
 80144cc:	ed80 9a07 	vstr	s18, [r0, #28]
 80144d0:	6205      	str	r5, [r0, #32]
 80144d2:	6006      	str	r6, [r0, #0]
 80144d4:	6081      	str	r1, [r0, #8]
 80144d6:	6102      	str	r2, [r0, #16]
 80144d8:	6183      	str	r3, [r0, #24]
 80144da:	e4f4      	b.n	8013ec6 <stroke_thin_path+0x54e>
 80144dc:	4626      	mov	r6, r4
 80144de:	eef6 8a00 	vmov.f32	s17, #96	@ 0x3f000000  0.5
 80144e2:	eddd da07 	vldr	s27, [sp, #28]
 80144e6:	ed9d da08 	vldr	s26, [sp, #32]
 80144ea:	eddd ca0b 	vldr	s25, [sp, #44]	@ 0x2c
 80144ee:	ed9d ca0c 	vldr	s24, [sp, #48]	@ 0x30
 80144f2:	eddd ba0d 	vldr	s23, [sp, #52]	@ 0x34
 80144f6:	ed9d ba0e 	vldr	s22, [sp, #56]	@ 0x38
 80144fa:	eddd aa09 	vldr	s21, [sp, #36]	@ 0x24
 80144fe:	ed9d aa0a 	vldr	s20, [sp, #40]	@ 0x28
 8014502:	4d5d      	ldr	r5, [pc, #372]	@ (8014678 <stroke_thin_path+0xd00>)
 8014504:	ee7d 4aac 	vadd.f32	s9, s27, s25
 8014508:	ee7c 7aab 	vadd.f32	s15, s25, s23
 801450c:	ee3b 5aaa 	vadd.f32	s10, s23, s21
 8014510:	ee67 7aa8 	vmul.f32	s15, s15, s17
 8014514:	ee64 4aa8 	vmul.f32	s9, s9, s17
 8014518:	ee25 5a28 	vmul.f32	s10, s10, s17
 801451c:	ee74 3aa7 	vadd.f32	s7, s9, s15
 8014520:	ee37 6a85 	vadd.f32	s12, s15, s10
 8014524:	ee3d 4a0c 	vadd.f32	s8, s26, s24
 8014528:	ee7c 7a0b 	vadd.f32	s15, s24, s22
 801452c:	ee7b 5a0a 	vadd.f32	s11, s22, s20
 8014530:	ee67 7aa8 	vmul.f32	s15, s15, s17
 8014534:	ee24 4a28 	vmul.f32	s8, s8, s17
 8014538:	ee65 5aa8 	vmul.f32	s11, s11, s17
 801453c:	ee34 3a27 	vadd.f32	s6, s8, s15
 8014540:	ee63 3aa8 	vmul.f32	s7, s7, s17
 8014544:	ee26 6a28 	vmul.f32	s12, s12, s17
 8014548:	ee77 7aa5 	vadd.f32	s15, s15, s11
 801454c:	ee33 9a86 	vadd.f32	s18, s7, s12
 8014550:	ee3d 7aaa 	vadd.f32	s14, s27, s21
 8014554:	ee23 3a28 	vmul.f32	s6, s6, s17
 8014558:	ee67 7aa8 	vmul.f32	s15, s15, s17
 801455c:	ee29 9a28 	vmul.f32	s18, s18, s17
 8014560:	ee27 7a28 	vmul.f32	s14, s14, s17
 8014564:	ee73 9a27 	vadd.f32	s19, s6, s15
 8014568:	ee7d 6a0a 	vadd.f32	s13, s26, s20
 801456c:	ee37 7a49 	vsub.f32	s14, s14, s18
 8014570:	ee69 9aa8 	vmul.f32	s19, s19, s17
 8014574:	ee66 6aa8 	vmul.f32	s13, s13, s17
 8014578:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 801457c:	ee76 6ae9 	vsub.f32	s13, s13, s19
 8014580:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8014584:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 8014588:	bf48      	it	mi
 801458a:	eeb1 7a47 	vnegmi.f32	s14, s14
 801458e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8014592:	bf48      	it	mi
 8014594:	eef1 6a66 	vnegmi.f32	s13, s13
 8014598:	b94e      	cbnz	r6, 80145ae <stroke_thin_path+0xc36>
 801459a:	eeb4 7ae8 	vcmpe.f32	s14, s17
 801459e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80145a2:	d504      	bpl.n	80145ae <stroke_thin_path+0xc36>
 80145a4:	eef4 6ae8 	vcmpe.f32	s13, s17
 80145a8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80145ac:	d424      	bmi.n	80145f8 <stroke_thin_path+0xc80>
 80145ae:	682a      	ldr	r2, [r5, #0]
 80145b0:	2a09      	cmp	r2, #9
 80145b2:	dc21      	bgt.n	80145f8 <stroke_thin_path+0xc80>
 80145b4:	492a      	ldr	r1, [pc, #168]	@ (8014660 <stroke_thin_path+0xce8>)
 80145b6:	eb02 0342 	add.w	r3, r2, r2, lsl #1
 80145ba:	eb01 03c3 	add.w	r3, r1, r3, lsl #3
 80145be:	3201      	adds	r2, #1
 80145c0:	edc3 aa04 	vstr	s21, [r3, #16]
 80145c4:	ed83 aa05 	vstr	s20, [r3, #20]
 80145c8:	3401      	adds	r4, #1
 80145ca:	eeb0 ba43 	vmov.f32	s22, s6
 80145ce:	eef0 ba63 	vmov.f32	s23, s7
 80145d2:	eeb0 ca44 	vmov.f32	s24, s8
 80145d6:	eef0 ca64 	vmov.f32	s25, s9
 80145da:	ed83 6a00 	vstr	s12, [r3]
 80145de:	edc3 7a01 	vstr	s15, [r3, #4]
 80145e2:	ed83 5a02 	vstr	s10, [r3, #8]
 80145e6:	edc3 5a03 	vstr	s11, [r3, #12]
 80145ea:	602a      	str	r2, [r5, #0]
 80145ec:	eeb0 aa69 	vmov.f32	s20, s19
 80145f0:	eef0 aa49 	vmov.f32	s21, s18
 80145f4:	2600      	movs	r6, #0
 80145f6:	e785      	b.n	8014504 <stroke_thin_path+0xb8c>
 80145f8:	eef0 1a69 	vmov.f32	s3, s19
 80145fc:	eeb0 1a49 	vmov.f32	s2, s18
 8014600:	eef0 0a4d 	vmov.f32	s1, s26
 8014604:	eeb0 0a6d 	vmov.f32	s0, s27
 8014608:	f7fe fac6 	bl	8012b98 <raster_stroked_line_>
 801460c:	eef0 1a4a 	vmov.f32	s3, s20
 8014610:	eeb0 1a6a 	vmov.f32	s2, s21
 8014614:	eef0 0a69 	vmov.f32	s1, s19
 8014618:	eeb0 0a49 	vmov.f32	s0, s18
 801461c:	f7fe fabc 	bl	8012b98 <raster_stroked_line_>
 8014620:	682a      	ldr	r2, [r5, #0]
 8014622:	3c01      	subs	r4, #1
 8014624:	b1b2      	cbz	r2, 8014654 <stroke_thin_path+0xcdc>
 8014626:	3a01      	subs	r2, #1
 8014628:	490d      	ldr	r1, [pc, #52]	@ (8014660 <stroke_thin_path+0xce8>)
 801462a:	eb02 0342 	add.w	r3, r2, r2, lsl #1
 801462e:	eb01 03c3 	add.w	r3, r1, r3, lsl #3
 8014632:	eeb0 da4a 	vmov.f32	s26, s20
 8014636:	eef0 da6a 	vmov.f32	s27, s21
 801463a:	edd3 ca00 	vldr	s25, [r3]
 801463e:	ed93 ca01 	vldr	s24, [r3, #4]
 8014642:	edd3 ba02 	vldr	s23, [r3, #8]
 8014646:	ed93 ba03 	vldr	s22, [r3, #12]
 801464a:	ed93 aa05 	vldr	s20, [r3, #20]
 801464e:	edd3 aa04 	vldr	s21, [r3, #16]
 8014652:	602a      	str	r2, [r5, #0]
 8014654:	2c00      	cmp	r4, #0
 8014656:	f47f af55 	bne.w	8014504 <stroke_thin_path+0xb8c>
 801465a:	f7ff ba33 	b.w	8013ac4 <stroke_thin_path+0x14c>
 801465e:	bf00      	nop
 8014660:	200831f4 	.word	0x200831f4
 8014664:	20000064 	.word	0x20000064
 8014668:	ff000100 	.word	0xff000100
 801466c:	2008314c 	.word	0x2008314c
 8014670:	20083150 	.word	0x20083150
 8014674:	200831cc 	.word	0x200831cc
 8014678:	200832e4 	.word	0x200832e4
 801467c:	2e0b      	cmp	r6, #11
 801467e:	f47f abc0 	bne.w	8013e02 <stroke_thin_path+0x48a>
 8014682:	9005      	str	r0, [sp, #20]
 8014684:	edde 7a00 	vldr	s15, [lr]
 8014688:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 801468c:	ee17 1a90 	vmov	r1, s15
 8014690:	eb01 71d1 	add.w	r1, r1, r1, lsr #31
 8014694:	104c      	asrs	r4, r1, #1
 8014696:	2c00      	cmp	r4, #0
 8014698:	f340 80d4 	ble.w	8014844 <stroke_thin_path+0xecc>
 801469c:	2100      	movs	r1, #0
 801469e:	f8cd 9008 	str.w	r9, [sp, #8]
 80146a2:	9603      	str	r6, [sp, #12]
 80146a4:	46a9      	mov	r9, r5
 80146a6:	4656      	mov	r6, sl
 80146a8:	46a2      	mov	sl, r4
 80146aa:	460c      	mov	r4, r1
 80146ac:	e036      	b.n	801471c <stroke_thin_path+0xda4>
 80146ae:	ed9d 1a0f 	vldr	s2, [sp, #60]	@ 0x3c
 80146b2:	ee78 8a81 	vadd.f32	s17, s17, s2
 80146b6:	edcd 8a09 	vstr	s17, [sp, #36]	@ 0x24
 80146ba:	9205      	str	r2, [sp, #20]
 80146bc:	ed91 9a00 	vldr	s18, [r1]
 80146c0:	eddd 1a10 	vldr	s3, [sp, #64]	@ 0x40
 80146c4:	ee39 9a21 	vadd.f32	s18, s18, s3
 80146c8:	ed8d 9a0a 	vstr	s18, [sp, #40]	@ 0x28
 80146cc:	edcd 8a0f 	vstr	s17, [sp, #60]	@ 0x3c
 80146d0:	ed8d 9a10 	vstr	s18, [sp, #64]	@ 0x40
 80146d4:	f8db 3000 	ldr.w	r3, [fp]
 80146d8:	f88d 9054 	strb.w	r9, [sp, #84]	@ 0x54
 80146dc:	7f1a      	ldrb	r2, [r3, #28]
 80146de:	2a00      	cmp	r2, #0
 80146e0:	d161      	bne.n	80147a6 <stroke_thin_path+0xe2e>
 80146e2:	4a82      	ldr	r2, [pc, #520]	@ (80148ec <stroke_thin_path+0xf74>)
 80146e4:	eddd 9a07 	vldr	s19, [sp, #28]
 80146e8:	6812      	ldr	r2, [r2, #0]
 80146ea:	ed9d aa08 	vldr	s20, [sp, #32]
 80146ee:	2a00      	cmp	r2, #0
 80146f0:	f000 80ca 	beq.w	8014888 <stroke_thin_path+0xf10>
 80146f4:	eef0 1a49 	vmov.f32	s3, s18
 80146f8:	eeb0 1a68 	vmov.f32	s2, s17
 80146fc:	eef0 0a4a 	vmov.f32	s1, s20
 8014700:	eeb0 0a69 	vmov.f32	s0, s19
 8014704:	f7fe fa48 	bl	8012b98 <raster_stroked_line_>
 8014708:	e898 0003 	ldmia.w	r8, {r0, r1}
 801470c:	3401      	adds	r4, #1
 801470e:	4554      	cmp	r4, sl
 8014710:	e887 0003 	stmia.w	r7, {r0, r1}
 8014714:	f000 8091 	beq.w	801483a <stroke_thin_path+0xec2>
 8014718:	68f3      	ldr	r3, [r6, #12]
 801471a:	9a05      	ldr	r2, [sp, #20]
 801471c:	0090      	lsls	r0, r2, #2
 801471e:	1d01      	adds	r1, r0, #4
 8014720:	4419      	add	r1, r3
 8014722:	9d00      	ldr	r5, [sp, #0]
 8014724:	4403      	add	r3, r0
 8014726:	1c50      	adds	r0, r2, #1
 8014728:	9005      	str	r0, [sp, #20]
 801472a:	3202      	adds	r2, #2
 801472c:	edd3 8a00 	vldr	s17, [r3]
 8014730:	2d00      	cmp	r5, #0
 8014732:	d1bc      	bne.n	80146ae <stroke_thin_path+0xd36>
 8014734:	edcd 8a09 	vstr	s17, [sp, #36]	@ 0x24
 8014738:	9205      	str	r2, [sp, #20]
 801473a:	ed91 9a00 	vldr	s18, [r1]
 801473e:	ed8d 9a0a 	vstr	s18, [sp, #40]	@ 0x28
 8014742:	e7c3      	b.n	80146cc <stroke_thin_path+0xd54>
 8014744:	e9d3 240a 	ldrd	r2, r4, [r3, #40]	@ 0x28
 8014748:	2a00      	cmp	r2, #0
 801474a:	bf18      	it	ne
 801474c:	f04f 62f0 	movne.w	r2, #125829120	@ 0x7800000
 8014750:	4b67      	ldr	r3, [pc, #412]	@ (80148f0 <stroke_thin_path+0xf78>)
 8014752:	4014      	ands	r4, r2
 8014754:	781b      	ldrb	r3, [r3, #0]
 8014756:	2b01      	cmp	r3, #1
 8014758:	d104      	bne.n	8014764 <stroke_thin_path+0xdec>
 801475a:	4b65      	ldr	r3, [pc, #404]	@ (80148f0 <stroke_thin_path+0xf78>)
 801475c:	685b      	ldr	r3, [r3, #4]
 801475e:	f003 4340 	and.w	r3, r3, #3221225472	@ 0xc0000000
 8014762:	431c      	orrs	r4, r3
 8014764:	2005      	movs	r0, #5
 8014766:	f009 fc1d 	bl	801dfa4 <nema_cl_get_space>
 801476a:	2800      	cmp	r0, #0
 801476c:	f43f acf0 	beq.w	8014150 <stroke_thin_path+0x7d8>
 8014770:	f44f 7c48 	mov.w	ip, #800	@ 0x320
 8014774:	f44f 7749 	mov.w	r7, #804	@ 0x324
 8014778:	f44f 714c 	mov.w	r1, #816	@ 0x330
 801477c:	f44f 724d 	mov.w	r2, #820	@ 0x334
 8014780:	4b5c      	ldr	r3, [pc, #368]	@ (80148f4 <stroke_thin_path+0xf7c>)
 8014782:	f044 040a 	orr.w	r4, r4, #10
 8014786:	6244      	str	r4, [r0, #36]	@ 0x24
 8014788:	edc0 9a01 	vstr	s19, [r0, #4]
 801478c:	ed80 aa03 	vstr	s20, [r0, #12]
 8014790:	edc0 8a05 	vstr	s17, [r0, #20]
 8014794:	ed80 9a07 	vstr	s18, [r0, #28]
 8014798:	f8c0 c000 	str.w	ip, [r0]
 801479c:	6087      	str	r7, [r0, #8]
 801479e:	6101      	str	r1, [r0, #16]
 80147a0:	6182      	str	r2, [r0, #24]
 80147a2:	6203      	str	r3, [r0, #32]
 80147a4:	e4d4      	b.n	8014150 <stroke_thin_path+0x7d8>
 80147a6:	4a54      	ldr	r2, [pc, #336]	@ (80148f8 <stroke_thin_path+0xf80>)
 80147a8:	4b54      	ldr	r3, [pc, #336]	@ (80148fc <stroke_thin_path+0xf84>)
 80147aa:	6812      	ldr	r2, [r2, #0]
 80147ac:	2007      	movs	r0, #7
 80147ae:	9201      	str	r2, [sp, #4]
 80147b0:	681d      	ldr	r5, [r3, #0]
 80147b2:	f009 fbf7 	bl	801dfa4 <nema_cl_get_space>
 80147b6:	2800      	cmp	r0, #0
 80147b8:	d0a6      	beq.n	8014708 <stroke_thin_path+0xd90>
 80147ba:	4a4d      	ldr	r2, [pc, #308]	@ (80148f0 <stroke_thin_path+0xf78>)
 80147bc:	f8db 3000 	ldr.w	r3, [fp]
 80147c0:	7812      	ldrb	r2, [r2, #0]
 80147c2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80147c4:	2a01      	cmp	r2, #1
 80147c6:	f003 63f0 	and.w	r3, r3, #125829120	@ 0x7800000
 80147ca:	d104      	bne.n	80147d6 <stroke_thin_path+0xe5e>
 80147cc:	4a48      	ldr	r2, [pc, #288]	@ (80148f0 <stroke_thin_path+0xf78>)
 80147ce:	6852      	ldr	r2, [r2, #4]
 80147d0:	f002 4240 	and.w	r2, r2, #3221225472	@ 0xc0000000
 80147d4:	4313      	orrs	r3, r2
 80147d6:	f44f 7248 	mov.w	r2, #800	@ 0x320
 80147da:	6002      	str	r2, [r0, #0]
 80147dc:	eddd 7a07 	vldr	s15, [sp, #28]
 80147e0:	f44f 7249 	mov.w	r2, #804	@ 0x324
 80147e4:	f44f 7e4d 	mov.w	lr, #820	@ 0x334
 80147e8:	f44f 7c4c 	mov.w	ip, #816	@ 0x330
 80147ec:	6082      	str	r2, [r0, #8]
 80147ee:	edc0 7a01 	vstr	s15, [r0, #4]
 80147f2:	f8c0 e018 	str.w	lr, [r0, #24]
 80147f6:	f8dd e020 	ldr.w	lr, [sp, #32]
 80147fa:	f8c0 c010 	str.w	ip, [r0, #16]
 80147fe:	f8c0 e00c 	str.w	lr, [r0, #12]
 8014802:	f8dd c024 	ldr.w	ip, [sp, #36]	@ 0x24
 8014806:	f043 0304 	orr.w	r3, r3, #4
 801480a:	6343      	str	r3, [r0, #52]	@ 0x34
 801480c:	9b01      	ldr	r3, [sp, #4]
 801480e:	f8c0 c014 	str.w	ip, [r0, #20]
 8014812:	6243      	str	r3, [r0, #36]	@ 0x24
 8014814:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8014816:	f44f 71a0 	mov.w	r1, #320	@ 0x140
 801481a:	61c3      	str	r3, [r0, #28]
 801481c:	f44f 73a2 	mov.w	r3, #324	@ 0x144
 8014820:	4a34      	ldr	r2, [pc, #208]	@ (80148f4 <stroke_thin_path+0xf7c>)
 8014822:	3401      	adds	r4, #1
 8014824:	4554      	cmp	r4, sl
 8014826:	62c5      	str	r5, [r0, #44]	@ 0x2c
 8014828:	6302      	str	r2, [r0, #48]	@ 0x30
 801482a:	6201      	str	r1, [r0, #32]
 801482c:	6283      	str	r3, [r0, #40]	@ 0x28
 801482e:	e898 0003 	ldmia.w	r8, {r0, r1}
 8014832:	e887 0003 	stmia.w	r7, {r0, r1}
 8014836:	f47f af6f 	bne.w	8014718 <stroke_thin_path+0xda0>
 801483a:	464d      	mov	r5, r9
 801483c:	46b2      	mov	sl, r6
 801483e:	f8dd 9008 	ldr.w	r9, [sp, #8]
 8014842:	9e03      	ldr	r6, [sp, #12]
 8014844:	f8db 3000 	ldr.w	r3, [fp]
 8014848:	7f1b      	ldrb	r3, [r3, #28]
 801484a:	b1b3      	cbz	r3, 801487a <stroke_thin_path+0xf02>
 801484c:	ed9d 7a0f 	vldr	s14, [sp, #60]	@ 0x3c
 8014850:	eddd 7a13 	vldr	s15, [sp, #76]	@ 0x4c
 8014854:	ee77 7a67 	vsub.f32	s15, s14, s15
 8014858:	eef5 7a40 	vcmp.f32	s15, #0.0
 801485c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8014860:	d10b      	bne.n	801487a <stroke_thin_path+0xf02>
 8014862:	ed9d 7a10 	vldr	s14, [sp, #64]	@ 0x40
 8014866:	eddd 7a14 	vldr	s15, [sp, #80]	@ 0x50
 801486a:	ee77 7a67 	vsub.f32	s15, s14, s15
 801486e:	eef5 7a40 	vcmp.f32	s15, #0.0
 8014872:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8014876:	f43f ac6b 	beq.w	8014150 <stroke_thin_path+0x7d8>
 801487a:	2301      	movs	r3, #1
 801487c:	f88d 3011 	strb.w	r3, [sp, #17]
 8014880:	f89d 3012 	ldrb.w	r3, [sp, #18]
 8014884:	f7ff b908 	b.w	8013a98 <stroke_thin_path+0x120>
 8014888:	e9d3 520a 	ldrd	r5, r2, [r3, #40]	@ 0x28
 801488c:	2d00      	cmp	r5, #0
 801488e:	bf18      	it	ne
 8014890:	f04f 65f0 	movne.w	r5, #125829120	@ 0x7800000
 8014894:	4b16      	ldr	r3, [pc, #88]	@ (80148f0 <stroke_thin_path+0xf78>)
 8014896:	4015      	ands	r5, r2
 8014898:	781b      	ldrb	r3, [r3, #0]
 801489a:	2b01      	cmp	r3, #1
 801489c:	d104      	bne.n	80148a8 <stroke_thin_path+0xf30>
 801489e:	4b14      	ldr	r3, [pc, #80]	@ (80148f0 <stroke_thin_path+0xf78>)
 80148a0:	685b      	ldr	r3, [r3, #4]
 80148a2:	f003 4340 	and.w	r3, r3, #3221225472	@ 0xc0000000
 80148a6:	431d      	orrs	r5, r3
 80148a8:	2005      	movs	r0, #5
 80148aa:	f009 fb7b 	bl	801dfa4 <nema_cl_get_space>
 80148ae:	2800      	cmp	r0, #0
 80148b0:	f43f af2a 	beq.w	8014708 <stroke_thin_path+0xd90>
 80148b4:	f44f 7c48 	mov.w	ip, #800	@ 0x320
 80148b8:	f44f 7149 	mov.w	r1, #804	@ 0x324
 80148bc:	f44f 724c 	mov.w	r2, #816	@ 0x330
 80148c0:	f44f 734d 	mov.w	r3, #820	@ 0x334
 80148c4:	f045 050a 	orr.w	r5, r5, #10
 80148c8:	6245      	str	r5, [r0, #36]	@ 0x24
 80148ca:	4d0a      	ldr	r5, [pc, #40]	@ (80148f4 <stroke_thin_path+0xf7c>)
 80148cc:	edc0 9a01 	vstr	s19, [r0, #4]
 80148d0:	ed80 aa03 	vstr	s20, [r0, #12]
 80148d4:	edc0 8a05 	vstr	s17, [r0, #20]
 80148d8:	ed80 9a07 	vstr	s18, [r0, #28]
 80148dc:	6205      	str	r5, [r0, #32]
 80148de:	f8c0 c000 	str.w	ip, [r0]
 80148e2:	6081      	str	r1, [r0, #8]
 80148e4:	6102      	str	r2, [r0, #16]
 80148e6:	6183      	str	r3, [r0, #24]
 80148e8:	e70e      	b.n	8014708 <stroke_thin_path+0xd90>
 80148ea:	bf00      	nop
 80148ec:	20083150 	.word	0x20083150
 80148f0:	20000064 	.word	0x20000064
 80148f4:	ff000100 	.word	0xff000100
 80148f8:	20083154 	.word	0x20083154
 80148fc:	20083158 	.word	0x20083158

08014900 <stroke_path>:
 8014900:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014904:	ed2d 8b0c 	vpush	{d8-d13}
 8014908:	4682      	mov	sl, r0
 801490a:	b09b      	sub	sp, #108	@ 0x6c
 801490c:	2246      	movs	r2, #70	@ 0x46
 801490e:	2100      	movs	r1, #0
 8014910:	f10d 0022 	add.w	r0, sp, #34	@ 0x22
 8014914:	f01e f937 	bl	8032b86 <memset>
 8014918:	46d1      	mov	r9, sl
 801491a:	2301      	movs	r3, #1
 801491c:	2500      	movs	r5, #0
 801491e:	f240 1201 	movw	r2, #257	@ 0x101
 8014922:	f88d 3022 	strb.w	r3, [sp, #34]	@ 0x22
 8014926:	f8d9 3000 	ldr.w	r3, [r9]
 801492a:	f8ad 2020 	strh.w	r2, [sp, #32]
 801492e:	42ab      	cmp	r3, r5
 8014930:	f8df b1cc 	ldr.w	fp, [pc, #460]	@ 8014b00 <stroke_path+0x200>
 8014934:	ed9f 8a70 	vldr	s16, [pc, #448]	@ 8014af8 <stroke_path+0x1f8>
 8014938:	f240 809c 	bls.w	8014a74 <stroke_path+0x174>
 801493c:	f8d9 3008 	ldr.w	r3, [r9, #8]
 8014940:	af0d      	add	r7, sp, #52	@ 0x34
 8014942:	5d5c      	ldrb	r4, [r3, r5]
 8014944:	ae0b      	add	r6, sp, #44	@ 0x2c
 8014946:	f004 0a6f 	and.w	sl, r4, #111	@ 0x6f
 801494a:	1c6b      	adds	r3, r5, #1
 801494c:	f1ba 0f01 	cmp.w	sl, #1
 8014950:	e897 0003 	ldmia.w	r7, {r0, r1}
 8014954:	9301      	str	r3, [sp, #4]
 8014956:	f004 0810 	and.w	r8, r4, #16
 801495a:	e886 0003 	stmia.w	r6, {r0, r1}
 801495e:	f000 80d1 	beq.w	8014b04 <stroke_path+0x204>
 8014962:	0662      	lsls	r2, r4, #25
 8014964:	f000 8095 	beq.w	8014a92 <stroke_path+0x192>
 8014968:	9909      	ldr	r1, [sp, #36]	@ 0x24
 801496a:	f89d e064 	ldrb.w	lr, [sp, #100]	@ 0x64
 801496e:	b911      	cbnz	r1, 8014976 <stroke_path+0x76>
 8014970:	2301      	movs	r3, #1
 8014972:	f88d 3020 	strb.w	r3, [sp, #32]
 8014976:	2200      	movs	r2, #0
 8014978:	f8d9 300c 	ldr.w	r3, [r9, #12]
 801497c:	0088      	lsls	r0, r1, #2
 801497e:	181d      	adds	r5, r3, r0
 8014980:	9002      	str	r0, [sp, #8]
 8014982:	f1ba 0f06 	cmp.w	sl, #6
 8014986:	f101 0001 	add.w	r0, r1, #1
 801498a:	f88d 2022 	strb.w	r2, [sp, #34]	@ 0x22
 801498e:	46ac      	mov	ip, r5
 8014990:	4602      	mov	r2, r0
 8014992:	f000 8337 	beq.w	8015004 <stroke_path+0x704>
 8014996:	f1ba 0f05 	cmp.w	sl, #5
 801499a:	f000 840c 	beq.w	80151b6 <stroke_path+0x8b6>
 801499e:	f1ba 0f07 	cmp.w	sl, #7
 80149a2:	f00e 0e6f 	and.w	lr, lr, #111	@ 0x6f
 80149a6:	f000 8565 	beq.w	8015474 <stroke_path+0xb74>
 80149aa:	f1ba 0f08 	cmp.w	sl, #8
 80149ae:	f000 861f 	beq.w	80155f0 <stroke_path+0xcf0>
 80149b2:	f004 0e0f 	and.w	lr, r4, #15
 80149b6:	f1be 0f09 	cmp.w	lr, #9
 80149ba:	f000 8669 	beq.w	8015690 <stroke_path+0xd90>
 80149be:	f1ba 0f04 	cmp.w	sl, #4
 80149c2:	f040 8370 	bne.w	80150a6 <stroke_path+0x7a6>
 80149c6:	eddd 6a13 	vldr	s13, [sp, #76]	@ 0x4c
 80149ca:	edcd 6a0d 	vstr	s13, [sp, #52]	@ 0x34
 80149ce:	9009      	str	r0, [sp, #36]	@ 0x24
 80149d0:	eddc 7a00 	vldr	s15, [ip]
 80149d4:	f1b8 0f00 	cmp.w	r8, #0
 80149d8:	f000 83ea 	beq.w	80151b0 <stroke_path+0x8b0>
 80149dc:	ed9d 7a14 	vldr	s14, [sp, #80]	@ 0x50
 80149e0:	ee77 7a27 	vadd.f32	s15, s14, s15
 80149e4:	edcd 7a0e 	vstr	s15, [sp, #56]	@ 0x38
 80149e8:	4d44      	ldr	r5, [pc, #272]	@ (8014afc <stroke_path+0x1fc>)
 80149ea:	682b      	ldr	r3, [r5, #0]
 80149ec:	7f1b      	ldrb	r3, [r3, #28]
 80149ee:	2b00      	cmp	r3, #0
 80149f0:	f000 82fe 	beq.w	8014ff0 <stroke_path+0x6f0>
 80149f4:	ed9d 7a17 	vldr	s14, [sp, #92]	@ 0x5c
 80149f8:	ee36 7ac7 	vsub.f32	s14, s13, s14
 80149fc:	eeb5 7a40 	vcmp.f32	s14, #0.0
 8014a00:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8014a04:	d109      	bne.n	8014a1a <stroke_path+0x11a>
 8014a06:	ed9d 7a18 	vldr	s14, [sp, #96]	@ 0x60
 8014a0a:	ee37 7ac7 	vsub.f32	s14, s15, s14
 8014a0e:	eeb5 7a40 	vcmp.f32	s14, #0.0
 8014a12:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8014a16:	f000 8427 	beq.w	8015268 <stroke_path+0x968>
 8014a1a:	2301      	movs	r3, #1
 8014a1c:	f88d 3021 	strb.w	r3, [sp, #33]	@ 0x21
 8014a20:	f89d 3022 	ldrb.w	r3, [sp, #34]	@ 0x22
 8014a24:	edcd 6a13 	vstr	s13, [sp, #76]	@ 0x4c
 8014a28:	edcd 7a14 	vstr	s15, [sp, #80]	@ 0x50
 8014a2c:	f88d 4064 	strb.w	r4, [sp, #100]	@ 0x64
 8014a30:	2b00      	cmp	r3, #0
 8014a32:	d146      	bne.n	8014ac2 <stroke_path+0x1c2>
 8014a34:	0623      	lsls	r3, r4, #24
 8014a36:	d444      	bmi.n	8014ac2 <stroke_path+0x1c2>
 8014a38:	f004 036d 	and.w	r3, r4, #109	@ 0x6d
 8014a3c:	2b05      	cmp	r3, #5
 8014a3e:	f000 81dd 	beq.w	8014dfc <stroke_path+0x4fc>
 8014a42:	f1ba 0f06 	cmp.w	sl, #6
 8014a46:	f000 8283 	beq.w	8014f50 <stroke_path+0x650>
 8014a4a:	f1ba 0f08 	cmp.w	sl, #8
 8014a4e:	f000 827f 	beq.w	8014f50 <stroke_path+0x650>
 8014a52:	f004 040f 	and.w	r4, r4, #15
 8014a56:	2c09      	cmp	r4, #9
 8014a58:	f000 85bf 	beq.w	80155da <stroke_path+0xcda>
 8014a5c:	f1aa 0a0a 	sub.w	sl, sl, #10
 8014a60:	f1ba 0f01 	cmp.w	sl, #1
 8014a64:	f200 83d5 	bhi.w	8015212 <stroke_path+0x912>
 8014a68:	9d01      	ldr	r5, [sp, #4]
 8014a6a:	f8d9 3000 	ldr.w	r3, [r9]
 8014a6e:	42ab      	cmp	r3, r5
 8014a70:	f63f af64 	bhi.w	801493c <stroke_path+0x3c>
 8014a74:	f89d 0021 	ldrb.w	r0, [sp, #33]	@ 0x21
 8014a78:	2100      	movs	r1, #0
 8014a7a:	fab0 f080 	clz	r0, r0
 8014a7e:	0940      	lsrs	r0, r0, #5
 8014a80:	f7fd fe7a 	bl	8012778 <flush_lines_>
 8014a84:	2400      	movs	r4, #0
 8014a86:	4620      	mov	r0, r4
 8014a88:	b01b      	add	sp, #108	@ 0x6c
 8014a8a:	ecbd 8b0c 	vpop	{d8-d13}
 8014a8e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014a92:	f89d 3020 	ldrb.w	r3, [sp, #32]
 8014a96:	f88d 4064 	strb.w	r4, [sp, #100]	@ 0x64
 8014a9a:	2b01      	cmp	r3, #1
 8014a9c:	f04f 0300 	mov.w	r3, #0
 8014aa0:	bf07      	ittee	eq
 8014aa2:	ee18 2a10 	vmoveq	r2, s16
 8014aa6:	ee18 1a10 	vmoveq	r1, s16
 8014aaa:	9917      	ldrne	r1, [sp, #92]	@ 0x5c
 8014aac:	9a18      	ldrne	r2, [sp, #96]	@ 0x60
 8014aae:	f88d 3022 	strb.w	r3, [sp, #34]	@ 0x22
 8014ab2:	f88d 3021 	strb.w	r3, [sp, #33]	@ 0x21
 8014ab6:	0623      	lsls	r3, r4, #24
 8014ab8:	920e      	str	r2, [sp, #56]	@ 0x38
 8014aba:	910d      	str	r1, [sp, #52]	@ 0x34
 8014abc:	9113      	str	r1, [sp, #76]	@ 0x4c
 8014abe:	9214      	str	r2, [sp, #80]	@ 0x50
 8014ac0:	d5ba      	bpl.n	8014a38 <stroke_path+0x138>
 8014ac2:	4d0e      	ldr	r5, [pc, #56]	@ (8014afc <stroke_path+0x1fc>)
 8014ac4:	682b      	ldr	r3, [r5, #0]
 8014ac6:	7f5e      	ldrb	r6, [r3, #29]
 8014ac8:	f016 0610 	ands.w	r6, r6, #16
 8014acc:	d055      	beq.n	8014b7a <stroke_path+0x27a>
 8014ace:	2300      	movs	r3, #0
 8014ad0:	461a      	mov	r2, r3
 8014ad2:	4619      	mov	r1, r3
 8014ad4:	4618      	mov	r0, r3
 8014ad6:	f7fd fbf1 	bl	80122bc <nema_enable_aa>
 8014ada:	eddb 7a08 	vldr	s15, [fp, #32]
 8014ade:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8014ae2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8014ae6:	4606      	mov	r6, r0
 8014ae8:	f340 80a6 	ble.w	8014c38 <stroke_path+0x338>
 8014aec:	682b      	ldr	r3, [r5, #0]
 8014aee:	7f5b      	ldrb	r3, [r3, #29]
 8014af0:	06df      	lsls	r7, r3, #27
 8014af2:	d450      	bmi.n	8014b96 <stroke_path+0x296>
 8014af4:	e048      	b.n	8014b88 <stroke_path+0x288>
 8014af6:	bf00      	nop
 8014af8:	00000000 	.word	0x00000000
 8014afc:	20083148 	.word	0x20083148
 8014b00:	20083198 	.word	0x20083198
 8014b04:	f89d 2021 	ldrb.w	r2, [sp, #33]	@ 0x21
 8014b08:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8014b0a:	2a01      	cmp	r2, #1
 8014b0c:	4db6      	ldr	r5, [pc, #728]	@ (8014de8 <stroke_path+0x4e8>)
 8014b0e:	f000 81d4 	beq.w	8014eba <stroke_path+0x5ba>
 8014b12:	2001      	movs	r0, #1
 8014b14:	2600      	movs	r6, #0
 8014b16:	0099      	lsls	r1, r3, #2
 8014b18:	f8d9 200c 	ldr.w	r2, [r9, #12]
 8014b1c:	1d0f      	adds	r7, r1, #4
 8014b1e:	4417      	add	r7, r2
 8014b20:	440a      	add	r2, r1
 8014b22:	1819      	adds	r1, r3, r0
 8014b24:	930a      	str	r3, [sp, #40]	@ 0x28
 8014b26:	f88d 6020 	strb.w	r6, [sp, #32]
 8014b2a:	f88d 0022 	strb.w	r0, [sp, #34]	@ 0x22
 8014b2e:	3302      	adds	r3, #2
 8014b30:	9109      	str	r1, [sp, #36]	@ 0x24
 8014b32:	f1b8 0f00 	cmp.w	r8, #0
 8014b36:	f000 81b2 	beq.w	8014e9e <stroke_path+0x59e>
 8014b3a:	edd2 7a00 	vldr	s15, [r2]
 8014b3e:	eddd 6a13 	vldr	s13, [sp, #76]	@ 0x4c
 8014b42:	ee76 6aa7 	vadd.f32	s13, s13, s15
 8014b46:	9309      	str	r3, [sp, #36]	@ 0x24
 8014b48:	edcd 6a0d 	vstr	s13, [sp, #52]	@ 0x34
 8014b4c:	edd7 7a00 	vldr	s15, [r7]
 8014b50:	ed9d 7a14 	vldr	s14, [sp, #80]	@ 0x50
 8014b54:	ee77 7a27 	vadd.f32	s15, s14, s15
 8014b58:	edcd 7a0e 	vstr	s15, [sp, #56]	@ 0x38
 8014b5c:	edcd 6a17 	vstr	s13, [sp, #92]	@ 0x5c
 8014b60:	edcd 7a18 	vstr	s15, [sp, #96]	@ 0x60
 8014b64:	edcd 6a13 	vstr	s13, [sp, #76]	@ 0x4c
 8014b68:	edcd 7a14 	vstr	s15, [sp, #80]	@ 0x50
 8014b6c:	682b      	ldr	r3, [r5, #0]
 8014b6e:	f88d 4064 	strb.w	r4, [sp, #100]	@ 0x64
 8014b72:	7f5e      	ldrb	r6, [r3, #29]
 8014b74:	f016 0610 	ands.w	r6, r6, #16
 8014b78:	d1a9      	bne.n	8014ace <stroke_path+0x1ce>
 8014b7a:	eddb 7a08 	vldr	s15, [fp, #32]
 8014b7e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8014b82:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8014b86:	dd57      	ble.n	8014c38 <stroke_path+0x338>
 8014b88:	2201      	movs	r2, #1
 8014b8a:	2300      	movs	r3, #0
 8014b8c:	4611      	mov	r1, r2
 8014b8e:	4610      	mov	r0, r2
 8014b90:	f7fd fb94 	bl	80122bc <nema_enable_aa>
 8014b94:	4606      	mov	r6, r0
 8014b96:	2009      	movs	r0, #9
 8014b98:	ed9b ba00 	vldr	s22, [fp]
 8014b9c:	f8db 8010 	ldr.w	r8, [fp, #16]
 8014ba0:	eddb aa01 	vldr	s21, [fp, #4]
 8014ba4:	f8db 7014 	ldr.w	r7, [fp, #20]
 8014ba8:	ed9b aa02 	vldr	s20, [fp, #8]
 8014bac:	eddb 9a06 	vldr	s19, [fp, #24]
 8014bb0:	ed9b 9a03 	vldr	s18, [fp, #12]
 8014bb4:	eddb 8a07 	vldr	s17, [fp, #28]
 8014bb8:	f009 f9f4 	bl	801dfa4 <nema_cl_get_space>
 8014bbc:	b3a8      	cbz	r0, 8014c2a <stroke_path+0x32a>
 8014bbe:	f44f 7349 	mov.w	r3, #804	@ 0x324
 8014bc2:	f8c0 800c 	str.w	r8, [r0, #12]
 8014bc6:	f44f 7a48 	mov.w	sl, #800	@ 0x320
 8014bca:	f44f 784c 	mov.w	r8, #816	@ 0x330
 8014bce:	ed80 ba01 	vstr	s22, [r0, #4]
 8014bd2:	6083      	str	r3, [r0, #8]
 8014bd4:	f44f 7c4d 	mov.w	ip, #820	@ 0x334
 8014bd8:	61c7      	str	r7, [r0, #28]
 8014bda:	f44f 7151 	mov.w	r1, #836	@ 0x344
 8014bde:	f44f 7750 	mov.w	r7, #832	@ 0x340
 8014be2:	f44f 7254 	mov.w	r2, #848	@ 0x350
 8014be6:	f44f 7355 	mov.w	r3, #852	@ 0x354
 8014bea:	edc0 aa05 	vstr	s21, [r0, #20]
 8014bee:	ed80 aa09 	vstr	s20, [r0, #36]	@ 0x24
 8014bf2:	edc0 9a0b 	vstr	s19, [r0, #44]	@ 0x2c
 8014bf6:	ed80 9a0d 	vstr	s18, [r0, #52]	@ 0x34
 8014bfa:	edc0 8a0f 	vstr	s17, [r0, #60]	@ 0x3c
 8014bfe:	f8df e1f4 	ldr.w	lr, [pc, #500]	@ 8014df4 <stroke_path+0x4f4>
 8014c02:	f8c0 8010 	str.w	r8, [r0, #16]
 8014c06:	f8c0 a000 	str.w	sl, [r0]
 8014c0a:	f8de e010 	ldr.w	lr, [lr, #16]
 8014c0e:	f8df 81e8 	ldr.w	r8, [pc, #488]	@ 8014df8 <stroke_path+0x4f8>
 8014c12:	f04e 0e05 	orr.w	lr, lr, #5
 8014c16:	f8c0 e044 	str.w	lr, [r0, #68]	@ 0x44
 8014c1a:	f8c0 c018 	str.w	ip, [r0, #24]
 8014c1e:	6207      	str	r7, [r0, #32]
 8014c20:	6281      	str	r1, [r0, #40]	@ 0x28
 8014c22:	6302      	str	r2, [r0, #48]	@ 0x30
 8014c24:	6383      	str	r3, [r0, #56]	@ 0x38
 8014c26:	f8c0 8040 	str.w	r8, [r0, #64]	@ 0x40
 8014c2a:	682b      	ldr	r3, [r5, #0]
 8014c2c:	ed8b 8a08 	vstr	s16, [fp, #32]
 8014c30:	7f5b      	ldrb	r3, [r3, #29]
 8014c32:	06d8      	lsls	r0, r3, #27
 8014c34:	f140 813d 	bpl.w	8014eb2 <stroke_path+0x5b2>
 8014c38:	4b6c      	ldr	r3, [pc, #432]	@ (8014dec <stroke_path+0x4ec>)
 8014c3a:	edd3 7a08 	vldr	s15, [r3, #32]
 8014c3e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8014c42:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8014c46:	dd6d      	ble.n	8014d24 <stroke_path+0x424>
 8014c48:	0621      	lsls	r1, r4, #24
 8014c4a:	d46b      	bmi.n	8014d24 <stroke_path+0x424>
 8014c4c:	682b      	ldr	r3, [r5, #0]
 8014c4e:	4c68      	ldr	r4, [pc, #416]	@ (8014df0 <stroke_path+0x4f0>)
 8014c50:	7f59      	ldrb	r1, [r3, #29]
 8014c52:	f011 0110 	ands.w	r1, r1, #16
 8014c56:	d10a      	bne.n	8014c6e <stroke_path+0x36e>
 8014c58:	6823      	ldr	r3, [r4, #0]
 8014c5a:	2b01      	cmp	r3, #1
 8014c5c:	bf13      	iteet	ne
 8014c5e:	2301      	movne	r3, #1
 8014c60:	461a      	moveq	r2, r3
 8014c62:	4619      	moveq	r1, r3
 8014c64:	461a      	movne	r2, r3
 8014c66:	4618      	mov	r0, r3
 8014c68:	f7fd fb28 	bl	80122bc <nema_enable_aa>
 8014c6c:	4606      	mov	r6, r0
 8014c6e:	4b5f      	ldr	r3, [pc, #380]	@ (8014dec <stroke_path+0x4ec>)
 8014c70:	2009      	movs	r0, #9
 8014c72:	ed93 ba00 	vldr	s22, [r3]
 8014c76:	f8d3 8010 	ldr.w	r8, [r3, #16]
 8014c7a:	edd3 aa01 	vldr	s21, [r3, #4]
 8014c7e:	695f      	ldr	r7, [r3, #20]
 8014c80:	ed93 aa02 	vldr	s20, [r3, #8]
 8014c84:	edd3 9a06 	vldr	s19, [r3, #24]
 8014c88:	ed93 9a03 	vldr	s18, [r3, #12]
 8014c8c:	edd3 8a07 	vldr	s17, [r3, #28]
 8014c90:	f009 f988 	bl	801dfa4 <nema_cl_get_space>
 8014c94:	b3a8      	cbz	r0, 8014d02 <stroke_path+0x402>
 8014c96:	f44f 7349 	mov.w	r3, #804	@ 0x324
 8014c9a:	f8c0 800c 	str.w	r8, [r0, #12]
 8014c9e:	f44f 7a48 	mov.w	sl, #800	@ 0x320
 8014ca2:	f44f 784c 	mov.w	r8, #816	@ 0x330
 8014ca6:	ed80 ba01 	vstr	s22, [r0, #4]
 8014caa:	6083      	str	r3, [r0, #8]
 8014cac:	f44f 7c4d 	mov.w	ip, #820	@ 0x334
 8014cb0:	61c7      	str	r7, [r0, #28]
 8014cb2:	f44f 7151 	mov.w	r1, #836	@ 0x344
 8014cb6:	f44f 7750 	mov.w	r7, #832	@ 0x340
 8014cba:	f44f 7254 	mov.w	r2, #848	@ 0x350
 8014cbe:	f44f 7355 	mov.w	r3, #852	@ 0x354
 8014cc2:	edc0 aa05 	vstr	s21, [r0, #20]
 8014cc6:	ed80 aa09 	vstr	s20, [r0, #36]	@ 0x24
 8014cca:	edc0 9a0b 	vstr	s19, [r0, #44]	@ 0x2c
 8014cce:	ed80 9a0d 	vstr	s18, [r0, #52]	@ 0x34
 8014cd2:	edc0 8a0f 	vstr	s17, [r0, #60]	@ 0x3c
 8014cd6:	f8df e11c 	ldr.w	lr, [pc, #284]	@ 8014df4 <stroke_path+0x4f4>
 8014cda:	f8c0 8010 	str.w	r8, [r0, #16]
 8014cde:	f8c0 a000 	str.w	sl, [r0]
 8014ce2:	f8de e010 	ldr.w	lr, [lr, #16]
 8014ce6:	f8df 8110 	ldr.w	r8, [pc, #272]	@ 8014df8 <stroke_path+0x4f8>
 8014cea:	f04e 0e05 	orr.w	lr, lr, #5
 8014cee:	f8c0 e044 	str.w	lr, [r0, #68]	@ 0x44
 8014cf2:	f8c0 c018 	str.w	ip, [r0, #24]
 8014cf6:	6207      	str	r7, [r0, #32]
 8014cf8:	6281      	str	r1, [r0, #40]	@ 0x28
 8014cfa:	6302      	str	r2, [r0, #48]	@ 0x30
 8014cfc:	6383      	str	r3, [r0, #56]	@ 0x38
 8014cfe:	f8c0 8040 	str.w	r8, [r0, #64]	@ 0x40
 8014d02:	682b      	ldr	r3, [r5, #0]
 8014d04:	4a39      	ldr	r2, [pc, #228]	@ (8014dec <stroke_path+0x4ec>)
 8014d06:	7f5b      	ldrb	r3, [r3, #29]
 8014d08:	ed82 8a08 	vstr	s16, [r2, #32]
 8014d0c:	06da      	lsls	r2, r3, #27
 8014d0e:	f140 8175 	bpl.w	8014ffc <stroke_path+0x6fc>
 8014d12:	6823      	ldr	r3, [r4, #0]
 8014d14:	2b02      	cmp	r3, #2
 8014d16:	d014      	beq.n	8014d42 <stroke_path+0x442>
 8014d18:	4630      	mov	r0, r6
 8014d1a:	f7fd faf1 	bl	8012300 <nema_enable_aa_flags>
 8014d1e:	2300      	movs	r3, #0
 8014d20:	6023      	str	r3, [r4, #0]
 8014d22:	e6a1      	b.n	8014a68 <stroke_path+0x168>
 8014d24:	4c32      	ldr	r4, [pc, #200]	@ (8014df0 <stroke_path+0x4f0>)
 8014d26:	6823      	ldr	r3, [r4, #0]
 8014d28:	2b02      	cmp	r3, #2
 8014d2a:	d1f5      	bne.n	8014d18 <stroke_path+0x418>
 8014d2c:	682b      	ldr	r3, [r5, #0]
 8014d2e:	7f5b      	ldrb	r3, [r3, #29]
 8014d30:	f013 0310 	ands.w	r3, r3, #16
 8014d34:	d105      	bne.n	8014d42 <stroke_path+0x442>
 8014d36:	2201      	movs	r2, #1
 8014d38:	4619      	mov	r1, r3
 8014d3a:	4610      	mov	r0, r2
 8014d3c:	f7fd fabe 	bl	80122bc <nema_enable_aa>
 8014d40:	4606      	mov	r6, r0
 8014d42:	4b2a      	ldr	r3, [pc, #168]	@ (8014dec <stroke_path+0x4ec>)
 8014d44:	2009      	movs	r0, #9
 8014d46:	ed93 ba01 	vldr	s22, [r3, #4]
 8014d4a:	f8d3 8014 	ldr.w	r8, [r3, #20]
 8014d4e:	eddb aa00 	vldr	s21, [fp]
 8014d52:	f8db 7010 	ldr.w	r7, [fp, #16]
 8014d56:	ed93 aa02 	vldr	s20, [r3, #8]
 8014d5a:	edd3 9a06 	vldr	s19, [r3, #24]
 8014d5e:	ed9b 9a03 	vldr	s18, [fp, #12]
 8014d62:	eddb 8a07 	vldr	s17, [fp, #28]
 8014d66:	f009 f91d 	bl	801dfa4 <nema_cl_get_space>
 8014d6a:	b3a8      	cbz	r0, 8014dd8 <stroke_path+0x4d8>
 8014d6c:	f44f 7349 	mov.w	r3, #804	@ 0x324
 8014d70:	f8c0 800c 	str.w	r8, [r0, #12]
 8014d74:	f44f 7a48 	mov.w	sl, #800	@ 0x320
 8014d78:	f44f 784c 	mov.w	r8, #816	@ 0x330
 8014d7c:	ed80 ba01 	vstr	s22, [r0, #4]
 8014d80:	6083      	str	r3, [r0, #8]
 8014d82:	f44f 7c4d 	mov.w	ip, #820	@ 0x334
 8014d86:	61c7      	str	r7, [r0, #28]
 8014d88:	f44f 7151 	mov.w	r1, #836	@ 0x344
 8014d8c:	f44f 7750 	mov.w	r7, #832	@ 0x340
 8014d90:	f44f 7254 	mov.w	r2, #848	@ 0x350
 8014d94:	f44f 7355 	mov.w	r3, #852	@ 0x354
 8014d98:	edc0 aa05 	vstr	s21, [r0, #20]
 8014d9c:	ed80 aa09 	vstr	s20, [r0, #36]	@ 0x24
 8014da0:	edc0 9a0b 	vstr	s19, [r0, #44]	@ 0x2c
 8014da4:	ed80 9a0d 	vstr	s18, [r0, #52]	@ 0x34
 8014da8:	edc0 8a0f 	vstr	s17, [r0, #60]	@ 0x3c
 8014dac:	f8df e044 	ldr.w	lr, [pc, #68]	@ 8014df4 <stroke_path+0x4f4>
 8014db0:	f8c0 8010 	str.w	r8, [r0, #16]
 8014db4:	f8c0 a000 	str.w	sl, [r0]
 8014db8:	f8de e010 	ldr.w	lr, [lr, #16]
 8014dbc:	f8df 8038 	ldr.w	r8, [pc, #56]	@ 8014df8 <stroke_path+0x4f8>
 8014dc0:	f04e 0e05 	orr.w	lr, lr, #5
 8014dc4:	f8c0 e044 	str.w	lr, [r0, #68]	@ 0x44
 8014dc8:	f8c0 c018 	str.w	ip, [r0, #24]
 8014dcc:	6207      	str	r7, [r0, #32]
 8014dce:	6281      	str	r1, [r0, #40]	@ 0x28
 8014dd0:	6302      	str	r2, [r0, #48]	@ 0x30
 8014dd2:	6383      	str	r3, [r0, #56]	@ 0x38
 8014dd4:	f8c0 8040 	str.w	r8, [r0, #64]	@ 0x40
 8014dd8:	682b      	ldr	r3, [r5, #0]
 8014dda:	7f5b      	ldrb	r3, [r3, #29]
 8014ddc:	06db      	lsls	r3, r3, #27
 8014dde:	d49b      	bmi.n	8014d18 <stroke_path+0x418>
 8014de0:	4630      	mov	r0, r6
 8014de2:	f7fd fa8d 	bl	8012300 <nema_enable_aa_flags>
 8014de6:	e797      	b.n	8014d18 <stroke_path+0x418>
 8014de8:	20083148 	.word	0x20083148
 8014dec:	20083160 	.word	0x20083160
 8014df0:	200831c4 	.word	0x200831c4
 8014df4:	20000064 	.word	0x20000064
 8014df8:	ff000100 	.word	0xff000100
 8014dfc:	4dba      	ldr	r5, [pc, #744]	@ (80150e8 <stroke_path+0x7e8>)
 8014dfe:	eddd aa0f 	vldr	s21, [sp, #60]	@ 0x3c
 8014e02:	682b      	ldr	r3, [r5, #0]
 8014e04:	ed9d aa10 	vldr	s20, [sp, #64]	@ 0x40
 8014e08:	7f1a      	ldrb	r2, [r3, #28]
 8014e0a:	ed9d ca0b 	vldr	s24, [sp, #44]	@ 0x2c
 8014e0e:	eddd ba0c 	vldr	s23, [sp, #48]	@ 0x30
 8014e12:	eddd 9a0d 	vldr	s19, [sp, #52]	@ 0x34
 8014e16:	ed9d 9a0e 	vldr	s18, [sp, #56]	@ 0x38
 8014e1a:	2a00      	cmp	r2, #0
 8014e1c:	f040 81be 	bne.w	801519c <stroke_path+0x89c>
 8014e20:	4ab2      	ldr	r2, [pc, #712]	@ (80150ec <stroke_path+0x7ec>)
 8014e22:	6816      	ldr	r6, [r2, #0]
 8014e24:	2e01      	cmp	r6, #1
 8014e26:	f000 8342 	beq.w	80154ae <stroke_path+0xbae>
 8014e2a:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
 8014e2c:	2508      	movs	r5, #8
 8014e2e:	b10a      	cbz	r2, 8014e34 <stroke_path+0x534>
 8014e30:	f04f 62f0 	mov.w	r2, #125829120	@ 0x7800000
 8014e34:	49ae      	ldr	r1, [pc, #696]	@ (80150f0 <stroke_path+0x7f0>)
 8014e36:	6adc      	ldr	r4, [r3, #44]	@ 0x2c
 8014e38:	7808      	ldrb	r0, [r1, #0]
 8014e3a:	4014      	ands	r4, r2
 8014e3c:	2801      	cmp	r0, #1
 8014e3e:	d103      	bne.n	8014e48 <stroke_path+0x548>
 8014e40:	684b      	ldr	r3, [r1, #4]
 8014e42:	f003 4340 	and.w	r3, r3, #3221225472	@ 0xc0000000
 8014e46:	431c      	orrs	r4, r3
 8014e48:	2007      	movs	r0, #7
 8014e4a:	f009 f8ab 	bl	801dfa4 <nema_cl_get_space>
 8014e4e:	2800      	cmp	r0, #0
 8014e50:	f43f ae0a 	beq.w	8014a68 <stroke_path+0x168>
 8014e54:	f44f 7e48 	mov.w	lr, #800	@ 0x320
 8014e58:	f44f 7c49 	mov.w	ip, #804	@ 0x324
 8014e5c:	f44f 774c 	mov.w	r7, #816	@ 0x330
 8014e60:	f44f 764d 	mov.w	r6, #820	@ 0x334
 8014e64:	f44f 7150 	mov.w	r1, #832	@ 0x340
 8014e68:	f44f 7251 	mov.w	r2, #836	@ 0x344
 8014e6c:	4ba1      	ldr	r3, [pc, #644]	@ (80150f4 <stroke_path+0x7f4>)
 8014e6e:	432c      	orrs	r4, r5
 8014e70:	6344      	str	r4, [r0, #52]	@ 0x34
 8014e72:	ed80 ca01 	vstr	s24, [r0, #4]
 8014e76:	edc0 ba03 	vstr	s23, [r0, #12]
 8014e7a:	edc0 aa05 	vstr	s21, [r0, #20]
 8014e7e:	ed80 aa07 	vstr	s20, [r0, #28]
 8014e82:	edc0 9a09 	vstr	s19, [r0, #36]	@ 0x24
 8014e86:	ed80 9a0b 	vstr	s18, [r0, #44]	@ 0x2c
 8014e8a:	f8c0 e000 	str.w	lr, [r0]
 8014e8e:	f8c0 c008 	str.w	ip, [r0, #8]
 8014e92:	6107      	str	r7, [r0, #16]
 8014e94:	6186      	str	r6, [r0, #24]
 8014e96:	6201      	str	r1, [r0, #32]
 8014e98:	6282      	str	r2, [r0, #40]	@ 0x28
 8014e9a:	6303      	str	r3, [r0, #48]	@ 0x30
 8014e9c:	e5e4      	b.n	8014a68 <stroke_path+0x168>
 8014e9e:	edd2 6a00 	vldr	s13, [r2]
 8014ea2:	9309      	str	r3, [sp, #36]	@ 0x24
 8014ea4:	edcd 6a0d 	vstr	s13, [sp, #52]	@ 0x34
 8014ea8:	edd7 7a00 	vldr	s15, [r7]
 8014eac:	edcd 7a0e 	vstr	s15, [sp, #56]	@ 0x38
 8014eb0:	e654      	b.n	8014b5c <stroke_path+0x25c>
 8014eb2:	4630      	mov	r0, r6
 8014eb4:	f7fd fa24 	bl	8012300 <nema_enable_aa_flags>
 8014eb8:	e6be      	b.n	8014c38 <stroke_path+0x338>
 8014eba:	2b00      	cmp	r3, #0
 8014ebc:	f43f ae29 	beq.w	8014b12 <stroke_path+0x212>
 8014ec0:	682a      	ldr	r2, [r5, #0]
 8014ec2:	7f12      	ldrb	r2, [r2, #28]
 8014ec4:	2a00      	cmp	r2, #0
 8014ec6:	f43f ae24 	beq.w	8014b12 <stroke_path+0x212>
 8014eca:	f89d 3020 	ldrb.w	r3, [sp, #32]
 8014ece:	2b00      	cmp	r3, #0
 8014ed0:	f040 83c5 	bne.w	801565e <stroke_path+0xd5e>
 8014ed4:	eddd 8a17 	vldr	s17, [sp, #92]	@ 0x5c
 8014ed8:	f8dd a060 	ldr.w	sl, [sp, #96]	@ 0x60
 8014edc:	4a86      	ldr	r2, [pc, #536]	@ (80150f8 <stroke_path+0x7f8>)
 8014ede:	4b87      	ldr	r3, [pc, #540]	@ (80150fc <stroke_path+0x7fc>)
 8014ee0:	2007      	movs	r0, #7
 8014ee2:	edcd 8a06 	vstr	s17, [sp, #24]
 8014ee6:	f8cd a01c 	str.w	sl, [sp, #28]
 8014eea:	6817      	ldr	r7, [r2, #0]
 8014eec:	681e      	ldr	r6, [r3, #0]
 8014eee:	f009 f859 	bl	801dfa4 <nema_cl_get_space>
 8014ef2:	b358      	cbz	r0, 8014f4c <stroke_path+0x64c>
 8014ef4:	4a7e      	ldr	r2, [pc, #504]	@ (80150f0 <stroke_path+0x7f0>)
 8014ef6:	682b      	ldr	r3, [r5, #0]
 8014ef8:	7811      	ldrb	r1, [r2, #0]
 8014efa:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8014efc:	2901      	cmp	r1, #1
 8014efe:	f003 63f0 	and.w	r3, r3, #125829120	@ 0x7800000
 8014f02:	f000 83f2 	beq.w	80156ea <stroke_path+0xdea>
 8014f06:	f44f 7248 	mov.w	r2, #800	@ 0x320
 8014f0a:	f44f 7149 	mov.w	r1, #804	@ 0x324
 8014f0e:	6002      	str	r2, [r0, #0]
 8014f10:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8014f12:	6081      	str	r1, [r0, #8]
 8014f14:	6042      	str	r2, [r0, #4]
 8014f16:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 8014f18:	f44f 7e4c 	mov.w	lr, #816	@ 0x330
 8014f1c:	f44f 7c4d 	mov.w	ip, #820	@ 0x334
 8014f20:	60c2      	str	r2, [r0, #12]
 8014f22:	f44f 71a0 	mov.w	r1, #320	@ 0x140
 8014f26:	f44f 72a2 	mov.w	r2, #324	@ 0x144
 8014f2a:	edc0 8a05 	vstr	s17, [r0, #20]
 8014f2e:	f043 0304 	orr.w	r3, r3, #4
 8014f32:	6343      	str	r3, [r0, #52]	@ 0x34
 8014f34:	4b6f      	ldr	r3, [pc, #444]	@ (80150f4 <stroke_path+0x7f4>)
 8014f36:	f8c0 a01c 	str.w	sl, [r0, #28]
 8014f3a:	6247      	str	r7, [r0, #36]	@ 0x24
 8014f3c:	62c6      	str	r6, [r0, #44]	@ 0x2c
 8014f3e:	f8c0 e010 	str.w	lr, [r0, #16]
 8014f42:	f8c0 c018 	str.w	ip, [r0, #24]
 8014f46:	6201      	str	r1, [r0, #32]
 8014f48:	6282      	str	r2, [r0, #40]	@ 0x28
 8014f4a:	6303      	str	r3, [r0, #48]	@ 0x30
 8014f4c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8014f4e:	e5e0      	b.n	8014b12 <stroke_path+0x212>
 8014f50:	4d65      	ldr	r5, [pc, #404]	@ (80150e8 <stroke_path+0x7e8>)
 8014f52:	682b      	ldr	r3, [r5, #0]
 8014f54:	7f1a      	ldrb	r2, [r3, #28]
 8014f56:	2a00      	cmp	r2, #0
 8014f58:	f040 8201 	bne.w	801535e <stroke_path+0xa5e>
 8014f5c:	4a63      	ldr	r2, [pc, #396]	@ (80150ec <stroke_path+0x7ec>)
 8014f5e:	6814      	ldr	r4, [r2, #0]
 8014f60:	2c01      	cmp	r4, #1
 8014f62:	f000 840b 	beq.w	801577c <stroke_path+0xe7c>
 8014f66:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
 8014f68:	2509      	movs	r5, #9
 8014f6a:	2a00      	cmp	r2, #0
 8014f6c:	f040 8171 	bne.w	8015252 <stroke_path+0x952>
 8014f70:	495f      	ldr	r1, [pc, #380]	@ (80150f0 <stroke_path+0x7f0>)
 8014f72:	6adc      	ldr	r4, [r3, #44]	@ 0x2c
 8014f74:	7808      	ldrb	r0, [r1, #0]
 8014f76:	4014      	ands	r4, r2
 8014f78:	2801      	cmp	r0, #1
 8014f7a:	d103      	bne.n	8014f84 <stroke_path+0x684>
 8014f7c:	684b      	ldr	r3, [r1, #4]
 8014f7e:	f003 4340 	and.w	r3, r3, #3221225472	@ 0xc0000000
 8014f82:	431c      	orrs	r4, r3
 8014f84:	2009      	movs	r0, #9
 8014f86:	f009 f80d 	bl	801dfa4 <nema_cl_get_space>
 8014f8a:	2800      	cmp	r0, #0
 8014f8c:	f43f ad6c 	beq.w	8014a68 <stroke_path+0x168>
 8014f90:	f44f 7748 	mov.w	r7, #800	@ 0x320
 8014f94:	f44f 7849 	mov.w	r8, #804	@ 0x324
 8014f98:	f44f 7e4c 	mov.w	lr, #816	@ 0x330
 8014f9c:	f44f 7c4d 	mov.w	ip, #820	@ 0x334
 8014fa0:	f44f 7351 	mov.w	r3, #836	@ 0x344
 8014fa4:	f44f 7150 	mov.w	r1, #832	@ 0x340
 8014fa8:	f44f 7654 	mov.w	r6, #848	@ 0x350
 8014fac:	f44f 7255 	mov.w	r2, #852	@ 0x354
 8014fb0:	6007      	str	r7, [r0, #0]
 8014fb2:	9f0b      	ldr	r7, [sp, #44]	@ 0x2c
 8014fb4:	f8c0 8008 	str.w	r8, [r0, #8]
 8014fb8:	6047      	str	r7, [r0, #4]
 8014fba:	9f0c      	ldr	r7, [sp, #48]	@ 0x30
 8014fbc:	f8c0 e010 	str.w	lr, [r0, #16]
 8014fc0:	60c7      	str	r7, [r0, #12]
 8014fc2:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 8014fc4:	f8c0 c018 	str.w	ip, [r0, #24]
 8014fc8:	6147      	str	r7, [r0, #20]
 8014fca:	6283      	str	r3, [r0, #40]	@ 0x28
 8014fcc:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8014fce:	6201      	str	r1, [r0, #32]
 8014fd0:	61c3      	str	r3, [r0, #28]
 8014fd2:	9911      	ldr	r1, [sp, #68]	@ 0x44
 8014fd4:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8014fd6:	6241      	str	r1, [r0, #36]	@ 0x24
 8014fd8:	9912      	ldr	r1, [sp, #72]	@ 0x48
 8014fda:	6343      	str	r3, [r0, #52]	@ 0x34
 8014fdc:	62c1      	str	r1, [r0, #44]	@ 0x2c
 8014fde:	4b45      	ldr	r3, [pc, #276]	@ (80150f4 <stroke_path+0x7f4>)
 8014fe0:	990e      	ldr	r1, [sp, #56]	@ 0x38
 8014fe2:	432c      	orrs	r4, r5
 8014fe4:	6444      	str	r4, [r0, #68]	@ 0x44
 8014fe6:	6306      	str	r6, [r0, #48]	@ 0x30
 8014fe8:	63c1      	str	r1, [r0, #60]	@ 0x3c
 8014fea:	6382      	str	r2, [r0, #56]	@ 0x38
 8014fec:	6403      	str	r3, [r0, #64]	@ 0x40
 8014fee:	e53b      	b.n	8014a68 <stroke_path+0x168>
 8014ff0:	2201      	movs	r2, #1
 8014ff2:	f89d 3022 	ldrb.w	r3, [sp, #34]	@ 0x22
 8014ff6:	f88d 2021 	strb.w	r2, [sp, #33]	@ 0x21
 8014ffa:	e513      	b.n	8014a24 <stroke_path+0x124>
 8014ffc:	4630      	mov	r0, r6
 8014ffe:	f7fd f97f 	bl	8012300 <nema_enable_aa_flags>
 8015002:	e690      	b.n	8014d26 <stroke_path+0x426>
 8015004:	9009      	str	r0, [sp, #36]	@ 0x24
 8015006:	ed95 6a00 	vldr	s12, [r5]
 801500a:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 801500e:	1c8a      	adds	r2, r1, #2
 8015010:	9209      	str	r2, [sp, #36]	@ 0x24
 8015012:	edd5 6a01 	vldr	s13, [r5, #4]
 8015016:	edcd 6a10 	vstr	s13, [sp, #64]	@ 0x40
 801501a:	1cca      	adds	r2, r1, #3
 801501c:	9209      	str	r2, [sp, #36]	@ 0x24
 801501e:	ed95 7a02 	vldr	s14, [r5, #8]
 8015022:	ed8d 7a11 	vstr	s14, [sp, #68]	@ 0x44
 8015026:	3104      	adds	r1, #4
 8015028:	9109      	str	r1, [sp, #36]	@ 0x24
 801502a:	edd5 7a03 	vldr	s15, [r5, #12]
 801502e:	edcd 7a12 	vstr	s15, [sp, #72]	@ 0x48
 8015032:	f1b8 0f00 	cmp.w	r8, #0
 8015036:	d013      	beq.n	8015060 <stroke_path+0x760>
 8015038:	ed9d 5a13 	vldr	s10, [sp, #76]	@ 0x4c
 801503c:	eddd 5a14 	vldr	s11, [sp, #80]	@ 0x50
 8015040:	ee36 6a05 	vadd.f32	s12, s12, s10
 8015044:	ee37 7a05 	vadd.f32	s14, s14, s10
 8015048:	ee76 6aa5 	vadd.f32	s13, s13, s11
 801504c:	ee77 7aa5 	vadd.f32	s15, s15, s11
 8015050:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 8015054:	ed8d 7a11 	vstr	s14, [sp, #68]	@ 0x44
 8015058:	edcd 6a10 	vstr	s13, [sp, #64]	@ 0x40
 801505c:	edcd 7a12 	vstr	s15, [sp, #72]	@ 0x48
 8015060:	ed8d 7a15 	vstr	s14, [sp, #84]	@ 0x54
 8015064:	edcd 7a16 	vstr	s15, [sp, #88]	@ 0x58
 8015068:	008a      	lsls	r2, r1, #2
 801506a:	1c48      	adds	r0, r1, #1
 801506c:	9202      	str	r2, [sp, #8]
 801506e:	9d02      	ldr	r5, [sp, #8]
 8015070:	9009      	str	r0, [sp, #36]	@ 0x24
 8015072:	1d2a      	adds	r2, r5, #4
 8015074:	441a      	add	r2, r3
 8015076:	442b      	add	r3, r5
 8015078:	3102      	adds	r1, #2
 801507a:	edd3 6a00 	vldr	s13, [r3]
 801507e:	f1b8 0f00 	cmp.w	r8, #0
 8015082:	f000 8090 	beq.w	80151a6 <stroke_path+0x8a6>
 8015086:	eddd 7a13 	vldr	s15, [sp, #76]	@ 0x4c
 801508a:	ee76 6aa7 	vadd.f32	s13, s13, s15
 801508e:	edcd 6a0d 	vstr	s13, [sp, #52]	@ 0x34
 8015092:	9109      	str	r1, [sp, #36]	@ 0x24
 8015094:	ed92 7a00 	vldr	s14, [r2]
 8015098:	eddd 7a14 	vldr	s15, [sp, #80]	@ 0x50
 801509c:	ee77 7a27 	vadd.f32	s15, s14, s15
 80150a0:	edcd 7a0e 	vstr	s15, [sp, #56]	@ 0x38
 80150a4:	e4a0      	b.n	80149e8 <stroke_path+0xe8>
 80150a6:	f1ba 0f03 	cmp.w	sl, #3
 80150aa:	f000 80a0 	beq.w	80151ee <stroke_path+0x8ee>
 80150ae:	f1ba 0f0a 	cmp.w	sl, #10
 80150b2:	f040 8424 	bne.w	80158fe <stroke_path+0xffe>
 80150b6:	9009      	str	r0, [sp, #36]	@ 0x24
 80150b8:	eddc 7a00 	vldr	s15, [ip]
 80150bc:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80150c0:	ee17 1a90 	vmov	r1, s15
 80150c4:	eb01 71d1 	add.w	r1, r1, r1, lsr #31
 80150c8:	1049      	asrs	r1, r1, #1
 80150ca:	2900      	cmp	r1, #0
 80150cc:	9102      	str	r1, [sp, #8]
 80150ce:	f340 8158 	ble.w	8015382 <stroke_path+0xa82>
 80150d2:	2100      	movs	r1, #0
 80150d4:	4d04      	ldr	r5, [pc, #16]	@ (80150e8 <stroke_path+0x7e8>)
 80150d6:	f8cd a014 	str.w	sl, [sp, #20]
 80150da:	f8cd 800c 	str.w	r8, [sp, #12]
 80150de:	46aa      	mov	sl, r5
 80150e0:	46c8      	mov	r8, r9
 80150e2:	46a1      	mov	r9, r4
 80150e4:	460c      	mov	r4, r1
 80150e6:	e045      	b.n	8015174 <stroke_path+0x874>
 80150e8:	20083148 	.word	0x20083148
 80150ec:	20083150 	.word	0x20083150
 80150f0:	20000064 	.word	0x20000064
 80150f4:	ff000100 	.word	0xff000100
 80150f8:	20083154 	.word	0x20083154
 80150fc:	20083158 	.word	0x20083158
 8015100:	ed9d 1a13 	vldr	s2, [sp, #76]	@ 0x4c
 8015104:	ee78 8a81 	vadd.f32	s17, s17, s2
 8015108:	edcd 8a0d 	vstr	s17, [sp, #52]	@ 0x34
 801510c:	9209      	str	r2, [sp, #36]	@ 0x24
 801510e:	ed91 9a00 	vldr	s18, [r1]
 8015112:	eddd 1a14 	vldr	s3, [sp, #80]	@ 0x50
 8015116:	ee39 9a21 	vadd.f32	s18, s18, s3
 801511a:	ed8d 9a0e 	vstr	s18, [sp, #56]	@ 0x38
 801511e:	edcd 8a13 	vstr	s17, [sp, #76]	@ 0x4c
 8015122:	ed8d 9a14 	vstr	s18, [sp, #80]	@ 0x50
 8015126:	f8da 3000 	ldr.w	r3, [sl]
 801512a:	f88d 9064 	strb.w	r9, [sp, #100]	@ 0x64
 801512e:	7f1a      	ldrb	r2, [r3, #28]
 8015130:	2a00      	cmp	r2, #0
 8015132:	f040 80d0 	bne.w	80152d6 <stroke_path+0x9d6>
 8015136:	4ac8      	ldr	r2, [pc, #800]	@ (8015458 <stroke_path+0xb58>)
 8015138:	eddd 9a0b 	vldr	s19, [sp, #44]	@ 0x2c
 801513c:	6812      	ldr	r2, [r2, #0]
 801513e:	ed9d aa0c 	vldr	s20, [sp, #48]	@ 0x30
 8015142:	2a00      	cmp	r2, #0
 8015144:	f000 82db 	beq.w	80156fe <stroke_path+0xdfe>
 8015148:	eef0 1a49 	vmov.f32	s3, s18
 801514c:	eeb0 1a68 	vmov.f32	s2, s17
 8015150:	eef0 0a4a 	vmov.f32	s1, s20
 8015154:	eeb0 0a69 	vmov.f32	s0, s19
 8015158:	f7fd fd1e 	bl	8012b98 <raster_stroked_line_>
 801515c:	e897 0003 	ldmia.w	r7, {r0, r1}
 8015160:	9b02      	ldr	r3, [sp, #8]
 8015162:	3401      	adds	r4, #1
 8015164:	429c      	cmp	r4, r3
 8015166:	e886 0003 	stmia.w	r6, {r0, r1}
 801516a:	f000 8106 	beq.w	801537a <stroke_path+0xa7a>
 801516e:	f8d8 300c 	ldr.w	r3, [r8, #12]
 8015172:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8015174:	0090      	lsls	r0, r2, #2
 8015176:	1d01      	adds	r1, r0, #4
 8015178:	4419      	add	r1, r3
 801517a:	9d03      	ldr	r5, [sp, #12]
 801517c:	4403      	add	r3, r0
 801517e:	1c50      	adds	r0, r2, #1
 8015180:	9009      	str	r0, [sp, #36]	@ 0x24
 8015182:	3202      	adds	r2, #2
 8015184:	edd3 8a00 	vldr	s17, [r3]
 8015188:	2d00      	cmp	r5, #0
 801518a:	d1b9      	bne.n	8015100 <stroke_path+0x800>
 801518c:	edcd 8a0d 	vstr	s17, [sp, #52]	@ 0x34
 8015190:	9209      	str	r2, [sp, #36]	@ 0x24
 8015192:	ed91 9a00 	vldr	s18, [r1]
 8015196:	ed8d 9a0e 	vstr	s18, [sp, #56]	@ 0x38
 801519a:	e7c0      	b.n	801511e <stroke_path+0x81e>
 801519c:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
 801519e:	2a00      	cmp	r2, #0
 80151a0:	d14d      	bne.n	801523e <stroke_path+0x93e>
 80151a2:	2506      	movs	r5, #6
 80151a4:	e646      	b.n	8014e34 <stroke_path+0x534>
 80151a6:	edcd 6a0d 	vstr	s13, [sp, #52]	@ 0x34
 80151aa:	9109      	str	r1, [sp, #36]	@ 0x24
 80151ac:	edd2 7a00 	vldr	s15, [r2]
 80151b0:	edcd 7a0e 	vstr	s15, [sp, #56]	@ 0x38
 80151b4:	e418      	b.n	80149e8 <stroke_path+0xe8>
 80151b6:	9009      	str	r0, [sp, #36]	@ 0x24
 80151b8:	ed95 7a00 	vldr	s14, [r5]
 80151bc:	ed8d 7a0f 	vstr	s14, [sp, #60]	@ 0x3c
 80151c0:	3102      	adds	r1, #2
 80151c2:	9109      	str	r1, [sp, #36]	@ 0x24
 80151c4:	edd5 7a01 	vldr	s15, [r5, #4]
 80151c8:	edcd 7a10 	vstr	s15, [sp, #64]	@ 0x40
 80151cc:	f1b8 0f00 	cmp.w	r8, #0
 80151d0:	f43f af46 	beq.w	8015060 <stroke_path+0x760>
 80151d4:	ed9d 6a13 	vldr	s12, [sp, #76]	@ 0x4c
 80151d8:	eddd 6a14 	vldr	s13, [sp, #80]	@ 0x50
 80151dc:	ee37 7a06 	vadd.f32	s14, s14, s12
 80151e0:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80151e4:	ed8d 7a0f 	vstr	s14, [sp, #60]	@ 0x3c
 80151e8:	edcd 7a10 	vstr	s15, [sp, #64]	@ 0x40
 80151ec:	e738      	b.n	8015060 <stroke_path+0x760>
 80151ee:	eddd 7a14 	vldr	s15, [sp, #80]	@ 0x50
 80151f2:	9009      	str	r0, [sp, #36]	@ 0x24
 80151f4:	f1b8 0f00 	cmp.w	r8, #0
 80151f8:	d02e      	beq.n	8015258 <stroke_path+0x958>
 80151fa:	ed9c 7a00 	vldr	s14, [ip]
 80151fe:	eddd 6a13 	vldr	s13, [sp, #76]	@ 0x4c
 8015202:	ee76 6a87 	vadd.f32	s13, s13, s14
 8015206:	edcd 7a0e 	vstr	s15, [sp, #56]	@ 0x38
 801520a:	edcd 6a0d 	vstr	s13, [sp, #52]	@ 0x34
 801520e:	f7ff bbeb 	b.w	80149e8 <stroke_path+0xe8>
 8015212:	4b91      	ldr	r3, [pc, #580]	@ (8015458 <stroke_path+0xb58>)
 8015214:	eddd 8a0b 	vldr	s17, [sp, #44]	@ 0x2c
 8015218:	681b      	ldr	r3, [r3, #0]
 801521a:	ed9d 9a0c 	vldr	s18, [sp, #48]	@ 0x30
 801521e:	eddd 9a0d 	vldr	s19, [sp, #52]	@ 0x34
 8015222:	ed9d aa0e 	vldr	s20, [sp, #56]	@ 0x38
 8015226:	b333      	cbz	r3, 8015276 <stroke_path+0x976>
 8015228:	eef0 1a4a 	vmov.f32	s3, s20
 801522c:	eeb0 1a69 	vmov.f32	s2, s19
 8015230:	eef0 0a49 	vmov.f32	s1, s18
 8015234:	eeb0 0a68 	vmov.f32	s0, s17
 8015238:	f7fd fcae 	bl	8012b98 <raster_stroked_line_>
 801523c:	e414      	b.n	8014a68 <stroke_path+0x168>
 801523e:	4a87      	ldr	r2, [pc, #540]	@ (801545c <stroke_path+0xb5c>)
 8015240:	2506      	movs	r5, #6
 8015242:	6812      	ldr	r2, [r2, #0]
 8015244:	2a00      	cmp	r2, #0
 8015246:	bf14      	ite	ne
 8015248:	f04f 6280 	movne.w	r2, #67108864	@ 0x4000000
 801524c:	f04f 62f0 	moveq.w	r2, #125829120	@ 0x7800000
 8015250:	e5f0      	b.n	8014e34 <stroke_path+0x534>
 8015252:	f04f 62f0 	mov.w	r2, #125829120	@ 0x7800000
 8015256:	e68b      	b.n	8014f70 <stroke_path+0x670>
 8015258:	eddc 6a00 	vldr	s13, [ip]
 801525c:	edcd 7a0e 	vstr	s15, [sp, #56]	@ 0x38
 8015260:	edcd 6a0d 	vstr	s13, [sp, #52]	@ 0x34
 8015264:	f7ff bbc0 	b.w	80149e8 <stroke_path+0xe8>
 8015268:	2300      	movs	r3, #0
 801526a:	f88d 3021 	strb.w	r3, [sp, #33]	@ 0x21
 801526e:	f89d 3022 	ldrb.w	r3, [sp, #34]	@ 0x22
 8015272:	f7ff bbd7 	b.w	8014a24 <stroke_path+0x124>
 8015276:	4d7a      	ldr	r5, [pc, #488]	@ (8015460 <stroke_path+0xb60>)
 8015278:	497a      	ldr	r1, [pc, #488]	@ (8015464 <stroke_path+0xb64>)
 801527a:	682a      	ldr	r2, [r5, #0]
 801527c:	7808      	ldrb	r0, [r1, #0]
 801527e:	e9d2 340a 	ldrd	r3, r4, [r2, #40]	@ 0x28
 8015282:	2b00      	cmp	r3, #0
 8015284:	bf18      	it	ne
 8015286:	f04f 63f0 	movne.w	r3, #125829120	@ 0x7800000
 801528a:	2801      	cmp	r0, #1
 801528c:	ea04 0403 	and.w	r4, r4, r3
 8015290:	f000 8230 	beq.w	80156f4 <stroke_path+0xdf4>
 8015294:	2005      	movs	r0, #5
 8015296:	f008 fe85 	bl	801dfa4 <nema_cl_get_space>
 801529a:	2800      	cmp	r0, #0
 801529c:	f43f abe4 	beq.w	8014a68 <stroke_path+0x168>
 80152a0:	f44f 7648 	mov.w	r6, #800	@ 0x320
 80152a4:	f44f 7549 	mov.w	r5, #804	@ 0x324
 80152a8:	f44f 714c 	mov.w	r1, #816	@ 0x330
 80152ac:	f44f 724d 	mov.w	r2, #820	@ 0x334
 80152b0:	4b6d      	ldr	r3, [pc, #436]	@ (8015468 <stroke_path+0xb68>)
 80152b2:	f044 040a 	orr.w	r4, r4, #10
 80152b6:	6244      	str	r4, [r0, #36]	@ 0x24
 80152b8:	edc0 8a01 	vstr	s17, [r0, #4]
 80152bc:	ed80 9a03 	vstr	s18, [r0, #12]
 80152c0:	edc0 9a05 	vstr	s19, [r0, #20]
 80152c4:	ed80 aa07 	vstr	s20, [r0, #28]
 80152c8:	6006      	str	r6, [r0, #0]
 80152ca:	6085      	str	r5, [r0, #8]
 80152cc:	6101      	str	r1, [r0, #16]
 80152ce:	6182      	str	r2, [r0, #24]
 80152d0:	6203      	str	r3, [r0, #32]
 80152d2:	f7ff bbc9 	b.w	8014a68 <stroke_path+0x168>
 80152d6:	4a65      	ldr	r2, [pc, #404]	@ (801546c <stroke_path+0xb6c>)
 80152d8:	4b65      	ldr	r3, [pc, #404]	@ (8015470 <stroke_path+0xb70>)
 80152da:	6812      	ldr	r2, [r2, #0]
 80152dc:	2007      	movs	r0, #7
 80152de:	9204      	str	r2, [sp, #16]
 80152e0:	681d      	ldr	r5, [r3, #0]
 80152e2:	f008 fe5f 	bl	801dfa4 <nema_cl_get_space>
 80152e6:	2800      	cmp	r0, #0
 80152e8:	f43f af38 	beq.w	801515c <stroke_path+0x85c>
 80152ec:	4a5d      	ldr	r2, [pc, #372]	@ (8015464 <stroke_path+0xb64>)
 80152ee:	f8da 3000 	ldr.w	r3, [sl]
 80152f2:	7812      	ldrb	r2, [r2, #0]
 80152f4:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80152f6:	2a01      	cmp	r2, #1
 80152f8:	f003 63f0 	and.w	r3, r3, #125829120	@ 0x7800000
 80152fc:	d104      	bne.n	8015308 <stroke_path+0xa08>
 80152fe:	4a59      	ldr	r2, [pc, #356]	@ (8015464 <stroke_path+0xb64>)
 8015300:	6852      	ldr	r2, [r2, #4]
 8015302:	f002 4240 	and.w	r2, r2, #3221225472	@ 0xc0000000
 8015306:	4313      	orrs	r3, r2
 8015308:	f44f 7248 	mov.w	r2, #800	@ 0x320
 801530c:	6002      	str	r2, [r0, #0]
 801530e:	eddd 7a0b 	vldr	s15, [sp, #44]	@ 0x2c
 8015312:	f44f 7249 	mov.w	r2, #804	@ 0x324
 8015316:	f44f 7e4d 	mov.w	lr, #820	@ 0x334
 801531a:	f44f 7c4c 	mov.w	ip, #816	@ 0x330
 801531e:	6082      	str	r2, [r0, #8]
 8015320:	edc0 7a01 	vstr	s15, [r0, #4]
 8015324:	f8c0 e018 	str.w	lr, [r0, #24]
 8015328:	f8dd e030 	ldr.w	lr, [sp, #48]	@ 0x30
 801532c:	f8c0 c010 	str.w	ip, [r0, #16]
 8015330:	f8c0 e00c 	str.w	lr, [r0, #12]
 8015334:	f043 0304 	orr.w	r3, r3, #4
 8015338:	f8dd c034 	ldr.w	ip, [sp, #52]	@ 0x34
 801533c:	6343      	str	r3, [r0, #52]	@ 0x34
 801533e:	9b04      	ldr	r3, [sp, #16]
 8015340:	f8c0 c014 	str.w	ip, [r0, #20]
 8015344:	6243      	str	r3, [r0, #36]	@ 0x24
 8015346:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8015348:	f44f 71a0 	mov.w	r1, #320	@ 0x140
 801534c:	61c3      	str	r3, [r0, #28]
 801534e:	f44f 73a2 	mov.w	r3, #324	@ 0x144
 8015352:	4a45      	ldr	r2, [pc, #276]	@ (8015468 <stroke_path+0xb68>)
 8015354:	62c5      	str	r5, [r0, #44]	@ 0x2c
 8015356:	6302      	str	r2, [r0, #48]	@ 0x30
 8015358:	6201      	str	r1, [r0, #32]
 801535a:	6283      	str	r3, [r0, #40]	@ 0x28
 801535c:	e6fe      	b.n	801515c <stroke_path+0x85c>
 801535e:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
 8015360:	2a00      	cmp	r2, #0
 8015362:	f000 817a 	beq.w	801565a <stroke_path+0xd5a>
 8015366:	4a3d      	ldr	r2, [pc, #244]	@ (801545c <stroke_path+0xb5c>)
 8015368:	2507      	movs	r5, #7
 801536a:	6812      	ldr	r2, [r2, #0]
 801536c:	2a00      	cmp	r2, #0
 801536e:	bf14      	ite	ne
 8015370:	f04f 6280 	movne.w	r2, #67108864	@ 0x4000000
 8015374:	f04f 62f0 	moveq.w	r2, #125829120	@ 0x7800000
 8015378:	e5fa      	b.n	8014f70 <stroke_path+0x670>
 801537a:	464c      	mov	r4, r9
 801537c:	46c1      	mov	r9, r8
 801537e:	f8dd a014 	ldr.w	sl, [sp, #20]
 8015382:	eddd 8a17 	vldr	s17, [sp, #92]	@ 0x5c
 8015386:	eddd 7a13 	vldr	s15, [sp, #76]	@ 0x4c
 801538a:	ee77 7ae8 	vsub.f32	s15, s15, s17
 801538e:	eef5 7a40 	vcmp.f32	s15, #0.0
 8015392:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8015396:	ed9d 9a18 	vldr	s18, [sp, #96]	@ 0x60
 801539a:	d108      	bne.n	80153ae <stroke_path+0xaae>
 801539c:	eddd 7a14 	vldr	s15, [sp, #80]	@ 0x50
 80153a0:	ee77 7ac9 	vsub.f32	s15, s15, s18
 80153a4:	eef5 7a40 	vcmp.f32	s15, #0.0
 80153a8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80153ac:	d04c      	beq.n	8015448 <stroke_path+0xb48>
 80153ae:	e897 0003 	ldmia.w	r7, {r0, r1}
 80153b2:	edcd 8a13 	vstr	s17, [sp, #76]	@ 0x4c
 80153b6:	ed8d 9a14 	vstr	s18, [sp, #80]	@ 0x50
 80153ba:	4d29      	ldr	r5, [pc, #164]	@ (8015460 <stroke_path+0xb60>)
 80153bc:	e886 0003 	stmia.w	r6, {r0, r1}
 80153c0:	682b      	ldr	r3, [r5, #0]
 80153c2:	edcd 8a0d 	vstr	s17, [sp, #52]	@ 0x34
 80153c6:	7f1a      	ldrb	r2, [r3, #28]
 80153c8:	ed8d 9a0e 	vstr	s18, [sp, #56]	@ 0x38
 80153cc:	2a00      	cmp	r2, #0
 80153ce:	f000 814b 	beq.w	8015668 <stroke_path+0xd68>
 80153d2:	4a26      	ldr	r2, [pc, #152]	@ (801546c <stroke_path+0xb6c>)
 80153d4:	4b26      	ldr	r3, [pc, #152]	@ (8015470 <stroke_path+0xb70>)
 80153d6:	2007      	movs	r0, #7
 80153d8:	6817      	ldr	r7, [r2, #0]
 80153da:	681e      	ldr	r6, [r3, #0]
 80153dc:	f008 fde2 	bl	801dfa4 <nema_cl_get_space>
 80153e0:	2800      	cmp	r0, #0
 80153e2:	d031      	beq.n	8015448 <stroke_path+0xb48>
 80153e4:	4a1f      	ldr	r2, [pc, #124]	@ (8015464 <stroke_path+0xb64>)
 80153e6:	682b      	ldr	r3, [r5, #0]
 80153e8:	7811      	ldrb	r1, [r2, #0]
 80153ea:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80153ec:	2901      	cmp	r1, #1
 80153ee:	f003 63f0 	and.w	r3, r3, #125829120	@ 0x7800000
 80153f2:	d103      	bne.n	80153fc <stroke_path+0xafc>
 80153f4:	6852      	ldr	r2, [r2, #4]
 80153f6:	f002 4240 	and.w	r2, r2, #3221225472	@ 0xc0000000
 80153fa:	4313      	orrs	r3, r2
 80153fc:	f44f 7e48 	mov.w	lr, #800	@ 0x320
 8015400:	f44f 7c49 	mov.w	ip, #804	@ 0x324
 8015404:	f44f 754d 	mov.w	r5, #820	@ 0x334
 8015408:	f44f 714c 	mov.w	r1, #816	@ 0x330
 801540c:	f44f 78a0 	mov.w	r8, #320	@ 0x140
 8015410:	f44f 72a2 	mov.w	r2, #324	@ 0x144
 8015414:	f8c0 e000 	str.w	lr, [r0]
 8015418:	f8dd e02c 	ldr.w	lr, [sp, #44]	@ 0x2c
 801541c:	f8c0 c008 	str.w	ip, [r0, #8]
 8015420:	f8c0 e004 	str.w	lr, [r0, #4]
 8015424:	6185      	str	r5, [r0, #24]
 8015426:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 8015428:	6101      	str	r1, [r0, #16]
 801542a:	60c5      	str	r5, [r0, #12]
 801542c:	990d      	ldr	r1, [sp, #52]	@ 0x34
 801542e:	f043 0304 	orr.w	r3, r3, #4
 8015432:	6141      	str	r1, [r0, #20]
 8015434:	6343      	str	r3, [r0, #52]	@ 0x34
 8015436:	990e      	ldr	r1, [sp, #56]	@ 0x38
 8015438:	4b0b      	ldr	r3, [pc, #44]	@ (8015468 <stroke_path+0xb68>)
 801543a:	6247      	str	r7, [r0, #36]	@ 0x24
 801543c:	62c6      	str	r6, [r0, #44]	@ 0x2c
 801543e:	61c1      	str	r1, [r0, #28]
 8015440:	f8c0 8020 	str.w	r8, [r0, #32]
 8015444:	6282      	str	r2, [r0, #40]	@ 0x28
 8015446:	6303      	str	r3, [r0, #48]	@ 0x30
 8015448:	2300      	movs	r3, #0
 801544a:	f88d 3021 	strb.w	r3, [sp, #33]	@ 0x21
 801544e:	f89d 3022 	ldrb.w	r3, [sp, #34]	@ 0x22
 8015452:	f7ff baed 	b.w	8014a30 <stroke_path+0x130>
 8015456:	bf00      	nop
 8015458:	20083150 	.word	0x20083150
 801545c:	2008314c 	.word	0x2008314c
 8015460:	20083148 	.word	0x20083148
 8015464:	20000064 	.word	0x20000064
 8015468:	ff000100 	.word	0xff000100
 801546c:	20083154 	.word	0x20083154
 8015470:	20083158 	.word	0x20083158
 8015474:	f1ae 0705 	sub.w	r7, lr, #5
 8015478:	2f03      	cmp	r7, #3
 801547a:	eddd 6a13 	vldr	s13, [sp, #76]	@ 0x4c
 801547e:	eddd 7a14 	vldr	s15, [sp, #80]	@ 0x50
 8015482:	d80b      	bhi.n	801549c <stroke_path+0xb9c>
 8015484:	ee76 6aa6 	vadd.f32	s13, s13, s13
 8015488:	ee77 7aa7 	vadd.f32	s15, s15, s15
 801548c:	ed9d 6a15 	vldr	s12, [sp, #84]	@ 0x54
 8015490:	ed9d 7a16 	vldr	s14, [sp, #88]	@ 0x58
 8015494:	ee76 6ac6 	vsub.f32	s13, s13, s12
 8015498:	ee77 7ac7 	vsub.f32	s15, s15, s14
 801549c:	edcd 7a10 	vstr	s15, [sp, #64]	@ 0x40
 80154a0:	edcd 6a0f 	vstr	s13, [sp, #60]	@ 0x3c
 80154a4:	edcd 6a15 	vstr	s13, [sp, #84]	@ 0x54
 80154a8:	edcd 7a16 	vstr	s15, [sp, #88]	@ 0x58
 80154ac:	e5df      	b.n	801506e <stroke_path+0x76e>
 80154ae:	eef6 8a00 	vmov.f32	s17, #96	@ 0x3f000000  0.5
 80154b2:	4cab      	ldr	r4, [pc, #684]	@ (8015760 <stroke_path+0xe60>)
 80154b4:	4dab      	ldr	r5, [pc, #684]	@ (8015764 <stroke_path+0xe64>)
 80154b6:	7821      	ldrb	r1, [r4, #0]
 80154b8:	ee39 7acc 	vsub.f32	s14, s19, s24
 80154bc:	ee79 7a6b 	vsub.f32	s15, s18, s23
 80154c0:	ee7c 5a2a 	vadd.f32	s11, s24, s21
 80154c4:	ee3a 4aa9 	vadd.f32	s8, s21, s19
 80154c8:	ee3b 5a8a 	vadd.f32	s10, s23, s20
 80154cc:	ee7a 4a09 	vadd.f32	s9, s20, s18
 80154d0:	ee3a 6a49 	vsub.f32	s12, s20, s18
 80154d4:	ee7a 6ae9 	vsub.f32	s13, s21, s19
 80154d8:	ee26 6a07 	vmul.f32	s12, s12, s14
 80154dc:	ee66 6aa7 	vmul.f32	s13, s13, s15
 80154e0:	ee65 5aa8 	vmul.f32	s11, s11, s17
 80154e4:	ee24 4a28 	vmul.f32	s8, s8, s17
 80154e8:	ee25 5a28 	vmul.f32	s10, s10, s17
 80154ec:	ee64 4aa8 	vmul.f32	s9, s9, s17
 80154f0:	ee35 ba84 	vadd.f32	s22, s11, s8
 80154f4:	ee75 ca24 	vadd.f32	s25, s10, s9
 80154f8:	ee27 7a07 	vmul.f32	s14, s14, s14
 80154fc:	ee76 6ac6 	vsub.f32	s13, s13, s12
 8015500:	ee67 7aa7 	vmul.f32	s15, s15, s15
 8015504:	ee2b ba28 	vmul.f32	s22, s22, s17
 8015508:	ee6c caa8 	vmul.f32	s25, s25, s17
 801550c:	ee66 6aa6 	vmul.f32	s13, s13, s13
 8015510:	ee77 7a27 	vadd.f32	s15, s14, s15
 8015514:	b339      	cbz	r1, 8015566 <stroke_path+0xc66>
 8015516:	eef4 6ae7 	vcmpe.f32	s13, s15
 801551a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801551e:	bfcc      	ite	gt
 8015520:	2301      	movgt	r3, #1
 8015522:	2300      	movle	r3, #0
 8015524:	b353      	cbz	r3, 801557c <stroke_path+0xc7c>
 8015526:	682b      	ldr	r3, [r5, #0]
 8015528:	2b09      	cmp	r3, #9
 801552a:	dc12      	bgt.n	8015552 <stroke_path+0xc52>
 801552c:	488e      	ldr	r0, [pc, #568]	@ (8015768 <stroke_path+0xe68>)
 801552e:	eb03 0243 	add.w	r2, r3, r3, lsl #1
 8015532:	eb00 02c2 	add.w	r2, r0, r2, lsl #3
 8015536:	ed82 ba00 	vstr	s22, [r2]
 801553a:	edc2 ca01 	vstr	s25, [r2, #4]
 801553e:	ed82 4a02 	vstr	s8, [r2, #8]
 8015542:	edc2 4a03 	vstr	s9, [r2, #12]
 8015546:	edc2 9a04 	vstr	s19, [r2, #16]
 801554a:	ed82 9a05 	vstr	s18, [r2, #20]
 801554e:	3301      	adds	r3, #1
 8015550:	602b      	str	r3, [r5, #0]
 8015552:	3601      	adds	r6, #1
 8015554:	eeb0 9a6c 	vmov.f32	s18, s25
 8015558:	eef0 9a4b 	vmov.f32	s19, s22
 801555c:	eeb0 aa45 	vmov.f32	s20, s10
 8015560:	eef0 aa65 	vmov.f32	s21, s11
 8015564:	e7a8      	b.n	80154b8 <stroke_path+0xbb8>
 8015566:	ee67 7aa8 	vmul.f32	s15, s15, s17
 801556a:	eef4 7ae6 	vcmpe.f32	s15, s13
 801556e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8015572:	bf4c      	ite	mi
 8015574:	2301      	movmi	r3, #1
 8015576:	2300      	movpl	r3, #0
 8015578:	2b00      	cmp	r3, #0
 801557a:	d1d4      	bne.n	8015526 <stroke_path+0xc26>
 801557c:	eef0 1a6c 	vmov.f32	s3, s25
 8015580:	eeb0 1a4b 	vmov.f32	s2, s22
 8015584:	eef0 0a6b 	vmov.f32	s1, s23
 8015588:	eeb0 0a4c 	vmov.f32	s0, s24
 801558c:	f7fd fb04 	bl	8012b98 <raster_stroked_line_>
 8015590:	eef0 1a49 	vmov.f32	s3, s18
 8015594:	eeb0 1a69 	vmov.f32	s2, s19
 8015598:	eef0 0a6c 	vmov.f32	s1, s25
 801559c:	eeb0 0a4b 	vmov.f32	s0, s22
 80155a0:	f7fd fafa 	bl	8012b98 <raster_stroked_line_>
 80155a4:	682b      	ldr	r3, [r5, #0]
 80155a6:	3e01      	subs	r6, #1
 80155a8:	b193      	cbz	r3, 80155d0 <stroke_path+0xcd0>
 80155aa:	3b01      	subs	r3, #1
 80155ac:	496e      	ldr	r1, [pc, #440]	@ (8015768 <stroke_path+0xe68>)
 80155ae:	eb03 0243 	add.w	r2, r3, r3, lsl #1
 80155b2:	eb01 02c2 	add.w	r2, r1, r2, lsl #3
 80155b6:	ed92 ca00 	vldr	s24, [r2]
 80155ba:	edd2 ba01 	vldr	s23, [r2, #4]
 80155be:	edd2 aa02 	vldr	s21, [r2, #8]
 80155c2:	ed92 aa03 	vldr	s20, [r2, #12]
 80155c6:	edd2 9a04 	vldr	s19, [r2, #16]
 80155ca:	ed92 9a05 	vldr	s18, [r2, #20]
 80155ce:	602b      	str	r3, [r5, #0]
 80155d0:	2e00      	cmp	r6, #0
 80155d2:	f43f aa49 	beq.w	8014a68 <stroke_path+0x168>
 80155d6:	7821      	ldrb	r1, [r4, #0]
 80155d8:	e76e      	b.n	80154b8 <stroke_path+0xbb8>
 80155da:	a808      	add	r0, sp, #32
 80155dc:	f7fd ff3c 	bl	8013458 <fill_arc.isra.7>
 80155e0:	4604      	mov	r4, r0
 80155e2:	2800      	cmp	r0, #0
 80155e4:	f43f aa40 	beq.w	8014a68 <stroke_path+0x168>
 80155e8:	f007 fb84 	bl	801ccf4 <nema_vg_set_error>
 80155ec:	f7ff ba4b 	b.w	8014a86 <stroke_path+0x186>
 80155f0:	f1ae 0705 	sub.w	r7, lr, #5
 80155f4:	2f03      	cmp	r7, #3
 80155f6:	ed9d 5a13 	vldr	s10, [sp, #76]	@ 0x4c
 80155fa:	eddd 5a14 	vldr	s11, [sp, #80]	@ 0x50
 80155fe:	d91f      	bls.n	8015640 <stroke_path+0xd40>
 8015600:	eeb0 7a65 	vmov.f32	s14, s11
 8015604:	eef0 7a45 	vmov.f32	s15, s10
 8015608:	ed8d 7a10 	vstr	s14, [sp, #64]	@ 0x40
 801560c:	edcd 7a0f 	vstr	s15, [sp, #60]	@ 0x3c
 8015610:	9009      	str	r0, [sp, #36]	@ 0x24
 8015612:	ed95 7a00 	vldr	s14, [r5]
 8015616:	ed8d 7a11 	vstr	s14, [sp, #68]	@ 0x44
 801561a:	3102      	adds	r1, #2
 801561c:	9109      	str	r1, [sp, #36]	@ 0x24
 801561e:	edd5 7a01 	vldr	s15, [r5, #4]
 8015622:	edcd 7a12 	vstr	s15, [sp, #72]	@ 0x48
 8015626:	f1b8 0f00 	cmp.w	r8, #0
 801562a:	f43f ad19 	beq.w	8015060 <stroke_path+0x760>
 801562e:	ee37 7a05 	vadd.f32	s14, s14, s10
 8015632:	ee77 7aa5 	vadd.f32	s15, s15, s11
 8015636:	ed8d 7a11 	vstr	s14, [sp, #68]	@ 0x44
 801563a:	edcd 7a12 	vstr	s15, [sp, #72]	@ 0x48
 801563e:	e50f      	b.n	8015060 <stroke_path+0x760>
 8015640:	ed9d 7a15 	vldr	s14, [sp, #84]	@ 0x54
 8015644:	ee75 7a05 	vadd.f32	s15, s10, s10
 8015648:	ee35 6aa5 	vadd.f32	s12, s11, s11
 801564c:	eddd 6a16 	vldr	s13, [sp, #88]	@ 0x58
 8015650:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8015654:	ee36 7a66 	vsub.f32	s14, s12, s13
 8015658:	e7d6      	b.n	8015608 <stroke_path+0xd08>
 801565a:	2507      	movs	r5, #7
 801565c:	e488      	b.n	8014f70 <stroke_path+0x670>
 801565e:	ee18 aa10 	vmov	sl, s16
 8015662:	eef0 8a48 	vmov.f32	s17, s16
 8015666:	e439      	b.n	8014edc <stroke_path+0x5dc>
 8015668:	4a40      	ldr	r2, [pc, #256]	@ (801576c <stroke_path+0xe6c>)
 801566a:	eddd 9a0b 	vldr	s19, [sp, #44]	@ 0x2c
 801566e:	6812      	ldr	r2, [r2, #0]
 8015670:	ed9d aa0c 	vldr	s20, [sp, #48]	@ 0x30
 8015674:	2a00      	cmp	r2, #0
 8015676:	f000 81ac 	beq.w	80159d2 <stroke_path+0x10d2>
 801567a:	eef0 1a49 	vmov.f32	s3, s18
 801567e:	eeb0 1a68 	vmov.f32	s2, s17
 8015682:	eef0 0a4a 	vmov.f32	s1, s20
 8015686:	eeb0 0a69 	vmov.f32	s0, s19
 801568a:	f7fd fa85 	bl	8012b98 <raster_stroked_line_>
 801568e:	e6db      	b.n	8015448 <stroke_path+0xb48>
 8015690:	9009      	str	r0, [sp, #36]	@ 0x24
 8015692:	682a      	ldr	r2, [r5, #0]
 8015694:	1c8b      	adds	r3, r1, #2
 8015696:	9309      	str	r3, [sp, #36]	@ 0x24
 8015698:	920f      	str	r2, [sp, #60]	@ 0x3c
 801569a:	686b      	ldr	r3, [r5, #4]
 801569c:	3103      	adds	r1, #3
 801569e:	9310      	str	r3, [sp, #64]	@ 0x40
 80156a0:	9109      	str	r1, [sp, #36]	@ 0x24
 80156a2:	4b33      	ldr	r3, [pc, #204]	@ (8015770 <stroke_path+0xe70>)
 80156a4:	68aa      	ldr	r2, [r5, #8]
 80156a6:	edd3 0a00 	vldr	s1, [r3]
 80156aa:	ed93 0a03 	vldr	s0, [r3, #12]
 80156ae:	9211      	str	r2, [sp, #68]	@ 0x44
 80156b0:	f01b fedc 	bl	803146c <atan2f>
 80156b4:	eddd 7a11 	vldr	s15, [sp, #68]	@ 0x44
 80156b8:	ed9d 7a14 	vldr	s14, [sp, #80]	@ 0x50
 80156bc:	ee77 7a80 	vadd.f32	s15, s15, s0
 80156c0:	9909      	ldr	r1, [sp, #36]	@ 0x24
 80156c2:	f8d9 300c 	ldr.w	r3, [r9, #12]
 80156c6:	f8dd e04c 	ldr.w	lr, [sp, #76]	@ 0x4c
 80156ca:	008d      	lsls	r5, r1, #2
 80156cc:	1c48      	adds	r0, r1, #1
 80156ce:	4602      	mov	r2, r0
 80156d0:	9502      	str	r5, [sp, #8]
 80156d2:	f88d 4023 	strb.w	r4, [sp, #35]	@ 0x23
 80156d6:	edcd 7a11 	vstr	s15, [sp, #68]	@ 0x44
 80156da:	eb03 0c05 	add.w	ip, r3, r5
 80156de:	f8cd e054 	str.w	lr, [sp, #84]	@ 0x54
 80156e2:	ed8d 7a16 	vstr	s14, [sp, #88]	@ 0x58
 80156e6:	f7ff b96a 	b.w	80149be <stroke_path+0xbe>
 80156ea:	6852      	ldr	r2, [r2, #4]
 80156ec:	f002 4240 	and.w	r2, r2, #3221225472	@ 0xc0000000
 80156f0:	4313      	orrs	r3, r2
 80156f2:	e408      	b.n	8014f06 <stroke_path+0x606>
 80156f4:	684b      	ldr	r3, [r1, #4]
 80156f6:	f003 4340 	and.w	r3, r3, #3221225472	@ 0xc0000000
 80156fa:	431c      	orrs	r4, r3
 80156fc:	e5ca      	b.n	8015294 <stroke_path+0x994>
 80156fe:	e9d3 520a 	ldrd	r5, r2, [r3, #40]	@ 0x28
 8015702:	2d00      	cmp	r5, #0
 8015704:	bf18      	it	ne
 8015706:	f04f 65f0 	movne.w	r5, #125829120	@ 0x7800000
 801570a:	4b1a      	ldr	r3, [pc, #104]	@ (8015774 <stroke_path+0xe74>)
 801570c:	4015      	ands	r5, r2
 801570e:	781b      	ldrb	r3, [r3, #0]
 8015710:	2b01      	cmp	r3, #1
 8015712:	d104      	bne.n	801571e <stroke_path+0xe1e>
 8015714:	4b17      	ldr	r3, [pc, #92]	@ (8015774 <stroke_path+0xe74>)
 8015716:	685b      	ldr	r3, [r3, #4]
 8015718:	f003 4340 	and.w	r3, r3, #3221225472	@ 0xc0000000
 801571c:	431d      	orrs	r5, r3
 801571e:	2005      	movs	r0, #5
 8015720:	f008 fc40 	bl	801dfa4 <nema_cl_get_space>
 8015724:	2800      	cmp	r0, #0
 8015726:	f43f ad19 	beq.w	801515c <stroke_path+0x85c>
 801572a:	f44f 7c48 	mov.w	ip, #800	@ 0x320
 801572e:	f44f 7149 	mov.w	r1, #804	@ 0x324
 8015732:	f44f 724c 	mov.w	r2, #816	@ 0x330
 8015736:	f44f 734d 	mov.w	r3, #820	@ 0x334
 801573a:	f045 050a 	orr.w	r5, r5, #10
 801573e:	6245      	str	r5, [r0, #36]	@ 0x24
 8015740:	4d0d      	ldr	r5, [pc, #52]	@ (8015778 <stroke_path+0xe78>)
 8015742:	edc0 9a01 	vstr	s19, [r0, #4]
 8015746:	ed80 aa03 	vstr	s20, [r0, #12]
 801574a:	edc0 8a05 	vstr	s17, [r0, #20]
 801574e:	ed80 9a07 	vstr	s18, [r0, #28]
 8015752:	6205      	str	r5, [r0, #32]
 8015754:	f8c0 c000 	str.w	ip, [r0]
 8015758:	6081      	str	r1, [r0, #8]
 801575a:	6102      	str	r2, [r0, #16]
 801575c:	6183      	str	r3, [r0, #24]
 801575e:	e4fd      	b.n	801515c <stroke_path+0x85c>
 8015760:	2008315c 	.word	0x2008315c
 8015764:	200832e4 	.word	0x200832e4
 8015768:	200831f4 	.word	0x200831f4
 801576c:	20083150 	.word	0x20083150
 8015770:	200831cc 	.word	0x200831cc
 8015774:	20000064 	.word	0x20000064
 8015778:	ff000100 	.word	0xff000100
 801577c:	4626      	mov	r6, r4
 801577e:	eef6 8a00 	vmov.f32	s17, #96	@ 0x3f000000  0.5
 8015782:	eddd da0b 	vldr	s27, [sp, #44]	@ 0x2c
 8015786:	ed9d da0c 	vldr	s26, [sp, #48]	@ 0x30
 801578a:	eddd ca0f 	vldr	s25, [sp, #60]	@ 0x3c
 801578e:	ed9d ca10 	vldr	s24, [sp, #64]	@ 0x40
 8015792:	eddd ba11 	vldr	s23, [sp, #68]	@ 0x44
 8015796:	ed9d ba12 	vldr	s22, [sp, #72]	@ 0x48
 801579a:	eddd aa0d 	vldr	s21, [sp, #52]	@ 0x34
 801579e:	ed9d aa0e 	vldr	s20, [sp, #56]	@ 0x38
 80157a2:	4dc5      	ldr	r5, [pc, #788]	@ (8015ab8 <stroke_path+0x11b8>)
 80157a4:	ee7d 4aac 	vadd.f32	s9, s27, s25
 80157a8:	ee7c 7aab 	vadd.f32	s15, s25, s23
 80157ac:	ee3b 5aaa 	vadd.f32	s10, s23, s21
 80157b0:	ee67 7aa8 	vmul.f32	s15, s15, s17
 80157b4:	ee64 4aa8 	vmul.f32	s9, s9, s17
 80157b8:	ee25 5a28 	vmul.f32	s10, s10, s17
 80157bc:	ee74 3aa7 	vadd.f32	s7, s9, s15
 80157c0:	ee37 6a85 	vadd.f32	s12, s15, s10
 80157c4:	ee3d 4a0c 	vadd.f32	s8, s26, s24
 80157c8:	ee7c 7a0b 	vadd.f32	s15, s24, s22
 80157cc:	ee7b 5a0a 	vadd.f32	s11, s22, s20
 80157d0:	ee67 7aa8 	vmul.f32	s15, s15, s17
 80157d4:	ee24 4a28 	vmul.f32	s8, s8, s17
 80157d8:	ee65 5aa8 	vmul.f32	s11, s11, s17
 80157dc:	ee34 3a27 	vadd.f32	s6, s8, s15
 80157e0:	ee63 3aa8 	vmul.f32	s7, s7, s17
 80157e4:	ee26 6a28 	vmul.f32	s12, s12, s17
 80157e8:	ee77 7aa5 	vadd.f32	s15, s15, s11
 80157ec:	ee33 9a86 	vadd.f32	s18, s7, s12
 80157f0:	ee3d 7aaa 	vadd.f32	s14, s27, s21
 80157f4:	ee23 3a28 	vmul.f32	s6, s6, s17
 80157f8:	ee67 7aa8 	vmul.f32	s15, s15, s17
 80157fc:	ee29 9a28 	vmul.f32	s18, s18, s17
 8015800:	ee27 7a28 	vmul.f32	s14, s14, s17
 8015804:	ee73 9a27 	vadd.f32	s19, s6, s15
 8015808:	ee7d 6a0a 	vadd.f32	s13, s26, s20
 801580c:	ee37 7a49 	vsub.f32	s14, s14, s18
 8015810:	ee69 9aa8 	vmul.f32	s19, s19, s17
 8015814:	ee66 6aa8 	vmul.f32	s13, s13, s17
 8015818:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 801581c:	ee76 6ae9 	vsub.f32	s13, s13, s19
 8015820:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8015824:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 8015828:	bf48      	it	mi
 801582a:	eeb1 7a47 	vnegmi.f32	s14, s14
 801582e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8015832:	bf48      	it	mi
 8015834:	eef1 6a66 	vnegmi.f32	s13, s13
 8015838:	b94e      	cbnz	r6, 801584e <stroke_path+0xf4e>
 801583a:	eeb4 7ae8 	vcmpe.f32	s14, s17
 801583e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8015842:	d504      	bpl.n	801584e <stroke_path+0xf4e>
 8015844:	eef4 6ae8 	vcmpe.f32	s13, s17
 8015848:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801584c:	d424      	bmi.n	8015898 <stroke_path+0xf98>
 801584e:	682a      	ldr	r2, [r5, #0]
 8015850:	2a09      	cmp	r2, #9
 8015852:	dc21      	bgt.n	8015898 <stroke_path+0xf98>
 8015854:	4999      	ldr	r1, [pc, #612]	@ (8015abc <stroke_path+0x11bc>)
 8015856:	eb02 0342 	add.w	r3, r2, r2, lsl #1
 801585a:	eb01 03c3 	add.w	r3, r1, r3, lsl #3
 801585e:	3201      	adds	r2, #1
 8015860:	edc3 aa04 	vstr	s21, [r3, #16]
 8015864:	ed83 aa05 	vstr	s20, [r3, #20]
 8015868:	3401      	adds	r4, #1
 801586a:	eeb0 ba43 	vmov.f32	s22, s6
 801586e:	eef0 ba63 	vmov.f32	s23, s7
 8015872:	eeb0 ca44 	vmov.f32	s24, s8
 8015876:	eef0 ca64 	vmov.f32	s25, s9
 801587a:	ed83 6a00 	vstr	s12, [r3]
 801587e:	edc3 7a01 	vstr	s15, [r3, #4]
 8015882:	ed83 5a02 	vstr	s10, [r3, #8]
 8015886:	edc3 5a03 	vstr	s11, [r3, #12]
 801588a:	602a      	str	r2, [r5, #0]
 801588c:	eeb0 aa69 	vmov.f32	s20, s19
 8015890:	eef0 aa49 	vmov.f32	s21, s18
 8015894:	2600      	movs	r6, #0
 8015896:	e785      	b.n	80157a4 <stroke_path+0xea4>
 8015898:	eef0 1a69 	vmov.f32	s3, s19
 801589c:	eeb0 1a49 	vmov.f32	s2, s18
 80158a0:	eef0 0a4d 	vmov.f32	s1, s26
 80158a4:	eeb0 0a6d 	vmov.f32	s0, s27
 80158a8:	f7fd f976 	bl	8012b98 <raster_stroked_line_>
 80158ac:	eef0 1a4a 	vmov.f32	s3, s20
 80158b0:	eeb0 1a6a 	vmov.f32	s2, s21
 80158b4:	eef0 0a69 	vmov.f32	s1, s19
 80158b8:	eeb0 0a49 	vmov.f32	s0, s18
 80158bc:	f7fd f96c 	bl	8012b98 <raster_stroked_line_>
 80158c0:	682a      	ldr	r2, [r5, #0]
 80158c2:	3c01      	subs	r4, #1
 80158c4:	b1b2      	cbz	r2, 80158f4 <stroke_path+0xff4>
 80158c6:	3a01      	subs	r2, #1
 80158c8:	497c      	ldr	r1, [pc, #496]	@ (8015abc <stroke_path+0x11bc>)
 80158ca:	eb02 0342 	add.w	r3, r2, r2, lsl #1
 80158ce:	eb01 03c3 	add.w	r3, r1, r3, lsl #3
 80158d2:	eeb0 da4a 	vmov.f32	s26, s20
 80158d6:	eef0 da6a 	vmov.f32	s27, s21
 80158da:	edd3 ca00 	vldr	s25, [r3]
 80158de:	ed93 ca01 	vldr	s24, [r3, #4]
 80158e2:	edd3 ba02 	vldr	s23, [r3, #8]
 80158e6:	ed93 ba03 	vldr	s22, [r3, #12]
 80158ea:	ed93 aa05 	vldr	s20, [r3, #20]
 80158ee:	edd3 aa04 	vldr	s21, [r3, #16]
 80158f2:	602a      	str	r2, [r5, #0]
 80158f4:	2c00      	cmp	r4, #0
 80158f6:	f47f af55 	bne.w	80157a4 <stroke_path+0xea4>
 80158fa:	f7ff b8b5 	b.w	8014a68 <stroke_path+0x168>
 80158fe:	f1ba 0f0b 	cmp.w	sl, #11
 8015902:	f47f abb4 	bne.w	801506e <stroke_path+0x76e>
 8015906:	9009      	str	r0, [sp, #36]	@ 0x24
 8015908:	eddc 7a00 	vldr	s15, [ip]
 801590c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8015910:	ee17 1a90 	vmov	r1, s15
 8015914:	eb01 71d1 	add.w	r1, r1, r1, lsr #31
 8015918:	1049      	asrs	r1, r1, #1
 801591a:	2900      	cmp	r1, #0
 801591c:	9102      	str	r1, [sp, #8]
 801591e:	f340 8132 	ble.w	8015b86 <stroke_path+0x1286>
 8015922:	2100      	movs	r1, #0
 8015924:	4d66      	ldr	r5, [pc, #408]	@ (8015ac0 <stroke_path+0x11c0>)
 8015926:	f8cd a014 	str.w	sl, [sp, #20]
 801592a:	f8cd 800c 	str.w	r8, [sp, #12]
 801592e:	46aa      	mov	sl, r5
 8015930:	46c8      	mov	r8, r9
 8015932:	46a1      	mov	r9, r4
 8015934:	460c      	mov	r4, r1
 8015936:	e038      	b.n	80159aa <stroke_path+0x10aa>
 8015938:	ed9d 1a13 	vldr	s2, [sp, #76]	@ 0x4c
 801593c:	ee78 8a81 	vadd.f32	s17, s17, s2
 8015940:	edcd 8a0d 	vstr	s17, [sp, #52]	@ 0x34
 8015944:	9209      	str	r2, [sp, #36]	@ 0x24
 8015946:	ed91 9a00 	vldr	s18, [r1]
 801594a:	eddd 1a14 	vldr	s3, [sp, #80]	@ 0x50
 801594e:	ee39 9a21 	vadd.f32	s18, s18, s3
 8015952:	ed8d 9a0e 	vstr	s18, [sp, #56]	@ 0x38
 8015956:	edcd 8a13 	vstr	s17, [sp, #76]	@ 0x4c
 801595a:	ed8d 9a14 	vstr	s18, [sp, #80]	@ 0x50
 801595e:	f8da 3000 	ldr.w	r3, [sl]
 8015962:	f88d 9064 	strb.w	r9, [sp, #100]	@ 0x64
 8015966:	7f1a      	ldrb	r2, [r3, #28]
 8015968:	2a00      	cmp	r2, #0
 801596a:	d161      	bne.n	8015a30 <stroke_path+0x1130>
 801596c:	4a55      	ldr	r2, [pc, #340]	@ (8015ac4 <stroke_path+0x11c4>)
 801596e:	eddd 9a0b 	vldr	s19, [sp, #44]	@ 0x2c
 8015972:	6812      	ldr	r2, [r2, #0]
 8015974:	ed9d aa0c 	vldr	s20, [sp, #48]	@ 0x30
 8015978:	2a00      	cmp	r2, #0
 801597a:	f000 80d3 	beq.w	8015b24 <stroke_path+0x1224>
 801597e:	eef0 1a49 	vmov.f32	s3, s18
 8015982:	eeb0 1a68 	vmov.f32	s2, s17
 8015986:	eef0 0a4a 	vmov.f32	s1, s20
 801598a:	eeb0 0a69 	vmov.f32	s0, s19
 801598e:	f7fd f903 	bl	8012b98 <raster_stroked_line_>
 8015992:	e897 0003 	ldmia.w	r7, {r0, r1}
 8015996:	9b02      	ldr	r3, [sp, #8]
 8015998:	3401      	adds	r4, #1
 801599a:	429c      	cmp	r4, r3
 801599c:	e886 0003 	stmia.w	r6, {r0, r1}
 80159a0:	f000 809a 	beq.w	8015ad8 <stroke_path+0x11d8>
 80159a4:	f8d8 300c 	ldr.w	r3, [r8, #12]
 80159a8:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 80159aa:	0090      	lsls	r0, r2, #2
 80159ac:	1d01      	adds	r1, r0, #4
 80159ae:	4419      	add	r1, r3
 80159b0:	9d03      	ldr	r5, [sp, #12]
 80159b2:	4403      	add	r3, r0
 80159b4:	1c50      	adds	r0, r2, #1
 80159b6:	9009      	str	r0, [sp, #36]	@ 0x24
 80159b8:	3202      	adds	r2, #2
 80159ba:	edd3 8a00 	vldr	s17, [r3]
 80159be:	2d00      	cmp	r5, #0
 80159c0:	d1ba      	bne.n	8015938 <stroke_path+0x1038>
 80159c2:	edcd 8a0d 	vstr	s17, [sp, #52]	@ 0x34
 80159c6:	9209      	str	r2, [sp, #36]	@ 0x24
 80159c8:	ed91 9a00 	vldr	s18, [r1]
 80159cc:	ed8d 9a0e 	vstr	s18, [sp, #56]	@ 0x38
 80159d0:	e7c1      	b.n	8015956 <stroke_path+0x1056>
 80159d2:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
 80159d4:	493c      	ldr	r1, [pc, #240]	@ (8015ac8 <stroke_path+0x11c8>)
 80159d6:	2a00      	cmp	r2, #0
 80159d8:	bf18      	it	ne
 80159da:	f04f 62f0 	movne.w	r2, #125829120	@ 0x7800000
 80159de:	6add      	ldr	r5, [r3, #44]	@ 0x2c
 80159e0:	780b      	ldrb	r3, [r1, #0]
 80159e2:	4015      	ands	r5, r2
 80159e4:	2b01      	cmp	r3, #1
 80159e6:	d103      	bne.n	80159f0 <stroke_path+0x10f0>
 80159e8:	684b      	ldr	r3, [r1, #4]
 80159ea:	f003 4340 	and.w	r3, r3, #3221225472	@ 0xc0000000
 80159ee:	431d      	orrs	r5, r3
 80159f0:	2005      	movs	r0, #5
 80159f2:	f008 fad7 	bl	801dfa4 <nema_cl_get_space>
 80159f6:	2800      	cmp	r0, #0
 80159f8:	f43f ad26 	beq.w	8015448 <stroke_path+0xb48>
 80159fc:	f44f 7748 	mov.w	r7, #800	@ 0x320
 8015a00:	f44f 7649 	mov.w	r6, #804	@ 0x324
 8015a04:	f44f 714c 	mov.w	r1, #816	@ 0x330
 8015a08:	f44f 724d 	mov.w	r2, #820	@ 0x334
 8015a0c:	4b2f      	ldr	r3, [pc, #188]	@ (8015acc <stroke_path+0x11cc>)
 8015a0e:	f045 050a 	orr.w	r5, r5, #10
 8015a12:	6245      	str	r5, [r0, #36]	@ 0x24
 8015a14:	edc0 9a01 	vstr	s19, [r0, #4]
 8015a18:	ed80 aa03 	vstr	s20, [r0, #12]
 8015a1c:	edc0 8a05 	vstr	s17, [r0, #20]
 8015a20:	ed80 9a07 	vstr	s18, [r0, #28]
 8015a24:	6007      	str	r7, [r0, #0]
 8015a26:	6086      	str	r6, [r0, #8]
 8015a28:	6101      	str	r1, [r0, #16]
 8015a2a:	6182      	str	r2, [r0, #24]
 8015a2c:	6203      	str	r3, [r0, #32]
 8015a2e:	e50b      	b.n	8015448 <stroke_path+0xb48>
 8015a30:	4a27      	ldr	r2, [pc, #156]	@ (8015ad0 <stroke_path+0x11d0>)
 8015a32:	4b28      	ldr	r3, [pc, #160]	@ (8015ad4 <stroke_path+0x11d4>)
 8015a34:	6812      	ldr	r2, [r2, #0]
 8015a36:	2007      	movs	r0, #7
 8015a38:	9204      	str	r2, [sp, #16]
 8015a3a:	681d      	ldr	r5, [r3, #0]
 8015a3c:	f008 fab2 	bl	801dfa4 <nema_cl_get_space>
 8015a40:	2800      	cmp	r0, #0
 8015a42:	d0a6      	beq.n	8015992 <stroke_path+0x1092>
 8015a44:	4a20      	ldr	r2, [pc, #128]	@ (8015ac8 <stroke_path+0x11c8>)
 8015a46:	f8da 3000 	ldr.w	r3, [sl]
 8015a4a:	7812      	ldrb	r2, [r2, #0]
 8015a4c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8015a4e:	2a01      	cmp	r2, #1
 8015a50:	f003 63f0 	and.w	r3, r3, #125829120	@ 0x7800000
 8015a54:	d104      	bne.n	8015a60 <stroke_path+0x1160>
 8015a56:	4a1c      	ldr	r2, [pc, #112]	@ (8015ac8 <stroke_path+0x11c8>)
 8015a58:	6852      	ldr	r2, [r2, #4]
 8015a5a:	f002 4240 	and.w	r2, r2, #3221225472	@ 0xc0000000
 8015a5e:	4313      	orrs	r3, r2
 8015a60:	f44f 7248 	mov.w	r2, #800	@ 0x320
 8015a64:	6002      	str	r2, [r0, #0]
 8015a66:	eddd 7a0b 	vldr	s15, [sp, #44]	@ 0x2c
 8015a6a:	f44f 7249 	mov.w	r2, #804	@ 0x324
 8015a6e:	f44f 7e4d 	mov.w	lr, #820	@ 0x334
 8015a72:	f44f 7c4c 	mov.w	ip, #816	@ 0x330
 8015a76:	6082      	str	r2, [r0, #8]
 8015a78:	edc0 7a01 	vstr	s15, [r0, #4]
 8015a7c:	f8c0 e018 	str.w	lr, [r0, #24]
 8015a80:	f8dd e030 	ldr.w	lr, [sp, #48]	@ 0x30
 8015a84:	f8c0 c010 	str.w	ip, [r0, #16]
 8015a88:	f8c0 e00c 	str.w	lr, [r0, #12]
 8015a8c:	f043 0304 	orr.w	r3, r3, #4
 8015a90:	f8dd c034 	ldr.w	ip, [sp, #52]	@ 0x34
 8015a94:	6343      	str	r3, [r0, #52]	@ 0x34
 8015a96:	9b04      	ldr	r3, [sp, #16]
 8015a98:	f8c0 c014 	str.w	ip, [r0, #20]
 8015a9c:	6243      	str	r3, [r0, #36]	@ 0x24
 8015a9e:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8015aa0:	f44f 71a0 	mov.w	r1, #320	@ 0x140
 8015aa4:	61c3      	str	r3, [r0, #28]
 8015aa6:	f44f 73a2 	mov.w	r3, #324	@ 0x144
 8015aaa:	4a08      	ldr	r2, [pc, #32]	@ (8015acc <stroke_path+0x11cc>)
 8015aac:	62c5      	str	r5, [r0, #44]	@ 0x2c
 8015aae:	6302      	str	r2, [r0, #48]	@ 0x30
 8015ab0:	6201      	str	r1, [r0, #32]
 8015ab2:	6283      	str	r3, [r0, #40]	@ 0x28
 8015ab4:	e76d      	b.n	8015992 <stroke_path+0x1092>
 8015ab6:	bf00      	nop
 8015ab8:	200832e4 	.word	0x200832e4
 8015abc:	200831f4 	.word	0x200831f4
 8015ac0:	20083148 	.word	0x20083148
 8015ac4:	20083150 	.word	0x20083150
 8015ac8:	20000064 	.word	0x20000064
 8015acc:	ff000100 	.word	0xff000100
 8015ad0:	20083154 	.word	0x20083154
 8015ad4:	20083158 	.word	0x20083158
 8015ad8:	464c      	mov	r4, r9
 8015ada:	46c1      	mov	r9, r8
 8015adc:	4655      	mov	r5, sl
 8015ade:	f8dd a014 	ldr.w	sl, [sp, #20]
 8015ae2:	682b      	ldr	r3, [r5, #0]
 8015ae4:	7f1b      	ldrb	r3, [r3, #28]
 8015ae6:	b1b3      	cbz	r3, 8015b16 <stroke_path+0x1216>
 8015ae8:	ed9d 7a13 	vldr	s14, [sp, #76]	@ 0x4c
 8015aec:	eddd 7a17 	vldr	s15, [sp, #92]	@ 0x5c
 8015af0:	ee77 7a67 	vsub.f32	s15, s14, s15
 8015af4:	eef5 7a40 	vcmp.f32	s15, #0.0
 8015af8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8015afc:	d10b      	bne.n	8015b16 <stroke_path+0x1216>
 8015afe:	ed9d 7a14 	vldr	s14, [sp, #80]	@ 0x50
 8015b02:	eddd 7a18 	vldr	s15, [sp, #96]	@ 0x60
 8015b06:	ee77 7a67 	vsub.f32	s15, s14, s15
 8015b0a:	eef5 7a40 	vcmp.f32	s15, #0.0
 8015b0e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8015b12:	f43f ac99 	beq.w	8015448 <stroke_path+0xb48>
 8015b16:	2301      	movs	r3, #1
 8015b18:	f88d 3021 	strb.w	r3, [sp, #33]	@ 0x21
 8015b1c:	f89d 3022 	ldrb.w	r3, [sp, #34]	@ 0x22
 8015b20:	f7fe bf86 	b.w	8014a30 <stroke_path+0x130>
 8015b24:	e9d3 520a 	ldrd	r5, r2, [r3, #40]	@ 0x28
 8015b28:	2d00      	cmp	r5, #0
 8015b2a:	bf18      	it	ne
 8015b2c:	f04f 65f0 	movne.w	r5, #125829120	@ 0x7800000
 8015b30:	4b16      	ldr	r3, [pc, #88]	@ (8015b8c <stroke_path+0x128c>)
 8015b32:	4015      	ands	r5, r2
 8015b34:	781b      	ldrb	r3, [r3, #0]
 8015b36:	2b01      	cmp	r3, #1
 8015b38:	d104      	bne.n	8015b44 <stroke_path+0x1244>
 8015b3a:	4b14      	ldr	r3, [pc, #80]	@ (8015b8c <stroke_path+0x128c>)
 8015b3c:	685b      	ldr	r3, [r3, #4]
 8015b3e:	f003 4340 	and.w	r3, r3, #3221225472	@ 0xc0000000
 8015b42:	431d      	orrs	r5, r3
 8015b44:	2005      	movs	r0, #5
 8015b46:	f008 fa2d 	bl	801dfa4 <nema_cl_get_space>
 8015b4a:	2800      	cmp	r0, #0
 8015b4c:	f43f af21 	beq.w	8015992 <stroke_path+0x1092>
 8015b50:	f44f 7c48 	mov.w	ip, #800	@ 0x320
 8015b54:	f44f 7149 	mov.w	r1, #804	@ 0x324
 8015b58:	f44f 724c 	mov.w	r2, #816	@ 0x330
 8015b5c:	f44f 734d 	mov.w	r3, #820	@ 0x334
 8015b60:	f045 050a 	orr.w	r5, r5, #10
 8015b64:	6245      	str	r5, [r0, #36]	@ 0x24
 8015b66:	4d0a      	ldr	r5, [pc, #40]	@ (8015b90 <stroke_path+0x1290>)
 8015b68:	edc0 9a01 	vstr	s19, [r0, #4]
 8015b6c:	ed80 aa03 	vstr	s20, [r0, #12]
 8015b70:	edc0 8a05 	vstr	s17, [r0, #20]
 8015b74:	ed80 9a07 	vstr	s18, [r0, #28]
 8015b78:	6205      	str	r5, [r0, #32]
 8015b7a:	f8c0 c000 	str.w	ip, [r0]
 8015b7e:	6081      	str	r1, [r0, #8]
 8015b80:	6102      	str	r2, [r0, #16]
 8015b82:	6183      	str	r3, [r0, #24]
 8015b84:	e705      	b.n	8015992 <stroke_path+0x1092>
 8015b86:	4d03      	ldr	r5, [pc, #12]	@ (8015b94 <stroke_path+0x1294>)
 8015b88:	e7ab      	b.n	8015ae2 <stroke_path+0x11e2>
 8015b8a:	bf00      	nop
 8015b8c:	20000064 	.word	0x20000064
 8015b90:	ff000100 	.word	0xff000100
 8015b94:	20083148 	.word	0x20083148

08015b98 <fill_path_even_odd>:
 8015b98:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015b9c:	ed2d 8b06 	vpush	{d8-d10}
 8015ba0:	edd0 6a17 	vldr	s13, [r0, #92]	@ 0x5c
 8015ba4:	edd0 7a15 	vldr	s15, [r0, #84]	@ 0x54
 8015ba8:	ed90 7a14 	vldr	s14, [r0, #80]	@ 0x50
 8015bac:	ed90 6a16 	vldr	s12, [r0, #88]	@ 0x58
 8015bb0:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8015bb4:	eef6 6a00 	vmov.f32	s13, #96	@ 0x3f000000  0.5
 8015bb8:	ee37 7a06 	vadd.f32	s14, s14, s12
 8015bbc:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8015bc0:	ee27 7a26 	vmul.f32	s14, s14, s13
 8015bc4:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8015bc8:	ee17 4a90 	vmov	r4, s15
 8015bcc:	eefd 7ac7 	vcvt.s32.f32	s15, s14
 8015bd0:	ee17 5a90 	vmov	r5, s15
 8015bd4:	4b93      	ldr	r3, [pc, #588]	@ (8015e24 <fill_path_even_odd+0x28c>)
 8015bd6:	0424      	lsls	r4, r4, #16
 8015bd8:	601c      	str	r4, [r3, #0]
 8015bda:	4b93      	ldr	r3, [pc, #588]	@ (8015e28 <fill_path_even_odd+0x290>)
 8015bdc:	b099      	sub	sp, #100	@ 0x64
 8015bde:	4682      	mov	sl, r0
 8015be0:	042d      	lsls	r5, r5, #16
 8015be2:	2002      	movs	r0, #2
 8015be4:	601d      	str	r5, [r3, #0]
 8015be6:	f008 f9dd 	bl	801dfa4 <nema_cl_get_space>
 8015bea:	b138      	cbz	r0, 8015bfc <fill_path_even_odd+0x64>
 8015bec:	f44f 7286 	mov.w	r2, #268	@ 0x10c
 8015bf0:	f44f 7394 	mov.w	r3, #296	@ 0x128
 8015bf4:	6045      	str	r5, [r0, #4]
 8015bf6:	60c4      	str	r4, [r0, #12]
 8015bf8:	6002      	str	r2, [r0, #0]
 8015bfa:	6083      	str	r3, [r0, #8]
 8015bfc:	2246      	movs	r2, #70	@ 0x46
 8015bfe:	2100      	movs	r1, #0
 8015c00:	f10d 001a 	add.w	r0, sp, #26
 8015c04:	f01c ffbf 	bl	8032b86 <memset>
 8015c08:	f240 1201 	movw	r2, #257	@ 0x101
 8015c0c:	2400      	movs	r4, #0
 8015c0e:	2301      	movs	r3, #1
 8015c10:	f8ad 2018 	strh.w	r2, [sp, #24]
 8015c14:	f8da 2000 	ldr.w	r2, [sl]
 8015c18:	f88d 301a 	strb.w	r3, [sp, #26]
 8015c1c:	42a2      	cmp	r2, r4
 8015c1e:	f8df b218 	ldr.w	fp, [pc, #536]	@ 8015e38 <fill_path_even_odd+0x2a0>
 8015c22:	ed9f 9a82 	vldr	s18, [pc, #520]	@ 8015e2c <fill_path_even_odd+0x294>
 8015c26:	f240 80f1 	bls.w	8015e0c <fill_path_even_odd+0x274>
 8015c2a:	f8da 3008 	ldr.w	r3, [sl, #8]
 8015c2e:	f10d 082c 	add.w	r8, sp, #44	@ 0x2c
 8015c32:	5d1d      	ldrb	r5, [r3, r4]
 8015c34:	af09      	add	r7, sp, #36	@ 0x24
 8015c36:	f005 066f 	and.w	r6, r5, #111	@ 0x6f
 8015c3a:	f005 0310 	and.w	r3, r5, #16
 8015c3e:	2e01      	cmp	r6, #1
 8015c40:	e898 0003 	ldmia.w	r8, {r0, r1}
 8015c44:	f104 0901 	add.w	r9, r4, #1
 8015c48:	9301      	str	r3, [sp, #4]
 8015c4a:	e887 0003 	stmia.w	r7, {r0, r1}
 8015c4e:	f000 815f 	beq.w	8015f10 <fill_path_even_odd+0x378>
 8015c52:	0669      	lsls	r1, r5, #25
 8015c54:	f000 80f2 	beq.w	8015e3c <fill_path_even_odd+0x2a4>
 8015c58:	9907      	ldr	r1, [sp, #28]
 8015c5a:	f89d c05c 	ldrb.w	ip, [sp, #92]	@ 0x5c
 8015c5e:	b911      	cbnz	r1, 8015c66 <fill_path_even_odd+0xce>
 8015c60:	2301      	movs	r3, #1
 8015c62:	f88d 3018 	strb.w	r3, [sp, #24]
 8015c66:	2200      	movs	r2, #0
 8015c68:	f8da 300c 	ldr.w	r3, [sl, #12]
 8015c6c:	0088      	lsls	r0, r1, #2
 8015c6e:	181c      	adds	r4, r3, r0
 8015c70:	9003      	str	r0, [sp, #12]
 8015c72:	2e06      	cmp	r6, #6
 8015c74:	f101 0001 	add.w	r0, r1, #1
 8015c78:	46a6      	mov	lr, r4
 8015c7a:	f88d 201a 	strb.w	r2, [sp, #26]
 8015c7e:	9004      	str	r0, [sp, #16]
 8015c80:	f000 8232 	beq.w	80160e8 <fill_path_even_odd+0x550>
 8015c84:	2e05      	cmp	r6, #5
 8015c86:	f000 837d 	beq.w	8016384 <fill_path_even_odd+0x7ec>
 8015c8a:	2e07      	cmp	r6, #7
 8015c8c:	f00c 0c6f 	and.w	ip, ip, #111	@ 0x6f
 8015c90:	f000 841e 	beq.w	80164d0 <fill_path_even_odd+0x938>
 8015c94:	2e08      	cmp	r6, #8
 8015c96:	f000 828c 	beq.w	80161b2 <fill_path_even_odd+0x61a>
 8015c9a:	f005 020f 	and.w	r2, r5, #15
 8015c9e:	2a09      	cmp	r2, #9
 8015ca0:	9202      	str	r2, [sp, #8]
 8015ca2:	f000 84cf 	beq.w	8016644 <fill_path_even_odd+0xaac>
 8015ca6:	2e04      	cmp	r6, #4
 8015ca8:	f040 82ac 	bne.w	8016204 <fill_path_even_odd+0x66c>
 8015cac:	eddd 6a11 	vldr	s13, [sp, #68]	@ 0x44
 8015cb0:	edcd 6a0b 	vstr	s13, [sp, #44]	@ 0x2c
 8015cb4:	9b01      	ldr	r3, [sp, #4]
 8015cb6:	9007      	str	r0, [sp, #28]
 8015cb8:	edde 7a00 	vldr	s15, [lr]
 8015cbc:	2b00      	cmp	r3, #0
 8015cbe:	f000 834c 	beq.w	801635a <fill_path_even_odd+0x7c2>
 8015cc2:	ed9d 7a12 	vldr	s14, [sp, #72]	@ 0x48
 8015cc6:	ee77 7a27 	vadd.f32	s15, s14, s15
 8015cca:	edcd 7a0c 	vstr	s15, [sp, #48]	@ 0x30
 8015cce:	f8db 3000 	ldr.w	r3, [fp]
 8015cd2:	7f1b      	ldrb	r3, [r3, #28]
 8015cd4:	2b00      	cmp	r3, #0
 8015cd6:	f000 8249 	beq.w	801616c <fill_path_even_odd+0x5d4>
 8015cda:	ed9d 7a15 	vldr	s14, [sp, #84]	@ 0x54
 8015cde:	ee36 7ac7 	vsub.f32	s14, s13, s14
 8015ce2:	eeb5 7a40 	vcmp.f32	s14, #0.0
 8015ce6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8015cea:	d109      	bne.n	8015d00 <fill_path_even_odd+0x168>
 8015cec:	ed9d 7a16 	vldr	s14, [sp, #88]	@ 0x58
 8015cf0:	ee37 7ac7 	vsub.f32	s14, s15, s14
 8015cf4:	eeb5 7a40 	vcmp.f32	s14, #0.0
 8015cf8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8015cfc:	f000 840e 	beq.w	801651c <fill_path_even_odd+0x984>
 8015d00:	2301      	movs	r3, #1
 8015d02:	f88d 3019 	strb.w	r3, [sp, #25]
 8015d06:	f89d 301a 	ldrb.w	r3, [sp, #26]
 8015d0a:	edcd 6a11 	vstr	s13, [sp, #68]	@ 0x44
 8015d0e:	edcd 7a12 	vstr	s15, [sp, #72]	@ 0x48
 8015d12:	f88d 505c 	strb.w	r5, [sp, #92]	@ 0x5c
 8015d16:	2b00      	cmp	r3, #0
 8015d18:	f040 80f6 	bne.w	8015f08 <fill_path_even_odd+0x370>
 8015d1c:	2e06      	cmp	r6, #6
 8015d1e:	f040 80a7 	bne.w	8015e70 <fill_path_even_odd+0x2d8>
 8015d22:	f8db 2000 	ldr.w	r2, [fp]
 8015d26:	4b42      	ldr	r3, [pc, #264]	@ (8015e30 <fill_path_even_odd+0x298>)
 8015d28:	6a94      	ldr	r4, [r2, #40]	@ 0x28
 8015d2a:	4a3f      	ldr	r2, [pc, #252]	@ (8015e28 <fill_path_even_odd+0x290>)
 8015d2c:	781b      	ldrb	r3, [r3, #0]
 8015d2e:	2c00      	cmp	r4, #0
 8015d30:	6816      	ldr	r6, [r2, #0]
 8015d32:	4a3c      	ldr	r2, [pc, #240]	@ (8015e24 <fill_path_even_odd+0x28c>)
 8015d34:	bf18      	it	ne
 8015d36:	f04f 64f0 	movne.w	r4, #125829120	@ 0x7800000
 8015d3a:	2b01      	cmp	r3, #1
 8015d3c:	6815      	ldr	r5, [r2, #0]
 8015d3e:	d104      	bne.n	8015d4a <fill_path_even_odd+0x1b2>
 8015d40:	4b3b      	ldr	r3, [pc, #236]	@ (8015e30 <fill_path_even_odd+0x298>)
 8015d42:	685b      	ldr	r3, [r3, #4]
 8015d44:	f003 4340 	and.w	r3, r3, #3221225472	@ 0xc0000000
 8015d48:	431c      	orrs	r4, r3
 8015d4a:	2010      	movs	r0, #16
 8015d4c:	f008 f92a 	bl	801dfa4 <nema_cl_get_space>
 8015d50:	2800      	cmp	r0, #0
 8015d52:	f000 80d9 	beq.w	8015f08 <fill_path_even_odd+0x370>
 8015d56:	f44f 714a 	mov.w	r1, #808	@ 0x328
 8015d5a:	6001      	str	r1, [r0, #0]
 8015d5c:	eddd 7a09 	vldr	s15, [sp, #36]	@ 0x24
 8015d60:	f44f 784b 	mov.w	r8, #812	@ 0x32c
 8015d64:	f44f 7e48 	mov.w	lr, #800	@ 0x320
 8015d68:	f44f 7c49 	mov.w	ip, #804	@ 0x324
 8015d6c:	f44f 724c 	mov.w	r2, #816	@ 0x330
 8015d70:	f8c0 8008 	str.w	r8, [r0, #8]
 8015d74:	edc0 7a01 	vstr	s15, [r0, #4]
 8015d78:	f8dd 8028 	ldr.w	r8, [sp, #40]	@ 0x28
 8015d7c:	f8c0 e010 	str.w	lr, [r0, #16]
 8015d80:	f8c0 800c 	str.w	r8, [r0, #12]
 8015d84:	f8dd e024 	ldr.w	lr, [sp, #36]	@ 0x24
 8015d88:	f8c0 c018 	str.w	ip, [r0, #24]
 8015d8c:	f8c0 e014 	str.w	lr, [r0, #20]
 8015d90:	f8dd e028 	ldr.w	lr, [sp, #40]	@ 0x28
 8015d94:	6202      	str	r2, [r0, #32]
 8015d96:	f8c0 e01c 	str.w	lr, [r0, #28]
 8015d9a:	6482      	str	r2, [r0, #72]	@ 0x48
 8015d9c:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 8015d9e:	f44f 734d 	mov.w	r3, #820	@ 0x334
 8015da2:	64c2      	str	r2, [r0, #76]	@ 0x4c
 8015da4:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8015da6:	f44f 77a0 	mov.w	r7, #320	@ 0x140
 8015daa:	6542      	str	r2, [r0, #84]	@ 0x54
 8015dac:	f44f 72a2 	mov.w	r2, #324	@ 0x144
 8015db0:	f44f 7150 	mov.w	r1, #832	@ 0x340
 8015db4:	f8dd c02c 	ldr.w	ip, [sp, #44]	@ 0x2c
 8015db8:	6346      	str	r6, [r0, #52]	@ 0x34
 8015dba:	f8c0 c024 	str.w	ip, [r0, #36]	@ 0x24
 8015dbe:	9e0f      	ldr	r6, [sp, #60]	@ 0x3c
 8015dc0:	63c5      	str	r5, [r0, #60]	@ 0x3c
 8015dc2:	6283      	str	r3, [r0, #40]	@ 0x28
 8015dc4:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 8015dc6:	6503      	str	r3, [r0, #80]	@ 0x50
 8015dc8:	4b1a      	ldr	r3, [pc, #104]	@ (8015e34 <fill_path_even_odd+0x29c>)
 8015dca:	6382      	str	r2, [r0, #56]	@ 0x38
 8015dcc:	f044 0204 	orr.w	r2, r4, #4
 8015dd0:	6307      	str	r7, [r0, #48]	@ 0x30
 8015dd2:	6581      	str	r1, [r0, #88]	@ 0x58
 8015dd4:	e9c0 3210 	strd	r3, r2, [r0, #64]	@ 0x40
 8015dd8:	62c5      	str	r5, [r0, #44]	@ 0x2c
 8015dda:	f44f 7255 	mov.w	r2, #852	@ 0x354
 8015dde:	65c6      	str	r6, [r0, #92]	@ 0x5c
 8015de0:	f44f 7154 	mov.w	r1, #848	@ 0x350
 8015de4:	f44f 7651 	mov.w	r6, #836	@ 0x344
 8015de8:	f044 0407 	orr.w	r4, r4, #7
 8015dec:	e9c0 341e 	strd	r3, r4, [r0, #120]	@ 0x78
 8015df0:	464c      	mov	r4, r9
 8015df2:	9f10      	ldr	r7, [sp, #64]	@ 0x40
 8015df4:	f8c0 c06c 	str.w	ip, [r0, #108]	@ 0x6c
 8015df8:	6745      	str	r5, [r0, #116]	@ 0x74
 8015dfa:	6647      	str	r7, [r0, #100]	@ 0x64
 8015dfc:	6606      	str	r6, [r0, #96]	@ 0x60
 8015dfe:	6681      	str	r1, [r0, #104]	@ 0x68
 8015e00:	6702      	str	r2, [r0, #112]	@ 0x70
 8015e02:	f8da 2000 	ldr.w	r2, [sl]
 8015e06:	42a2      	cmp	r2, r4
 8015e08:	f63f af0f 	bhi.w	8015c2a <fill_path_even_odd+0x92>
 8015e0c:	f89d 3019 	ldrb.w	r3, [sp, #25]
 8015e10:	2b01      	cmp	r3, #1
 8015e12:	f000 8395 	beq.w	8016540 <fill_path_even_odd+0x9a8>
 8015e16:	2500      	movs	r5, #0
 8015e18:	4628      	mov	r0, r5
 8015e1a:	b019      	add	sp, #100	@ 0x64
 8015e1c:	ecbd 8b06 	vpop	{d8-d10}
 8015e20:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015e24:	20083158 	.word	0x20083158
 8015e28:	20083154 	.word	0x20083154
 8015e2c:	00000000 	.word	0x00000000
 8015e30:	20000064 	.word	0x20000064
 8015e34:	ff000100 	.word	0xff000100
 8015e38:	20083148 	.word	0x20083148
 8015e3c:	f89d 3018 	ldrb.w	r3, [sp, #24]
 8015e40:	f88d 505c 	strb.w	r5, [sp, #92]	@ 0x5c
 8015e44:	2b01      	cmp	r3, #1
 8015e46:	bf04      	itt	eq
 8015e48:	ee19 2a10 	vmoveq	r2, s18
 8015e4c:	ee19 1a10 	vmoveq	r1, s18
 8015e50:	f04f 0300 	mov.w	r3, #0
 8015e54:	bf1c      	itt	ne
 8015e56:	9915      	ldrne	r1, [sp, #84]	@ 0x54
 8015e58:	9a16      	ldrne	r2, [sp, #88]	@ 0x58
 8015e5a:	2e06      	cmp	r6, #6
 8015e5c:	920c      	str	r2, [sp, #48]	@ 0x30
 8015e5e:	910b      	str	r1, [sp, #44]	@ 0x2c
 8015e60:	9111      	str	r1, [sp, #68]	@ 0x44
 8015e62:	9212      	str	r2, [sp, #72]	@ 0x48
 8015e64:	f88d 301a 	strb.w	r3, [sp, #26]
 8015e68:	f88d 3019 	strb.w	r3, [sp, #25]
 8015e6c:	f43f af59 	beq.w	8015d22 <fill_path_even_odd+0x18a>
 8015e70:	2e08      	cmp	r6, #8
 8015e72:	f43f af56 	beq.w	8015d22 <fill_path_even_odd+0x18a>
 8015e76:	2e02      	cmp	r6, #2
 8015e78:	d00e      	beq.n	8015e98 <fill_path_even_odd+0x300>
 8015e7a:	f005 036d 	and.w	r3, r5, #109	@ 0x6d
 8015e7e:	2b05      	cmp	r3, #5
 8015e80:	f000 80d0 	beq.w	8016024 <fill_path_even_odd+0x48c>
 8015e84:	f005 030f 	and.w	r3, r5, #15
 8015e88:	9302      	str	r3, [sp, #8]
 8015e8a:	9b02      	ldr	r3, [sp, #8]
 8015e8c:	2b09      	cmp	r3, #9
 8015e8e:	f000 8295 	beq.w	80163bc <fill_path_even_odd+0x824>
 8015e92:	3e0a      	subs	r6, #10
 8015e94:	2e01      	cmp	r6, #1
 8015e96:	d937      	bls.n	8015f08 <fill_path_even_odd+0x370>
 8015e98:	4bb7      	ldr	r3, [pc, #732]	@ (8016178 <fill_path_even_odd+0x5e0>)
 8015e9a:	2007      	movs	r0, #7
 8015e9c:	681d      	ldr	r5, [r3, #0]
 8015e9e:	4bb7      	ldr	r3, [pc, #732]	@ (801617c <fill_path_even_odd+0x5e4>)
 8015ea0:	681c      	ldr	r4, [r3, #0]
 8015ea2:	f008 f87f 	bl	801dfa4 <nema_cl_get_space>
 8015ea6:	2800      	cmp	r0, #0
 8015ea8:	d02e      	beq.n	8015f08 <fill_path_even_odd+0x370>
 8015eaa:	4ab5      	ldr	r2, [pc, #724]	@ (8016180 <fill_path_even_odd+0x5e8>)
 8015eac:	f8db 3000 	ldr.w	r3, [fp]
 8015eb0:	7812      	ldrb	r2, [r2, #0]
 8015eb2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8015eb4:	2a01      	cmp	r2, #1
 8015eb6:	f003 63f0 	and.w	r3, r3, #125829120	@ 0x7800000
 8015eba:	d104      	bne.n	8015ec6 <fill_path_even_odd+0x32e>
 8015ebc:	4ab0      	ldr	r2, [pc, #704]	@ (8016180 <fill_path_even_odd+0x5e8>)
 8015ebe:	6852      	ldr	r2, [r2, #4]
 8015ec0:	f002 4240 	and.w	r2, r2, #3221225472	@ 0xc0000000
 8015ec4:	4313      	orrs	r3, r2
 8015ec6:	f44f 7148 	mov.w	r1, #800	@ 0x320
 8015eca:	f44f 7749 	mov.w	r7, #804	@ 0x324
 8015ece:	f44f 724d 	mov.w	r2, #820	@ 0x334
 8015ed2:	f44f 764c 	mov.w	r6, #816	@ 0x330
 8015ed6:	6001      	str	r1, [r0, #0]
 8015ed8:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8015eda:	6087      	str	r7, [r0, #8]
 8015edc:	6041      	str	r1, [r0, #4]
 8015ede:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8015ee0:	6106      	str	r6, [r0, #16]
 8015ee2:	60c1      	str	r1, [r0, #12]
 8015ee4:	6182      	str	r2, [r0, #24]
 8015ee6:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8015ee8:	f44f 71a0 	mov.w	r1, #320	@ 0x140
 8015eec:	6142      	str	r2, [r0, #20]
 8015eee:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 8015ef0:	f043 0304 	orr.w	r3, r3, #4
 8015ef4:	61c2      	str	r2, [r0, #28]
 8015ef6:	f44f 72a2 	mov.w	r2, #324	@ 0x144
 8015efa:	6343      	str	r3, [r0, #52]	@ 0x34
 8015efc:	4ba1      	ldr	r3, [pc, #644]	@ (8016184 <fill_path_even_odd+0x5ec>)
 8015efe:	6245      	str	r5, [r0, #36]	@ 0x24
 8015f00:	62c4      	str	r4, [r0, #44]	@ 0x2c
 8015f02:	6201      	str	r1, [r0, #32]
 8015f04:	6282      	str	r2, [r0, #40]	@ 0x28
 8015f06:	6303      	str	r3, [r0, #48]	@ 0x30
 8015f08:	f8da 2000 	ldr.w	r2, [sl]
 8015f0c:	464c      	mov	r4, r9
 8015f0e:	e77a      	b.n	8015e06 <fill_path_even_odd+0x26e>
 8015f10:	f89d 1019 	ldrb.w	r1, [sp, #25]
 8015f14:	9b07      	ldr	r3, [sp, #28]
 8015f16:	2901      	cmp	r1, #1
 8015f18:	d038      	beq.n	8015f8c <fill_path_even_odd+0x3f4>
 8015f1a:	2401      	movs	r4, #1
 8015f1c:	2600      	movs	r6, #0
 8015f1e:	0098      	lsls	r0, r3, #2
 8015f20:	f8da 100c 	ldr.w	r1, [sl, #12]
 8015f24:	1d07      	adds	r7, r0, #4
 8015f26:	440f      	add	r7, r1
 8015f28:	f88d 401a 	strb.w	r4, [sp, #26]
 8015f2c:	4401      	add	r1, r0
 8015f2e:	1918      	adds	r0, r3, r4
 8015f30:	9c01      	ldr	r4, [sp, #4]
 8015f32:	9308      	str	r3, [sp, #32]
 8015f34:	f88d 6018 	strb.w	r6, [sp, #24]
 8015f38:	3302      	adds	r3, #2
 8015f3a:	9007      	str	r0, [sp, #28]
 8015f3c:	b1e4      	cbz	r4, 8015f78 <fill_path_even_odd+0x3e0>
 8015f3e:	edd1 7a00 	vldr	s15, [r1]
 8015f42:	eddd 6a11 	vldr	s13, [sp, #68]	@ 0x44
 8015f46:	ee76 6aa7 	vadd.f32	s13, s13, s15
 8015f4a:	9307      	str	r3, [sp, #28]
 8015f4c:	edcd 6a0b 	vstr	s13, [sp, #44]	@ 0x2c
 8015f50:	edd7 7a00 	vldr	s15, [r7]
 8015f54:	ed9d 7a12 	vldr	s14, [sp, #72]	@ 0x48
 8015f58:	ee77 7a27 	vadd.f32	s15, s14, s15
 8015f5c:	edcd 7a0c 	vstr	s15, [sp, #48]	@ 0x30
 8015f60:	edcd 6a15 	vstr	s13, [sp, #84]	@ 0x54
 8015f64:	edcd 7a16 	vstr	s15, [sp, #88]	@ 0x58
 8015f68:	edcd 6a11 	vstr	s13, [sp, #68]	@ 0x44
 8015f6c:	edcd 7a12 	vstr	s15, [sp, #72]	@ 0x48
 8015f70:	f88d 505c 	strb.w	r5, [sp, #92]	@ 0x5c
 8015f74:	464c      	mov	r4, r9
 8015f76:	e746      	b.n	8015e06 <fill_path_even_odd+0x26e>
 8015f78:	edd1 6a00 	vldr	s13, [r1]
 8015f7c:	9307      	str	r3, [sp, #28]
 8015f7e:	edcd 6a0b 	vstr	s13, [sp, #44]	@ 0x2c
 8015f82:	edd7 7a00 	vldr	s15, [r7]
 8015f86:	edcd 7a0c 	vstr	s15, [sp, #48]	@ 0x30
 8015f8a:	e7e9      	b.n	8015f60 <fill_path_even_odd+0x3c8>
 8015f8c:	2b00      	cmp	r3, #0
 8015f8e:	d0c4      	beq.n	8015f1a <fill_path_even_odd+0x382>
 8015f90:	f8db 1000 	ldr.w	r1, [fp]
 8015f94:	7f09      	ldrb	r1, [r1, #28]
 8015f96:	2900      	cmp	r1, #0
 8015f98:	d0bf      	beq.n	8015f1a <fill_path_even_odd+0x382>
 8015f9a:	f89d 3018 	ldrb.w	r3, [sp, #24]
 8015f9e:	2b00      	cmp	r3, #0
 8015fa0:	f000 830c 	beq.w	80165bc <fill_path_even_odd+0xa24>
 8015fa4:	ee19 7a10 	vmov	r7, s18
 8015fa8:	ee19 8a10 	vmov	r8, s18
 8015fac:	4b72      	ldr	r3, [pc, #456]	@ (8016178 <fill_path_even_odd+0x5e0>)
 8015fae:	2007      	movs	r0, #7
 8015fb0:	681e      	ldr	r6, [r3, #0]
 8015fb2:	4b72      	ldr	r3, [pc, #456]	@ (801617c <fill_path_even_odd+0x5e4>)
 8015fb4:	681c      	ldr	r4, [r3, #0]
 8015fb6:	f007 fff5 	bl	801dfa4 <nema_cl_get_space>
 8015fba:	2800      	cmp	r0, #0
 8015fbc:	d02e      	beq.n	801601c <fill_path_even_odd+0x484>
 8015fbe:	4a70      	ldr	r2, [pc, #448]	@ (8016180 <fill_path_even_odd+0x5e8>)
 8015fc0:	f8db 3000 	ldr.w	r3, [fp]
 8015fc4:	7811      	ldrb	r1, [r2, #0]
 8015fc6:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8015fc8:	2901      	cmp	r1, #1
 8015fca:	f002 62f0 	and.w	r2, r2, #125829120	@ 0x7800000
 8015fce:	d104      	bne.n	8015fda <fill_path_even_odd+0x442>
 8015fd0:	4b6b      	ldr	r3, [pc, #428]	@ (8016180 <fill_path_even_odd+0x5e8>)
 8015fd2:	685b      	ldr	r3, [r3, #4]
 8015fd4:	f003 4340 	and.w	r3, r3, #3221225472	@ 0xc0000000
 8015fd8:	431a      	orrs	r2, r3
 8015fda:	f44f 7348 	mov.w	r3, #800	@ 0x320
 8015fde:	f44f 7149 	mov.w	r1, #804	@ 0x324
 8015fe2:	6003      	str	r3, [r0, #0]
 8015fe4:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8015fe6:	6081      	str	r1, [r0, #8]
 8015fe8:	6043      	str	r3, [r0, #4]
 8015fea:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8015fec:	f44f 7c4c 	mov.w	ip, #816	@ 0x330
 8015ff0:	61c7      	str	r7, [r0, #28]
 8015ff2:	60c3      	str	r3, [r0, #12]
 8015ff4:	f44f 774d 	mov.w	r7, #820	@ 0x334
 8015ff8:	f44f 71a0 	mov.w	r1, #320	@ 0x140
 8015ffc:	f44f 73a2 	mov.w	r3, #324	@ 0x144
 8016000:	f042 0204 	orr.w	r2, r2, #4
 8016004:	6342      	str	r2, [r0, #52]	@ 0x34
 8016006:	4a5f      	ldr	r2, [pc, #380]	@ (8016184 <fill_path_even_odd+0x5ec>)
 8016008:	f8c0 8014 	str.w	r8, [r0, #20]
 801600c:	6246      	str	r6, [r0, #36]	@ 0x24
 801600e:	62c4      	str	r4, [r0, #44]	@ 0x2c
 8016010:	f8c0 c010 	str.w	ip, [r0, #16]
 8016014:	6187      	str	r7, [r0, #24]
 8016016:	6201      	str	r1, [r0, #32]
 8016018:	6283      	str	r3, [r0, #40]	@ 0x28
 801601a:	6302      	str	r2, [r0, #48]	@ 0x30
 801601c:	9b07      	ldr	r3, [sp, #28]
 801601e:	f8da 2000 	ldr.w	r2, [sl]
 8016022:	e77a      	b.n	8015f1a <fill_path_even_odd+0x382>
 8016024:	f8db 2000 	ldr.w	r2, [fp]
 8016028:	4b55      	ldr	r3, [pc, #340]	@ (8016180 <fill_path_even_odd+0x5e8>)
 801602a:	6a94      	ldr	r4, [r2, #40]	@ 0x28
 801602c:	4a52      	ldr	r2, [pc, #328]	@ (8016178 <fill_path_even_odd+0x5e0>)
 801602e:	781b      	ldrb	r3, [r3, #0]
 8016030:	2c00      	cmp	r4, #0
 8016032:	6816      	ldr	r6, [r2, #0]
 8016034:	4a51      	ldr	r2, [pc, #324]	@ (801617c <fill_path_even_odd+0x5e4>)
 8016036:	bf18      	it	ne
 8016038:	f04f 64f0 	movne.w	r4, #125829120	@ 0x7800000
 801603c:	2b01      	cmp	r3, #1
 801603e:	6815      	ldr	r5, [r2, #0]
 8016040:	d104      	bne.n	801604c <fill_path_even_odd+0x4b4>
 8016042:	4b4f      	ldr	r3, [pc, #316]	@ (8016180 <fill_path_even_odd+0x5e8>)
 8016044:	685b      	ldr	r3, [r3, #4]
 8016046:	f003 4340 	and.w	r3, r3, #3221225472	@ 0xc0000000
 801604a:	431c      	orrs	r4, r3
 801604c:	200e      	movs	r0, #14
 801604e:	f007 ffa9 	bl	801dfa4 <nema_cl_get_space>
 8016052:	2800      	cmp	r0, #0
 8016054:	f43f af58 	beq.w	8015f08 <fill_path_even_odd+0x370>
 8016058:	f44f 734d 	mov.w	r3, #820	@ 0x334
 801605c:	6283      	str	r3, [r0, #40]	@ 0x28
 801605e:	6503      	str	r3, [r0, #80]	@ 0x50
 8016060:	f44f 73a0 	mov.w	r3, #320	@ 0x140
 8016064:	f44f 714a 	mov.w	r1, #808	@ 0x328
 8016068:	f44f 7849 	mov.w	r8, #804	@ 0x324
 801606c:	f44f 7e4b 	mov.w	lr, #812	@ 0x32c
 8016070:	f44f 7c48 	mov.w	ip, #800	@ 0x320
 8016074:	f44f 724c 	mov.w	r2, #816	@ 0x330
 8016078:	6303      	str	r3, [r0, #48]	@ 0x30
 801607a:	f44f 73a2 	mov.w	r3, #324	@ 0x144
 801607e:	6001      	str	r1, [r0, #0]
 8016080:	f8c0 8018 	str.w	r8, [r0, #24]
 8016084:	f8dd 8024 	ldr.w	r8, [sp, #36]	@ 0x24
 8016088:	f8c0 e008 	str.w	lr, [r0, #8]
 801608c:	f8c0 8004 	str.w	r8, [r0, #4]
 8016090:	f8dd e028 	ldr.w	lr, [sp, #40]	@ 0x28
 8016094:	f8c0 c010 	str.w	ip, [r0, #16]
 8016098:	f8c0 e00c 	str.w	lr, [r0, #12]
 801609c:	6346      	str	r6, [r0, #52]	@ 0x34
 801609e:	63c5      	str	r5, [r0, #60]	@ 0x3c
 80160a0:	9e09      	ldr	r6, [sp, #36]	@ 0x24
 80160a2:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
 80160a4:	6146      	str	r6, [r0, #20]
 80160a6:	61c5      	str	r5, [r0, #28]
 80160a8:	6202      	str	r2, [r0, #32]
 80160aa:	6482      	str	r2, [r0, #72]	@ 0x48
 80160ac:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 80160ae:	6383      	str	r3, [r0, #56]	@ 0x38
 80160b0:	4b34      	ldr	r3, [pc, #208]	@ (8016184 <fill_path_even_odd+0x5ec>)
 80160b2:	6542      	str	r2, [r0, #84]	@ 0x54
 80160b4:	f044 0204 	orr.w	r2, r4, #4
 80160b8:	e9c0 3210 	strd	r3, r2, [r0, #64]	@ 0x40
 80160bc:	f44f 7750 	mov.w	r7, #832	@ 0x340
 80160c0:	f44f 7251 	mov.w	r2, #836	@ 0x344
 80160c4:	9e0b      	ldr	r6, [sp, #44]	@ 0x2c
 80160c6:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 80160c8:	6246      	str	r6, [r0, #36]	@ 0x24
 80160ca:	65c6      	str	r6, [r0, #92]	@ 0x5c
 80160cc:	9e0d      	ldr	r6, [sp, #52]	@ 0x34
 80160ce:	f044 0406 	orr.w	r4, r4, #6
 80160d2:	62c5      	str	r5, [r0, #44]	@ 0x2c
 80160d4:	64c6      	str	r6, [r0, #76]	@ 0x4c
 80160d6:	6587      	str	r7, [r0, #88]	@ 0x58
 80160d8:	6602      	str	r2, [r0, #96]	@ 0x60
 80160da:	e9c0 341a 	strd	r3, r4, [r0, #104]	@ 0x68
 80160de:	6645      	str	r5, [r0, #100]	@ 0x64
 80160e0:	f8da 2000 	ldr.w	r2, [sl]
 80160e4:	464c      	mov	r4, r9
 80160e6:	e68e      	b.n	8015e06 <fill_path_even_odd+0x26e>
 80160e8:	9007      	str	r0, [sp, #28]
 80160ea:	ed94 6a00 	vldr	s12, [r4]
 80160ee:	ed8d 6a0d 	vstr	s12, [sp, #52]	@ 0x34
 80160f2:	1c8a      	adds	r2, r1, #2
 80160f4:	9207      	str	r2, [sp, #28]
 80160f6:	edd4 6a01 	vldr	s13, [r4, #4]
 80160fa:	edcd 6a0e 	vstr	s13, [sp, #56]	@ 0x38
 80160fe:	1cca      	adds	r2, r1, #3
 8016100:	9207      	str	r2, [sp, #28]
 8016102:	ed94 7a02 	vldr	s14, [r4, #8]
 8016106:	ed8d 7a0f 	vstr	s14, [sp, #60]	@ 0x3c
 801610a:	3104      	adds	r1, #4
 801610c:	9107      	str	r1, [sp, #28]
 801610e:	edd4 7a03 	vldr	s15, [r4, #12]
 8016112:	9a01      	ldr	r2, [sp, #4]
 8016114:	edcd 7a10 	vstr	s15, [sp, #64]	@ 0x40
 8016118:	2a00      	cmp	r2, #0
 801611a:	d135      	bne.n	8016188 <fill_path_even_odd+0x5f0>
 801611c:	ed8d 7a13 	vstr	s14, [sp, #76]	@ 0x4c
 8016120:	edcd 7a14 	vstr	s15, [sp, #80]	@ 0x50
 8016124:	008a      	lsls	r2, r1, #2
 8016126:	1c48      	adds	r0, r1, #1
 8016128:	9203      	str	r2, [sp, #12]
 801612a:	9c03      	ldr	r4, [sp, #12]
 801612c:	9007      	str	r0, [sp, #28]
 801612e:	1d22      	adds	r2, r4, #4
 8016130:	441a      	add	r2, r3
 8016132:	4423      	add	r3, r4
 8016134:	9c01      	ldr	r4, [sp, #4]
 8016136:	3102      	adds	r1, #2
 8016138:	edd3 6a00 	vldr	s13, [r3]
 801613c:	2c00      	cmp	r4, #0
 801613e:	f000 8107 	beq.w	8016350 <fill_path_even_odd+0x7b8>
 8016142:	eddd 7a11 	vldr	s15, [sp, #68]	@ 0x44
 8016146:	ee76 6aa7 	vadd.f32	s13, s13, s15
 801614a:	edcd 6a0b 	vstr	s13, [sp, #44]	@ 0x2c
 801614e:	9107      	str	r1, [sp, #28]
 8016150:	ed92 7a00 	vldr	s14, [r2]
 8016154:	eddd 7a12 	vldr	s15, [sp, #72]	@ 0x48
 8016158:	ee77 7a27 	vadd.f32	s15, s14, s15
 801615c:	f8db 3000 	ldr.w	r3, [fp]
 8016160:	edcd 7a0c 	vstr	s15, [sp, #48]	@ 0x30
 8016164:	7f1b      	ldrb	r3, [r3, #28]
 8016166:	2b00      	cmp	r3, #0
 8016168:	f47f adb7 	bne.w	8015cda <fill_path_even_odd+0x142>
 801616c:	2201      	movs	r2, #1
 801616e:	f89d 301a 	ldrb.w	r3, [sp, #26]
 8016172:	f88d 2019 	strb.w	r2, [sp, #25]
 8016176:	e5c8      	b.n	8015d0a <fill_path_even_odd+0x172>
 8016178:	20083154 	.word	0x20083154
 801617c:	20083158 	.word	0x20083158
 8016180:	20000064 	.word	0x20000064
 8016184:	ff000100 	.word	0xff000100
 8016188:	ed9d 5a11 	vldr	s10, [sp, #68]	@ 0x44
 801618c:	eddd 5a12 	vldr	s11, [sp, #72]	@ 0x48
 8016190:	ee36 6a05 	vadd.f32	s12, s12, s10
 8016194:	ee37 7a05 	vadd.f32	s14, s14, s10
 8016198:	ee76 6aa5 	vadd.f32	s13, s13, s11
 801619c:	ee77 7aa5 	vadd.f32	s15, s15, s11
 80161a0:	ed8d 6a0d 	vstr	s12, [sp, #52]	@ 0x34
 80161a4:	ed8d 7a0f 	vstr	s14, [sp, #60]	@ 0x3c
 80161a8:	edcd 6a0e 	vstr	s13, [sp, #56]	@ 0x38
 80161ac:	edcd 7a10 	vstr	s15, [sp, #64]	@ 0x40
 80161b0:	e7b4      	b.n	801611c <fill_path_even_odd+0x584>
 80161b2:	f1ac 0c05 	sub.w	ip, ip, #5
 80161b6:	f1bc 0f03 	cmp.w	ip, #3
 80161ba:	ed9d 5a11 	vldr	s10, [sp, #68]	@ 0x44
 80161be:	eddd 5a12 	vldr	s11, [sp, #72]	@ 0x48
 80161c2:	f240 822f 	bls.w	8016624 <fill_path_even_odd+0xa8c>
 80161c6:	eeb0 7a65 	vmov.f32	s14, s11
 80161ca:	eef0 7a45 	vmov.f32	s15, s10
 80161ce:	ed8d 7a0e 	vstr	s14, [sp, #56]	@ 0x38
 80161d2:	edcd 7a0d 	vstr	s15, [sp, #52]	@ 0x34
 80161d6:	9007      	str	r0, [sp, #28]
 80161d8:	ed94 7a00 	vldr	s14, [r4]
 80161dc:	ed8d 7a0f 	vstr	s14, [sp, #60]	@ 0x3c
 80161e0:	3102      	adds	r1, #2
 80161e2:	9107      	str	r1, [sp, #28]
 80161e4:	edd4 7a01 	vldr	s15, [r4, #4]
 80161e8:	9a01      	ldr	r2, [sp, #4]
 80161ea:	edcd 7a10 	vstr	s15, [sp, #64]	@ 0x40
 80161ee:	2a00      	cmp	r2, #0
 80161f0:	d094      	beq.n	801611c <fill_path_even_odd+0x584>
 80161f2:	ee37 7a05 	vadd.f32	s14, s14, s10
 80161f6:	ee77 7aa5 	vadd.f32	s15, s15, s11
 80161fa:	ed8d 7a0f 	vstr	s14, [sp, #60]	@ 0x3c
 80161fe:	edcd 7a10 	vstr	s15, [sp, #64]	@ 0x40
 8016202:	e78b      	b.n	801611c <fill_path_even_odd+0x584>
 8016204:	2e03      	cmp	r6, #3
 8016206:	f000 80ab 	beq.w	8016360 <fill_path_even_odd+0x7c8>
 801620a:	2e0a      	cmp	r6, #10
 801620c:	f040 8259 	bne.w	80166c2 <fill_path_even_odd+0xb2a>
 8016210:	9007      	str	r0, [sp, #28]
 8016212:	edde 7a00 	vldr	s15, [lr]
 8016216:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 801621a:	ee17 1a90 	vmov	r1, s15
 801621e:	eb01 71d1 	add.w	r1, r1, r1, lsr #31
 8016222:	104a      	asrs	r2, r1, #1
 8016224:	2a00      	cmp	r2, #0
 8016226:	9203      	str	r2, [sp, #12]
 8016228:	f340 80e2 	ble.w	80163f0 <fill_path_even_odd+0x858>
 801622c:	9a04      	ldr	r2, [sp, #16]
 801622e:	2400      	movs	r4, #0
 8016230:	f8cd 9010 	str.w	r9, [sp, #16]
 8016234:	46a9      	mov	r9, r5
 8016236:	9605      	str	r6, [sp, #20]
 8016238:	0091      	lsls	r1, r2, #2
 801623a:	1d08      	adds	r0, r1, #4
 801623c:	4418      	add	r0, r3
 801623e:	9d01      	ldr	r5, [sp, #4]
 8016240:	440b      	add	r3, r1
 8016242:	1c51      	adds	r1, r2, #1
 8016244:	9107      	str	r1, [sp, #28]
 8016246:	3202      	adds	r2, #2
 8016248:	ed93 8a00 	vldr	s16, [r3]
 801624c:	b365      	cbz	r5, 80162a8 <fill_path_even_odd+0x710>
 801624e:	ed9d 1a11 	vldr	s2, [sp, #68]	@ 0x44
 8016252:	ee38 8a01 	vadd.f32	s16, s16, s2
 8016256:	ed8d 8a0b 	vstr	s16, [sp, #44]	@ 0x2c
 801625a:	9207      	str	r2, [sp, #28]
 801625c:	edd0 8a00 	vldr	s17, [r0]
 8016260:	eddd 1a12 	vldr	s3, [sp, #72]	@ 0x48
 8016264:	ee78 8aa1 	vadd.f32	s17, s17, s3
 8016268:	edcd 8a0c 	vstr	s17, [sp, #48]	@ 0x30
 801626c:	ed8d 8a11 	vstr	s16, [sp, #68]	@ 0x44
 8016270:	edcd 8a12 	vstr	s17, [sp, #72]	@ 0x48
 8016274:	f8db 3000 	ldr.w	r3, [fp]
 8016278:	f88d 905c 	strb.w	r9, [sp, #92]	@ 0x5c
 801627c:	7f1a      	ldrb	r2, [r3, #28]
 801627e:	b9da      	cbnz	r2, 80162b8 <fill_path_even_odd+0x720>
 8016280:	4aaa      	ldr	r2, [pc, #680]	@ (801652c <fill_path_even_odd+0x994>)
 8016282:	eddd 9a09 	vldr	s19, [sp, #36]	@ 0x24
 8016286:	6812      	ldr	r2, [r2, #0]
 8016288:	ed9d aa0a 	vldr	s20, [sp, #40]	@ 0x28
 801628c:	2a00      	cmp	r2, #0
 801628e:	f000 8199 	beq.w	80165c4 <fill_path_even_odd+0xa2c>
 8016292:	eef0 1a68 	vmov.f32	s3, s17
 8016296:	eeb0 1a48 	vmov.f32	s2, s16
 801629a:	eef0 0a4a 	vmov.f32	s1, s20
 801629e:	eeb0 0a69 	vmov.f32	s0, s19
 80162a2:	f7fc fc79 	bl	8012b98 <raster_stroked_line_>
 80162a6:	e047      	b.n	8016338 <fill_path_even_odd+0x7a0>
 80162a8:	ed8d 8a0b 	vstr	s16, [sp, #44]	@ 0x2c
 80162ac:	9207      	str	r2, [sp, #28]
 80162ae:	edd0 8a00 	vldr	s17, [r0]
 80162b2:	edcd 8a0c 	vstr	s17, [sp, #48]	@ 0x30
 80162b6:	e7d9      	b.n	801626c <fill_path_even_odd+0x6d4>
 80162b8:	4b9d      	ldr	r3, [pc, #628]	@ (8016530 <fill_path_even_odd+0x998>)
 80162ba:	2007      	movs	r0, #7
 80162bc:	681e      	ldr	r6, [r3, #0]
 80162be:	4b9d      	ldr	r3, [pc, #628]	@ (8016534 <fill_path_even_odd+0x99c>)
 80162c0:	681d      	ldr	r5, [r3, #0]
 80162c2:	f007 fe6f 	bl	801dfa4 <nema_cl_get_space>
 80162c6:	2800      	cmp	r0, #0
 80162c8:	d036      	beq.n	8016338 <fill_path_even_odd+0x7a0>
 80162ca:	4a9b      	ldr	r2, [pc, #620]	@ (8016538 <fill_path_even_odd+0x9a0>)
 80162cc:	f8db 3000 	ldr.w	r3, [fp]
 80162d0:	7812      	ldrb	r2, [r2, #0]
 80162d2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80162d4:	2a01      	cmp	r2, #1
 80162d6:	f003 63f0 	and.w	r3, r3, #125829120	@ 0x7800000
 80162da:	d104      	bne.n	80162e6 <fill_path_even_odd+0x74e>
 80162dc:	4a96      	ldr	r2, [pc, #600]	@ (8016538 <fill_path_even_odd+0x9a0>)
 80162de:	6852      	ldr	r2, [r2, #4]
 80162e0:	f002 4240 	and.w	r2, r2, #3221225472	@ 0xc0000000
 80162e4:	4313      	orrs	r3, r2
 80162e6:	f44f 7248 	mov.w	r2, #800	@ 0x320
 80162ea:	6002      	str	r2, [r0, #0]
 80162ec:	eddd 7a09 	vldr	s15, [sp, #36]	@ 0x24
 80162f0:	f44f 7249 	mov.w	r2, #804	@ 0x324
 80162f4:	f44f 7e4d 	mov.w	lr, #820	@ 0x334
 80162f8:	f44f 7c4c 	mov.w	ip, #816	@ 0x330
 80162fc:	6082      	str	r2, [r0, #8]
 80162fe:	edc0 7a01 	vstr	s15, [r0, #4]
 8016302:	f8c0 e018 	str.w	lr, [r0, #24]
 8016306:	f8dd e028 	ldr.w	lr, [sp, #40]	@ 0x28
 801630a:	f8c0 c010 	str.w	ip, [r0, #16]
 801630e:	f8c0 e00c 	str.w	lr, [r0, #12]
 8016312:	f8dd c02c 	ldr.w	ip, [sp, #44]	@ 0x2c
 8016316:	f043 0304 	orr.w	r3, r3, #4
 801631a:	f8c0 c014 	str.w	ip, [r0, #20]
 801631e:	6343      	str	r3, [r0, #52]	@ 0x34
 8016320:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8016322:	f44f 71a0 	mov.w	r1, #320	@ 0x140
 8016326:	61c3      	str	r3, [r0, #28]
 8016328:	f44f 73a2 	mov.w	r3, #324	@ 0x144
 801632c:	4a83      	ldr	r2, [pc, #524]	@ (801653c <fill_path_even_odd+0x9a4>)
 801632e:	6246      	str	r6, [r0, #36]	@ 0x24
 8016330:	62c5      	str	r5, [r0, #44]	@ 0x2c
 8016332:	6302      	str	r2, [r0, #48]	@ 0x30
 8016334:	6201      	str	r1, [r0, #32]
 8016336:	6283      	str	r3, [r0, #40]	@ 0x28
 8016338:	9b03      	ldr	r3, [sp, #12]
 801633a:	3401      	adds	r4, #1
 801633c:	429c      	cmp	r4, r3
 801633e:	e898 0003 	ldmia.w	r8, {r0, r1}
 8016342:	e887 0003 	stmia.w	r7, {r0, r1}
 8016346:	d051      	beq.n	80163ec <fill_path_even_odd+0x854>
 8016348:	f8da 300c 	ldr.w	r3, [sl, #12]
 801634c:	9a07      	ldr	r2, [sp, #28]
 801634e:	e773      	b.n	8016238 <fill_path_even_odd+0x6a0>
 8016350:	edcd 6a0b 	vstr	s13, [sp, #44]	@ 0x2c
 8016354:	9107      	str	r1, [sp, #28]
 8016356:	edd2 7a00 	vldr	s15, [r2]
 801635a:	edcd 7a0c 	vstr	s15, [sp, #48]	@ 0x30
 801635e:	e4b6      	b.n	8015cce <fill_path_even_odd+0x136>
 8016360:	9b01      	ldr	r3, [sp, #4]
 8016362:	eddd 7a12 	vldr	s15, [sp, #72]	@ 0x48
 8016366:	9007      	str	r0, [sp, #28]
 8016368:	2b00      	cmp	r3, #0
 801636a:	f000 80cf 	beq.w	801650c <fill_path_even_odd+0x974>
 801636e:	ed9e 7a00 	vldr	s14, [lr]
 8016372:	eddd 6a11 	vldr	s13, [sp, #68]	@ 0x44
 8016376:	ee76 6a87 	vadd.f32	s13, s13, s14
 801637a:	edcd 7a0c 	vstr	s15, [sp, #48]	@ 0x30
 801637e:	edcd 6a0b 	vstr	s13, [sp, #44]	@ 0x2c
 8016382:	e4a4      	b.n	8015cce <fill_path_even_odd+0x136>
 8016384:	9007      	str	r0, [sp, #28]
 8016386:	ed94 7a00 	vldr	s14, [r4]
 801638a:	ed8d 7a0d 	vstr	s14, [sp, #52]	@ 0x34
 801638e:	3102      	adds	r1, #2
 8016390:	9107      	str	r1, [sp, #28]
 8016392:	edd4 7a01 	vldr	s15, [r4, #4]
 8016396:	9a01      	ldr	r2, [sp, #4]
 8016398:	edcd 7a0e 	vstr	s15, [sp, #56]	@ 0x38
 801639c:	2a00      	cmp	r2, #0
 801639e:	f43f aebd 	beq.w	801611c <fill_path_even_odd+0x584>
 80163a2:	ed9d 6a11 	vldr	s12, [sp, #68]	@ 0x44
 80163a6:	eddd 6a12 	vldr	s13, [sp, #72]	@ 0x48
 80163aa:	ee37 7a06 	vadd.f32	s14, s14, s12
 80163ae:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80163b2:	ed8d 7a0d 	vstr	s14, [sp, #52]	@ 0x34
 80163b6:	edcd 7a0e 	vstr	s15, [sp, #56]	@ 0x38
 80163ba:	e6af      	b.n	801611c <fill_path_even_odd+0x584>
 80163bc:	2002      	movs	r0, #2
 80163be:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 80163c0:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 80163c2:	f007 fdef 	bl	801dfa4 <nema_cl_get_space>
 80163c6:	b138      	cbz	r0, 80163d8 <fill_path_even_odd+0x840>
 80163c8:	f44f 724a 	mov.w	r2, #808	@ 0x328
 80163cc:	f44f 734b 	mov.w	r3, #812	@ 0x32c
 80163d0:	6045      	str	r5, [r0, #4]
 80163d2:	60c4      	str	r4, [r0, #12]
 80163d4:	6002      	str	r2, [r0, #0]
 80163d6:	6083      	str	r3, [r0, #8]
 80163d8:	a806      	add	r0, sp, #24
 80163da:	f7fd f83d 	bl	8013458 <fill_arc.isra.7>
 80163de:	4605      	mov	r5, r0
 80163e0:	2800      	cmp	r0, #0
 80163e2:	f43f ad59 	beq.w	8015e98 <fill_path_even_odd+0x300>
 80163e6:	f006 fc85 	bl	801ccf4 <nema_vg_set_error>
 80163ea:	e515      	b.n	8015e18 <fill_path_even_odd+0x280>
 80163ec:	e9dd 9604 	ldrd	r9, r6, [sp, #16]
 80163f0:	ed9d 8a15 	vldr	s16, [sp, #84]	@ 0x54
 80163f4:	eddd 7a11 	vldr	s15, [sp, #68]	@ 0x44
 80163f8:	ee77 7ac8 	vsub.f32	s15, s15, s16
 80163fc:	eef5 7a40 	vcmp.f32	s15, #0.0
 8016400:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016404:	eddd 8a16 	vldr	s17, [sp, #88]	@ 0x58
 8016408:	d111      	bne.n	801642e <fill_path_even_odd+0x896>
 801640a:	eddd 7a12 	vldr	s15, [sp, #72]	@ 0x48
 801640e:	ee77 7ae8 	vsub.f32	s15, s15, s17
 8016412:	eef5 7a40 	vcmp.f32	s15, #0.0
 8016416:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801641a:	d108      	bne.n	801642e <fill_path_even_odd+0x896>
 801641c:	2300      	movs	r3, #0
 801641e:	f88d 3019 	strb.w	r3, [sp, #25]
 8016422:	f89d 301a 	ldrb.w	r3, [sp, #26]
 8016426:	2b00      	cmp	r3, #0
 8016428:	f43f ad2f 	beq.w	8015e8a <fill_path_even_odd+0x2f2>
 801642c:	e56c      	b.n	8015f08 <fill_path_even_odd+0x370>
 801642e:	ed8d 8a11 	vstr	s16, [sp, #68]	@ 0x44
 8016432:	e898 0003 	ldmia.w	r8, {r0, r1}
 8016436:	edcd 8a12 	vstr	s17, [sp, #72]	@ 0x48
 801643a:	f8db 3000 	ldr.w	r3, [fp]
 801643e:	e887 0003 	stmia.w	r7, {r0, r1}
 8016442:	7f1a      	ldrb	r2, [r3, #28]
 8016444:	ed8d 8a0b 	vstr	s16, [sp, #44]	@ 0x2c
 8016448:	edcd 8a0c 	vstr	s17, [sp, #48]	@ 0x30
 801644c:	2a00      	cmp	r2, #0
 801644e:	f000 8124 	beq.w	801669a <fill_path_even_odd+0xb02>
 8016452:	4b37      	ldr	r3, [pc, #220]	@ (8016530 <fill_path_even_odd+0x998>)
 8016454:	2007      	movs	r0, #7
 8016456:	681c      	ldr	r4, [r3, #0]
 8016458:	4b36      	ldr	r3, [pc, #216]	@ (8016534 <fill_path_even_odd+0x99c>)
 801645a:	f8d3 8000 	ldr.w	r8, [r3]
 801645e:	f007 fda1 	bl	801dfa4 <nema_cl_get_space>
 8016462:	2800      	cmp	r0, #0
 8016464:	d0da      	beq.n	801641c <fill_path_even_odd+0x884>
 8016466:	4a34      	ldr	r2, [pc, #208]	@ (8016538 <fill_path_even_odd+0x9a0>)
 8016468:	f8db 3000 	ldr.w	r3, [fp]
 801646c:	7812      	ldrb	r2, [r2, #0]
 801646e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8016470:	2a01      	cmp	r2, #1
 8016472:	f003 63f0 	and.w	r3, r3, #125829120	@ 0x7800000
 8016476:	d104      	bne.n	8016482 <fill_path_even_odd+0x8ea>
 8016478:	4a2f      	ldr	r2, [pc, #188]	@ (8016538 <fill_path_even_odd+0x9a0>)
 801647a:	6852      	ldr	r2, [r2, #4]
 801647c:	f002 4240 	and.w	r2, r2, #3221225472	@ 0xc0000000
 8016480:	4313      	orrs	r3, r2
 8016482:	f44f 7e48 	mov.w	lr, #800	@ 0x320
 8016486:	f44f 7c49 	mov.w	ip, #804	@ 0x324
 801648a:	f44f 774d 	mov.w	r7, #820	@ 0x334
 801648e:	f44f 754c 	mov.w	r5, #816	@ 0x330
 8016492:	f44f 71a0 	mov.w	r1, #320	@ 0x140
 8016496:	f44f 72a2 	mov.w	r2, #324	@ 0x144
 801649a:	f8c0 e000 	str.w	lr, [r0]
 801649e:	f8dd e024 	ldr.w	lr, [sp, #36]	@ 0x24
 80164a2:	f8c0 c008 	str.w	ip, [r0, #8]
 80164a6:	f8c0 e004 	str.w	lr, [r0, #4]
 80164aa:	6187      	str	r7, [r0, #24]
 80164ac:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
 80164ae:	6105      	str	r5, [r0, #16]
 80164b0:	60c7      	str	r7, [r0, #12]
 80164b2:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 80164b4:	f043 0304 	orr.w	r3, r3, #4
 80164b8:	6145      	str	r5, [r0, #20]
 80164ba:	6343      	str	r3, [r0, #52]	@ 0x34
 80164bc:	6244      	str	r4, [r0, #36]	@ 0x24
 80164be:	4b1f      	ldr	r3, [pc, #124]	@ (801653c <fill_path_even_odd+0x9a4>)
 80164c0:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 80164c2:	f8c0 802c 	str.w	r8, [r0, #44]	@ 0x2c
 80164c6:	61c4      	str	r4, [r0, #28]
 80164c8:	6201      	str	r1, [r0, #32]
 80164ca:	6282      	str	r2, [r0, #40]	@ 0x28
 80164cc:	6303      	str	r3, [r0, #48]	@ 0x30
 80164ce:	e7a5      	b.n	801641c <fill_path_even_odd+0x884>
 80164d0:	f1ac 0c05 	sub.w	ip, ip, #5
 80164d4:	f1bc 0f03 	cmp.w	ip, #3
 80164d8:	eddd 6a11 	vldr	s13, [sp, #68]	@ 0x44
 80164dc:	eddd 7a12 	vldr	s15, [sp, #72]	@ 0x48
 80164e0:	d80b      	bhi.n	80164fa <fill_path_even_odd+0x962>
 80164e2:	ee76 6aa6 	vadd.f32	s13, s13, s13
 80164e6:	ee77 7aa7 	vadd.f32	s15, s15, s15
 80164ea:	ed9d 6a13 	vldr	s12, [sp, #76]	@ 0x4c
 80164ee:	ed9d 7a14 	vldr	s14, [sp, #80]	@ 0x50
 80164f2:	ee76 6ac6 	vsub.f32	s13, s13, s12
 80164f6:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80164fa:	edcd 7a0e 	vstr	s15, [sp, #56]	@ 0x38
 80164fe:	edcd 6a0d 	vstr	s13, [sp, #52]	@ 0x34
 8016502:	edcd 6a13 	vstr	s13, [sp, #76]	@ 0x4c
 8016506:	edcd 7a14 	vstr	s15, [sp, #80]	@ 0x50
 801650a:	e60e      	b.n	801612a <fill_path_even_odd+0x592>
 801650c:	edde 6a00 	vldr	s13, [lr]
 8016510:	edcd 7a0c 	vstr	s15, [sp, #48]	@ 0x30
 8016514:	edcd 6a0b 	vstr	s13, [sp, #44]	@ 0x2c
 8016518:	f7ff bbd9 	b.w	8015cce <fill_path_even_odd+0x136>
 801651c:	2300      	movs	r3, #0
 801651e:	f88d 3019 	strb.w	r3, [sp, #25]
 8016522:	f89d 301a 	ldrb.w	r3, [sp, #26]
 8016526:	f7ff bbf0 	b.w	8015d0a <fill_path_even_odd+0x172>
 801652a:	bf00      	nop
 801652c:	20083150 	.word	0x20083150
 8016530:	20083154 	.word	0x20083154
 8016534:	20083158 	.word	0x20083158
 8016538:	20000064 	.word	0x20000064
 801653c:	ff000100 	.word	0xff000100
 8016540:	f89d 3018 	ldrb.w	r3, [sp, #24]
 8016544:	2b00      	cmp	r3, #0
 8016546:	d17a      	bne.n	801663e <fill_path_even_odd+0xaa6>
 8016548:	9f15      	ldr	r7, [sp, #84]	@ 0x54
 801654a:	9c16      	ldr	r4, [sp, #88]	@ 0x58
 801654c:	4b8f      	ldr	r3, [pc, #572]	@ (801678c <fill_path_even_odd+0xbf4>)
 801654e:	2007      	movs	r0, #7
 8016550:	681e      	ldr	r6, [r3, #0]
 8016552:	4b8f      	ldr	r3, [pc, #572]	@ (8016790 <fill_path_even_odd+0xbf8>)
 8016554:	681d      	ldr	r5, [r3, #0]
 8016556:	f007 fd25 	bl	801dfa4 <nema_cl_get_space>
 801655a:	2800      	cmp	r0, #0
 801655c:	f43f ac5b 	beq.w	8015e16 <fill_path_even_odd+0x27e>
 8016560:	4b8c      	ldr	r3, [pc, #560]	@ (8016794 <fill_path_even_odd+0xbfc>)
 8016562:	4a8d      	ldr	r2, [pc, #564]	@ (8016798 <fill_path_even_odd+0xc00>)
 8016564:	681b      	ldr	r3, [r3, #0]
 8016566:	7811      	ldrb	r1, [r2, #0]
 8016568:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801656a:	2901      	cmp	r1, #1
 801656c:	f003 63f0 	and.w	r3, r3, #125829120	@ 0x7800000
 8016570:	d103      	bne.n	801657a <fill_path_even_odd+0x9e2>
 8016572:	6852      	ldr	r2, [r2, #4]
 8016574:	f002 4240 	and.w	r2, r2, #3221225472	@ 0xc0000000
 8016578:	4313      	orrs	r3, r2
 801657a:	f44f 7248 	mov.w	r2, #800	@ 0x320
 801657e:	f44f 7149 	mov.w	r1, #804	@ 0x324
 8016582:	6002      	str	r2, [r0, #0]
 8016584:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8016586:	6081      	str	r1, [r0, #8]
 8016588:	6042      	str	r2, [r0, #4]
 801658a:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 801658c:	61c4      	str	r4, [r0, #28]
 801658e:	f44f 7c4c 	mov.w	ip, #816	@ 0x330
 8016592:	60c2      	str	r2, [r0, #12]
 8016594:	f44f 744d 	mov.w	r4, #820	@ 0x334
 8016598:	f44f 71a0 	mov.w	r1, #320	@ 0x140
 801659c:	f44f 72a2 	mov.w	r2, #324	@ 0x144
 80165a0:	f043 0304 	orr.w	r3, r3, #4
 80165a4:	6343      	str	r3, [r0, #52]	@ 0x34
 80165a6:	4b7d      	ldr	r3, [pc, #500]	@ (801679c <fill_path_even_odd+0xc04>)
 80165a8:	6147      	str	r7, [r0, #20]
 80165aa:	6246      	str	r6, [r0, #36]	@ 0x24
 80165ac:	62c5      	str	r5, [r0, #44]	@ 0x2c
 80165ae:	f8c0 c010 	str.w	ip, [r0, #16]
 80165b2:	6184      	str	r4, [r0, #24]
 80165b4:	6201      	str	r1, [r0, #32]
 80165b6:	6282      	str	r2, [r0, #40]	@ 0x28
 80165b8:	6303      	str	r3, [r0, #48]	@ 0x30
 80165ba:	e42c      	b.n	8015e16 <fill_path_even_odd+0x27e>
 80165bc:	f8dd 8054 	ldr.w	r8, [sp, #84]	@ 0x54
 80165c0:	9f16      	ldr	r7, [sp, #88]	@ 0x58
 80165c2:	e4f3      	b.n	8015fac <fill_path_even_odd+0x414>
 80165c4:	e9d3 520a 	ldrd	r5, r2, [r3, #40]	@ 0x28
 80165c8:	2d00      	cmp	r5, #0
 80165ca:	bf18      	it	ne
 80165cc:	f04f 65f0 	movne.w	r5, #125829120	@ 0x7800000
 80165d0:	4b71      	ldr	r3, [pc, #452]	@ (8016798 <fill_path_even_odd+0xc00>)
 80165d2:	4015      	ands	r5, r2
 80165d4:	781b      	ldrb	r3, [r3, #0]
 80165d6:	2b01      	cmp	r3, #1
 80165d8:	d104      	bne.n	80165e4 <fill_path_even_odd+0xa4c>
 80165da:	4b6f      	ldr	r3, [pc, #444]	@ (8016798 <fill_path_even_odd+0xc00>)
 80165dc:	685b      	ldr	r3, [r3, #4]
 80165de:	f003 4340 	and.w	r3, r3, #3221225472	@ 0xc0000000
 80165e2:	431d      	orrs	r5, r3
 80165e4:	2005      	movs	r0, #5
 80165e6:	f007 fcdd 	bl	801dfa4 <nema_cl_get_space>
 80165ea:	2800      	cmp	r0, #0
 80165ec:	f43f aea4 	beq.w	8016338 <fill_path_even_odd+0x7a0>
 80165f0:	f44f 7648 	mov.w	r6, #800	@ 0x320
 80165f4:	f44f 7149 	mov.w	r1, #804	@ 0x324
 80165f8:	f44f 724c 	mov.w	r2, #816	@ 0x330
 80165fc:	f44f 734d 	mov.w	r3, #820	@ 0x334
 8016600:	f045 050a 	orr.w	r5, r5, #10
 8016604:	6245      	str	r5, [r0, #36]	@ 0x24
 8016606:	4d65      	ldr	r5, [pc, #404]	@ (801679c <fill_path_even_odd+0xc04>)
 8016608:	edc0 9a01 	vstr	s19, [r0, #4]
 801660c:	ed80 aa03 	vstr	s20, [r0, #12]
 8016610:	ed80 8a05 	vstr	s16, [r0, #20]
 8016614:	edc0 8a07 	vstr	s17, [r0, #28]
 8016618:	6205      	str	r5, [r0, #32]
 801661a:	6006      	str	r6, [r0, #0]
 801661c:	6081      	str	r1, [r0, #8]
 801661e:	6102      	str	r2, [r0, #16]
 8016620:	6183      	str	r3, [r0, #24]
 8016622:	e689      	b.n	8016338 <fill_path_even_odd+0x7a0>
 8016624:	ed9d 7a13 	vldr	s14, [sp, #76]	@ 0x4c
 8016628:	ee75 7a05 	vadd.f32	s15, s10, s10
 801662c:	ee35 6aa5 	vadd.f32	s12, s11, s11
 8016630:	eddd 6a14 	vldr	s13, [sp, #80]	@ 0x50
 8016634:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8016638:	ee36 7a66 	vsub.f32	s14, s12, s13
 801663c:	e5c7      	b.n	80161ce <fill_path_even_odd+0x636>
 801663e:	2400      	movs	r4, #0
 8016640:	4627      	mov	r7, r4
 8016642:	e783      	b.n	801654c <fill_path_even_odd+0x9b4>
 8016644:	9007      	str	r0, [sp, #28]
 8016646:	6822      	ldr	r2, [r4, #0]
 8016648:	1c8b      	adds	r3, r1, #2
 801664a:	9307      	str	r3, [sp, #28]
 801664c:	920d      	str	r2, [sp, #52]	@ 0x34
 801664e:	6863      	ldr	r3, [r4, #4]
 8016650:	3103      	adds	r1, #3
 8016652:	930e      	str	r3, [sp, #56]	@ 0x38
 8016654:	9107      	str	r1, [sp, #28]
 8016656:	4b52      	ldr	r3, [pc, #328]	@ (80167a0 <fill_path_even_odd+0xc08>)
 8016658:	68a2      	ldr	r2, [r4, #8]
 801665a:	edd3 0a00 	vldr	s1, [r3]
 801665e:	ed93 0a03 	vldr	s0, [r3, #12]
 8016662:	920f      	str	r2, [sp, #60]	@ 0x3c
 8016664:	f01a ff02 	bl	803146c <atan2f>
 8016668:	eddd 7a0f 	vldr	s15, [sp, #60]	@ 0x3c
 801666c:	ee77 7a80 	vadd.f32	s15, s15, s0
 8016670:	9907      	ldr	r1, [sp, #28]
 8016672:	f8da 300c 	ldr.w	r3, [sl, #12]
 8016676:	f8dd c044 	ldr.w	ip, [sp, #68]	@ 0x44
 801667a:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 801667c:	008a      	lsls	r2, r1, #2
 801667e:	1c48      	adds	r0, r1, #1
 8016680:	9004      	str	r0, [sp, #16]
 8016682:	9203      	str	r2, [sp, #12]
 8016684:	f88d 501b 	strb.w	r5, [sp, #27]
 8016688:	edcd 7a0f 	vstr	s15, [sp, #60]	@ 0x3c
 801668c:	eb03 0e02 	add.w	lr, r3, r2
 8016690:	f8cd c04c 	str.w	ip, [sp, #76]	@ 0x4c
 8016694:	9414      	str	r4, [sp, #80]	@ 0x50
 8016696:	f7ff bb06 	b.w	8015ca6 <fill_path_even_odd+0x10e>
 801669a:	4a42      	ldr	r2, [pc, #264]	@ (80167a4 <fill_path_even_odd+0xc0c>)
 801669c:	eddd 9a09 	vldr	s19, [sp, #36]	@ 0x24
 80166a0:	6812      	ldr	r2, [r2, #0]
 80166a2:	ed9d aa0a 	vldr	s20, [sp, #40]	@ 0x28
 80166a6:	2a00      	cmp	r2, #0
 80166a8:	f000 811b 	beq.w	80168e2 <fill_path_even_odd+0xd4a>
 80166ac:	eef0 1a68 	vmov.f32	s3, s17
 80166b0:	eeb0 1a48 	vmov.f32	s2, s16
 80166b4:	eef0 0a4a 	vmov.f32	s1, s20
 80166b8:	eeb0 0a69 	vmov.f32	s0, s19
 80166bc:	f7fc fa6c 	bl	8012b98 <raster_stroked_line_>
 80166c0:	e6ac      	b.n	801641c <fill_path_even_odd+0x884>
 80166c2:	2e0b      	cmp	r6, #11
 80166c4:	f47f ad31 	bne.w	801612a <fill_path_even_odd+0x592>
 80166c8:	9007      	str	r0, [sp, #28]
 80166ca:	edde 7a00 	vldr	s15, [lr]
 80166ce:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80166d2:	ee17 1a90 	vmov	r1, s15
 80166d6:	eb01 71d1 	add.w	r1, r1, r1, lsr #31
 80166da:	104c      	asrs	r4, r1, #1
 80166dc:	2c00      	cmp	r4, #0
 80166de:	f340 80b0 	ble.w	8016842 <fill_path_even_odd+0xcaa>
 80166e2:	2100      	movs	r1, #0
 80166e4:	9a04      	ldr	r2, [sp, #16]
 80166e6:	9605      	str	r6, [sp, #20]
 80166e8:	f8cd 9010 	str.w	r9, [sp, #16]
 80166ec:	4656      	mov	r6, sl
 80166ee:	46a9      	mov	r9, r5
 80166f0:	46a2      	mov	sl, r4
 80166f2:	460c      	mov	r4, r1
 80166f4:	e035      	b.n	8016762 <fill_path_even_odd+0xbca>
 80166f6:	ed9d 1a11 	vldr	s2, [sp, #68]	@ 0x44
 80166fa:	ee38 8a01 	vadd.f32	s16, s16, s2
 80166fe:	ed8d 8a0b 	vstr	s16, [sp, #44]	@ 0x2c
 8016702:	9207      	str	r2, [sp, #28]
 8016704:	edd1 8a00 	vldr	s17, [r1]
 8016708:	eddd 1a12 	vldr	s3, [sp, #72]	@ 0x48
 801670c:	ee78 8aa1 	vadd.f32	s17, s17, s3
 8016710:	edcd 8a0c 	vstr	s17, [sp, #48]	@ 0x30
 8016714:	ed8d 8a11 	vstr	s16, [sp, #68]	@ 0x44
 8016718:	edcd 8a12 	vstr	s17, [sp, #72]	@ 0x48
 801671c:	f8db 3000 	ldr.w	r3, [fp]
 8016720:	f88d 905c 	strb.w	r9, [sp, #92]	@ 0x5c
 8016724:	7f1a      	ldrb	r2, [r3, #28]
 8016726:	2a00      	cmp	r2, #0
 8016728:	d13e      	bne.n	80167a8 <fill_path_even_odd+0xc10>
 801672a:	4a1e      	ldr	r2, [pc, #120]	@ (80167a4 <fill_path_even_odd+0xc0c>)
 801672c:	eddd 9a09 	vldr	s19, [sp, #36]	@ 0x24
 8016730:	6812      	ldr	r2, [r2, #0]
 8016732:	ed9d aa0a 	vldr	s20, [sp, #40]	@ 0x28
 8016736:	2a00      	cmp	r2, #0
 8016738:	f000 80a2 	beq.w	8016880 <fill_path_even_odd+0xce8>
 801673c:	eef0 1a68 	vmov.f32	s3, s17
 8016740:	eeb0 1a48 	vmov.f32	s2, s16
 8016744:	eef0 0a4a 	vmov.f32	s1, s20
 8016748:	eeb0 0a69 	vmov.f32	s0, s19
 801674c:	f7fc fa24 	bl	8012b98 <raster_stroked_line_>
 8016750:	e898 0003 	ldmia.w	r8, {r0, r1}
 8016754:	3401      	adds	r4, #1
 8016756:	4554      	cmp	r4, sl
 8016758:	e887 0003 	stmia.w	r7, {r0, r1}
 801675c:	d06d      	beq.n	801683a <fill_path_even_odd+0xca2>
 801675e:	68f3      	ldr	r3, [r6, #12]
 8016760:	9a07      	ldr	r2, [sp, #28]
 8016762:	0090      	lsls	r0, r2, #2
 8016764:	1d01      	adds	r1, r0, #4
 8016766:	4419      	add	r1, r3
 8016768:	9d01      	ldr	r5, [sp, #4]
 801676a:	4403      	add	r3, r0
 801676c:	1c50      	adds	r0, r2, #1
 801676e:	9007      	str	r0, [sp, #28]
 8016770:	3202      	adds	r2, #2
 8016772:	ed93 8a00 	vldr	s16, [r3]
 8016776:	2d00      	cmp	r5, #0
 8016778:	d1bd      	bne.n	80166f6 <fill_path_even_odd+0xb5e>
 801677a:	ed8d 8a0b 	vstr	s16, [sp, #44]	@ 0x2c
 801677e:	9207      	str	r2, [sp, #28]
 8016780:	edd1 8a00 	vldr	s17, [r1]
 8016784:	edcd 8a0c 	vstr	s17, [sp, #48]	@ 0x30
 8016788:	e7c4      	b.n	8016714 <fill_path_even_odd+0xb7c>
 801678a:	bf00      	nop
 801678c:	20083154 	.word	0x20083154
 8016790:	20083158 	.word	0x20083158
 8016794:	20083148 	.word	0x20083148
 8016798:	20000064 	.word	0x20000064
 801679c:	ff000100 	.word	0xff000100
 80167a0:	200831cc 	.word	0x200831cc
 80167a4:	20083150 	.word	0x20083150
 80167a8:	4b66      	ldr	r3, [pc, #408]	@ (8016944 <fill_path_even_odd+0xdac>)
 80167aa:	2007      	movs	r0, #7
 80167ac:	681b      	ldr	r3, [r3, #0]
 80167ae:	9303      	str	r3, [sp, #12]
 80167b0:	4b65      	ldr	r3, [pc, #404]	@ (8016948 <fill_path_even_odd+0xdb0>)
 80167b2:	681d      	ldr	r5, [r3, #0]
 80167b4:	f007 fbf6 	bl	801dfa4 <nema_cl_get_space>
 80167b8:	2800      	cmp	r0, #0
 80167ba:	d0c9      	beq.n	8016750 <fill_path_even_odd+0xbb8>
 80167bc:	4a63      	ldr	r2, [pc, #396]	@ (801694c <fill_path_even_odd+0xdb4>)
 80167be:	f8db 3000 	ldr.w	r3, [fp]
 80167c2:	7812      	ldrb	r2, [r2, #0]
 80167c4:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80167c6:	2a01      	cmp	r2, #1
 80167c8:	f003 63f0 	and.w	r3, r3, #125829120	@ 0x7800000
 80167cc:	d104      	bne.n	80167d8 <fill_path_even_odd+0xc40>
 80167ce:	4a5f      	ldr	r2, [pc, #380]	@ (801694c <fill_path_even_odd+0xdb4>)
 80167d0:	6852      	ldr	r2, [r2, #4]
 80167d2:	f002 4240 	and.w	r2, r2, #3221225472	@ 0xc0000000
 80167d6:	4313      	orrs	r3, r2
 80167d8:	f44f 7248 	mov.w	r2, #800	@ 0x320
 80167dc:	6002      	str	r2, [r0, #0]
 80167de:	eddd 7a09 	vldr	s15, [sp, #36]	@ 0x24
 80167e2:	f44f 7249 	mov.w	r2, #804	@ 0x324
 80167e6:	f44f 7e4d 	mov.w	lr, #820	@ 0x334
 80167ea:	f44f 7c4c 	mov.w	ip, #816	@ 0x330
 80167ee:	6082      	str	r2, [r0, #8]
 80167f0:	edc0 7a01 	vstr	s15, [r0, #4]
 80167f4:	f8c0 e018 	str.w	lr, [r0, #24]
 80167f8:	f8dd e028 	ldr.w	lr, [sp, #40]	@ 0x28
 80167fc:	f8c0 c010 	str.w	ip, [r0, #16]
 8016800:	f8c0 e00c 	str.w	lr, [r0, #12]
 8016804:	f8dd c02c 	ldr.w	ip, [sp, #44]	@ 0x2c
 8016808:	f043 0304 	orr.w	r3, r3, #4
 801680c:	6343      	str	r3, [r0, #52]	@ 0x34
 801680e:	9b03      	ldr	r3, [sp, #12]
 8016810:	f8c0 c014 	str.w	ip, [r0, #20]
 8016814:	6243      	str	r3, [r0, #36]	@ 0x24
 8016816:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8016818:	f44f 71a0 	mov.w	r1, #320	@ 0x140
 801681c:	61c3      	str	r3, [r0, #28]
 801681e:	f44f 73a2 	mov.w	r3, #324	@ 0x144
 8016822:	4a4b      	ldr	r2, [pc, #300]	@ (8016950 <fill_path_even_odd+0xdb8>)
 8016824:	3401      	adds	r4, #1
 8016826:	4554      	cmp	r4, sl
 8016828:	62c5      	str	r5, [r0, #44]	@ 0x2c
 801682a:	6302      	str	r2, [r0, #48]	@ 0x30
 801682c:	6201      	str	r1, [r0, #32]
 801682e:	6283      	str	r3, [r0, #40]	@ 0x28
 8016830:	e898 0003 	ldmia.w	r8, {r0, r1}
 8016834:	e887 0003 	stmia.w	r7, {r0, r1}
 8016838:	d191      	bne.n	801675e <fill_path_even_odd+0xbc6>
 801683a:	46b2      	mov	sl, r6
 801683c:	f8dd 9010 	ldr.w	r9, [sp, #16]
 8016840:	9e05      	ldr	r6, [sp, #20]
 8016842:	f8db 3000 	ldr.w	r3, [fp]
 8016846:	7f1b      	ldrb	r3, [r3, #28]
 8016848:	b1b3      	cbz	r3, 8016878 <fill_path_even_odd+0xce0>
 801684a:	ed9d 7a11 	vldr	s14, [sp, #68]	@ 0x44
 801684e:	eddd 7a15 	vldr	s15, [sp, #84]	@ 0x54
 8016852:	ee77 7a67 	vsub.f32	s15, s14, s15
 8016856:	eef5 7a40 	vcmp.f32	s15, #0.0
 801685a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801685e:	d10b      	bne.n	8016878 <fill_path_even_odd+0xce0>
 8016860:	ed9d 7a12 	vldr	s14, [sp, #72]	@ 0x48
 8016864:	eddd 7a16 	vldr	s15, [sp, #88]	@ 0x58
 8016868:	ee77 7a67 	vsub.f32	s15, s14, s15
 801686c:	eef5 7a40 	vcmp.f32	s15, #0.0
 8016870:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016874:	f43f add2 	beq.w	801641c <fill_path_even_odd+0x884>
 8016878:	2301      	movs	r3, #1
 801687a:	f88d 3019 	strb.w	r3, [sp, #25]
 801687e:	e5d0      	b.n	8016422 <fill_path_even_odd+0x88a>
 8016880:	e9d3 520a 	ldrd	r5, r2, [r3, #40]	@ 0x28
 8016884:	2d00      	cmp	r5, #0
 8016886:	bf18      	it	ne
 8016888:	f04f 65f0 	movne.w	r5, #125829120	@ 0x7800000
 801688c:	4b2f      	ldr	r3, [pc, #188]	@ (801694c <fill_path_even_odd+0xdb4>)
 801688e:	4015      	ands	r5, r2
 8016890:	781b      	ldrb	r3, [r3, #0]
 8016892:	2b01      	cmp	r3, #1
 8016894:	d104      	bne.n	80168a0 <fill_path_even_odd+0xd08>
 8016896:	4b2d      	ldr	r3, [pc, #180]	@ (801694c <fill_path_even_odd+0xdb4>)
 8016898:	685b      	ldr	r3, [r3, #4]
 801689a:	f003 4340 	and.w	r3, r3, #3221225472	@ 0xc0000000
 801689e:	431d      	orrs	r5, r3
 80168a0:	2005      	movs	r0, #5
 80168a2:	f007 fb7f 	bl	801dfa4 <nema_cl_get_space>
 80168a6:	2800      	cmp	r0, #0
 80168a8:	f43f af52 	beq.w	8016750 <fill_path_even_odd+0xbb8>
 80168ac:	f44f 7c48 	mov.w	ip, #800	@ 0x320
 80168b0:	f44f 7149 	mov.w	r1, #804	@ 0x324
 80168b4:	f44f 724c 	mov.w	r2, #816	@ 0x330
 80168b8:	f44f 734d 	mov.w	r3, #820	@ 0x334
 80168bc:	f045 050a 	orr.w	r5, r5, #10
 80168c0:	6245      	str	r5, [r0, #36]	@ 0x24
 80168c2:	4d23      	ldr	r5, [pc, #140]	@ (8016950 <fill_path_even_odd+0xdb8>)
 80168c4:	edc0 9a01 	vstr	s19, [r0, #4]
 80168c8:	ed80 aa03 	vstr	s20, [r0, #12]
 80168cc:	ed80 8a05 	vstr	s16, [r0, #20]
 80168d0:	edc0 8a07 	vstr	s17, [r0, #28]
 80168d4:	6205      	str	r5, [r0, #32]
 80168d6:	f8c0 c000 	str.w	ip, [r0]
 80168da:	6081      	str	r1, [r0, #8]
 80168dc:	6102      	str	r2, [r0, #16]
 80168de:	6183      	str	r3, [r0, #24]
 80168e0:	e736      	b.n	8016750 <fill_path_even_odd+0xbb8>
 80168e2:	e9d3 240a 	ldrd	r2, r4, [r3, #40]	@ 0x28
 80168e6:	2a00      	cmp	r2, #0
 80168e8:	bf18      	it	ne
 80168ea:	f04f 62f0 	movne.w	r2, #125829120	@ 0x7800000
 80168ee:	4b17      	ldr	r3, [pc, #92]	@ (801694c <fill_path_even_odd+0xdb4>)
 80168f0:	4014      	ands	r4, r2
 80168f2:	781b      	ldrb	r3, [r3, #0]
 80168f4:	2b01      	cmp	r3, #1
 80168f6:	d01f      	beq.n	8016938 <fill_path_even_odd+0xda0>
 80168f8:	2005      	movs	r0, #5
 80168fa:	f007 fb53 	bl	801dfa4 <nema_cl_get_space>
 80168fe:	2800      	cmp	r0, #0
 8016900:	f43f ad8c 	beq.w	801641c <fill_path_even_odd+0x884>
 8016904:	f44f 7748 	mov.w	r7, #800	@ 0x320
 8016908:	f44f 7549 	mov.w	r5, #804	@ 0x324
 801690c:	f44f 714c 	mov.w	r1, #816	@ 0x330
 8016910:	f44f 724d 	mov.w	r2, #820	@ 0x334
 8016914:	4b0e      	ldr	r3, [pc, #56]	@ (8016950 <fill_path_even_odd+0xdb8>)
 8016916:	f044 040a 	orr.w	r4, r4, #10
 801691a:	6244      	str	r4, [r0, #36]	@ 0x24
 801691c:	edc0 9a01 	vstr	s19, [r0, #4]
 8016920:	ed80 aa03 	vstr	s20, [r0, #12]
 8016924:	ed80 8a05 	vstr	s16, [r0, #20]
 8016928:	edc0 8a07 	vstr	s17, [r0, #28]
 801692c:	6007      	str	r7, [r0, #0]
 801692e:	6085      	str	r5, [r0, #8]
 8016930:	6101      	str	r1, [r0, #16]
 8016932:	6182      	str	r2, [r0, #24]
 8016934:	6203      	str	r3, [r0, #32]
 8016936:	e571      	b.n	801641c <fill_path_even_odd+0x884>
 8016938:	4b04      	ldr	r3, [pc, #16]	@ (801694c <fill_path_even_odd+0xdb4>)
 801693a:	685b      	ldr	r3, [r3, #4]
 801693c:	f003 4340 	and.w	r3, r3, #3221225472	@ 0xc0000000
 8016940:	431c      	orrs	r4, r3
 8016942:	e7d9      	b.n	80168f8 <fill_path_even_odd+0xd60>
 8016944:	20083154 	.word	0x20083154
 8016948:	20083158 	.word	0x20083158
 801694c:	20000064 	.word	0x20000064
 8016950:	ff000100 	.word	0xff000100

08016954 <draw_with_stencil>:
 8016954:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016958:	ed2d 8b10 	vpush	{d8-d15}
 801695c:	f8df 9380 	ldr.w	r9, [pc, #896]	@ 8016ce0 <draw_with_stencil+0x38c>
 8016960:	4604      	mov	r4, r0
 8016962:	f8d9 0000 	ldr.w	r0, [r9]
 8016966:	b0ad      	sub	sp, #180	@ 0xb4
 8016968:	6883      	ldr	r3, [r0, #8]
 801696a:	9104      	str	r1, [sp, #16]
 801696c:	2b00      	cmp	r3, #0
 801696e:	f000 87cf 	beq.w	8017910 <draw_with_stencil+0xfbc>
 8016972:	e9d0 2304 	ldrd	r2, r3, [r0, #16]
 8016976:	f04f 0800 	mov.w	r8, #0
 801697a:	2508      	movs	r5, #8
 801697c:	4fd6      	ldr	r7, [pc, #856]	@ (8016cd8 <draw_with_stencil+0x384>)
 801697e:	68c1      	ldr	r1, [r0, #12]
 8016980:	e9cd 2801 	strd	r2, r8, [sp, #4]
 8016984:	2003      	movs	r0, #3
 8016986:	9500      	str	r5, [sp, #0]
 8016988:	f7fa fa2c 	bl	8010de4 <nema_bind_tex>
 801698c:	683a      	ldr	r2, [r7, #0]
 801698e:	f8d9 3000 	ldr.w	r3, [r9]
 8016992:	7f12      	ldrb	r2, [r2, #28]
 8016994:	4628      	mov	r0, r5
 8016996:	4542      	cmp	r2, r8
 8016998:	691a      	ldr	r2, [r3, #16]
 801699a:	695e      	ldr	r6, [r3, #20]
 801699c:	bf0c      	ite	eq
 801699e:	46c2      	moveq	sl, r8
 80169a0:	f04f 3a80 	movne.w	sl, #2155905152	@ 0x80808080
 80169a4:	9205      	str	r2, [sp, #20]
 80169a6:	f007 fafd 	bl	801dfa4 <nema_cl_get_space>
 80169aa:	4603      	mov	r3, r0
 80169ac:	2800      	cmp	r0, #0
 80169ae:	f000 85ba 	beq.w	8017526 <draw_with_stencil+0xbd2>
 80169b2:	9a05      	ldr	r2, [sp, #20]
 80169b4:	0436      	lsls	r6, r6, #16
 80169b6:	3203      	adds	r2, #3
 80169b8:	0892      	lsrs	r2, r2, #2
 80169ba:	f8c0 a024 	str.w	sl, [r0, #36]	@ 0x24
 80169be:	f8c0 802c 	str.w	r8, [r0, #44]	@ 0x2c
 80169c2:	ea4f 0a82 	mov.w	sl, r2, lsl #2
 80169c6:	4640      	mov	r0, r8
 80169c8:	fa1f f882 	uxth.w	r8, r2
 80169cc:	4332      	orrs	r2, r6
 80169ce:	60da      	str	r2, [r3, #12]
 80169d0:	2501      	movs	r5, #1
 80169d2:	f44f 72e8 	mov.w	r2, #464	@ 0x1d0
 80169d6:	e9c3 2504 	strd	r2, r5, [r3, #16]
 80169da:	f44f 728e 	mov.w	r2, #284	@ 0x11c
 80169de:	619a      	str	r2, [r3, #24]
 80169e0:	f44f 7296 	mov.w	r2, #300	@ 0x12c
 80169e4:	621a      	str	r2, [r3, #32]
 80169e6:	f44f 7288 	mov.w	r2, #272	@ 0x110
 80169ea:	629a      	str	r2, [r3, #40]	@ 0x28
 80169ec:	f44f 728a 	mov.w	r2, #276	@ 0x114
 80169f0:	f04f 0e34 	mov.w	lr, #52	@ 0x34
 80169f4:	f04f 0c38 	mov.w	ip, #56	@ 0x38
 80169f8:	f04f 4110 	mov.w	r1, #2415919104	@ 0x90000000
 80169fc:	f44f 7b8c 	mov.w	fp, #280	@ 0x118
 8016a00:	631a      	str	r2, [r3, #48]	@ 0x30
 8016a02:	fa1f fa8a 	uxth.w	sl, sl
 8016a06:	4ab5      	ldr	r2, [pc, #724]	@ (8016cdc <draw_with_stencil+0x388>)
 8016a08:	ea48 0806 	orr.w	r8, r8, r6
 8016a0c:	f04a 7a80 	orr.w	sl, sl, #16777216	@ 0x1000000
 8016a10:	f8c3 8034 	str.w	r8, [r3, #52]	@ 0x34
 8016a14:	f8c3 a004 	str.w	sl, [r3, #4]
 8016a18:	f8c3 e000 	str.w	lr, [r3]
 8016a1c:	f8c3 c008 	str.w	ip, [r3, #8]
 8016a20:	f8c3 b038 	str.w	fp, [r3, #56]	@ 0x38
 8016a24:	63d9      	str	r1, [r3, #60]	@ 0x3c
 8016a26:	61da      	str	r2, [r3, #28]
 8016a28:	f7fb fc6a 	bl	8012300 <nema_enable_aa_flags>
 8016a2c:	f8d9 3000 	ldr.w	r3, [r9]
 8016a30:	4680      	mov	r8, r0
 8016a32:	edd3 7a06 	vldr	s15, [r3, #24]
 8016a36:	edcd 7a1c 	vstr	s15, [sp, #112]	@ 0x70
 8016a3a:	edd3 6a07 	vldr	s13, [r3, #28]
 8016a3e:	edcd 6a1d 	vstr	s13, [sp, #116]	@ 0x74
 8016a42:	ed93 6a08 	vldr	s12, [r3, #32]
 8016a46:	ed8d 6a1e 	vstr	s12, [sp, #120]	@ 0x78
 8016a4a:	ed93 7a09 	vldr	s14, [r3, #36]	@ 0x24
 8016a4e:	ed8d 7a1f 	vstr	s14, [sp, #124]	@ 0x7c
 8016a52:	ed93 5a0a 	vldr	s10, [r3, #40]	@ 0x28
 8016a56:	ed8d 5a20 	vstr	s10, [sp, #128]	@ 0x80
 8016a5a:	ed93 4a0b 	vldr	s8, [r3, #44]	@ 0x2c
 8016a5e:	ed8d 4a21 	vstr	s8, [sp, #132]	@ 0x84
 8016a62:	edd3 5a0c 	vldr	s11, [r3, #48]	@ 0x30
 8016a66:	eef4 7ac6 	vcmpe.f32	s15, s12
 8016a6a:	edcd 5a22 	vstr	s11, [sp, #136]	@ 0x88
 8016a6e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016a72:	edd3 4a0d 	vldr	s9, [r3, #52]	@ 0x34
 8016a76:	edcd 4a23 	vstr	s9, [sp, #140]	@ 0x8c
 8016a7a:	dd7a      	ble.n	8016b72 <draw_with_stencil+0x21e>
 8016a7c:	aa1e      	add	r2, sp, #120	@ 0x78
 8016a7e:	ed92 7a00 	vldr	s14, [r2]
 8016a82:	eeb4 5ac7 	vcmpe.f32	s10, s14
 8016a86:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016a8a:	d432      	bmi.n	8016af2 <draw_with_stencil+0x19e>
 8016a8c:	ee77 7a45 	vsub.f32	s15, s14, s10
 8016a90:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8016a94:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016a98:	f100 85f9 	bmi.w	801768e <draw_with_stencil+0xd3a>
 8016a9c:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 8016aa0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016aa4:	f100 85d4 	bmi.w	8017650 <draw_with_stencil+0xcfc>
 8016aa8:	eeb5 5ac0 	vcmpe.f32	s10, #0.0
 8016aac:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016ab0:	eeb0 6a47 	vmov.f32	s12, s14
 8016ab4:	f100 85d4 	bmi.w	8017660 <draw_with_stencil+0xd0c>
 8016ab8:	eeb4 5ac6 	vcmpe.f32	s10, s12
 8016abc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016ac0:	f340 85d6 	ble.w	8017670 <draw_with_stencil+0xd1c>
 8016ac4:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 8016ac8:	ed9f 6a86 	vldr	s12, [pc, #536]	@ 8016ce4 <draw_with_stencil+0x390>
 8016acc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016ad0:	bf54      	ite	pl
 8016ad2:	ee27 7a06 	vmulpl.f32	s14, s14, s12
 8016ad6:	ee27 7a46 	vnmulmi.f32	s14, s14, s12
 8016ada:	eef4 7ac7 	vcmpe.f32	s15, s14
 8016ade:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016ae2:	d808      	bhi.n	8016af6 <draw_with_stencil+0x1a2>
 8016ae4:	edd2 7a01 	vldr	s15, [r2, #4]
 8016ae8:	eeb4 4ae7 	vcmpe.f32	s8, s15
 8016aec:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016af0:	d501      	bpl.n	8016af6 <draw_with_stencil+0x1a2>
 8016af2:	2502      	movs	r5, #2
 8016af4:	aa20      	add	r2, sp, #128	@ 0x80
 8016af6:	edd2 7a00 	vldr	s15, [r2]
 8016afa:	eef4 5ae7 	vcmpe.f32	s11, s15
 8016afe:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016b02:	d46a      	bmi.n	8016bda <draw_with_stencil+0x286>
 8016b04:	ee37 7ae5 	vsub.f32	s14, s15, s11
 8016b08:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 8016b0c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016b10:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8016b14:	bf48      	it	mi
 8016b16:	eeb1 7a47 	vnegmi.f32	s14, s14
 8016b1a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016b1e:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 8016b22:	bf4c      	ite	mi
 8016b24:	eeb1 6a67 	vnegmi.f32	s12, s15
 8016b28:	eeb0 6a67 	vmovpl.f32	s12, s15
 8016b2c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016b30:	f100 8553 	bmi.w	80175da <draw_with_stencil+0xc86>
 8016b34:	eef4 5ac6 	vcmpe.f32	s11, s12
 8016b38:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016b3c:	f340 8555 	ble.w	80175ea <draw_with_stencil+0xc96>
 8016b40:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8016b44:	ed9f 6a67 	vldr	s12, [pc, #412]	@ 8016ce4 <draw_with_stencil+0x390>
 8016b48:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016b4c:	bf4c      	ite	mi
 8016b4e:	ee67 7ac6 	vnmulmi.f32	s15, s15, s12
 8016b52:	ee67 7a86 	vmulpl.f32	s15, s15, s12
 8016b56:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8016b5a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016b5e:	d83d      	bhi.n	8016bdc <draw_with_stencil+0x288>
 8016b60:	edd2 7a01 	vldr	s15, [r2, #4]
 8016b64:	eef4 4a67 	vcmp.f32	s9, s15
 8016b68:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016b6c:	bf48      	it	mi
 8016b6e:	2503      	movmi	r5, #3
 8016b70:	e034      	b.n	8016bdc <draw_with_stencil+0x288>
 8016b72:	ee77 3ac6 	vsub.f32	s7, s15, s12
 8016b76:	eef5 3ac0 	vcmpe.f32	s7, #0.0
 8016b7a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016b7e:	f100 857d 	bmi.w	801767c <draw_with_stencil+0xd28>
 8016b82:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8016b86:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016b8a:	f100 8589 	bmi.w	80176a0 <draw_with_stencil+0xd4c>
 8016b8e:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
 8016b92:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016b96:	eeb0 3a67 	vmov.f32	s6, s15
 8016b9a:	f100 8589 	bmi.w	80176b0 <draw_with_stencil+0xd5c>
 8016b9e:	eeb4 6ac3 	vcmpe.f32	s12, s6
 8016ba2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016ba6:	f340 858b 	ble.w	80176c0 <draw_with_stencil+0xd6c>
 8016baa:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8016bae:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016bb2:	ed9f 6a4c 	vldr	s12, [pc, #304]	@ 8016ce4 <draw_with_stencil+0x390>
 8016bb6:	f101 8089 	bmi.w	8017ccc <draw_with_stencil+0x1378>
 8016bba:	ee66 7a27 	vmul.f32	s15, s12, s15
 8016bbe:	eef4 3ae7 	vcmpe.f32	s7, s15
 8016bc2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016bc6:	f200 865b 	bhi.w	8017880 <draw_with_stencil+0xf2c>
 8016bca:	eef4 6ac7 	vcmpe.f32	s13, s14
 8016bce:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016bd2:	f340 8655 	ble.w	8017880 <draw_with_stencil+0xf2c>
 8016bd6:	2501      	movs	r5, #1
 8016bd8:	e750      	b.n	8016a7c <draw_with_stencil+0x128>
 8016bda:	2503      	movs	r5, #3
 8016bdc:	1cea      	adds	r2, r5, #3
 8016bde:	1c69      	adds	r1, r5, #1
 8016be0:	a82c      	add	r0, sp, #176	@ 0xb0
 8016be2:	f002 0203 	and.w	r2, r2, #3
 8016be6:	f001 0103 	and.w	r1, r1, #3
 8016bea:	eb00 02c2 	add.w	r2, r0, r2, lsl #3
 8016bee:	eb00 05c5 	add.w	r5, r0, r5, lsl #3
 8016bf2:	eb00 01c1 	add.w	r1, r0, r1, lsl #3
 8016bf6:	ed55 4a10 	vldr	s9, [r5, #-64]	@ 0xffffffc0
 8016bfa:	ed15 5a0f 	vldr	s10, [r5, #-60]	@ 0xffffffc4
 8016bfe:	ed52 7a10 	vldr	s15, [r2, #-64]	@ 0xffffffc0
 8016c02:	ed51 5a0f 	vldr	s11, [r1, #-60]	@ 0xffffffc4
 8016c06:	ed11 7a10 	vldr	s14, [r1, #-64]	@ 0xffffffc0
 8016c0a:	ed12 6a0f 	vldr	s12, [r2, #-60]	@ 0xffffffc4
 8016c0e:	ee77 7ae4 	vsub.f32	s15, s15, s9
 8016c12:	ee75 5ac5 	vsub.f32	s11, s11, s10
 8016c16:	ee37 7a64 	vsub.f32	s14, s14, s9
 8016c1a:	ee36 6a45 	vsub.f32	s12, s12, s10
 8016c1e:	ee67 7aa5 	vmul.f32	s15, s15, s11
 8016c22:	ee27 7a06 	vmul.f32	s14, s14, s12
 8016c26:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8016c2a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8016c2e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016c32:	dd19      	ble.n	8016c68 <draw_with_stencil+0x314>
 8016c34:	f103 0130 	add.w	r1, r3, #48	@ 0x30
 8016c38:	aa1c      	add	r2, sp, #112	@ 0x70
 8016c3a:	c903      	ldmia	r1, {r0, r1}
 8016c3c:	e882 0003 	stmia.w	r2, {r0, r1}
 8016c40:	f103 0128 	add.w	r1, r3, #40	@ 0x28
 8016c44:	aa1e      	add	r2, sp, #120	@ 0x78
 8016c46:	c903      	ldmia	r1, {r0, r1}
 8016c48:	e882 0003 	stmia.w	r2, {r0, r1}
 8016c4c:	f103 0120 	add.w	r1, r3, #32
 8016c50:	aa20      	add	r2, sp, #128	@ 0x80
 8016c52:	c903      	ldmia	r1, {r0, r1}
 8016c54:	e882 0003 	stmia.w	r2, {r0, r1}
 8016c58:	3318      	adds	r3, #24
 8016c5a:	aa22      	add	r2, sp, #136	@ 0x88
 8016c5c:	e893 0003 	ldmia.w	r3, {r0, r1}
 8016c60:	e882 0003 	stmia.w	r2, {r0, r1}
 8016c64:	eddd 6a1d 	vldr	s13, [sp, #116]	@ 0x74
 8016c68:	eddd 7a1f 	vldr	s15, [sp, #124]	@ 0x7c
 8016c6c:	eef4 7ae6 	vcmpe.f32	s15, s13
 8016c70:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016c74:	d438      	bmi.n	8016ce8 <draw_with_stencil+0x394>
 8016c76:	ee36 6ae7 	vsub.f32	s12, s13, s15
 8016c7a:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
 8016c7e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016c82:	f100 84dc 	bmi.w	801763e <draw_with_stencil+0xcea>
 8016c86:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 8016c8a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016c8e:	f100 84c0 	bmi.w	8017612 <draw_with_stencil+0xcbe>
 8016c92:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8016c96:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016c9a:	eef0 5a66 	vmov.f32	s11, s13
 8016c9e:	f100 84c0 	bmi.w	8017622 <draw_with_stencil+0xcce>
 8016ca2:	eef4 7ae5 	vcmpe.f32	s15, s11
 8016ca6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016caa:	f300 86ae 	bgt.w	8017a0a <draw_with_stencil+0x10b6>
 8016cae:	ed9f 7a0d 	vldr	s14, [pc, #52]	@ 8016ce4 <draw_with_stencil+0x390>
 8016cb2:	ee27 7a87 	vmul.f32	s14, s15, s14
 8016cb6:	eeb4 7ac6 	vcmpe.f32	s14, s12
 8016cba:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016cbe:	db08      	blt.n	8016cd2 <draw_with_stencil+0x37e>
 8016cc0:	ed9d 6a1c 	vldr	s12, [sp, #112]	@ 0x70
 8016cc4:	ed9d 7a1e 	vldr	s14, [sp, #120]	@ 0x78
 8016cc8:	eeb4 6ac7 	vcmpe.f32	s12, s14
 8016ccc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016cd0:	d40a      	bmi.n	8016ce8 <draw_with_stencil+0x394>
 8016cd2:	2300      	movs	r3, #0
 8016cd4:	ad1c      	add	r5, sp, #112	@ 0x70
 8016cd6:	e009      	b.n	8016cec <draw_with_stencil+0x398>
 8016cd8:	20083148 	.word	0x20083148
 8016cdc:	1c1f0015 	.word	0x1c1f0015
 8016ce0:	200831f0 	.word	0x200831f0
 8016ce4:	3727c5ac 	.word	0x3727c5ac
 8016ce8:	2301      	movs	r3, #1
 8016cea:	ad1e      	add	r5, sp, #120	@ 0x78
 8016cec:	ed95 6a01 	vldr	s12, [r5, #4]
 8016cf0:	ed9d 7a21 	vldr	s14, [sp, #132]	@ 0x84
 8016cf4:	eeb4 6ac7 	vcmpe.f32	s12, s14
 8016cf8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016cfc:	dc2d      	bgt.n	8016d5a <draw_with_stencil+0x406>
 8016cfe:	ee76 5a47 	vsub.f32	s11, s12, s14
 8016d02:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 8016d06:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016d0a:	f100 8432 	bmi.w	8017572 <draw_with_stencil+0xc1e>
 8016d0e:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
 8016d12:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016d16:	f100 8567 	bmi.w	80177e8 <draw_with_stencil+0xe94>
 8016d1a:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 8016d1e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016d22:	eeb0 5a46 	vmov.f32	s10, s12
 8016d26:	f100 8567 	bmi.w	80177f8 <draw_with_stencil+0xea4>
 8016d2a:	eeb4 7ac5 	vcmpe.f32	s14, s10
 8016d2e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016d32:	f300 8650 	bgt.w	80179d6 <draw_with_stencil+0x1082>
 8016d36:	ed1f 6a15 	vldr	s12, [pc, #-84]	@ 8016ce4 <draw_with_stencil+0x390>
 8016d3a:	ee27 6a06 	vmul.f32	s12, s14, s12
 8016d3e:	eeb4 6ae5 	vcmpe.f32	s12, s11
 8016d42:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016d46:	db0a      	blt.n	8016d5e <draw_with_stencil+0x40a>
 8016d48:	edd5 5a00 	vldr	s11, [r5]
 8016d4c:	ed9d 6a20 	vldr	s12, [sp, #128]	@ 0x80
 8016d50:	eef4 5ac6 	vcmpe.f32	s11, s12
 8016d54:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016d58:	d501      	bpl.n	8016d5e <draw_with_stencil+0x40a>
 8016d5a:	2302      	movs	r3, #2
 8016d5c:	ad20      	add	r5, sp, #128	@ 0x80
 8016d5e:	ed95 6a01 	vldr	s12, [r5, #4]
 8016d62:	ed9d 8a23 	vldr	s16, [sp, #140]	@ 0x8c
 8016d66:	eeb4 8ac6 	vcmpe.f32	s16, s12
 8016d6a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016d6e:	d42f      	bmi.n	8016dd0 <draw_with_stencil+0x47c>
 8016d70:	ee76 5a48 	vsub.f32	s11, s12, s16
 8016d74:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 8016d78:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016d7c:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
 8016d80:	bf48      	it	mi
 8016d82:	eef1 5a65 	vnegmi.f32	s11, s11
 8016d86:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016d8a:	eeb5 8ac0 	vcmpe.f32	s16, #0.0
 8016d8e:	bf4c      	ite	mi
 8016d90:	eeb1 5a46 	vnegmi.f32	s10, s12
 8016d94:	eeb0 5a46 	vmovpl.f32	s10, s12
 8016d98:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016d9c:	f100 842b 	bmi.w	80175f6 <draw_with_stencil+0xca2>
 8016da0:	eeb4 8ac5 	vcmpe.f32	s16, s10
 8016da4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016da8:	f300 8656 	bgt.w	8017a58 <draw_with_stencil+0x1104>
 8016dac:	ed1f 6a33 	vldr	s12, [pc, #-204]	@ 8016ce4 <draw_with_stencil+0x390>
 8016db0:	ee28 6a06 	vmul.f32	s12, s16, s12
 8016db4:	eef4 5ac6 	vcmpe.f32	s11, s12
 8016db8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016dbc:	d80a      	bhi.n	8016dd4 <draw_with_stencil+0x480>
 8016dbe:	edd5 5a00 	vldr	s11, [r5]
 8016dc2:	ed9d 6a22 	vldr	s12, [sp, #136]	@ 0x88
 8016dc6:	eef4 5ac6 	vcmpe.f32	s11, s12
 8016dca:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016dce:	d501      	bpl.n	8016dd4 <draw_with_stencil+0x480>
 8016dd0:	2303      	movs	r3, #3
 8016dd2:	ad22      	add	r5, sp, #136	@ 0x88
 8016dd4:	eef4 7ae6 	vcmpe.f32	s15, s13
 8016dd8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016ddc:	f100 816c 	bmi.w	80170b8 <draw_with_stencil+0x764>
 8016de0:	ee76 5ae7 	vsub.f32	s11, s13, s15
 8016de4:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 8016de8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016dec:	f100 853f 	bmi.w	801786e <draw_with_stencil+0xf1a>
 8016df0:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 8016df4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016df8:	f100 8523 	bmi.w	8017842 <draw_with_stencil+0xeee>
 8016dfc:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8016e00:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016e04:	eeb0 5a66 	vmov.f32	s10, s13
 8016e08:	f100 8523 	bmi.w	8017852 <draw_with_stencil+0xefe>
 8016e0c:	eeb4 5ae7 	vcmpe.f32	s10, s15
 8016e10:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016e14:	f100 8606 	bmi.w	8017a24 <draw_with_stencil+0x10d0>
 8016e18:	ed1f 6a4e 	vldr	s12, [pc, #-312]	@ 8016ce4 <draw_with_stencil+0x390>
 8016e1c:	ee27 6a86 	vmul.f32	s12, s15, s12
 8016e20:	eef4 5ac6 	vcmpe.f32	s11, s12
 8016e24:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016e28:	d809      	bhi.n	8016e3e <draw_with_stencil+0x4ea>
 8016e2a:	eddd 5a1e 	vldr	s11, [sp, #120]	@ 0x78
 8016e2e:	ed9d 6a1c 	vldr	s12, [sp, #112]	@ 0x70
 8016e32:	eef4 5ac6 	vcmpe.f32	s11, s12
 8016e36:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016e3a:	f100 813d 	bmi.w	80170b8 <draw_with_stencil+0x764>
 8016e3e:	eef0 8a66 	vmov.f32	s17, s13
 8016e42:	eef4 8ac7 	vcmpe.f32	s17, s14
 8016e46:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016e4a:	f10d 0e70 	add.w	lr, sp, #112	@ 0x70
 8016e4e:	f340 813d 	ble.w	80170cc <draw_with_stencil+0x778>
 8016e52:	eef0 8a47 	vmov.f32	s17, s14
 8016e56:	f10d 0e80 	add.w	lr, sp, #128	@ 0x80
 8016e5a:	eeb4 8ae8 	vcmpe.f32	s16, s17
 8016e5e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016e62:	d42f      	bmi.n	8016ec4 <draw_with_stencil+0x570>
 8016e64:	ee78 5ac8 	vsub.f32	s11, s17, s16
 8016e68:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 8016e6c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016e70:	eef5 8ac0 	vcmpe.f32	s17, #0.0
 8016e74:	bf48      	it	mi
 8016e76:	eef1 5a65 	vnegmi.f32	s11, s11
 8016e7a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016e7e:	eeb5 8ac0 	vcmpe.f32	s16, #0.0
 8016e82:	bf4c      	ite	mi
 8016e84:	eeb1 5a68 	vnegmi.f32	s10, s17
 8016e88:	eeb0 5a68 	vmovpl.f32	s10, s17
 8016e8c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016e90:	f100 838d 	bmi.w	80175ae <draw_with_stencil+0xc5a>
 8016e94:	eeb4 8ac5 	vcmpe.f32	s16, s10
 8016e98:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016e9c:	f300 85cf 	bgt.w	8017a3e <draw_with_stencil+0x10ea>
 8016ea0:	ed1f 6a70 	vldr	s12, [pc, #-448]	@ 8016ce4 <draw_with_stencil+0x390>
 8016ea4:	ee28 6a06 	vmul.f32	s12, s16, s12
 8016ea8:	eef4 5ac6 	vcmpe.f32	s11, s12
 8016eac:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016eb0:	d80c      	bhi.n	8016ecc <draw_with_stencil+0x578>
 8016eb2:	edde 5a00 	vldr	s11, [lr]
 8016eb6:	ed9d 6a22 	vldr	s12, [sp, #136]	@ 0x88
 8016eba:	eef4 5ac6 	vcmpe.f32	s11, s12
 8016ebe:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016ec2:	dd03      	ble.n	8016ecc <draw_with_stencil+0x578>
 8016ec4:	eef0 8a48 	vmov.f32	s17, s16
 8016ec8:	f10d 0e88 	add.w	lr, sp, #136	@ 0x88
 8016ecc:	eef4 7ae6 	vcmpe.f32	s15, s13
 8016ed0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016ed4:	f300 812b 	bgt.w	801712e <draw_with_stencil+0x7da>
 8016ed8:	ee76 5ae7 	vsub.f32	s11, s13, s15
 8016edc:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 8016ee0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016ee4:	f100 8477 	bmi.w	80177d6 <draw_with_stencil+0xe82>
 8016ee8:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 8016eec:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016ef0:	f100 845b 	bmi.w	80177aa <draw_with_stencil+0xe56>
 8016ef4:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8016ef8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016efc:	eeb0 5a66 	vmov.f32	s10, s13
 8016f00:	f100 845b 	bmi.w	80177ba <draw_with_stencil+0xe66>
 8016f04:	eef4 7ac5 	vcmpe.f32	s15, s10
 8016f08:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016f0c:	f300 8522 	bgt.w	8017954 <draw_with_stencil+0x1000>
 8016f10:	ed1f 6a8c 	vldr	s12, [pc, #-560]	@ 8016ce4 <draw_with_stencil+0x390>
 8016f14:	ee27 6a86 	vmul.f32	s12, s15, s12
 8016f18:	eeb4 6ae5 	vcmpe.f32	s12, s11
 8016f1c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016f20:	db09      	blt.n	8016f36 <draw_with_stencil+0x5e2>
 8016f22:	eddd 5a1e 	vldr	s11, [sp, #120]	@ 0x78
 8016f26:	ed9d 6a1c 	vldr	s12, [sp, #112]	@ 0x70
 8016f2a:	eef4 5ac6 	vcmpe.f32	s11, s12
 8016f2e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016f32:	f300 80fc 	bgt.w	801712e <draw_with_stencil+0x7da>
 8016f36:	a91c      	add	r1, sp, #112	@ 0x70
 8016f38:	ed91 6a01 	vldr	s12, [r1, #4]
 8016f3c:	eeb4 7ac6 	vcmpe.f32	s14, s12
 8016f40:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016f44:	f04f 0000 	mov.w	r0, #0
 8016f48:	f340 80fc 	ble.w	8017144 <draw_with_stencil+0x7f0>
 8016f4c:	2002      	movs	r0, #2
 8016f4e:	a920      	add	r1, sp, #128	@ 0x80
 8016f50:	ed91 6a01 	vldr	s12, [r1, #4]
 8016f54:	eeb4 6ac8 	vcmpe.f32	s12, s16
 8016f58:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016f5c:	d42f      	bmi.n	8016fbe <draw_with_stencil+0x66a>
 8016f5e:	ee76 5a48 	vsub.f32	s11, s12, s16
 8016f62:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 8016f66:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016f6a:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
 8016f6e:	bf48      	it	mi
 8016f70:	eef1 5a65 	vnegmi.f32	s11, s11
 8016f74:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016f78:	eeb5 8ac0 	vcmpe.f32	s16, #0.0
 8016f7c:	bf4c      	ite	mi
 8016f7e:	eeb1 5a46 	vnegmi.f32	s10, s12
 8016f82:	eeb0 5a46 	vmovpl.f32	s10, s12
 8016f86:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016f8a:	f100 8443 	bmi.w	8017814 <draw_with_stencil+0xec0>
 8016f8e:	eeb4 8ac5 	vcmpe.f32	s16, s10
 8016f92:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016f96:	f300 8504 	bgt.w	80179a2 <draw_with_stencil+0x104e>
 8016f9a:	ed1f 6aae 	vldr	s12, [pc, #-696]	@ 8016ce4 <draw_with_stencil+0x390>
 8016f9e:	ee28 6a06 	vmul.f32	s12, s16, s12
 8016fa2:	eef4 5ac6 	vcmpe.f32	s11, s12
 8016fa6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016faa:	d80a      	bhi.n	8016fc2 <draw_with_stencil+0x66e>
 8016fac:	edd1 5a00 	vldr	s11, [r1]
 8016fb0:	ed9d 6a22 	vldr	s12, [sp, #136]	@ 0x88
 8016fb4:	eef4 5ac6 	vcmpe.f32	s11, s12
 8016fb8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016fbc:	d501      	bpl.n	8016fc2 <draw_with_stencil+0x66e>
 8016fbe:	2003      	movs	r0, #3
 8016fc0:	a922      	add	r1, sp, #136	@ 0x88
 8016fc2:	eef4 7ae6 	vcmpe.f32	s15, s13
 8016fc6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016fca:	f300 80ef 	bgt.w	80171ac <draw_with_stencil+0x858>
 8016fce:	ee76 5ae7 	vsub.f32	s11, s13, s15
 8016fd2:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 8016fd6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016fda:	f100 83a6 	bmi.w	801772a <draw_with_stencil+0xdd6>
 8016fde:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 8016fe2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016fe6:	f100 838b 	bmi.w	8017700 <draw_with_stencil+0xdac>
 8016fea:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8016fee:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016ff2:	eeb0 5a66 	vmov.f32	s10, s13
 8016ff6:	f100 838b 	bmi.w	8017710 <draw_with_stencil+0xdbc>
 8016ffa:	eef4 7ac5 	vcmpe.f32	s15, s10
 8016ffe:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017002:	f300 84db 	bgt.w	80179bc <draw_with_stencil+0x1068>
 8017006:	ed1f 6ac9 	vldr	s12, [pc, #-804]	@ 8016ce4 <draw_with_stencil+0x390>
 801700a:	ee27 6a86 	vmul.f32	s12, s15, s12
 801700e:	eeb4 6ae5 	vcmpe.f32	s12, s11
 8017012:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017016:	db09      	blt.n	801702c <draw_with_stencil+0x6d8>
 8017018:	eddd 5a1e 	vldr	s11, [sp, #120]	@ 0x78
 801701c:	ed9d 6a1c 	vldr	s12, [sp, #112]	@ 0x70
 8017020:	eef4 5ac6 	vcmpe.f32	s11, s12
 8017024:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017028:	f100 80c0 	bmi.w	80171ac <draw_with_stencil+0x858>
 801702c:	eef0 7a66 	vmov.f32	s15, s13
 8017030:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8017034:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017038:	f10d 0c70 	add.w	ip, sp, #112	@ 0x70
 801703c:	f340 80be 	ble.w	80171bc <draw_with_stencil+0x868>
 8017040:	eeb4 8ac7 	vcmpe.f32	s16, s14
 8017044:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017048:	f10d 0c80 	add.w	ip, sp, #128	@ 0x80
 801704c:	f300 80ed 	bgt.w	801722a <draw_with_stencil+0x8d6>
 8017050:	ee77 6a48 	vsub.f32	s13, s14, s16
 8017054:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 8017058:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801705c:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 8017060:	bf48      	it	mi
 8017062:	eef1 6a66 	vnegmi.f32	s13, s13
 8017066:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801706a:	eeb5 8ac0 	vcmpe.f32	s16, #0.0
 801706e:	bf4c      	ite	mi
 8017070:	eeb1 6a47 	vnegmi.f32	s12, s14
 8017074:	eeb0 6a47 	vmovpl.f32	s12, s14
 8017078:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801707c:	f100 8373 	bmi.w	8017766 <draw_with_stencil+0xe12>
 8017080:	eeb4 8ac6 	vcmpe.f32	s16, s12
 8017084:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017088:	f300 847e 	bgt.w	8017988 <draw_with_stencil+0x1034>
 801708c:	ed5f 7aeb 	vldr	s15, [pc, #-940]	@ 8016ce4 <draw_with_stencil+0x390>
 8017090:	ee68 7a27 	vmul.f32	s15, s16, s15
 8017094:	eef4 6ae7 	vcmpe.f32	s13, s15
 8017098:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801709c:	d809      	bhi.n	80170b2 <draw_with_stencil+0x75e>
 801709e:	eddc 6a00 	vldr	s13, [ip]
 80170a2:	eddd 7a22 	vldr	s15, [sp, #136]	@ 0x88
 80170a6:	eef4 6ae7 	vcmpe.f32	s13, s15
 80170aa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80170ae:	f300 80bc 	bgt.w	801722a <draw_with_stencil+0x8d6>
 80170b2:	eeb0 8a47 	vmov.f32	s16, s14
 80170b6:	e0ba      	b.n	801722e <draw_with_stencil+0x8da>
 80170b8:	eef0 8a67 	vmov.f32	s17, s15
 80170bc:	eef4 8ac7 	vcmpe.f32	s17, s14
 80170c0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80170c4:	f10d 0e78 	add.w	lr, sp, #120	@ 0x78
 80170c8:	f73f aec3 	bgt.w	8016e52 <draw_with_stencil+0x4fe>
 80170cc:	ee78 5ac7 	vsub.f32	s11, s17, s14
 80170d0:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 80170d4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80170d8:	f100 8276 	bmi.w	80175c8 <draw_with_stencil+0xc74>
 80170dc:	eef5 8ac0 	vcmpe.f32	s17, #0.0
 80170e0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80170e4:	f100 824e 	bmi.w	8017584 <draw_with_stencil+0xc30>
 80170e8:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 80170ec:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80170f0:	eeb0 5a68 	vmov.f32	s10, s17
 80170f4:	f100 824e 	bmi.w	8017594 <draw_with_stencil+0xc40>
 80170f8:	eeb4 5ac7 	vcmpe.f32	s10, s14
 80170fc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017100:	f100 8435 	bmi.w	801796e <draw_with_stencil+0x101a>
 8017104:	ed9f 6a28 	vldr	s12, [pc, #160]	@ 80171a8 <draw_with_stencil+0x854>
 8017108:	ee27 6a06 	vmul.f32	s12, s14, s12
 801710c:	eef4 5ac6 	vcmpe.f32	s11, s12
 8017110:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017114:	f63f aea1 	bhi.w	8016e5a <draw_with_stencil+0x506>
 8017118:	edde 5a00 	vldr	s11, [lr]
 801711c:	ed9d 6a20 	vldr	s12, [sp, #128]	@ 0x80
 8017120:	eef4 5ac6 	vcmpe.f32	s11, s12
 8017124:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017128:	f73f ae93 	bgt.w	8016e52 <draw_with_stencil+0x4fe>
 801712c:	e695      	b.n	8016e5a <draw_with_stencil+0x506>
 801712e:	a91e      	add	r1, sp, #120	@ 0x78
 8017130:	ed91 6a01 	vldr	s12, [r1, #4]
 8017134:	eeb4 7ac6 	vcmpe.f32	s14, s12
 8017138:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801713c:	f04f 0001 	mov.w	r0, #1
 8017140:	f73f af04 	bgt.w	8016f4c <draw_with_stencil+0x5f8>
 8017144:	ee76 5a47 	vsub.f32	s11, s12, s14
 8017148:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 801714c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017150:	f100 836e 	bmi.w	8017830 <draw_with_stencil+0xedc>
 8017154:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
 8017158:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801715c:	f100 8310 	bmi.w	8017780 <draw_with_stencil+0xe2c>
 8017160:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 8017164:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017168:	eeb0 5a46 	vmov.f32	s10, s12
 801716c:	f100 8310 	bmi.w	8017790 <draw_with_stencil+0xe3c>
 8017170:	eeb4 5ac7 	vcmpe.f32	s10, s14
 8017174:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017178:	f100 843a 	bmi.w	80179f0 <draw_with_stencil+0x109c>
 801717c:	ed9f 6a0a 	vldr	s12, [pc, #40]	@ 80171a8 <draw_with_stencil+0x854>
 8017180:	ee27 6a06 	vmul.f32	s12, s14, s12
 8017184:	eeb4 6ae5 	vcmpe.f32	s12, s11
 8017188:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801718c:	f6ff aee0 	blt.w	8016f50 <draw_with_stencil+0x5fc>
 8017190:	ed91 6a00 	vldr	s12, [r1]
 8017194:	eddd 5a20 	vldr	s11, [sp, #128]	@ 0x80
 8017198:	eef4 5ac6 	vcmpe.f32	s11, s12
 801719c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80171a0:	f73f aed4 	bgt.w	8016f4c <draw_with_stencil+0x5f8>
 80171a4:	e6d4      	b.n	8016f50 <draw_with_stencil+0x5fc>
 80171a6:	bf00      	nop
 80171a8:	3727c5ac 	.word	0x3727c5ac
 80171ac:	eeb4 7ae7 	vcmpe.f32	s14, s15
 80171b0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80171b4:	f10d 0c78 	add.w	ip, sp, #120	@ 0x78
 80171b8:	f73f af42 	bgt.w	8017040 <draw_with_stencil+0x6ec>
 80171bc:	ee37 6ac7 	vsub.f32	s12, s15, s14
 80171c0:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
 80171c4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80171c8:	f100 827e 	bmi.w	80176c8 <draw_with_stencil+0xd74>
 80171cc:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80171d0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80171d4:	f100 82b2 	bmi.w	801773c <draw_with_stencil+0xde8>
 80171d8:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 80171dc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80171e0:	eef0 5a67 	vmov.f32	s11, s15
 80171e4:	f100 82b2 	bmi.w	801774c <draw_with_stencil+0xdf8>
 80171e8:	eeb4 7ae5 	vcmpe.f32	s14, s11
 80171ec:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80171f0:	f300 843f 	bgt.w	8017a72 <draw_with_stencil+0x111e>
 80171f4:	ed5f 6a14 	vldr	s13, [pc, #-80]	@ 80171a8 <draw_with_stencil+0x854>
 80171f8:	ee67 6a26 	vmul.f32	s13, s14, s13
 80171fc:	eef4 6ac6 	vcmpe.f32	s13, s12
 8017200:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017204:	db09      	blt.n	801721a <draw_with_stencil+0x8c6>
 8017206:	eddc 6a00 	vldr	s13, [ip]
 801720a:	ed9d 6a20 	vldr	s12, [sp, #128]	@ 0x80
 801720e:	eeb4 6ae6 	vcmpe.f32	s12, s13
 8017212:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017216:	f53f af13 	bmi.w	8017040 <draw_with_stencil+0x6ec>
 801721a:	eeb0 7a67 	vmov.f32	s14, s15
 801721e:	eeb4 8ac7 	vcmpe.f32	s16, s14
 8017222:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017226:	f77f af13 	ble.w	8017050 <draw_with_stencil+0x6fc>
 801722a:	f10d 0c88 	add.w	ip, sp, #136	@ 0x88
 801722e:	1c5a      	adds	r2, r3, #1
 8017230:	f002 0203 	and.w	r2, r2, #3
 8017234:	f10d 0ab0 	add.w	sl, sp, #176	@ 0xb0
 8017238:	eb0a 02c2 	add.w	r2, sl, r2, lsl #3
 801723c:	4575      	cmp	r5, lr
 801723e:	ed52 fa10 	vldr	s31, [r2, #-64]	@ 0xffffffc0
 8017242:	ed52 da0f 	vldr	s27, [r2, #-60]	@ 0xffffffc4
 8017246:	ed9e ba00 	vldr	s22, [lr]
 801724a:	f000 8349 	beq.w	80178e0 <draw_with_stencil+0xf8c>
 801724e:	1c9a      	adds	r2, r3, #2
 8017250:	f002 0203 	and.w	r2, r2, #3
 8017254:	ab2c      	add	r3, sp, #176	@ 0xb0
 8017256:	eb03 02c2 	add.w	r2, r3, r2, lsl #3
 801725a:	eef1 7a00 	vmov.f32	s15, #16	@ 0x40800000  4.0
 801725e:	ed12 aa10 	vldr	s20, [r2, #-64]	@ 0xffffffc0
 8017262:	ed95 9a00 	vldr	s18, [r5]
 8017266:	ee3a aa67 	vsub.f32	s20, s20, s15
 801726a:	ee39 9a27 	vadd.f32	s18, s18, s15
 801726e:	eef5 7a00 	vmov.f32	s15, #80	@ 0x3e800000  0.250
 8017272:	ed12 da0f 	vldr	s26, [r2, #-60]	@ 0xffffffc4
 8017276:	ee2a aa27 	vmul.f32	s20, s20, s15
 801727a:	ee29 9a27 	vmul.f32	s18, s18, s15
 801727e:	ed95 ea01 	vldr	s28, [r5, #4]
 8017282:	1cc3      	adds	r3, r0, #3
 8017284:	f003 0303 	and.w	r3, r3, #3
 8017288:	aa2c      	add	r2, sp, #176	@ 0xb0
 801728a:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
 801728e:	4561      	cmp	r1, ip
 8017290:	ed13 ca10 	vldr	s24, [r3, #-64]	@ 0xffffffc0
 8017294:	ed53 ca0f 	vldr	s25, [r3, #-60]	@ 0xffffffc4
 8017298:	eddc ba00 	vldr	s23, [ip]
 801729c:	f000 8342 	beq.w	8017924 <draw_with_stencil+0xfd0>
 80172a0:	1c83      	adds	r3, r0, #2
 80172a2:	f003 0303 	and.w	r3, r3, #3
 80172a6:	aa2c      	add	r2, sp, #176	@ 0xb0
 80172a8:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
 80172ac:	eef1 7a00 	vmov.f32	s15, #16	@ 0x40800000  4.0
 80172b0:	ed53 aa10 	vldr	s21, [r3, #-64]	@ 0xffffffc0
 80172b4:	edd1 9a00 	vldr	s19, [r1]
 80172b8:	ee7a aae7 	vsub.f32	s21, s21, s15
 80172bc:	ee79 9aa7 	vadd.f32	s19, s19, s15
 80172c0:	eef5 7a00 	vmov.f32	s15, #80	@ 0x3e800000  0.250
 80172c4:	ed53 ea0f 	vldr	s29, [r3, #-60]	@ 0xffffffc4
 80172c8:	ee6a aaa7 	vmul.f32	s21, s21, s15
 80172cc:	ee69 9aa7 	vmul.f32	s19, s19, s15
 80172d0:	ed91 fa01 	vldr	s30, [r1, #4]
 80172d4:	2009      	movs	r0, #9
 80172d6:	f006 fe65 	bl	801dfa4 <nema_cl_get_space>
 80172da:	2800      	cmp	r0, #0
 80172dc:	d040      	beq.n	8017360 <draw_with_stencil+0xa0c>
 80172de:	eeb1 7a00 	vmov.f32	s14, #16	@ 0x40800000  4.0
 80172e2:	eef5 7a00 	vmov.f32	s15, #80	@ 0x3e800000  0.250
 80172e6:	ee7f fa87 	vadd.f32	s31, s31, s14
 80172ea:	ee3b ba47 	vsub.f32	s22, s22, s14
 80172ee:	ee6f faa7 	vmul.f32	s31, s31, s15
 80172f2:	ee2b ba27 	vmul.f32	s22, s22, s15
 80172f6:	f44f 7e4c 	mov.w	lr, #816	@ 0x330
 80172fa:	f44f 7b48 	mov.w	fp, #800	@ 0x320
 80172fe:	f44f 7a49 	mov.w	sl, #804	@ 0x324
 8017302:	f44f 7c4d 	mov.w	ip, #820	@ 0x334
 8017306:	ed80 9a01 	vstr	s18, [r0, #4]
 801730a:	ed80 ea03 	vstr	s28, [r0, #12]
 801730e:	f44f 7151 	mov.w	r1, #836	@ 0x344
 8017312:	f44f 7550 	mov.w	r5, #832	@ 0x340
 8017316:	f44f 7254 	mov.w	r2, #848	@ 0x350
 801731a:	f44f 7355 	mov.w	r3, #852	@ 0x354
 801731e:	edc0 da07 	vstr	s27, [r0, #28]
 8017322:	ed80 aa09 	vstr	s20, [r0, #36]	@ 0x24
 8017326:	ed80 da0b 	vstr	s26, [r0, #44]	@ 0x2c
 801732a:	edc0 8a0f 	vstr	s17, [r0, #60]	@ 0x3c
 801732e:	edc0 fa05 	vstr	s31, [r0, #20]
 8017332:	ed80 ba0d 	vstr	s22, [r0, #52]	@ 0x34
 8017336:	f8c0 e010 	str.w	lr, [r0, #16]
 801733a:	f8df e3b8 	ldr.w	lr, [pc, #952]	@ 80176f4 <draw_with_stencil+0xda0>
 801733e:	f8c0 b000 	str.w	fp, [r0]
 8017342:	f8c0 a008 	str.w	sl, [r0, #8]
 8017346:	f8c0 c018 	str.w	ip, [r0, #24]
 801734a:	f8de c010 	ldr.w	ip, [lr, #16]
 801734e:	6281      	str	r1, [r0, #40]	@ 0x28
 8017350:	49e2      	ldr	r1, [pc, #904]	@ (80176dc <draw_with_stencil+0xd88>)
 8017352:	6205      	str	r5, [r0, #32]
 8017354:	f04c 0505 	orr.w	r5, ip, #5
 8017358:	6445      	str	r5, [r0, #68]	@ 0x44
 801735a:	6302      	str	r2, [r0, #48]	@ 0x30
 801735c:	6383      	str	r3, [r0, #56]	@ 0x38
 801735e:	6401      	str	r1, [r0, #64]	@ 0x40
 8017360:	2009      	movs	r0, #9
 8017362:	f006 fe1f 	bl	801dfa4 <nema_cl_get_space>
 8017366:	2800      	cmp	r0, #0
 8017368:	d040      	beq.n	80173ec <draw_with_stencil+0xa98>
 801736a:	eeb1 7a00 	vmov.f32	s14, #16	@ 0x40800000  4.0
 801736e:	eef5 7a00 	vmov.f32	s15, #80	@ 0x3e800000  0.250
 8017372:	ee7b bac7 	vsub.f32	s23, s23, s14
 8017376:	ee3c ca07 	vadd.f32	s24, s24, s14
 801737a:	ee6b baa7 	vmul.f32	s23, s23, s15
 801737e:	ee2c ca27 	vmul.f32	s24, s24, s15
 8017382:	f44f 7e4c 	mov.w	lr, #816	@ 0x330
 8017386:	f44f 7b48 	mov.w	fp, #800	@ 0x320
 801738a:	f44f 7a49 	mov.w	sl, #804	@ 0x324
 801738e:	f44f 7c4d 	mov.w	ip, #820	@ 0x334
 8017392:	edc0 9a01 	vstr	s19, [r0, #4]
 8017396:	ed80 fa03 	vstr	s30, [r0, #12]
 801739a:	f44f 7151 	mov.w	r1, #836	@ 0x344
 801739e:	f44f 7550 	mov.w	r5, #832	@ 0x340
 80173a2:	f44f 7254 	mov.w	r2, #848	@ 0x350
 80173a6:	f44f 7355 	mov.w	r3, #852	@ 0x354
 80173aa:	ed80 8a07 	vstr	s16, [r0, #28]
 80173ae:	edc0 aa09 	vstr	s21, [r0, #36]	@ 0x24
 80173b2:	edc0 ea0b 	vstr	s29, [r0, #44]	@ 0x2c
 80173b6:	edc0 ca0f 	vstr	s25, [r0, #60]	@ 0x3c
 80173ba:	edc0 ba05 	vstr	s23, [r0, #20]
 80173be:	ed80 ca0d 	vstr	s24, [r0, #52]	@ 0x34
 80173c2:	f8c0 e010 	str.w	lr, [r0, #16]
 80173c6:	f8df e32c 	ldr.w	lr, [pc, #812]	@ 80176f4 <draw_with_stencil+0xda0>
 80173ca:	f8c0 b000 	str.w	fp, [r0]
 80173ce:	f8c0 a008 	str.w	sl, [r0, #8]
 80173d2:	f8c0 c018 	str.w	ip, [r0, #24]
 80173d6:	f8de c010 	ldr.w	ip, [lr, #16]
 80173da:	6281      	str	r1, [r0, #40]	@ 0x28
 80173dc:	49bf      	ldr	r1, [pc, #764]	@ (80176dc <draw_with_stencil+0xd88>)
 80173de:	6205      	str	r5, [r0, #32]
 80173e0:	f04c 0505 	orr.w	r5, ip, #5
 80173e4:	6445      	str	r5, [r0, #68]	@ 0x44
 80173e6:	6302      	str	r2, [r0, #48]	@ 0x30
 80173e8:	6383      	str	r3, [r0, #56]	@ 0x38
 80173ea:	6401      	str	r1, [r0, #64]	@ 0x40
 80173ec:	4640      	mov	r0, r8
 80173ee:	f7fa ff87 	bl	8012300 <nema_enable_aa_flags>
 80173f2:	f7f9 fe13 	bl	801101c <nema_set_clip_pop>
 80173f6:	9d05      	ldr	r5, [sp, #20]
 80173f8:	2034      	movs	r0, #52	@ 0x34
 80173fa:	b2a9      	uxth	r1, r5
 80173fc:	f041 6110 	orr.w	r1, r1, #150994944	@ 0x9000000
 8017400:	f006 fe2c 	bl	801e05c <nema_cl_add_cmd>
 8017404:	4629      	mov	r1, r5
 8017406:	f8df a2f0 	ldr.w	sl, [pc, #752]	@ 80176f8 <draw_with_stencil+0xda4>
 801740a:	4331      	orrs	r1, r6
 801740c:	2038      	movs	r0, #56	@ 0x38
 801740e:	f006 fe25 	bl	801e05c <nema_cl_add_cmd>
 8017412:	4db3      	ldr	r5, [pc, #716]	@ (80176e0 <draw_with_stencil+0xd8c>)
 8017414:	f89a 3000 	ldrb.w	r3, [sl]
 8017418:	702b      	strb	r3, [r5, #0]
 801741a:	2b00      	cmp	r3, #0
 801741c:	f040 8234 	bne.w	8017888 <draw_with_stencil+0xf34>
 8017420:	4bb0      	ldr	r3, [pc, #704]	@ (80176e4 <draw_with_stencil+0xd90>)
 8017422:	ed9f 7ab1 	vldr	s14, [pc, #708]	@ 80176e8 <draw_with_stencil+0xd94>
 8017426:	edd3 6a00 	vldr	s13, [r3]
 801742a:	eef4 6ac7 	vcmpe.f32	s13, s14
 801742e:	4aaf      	ldr	r2, [pc, #700]	@ (80176ec <draw_with_stencil+0xd98>)
 8017430:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017434:	eeb6 6a00 	vmov.f32	s12, #96	@ 0x3f000000  0.5
 8017438:	edd2 7a00 	vldr	s15, [r2]
 801743c:	ee67 7a86 	vmul.f32	s15, s15, s12
 8017440:	bfc8      	it	gt
 8017442:	eeb7 6a00 	vmovgt.f32	s12, #112	@ 0x3f800000  1.0
 8017446:	4baa      	ldr	r3, [pc, #680]	@ (80176f0 <draw_with_stencil+0xd9c>)
 8017448:	bfc8      	it	gt
 801744a:	ee86 7a26 	vdivgt.f32	s14, s12, s13
 801744e:	ed9f 6aa6 	vldr	s12, [pc, #664]	@ 80176e8 <draw_with_stencil+0xd94>
 8017452:	edd3 6a00 	vldr	s13, [r3]
 8017456:	eef4 6ac6 	vcmpe.f32	s13, s12
 801745a:	bfd8      	it	le
 801745c:	eeb7 7a00 	vmovle.f32	s14, #112	@ 0x3f800000  1.0
 8017460:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017464:	bfca      	itet	gt
 8017466:	eef7 5a00 	vmovgt.f32	s11, #112	@ 0x3f800000  1.0
 801746a:	eeb7 6a00 	vmovle.f32	s12, #112	@ 0x3f800000  1.0
 801746e:	ee85 6aa6 	vdivgt.f32	s12, s11, s13
 8017472:	ee37 7a87 	vadd.f32	s14, s15, s14
 8017476:	ed94 2a08 	vldr	s4, [r4, #32]
 801747a:	ee77 7a86 	vadd.f32	s15, s15, s12
 801747e:	edd4 2a09 	vldr	s5, [r4, #36]	@ 0x24
 8017482:	ed94 6a04 	vldr	s12, [r4, #16]
 8017486:	edd4 6a05 	vldr	s13, [r4, #20]
 801748a:	ee37 3a07 	vadd.f32	s6, s14, s14
 801748e:	ee77 3aa7 	vadd.f32	s7, s15, s15
 8017492:	ee36 5a02 	vadd.f32	s10, s12, s4
 8017496:	ee76 5aa2 	vadd.f32	s11, s13, s5
 801749a:	ed94 4a06 	vldr	s8, [r4, #24]
 801749e:	edd4 4a07 	vldr	s9, [r4, #28]
 80174a2:	ee36 6a47 	vsub.f32	s12, s12, s14
 80174a6:	ee76 6ae7 	vsub.f32	s13, s13, s15
 80174aa:	ee35 5a07 	vadd.f32	s10, s10, s14
 80174ae:	ee75 5aa7 	vadd.f32	s11, s11, s15
 80174b2:	ee33 3a02 	vadd.f32	s6, s6, s4
 80174b6:	ee73 3aa2 	vadd.f32	s7, s7, s5
 80174ba:	ee34 7a07 	vadd.f32	s14, s8, s14
 80174be:	ee74 7aa7 	vadd.f32	s15, s9, s15
 80174c2:	ed84 3a12 	vstr	s6, [r4, #72]	@ 0x48
 80174c6:	edc4 3a13 	vstr	s7, [r4, #76]	@ 0x4c
 80174ca:	ed84 5a0c 	vstr	s10, [r4, #48]	@ 0x30
 80174ce:	ed84 5a0e 	vstr	s10, [r4, #56]	@ 0x38
 80174d2:	ed84 6a0a 	vstr	s12, [r4, #40]	@ 0x28
 80174d6:	ed84 6a10 	vstr	s12, [r4, #64]	@ 0x40
 80174da:	ed84 6a14 	vstr	s12, [r4, #80]	@ 0x50
 80174de:	ed84 7a16 	vstr	s14, [r4, #88]	@ 0x58
 80174e2:	edc4 5a0f 	vstr	s11, [r4, #60]	@ 0x3c
 80174e6:	edc4 5a11 	vstr	s11, [r4, #68]	@ 0x44
 80174ea:	edc4 6a0b 	vstr	s13, [r4, #44]	@ 0x2c
 80174ee:	edc4 6a0d 	vstr	s13, [r4, #52]	@ 0x34
 80174f2:	edc4 6a15 	vstr	s13, [r4, #84]	@ 0x54
 80174f6:	edc4 7a17 	vstr	s15, [r4, #92]	@ 0x5c
 80174fa:	683b      	ldr	r3, [r7, #0]
 80174fc:	7f1b      	ldrb	r3, [r3, #28]
 80174fe:	2b01      	cmp	r3, #1
 8017500:	f000 82ec 	beq.w	8017adc <draw_with_stencil+0x1188>
 8017504:	f0c0 82c2 	bcc.w	8017a8c <draw_with_stencil+0x1138>
 8017508:	2b02      	cmp	r3, #2
 801750a:	d018      	beq.n	801753e <draw_with_stencil+0xbea>
 801750c:	2004      	movs	r0, #4
 801750e:	f005 fbf1 	bl	801ccf4 <nema_vg_set_error>
 8017512:	2604      	movs	r6, #4
 8017514:	4630      	mov	r0, r6
 8017516:	f005 fbed 	bl	801ccf4 <nema_vg_set_error>
 801751a:	4630      	mov	r0, r6
 801751c:	b02d      	add	sp, #180	@ 0xb4
 801751e:	ecbd 8b10 	vpop	{d8-d15}
 8017522:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017526:	f44f 7000 	mov.w	r0, #512	@ 0x200
 801752a:	f005 fbe3 	bl	801ccf4 <nema_vg_set_error>
 801752e:	f44f 7600 	mov.w	r6, #512	@ 0x200
 8017532:	4630      	mov	r0, r6
 8017534:	b02d      	add	sp, #180	@ 0xb4
 8017536:	ecbd 8b10 	vpop	{d8-d15}
 801753a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801753e:	f64b 4116 	movw	r1, #48150	@ 0xbc16
 8017542:	f44f 708e 	mov.w	r0, #284	@ 0x11c
 8017546:	f006 fd89 	bl	801e05c <nema_cl_add_cmd>
 801754a:	f64b 4117 	movw	r1, #48151	@ 0xbc17
 801754e:	f44f 70f0 	mov.w	r0, #480	@ 0x1e0
 8017552:	f006 fd83 	bl	801e05c <nema_cl_add_cmd>
 8017556:	f04f 1001 	mov.w	r0, #65537	@ 0x10001
 801755a:	f7fa fffd 	bl	8012558 <nema_set_rop_blend_mode>
 801755e:	4620      	mov	r0, r4
 8017560:	f7fe fb1a 	bl	8015b98 <fill_path_even_odd>
 8017564:	4606      	mov	r6, r0
 8017566:	2800      	cmp	r0, #0
 8017568:	f000 83bb 	beq.w	8017ce2 <draw_with_stencil+0x138e>
 801756c:	f005 fbc2 	bl	801ccf4 <nema_vg_set_error>
 8017570:	e7d0      	b.n	8017514 <draw_with_stencil+0xbc0>
 8017572:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
 8017576:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801757a:	eef1 5a65 	vneg.f32	s11, s11
 801757e:	f57f abcc 	bpl.w	8016d1a <draw_with_stencil+0x3c6>
 8017582:	e131      	b.n	80177e8 <draw_with_stencil+0xe94>
 8017584:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 8017588:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801758c:	eeb1 5a68 	vneg.f32	s10, s17
 8017590:	f57f adb2 	bpl.w	80170f8 <draw_with_stencil+0x7a4>
 8017594:	eeb1 6a47 	vneg.f32	s12, s14
 8017598:	eeb4 6ac5 	vcmpe.f32	s12, s10
 801759c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80175a0:	f300 81e5 	bgt.w	801796e <draw_with_stencil+0x101a>
 80175a4:	ed9f 5a55 	vldr	s10, [pc, #340]	@ 80176fc <draw_with_stencil+0xda8>
 80175a8:	ee26 6a05 	vmul.f32	s12, s12, s10
 80175ac:	e5ae      	b.n	801710c <draw_with_stencil+0x7b8>
 80175ae:	eeb1 6a48 	vneg.f32	s12, s16
 80175b2:	eeb4 6ac5 	vcmpe.f32	s12, s10
 80175b6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80175ba:	f300 8240 	bgt.w	8017a3e <draw_with_stencil+0x10ea>
 80175be:	ed9f 5a4f 	vldr	s10, [pc, #316]	@ 80176fc <draw_with_stencil+0xda8>
 80175c2:	ee26 6a05 	vmul.f32	s12, s12, s10
 80175c6:	e46f      	b.n	8016ea8 <draw_with_stencil+0x554>
 80175c8:	eef5 8ac0 	vcmpe.f32	s17, #0.0
 80175cc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80175d0:	eef1 5a65 	vneg.f32	s11, s11
 80175d4:	f57f ad88 	bpl.w	80170e8 <draw_with_stencil+0x794>
 80175d8:	e7d4      	b.n	8017584 <draw_with_stencil+0xc30>
 80175da:	eef1 5a65 	vneg.f32	s11, s11
 80175de:	eef4 5ac6 	vcmpe.f32	s11, s12
 80175e2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80175e6:	f73f aaab 	bgt.w	8016b40 <draw_with_stencil+0x1ec>
 80175ea:	eddf 7a44 	vldr	s15, [pc, #272]	@ 80176fc <draw_with_stencil+0xda8>
 80175ee:	ee65 7aa7 	vmul.f32	s15, s11, s15
 80175f2:	f7ff bab0 	b.w	8016b56 <draw_with_stencil+0x202>
 80175f6:	eef1 4a48 	vneg.f32	s9, s16
 80175fa:	eef4 4ac5 	vcmpe.f32	s9, s10
 80175fe:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017602:	f300 8229 	bgt.w	8017a58 <draw_with_stencil+0x1104>
 8017606:	ed9f 6a3d 	vldr	s12, [pc, #244]	@ 80176fc <draw_with_stencil+0xda8>
 801760a:	ee24 6a86 	vmul.f32	s12, s9, s12
 801760e:	f7ff bbd1 	b.w	8016db4 <draw_with_stencil+0x460>
 8017612:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8017616:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801761a:	eef1 5a66 	vneg.f32	s11, s13
 801761e:	f57f ab40 	bpl.w	8016ca2 <draw_with_stencil+0x34e>
 8017622:	eeb1 7a67 	vneg.f32	s14, s15
 8017626:	eef4 5ac7 	vcmpe.f32	s11, s14
 801762a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801762e:	f100 81ec 	bmi.w	8017a0a <draw_with_stencil+0x10b6>
 8017632:	eddf 5a32 	vldr	s11, [pc, #200]	@ 80176fc <draw_with_stencil+0xda8>
 8017636:	ee27 7a25 	vmul.f32	s14, s14, s11
 801763a:	f7ff bb3c 	b.w	8016cb6 <draw_with_stencil+0x362>
 801763e:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 8017642:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017646:	eeb1 6a46 	vneg.f32	s12, s12
 801764a:	f57f ab22 	bpl.w	8016c92 <draw_with_stencil+0x33e>
 801764e:	e7e0      	b.n	8017612 <draw_with_stencil+0xcbe>
 8017650:	eeb5 5ac0 	vcmpe.f32	s10, #0.0
 8017654:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017658:	eeb1 6a47 	vneg.f32	s12, s14
 801765c:	f57f aa2c 	bpl.w	8016ab8 <draw_with_stencil+0x164>
 8017660:	eeb1 5a45 	vneg.f32	s10, s10
 8017664:	eeb4 6ac5 	vcmpe.f32	s12, s10
 8017668:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801766c:	f53f aa2a 	bmi.w	8016ac4 <draw_with_stencil+0x170>
 8017670:	ed9f 7a22 	vldr	s14, [pc, #136]	@ 80176fc <draw_with_stencil+0xda8>
 8017674:	ee25 7a07 	vmul.f32	s14, s10, s14
 8017678:	f7ff ba2f 	b.w	8016ada <draw_with_stencil+0x186>
 801767c:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8017680:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017684:	eef1 3a63 	vneg.f32	s7, s7
 8017688:	f57f aa81 	bpl.w	8016b8e <draw_with_stencil+0x23a>
 801768c:	e008      	b.n	80176a0 <draw_with_stencil+0xd4c>
 801768e:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 8017692:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017696:	eef1 7a67 	vneg.f32	s15, s15
 801769a:	f57f aa05 	bpl.w	8016aa8 <draw_with_stencil+0x154>
 801769e:	e7d7      	b.n	8017650 <draw_with_stencil+0xcfc>
 80176a0:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
 80176a4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80176a8:	eeb1 3a67 	vneg.f32	s6, s15
 80176ac:	f57f aa77 	bpl.w	8016b9e <draw_with_stencil+0x24a>
 80176b0:	eeb1 6a46 	vneg.f32	s12, s12
 80176b4:	eeb4 3ac6 	vcmpe.f32	s6, s12
 80176b8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80176bc:	f53f aa75 	bmi.w	8016baa <draw_with_stencil+0x256>
 80176c0:	eddf 7a0e 	vldr	s15, [pc, #56]	@ 80176fc <draw_with_stencil+0xda8>
 80176c4:	f7ff ba79 	b.w	8016bba <draw_with_stencil+0x266>
 80176c8:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80176cc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80176d0:	eeb1 6a46 	vneg.f32	s12, s12
 80176d4:	f57f ad80 	bpl.w	80171d8 <draw_with_stencil+0x884>
 80176d8:	e030      	b.n	801773c <draw_with_stencil+0xde8>
 80176da:	bf00      	nop
 80176dc:	ff000100 	.word	0xff000100
 80176e0:	20083194 	.word	0x20083194
 80176e4:	2008318c 	.word	0x2008318c
 80176e8:	3a83126f 	.word	0x3a83126f
 80176ec:	20000134 	.word	0x20000134
 80176f0:	20083190 	.word	0x20083190
 80176f4:	20000064 	.word	0x20000064
 80176f8:	20083195 	.word	0x20083195
 80176fc:	3727c5ac 	.word	0x3727c5ac
 8017700:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8017704:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017708:	eeb1 5a66 	vneg.f32	s10, s13
 801770c:	f57f ac75 	bpl.w	8016ffa <draw_with_stencil+0x6a6>
 8017710:	eeb1 6a67 	vneg.f32	s12, s15
 8017714:	eeb4 6ac5 	vcmpe.f32	s12, s10
 8017718:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801771c:	f300 814e 	bgt.w	80179bc <draw_with_stencil+0x1068>
 8017720:	ed1f 5a0a 	vldr	s10, [pc, #-40]	@ 80176fc <draw_with_stencil+0xda8>
 8017724:	ee26 6a05 	vmul.f32	s12, s12, s10
 8017728:	e471      	b.n	801700e <draw_with_stencil+0x6ba>
 801772a:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 801772e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017732:	eef1 5a65 	vneg.f32	s11, s11
 8017736:	f57f ac58 	bpl.w	8016fea <draw_with_stencil+0x696>
 801773a:	e7e1      	b.n	8017700 <draw_with_stencil+0xdac>
 801773c:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 8017740:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017744:	eef1 5a67 	vneg.f32	s11, s15
 8017748:	f57f ad4e 	bpl.w	80171e8 <draw_with_stencil+0x894>
 801774c:	eef1 6a47 	vneg.f32	s13, s14
 8017750:	eef4 6ae5 	vcmpe.f32	s13, s11
 8017754:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017758:	f300 818b 	bgt.w	8017a72 <draw_with_stencil+0x111e>
 801775c:	ed5f 5a19 	vldr	s11, [pc, #-100]	@ 80176fc <draw_with_stencil+0xda8>
 8017760:	ee66 6aa5 	vmul.f32	s13, s13, s11
 8017764:	e54a      	b.n	80171fc <draw_with_stencil+0x8a8>
 8017766:	eef1 7a48 	vneg.f32	s15, s16
 801776a:	eef4 7ac6 	vcmpe.f32	s15, s12
 801776e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017772:	f300 8109 	bgt.w	8017988 <draw_with_stencil+0x1034>
 8017776:	ed1f 6a1f 	vldr	s12, [pc, #-124]	@ 80176fc <draw_with_stencil+0xda8>
 801777a:	ee67 7a86 	vmul.f32	s15, s15, s12
 801777e:	e489      	b.n	8017094 <draw_with_stencil+0x740>
 8017780:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 8017784:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017788:	eeb1 5a46 	vneg.f32	s10, s12
 801778c:	f57f acf0 	bpl.w	8017170 <draw_with_stencil+0x81c>
 8017790:	eef1 4a47 	vneg.f32	s9, s14
 8017794:	eef4 4ac5 	vcmpe.f32	s9, s10
 8017798:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801779c:	f300 8128 	bgt.w	80179f0 <draw_with_stencil+0x109c>
 80177a0:	ed1f 6a2a 	vldr	s12, [pc, #-168]	@ 80176fc <draw_with_stencil+0xda8>
 80177a4:	ee24 6a86 	vmul.f32	s12, s9, s12
 80177a8:	e4ec      	b.n	8017184 <draw_with_stencil+0x830>
 80177aa:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80177ae:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80177b2:	eeb1 5a66 	vneg.f32	s10, s13
 80177b6:	f57f aba5 	bpl.w	8016f04 <draw_with_stencil+0x5b0>
 80177ba:	eeb1 6a67 	vneg.f32	s12, s15
 80177be:	eeb4 6ac5 	vcmpe.f32	s12, s10
 80177c2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80177c6:	f300 80c5 	bgt.w	8017954 <draw_with_stencil+0x1000>
 80177ca:	ed1f 5a34 	vldr	s10, [pc, #-208]	@ 80176fc <draw_with_stencil+0xda8>
 80177ce:	ee26 6a05 	vmul.f32	s12, s12, s10
 80177d2:	f7ff bba1 	b.w	8016f18 <draw_with_stencil+0x5c4>
 80177d6:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 80177da:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80177de:	eef1 5a65 	vneg.f32	s11, s11
 80177e2:	f57f ab87 	bpl.w	8016ef4 <draw_with_stencil+0x5a0>
 80177e6:	e7e0      	b.n	80177aa <draw_with_stencil+0xe56>
 80177e8:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 80177ec:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80177f0:	eeb1 5a46 	vneg.f32	s10, s12
 80177f4:	f57f aa99 	bpl.w	8016d2a <draw_with_stencil+0x3d6>
 80177f8:	eef1 4a47 	vneg.f32	s9, s14
 80177fc:	eeb4 5ae4 	vcmpe.f32	s10, s9
 8017800:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017804:	f100 80e7 	bmi.w	80179d6 <draw_with_stencil+0x1082>
 8017808:	ed1f 6a44 	vldr	s12, [pc, #-272]	@ 80176fc <draw_with_stencil+0xda8>
 801780c:	ee24 6a86 	vmul.f32	s12, s9, s12
 8017810:	f7ff ba95 	b.w	8016d3e <draw_with_stencil+0x3ea>
 8017814:	eef1 4a48 	vneg.f32	s9, s16
 8017818:	eef4 4ac5 	vcmpe.f32	s9, s10
 801781c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017820:	f300 80bf 	bgt.w	80179a2 <draw_with_stencil+0x104e>
 8017824:	ed1f 6a4b 	vldr	s12, [pc, #-300]	@ 80176fc <draw_with_stencil+0xda8>
 8017828:	ee24 6a86 	vmul.f32	s12, s9, s12
 801782c:	f7ff bbb9 	b.w	8016fa2 <draw_with_stencil+0x64e>
 8017830:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
 8017834:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017838:	eef1 5a65 	vneg.f32	s11, s11
 801783c:	f57f ac90 	bpl.w	8017160 <draw_with_stencil+0x80c>
 8017840:	e79e      	b.n	8017780 <draw_with_stencil+0xe2c>
 8017842:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8017846:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801784a:	eeb1 5a66 	vneg.f32	s10, s13
 801784e:	f57f aadd 	bpl.w	8016e0c <draw_with_stencil+0x4b8>
 8017852:	eeb1 6a67 	vneg.f32	s12, s15
 8017856:	eeb4 5ac6 	vcmpe.f32	s10, s12
 801785a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801785e:	f100 80e1 	bmi.w	8017a24 <draw_with_stencil+0x10d0>
 8017862:	ed1f 5a5a 	vldr	s10, [pc, #-360]	@ 80176fc <draw_with_stencil+0xda8>
 8017866:	ee26 6a05 	vmul.f32	s12, s12, s10
 801786a:	f7ff bad9 	b.w	8016e20 <draw_with_stencil+0x4cc>
 801786e:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 8017872:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017876:	eef1 5a65 	vneg.f32	s11, s11
 801787a:	f57f aabf 	bpl.w	8016dfc <draw_with_stencil+0x4a8>
 801787e:	e7e0      	b.n	8017842 <draw_with_stencil+0xeee>
 8017880:	2500      	movs	r5, #0
 8017882:	aa1c      	add	r2, sp, #112	@ 0x70
 8017884:	f7ff b8fb 	b.w	8016a7e <draw_with_stencil+0x12a>
 8017888:	2007      	movs	r0, #7
 801788a:	f006 fb8b 	bl	801dfa4 <nema_cl_get_space>
 801788e:	b318      	cbz	r0, 80178d8 <draw_with_stencil+0xf84>
 8017890:	f44f 725d 	mov.w	r2, #884	@ 0x374
 8017894:	6002      	str	r2, [r0, #0]
 8017896:	f44f 725a 	mov.w	r2, #872	@ 0x368
 801789a:	4b8c      	ldr	r3, [pc, #560]	@ (8017acc <draw_with_stencil+0x1178>)
 801789c:	6959      	ldr	r1, [r3, #20]
 801789e:	6082      	str	r2, [r0, #8]
 80178a0:	f44f 7258 	mov.w	r2, #864	@ 0x360
 80178a4:	6041      	str	r1, [r0, #4]
 80178a6:	6899      	ldr	r1, [r3, #8]
 80178a8:	6102      	str	r2, [r0, #16]
 80178aa:	f44f 7259 	mov.w	r2, #868	@ 0x364
 80178ae:	60c1      	str	r1, [r0, #12]
 80178b0:	6819      	ldr	r1, [r3, #0]
 80178b2:	6182      	str	r2, [r0, #24]
 80178b4:	f44f 725b 	mov.w	r2, #876	@ 0x36c
 80178b8:	6141      	str	r1, [r0, #20]
 80178ba:	6859      	ldr	r1, [r3, #4]
 80178bc:	6202      	str	r2, [r0, #32]
 80178be:	f44f 725c 	mov.w	r2, #880	@ 0x370
 80178c2:	61c1      	str	r1, [r0, #28]
 80178c4:	68d9      	ldr	r1, [r3, #12]
 80178c6:	6282      	str	r2, [r0, #40]	@ 0x28
 80178c8:	6241      	str	r1, [r0, #36]	@ 0x24
 80178ca:	6919      	ldr	r1, [r3, #16]
 80178cc:	f44f 7262 	mov.w	r2, #904	@ 0x388
 80178d0:	2300      	movs	r3, #0
 80178d2:	e9c0 230c 	strd	r2, r3, [r0, #48]	@ 0x30
 80178d6:	62c1      	str	r1, [r0, #44]	@ 0x2c
 80178d8:	2300      	movs	r3, #0
 80178da:	f88a 3000 	strb.w	r3, [sl]
 80178de:	e59f      	b.n	8017420 <draw_with_stencil+0xacc>
 80178e0:	3303      	adds	r3, #3
 80178e2:	f003 0303 	and.w	r3, r3, #3
 80178e6:	eb0a 03c3 	add.w	r3, sl, r3, lsl #3
 80178ea:	eef1 7a00 	vmov.f32	s15, #16	@ 0x40800000  4.0
 80178ee:	ed13 aa10 	vldr	s20, [r3, #-64]	@ 0xffffffc0
 80178f2:	eeb5 9a00 	vmov.f32	s18, #80	@ 0x3e800000  0.250
 80178f6:	ee3a aa67 	vsub.f32	s20, s20, s15
 80178fa:	ee7b 7a27 	vadd.f32	s15, s22, s15
 80178fe:	ee2a aa09 	vmul.f32	s20, s20, s18
 8017902:	ed13 da0f 	vldr	s26, [r3, #-60]	@ 0xffffffc4
 8017906:	ee27 9a89 	vmul.f32	s18, s15, s18
 801790a:	eeb0 ea68 	vmov.f32	s28, s17
 801790e:	e4b8      	b.n	8017282 <draw_with_stencil+0x92e>
 8017910:	2602      	movs	r6, #2
 8017912:	2002      	movs	r0, #2
 8017914:	f005 f9ee 	bl	801ccf4 <nema_vg_set_error>
 8017918:	4630      	mov	r0, r6
 801791a:	b02d      	add	sp, #180	@ 0xb4
 801791c:	ecbd 8b10 	vpop	{d8-d15}
 8017920:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017924:	1c43      	adds	r3, r0, #1
 8017926:	f003 0303 	and.w	r3, r3, #3
 801792a:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
 801792e:	eef1 7a00 	vmov.f32	s15, #16	@ 0x40800000  4.0
 8017932:	ed53 aa10 	vldr	s21, [r3, #-64]	@ 0xffffffc0
 8017936:	eef5 9a00 	vmov.f32	s19, #80	@ 0x3e800000  0.250
 801793a:	ee7a aae7 	vsub.f32	s21, s21, s15
 801793e:	ee7b 7aa7 	vadd.f32	s15, s23, s15
 8017942:	ee6a aaa9 	vmul.f32	s21, s21, s19
 8017946:	ed53 ea0f 	vldr	s29, [r3, #-60]	@ 0xffffffc4
 801794a:	ee67 9aa9 	vmul.f32	s19, s15, s19
 801794e:	eeb0 fa48 	vmov.f32	s30, s16
 8017952:	e4bf      	b.n	80172d4 <draw_with_stencil+0x980>
 8017954:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 8017958:	ed9f 6a5d 	vldr	s12, [pc, #372]	@ 8017ad0 <draw_with_stencil+0x117c>
 801795c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017960:	bf54      	ite	pl
 8017962:	ee26 6a86 	vmulpl.f32	s12, s13, s12
 8017966:	ee26 6ac6 	vnmulmi.f32	s12, s13, s12
 801796a:	f7ff bad5 	b.w	8016f18 <draw_with_stencil+0x5c4>
 801796e:	eef5 8ac0 	vcmpe.f32	s17, #0.0
 8017972:	ed9f 6a57 	vldr	s12, [pc, #348]	@ 8017ad0 <draw_with_stencil+0x117c>
 8017976:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801797a:	bf54      	ite	pl
 801797c:	ee28 6a86 	vmulpl.f32	s12, s17, s12
 8017980:	ee28 6ac6 	vnmulmi.f32	s12, s17, s12
 8017984:	f7ff bbc2 	b.w	801710c <draw_with_stencil+0x7b8>
 8017988:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 801798c:	eddf 7a50 	vldr	s15, [pc, #320]	@ 8017ad0 <draw_with_stencil+0x117c>
 8017990:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017994:	bf4c      	ite	mi
 8017996:	ee67 7a67 	vnmulmi.f32	s15, s14, s15
 801799a:	ee67 7a27 	vmulpl.f32	s15, s14, s15
 801799e:	f7ff bb79 	b.w	8017094 <draw_with_stencil+0x740>
 80179a2:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
 80179a6:	ed9f 5a4a 	vldr	s10, [pc, #296]	@ 8017ad0 <draw_with_stencil+0x117c>
 80179aa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80179ae:	bf4c      	ite	mi
 80179b0:	ee26 6a45 	vnmulmi.f32	s12, s12, s10
 80179b4:	ee26 6a05 	vmulpl.f32	s12, s12, s10
 80179b8:	f7ff baf3 	b.w	8016fa2 <draw_with_stencil+0x64e>
 80179bc:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 80179c0:	ed9f 6a43 	vldr	s12, [pc, #268]	@ 8017ad0 <draw_with_stencil+0x117c>
 80179c4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80179c8:	bf54      	ite	pl
 80179ca:	ee26 6a86 	vmulpl.f32	s12, s13, s12
 80179ce:	ee26 6ac6 	vnmulmi.f32	s12, s13, s12
 80179d2:	f7ff bb1c 	b.w	801700e <draw_with_stencil+0x6ba>
 80179d6:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
 80179da:	ed9f 5a3d 	vldr	s10, [pc, #244]	@ 8017ad0 <draw_with_stencil+0x117c>
 80179de:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80179e2:	bf54      	ite	pl
 80179e4:	ee26 6a05 	vmulpl.f32	s12, s12, s10
 80179e8:	ee26 6a45 	vnmulmi.f32	s12, s12, s10
 80179ec:	f7ff b9a7 	b.w	8016d3e <draw_with_stencil+0x3ea>
 80179f0:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
 80179f4:	ed9f 5a36 	vldr	s10, [pc, #216]	@ 8017ad0 <draw_with_stencil+0x117c>
 80179f8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80179fc:	bf54      	ite	pl
 80179fe:	ee26 6a05 	vmulpl.f32	s12, s12, s10
 8017a02:	ee26 6a45 	vnmulmi.f32	s12, s12, s10
 8017a06:	f7ff bbbd 	b.w	8017184 <draw_with_stencil+0x830>
 8017a0a:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 8017a0e:	ed9f 7a30 	vldr	s14, [pc, #192]	@ 8017ad0 <draw_with_stencil+0x117c>
 8017a12:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017a16:	bf54      	ite	pl
 8017a18:	ee26 7a87 	vmulpl.f32	s14, s13, s14
 8017a1c:	ee26 7ac7 	vnmulmi.f32	s14, s13, s14
 8017a20:	f7ff b949 	b.w	8016cb6 <draw_with_stencil+0x362>
 8017a24:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 8017a28:	ed9f 6a29 	vldr	s12, [pc, #164]	@ 8017ad0 <draw_with_stencil+0x117c>
 8017a2c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017a30:	bf54      	ite	pl
 8017a32:	ee26 6a86 	vmulpl.f32	s12, s13, s12
 8017a36:	ee26 6ac6 	vnmulmi.f32	s12, s13, s12
 8017a3a:	f7ff b9f1 	b.w	8016e20 <draw_with_stencil+0x4cc>
 8017a3e:	eef5 8ac0 	vcmpe.f32	s17, #0.0
 8017a42:	ed9f 6a23 	vldr	s12, [pc, #140]	@ 8017ad0 <draw_with_stencil+0x117c>
 8017a46:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017a4a:	bf4c      	ite	mi
 8017a4c:	ee28 6ac6 	vnmulmi.f32	s12, s17, s12
 8017a50:	ee28 6a86 	vmulpl.f32	s12, s17, s12
 8017a54:	f7ff ba28 	b.w	8016ea8 <draw_with_stencil+0x554>
 8017a58:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
 8017a5c:	ed9f 5a1c 	vldr	s10, [pc, #112]	@ 8017ad0 <draw_with_stencil+0x117c>
 8017a60:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017a64:	bf4c      	ite	mi
 8017a66:	ee26 6a45 	vnmulmi.f32	s12, s12, s10
 8017a6a:	ee26 6a05 	vmulpl.f32	s12, s12, s10
 8017a6e:	f7ff b9a1 	b.w	8016db4 <draw_with_stencil+0x460>
 8017a72:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8017a76:	eddf 6a16 	vldr	s13, [pc, #88]	@ 8017ad0 <draw_with_stencil+0x117c>
 8017a7a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017a7e:	bf54      	ite	pl
 8017a80:	ee67 6aa6 	vmulpl.f32	s13, s15, s13
 8017a84:	ee67 6ae6 	vnmulmi.f32	s13, s15, s13
 8017a88:	f7ff bbb8 	b.w	80171fc <draw_with_stencil+0x8a8>
 8017a8c:	f04f 33ff 	mov.w	r3, #4294967295
 8017a90:	2103      	movs	r1, #3
 8017a92:	461a      	mov	r2, r3
 8017a94:	480f      	ldr	r0, [pc, #60]	@ (8017ad4 <draw_with_stencil+0x1180>)
 8017a96:	f006 fc03 	bl	801e2a0 <nema_set_blend>
 8017a9a:	f04f 30ff 	mov.w	r0, #4294967295
 8017a9e:	f7fa fdb9 	bl	8012614 <nema_set_raster_color>
 8017aa2:	4b0d      	ldr	r3, [pc, #52]	@ (8017ad8 <draw_with_stencil+0x1184>)
 8017aa4:	4620      	mov	r0, r4
 8017aa6:	681b      	ldr	r3, [r3, #0]
 8017aa8:	2b00      	cmp	r3, #0
 8017aaa:	f000 8113 	beq.w	8017cd4 <draw_with_stencil+0x1380>
 8017aae:	f7fc ff27 	bl	8014900 <stroke_path>
 8017ab2:	4606      	mov	r6, r0
 8017ab4:	2800      	cmp	r0, #0
 8017ab6:	f47f ad59 	bne.w	801756c <draw_with_stencil+0xc18>
 8017aba:	f8d9 3000 	ldr.w	r3, [r9]
 8017abe:	2034      	movs	r0, #52	@ 0x34
 8017ac0:	8a19      	ldrh	r1, [r3, #16]
 8017ac2:	f041 6100 	orr.w	r1, r1, #134217728	@ 0x8000000
 8017ac6:	f006 fac9 	bl	801e05c <nema_cl_add_cmd>
 8017aca:	e026      	b.n	8017b1a <draw_with_stencil+0x11c6>
 8017acc:	200831cc 	.word	0x200831cc
 8017ad0:	3727c5ac 	.word	0x3727c5ac
 8017ad4:	01000001 	.word	0x01000001
 8017ad8:	20083150 	.word	0x20083150
 8017adc:	f64b 4116 	movw	r1, #48150	@ 0xbc16
 8017ae0:	f44f 708e 	mov.w	r0, #284	@ 0x11c
 8017ae4:	f006 faba 	bl	801e05c <nema_cl_add_cmd>
 8017ae8:	f64b 4117 	movw	r1, #48151	@ 0xbc17
 8017aec:	f44f 70f0 	mov.w	r0, #480	@ 0x1e0
 8017af0:	f006 fab4 	bl	801e05c <nema_cl_add_cmd>
 8017af4:	f04f 1001 	mov.w	r0, #65537	@ 0x10001
 8017af8:	f7fa fd2e 	bl	8012558 <nema_set_rop_blend_mode>
 8017afc:	4620      	mov	r0, r4
 8017afe:	f7fe f84b 	bl	8015b98 <fill_path_even_odd>
 8017b02:	4606      	mov	r6, r0
 8017b04:	2800      	cmp	r0, #0
 8017b06:	f47f ad31 	bne.w	801756c <draw_with_stencil+0xc18>
 8017b0a:	f8d9 3000 	ldr.w	r3, [r9]
 8017b0e:	2034      	movs	r0, #52	@ 0x34
 8017b10:	8a19      	ldrh	r1, [r3, #16]
 8017b12:	f041 5138 	orr.w	r1, r1, #771751936	@ 0x2e000000
 8017b16:	f006 faa1 	bl	801e05c <nema_cl_add_cmd>
 8017b1a:	683b      	ldr	r3, [r7, #0]
 8017b1c:	f893 6048 	ldrb.w	r6, [r3, #72]	@ 0x48
 8017b20:	2e01      	cmp	r6, #1
 8017b22:	f000 8258 	beq.w	8017fd6 <draw_with_stencil+0x1682>
 8017b26:	9b04      	ldr	r3, [sp, #16]
 8017b28:	f893 30dd 	ldrb.w	r3, [r3, #221]	@ 0xdd
 8017b2c:	2b00      	cmp	r3, #0
 8017b2e:	f040 8218 	bne.w	8017f62 <draw_with_stencil+0x160e>
 8017b32:	683a      	ldr	r2, [r7, #0]
 8017b34:	7fd3      	ldrb	r3, [r2, #31]
 8017b36:	f003 0307 	and.w	r3, r3, #7
 8017b3a:	2b03      	cmp	r3, #3
 8017b3c:	f000 8244 	beq.w	8017fc8 <draw_with_stencil+0x1674>
 8017b40:	2b04      	cmp	r3, #4
 8017b42:	f000 8322 	beq.w	801818a <draw_with_stencil+0x1836>
 8017b46:	9b04      	ldr	r3, [sp, #16]
 8017b48:	6a56      	ldr	r6, [r2, #36]	@ 0x24
 8017b4a:	f893 30dd 	ldrb.w	r3, [r3, #221]	@ 0xdd
 8017b4e:	b2b2      	uxth	r2, r6
 8017b50:	f240 5101 	movw	r1, #1281	@ 0x501
 8017b54:	2b00      	cmp	r3, #0
 8017b56:	f000 80cd 	beq.w	8017cf4 <draw_with_stencil+0x13a0>
 8017b5a:	428a      	cmp	r2, r1
 8017b5c:	f000 8483 	beq.w	8018466 <draw_with_stencil+0x1b12>
 8017b60:	2b02      	cmp	r3, #2
 8017b62:	f006 020f 	and.w	r2, r6, #15
 8017b66:	f3c6 2c03 	ubfx	ip, r6, #8, #4
 8017b6a:	f000 8317 	beq.w	801819c <draw_with_stencil+0x1848>
 8017b6e:	2000      	movs	r0, #0
 8017b70:	2103      	movs	r1, #3
 8017b72:	2702      	movs	r7, #2
 8017b74:	2301      	movs	r3, #1
 8017b76:	901d      	str	r0, [sp, #116]	@ 0x74
 8017b78:	48bb      	ldr	r0, [pc, #748]	@ (8017e68 <draw_with_stencil+0x1514>)
 8017b7a:	901c      	str	r0, [sp, #112]	@ 0x70
 8017b7c:	0170      	lsls	r0, r6, #5
 8017b7e:	d508      	bpl.n	8017b92 <draw_with_stencil+0x123e>
 8017b80:	2600      	movs	r6, #0
 8017b82:	a82c      	add	r0, sp, #176	@ 0xb0
 8017b84:	eb00 00c3 	add.w	r0, r0, r3, lsl #3
 8017b88:	463b      	mov	r3, r7
 8017b8a:	460f      	mov	r7, r1
 8017b8c:	49b7      	ldr	r1, [pc, #732]	@ (8017e6c <draw_with_stencil+0x1518>)
 8017b8e:	e940 6110 	strd	r6, r1, [r0, #-64]	@ 0x40
 8017b92:	1f91      	subs	r1, r2, #6
 8017b94:	2903      	cmp	r1, #3
 8017b96:	f200 821c 	bhi.w	8017fd2 <draw_with_stencil+0x167e>
 8017b9a:	2100      	movs	r1, #0
 8017b9c:	ae2c      	add	r6, sp, #176	@ 0xb0
 8017b9e:	48b4      	ldr	r0, [pc, #720]	@ (8017e70 <draw_with_stencil+0x151c>)
 8017ba0:	eb06 03c3 	add.w	r3, r6, r3, lsl #3
 8017ba4:	4eb3      	ldr	r6, [pc, #716]	@ (8017e74 <draw_with_stencil+0x1520>)
 8017ba6:	e943 0110 	strd	r0, r1, [r3, #-64]	@ 0x40
 8017baa:	463b      	mov	r3, r7
 8017bac:	3701      	adds	r7, #1
 8017bae:	48b2      	ldr	r0, [pc, #712]	@ (8017e78 <draw_with_stencil+0x1524>)
 8017bb0:	49b2      	ldr	r1, [pc, #712]	@ (8017e7c <draw_with_stencil+0x1528>)
 8017bb2:	f850 2022 	ldr.w	r2, [r0, r2, lsl #2]
 8017bb6:	4311      	orrs	r1, r2
 8017bb8:	aa2c      	add	r2, sp, #176	@ 0xb0
 8017bba:	eb02 02c3 	add.w	r2, r2, r3, lsl #3
 8017bbe:	e942 6110 	strd	r6, r1, [r2, #-64]	@ 0x40
 8017bc2:	f1bc 0f00 	cmp.w	ip, #0
 8017bc6:	d00a      	beq.n	8017bde <draw_with_stencil+0x128a>
 8017bc8:	2600      	movs	r6, #0
 8017bca:	f850 002c 	ldr.w	r0, [r0, ip, lsl #2]
 8017bce:	4aac      	ldr	r2, [pc, #688]	@ (8017e80 <draw_with_stencil+0x152c>)
 8017bd0:	a92c      	add	r1, sp, #176	@ 0xb0
 8017bd2:	eb01 01c7 	add.w	r1, r1, r7, lsl #3
 8017bd6:	4302      	orrs	r2, r0
 8017bd8:	e941 6210 	strd	r6, r2, [r1, #-64]	@ 0x40
 8017bdc:	1c9f      	adds	r7, r3, #2
 8017bde:	4ba5      	ldr	r3, [pc, #660]	@ (8017e74 <draw_with_stencil+0x1520>)
 8017be0:	49a8      	ldr	r1, [pc, #672]	@ (8017e84 <draw_with_stencil+0x1530>)
 8017be2:	aa2c      	add	r2, sp, #176	@ 0xb0
 8017be4:	eb02 02c7 	add.w	r2, r2, r7, lsl #3
 8017be8:	f842 3c40 	str.w	r3, [r2, #-64]
 8017bec:	f842 1c3c 	str.w	r1, [r2, #-60]
 8017bf0:	a82c      	add	r0, sp, #176	@ 0xb0
 8017bf2:	49a5      	ldr	r1, [pc, #660]	@ (8017e88 <draw_with_stencil+0x1534>)
 8017bf4:	4aa5      	ldr	r2, [pc, #660]	@ (8017e8c <draw_with_stencil+0x1538>)
 8017bf6:	1c7b      	adds	r3, r7, #1
 8017bf8:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 8017bfc:	2001      	movs	r0, #1
 8017bfe:	f843 1c40 	str.w	r1, [r3, #-64]
 8017c02:	f843 2c3c 	str.w	r2, [r3, #-60]
 8017c06:	f7fa fca7 	bl	8012558 <nema_set_rop_blend_mode>
 8017c0a:	a81c      	add	r0, sp, #112	@ 0x70
 8017c0c:	1cb9      	adds	r1, r7, #2
 8017c0e:	2200      	movs	r2, #0
 8017c10:	f7fa fc82 	bl	8012518 <nema_load_frag_shader>
 8017c14:	f44f 401c 	mov.w	r0, #39936	@ 0x9c00
 8017c18:	f7fa fc98 	bl	801254c <nema_set_frag_ptr>
 8017c1c:	9b04      	ldr	r3, [sp, #16]
 8017c1e:	f893 30dd 	ldrb.w	r3, [r3, #221]	@ 0xdd
 8017c22:	2b04      	cmp	r3, #4
 8017c24:	f000 80a5 	beq.w	8017d72 <draw_with_stencil+0x141e>
 8017c28:	2009      	movs	r0, #9
 8017c2a:	f8d4 9028 	ldr.w	r9, [r4, #40]	@ 0x28
 8017c2e:	f8d4 802c 	ldr.w	r8, [r4, #44]	@ 0x2c
 8017c32:	ed94 9a0c 	vldr	s18, [r4, #48]	@ 0x30
 8017c36:	edd4 8a0d 	vldr	s17, [r4, #52]	@ 0x34
 8017c3a:	ed94 8a0e 	vldr	s16, [r4, #56]	@ 0x38
 8017c3e:	6be7      	ldr	r7, [r4, #60]	@ 0x3c
 8017c40:	6c26      	ldr	r6, [r4, #64]	@ 0x40
 8017c42:	6c64      	ldr	r4, [r4, #68]	@ 0x44
 8017c44:	f006 f9ae 	bl	801dfa4 <nema_cl_get_space>
 8017c48:	b380      	cbz	r0, 8017cac <draw_with_stencil+0x1358>
 8017c4a:	f44f 734c 	mov.w	r3, #816	@ 0x330
 8017c4e:	f8c0 9004 	str.w	r9, [r0, #4]
 8017c52:	f44f 7b48 	mov.w	fp, #800	@ 0x320
 8017c56:	f44f 7949 	mov.w	r9, #804	@ 0x324
 8017c5a:	f8c0 800c 	str.w	r8, [r0, #12]
 8017c5e:	f44f 7e50 	mov.w	lr, #832	@ 0x340
 8017c62:	f44f 784d 	mov.w	r8, #820	@ 0x334
 8017c66:	f44f 7c51 	mov.w	ip, #836	@ 0x344
 8017c6a:	f44f 7154 	mov.w	r1, #848	@ 0x350
 8017c6e:	f44f 7255 	mov.w	r2, #852	@ 0x354
 8017c72:	ed80 9a05 	vstr	s18, [r0, #20]
 8017c76:	edc0 8a07 	vstr	s17, [r0, #28]
 8017c7a:	ed80 8a09 	vstr	s16, [r0, #36]	@ 0x24
 8017c7e:	6103      	str	r3, [r0, #16]
 8017c80:	4b83      	ldr	r3, [pc, #524]	@ (8017e90 <draw_with_stencil+0x153c>)
 8017c82:	f8c0 b000 	str.w	fp, [r0]
 8017c86:	f8c0 9008 	str.w	r9, [r0, #8]
 8017c8a:	691b      	ldr	r3, [r3, #16]
 8017c8c:	62c7      	str	r7, [r0, #44]	@ 0x2c
 8017c8e:	4f81      	ldr	r7, [pc, #516]	@ (8017e94 <draw_with_stencil+0x1540>)
 8017c90:	f043 0305 	orr.w	r3, r3, #5
 8017c94:	6346      	str	r6, [r0, #52]	@ 0x34
 8017c96:	63c4      	str	r4, [r0, #60]	@ 0x3c
 8017c98:	6443      	str	r3, [r0, #68]	@ 0x44
 8017c9a:	f8c0 8018 	str.w	r8, [r0, #24]
 8017c9e:	f8c0 e020 	str.w	lr, [r0, #32]
 8017ca2:	f8c0 c028 	str.w	ip, [r0, #40]	@ 0x28
 8017ca6:	6301      	str	r1, [r0, #48]	@ 0x30
 8017ca8:	6382      	str	r2, [r0, #56]	@ 0x38
 8017caa:	6407      	str	r7, [r0, #64]	@ 0x40
 8017cac:	782e      	ldrb	r6, [r5, #0]
 8017cae:	2e00      	cmp	r6, #0
 8017cb0:	f43f ac3f 	beq.w	8017532 <draw_with_stencil+0xbde>
 8017cb4:	2101      	movs	r1, #1
 8017cb6:	f44f 7062 	mov.w	r0, #904	@ 0x388
 8017cba:	f006 f9cf 	bl	801e05c <nema_cl_add_cmd>
 8017cbe:	2300      	movs	r3, #0
 8017cc0:	782a      	ldrb	r2, [r5, #0]
 8017cc2:	461e      	mov	r6, r3
 8017cc4:	702b      	strb	r3, [r5, #0]
 8017cc6:	f88a 2000 	strb.w	r2, [sl]
 8017cca:	e432      	b.n	8017532 <draw_with_stencil+0xbde>
 8017ccc:	ee67 7ac6 	vnmul.f32	s15, s15, s12
 8017cd0:	f7fe bf75 	b.w	8016bbe <draw_with_stencil+0x26a>
 8017cd4:	f7fb fe50 	bl	8013978 <stroke_thin_path>
 8017cd8:	4606      	mov	r6, r0
 8017cda:	2800      	cmp	r0, #0
 8017cdc:	f43f aeed 	beq.w	8017aba <draw_with_stencil+0x1166>
 8017ce0:	e444      	b.n	801756c <draw_with_stencil+0xc18>
 8017ce2:	f8d9 3000 	ldr.w	r3, [r9]
 8017ce6:	2034      	movs	r0, #52	@ 0x34
 8017ce8:	8a19      	ldrh	r1, [r3, #16]
 8017cea:	f041 513c 	orr.w	r1, r1, #788529152	@ 0x2f000000
 8017cee:	f006 f9b5 	bl	801e05c <nema_cl_add_cmd>
 8017cf2:	e712      	b.n	8017b1a <draw_with_stencil+0x11c6>
 8017cf4:	428a      	cmp	r2, r1
 8017cf6:	f000 8232 	beq.w	801815e <draw_with_stencil+0x180a>
 8017cfa:	495f      	ldr	r1, [pc, #380]	@ (8017e78 <draw_with_stencil+0x1524>)
 8017cfc:	f006 020f 	and.w	r2, r6, #15
 8017d00:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
 8017d04:	4a5d      	ldr	r2, [pc, #372]	@ (8017e7c <draw_with_stencil+0x1528>)
 8017d06:	4f64      	ldr	r7, [pc, #400]	@ (8017e98 <draw_with_stencil+0x1544>)
 8017d08:	4302      	orrs	r2, r0
 8017d0a:	4864      	ldr	r0, [pc, #400]	@ (8017e9c <draw_with_stencil+0x1548>)
 8017d0c:	f3c6 2603 	ubfx	r6, r6, #8, #4
 8017d10:	e9cd 321e 	strd	r3, r2, [sp, #120]	@ 0x78
 8017d14:	e9cd 701c 	strd	r7, r0, [sp, #112]	@ 0x70
 8017d18:	2e00      	cmp	r6, #0
 8017d1a:	f000 823b 	beq.w	8018194 <draw_with_stencil+0x1840>
 8017d1e:	f851 1026 	ldr.w	r1, [r1, r6, lsl #2]
 8017d22:	4a57      	ldr	r2, [pc, #348]	@ (8017e80 <draw_with_stencil+0x152c>)
 8017d24:	9320      	str	r3, [sp, #128]	@ 0x80
 8017d26:	430a      	orrs	r2, r1
 8017d28:	9221      	str	r2, [sp, #132]	@ 0x84
 8017d2a:	2605      	movs	r6, #5
 8017d2c:	2304      	movs	r3, #4
 8017d2e:	2203      	movs	r2, #3
 8017d30:	af2c      	add	r7, sp, #176	@ 0xb0
 8017d32:	4950      	ldr	r1, [pc, #320]	@ (8017e74 <draw_with_stencil+0x1520>)
 8017d34:	4853      	ldr	r0, [pc, #332]	@ (8017e84 <draw_with_stencil+0x1530>)
 8017d36:	eb07 02c2 	add.w	r2, r7, r2, lsl #3
 8017d3a:	f842 1c40 	str.w	r1, [r2, #-64]
 8017d3e:	f842 0c3c 	str.w	r0, [r2, #-60]
 8017d42:	4951      	ldr	r1, [pc, #324]	@ (8017e88 <draw_with_stencil+0x1534>)
 8017d44:	4a51      	ldr	r2, [pc, #324]	@ (8017e8c <draw_with_stencil+0x1538>)
 8017d46:	eb07 03c3 	add.w	r3, r7, r3, lsl #3
 8017d4a:	2001      	movs	r0, #1
 8017d4c:	e943 1210 	strd	r1, r2, [r3, #-64]	@ 0x40
 8017d50:	f7fa fc02 	bl	8012558 <nema_set_rop_blend_mode>
 8017d54:	4631      	mov	r1, r6
 8017d56:	2200      	movs	r2, #0
 8017d58:	a81c      	add	r0, sp, #112	@ 0x70
 8017d5a:	f7fa fbdd 	bl	8012518 <nema_load_frag_shader>
 8017d5e:	f44f 401c 	mov.w	r0, #39936	@ 0x9c00
 8017d62:	f7fa fbf3 	bl	801254c <nema_set_frag_ptr>
 8017d66:	4b4e      	ldr	r3, [pc, #312]	@ (8017ea0 <draw_with_stencil+0x154c>)
 8017d68:	2002      	movs	r0, #2
 8017d6a:	6819      	ldr	r1, [r3, #0]
 8017d6c:	f7f9 f8f4 	bl	8010f58 <nema_set_const_reg>
 8017d70:	e754      	b.n	8017c1c <draw_with_stencil+0x12c8>
 8017d72:	f7f9 f931 	bl	8010fd8 <nema_supports_clip2>
 8017d76:	9b04      	ldr	r3, [sp, #16]
 8017d78:	9a04      	ldr	r2, [sp, #16]
 8017d7a:	edd3 9a32 	vldr	s19, [r3, #200]	@ 0xc8
 8017d7e:	eef5 9ac0 	vcmpe.f32	s19, #0.0
 8017d82:	f8d9 3000 	ldr.w	r3, [r9]
 8017d86:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017d8a:	edd3 7a04 	vldr	s15, [r3, #16]
 8017d8e:	bf48      	it	mi
 8017d90:	eddf 9a44 	vldrmi	s19, [pc, #272]	@ 8017ea4 <draw_with_stencil+0x1550>
 8017d94:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8017d98:	ed92 9a33 	vldr	s18, [r2, #204]	@ 0xcc
 8017d9c:	eeb4 7a69 	vcmp.f32	s14, s19
 8017da0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017da4:	eeb5 9ac0 	vcmpe.f32	s18, #0.0
 8017da8:	bf48      	it	mi
 8017daa:	eef0 9a47 	vmovmi.f32	s19, s14
 8017dae:	edd3 7a05 	vldr	s15, [r3, #20]
 8017db2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017db6:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8017dba:	bf48      	it	mi
 8017dbc:	ed9f 9a39 	vldrmi	s18, [pc, #228]	@ 8017ea4 <draw_with_stencil+0x1550>
 8017dc0:	eeb6 8a00 	vmov.f32	s16, #96	@ 0x3f000000  0.5
 8017dc4:	eef4 7a49 	vcmp.f32	s15, s18
 8017dc8:	ee37 7a69 	vsub.f32	s14, s14, s19
 8017dcc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017dd0:	ee77 8a08 	vadd.f32	s17, s14, s16
 8017dd4:	bf48      	it	mi
 8017dd6:	eeb0 9a67 	vmovmi.f32	s18, s15
 8017dda:	eef5 8ac0 	vcmpe.f32	s17, #0.0
 8017dde:	ee77 7ac9 	vsub.f32	s15, s15, s18
 8017de2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017de6:	4606      	mov	r6, r0
 8017de8:	ee37 8a88 	vadd.f32	s16, s15, s16
 8017dec:	dd05      	ble.n	8017dfa <draw_with_stencil+0x14a6>
 8017dee:	eeb5 8ac0 	vcmpe.f32	s16, #0.0
 8017df2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017df6:	f300 82c8 	bgt.w	801838a <draw_with_stencil+0x1a36>
 8017dfa:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 8017dfe:	ee79 8aa7 	vadd.f32	s17, s19, s15
 8017e02:	eef5 8ac0 	vcmpe.f32	s17, #0.0
 8017e06:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017e0a:	f340 81d7 	ble.w	80181bc <draw_with_stencil+0x1868>
 8017e0e:	eeb5 8ac0 	vcmpe.f32	s16, #0.0
 8017e12:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017e16:	f300 8255 	bgt.w	80182c4 <draw_with_stencil+0x1970>
 8017e1a:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 8017e1e:	ee39 9a27 	vadd.f32	s18, s18, s15
 8017e22:	eeb5 9ac0 	vcmpe.f32	s18, #0.0
 8017e26:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017e2a:	f300 81d9 	bgt.w	80181e0 <draw_with_stencil+0x188c>
 8017e2e:	f8d9 3000 	ldr.w	r3, [r9]
 8017e32:	ed93 8a04 	vldr	s16, [r3, #16]
 8017e36:	eeb8 8ac8 	vcvt.f32.s32	s16, s16
 8017e3a:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 8017e3e:	ee38 8a69 	vsub.f32	s16, s16, s19
 8017e42:	ee38 8a27 	vadd.f32	s16, s16, s15
 8017e46:	eeb5 8ac0 	vcmpe.f32	s16, #0.0
 8017e4a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017e4e:	dd04      	ble.n	8017e5a <draw_with_stencil+0x1506>
 8017e50:	eeb5 9ac0 	vcmpe.f32	s18, #0.0
 8017e54:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017e58:	dc26      	bgt.n	8017ea8 <draw_with_stencil+0x1554>
 8017e5a:	2e00      	cmp	r6, #0
 8017e5c:	f040 815f 	bne.w	801811e <draw_with_stencil+0x17ca>
 8017e60:	f7f9 f8dc 	bl	801101c <nema_set_clip_pop>
 8017e64:	e722      	b.n	8017cac <draw_with_stencil+0x1358>
 8017e66:	bf00      	nop
 8017e68:	0a18108b 	.word	0x0a18108b
 8017e6c:	01016204 	.word	0x01016204
 8017e70:	18001001 	.word	0x18001001
 8017e74:	18001000 	.word	0x18001000
 8017e78:	08035fc8 	.word	0x08035fc8
 8017e7c:	0a882206 	.word	0x0a882206
 8017e80:	0a581606 	.word	0x0a581606
 8017e84:	0a912406 	.word	0x0a912406
 8017e88:	10000002 	.word	0x10000002
 8017e8c:	8a5b1686 	.word	0x8a5b1686
 8017e90:	20000064 	.word	0x20000064
 8017e94:	ff000100 	.word	0xff000100
 8017e98:	1a181001 	.word	0x1a181001
 8017e9c:	050481a9 	.word	0x050481a9
 8017ea0:	200831c8 	.word	0x200831c8
 8017ea4:	00000000 	.word	0x00000000
 8017ea8:	eefc 7ac9 	vcvt.u32.f32	s15, s18
 8017eac:	edcd 7a05 	vstr	s15, [sp, #20]
 8017eb0:	9804      	ldr	r0, [sp, #16]
 8017eb2:	30a4      	adds	r0, #164	@ 0xa4
 8017eb4:	f7fa fa42 	bl	801233c <nema_set_matrix>
 8017eb8:	eebc 8ac8 	vcvt.u32.f32	s16, s16
 8017ebc:	eefd 9ae9 	vcvt.s32.f32	s19, s19
 8017ec0:	9b05      	ldr	r3, [sp, #20]
 8017ec2:	ee18 2a10 	vmov	r2, s16
 8017ec6:	2e00      	cmp	r6, #0
 8017ec8:	f040 8110 	bne.w	80180ec <draw_with_stencil+0x1798>
 8017ecc:	ee19 0a90 	vmov	r0, s19
 8017ed0:	4631      	mov	r1, r6
 8017ed2:	f7f9 f88b 	bl	8010fec <nema_set_clip_temp>
 8017ed6:	2009      	movs	r0, #9
 8017ed8:	f8d4 9028 	ldr.w	r9, [r4, #40]	@ 0x28
 8017edc:	edd4 9a0b 	vldr	s19, [r4, #44]	@ 0x2c
 8017ee0:	f8d4 8030 	ldr.w	r8, [r4, #48]	@ 0x30
 8017ee4:	ed94 9a0d 	vldr	s18, [r4, #52]	@ 0x34
 8017ee8:	edd4 8a0e 	vldr	s17, [r4, #56]	@ 0x38
 8017eec:	ed94 8a0f 	vldr	s16, [r4, #60]	@ 0x3c
 8017ef0:	6c27      	ldr	r7, [r4, #64]	@ 0x40
 8017ef2:	6c64      	ldr	r4, [r4, #68]	@ 0x44
 8017ef4:	f006 f856 	bl	801dfa4 <nema_cl_get_space>
 8017ef8:	2800      	cmp	r0, #0
 8017efa:	d0b1      	beq.n	8017e60 <draw_with_stencil+0x150c>
 8017efc:	f8c0 9004 	str.w	r9, [r0, #4]
 8017f00:	f44f 734c 	mov.w	r3, #816	@ 0x330
 8017f04:	f44f 7b48 	mov.w	fp, #800	@ 0x320
 8017f08:	f44f 7949 	mov.w	r9, #804	@ 0x324
 8017f0c:	edc0 9a03 	vstr	s19, [r0, #12]
 8017f10:	f8c0 8014 	str.w	r8, [r0, #20]
 8017f14:	f44f 7e50 	mov.w	lr, #832	@ 0x340
 8017f18:	f44f 784d 	mov.w	r8, #820	@ 0x334
 8017f1c:	f44f 7c51 	mov.w	ip, #836	@ 0x344
 8017f20:	f44f 7154 	mov.w	r1, #848	@ 0x350
 8017f24:	f44f 7255 	mov.w	r2, #852	@ 0x354
 8017f28:	63c4      	str	r4, [r0, #60]	@ 0x3c
 8017f2a:	4ca6      	ldr	r4, [pc, #664]	@ (80181c4 <draw_with_stencil+0x1870>)
 8017f2c:	f8c0 b000 	str.w	fp, [r0]
 8017f30:	f8c0 9008 	str.w	r9, [r0, #8]
 8017f34:	6103      	str	r3, [r0, #16]
 8017f36:	6923      	ldr	r3, [r4, #16]
 8017f38:	4ca3      	ldr	r4, [pc, #652]	@ (80181c8 <draw_with_stencil+0x1874>)
 8017f3a:	f043 0305 	orr.w	r3, r3, #5
 8017f3e:	ed80 9a07 	vstr	s18, [r0, #28]
 8017f42:	edc0 8a09 	vstr	s17, [r0, #36]	@ 0x24
 8017f46:	ed80 8a0b 	vstr	s16, [r0, #44]	@ 0x2c
 8017f4a:	6347      	str	r7, [r0, #52]	@ 0x34
 8017f4c:	6443      	str	r3, [r0, #68]	@ 0x44
 8017f4e:	f8c0 8018 	str.w	r8, [r0, #24]
 8017f52:	f8c0 e020 	str.w	lr, [r0, #32]
 8017f56:	f8c0 c028 	str.w	ip, [r0, #40]	@ 0x28
 8017f5a:	6301      	str	r1, [r0, #48]	@ 0x30
 8017f5c:	6382      	str	r2, [r0, #56]	@ 0x38
 8017f5e:	6404      	str	r4, [r0, #64]	@ 0x40
 8017f60:	e77b      	b.n	8017e5a <draw_with_stencil+0x1506>
 8017f62:	9e04      	ldr	r6, [sp, #16]
 8017f64:	4630      	mov	r0, r6
 8017f66:	f005 fb1d 	bl	801d5a4 <bind_tex1_according_paint>
 8017f6a:	f896 30dd 	ldrb.w	r3, [r6, #221]	@ 0xdd
 8017f6e:	2b02      	cmp	r3, #2
 8017f70:	d017      	beq.n	8017fa2 <draw_with_stencil+0x164e>
 8017f72:	2b03      	cmp	r3, #3
 8017f74:	d002      	beq.n	8017f7c <draw_with_stencil+0x1628>
 8017f76:	2b01      	cmp	r3, #1
 8017f78:	f47f addb 	bne.w	8017b32 <draw_with_stencil+0x11de>
 8017f7c:	9904      	ldr	r1, [sp, #16]
 8017f7e:	683a      	ldr	r2, [r7, #0]
 8017f80:	f891 30dc 	ldrb.w	r3, [r1, #220]	@ 0xdc
 8017f84:	6b12      	ldr	r2, [r2, #48]	@ 0x30
 8017f86:	07d8      	lsls	r0, r3, #31
 8017f88:	f140 80d1 	bpl.w	801812e <draw_with_stencil+0x17da>
 8017f8c:	f8d4 3084 	ldr.w	r3, [r4, #132]	@ 0x84
 8017f90:	4313      	orrs	r3, r2
 8017f92:	07db      	lsls	r3, r3, #31
 8017f94:	f100 82bb 	bmi.w	801850e <draw_with_stencil+0x1bba>
 8017f98:	f101 0038 	add.w	r0, r1, #56	@ 0x38
 8017f9c:	f7fa f9ce 	bl	801233c <nema_set_matrix>
 8017fa0:	e5c7      	b.n	8017b32 <draw_with_stencil+0x11de>
 8017fa2:	9904      	ldr	r1, [sp, #16]
 8017fa4:	683a      	ldr	r2, [r7, #0]
 8017fa6:	f891 30dc 	ldrb.w	r3, [r1, #220]	@ 0xdc
 8017faa:	6b12      	ldr	r2, [r2, #48]	@ 0x30
 8017fac:	07d8      	lsls	r0, r3, #31
 8017fae:	f140 80c6 	bpl.w	801813e <draw_with_stencil+0x17ea>
 8017fb2:	f8d4 3084 	ldr.w	r3, [r4, #132]	@ 0x84
 8017fb6:	4313      	orrs	r3, r2
 8017fb8:	07db      	lsls	r3, r3, #31
 8017fba:	f100 82bf 	bmi.w	801853c <draw_with_stencil+0x1be8>
 8017fbe:	f101 0008 	add.w	r0, r1, #8
 8017fc2:	f7fa f9bb 	bl	801233c <nema_set_matrix>
 8017fc6:	e5b4      	b.n	8017b32 <draw_with_stencil+0x11de>
 8017fc8:	2001      	movs	r0, #1
 8017fca:	f7fa f94f 	bl	801226c <nema_enable_tiling>
 8017fce:	683a      	ldr	r2, [r7, #0]
 8017fd0:	e5b9      	b.n	8017b46 <draw_with_stencil+0x11f2>
 8017fd2:	4e7e      	ldr	r6, [pc, #504]	@ (80181cc <draw_with_stencil+0x1878>)
 8017fd4:	e5eb      	b.n	8017bae <draw_with_stencil+0x125a>
 8017fd6:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8017fd8:	2b00      	cmp	r3, #0
 8017fda:	f000 82c0 	beq.w	801855e <draw_with_stencil+0x1c0a>
 8017fde:	f04f 0808 	mov.w	r8, #8
 8017fe2:	2000      	movs	r0, #0
 8017fe4:	f7f8 ffb4 	bl	8010f50 <nema_set_tex_color>
 8017fe8:	683b      	ldr	r3, [r7, #0]
 8017fea:	2002      	movs	r0, #2
 8017fec:	f8d3 c03c 	ldr.w	ip, [r3, #60]	@ 0x3c
 8017ff0:	f8bc 3012 	ldrh.w	r3, [ip, #18]
 8017ff4:	f8bc e010 	ldrh.w	lr, [ip, #16]
 8017ff8:	f8dc 100c 	ldr.w	r1, [ip, #12]
 8017ffc:	f8cd 8008 	str.w	r8, [sp, #8]
 8018000:	f8dc 2014 	ldr.w	r2, [ip, #20]
 8018004:	9201      	str	r2, [sp, #4]
 8018006:	f89c c01c 	ldrb.w	ip, [ip, #28]
 801800a:	4672      	mov	r2, lr
 801800c:	f8cd c000 	str.w	ip, [sp]
 8018010:	f7f8 fee8 	bl	8010de4 <nema_bind_tex>
 8018014:	683b      	ldr	r3, [r7, #0]
 8018016:	7f1b      	ldrb	r3, [r3, #28]
 8018018:	3b01      	subs	r3, #1
 801801a:	2b01      	cmp	r3, #1
 801801c:	f240 82ab 	bls.w	8018576 <draw_with_stencil+0x1c22>
 8018020:	f04f 33ff 	mov.w	r3, #4294967295
 8018024:	2202      	movs	r2, #2
 8018026:	2103      	movs	r1, #3
 8018028:	f44f 6080 	mov.w	r0, #1024	@ 0x400
 801802c:	f006 f938 	bl	801e2a0 <nema_set_blend>
 8018030:	f04f 0800 	mov.w	r8, #0
 8018034:	683b      	ldr	r3, [r7, #0]
 8018036:	edd3 0a11 	vldr	s1, [r3, #68]	@ 0x44
 801803a:	ed93 0a10 	vldr	s0, [r3, #64]	@ 0x40
 801803e:	f7fa fa37 	bl	80124b0 <nema_set_matrix_translate>
 8018042:	2009      	movs	r0, #9
 8018044:	ed94 aa0a 	vldr	s20, [r4, #40]	@ 0x28
 8018048:	edd4 aa0b 	vldr	s21, [r4, #44]	@ 0x2c
 801804c:	f8d4 b030 	ldr.w	fp, [r4, #48]	@ 0x30
 8018050:	6b66      	ldr	r6, [r4, #52]	@ 0x34
 8018052:	edd4 9a0e 	vldr	s19, [r4, #56]	@ 0x38
 8018056:	ed94 9a0f 	vldr	s18, [r4, #60]	@ 0x3c
 801805a:	edd4 8a10 	vldr	s17, [r4, #64]	@ 0x40
 801805e:	ed94 8a11 	vldr	s16, [r4, #68]	@ 0x44
 8018062:	f005 ff9f 	bl	801dfa4 <nema_cl_get_space>
 8018066:	b3a0      	cbz	r0, 80180d2 <draw_with_stencil+0x177e>
 8018068:	f44f 7348 	mov.w	r3, #800	@ 0x320
 801806c:	6003      	str	r3, [r0, #0]
 801806e:	f44f 734c 	mov.w	r3, #816	@ 0x330
 8018072:	f44f 7e49 	mov.w	lr, #804	@ 0x324
 8018076:	ed80 aa01 	vstr	s20, [r0, #4]
 801807a:	edc0 aa03 	vstr	s21, [r0, #12]
 801807e:	6103      	str	r3, [r0, #16]
 8018080:	f8c0 b014 	str.w	fp, [r0, #20]
 8018084:	61c6      	str	r6, [r0, #28]
 8018086:	f44f 7b4d 	mov.w	fp, #820	@ 0x334
 801808a:	f44f 7650 	mov.w	r6, #832	@ 0x340
 801808e:	f44f 7151 	mov.w	r1, #836	@ 0x344
 8018092:	f44f 7254 	mov.w	r2, #848	@ 0x350
 8018096:	f44f 7355 	mov.w	r3, #852	@ 0x354
 801809a:	edc0 9a09 	vstr	s19, [r0, #36]	@ 0x24
 801809e:	ed80 9a0b 	vstr	s18, [r0, #44]	@ 0x2c
 80180a2:	edc0 8a0d 	vstr	s17, [r0, #52]	@ 0x34
 80180a6:	ed80 8a0f 	vstr	s16, [r0, #60]	@ 0x3c
 80180aa:	f8df c118 	ldr.w	ip, [pc, #280]	@ 80181c4 <draw_with_stencil+0x1870>
 80180ae:	f8c0 e008 	str.w	lr, [r0, #8]
 80180b2:	f8dc c010 	ldr.w	ip, [ip, #16]
 80180b6:	f8df e110 	ldr.w	lr, [pc, #272]	@ 80181c8 <draw_with_stencil+0x1874>
 80180ba:	f04c 0c05 	orr.w	ip, ip, #5
 80180be:	f8c0 c044 	str.w	ip, [r0, #68]	@ 0x44
 80180c2:	f8c0 b018 	str.w	fp, [r0, #24]
 80180c6:	6206      	str	r6, [r0, #32]
 80180c8:	6281      	str	r1, [r0, #40]	@ 0x28
 80180ca:	6302      	str	r2, [r0, #48]	@ 0x30
 80180cc:	6383      	str	r3, [r0, #56]	@ 0x38
 80180ce:	f8c0 e040 	str.w	lr, [r0, #64]	@ 0x40
 80180d2:	f1b8 0f00 	cmp.w	r8, #0
 80180d6:	f43f ad26 	beq.w	8017b26 <draw_with_stencil+0x11d2>
 80180da:	f8d9 3000 	ldr.w	r3, [r9]
 80180de:	2034      	movs	r0, #52	@ 0x34
 80180e0:	8a19      	ldrh	r1, [r3, #16]
 80180e2:	f041 6100 	orr.w	r1, r1, #134217728	@ 0x8000000
 80180e6:	f005 ffb9 	bl	801e05c <nema_cl_add_cmd>
 80180ea:	e51c      	b.n	8017b26 <draw_with_stencil+0x11d2>
 80180ec:	ee19 0a90 	vmov	r0, s19
 80180f0:	2100      	movs	r1, #0
 80180f2:	f7f8 ff59 	bl	8010fa8 <nema_set_clip2>
 80180f6:	2009      	movs	r0, #9
 80180f8:	f8d4 9028 	ldr.w	r9, [r4, #40]	@ 0x28
 80180fc:	edd4 9a0b 	vldr	s19, [r4, #44]	@ 0x2c
 8018100:	f8d4 8030 	ldr.w	r8, [r4, #48]	@ 0x30
 8018104:	ed94 9a0d 	vldr	s18, [r4, #52]	@ 0x34
 8018108:	edd4 8a0e 	vldr	s17, [r4, #56]	@ 0x38
 801810c:	ed94 8a0f 	vldr	s16, [r4, #60]	@ 0x3c
 8018110:	6c27      	ldr	r7, [r4, #64]	@ 0x40
 8018112:	6c64      	ldr	r4, [r4, #68]	@ 0x44
 8018114:	f005 ff46 	bl	801dfa4 <nema_cl_get_space>
 8018118:	2800      	cmp	r0, #0
 801811a:	f47f aeef 	bne.w	8017efc <draw_with_stencil+0x15a8>
 801811e:	f647 73ff 	movw	r3, #32767	@ 0x7fff
 8018122:	2100      	movs	r1, #0
 8018124:	461a      	mov	r2, r3
 8018126:	4608      	mov	r0, r1
 8018128:	f7f8 ff3e 	bl	8010fa8 <nema_set_clip2>
 801812c:	e5be      	b.n	8017cac <draw_with_stencil+0x1358>
 801812e:	07d6      	lsls	r6, r2, #31
 8018130:	f101 0138 	add.w	r1, r1, #56	@ 0x38
 8018134:	d407      	bmi.n	8018146 <draw_with_stencil+0x17f2>
 8018136:	4608      	mov	r0, r1
 8018138:	f7fa f900 	bl	801233c <nema_set_matrix>
 801813c:	e4f9      	b.n	8017b32 <draw_with_stencil+0x11de>
 801813e:	07d6      	lsls	r6, r2, #31
 8018140:	f101 0108 	add.w	r1, r1, #8
 8018144:	d5f7      	bpl.n	8018136 <draw_with_stencil+0x17e2>
 8018146:	a81c      	add	r0, sp, #112	@ 0x70
 8018148:	f7f9 fd30 	bl	8011bac <nema_mat3x3_copy>
 801814c:	6839      	ldr	r1, [r7, #0]
 801814e:	a81c      	add	r0, sp, #112	@ 0x70
 8018150:	3170      	adds	r1, #112	@ 0x70
 8018152:	f7f9 fd77 	bl	8011c44 <nema_mat3x3_mul>
 8018156:	a81c      	add	r0, sp, #112	@ 0x70
 8018158:	f7fa f8f0 	bl	801233c <nema_set_matrix>
 801815c:	e4e9      	b.n	8017b32 <draw_with_stencil+0x11de>
 801815e:	2003      	movs	r0, #3
 8018160:	f005 ff20 	bl	801dfa4 <nema_cl_get_space>
 8018164:	2800      	cmp	r0, #0
 8018166:	f000 825e 	beq.w	8018626 <draw_with_stencil+0x1cd2>
 801816a:	f44f 77e8 	mov.w	r7, #464	@ 0x1d0
 801816e:	f44f 718e 	mov.w	r1, #284	@ 0x11c
 8018172:	f44f 7296 	mov.w	r2, #300	@ 0x12c
 8018176:	4b16      	ldr	r3, [pc, #88]	@ (80181d0 <draw_with_stencil+0x187c>)
 8018178:	6046      	str	r6, [r0, #4]
 801817a:	681b      	ldr	r3, [r3, #0]
 801817c:	6007      	str	r7, [r0, #0]
 801817e:	6143      	str	r3, [r0, #20]
 8018180:	4b14      	ldr	r3, [pc, #80]	@ (80181d4 <draw_with_stencil+0x1880>)
 8018182:	6081      	str	r1, [r0, #8]
 8018184:	e9c0 3203 	strd	r3, r2, [r0, #12]
 8018188:	e548      	b.n	8017c1c <draw_with_stencil+0x12c8>
 801818a:	2001      	movs	r0, #1
 801818c:	f7fa f882 	bl	8012294 <nema_enable_tiling_2x2>
 8018190:	683a      	ldr	r2, [r7, #0]
 8018192:	e4d8      	b.n	8017b46 <draw_with_stencil+0x11f2>
 8018194:	2604      	movs	r6, #4
 8018196:	2303      	movs	r3, #3
 8018198:	2202      	movs	r2, #2
 801819a:	e5c9      	b.n	8017d30 <draw_with_stencil+0x13dc>
 801819c:	9904      	ldr	r1, [sp, #16]
 801819e:	f891 102c 	ldrb.w	r1, [r1, #44]	@ 0x2c
 80181a2:	2901      	cmp	r1, #1
 80181a4:	f47f ace3 	bne.w	8017b6e <draw_with_stencil+0x121a>
 80181a8:	2100      	movs	r1, #0
 80181aa:	4f0b      	ldr	r7, [pc, #44]	@ (80181d8 <draw_with_stencil+0x1884>)
 80181ac:	480b      	ldr	r0, [pc, #44]	@ (80181dc <draw_with_stencil+0x1888>)
 80181ae:	911d      	str	r1, [sp, #116]	@ 0x74
 80181b0:	911f      	str	r1, [sp, #124]	@ 0x7c
 80181b2:	971c      	str	r7, [sp, #112]	@ 0x70
 80181b4:	901e      	str	r0, [sp, #120]	@ 0x78
 80181b6:	2104      	movs	r1, #4
 80181b8:	2703      	movs	r7, #3
 80181ba:	e4df      	b.n	8017b7c <draw_with_stencil+0x1228>
 80181bc:	ee39 9a27 	vadd.f32	s18, s18, s15
 80181c0:	e637      	b.n	8017e32 <draw_with_stencil+0x14de>
 80181c2:	bf00      	nop
 80181c4:	20000064 	.word	0x20000064
 80181c8:	ff000100 	.word	0xff000100
 80181cc:	18001001 	.word	0x18001001
 80181d0:	200831c8 	.word	0x200831c8
 80181d4:	941fdc13 	.word	0x941fdc13
 80181d8:	0a18108b 	.word	0x0a18108b
 80181dc:	0800110b 	.word	0x0800110b
 80181e0:	9b04      	ldr	r3, [sp, #16]
 80181e2:	f103 0080 	add.w	r0, r3, #128	@ 0x80
 80181e6:	f7fa f8a9 	bl	801233c <nema_set_matrix>
 80181ea:	eefc 7ac9 	vcvt.u32.f32	s15, s18
 80181ee:	eefc 8ae8 	vcvt.u32.f32	s17, s17
 80181f2:	edcd 7a05 	vstr	s15, [sp, #20]
 80181f6:	2e00      	cmp	r6, #0
 80181f8:	f040 81d2 	bne.w	80185a0 <draw_with_stencil+0x1c4c>
 80181fc:	ee17 3a90 	vmov	r3, s15
 8018200:	ee18 2a90 	vmov	r2, s17
 8018204:	4631      	mov	r1, r6
 8018206:	4630      	mov	r0, r6
 8018208:	f7f8 fef0 	bl	8010fec <nema_set_clip_temp>
 801820c:	2009      	movs	r0, #9
 801820e:	ed94 ba0a 	vldr	s22, [r4, #40]	@ 0x28
 8018212:	6ae7      	ldr	r7, [r4, #44]	@ 0x2c
 8018214:	edd4 aa0c 	vldr	s21, [r4, #48]	@ 0x30
 8018218:	ed94 aa0d 	vldr	s20, [r4, #52]	@ 0x34
 801821c:	ed94 9a0e 	vldr	s18, [r4, #56]	@ 0x38
 8018220:	edd4 8a0f 	vldr	s17, [r4, #60]	@ 0x3c
 8018224:	ed94 8a10 	vldr	s16, [r4, #64]	@ 0x40
 8018228:	f8d4 b044 	ldr.w	fp, [r4, #68]	@ 0x44
 801822c:	f005 feba 	bl	801dfa4 <nema_cl_get_space>
 8018230:	b3a8      	cbz	r0, 801829e <draw_with_stencil+0x194a>
 8018232:	f44f 7150 	mov.w	r1, #832	@ 0x340
 8018236:	f44f 7c4c 	mov.w	ip, #816	@ 0x330
 801823a:	f44f 7e49 	mov.w	lr, #804	@ 0x324
 801823e:	f44f 7848 	mov.w	r8, #800	@ 0x320
 8018242:	ed80 ba01 	vstr	s22, [r0, #4]
 8018246:	60c7      	str	r7, [r0, #12]
 8018248:	f44f 7254 	mov.w	r2, #848	@ 0x350
 801824c:	f44f 774d 	mov.w	r7, #820	@ 0x334
 8018250:	f44f 7355 	mov.w	r3, #852	@ 0x354
 8018254:	6201      	str	r1, [r0, #32]
 8018256:	f44f 7151 	mov.w	r1, #836	@ 0x344
 801825a:	edc0 aa05 	vstr	s21, [r0, #20]
 801825e:	ed80 aa07 	vstr	s20, [r0, #28]
 8018262:	ed80 9a09 	vstr	s18, [r0, #36]	@ 0x24
 8018266:	edc0 8a0b 	vstr	s17, [r0, #44]	@ 0x2c
 801826a:	ed80 8a0d 	vstr	s16, [r0, #52]	@ 0x34
 801826e:	f8c0 c010 	str.w	ip, [r0, #16]
 8018272:	f8df c40c 	ldr.w	ip, [pc, #1036]	@ 8018680 <draw_with_stencil+0x1d2c>
 8018276:	f8c0 e008 	str.w	lr, [r0, #8]
 801827a:	f8c0 8000 	str.w	r8, [r0]
 801827e:	f8dc c010 	ldr.w	ip, [ip, #16]
 8018282:	f8df e400 	ldr.w	lr, [pc, #1024]	@ 8018684 <draw_with_stencil+0x1d30>
 8018286:	f04c 0c05 	orr.w	ip, ip, #5
 801828a:	f8c0 b03c 	str.w	fp, [r0, #60]	@ 0x3c
 801828e:	f8c0 c044 	str.w	ip, [r0, #68]	@ 0x44
 8018292:	6187      	str	r7, [r0, #24]
 8018294:	6281      	str	r1, [r0, #40]	@ 0x28
 8018296:	6302      	str	r2, [r0, #48]	@ 0x30
 8018298:	6383      	str	r3, [r0, #56]	@ 0x38
 801829a:	f8c0 e040 	str.w	lr, [r0, #64]	@ 0x40
 801829e:	f8d9 3000 	ldr.w	r3, [r9]
 80182a2:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 80182a6:	ed93 8a04 	vldr	s16, [r3, #16]
 80182aa:	eeb8 8ac8 	vcvt.f32.s32	s16, s16
 80182ae:	ee38 8a69 	vsub.f32	s16, s16, s19
 80182b2:	ee38 8a27 	vadd.f32	s16, s16, s15
 80182b6:	eeb5 8ac0 	vcmpe.f32	s16, #0.0
 80182ba:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80182be:	f73f adf7 	bgt.w	8017eb0 <draw_with_stencil+0x155c>
 80182c2:	e5ca      	b.n	8017e5a <draw_with_stencil+0x1506>
 80182c4:	9b04      	ldr	r3, [sp, #16]
 80182c6:	f103 005c 	add.w	r0, r3, #92	@ 0x5c
 80182ca:	f7fa f837 	bl	801233c <nema_set_matrix>
 80182ce:	eebc 8ac8 	vcvt.u32.f32	s16, s16
 80182d2:	eefd 7ac9 	vcvt.s32.f32	s15, s18
 80182d6:	eebc 7ae8 	vcvt.u32.f32	s14, s17
 80182da:	ee18 3a10 	vmov	r3, s16
 80182de:	ee17 2a10 	vmov	r2, s14
 80182e2:	ee17 1a90 	vmov	r1, s15
 80182e6:	2e00      	cmp	r6, #0
 80182e8:	f040 8163 	bne.w	80185b2 <draw_with_stencil+0x1c5e>
 80182ec:	4630      	mov	r0, r6
 80182ee:	f7f8 fe7d 	bl	8010fec <nema_set_clip_temp>
 80182f2:	2009      	movs	r0, #9
 80182f4:	ed94 ca0a 	vldr	s24, [r4, #40]	@ 0x28
 80182f8:	6ae7      	ldr	r7, [r4, #44]	@ 0x2c
 80182fa:	edd4 ba0c 	vldr	s23, [r4, #48]	@ 0x30
 80182fe:	ed94 ba0d 	vldr	s22, [r4, #52]	@ 0x34
 8018302:	edd4 aa0e 	vldr	s21, [r4, #56]	@ 0x38
 8018306:	ed94 aa0f 	vldr	s20, [r4, #60]	@ 0x3c
 801830a:	ed94 8a10 	vldr	s16, [r4, #64]	@ 0x40
 801830e:	f8d4 b044 	ldr.w	fp, [r4, #68]	@ 0x44
 8018312:	f005 fe47 	bl	801dfa4 <nema_cl_get_space>
 8018316:	2800      	cmp	r0, #0
 8018318:	f43f ad7f 	beq.w	8017e1a <draw_with_stencil+0x14c6>
 801831c:	f44f 7150 	mov.w	r1, #832	@ 0x340
 8018320:	f44f 7c4c 	mov.w	ip, #816	@ 0x330
 8018324:	f44f 7e49 	mov.w	lr, #804	@ 0x324
 8018328:	f44f 7848 	mov.w	r8, #800	@ 0x320
 801832c:	ed80 ca01 	vstr	s24, [r0, #4]
 8018330:	60c7      	str	r7, [r0, #12]
 8018332:	f44f 7254 	mov.w	r2, #848	@ 0x350
 8018336:	f44f 774d 	mov.w	r7, #820	@ 0x334
 801833a:	f44f 7355 	mov.w	r3, #852	@ 0x354
 801833e:	6201      	str	r1, [r0, #32]
 8018340:	f44f 7151 	mov.w	r1, #836	@ 0x344
 8018344:	f8c0 c010 	str.w	ip, [r0, #16]
 8018348:	f8df c334 	ldr.w	ip, [pc, #820]	@ 8018680 <draw_with_stencil+0x1d2c>
 801834c:	f8c0 e008 	str.w	lr, [r0, #8]
 8018350:	f8c0 8000 	str.w	r8, [r0]
 8018354:	f8dc c010 	ldr.w	ip, [ip, #16]
 8018358:	f8df e328 	ldr.w	lr, [pc, #808]	@ 8018684 <draw_with_stencil+0x1d30>
 801835c:	f04c 0c05 	orr.w	ip, ip, #5
 8018360:	edc0 ba05 	vstr	s23, [r0, #20]
 8018364:	ed80 ba07 	vstr	s22, [r0, #28]
 8018368:	edc0 aa09 	vstr	s21, [r0, #36]	@ 0x24
 801836c:	ed80 aa0b 	vstr	s20, [r0, #44]	@ 0x2c
 8018370:	ed80 8a0d 	vstr	s16, [r0, #52]	@ 0x34
 8018374:	f8c0 b03c 	str.w	fp, [r0, #60]	@ 0x3c
 8018378:	f8c0 c044 	str.w	ip, [r0, #68]	@ 0x44
 801837c:	6187      	str	r7, [r0, #24]
 801837e:	6281      	str	r1, [r0, #40]	@ 0x28
 8018380:	6302      	str	r2, [r0, #48]	@ 0x30
 8018382:	6383      	str	r3, [r0, #56]	@ 0x38
 8018384:	f8c0 e040 	str.w	lr, [r0, #64]	@ 0x40
 8018388:	e547      	b.n	8017e1a <draw_with_stencil+0x14c6>
 801838a:	9b04      	ldr	r3, [sp, #16]
 801838c:	f103 0038 	add.w	r0, r3, #56	@ 0x38
 8018390:	f7f9 ffd4 	bl	801233c <nema_set_matrix>
 8018394:	eefc 8ae8 	vcvt.u32.f32	s17, s17
 8018398:	eebc 8ac8 	vcvt.u32.f32	s16, s16
 801839c:	eefd 7ae9 	vcvt.s32.f32	s15, s19
 80183a0:	eebd 7ac9 	vcvt.s32.f32	s14, s18
 80183a4:	ee18 3a10 	vmov	r3, s16
 80183a8:	ee18 2a90 	vmov	r2, s17
 80183ac:	ee17 1a10 	vmov	r1, s14
 80183b0:	ee17 0a90 	vmov	r0, s15
 80183b4:	2e00      	cmp	r6, #0
 80183b6:	f040 8100 	bne.w	80185ba <draw_with_stencil+0x1c66>
 80183ba:	f7f8 fe17 	bl	8010fec <nema_set_clip_temp>
 80183be:	2009      	movs	r0, #9
 80183c0:	f8d4 b028 	ldr.w	fp, [r4, #40]	@ 0x28
 80183c4:	edd4 aa0b 	vldr	s21, [r4, #44]	@ 0x2c
 80183c8:	ed94 ba0c 	vldr	s22, [r4, #48]	@ 0x30
 80183cc:	f8d4 8034 	ldr.w	r8, [r4, #52]	@ 0x34
 80183d0:	ed94 aa0e 	vldr	s20, [r4, #56]	@ 0x38
 80183d4:	edd4 8a0f 	vldr	s17, [r4, #60]	@ 0x3c
 80183d8:	6c27      	ldr	r7, [r4, #64]	@ 0x40
 80183da:	ed94 8a11 	vldr	s16, [r4, #68]	@ 0x44
 80183de:	f005 fde1 	bl	801dfa4 <nema_cl_get_space>
 80183e2:	2800      	cmp	r0, #0
 80183e4:	f000 811c 	beq.w	8018620 <draw_with_stencil+0x1ccc>
 80183e8:	f44f 7148 	mov.w	r1, #800	@ 0x320
 80183ec:	f8c0 b004 	str.w	fp, [r0, #4]
 80183f0:	f44f 724c 	mov.w	r2, #816	@ 0x330
 80183f4:	f44f 7b49 	mov.w	fp, #804	@ 0x324
 80183f8:	edc0 aa03 	vstr	s21, [r0, #12]
 80183fc:	4ba0      	ldr	r3, [pc, #640]	@ (8018680 <draw_with_stencil+0x1d2c>)
 80183fe:	6001      	str	r1, [r0, #0]
 8018400:	f8c0 b008 	str.w	fp, [r0, #8]
 8018404:	6102      	str	r2, [r0, #16]
 8018406:	691a      	ldr	r2, [r3, #16]
 8018408:	f8c0 801c 	str.w	r8, [r0, #28]
 801840c:	f042 0205 	orr.w	r2, r2, #5
 8018410:	f44f 7850 	mov.w	r8, #832	@ 0x340
 8018414:	f44f 7e51 	mov.w	lr, #836	@ 0x344
 8018418:	f44f 7c54 	mov.w	ip, #848	@ 0x350
 801841c:	6347      	str	r7, [r0, #52]	@ 0x34
 801841e:	6442      	str	r2, [r0, #68]	@ 0x44
 8018420:	f44f 7755 	mov.w	r7, #852	@ 0x354
 8018424:	f44f 724d 	mov.w	r2, #820	@ 0x334
 8018428:	ed80 ba05 	vstr	s22, [r0, #20]
 801842c:	ed80 aa09 	vstr	s20, [r0, #36]	@ 0x24
 8018430:	edc0 8a0b 	vstr	s17, [r0, #44]	@ 0x2c
 8018434:	ed80 8a0f 	vstr	s16, [r0, #60]	@ 0x3c
 8018438:	4992      	ldr	r1, [pc, #584]	@ (8018684 <draw_with_stencil+0x1d30>)
 801843a:	f8d9 3000 	ldr.w	r3, [r9]
 801843e:	6182      	str	r2, [r0, #24]
 8018440:	f8c0 8020 	str.w	r8, [r0, #32]
 8018444:	f8c0 e028 	str.w	lr, [r0, #40]	@ 0x28
 8018448:	f8c0 c030 	str.w	ip, [r0, #48]	@ 0x30
 801844c:	6387      	str	r7, [r0, #56]	@ 0x38
 801844e:	6401      	str	r1, [r0, #64]	@ 0x40
 8018450:	ed93 7a05 	vldr	s14, [r3, #20]
 8018454:	eeb8 8ac7 	vcvt.f32.s32	s16, s14
 8018458:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 801845c:	ee38 8a49 	vsub.f32	s16, s16, s18
 8018460:	ee38 8a27 	vadd.f32	s16, s16, s15
 8018464:	e4c9      	b.n	8017dfa <draw_with_stencil+0x14a6>
 8018466:	4f88      	ldr	r7, [pc, #544]	@ (8018688 <draw_with_stencil+0x1d34>)
 8018468:	4631      	mov	r1, r6
 801846a:	f44f 70e8 	mov.w	r0, #464	@ 0x1d0
 801846e:	f10d 081c 	add.w	r8, sp, #28
 8018472:	f005 fdf3 	bl	801e05c <nema_cl_add_cmd>
 8018476:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 8018478:	e8a8 000f 	stmia.w	r8!, {r0, r1, r2, r3}
 801847c:	e9d7 0100 	ldrd	r0, r1, [r7]
 8018480:	f107 0e08 	add.w	lr, r7, #8
 8018484:	f10d 0b34 	add.w	fp, sp, #52	@ 0x34
 8018488:	e888 0003 	stmia.w	r8, {r0, r1}
 801848c:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8018490:	e8ab 000f 	stmia.w	fp!, {r0, r1, r2, r3}
 8018494:	e89e 0003 	ldmia.w	lr, {r0, r1}
 8018498:	f10d 0c70 	add.w	ip, sp, #112	@ 0x70
 801849c:	f107 0e20 	add.w	lr, r7, #32
 80184a0:	9705      	str	r7, [sp, #20]
 80184a2:	e88b 0003 	stmia.w	fp, {r0, r1}
 80184a6:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 80184aa:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 80184ae:	e89e 000f 	ldmia.w	lr, {r0, r1, r2, r3}
 80184b2:	9f04      	ldr	r7, [sp, #16]
 80184b4:	eef7 7a00 	vmov.f32	s15, #112	@ 0x3f800000  1.0
 80184b8:	ed97 7a36 	vldr	s14, [r7, #216]	@ 0xd8
 80184bc:	eeb4 7ae7 	vcmpe.f32	s14, s15
 80184c0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80184c4:	9f05      	ldr	r7, [sp, #20]
 80184c6:	f10d 084c 	add.w	r8, sp, #76	@ 0x4c
 80184ca:	f107 0740 	add.w	r7, r7, #64	@ 0x40
 80184ce:	e88c 000f 	stmia.w	ip, {r0, r1, r2, r3}
 80184d2:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 80184d4:	e8a8 000f 	stmia.w	r8!, {r0, r1, r2, r3}
 80184d8:	e897 0003 	ldmia.w	r7, {r0, r1}
 80184dc:	e888 0003 	stmia.w	r8, {r0, r1}
 80184e0:	db6e      	blt.n	80185c0 <draw_with_stencil+0x1c6c>
 80184e2:	9f04      	ldr	r7, [sp, #16]
 80184e4:	f897 30dd 	ldrb.w	r3, [r7, #221]	@ 0xdd
 80184e8:	2b02      	cmp	r3, #2
 80184ea:	f000 80a4 	beq.w	8018636 <draw_with_stencil+0x1ce2>
 80184ee:	2008      	movs	r0, #8
 80184f0:	2102      	movs	r1, #2
 80184f2:	4f66      	ldr	r7, [pc, #408]	@ (801868c <draw_with_stencil+0x1d38>)
 80184f4:	f016 6280 	ands.w	r2, r6, #67108864	@ 0x4000000
 80184f8:	f040 808c 	bne.w	8018614 <draw_with_stencil+0x1cc0>
 80184fc:	ab0d      	add	r3, sp, #52	@ 0x34
 80184fe:	4418      	add	r0, r3
 8018500:	f7fa f80a 	bl	8012518 <nema_load_frag_shader>
 8018504:	4638      	mov	r0, r7
 8018506:	f7fa f821 	bl	801254c <nema_set_frag_ptr>
 801850a:	f7ff bb87 	b.w	8017c1c <draw_with_stencil+0x12c8>
 801850e:	a813      	add	r0, sp, #76	@ 0x4c
 8018510:	495f      	ldr	r1, [pc, #380]	@ (8018690 <draw_with_stencil+0x1d3c>)
 8018512:	f7f9 fb4b 	bl	8011bac <nema_mat3x3_copy>
 8018516:	a813      	add	r0, sp, #76	@ 0x4c
 8018518:	f7f9 fc8a 	bl	8011e30 <nema_mat3x3_invert>
 801851c:	b9d8      	cbnz	r0, 8018556 <draw_with_stencil+0x1c02>
 801851e:	9b04      	ldr	r3, [sp, #16]
 8018520:	a81c      	add	r0, sp, #112	@ 0x70
 8018522:	f103 0138 	add.w	r1, r3, #56	@ 0x38
 8018526:	f7f9 fb41 	bl	8011bac <nema_mat3x3_copy>
 801852a:	a81c      	add	r0, sp, #112	@ 0x70
 801852c:	a913      	add	r1, sp, #76	@ 0x4c
 801852e:	f7f9 fb89 	bl	8011c44 <nema_mat3x3_mul>
 8018532:	a81c      	add	r0, sp, #112	@ 0x70
 8018534:	f7f9 ff02 	bl	801233c <nema_set_matrix>
 8018538:	f7ff bafb 	b.w	8017b32 <draw_with_stencil+0x11de>
 801853c:	a813      	add	r0, sp, #76	@ 0x4c
 801853e:	4954      	ldr	r1, [pc, #336]	@ (8018690 <draw_with_stencil+0x1d3c>)
 8018540:	f7f9 fb34 	bl	8011bac <nema_mat3x3_copy>
 8018544:	a813      	add	r0, sp, #76	@ 0x4c
 8018546:	f7f9 fc73 	bl	8011e30 <nema_mat3x3_invert>
 801854a:	b920      	cbnz	r0, 8018556 <draw_with_stencil+0x1c02>
 801854c:	9b04      	ldr	r3, [sp, #16]
 801854e:	a81c      	add	r0, sp, #112	@ 0x70
 8018550:	f103 0108 	add.w	r1, r3, #8
 8018554:	e7e7      	b.n	8018526 <draw_with_stencil+0x1bd2>
 8018556:	f44f 2680 	mov.w	r6, #262144	@ 0x40000
 801855a:	f7fe bfdb 	b.w	8017514 <draw_with_stencil+0xbc0>
 801855e:	f44f 6000 	mov.w	r0, #2048	@ 0x800
 8018562:	f004 fbc7 	bl	801ccf4 <nema_vg_set_error>
 8018566:	f44f 6000 	mov.w	r0, #2048	@ 0x800
 801856a:	f004 fbc3 	bl	801ccf4 <nema_vg_set_error>
 801856e:	f44f 6600 	mov.w	r6, #2048	@ 0x800
 8018572:	f7fe bfde 	b.w	8017532 <draw_with_stencil+0xbde>
 8018576:	2000      	movs	r0, #0
 8018578:	f8d9 1000 	ldr.w	r1, [r9]
 801857c:	e9d1 2304 	ldrd	r2, r3, [r1, #16]
 8018580:	68c9      	ldr	r1, [r1, #12]
 8018582:	e9cd 8200 	strd	r8, r2, [sp]
 8018586:	9002      	str	r0, [sp, #8]
 8018588:	4630      	mov	r0, r6
 801858a:	f7f8 fc2b 	bl	8010de4 <nema_bind_tex>
 801858e:	2303      	movs	r3, #3
 8018590:	2202      	movs	r2, #2
 8018592:	4631      	mov	r1, r6
 8018594:	f44f 6080 	mov.w	r0, #1024	@ 0x400
 8018598:	46b0      	mov	r8, r6
 801859a:	f005 fe81 	bl	801e2a0 <nema_set_blend>
 801859e:	e549      	b.n	8018034 <draw_with_stencil+0x16e0>
 80185a0:	2100      	movs	r1, #0
 80185a2:	ee17 3a90 	vmov	r3, s15
 80185a6:	4608      	mov	r0, r1
 80185a8:	ee18 2a90 	vmov	r2, s17
 80185ac:	f7f8 fcfc 	bl	8010fa8 <nema_set_clip2>
 80185b0:	e62c      	b.n	801820c <draw_with_stencil+0x18b8>
 80185b2:	2000      	movs	r0, #0
 80185b4:	f7f8 fcf8 	bl	8010fa8 <nema_set_clip2>
 80185b8:	e69b      	b.n	80182f2 <draw_with_stencil+0x199e>
 80185ba:	f7f8 fcf5 	bl	8010fa8 <nema_set_clip2>
 80185be:	e6fe      	b.n	80183be <draw_with_stencil+0x1a6a>
 80185c0:	9b04      	ldr	r3, [sp, #16]
 80185c2:	f893 30dd 	ldrb.w	r3, [r3, #221]	@ 0xdd
 80185c6:	2b02      	cmp	r3, #2
 80185c8:	d049      	beq.n	801865e <draw_with_stencil+0x1d0a>
 80185ca:	2103      	movs	r1, #3
 80185cc:	2008      	movs	r0, #8
 80185ce:	2302      	movs	r3, #2
 80185d0:	4f2e      	ldr	r7, [pc, #184]	@ (801868c <draw_with_stencil+0x1d38>)
 80185d2:	f8df c0c8 	ldr.w	ip, [pc, #200]	@ 801869c <draw_with_stencil+0x1d48>
 80185d6:	f016 6280 	ands.w	r2, r6, #67108864	@ 0x4000000
 80185da:	d139      	bne.n	8018650 <draw_with_stencil+0x1cfc>
 80185dc:	4619      	mov	r1, r3
 80185de:	ab13      	add	r3, sp, #76	@ 0x4c
 80185e0:	4418      	add	r0, r3
 80185e2:	f7f9 ff99 	bl	8012518 <nema_load_frag_shader>
 80185e6:	4638      	mov	r0, r7
 80185e8:	f7f9 ffb0 	bl	801254c <nema_set_frag_ptr>
 80185ec:	9b04      	ldr	r3, [sp, #16]
 80185ee:	eddf 6a29 	vldr	s13, [pc, #164]	@ 8018694 <draw_with_stencil+0x1d40>
 80185f2:	edd3 7a36 	vldr	s15, [r3, #216]	@ 0xd8
 80185f6:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 80185fa:	ee67 7aa6 	vmul.f32	s15, s15, s13
 80185fe:	ee77 7a87 	vadd.f32	s15, s15, s14
 8018602:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8018606:	ee17 0a90 	vmov	r0, s15
 801860a:	0600      	lsls	r0, r0, #24
 801860c:	f006 fa0e 	bl	801ea2c <nema_set_const_color>
 8018610:	f7ff bb04 	b.w	8017c1c <draw_with_stencil+0x12c8>
 8018614:	ab07      	add	r3, sp, #28
 8018616:	4418      	add	r0, r3
 8018618:	2200      	movs	r2, #0
 801861a:	f7f9 ff7d 	bl	8012518 <nema_load_frag_shader>
 801861e:	e771      	b.n	8018504 <draw_with_stencil+0x1bb0>
 8018620:	f8d9 3000 	ldr.w	r3, [r9]
 8018624:	e714      	b.n	8018450 <draw_with_stencil+0x1afc>
 8018626:	f44f 7000 	mov.w	r0, #512	@ 0x200
 801862a:	f004 fb63 	bl	801ccf4 <nema_vg_set_error>
 801862e:	f44f 7600 	mov.w	r6, #512	@ 0x200
 8018632:	f7fe bf6f 	b.w	8017514 <draw_with_stencil+0xbc0>
 8018636:	f897 202c 	ldrb.w	r2, [r7, #44]	@ 0x2c
 801863a:	4b17      	ldr	r3, [pc, #92]	@ (8018698 <draw_with_stencil+0x1d44>)
 801863c:	2a01      	cmp	r2, #1
 801863e:	4f13      	ldr	r7, [pc, #76]	@ (801868c <draw_with_stencil+0x1d38>)
 8018640:	bf13      	iteet	ne
 8018642:	2008      	movne	r0, #8
 8018644:	461f      	moveq	r7, r3
 8018646:	2000      	moveq	r0, #0
 8018648:	2102      	movne	r1, #2
 801864a:	bf08      	it	eq
 801864c:	2103      	moveq	r1, #3
 801864e:	e751      	b.n	80184f4 <draw_with_stencil+0x1ba0>
 8018650:	ab1c      	add	r3, sp, #112	@ 0x70
 8018652:	4418      	add	r0, r3
 8018654:	2200      	movs	r2, #0
 8018656:	4667      	mov	r7, ip
 8018658:	f7f9 ff5e 	bl	8012518 <nema_load_frag_shader>
 801865c:	e7c3      	b.n	80185e6 <draw_with_stencil+0x1c92>
 801865e:	9a04      	ldr	r2, [sp, #16]
 8018660:	f892 202c 	ldrb.w	r2, [r2, #44]	@ 0x2c
 8018664:	2a01      	cmp	r2, #1
 8018666:	d005      	beq.n	8018674 <draw_with_stencil+0x1d20>
 8018668:	2103      	movs	r1, #3
 801866a:	2008      	movs	r0, #8
 801866c:	4f07      	ldr	r7, [pc, #28]	@ (801868c <draw_with_stencil+0x1d38>)
 801866e:	f8df c02c 	ldr.w	ip, [pc, #44]	@ 801869c <draw_with_stencil+0x1d48>
 8018672:	e7b0      	b.n	80185d6 <draw_with_stencil+0x1c82>
 8018674:	4f08      	ldr	r7, [pc, #32]	@ (8018698 <draw_with_stencil+0x1d44>)
 8018676:	2104      	movs	r1, #4
 8018678:	46bc      	mov	ip, r7
 801867a:	2000      	movs	r0, #0
 801867c:	2303      	movs	r3, #3
 801867e:	e7aa      	b.n	80185d6 <draw_with_stencil+0x1c82>
 8018680:	20000064 	.word	0x20000064
 8018684:	ff000100 	.word	0xff000100
 8018688:	08033858 	.word	0x08033858
 801868c:	941e8000 	.word	0x941e8000
 8018690:	200831cc 	.word	0x200831cc
 8018694:	437f0000 	.word	0x437f0000
 8018698:	941da000 	.word	0x941da000
 801869c:	941f8000 	.word	0x941f8000

080186a0 <nema_vg_draw_path>:
 80186a0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80186a4:	ed2d 8b04 	vpush	{d8-d9}
 80186a8:	b087      	sub	sp, #28
 80186aa:	4604      	mov	r4, r0
 80186ac:	460d      	mov	r5, r1
 80186ae:	f005 fc05 	bl	801debc <nema_cl_get_bound>
 80186b2:	2800      	cmp	r0, #0
 80186b4:	f000 82e9 	beq.w	8018c8a <nema_vg_draw_path+0x5ea>
 80186b8:	2c00      	cmp	r4, #0
 80186ba:	f000 80ca 	beq.w	8018852 <nema_vg_draw_path+0x1b2>
 80186be:	2d00      	cmp	r5, #0
 80186c0:	f000 80c7 	beq.w	8018852 <nema_vg_draw_path+0x1b2>
 80186c4:	4f76      	ldr	r7, [pc, #472]	@ (80188a0 <nema_vg_draw_path+0x200>)
 80186c6:	683b      	ldr	r3, [r7, #0]
 80186c8:	2b00      	cmp	r3, #0
 80186ca:	f000 80c2 	beq.w	8018852 <nema_vg_draw_path+0x1b2>
 80186ce:	6862      	ldr	r2, [r4, #4]
 80186d0:	2a00      	cmp	r2, #0
 80186d2:	f000 80cc 	beq.w	801886e <nema_vg_draw_path+0x1ce>
 80186d6:	edd4 7a08 	vldr	s15, [r4, #32]
 80186da:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80186de:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80186e2:	f100 829a 	bmi.w	8018c1a <nema_vg_draw_path+0x57a>
 80186e6:	edd4 7a09 	vldr	s15, [r4, #36]	@ 0x24
 80186ea:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80186ee:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80186f2:	f100 8292 	bmi.w	8018c1a <nema_vg_draw_path+0x57a>
 80186f6:	edd5 7a35 	vldr	s15, [r5, #212]	@ 0xd4
 80186fa:	f8df 81b8 	ldr.w	r8, [pc, #440]	@ 80188b4 <nema_vg_draw_path+0x214>
 80186fe:	7f1a      	ldrb	r2, [r3, #28]
 8018700:	edc8 7a00 	vstr	s15, [r8]
 8018704:	b95a      	cbnz	r2, 801871e <nema_vg_draw_path+0x7e>
 8018706:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801870a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801870e:	d806      	bhi.n	801871e <nema_vg_draw_path+0x7e>
 8018710:	2400      	movs	r4, #0
 8018712:	4620      	mov	r0, r4
 8018714:	b007      	add	sp, #28
 8018716:	ecbd 8b04 	vpop	{d8-d9}
 801871a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801871e:	6b19      	ldr	r1, [r3, #48]	@ 0x30
 8018720:	f8d4 6084 	ldr.w	r6, [r4, #132]	@ 0x84
 8018724:	7f5a      	ldrb	r2, [r3, #29]
 8018726:	430e      	orrs	r6, r1
 8018728:	f8df 918c 	ldr.w	r9, [pc, #396]	@ 80188b8 <nema_vg_draw_path+0x218>
 801872c:	7f99      	ldrb	r1, [r3, #30]
 801872e:	485d      	ldr	r0, [pc, #372]	@ (80188a4 <nema_vg_draw_path+0x204>)
 8018730:	f006 0601 	and.w	r6, r6, #1
 8018734:	f002 0301 	and.w	r3, r2, #1
 8018738:	f889 6000 	strb.w	r6, [r9]
 801873c:	7003      	strb	r3, [r0, #0]
 801873e:	b111      	cbz	r1, 8018746 <nema_vg_draw_path+0xa6>
 8018740:	2300      	movs	r3, #0
 8018742:	f889 3000 	strb.w	r3, [r9]
 8018746:	4858      	ldr	r0, [pc, #352]	@ (80188a8 <nema_vg_draw_path+0x208>)
 8018748:	f7f9 fa22 	bl	8011b90 <nema_mat3x3_load_identity>
 801874c:	f899 3000 	ldrb.w	r3, [r9]
 8018750:	2b00      	cmp	r3, #0
 8018752:	f000 8088 	beq.w	8018866 <nema_vg_draw_path+0x1c6>
 8018756:	6839      	ldr	r1, [r7, #0]
 8018758:	6b0b      	ldr	r3, [r1, #48]	@ 0x30
 801875a:	07db      	lsls	r3, r3, #31
 801875c:	f100 8091 	bmi.w	8018882 <nema_vg_draw_path+0x1e2>
 8018760:	f8d4 3084 	ldr.w	r3, [r4, #132]	@ 0x84
 8018764:	07d9      	lsls	r1, r3, #31
 8018766:	f100 8411 	bmi.w	8018f8c <nema_vg_draw_path+0x8ec>
 801876a:	edd5 7a36 	vldr	s15, [r5, #216]	@ 0xd8
 801876e:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8018772:	eef4 7ac7 	vcmpe.f32	s15, s14
 8018776:	ed98 8a00 	vldr	s16, [r8]
 801877a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801877e:	4b4b      	ldr	r3, [pc, #300]	@ (80188ac <nema_vg_draw_path+0x20c>)
 8018780:	6b28      	ldr	r0, [r5, #48]	@ 0x30
 8018782:	ed83 8a00 	vstr	s16, [r3]
 8018786:	f8df b134 	ldr.w	fp, [pc, #308]	@ 80188bc <nema_vg_draw_path+0x21c>
 801878a:	4b49      	ldr	r3, [pc, #292]	@ (80188b0 <nema_vg_draw_path+0x210>)
 801878c:	f8cb 0000 	str.w	r0, [fp]
 8018790:	ed83 8a00 	vstr	s16, [r3]
 8018794:	f100 824d 	bmi.w	8018c32 <nema_vg_draw_path+0x592>
 8018798:	683b      	ldr	r3, [r7, #0]
 801879a:	f8d3 a024 	ldr.w	sl, [r3, #36]	@ 0x24
 801879e:	f01a 6f80 	tst.w	sl, #67108864	@ 0x4000000
 80187a2:	d022      	beq.n	80187ea <nema_vg_draw_path+0x14a>
 80187a4:	0e01      	lsrs	r1, r0, #24
 80187a6:	f3c0 4e07 	ubfx	lr, r0, #16, #8
 80187aa:	b2c2      	uxtb	r2, r0
 80187ac:	f3c0 2c07 	ubfx	ip, r0, #8, #8
 80187b0:	fb01 f202 	mul.w	r2, r1, r2
 80187b4:	fb01 fc0c 	mul.w	ip, r1, ip
 80187b8:	fb01 f10e 	mul.w	r1, r1, lr
 80187bc:	f8df e100 	ldr.w	lr, [pc, #256]	@ 80188c0 <nema_vg_draw_path+0x220>
 80187c0:	9101      	str	r1, [sp, #4]
 80187c2:	fbae 1202 	umull	r1, r2, lr, r2
 80187c6:	fbae 1c0c 	umull	r1, ip, lr, ip
 80187ca:	9901      	ldr	r1, [sp, #4]
 80187cc:	f000 407f 	and.w	r0, r0, #4278190080	@ 0xff000000
 80187d0:	fbae e101 	umull	lr, r1, lr, r1
 80187d4:	ea40 10d2 	orr.w	r0, r0, r2, lsr #7
 80187d8:	ea4f 1cdc 	mov.w	ip, ip, lsr #7
 80187dc:	ea40 200c 	orr.w	r0, r0, ip, lsl #8
 80187e0:	09c9      	lsrs	r1, r1, #7
 80187e2:	ea40 4001 	orr.w	r0, r0, r1, lsl #16
 80187e6:	f8cb 0000 	str.w	r0, [fp]
 80187ea:	f893 c01c 	ldrb.w	ip, [r3, #28]
 80187ee:	f899 1000 	ldrb.w	r1, [r9]
 80187f2:	f1bc 0f00 	cmp.w	ip, #0
 80187f6:	f040 81fe 	bne.w	8018bf6 <nema_vg_draw_path+0x556>
 80187fa:	2900      	cmp	r1, #0
 80187fc:	f040 82d6 	bne.w	8018dac <nema_vg_draw_path+0x70c>
 8018800:	2e00      	cmp	r6, #0
 8018802:	f040 833b 	bne.w	8018e7c <nema_vg_draw_path+0x7dc>
 8018806:	eeb0 7a48 	vmov.f32	s14, s16
 801880a:	eef0 7a48 	vmov.f32	s15, s16
 801880e:	ee37 6ac7 	vsub.f32	s12, s15, s14
 8018812:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
 8018816:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801881a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801881e:	bf48      	it	mi
 8018820:	eeb1 6a46 	vnegmi.f32	s12, s12
 8018824:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018828:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 801882c:	bf4c      	ite	mi
 801882e:	eef1 5a67 	vnegmi.f32	s11, s15
 8018832:	eef0 5a67 	vmovpl.f32	s11, s15
 8018836:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801883a:	f100 83d5 	bmi.w	8018fe8 <nema_vg_draw_path+0x948>
 801883e:	eeb4 7ae5 	vcmpe.f32	s14, s11
 8018842:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018846:	dc3f      	bgt.n	80188c8 <nema_vg_draw_path+0x228>
 8018848:	eddf 6a1e 	vldr	s13, [pc, #120]	@ 80188c4 <nema_vg_draw_path+0x224>
 801884c:	ee67 6a26 	vmul.f32	s13, s14, s13
 8018850:	e045      	b.n	80188de <nema_vg_draw_path+0x23e>
 8018852:	2001      	movs	r0, #1
 8018854:	f004 fa4e 	bl	801ccf4 <nema_vg_set_error>
 8018858:	2401      	movs	r4, #1
 801885a:	4620      	mov	r0, r4
 801885c:	b007      	add	sp, #28
 801885e:	ecbd 8b04 	vpop	{d8-d9}
 8018862:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018866:	2e00      	cmp	r6, #0
 8018868:	f43f af7f 	beq.w	801876a <nema_vg_draw_path+0xca>
 801886c:	e773      	b.n	8018756 <nema_vg_draw_path+0xb6>
 801886e:	2410      	movs	r4, #16
 8018870:	2010      	movs	r0, #16
 8018872:	f004 fa3f 	bl	801ccf4 <nema_vg_set_error>
 8018876:	4620      	mov	r0, r4
 8018878:	b007      	add	sp, #28
 801887a:	ecbd 8b04 	vpop	{d8-d9}
 801887e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018882:	4809      	ldr	r0, [pc, #36]	@ (80188a8 <nema_vg_draw_path+0x208>)
 8018884:	314c      	adds	r1, #76	@ 0x4c
 8018886:	f7f9 f991 	bl	8011bac <nema_mat3x3_copy>
 801888a:	f8d4 3084 	ldr.w	r3, [r4, #132]	@ 0x84
 801888e:	07d8      	lsls	r0, r3, #31
 8018890:	f57f af6b 	bpl.w	801876a <nema_vg_draw_path+0xca>
 8018894:	f104 0160 	add.w	r1, r4, #96	@ 0x60
 8018898:	4803      	ldr	r0, [pc, #12]	@ (80188a8 <nema_vg_draw_path+0x208>)
 801889a:	f7f9 f9d3 	bl	8011c44 <nema_mat3x3_mul>
 801889e:	e764      	b.n	801876a <nema_vg_draw_path+0xca>
 80188a0:	20083148 	.word	0x20083148
 80188a4:	2008315c 	.word	0x2008315c
 80188a8:	200831cc 	.word	0x200831cc
 80188ac:	20000138 	.word	0x20000138
 80188b0:	2000013c 	.word	0x2000013c
 80188b4:	20000134 	.word	0x20000134
 80188b8:	20083195 	.word	0x20083195
 80188bc:	200831c8 	.word	0x200831c8
 80188c0:	80808081 	.word	0x80808081
 80188c4:	3727c5ac 	.word	0x3727c5ac
 80188c8:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80188cc:	ed5f 6a03 	vldr	s13, [pc, #-12]	@ 80188c4 <nema_vg_draw_path+0x224>
 80188d0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80188d4:	bf4c      	ite	mi
 80188d6:	ee67 6ae6 	vnmulmi.f32	s13, s15, s13
 80188da:	ee67 6aa6 	vmulpl.f32	s13, s15, s13
 80188de:	eeb4 6ae6 	vcmpe.f32	s12, s13
 80188e2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80188e6:	d807      	bhi.n	80188f8 <nema_vg_draw_path+0x258>
 80188e8:	eef7 5a00 	vmov.f32	s11, #112	@ 0x3f800000  1.0
 80188ec:	eef4 7ae5 	vcmpe.f32	s15, s11
 80188f0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80188f4:	f100 82d1 	bmi.w	8018e9a <nema_vg_draw_path+0x7fa>
 80188f8:	2900      	cmp	r1, #0
 80188fa:	f000 8182 	beq.w	8018c02 <nema_vg_draw_path+0x562>
 80188fe:	f1bc 0f00 	cmp.w	ip, #0
 8018902:	f040 828e 	bne.w	8018e22 <nema_vg_draw_path+0x782>
 8018906:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 801890a:	eef4 7ae6 	vcmpe.f32	s15, s13
 801890e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018912:	f340 8342 	ble.w	8018f9a <nema_vg_draw_path+0x8fa>
 8018916:	2201      	movs	r2, #1
 8018918:	f04f 0c00 	mov.w	ip, #0
 801891c:	4edd      	ldr	r6, [pc, #884]	@ (8018c94 <nema_vg_draw_path+0x5f4>)
 801891e:	48de      	ldr	r0, [pc, #888]	@ (8018c98 <nema_vg_draw_path+0x5f8>)
 8018920:	6032      	str	r2, [r6, #0]
 8018922:	f895 20dd 	ldrb.w	r2, [r5, #221]	@ 0xdd
 8018926:	f8c0 c000 	str.w	ip, [r0]
 801892a:	2a00      	cmp	r2, #0
 801892c:	f000 838c 	beq.w	8019048 <nema_vg_draw_path+0x9a8>
 8018930:	ed98 6a00 	vldr	s12, [r8]
 8018934:	eef6 6a00 	vmov.f32	s13, #96	@ 0x3f000000  0.5
 8018938:	f04f 0800 	mov.w	r8, #0
 801893c:	ee26 6a26 	vmul.f32	s12, s12, s13
 8018940:	f04f 0c00 	mov.w	ip, #0
 8018944:	48d5      	ldr	r0, [pc, #852]	@ (8018c9c <nema_vg_draw_path+0x5fc>)
 8018946:	4ad6      	ldr	r2, [pc, #856]	@ (8018ca0 <nema_vg_draw_path+0x600>)
 8018948:	f8c0 c000 	str.w	ip, [r0]
 801894c:	f8c2 c000 	str.w	ip, [r2]
 8018950:	2900      	cmp	r1, #0
 8018952:	f040 81d4 	bne.w	8018cfe <nema_vg_draw_path+0x65e>
 8018956:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 801895a:	eef1 5a00 	vmov.f32	s11, #16	@ 0x40800000  4.0
 801895e:	edd4 3a04 	vldr	s7, [r4, #16]
 8018962:	ee75 5a86 	vadd.f32	s11, s11, s12
 8018966:	ee73 3ae5 	vsub.f32	s7, s7, s11
 801896a:	4ace      	ldr	r2, [pc, #824]	@ (8018ca4 <nema_vg_draw_path+0x604>)
 801896c:	ee36 6a86 	vadd.f32	s12, s13, s12
 8018970:	6812      	ldr	r2, [r2, #0]
 8018972:	edc2 3a06 	vstr	s7, [r2, #24]
 8018976:	edd4 2a05 	vldr	s5, [r4, #20]
 801897a:	ee72 2ac6 	vsub.f32	s5, s5, s12
 801897e:	edc2 2a07 	vstr	s5, [r2, #28]
 8018982:	ed94 7a08 	vldr	s14, [r4, #32]
 8018986:	edd4 7a04 	vldr	s15, [r4, #16]
 801898a:	ee77 7a87 	vadd.f32	s15, s15, s14
 801898e:	ee77 7aa5 	vadd.f32	s15, s15, s11
 8018992:	edc2 7a08 	vstr	s15, [r2, #32]
 8018996:	ed94 2a05 	vldr	s4, [r4, #20]
 801899a:	ee32 2a46 	vsub.f32	s4, s4, s12
 801899e:	ed82 2a09 	vstr	s4, [r2, #36]	@ 0x24
 80189a2:	edd4 6a08 	vldr	s13, [r4, #32]
 80189a6:	ed94 7a04 	vldr	s14, [r4, #16]
 80189aa:	ee37 7a26 	vadd.f32	s14, s14, s13
 80189ae:	ee37 7a25 	vadd.f32	s14, s14, s11
 80189b2:	ed82 7a0a 	vstr	s14, [r2, #40]	@ 0x28
 80189b6:	ed94 5a09 	vldr	s10, [r4, #36]	@ 0x24
 80189ba:	edd4 6a05 	vldr	s13, [r4, #20]
 80189be:	ee76 6a85 	vadd.f32	s13, s13, s10
 80189c2:	ee36 3a86 	vadd.f32	s6, s13, s12
 80189c6:	ed82 3a0b 	vstr	s6, [r2, #44]	@ 0x2c
 80189ca:	edd4 6a04 	vldr	s13, [r4, #16]
 80189ce:	ee76 5ae5 	vsub.f32	s11, s13, s11
 80189d2:	edc2 5a0c 	vstr	s11, [r2, #48]	@ 0x30
 80189d6:	edd4 6a05 	vldr	s13, [r4, #20]
 80189da:	ed94 5a09 	vldr	s10, [r4, #36]	@ 0x24
 80189de:	ee76 6a85 	vadd.f32	s13, s13, s10
 80189e2:	ee76 6a86 	vadd.f32	s13, s13, s12
 80189e6:	edc2 6a0d 	vstr	s13, [r2, #52]	@ 0x34
 80189ea:	2900      	cmp	r1, #0
 80189ec:	d05e      	beq.n	8018aac <nema_vg_draw_path+0x40c>
 80189ee:	49ae      	ldr	r1, [pc, #696]	@ (8018ca8 <nema_vg_draw_path+0x608>)
 80189f0:	ed91 6a00 	vldr	s12, [r1]
 80189f4:	edd1 4a01 	vldr	s9, [r1, #4]
 80189f8:	ee63 0a86 	vmul.f32	s1, s7, s12
 80189fc:	ee22 5aa4 	vmul.f32	s10, s5, s9
 8018a00:	ed91 0a02 	vldr	s0, [r1, #8]
 8018a04:	ee70 0a85 	vadd.f32	s1, s1, s10
 8018a08:	ee70 0a80 	vadd.f32	s1, s1, s0
 8018a0c:	edc2 0a06 	vstr	s1, [r2, #24]
 8018a10:	ed91 4a04 	vldr	s8, [r1, #16]
 8018a14:	ed91 5a03 	vldr	s10, [r1, #12]
 8018a18:	ee62 8a24 	vmul.f32	s17, s4, s9
 8018a1c:	ee63 3a85 	vmul.f32	s7, s7, s10
 8018a20:	ee27 1a85 	vmul.f32	s2, s15, s10
 8018a24:	ee67 1a05 	vmul.f32	s3, s14, s10
 8018a28:	ee23 8a04 	vmul.f32	s16, s6, s8
 8018a2c:	ee62 2a84 	vmul.f32	s5, s5, s8
 8018a30:	ee23 3a24 	vmul.f32	s6, s6, s9
 8018a34:	ee67 7a86 	vmul.f32	s15, s15, s12
 8018a38:	ee22 9a04 	vmul.f32	s18, s4, s8
 8018a3c:	ee25 5a85 	vmul.f32	s10, s11, s10
 8018a40:	ee27 7a06 	vmul.f32	s14, s14, s12
 8018a44:	ee65 5a86 	vmul.f32	s11, s11, s12
 8018a48:	ee26 4a84 	vmul.f32	s8, s13, s8
 8018a4c:	ee66 4aa4 	vmul.f32	s9, s13, s9
 8018a50:	ed91 6a05 	vldr	s12, [r1, #20]
 8018a54:	ee73 2aa2 	vadd.f32	s5, s7, s5
 8018a58:	ee71 6a88 	vadd.f32	s13, s3, s16
 8018a5c:	ee37 7a03 	vadd.f32	s14, s14, s6
 8018a60:	ee31 2a09 	vadd.f32	s4, s2, s18
 8018a64:	ee77 7aa8 	vadd.f32	s15, s15, s17
 8018a68:	ee35 5a04 	vadd.f32	s10, s10, s8
 8018a6c:	ee75 5aa4 	vadd.f32	s11, s11, s9
 8018a70:	ee36 3a86 	vadd.f32	s6, s13, s12
 8018a74:	ee72 2a86 	vadd.f32	s5, s5, s12
 8018a78:	ee32 2a06 	vadd.f32	s4, s4, s12
 8018a7c:	ee77 7a80 	vadd.f32	s15, s15, s0
 8018a80:	ee37 7a00 	vadd.f32	s14, s14, s0
 8018a84:	ee75 6a06 	vadd.f32	s13, s10, s12
 8018a88:	ee75 5a80 	vadd.f32	s11, s11, s0
 8018a8c:	eef0 3a60 	vmov.f32	s7, s1
 8018a90:	edc2 2a07 	vstr	s5, [r2, #28]
 8018a94:	ed82 2a09 	vstr	s4, [r2, #36]	@ 0x24
 8018a98:	edc2 7a08 	vstr	s15, [r2, #32]
 8018a9c:	ed82 3a0b 	vstr	s6, [r2, #44]	@ 0x2c
 8018aa0:	ed82 7a0a 	vstr	s14, [r2, #40]	@ 0x28
 8018aa4:	edc2 6a0d 	vstr	s13, [r2, #52]	@ 0x34
 8018aa8:	edc2 5a0c 	vstr	s11, [r2, #48]	@ 0x30
 8018aac:	eef5 3ac0 	vcmpe.f32	s7, #0.0
 8018ab0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018ab4:	f240 8167 	bls.w	8018d86 <nema_vg_draw_path+0x6e6>
 8018ab8:	eef5 2ac0 	vcmpe.f32	s5, #0.0
 8018abc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018ac0:	f240 81c6 	bls.w	8018e50 <nema_vg_draw_path+0x7b0>
 8018ac4:	ed92 6a04 	vldr	s12, [r2, #16]
 8018ac8:	eeb8 6ac6 	vcvt.f32.s32	s12, s12
 8018acc:	eeb4 6ae3 	vcmpe.f32	s12, s7
 8018ad0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018ad4:	d80f      	bhi.n	8018af6 <nema_vg_draw_path+0x456>
 8018ad6:	eeb4 6ae7 	vcmpe.f32	s12, s15
 8018ada:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018ade:	d80a      	bhi.n	8018af6 <nema_vg_draw_path+0x456>
 8018ae0:	eeb4 6ac7 	vcmpe.f32	s12, s14
 8018ae4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018ae8:	d805      	bhi.n	8018af6 <nema_vg_draw_path+0x456>
 8018aea:	eeb4 6ae5 	vcmpe.f32	s12, s11
 8018aee:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018af2:	f67f ae0d 	bls.w	8018710 <nema_vg_draw_path+0x70>
 8018af6:	ed92 6a05 	vldr	s12, [r2, #20]
 8018afa:	eeb8 6ac6 	vcvt.f32.s32	s12, s12
 8018afe:	eeb4 6ae2 	vcmpe.f32	s12, s5
 8018b02:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018b06:	d80f      	bhi.n	8018b28 <nema_vg_draw_path+0x488>
 8018b08:	eeb4 6ac2 	vcmpe.f32	s12, s4
 8018b0c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018b10:	d80a      	bhi.n	8018b28 <nema_vg_draw_path+0x488>
 8018b12:	eeb4 6ac3 	vcmpe.f32	s12, s6
 8018b16:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018b1a:	d805      	bhi.n	8018b28 <nema_vg_draw_path+0x488>
 8018b1c:	eeb4 6ae6 	vcmpe.f32	s12, s13
 8018b20:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018b24:	f67f adf4 	bls.w	8018710 <nema_vg_draw_path+0x70>
 8018b28:	7f9a      	ldrb	r2, [r3, #30]
 8018b2a:	2a00      	cmp	r2, #0
 8018b2c:	f040 809b 	bne.w	8018c66 <nema_vg_draw_path+0x5c6>
 8018b30:	ed9f 6a5e 	vldr	s12, [pc, #376]	@ 8018cac <nema_vg_draw_path+0x60c>
 8018b34:	eef4 3ac6 	vcmpe.f32	s7, s12
 8018b38:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018b3c:	dc4c      	bgt.n	8018bd8 <nema_vg_draw_path+0x538>
 8018b3e:	eef4 2ac6 	vcmpe.f32	s5, s12
 8018b42:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018b46:	dc47      	bgt.n	8018bd8 <nema_vg_draw_path+0x538>
 8018b48:	eef4 7ac6 	vcmpe.f32	s15, s12
 8018b4c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018b50:	dc42      	bgt.n	8018bd8 <nema_vg_draw_path+0x538>
 8018b52:	eeb4 2ac6 	vcmpe.f32	s4, s12
 8018b56:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018b5a:	dc3d      	bgt.n	8018bd8 <nema_vg_draw_path+0x538>
 8018b5c:	eeb4 7ac6 	vcmpe.f32	s14, s12
 8018b60:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018b64:	dc38      	bgt.n	8018bd8 <nema_vg_draw_path+0x538>
 8018b66:	eeb4 3ac6 	vcmpe.f32	s6, s12
 8018b6a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018b6e:	dc33      	bgt.n	8018bd8 <nema_vg_draw_path+0x538>
 8018b70:	eef4 5ac6 	vcmpe.f32	s11, s12
 8018b74:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018b78:	dc2e      	bgt.n	8018bd8 <nema_vg_draw_path+0x538>
 8018b7a:	eef4 6ac6 	vcmpe.f32	s13, s12
 8018b7e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018b82:	dc29      	bgt.n	8018bd8 <nema_vg_draw_path+0x538>
 8018b84:	ed9f 6a4a 	vldr	s12, [pc, #296]	@ 8018cb0 <nema_vg_draw_path+0x610>
 8018b88:	eef4 3ac6 	vcmpe.f32	s7, s12
 8018b8c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018b90:	d422      	bmi.n	8018bd8 <nema_vg_draw_path+0x538>
 8018b92:	eef4 2ac6 	vcmpe.f32	s5, s12
 8018b96:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018b9a:	d41d      	bmi.n	8018bd8 <nema_vg_draw_path+0x538>
 8018b9c:	eef4 7ac6 	vcmpe.f32	s15, s12
 8018ba0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018ba4:	d418      	bmi.n	8018bd8 <nema_vg_draw_path+0x538>
 8018ba6:	eeb4 2ac6 	vcmpe.f32	s4, s12
 8018baa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018bae:	d413      	bmi.n	8018bd8 <nema_vg_draw_path+0x538>
 8018bb0:	eeb4 7ac6 	vcmpe.f32	s14, s12
 8018bb4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018bb8:	d40e      	bmi.n	8018bd8 <nema_vg_draw_path+0x538>
 8018bba:	eeb4 3ac6 	vcmpe.f32	s6, s12
 8018bbe:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018bc2:	d409      	bmi.n	8018bd8 <nema_vg_draw_path+0x538>
 8018bc4:	eef4 5ac6 	vcmpe.f32	s11, s12
 8018bc8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018bcc:	d404      	bmi.n	8018bd8 <nema_vg_draw_path+0x538>
 8018bce:	eef4 6ac6 	vcmpe.f32	s13, s12
 8018bd2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018bd6:	d546      	bpl.n	8018c66 <nema_vg_draw_path+0x5c6>
 8018bd8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8018bda:	0759      	lsls	r1, r3, #29
 8018bdc:	f140 82a9 	bpl.w	8019132 <nema_vg_draw_path+0xa92>
 8018be0:	4620      	mov	r0, r4
 8018be2:	4629      	mov	r1, r5
 8018be4:	f003 fe86 	bl	801c8f4 <draw_clipped_path>
 8018be8:	4604      	mov	r4, r0
 8018bea:	2800      	cmp	r0, #0
 8018bec:	f43f ae35 	beq.w	801885a <nema_vg_draw_path+0x1ba>
 8018bf0:	f004 f880 	bl	801ccf4 <nema_vg_set_error>
 8018bf4:	e631      	b.n	801885a <nema_vg_draw_path+0x1ba>
 8018bf6:	2900      	cmp	r1, #0
 8018bf8:	d162      	bne.n	8018cc0 <nema_vg_draw_path+0x620>
 8018bfa:	eeb0 7a48 	vmov.f32	s14, s16
 8018bfe:	eef0 7a48 	vmov.f32	s15, s16
 8018c02:	2e00      	cmp	r6, #0
 8018c04:	f43f ae7b 	beq.w	80188fe <nema_vg_draw_path+0x25e>
 8018c08:	4a2a      	ldr	r2, [pc, #168]	@ (8018cb4 <nema_vg_draw_path+0x614>)
 8018c0a:	ed88 8a00 	vstr	s16, [r8]
 8018c0e:	edc2 7a00 	vstr	s15, [r2]
 8018c12:	4a29      	ldr	r2, [pc, #164]	@ (8018cb8 <nema_vg_draw_path+0x618>)
 8018c14:	ed82 7a00 	vstr	s14, [r2]
 8018c18:	e671      	b.n	80188fe <nema_vg_draw_path+0x25e>
 8018c1a:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 8018c1e:	f44f 6080 	mov.w	r0, #1024	@ 0x400
 8018c22:	f004 f867 	bl	801ccf4 <nema_vg_set_error>
 8018c26:	4620      	mov	r0, r4
 8018c28:	b007      	add	sp, #28
 8018c2a:	ecbd 8b04 	vpop	{d8-d9}
 8018c2e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018c32:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8018c36:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018c3a:	f67f ad69 	bls.w	8018710 <nema_vg_draw_path+0x70>
 8018c3e:	0e03      	lsrs	r3, r0, #24
 8018c40:	ee07 3a10 	vmov	s14, r3
 8018c44:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8018c48:	eef6 6a00 	vmov.f32	s13, #96	@ 0x3f000000  0.5
 8018c4c:	ee67 7a87 	vmul.f32	s15, s15, s14
 8018c50:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8018c54:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8018c58:	ee17 3a90 	vmov	r3, s15
 8018c5c:	f363 601f 	bfi	r0, r3, #24, #8
 8018c60:	f8cb 0000 	str.w	r0, [fp]
 8018c64:	e598      	b.n	8018798 <nema_vg_draw_path+0xf8>
 8018c66:	f1b8 0f00 	cmp.w	r8, #0
 8018c6a:	f040 8206 	bne.w	801907a <nema_vg_draw_path+0x9da>
 8018c6e:	4b13      	ldr	r3, [pc, #76]	@ (8018cbc <nema_vg_draw_path+0x61c>)
 8018c70:	781a      	ldrb	r2, [r3, #0]
 8018c72:	2a01      	cmp	r2, #1
 8018c74:	f000 81c5 	beq.w	8019002 <nema_vg_draw_path+0x962>
 8018c78:	4620      	mov	r0, r4
 8018c7a:	4629      	mov	r1, r5
 8018c7c:	f7fd fe6a 	bl	8016954 <draw_with_stencil>
 8018c80:	4604      	mov	r4, r0
 8018c82:	2800      	cmp	r0, #0
 8018c84:	f43f ade9 	beq.w	801885a <nema_vg_draw_path+0x1ba>
 8018c88:	e7b2      	b.n	8018bf0 <nema_vg_draw_path+0x550>
 8018c8a:	2040      	movs	r0, #64	@ 0x40
 8018c8c:	f004 f832 	bl	801ccf4 <nema_vg_set_error>
 8018c90:	2440      	movs	r4, #64	@ 0x40
 8018c92:	e5e2      	b.n	801885a <nema_vg_draw_path+0x1ba>
 8018c94:	20083150 	.word	0x20083150
 8018c98:	2008314c 	.word	0x2008314c
 8018c9c:	2008318c 	.word	0x2008318c
 8018ca0:	20083190 	.word	0x20083190
 8018ca4:	200831f0 	.word	0x200831f0
 8018ca8:	200831cc 	.word	0x200831cc
 8018cac:	44bfe000 	.word	0x44bfe000
 8018cb0:	c3ff8000 	.word	0xc3ff8000
 8018cb4:	20000138 	.word	0x20000138
 8018cb8:	2000013c 	.word	0x2000013c
 8018cbc:	20000064 	.word	0x20000064
 8018cc0:	f04f 527e 	mov.w	r2, #1065353216	@ 0x3f800000
 8018cc4:	f04f 0c00 	mov.w	ip, #0
 8018cc8:	48d6      	ldr	r0, [pc, #856]	@ (8019024 <nema_vg_draw_path+0x984>)
 8018cca:	4ed7      	ldr	r6, [pc, #860]	@ (8019028 <nema_vg_draw_path+0x988>)
 8018ccc:	6002      	str	r2, [r0, #0]
 8018cce:	6032      	str	r2, [r6, #0]
 8018cd0:	f8c8 2000 	str.w	r2, [r8]
 8018cd4:	7f5a      	ldrb	r2, [r3, #29]
 8018cd6:	48d5      	ldr	r0, [pc, #852]	@ (801902c <nema_vg_draw_path+0x98c>)
 8018cd8:	4ed5      	ldr	r6, [pc, #852]	@ (8019030 <nema_vg_draw_path+0x990>)
 8018cda:	0792      	lsls	r2, r2, #30
 8018cdc:	f8c0 c000 	str.w	ip, [r0]
 8018ce0:	f8c6 c000 	str.w	ip, [r6]
 8018ce4:	f57f ae24 	bpl.w	8018930 <nema_vg_draw_path+0x290>
 8018ce8:	f04f 0e00 	mov.w	lr, #0
 8018cec:	46e0      	mov	r8, ip
 8018cee:	eeb6 6a00 	vmov.f32	s12, #96	@ 0x3f000000  0.5
 8018cf2:	48d0      	ldr	r0, [pc, #832]	@ (8019034 <nema_vg_draw_path+0x994>)
 8018cf4:	4ad0      	ldr	r2, [pc, #832]	@ (8019038 <nema_vg_draw_path+0x998>)
 8018cf6:	f8c0 e000 	str.w	lr, [r0]
 8018cfa:	f8c2 e000 	str.w	lr, [r2]
 8018cfe:	f8df a340 	ldr.w	sl, [pc, #832]	@ 8019040 <nema_vg_draw_path+0x9a0>
 8018d02:	ed9a 0a00 	vldr	s0, [sl]
 8018d06:	edda 7a01 	vldr	s15, [sl, #4]
 8018d0a:	ee20 0a00 	vmul.f32	s0, s0, s0
 8018d0e:	ee67 7aa7 	vmul.f32	s15, s15, s15
 8018d12:	ee30 0a27 	vadd.f32	s0, s0, s15
 8018d16:	eeb5 0a40 	vcmp.f32	s0, #0.0
 8018d1a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018d1e:	eef1 8ac0 	vsqrt.f32	s17, s0
 8018d22:	f100 8254 	bmi.w	80191ce <nema_vg_draw_path+0xb2e>
 8018d26:	ed9a 0a03 	vldr	s0, [sl, #12]
 8018d2a:	edda 7a04 	vldr	s15, [sl, #16]
 8018d2e:	ee20 0a00 	vmul.f32	s0, s0, s0
 8018d32:	ee67 7aa7 	vmul.f32	s15, s15, s15
 8018d36:	ee30 0a27 	vadd.f32	s0, s0, s15
 8018d3a:	eeb5 0a40 	vcmp.f32	s0, #0.0
 8018d3e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018d42:	eeb1 8ac0 	vsqrt.f32	s16, s0
 8018d46:	f100 8233 	bmi.w	80191b0 <nema_vg_draw_path+0xb10>
 8018d4a:	eddf 7abc 	vldr	s15, [pc, #752]	@ 801903c <nema_vg_draw_path+0x99c>
 8018d4e:	eef4 8ae7 	vcmpe.f32	s17, s15
 8018d52:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018d56:	bfc4      	itt	gt
 8018d58:	eef1 7a00 	vmovgt.f32	s15, #16	@ 0x40800000  4.0
 8018d5c:	eec7 5aa8 	vdivgt.f32	s11, s15, s17
 8018d60:	eddf 7ab6 	vldr	s15, [pc, #728]	@ 801903c <nema_vg_draw_path+0x99c>
 8018d64:	eeb4 8ae7 	vcmpe.f32	s16, s15
 8018d68:	bfd8      	it	le
 8018d6a:	eef1 5a00 	vmovle.f32	s11, #16	@ 0x40800000  4.0
 8018d6e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018d72:	edc0 8a00 	vstr	s17, [r0]
 8018d76:	ed82 8a00 	vstr	s16, [r2]
 8018d7a:	dd7c      	ble.n	8018e76 <nema_vg_draw_path+0x7d6>
 8018d7c:	eef1 7a00 	vmov.f32	s15, #16	@ 0x40800000  4.0
 8018d80:	eec7 6a88 	vdiv.f32	s13, s15, s16
 8018d84:	e5eb      	b.n	801895e <nema_vg_draw_path+0x2be>
 8018d86:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8018d8a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018d8e:	f63f ae93 	bhi.w	8018ab8 <nema_vg_draw_path+0x418>
 8018d92:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 8018d96:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018d9a:	f63f ae8d 	bhi.w	8018ab8 <nema_vg_draw_path+0x418>
 8018d9e:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 8018da2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018da6:	f63f ae87 	bhi.w	8018ab8 <nema_vg_draw_path+0x418>
 8018daa:	e4b1      	b.n	8018710 <nema_vg_draw_path+0x70>
 8018dac:	f8df a290 	ldr.w	sl, [pc, #656]	@ 8019040 <nema_vg_draw_path+0x9a0>
 8018db0:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8018db2:	ed9a 0a00 	vldr	s0, [sl]
 8018db6:	edda 7a01 	vldr	s15, [sl, #4]
 8018dba:	ee20 0a00 	vmul.f32	s0, s0, s0
 8018dbe:	ee67 7aa7 	vmul.f32	s15, s15, s15
 8018dc2:	0792      	lsls	r2, r2, #30
 8018dc4:	ee30 0a27 	vadd.f32	s0, s0, s15
 8018dc8:	f100 80ad 	bmi.w	8018f26 <nema_vg_draw_path+0x886>
 8018dcc:	eeb5 0a40 	vcmp.f32	s0, #0.0
 8018dd0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018dd4:	eef1 8ac0 	vsqrt.f32	s17, s0
 8018dd8:	f100 8211 	bmi.w	80191fe <nema_vg_draw_path+0xb5e>
 8018ddc:	edda 7a03 	vldr	s15, [sl, #12]
 8018de0:	ed9a 0a04 	vldr	s0, [sl, #16]
 8018de4:	ee67 7aa7 	vmul.f32	s15, s15, s15
 8018de8:	ee20 0a00 	vmul.f32	s0, s0, s0
 8018dec:	ee37 0a80 	vadd.f32	s0, s15, s0
 8018df0:	eeb5 0a40 	vcmp.f32	s0, #0.0
 8018df4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018df8:	eeb1 9ac0 	vsqrt.f32	s18, s0
 8018dfc:	f100 81f6 	bmi.w	80191ec <nema_vg_draw_path+0xb4c>
 8018e00:	ee68 7a28 	vmul.f32	s15, s16, s17
 8018e04:	ee28 7a09 	vmul.f32	s14, s16, s18
 8018e08:	eef4 7ac7 	vcmpe.f32	s15, s14
 8018e0c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018e10:	f340 8163 	ble.w	80190da <nema_vg_draw_path+0xa3a>
 8018e14:	eeb0 8a67 	vmov.f32	s16, s15
 8018e18:	f8d3 a024 	ldr.w	sl, [r3, #36]	@ 0x24
 8018e1c:	f893 c01c 	ldrb.w	ip, [r3, #28]
 8018e20:	e4f5      	b.n	801880e <nema_vg_draw_path+0x16e>
 8018e22:	f04f 527e 	mov.w	r2, #1065353216	@ 0x3f800000
 8018e26:	2000      	movs	r0, #0
 8018e28:	4e7e      	ldr	r6, [pc, #504]	@ (8019024 <nema_vg_draw_path+0x984>)
 8018e2a:	f8c8 2000 	str.w	r2, [r8]
 8018e2e:	6032      	str	r2, [r6, #0]
 8018e30:	4e7d      	ldr	r6, [pc, #500]	@ (8019028 <nema_vg_draw_path+0x988>)
 8018e32:	f8df c1f8 	ldr.w	ip, [pc, #504]	@ 801902c <nema_vg_draw_path+0x98c>
 8018e36:	6032      	str	r2, [r6, #0]
 8018e38:	7f5a      	ldrb	r2, [r3, #29]
 8018e3a:	4e7d      	ldr	r6, [pc, #500]	@ (8019030 <nema_vg_draw_path+0x990>)
 8018e3c:	0792      	lsls	r2, r2, #30
 8018e3e:	f8cc 0000 	str.w	r0, [ip]
 8018e42:	6030      	str	r0, [r6, #0]
 8018e44:	f57f ad74 	bpl.w	8018930 <nema_vg_draw_path+0x290>
 8018e48:	4680      	mov	r8, r0
 8018e4a:	eeb6 6a00 	vmov.f32	s12, #96	@ 0x3f000000  0.5
 8018e4e:	e577      	b.n	8018940 <nema_vg_draw_path+0x2a0>
 8018e50:	eeb5 2ac0 	vcmpe.f32	s4, #0.0
 8018e54:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018e58:	f63f ae34 	bhi.w	8018ac4 <nema_vg_draw_path+0x424>
 8018e5c:	eeb5 3ac0 	vcmpe.f32	s6, #0.0
 8018e60:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018e64:	f63f ae2e 	bhi.w	8018ac4 <nema_vg_draw_path+0x424>
 8018e68:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 8018e6c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018e70:	f63f ae28 	bhi.w	8018ac4 <nema_vg_draw_path+0x424>
 8018e74:	e44c      	b.n	8018710 <nema_vg_draw_path+0x70>
 8018e76:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8018e7a:	e570      	b.n	801895e <nema_vg_draw_path+0x2be>
 8018e7c:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8018e7e:	0792      	lsls	r2, r2, #30
 8018e80:	f53f acc1 	bmi.w	8018806 <nema_vg_draw_path+0x166>
 8018e84:	f8df a1b8 	ldr.w	sl, [pc, #440]	@ 8019040 <nema_vg_draw_path+0x9a0>
 8018e88:	ed9a 0a01 	vldr	s0, [sl, #4]
 8018e8c:	edda 7a00 	vldr	s15, [sl]
 8018e90:	ee20 0a00 	vmul.f32	s0, s0, s0
 8018e94:	ee07 0aa7 	vmla.f32	s0, s15, s15
 8018e98:	e798      	b.n	8018dcc <nema_vg_draw_path+0x72c>
 8018e9a:	b2c2      	uxtb	r2, r0
 8018e9c:	ee05 2a10 	vmov	s10, r2
 8018ea0:	f3c0 2207 	ubfx	r2, r0, #8, #8
 8018ea4:	ee06 2a10 	vmov	s12, r2
 8018ea8:	0e02      	lsrs	r2, r0, #24
 8018eaa:	ee06 2a90 	vmov	s13, r2
 8018eae:	f3c0 4207 	ubfx	r2, r0, #16, #8
 8018eb2:	ee07 2a10 	vmov	s14, r2
 8018eb6:	eeb8 5ac5 	vcvt.f32.s32	s10, s10
 8018eba:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8018ebe:	ee25 5a27 	vmul.f32	s10, s10, s15
 8018ec2:	eeb8 6ac6 	vcvt.f32.s32	s12, s12
 8018ec6:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8018eca:	ee66 6aa7 	vmul.f32	s13, s13, s15
 8018ece:	ee27 7a27 	vmul.f32	s14, s14, s15
 8018ed2:	ee26 6a27 	vmul.f32	s12, s12, s15
 8018ed6:	eef0 7a65 	vmov.f32	s15, s11
 8018eda:	eefc 5ac5 	vcvt.u32.f32	s11, s10
 8018ede:	eefc 6ae6 	vcvt.u32.f32	s13, s13
 8018ee2:	edcd 5a01 	vstr	s11, [sp, #4]
 8018ee6:	eebc 6ac6 	vcvt.u32.f32	s12, s12
 8018eea:	ee16 ea90 	vmov	lr, s13
 8018eee:	eefc 6ac7 	vcvt.u32.f32	s13, s14
 8018ef2:	f89d 2004 	ldrb.w	r2, [sp, #4]
 8018ef6:	ee16 0a10 	vmov	r0, s12
 8018efa:	ea42 6e0e 	orr.w	lr, r2, lr, lsl #24
 8018efe:	ee16 2a90 	vmov	r2, s13
 8018f02:	0200      	lsls	r0, r0, #8
 8018f04:	b280      	uxth	r0, r0
 8018f06:	0412      	lsls	r2, r2, #16
 8018f08:	ea4e 0000 	orr.w	r0, lr, r0
 8018f0c:	f402 027f 	and.w	r2, r2, #16711680	@ 0xff0000
 8018f10:	4302      	orrs	r2, r0
 8018f12:	eeb0 7a67 	vmov.f32	s14, s15
 8018f16:	eeb0 8a67 	vmov.f32	s16, s15
 8018f1a:	f8cb 2000 	str.w	r2, [fp]
 8018f1e:	2900      	cmp	r1, #0
 8018f20:	f47f aced 	bne.w	80188fe <nema_vg_draw_path+0x25e>
 8018f24:	e66d      	b.n	8018c02 <nema_vg_draw_path+0x562>
 8018f26:	eeb5 0a40 	vcmp.f32	s0, #0.0
 8018f2a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018f2e:	eeb1 9ac0 	vsqrt.f32	s18, s0
 8018f32:	f100 8176 	bmi.w	8019222 <nema_vg_draw_path+0xb82>
 8018f36:	edda 7a03 	vldr	s15, [sl, #12]
 8018f3a:	ed9a 0a04 	vldr	s0, [sl, #16]
 8018f3e:	ee67 7aa7 	vmul.f32	s15, s15, s15
 8018f42:	ee20 0a00 	vmul.f32	s0, s0, s0
 8018f46:	ee37 0a80 	vadd.f32	s0, s15, s0
 8018f4a:	eeb5 0a40 	vcmp.f32	s0, #0.0
 8018f4e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018f52:	eef1 8ac0 	vsqrt.f32	s17, s0
 8018f56:	f100 815b 	bmi.w	8019210 <nema_vg_draw_path+0xb70>
 8018f5a:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8018f5e:	ee86 7a89 	vdiv.f32	s14, s13, s18
 8018f62:	eec6 7aa8 	vdiv.f32	s15, s13, s17
 8018f66:	ee27 7a08 	vmul.f32	s14, s14, s16
 8018f6a:	ee67 7a88 	vmul.f32	s15, s15, s16
 8018f6e:	4a2d      	ldr	r2, [pc, #180]	@ (8019024 <nema_vg_draw_path+0x984>)
 8018f70:	f8d3 a024 	ldr.w	sl, [r3, #36]	@ 0x24
 8018f74:	ed82 7a00 	vstr	s14, [r2]
 8018f78:	4a2b      	ldr	r2, [pc, #172]	@ (8019028 <nema_vg_draw_path+0x988>)
 8018f7a:	eeb0 7a48 	vmov.f32	s14, s16
 8018f7e:	edc2 7a00 	vstr	s15, [r2]
 8018f82:	f893 c01c 	ldrb.w	ip, [r3, #28]
 8018f86:	eef0 7a48 	vmov.f32	s15, s16
 8018f8a:	e440      	b.n	801880e <nema_vg_draw_path+0x16e>
 8018f8c:	f104 0160 	add.w	r1, r4, #96	@ 0x60
 8018f90:	482b      	ldr	r0, [pc, #172]	@ (8019040 <nema_vg_draw_path+0x9a0>)
 8018f92:	f7f8 fe0b 	bl	8011bac <nema_mat3x3_copy>
 8018f96:	f7ff bbe8 	b.w	801876a <nema_vg_draw_path+0xca>
 8018f9a:	eeb4 7ae6 	vcmpe.f32	s14, s13
 8018f9e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018fa2:	f73f acb8 	bgt.w	8018916 <nema_vg_draw_path+0x276>
 8018fa6:	4a1f      	ldr	r2, [pc, #124]	@ (8019024 <nema_vg_draw_path+0x984>)
 8018fa8:	4e21      	ldr	r6, [pc, #132]	@ (8019030 <nema_vg_draw_path+0x990>)
 8018faa:	edc2 6a00 	vstr	s13, [r2]
 8018fae:	4a1e      	ldr	r2, [pc, #120]	@ (8019028 <nema_vg_draw_path+0x988>)
 8018fb0:	481e      	ldr	r0, [pc, #120]	@ (801902c <nema_vg_draw_path+0x98c>)
 8018fb2:	edc2 6a00 	vstr	s13, [r2]
 8018fb6:	f895 20dd 	ldrb.w	r2, [r5, #221]	@ 0xdd
 8018fba:	edc8 6a00 	vstr	s13, [r8]
 8018fbe:	f8c6 c000 	str.w	ip, [r6]
 8018fc2:	f8c0 c000 	str.w	ip, [r0]
 8018fc6:	2a00      	cmp	r2, #0
 8018fc8:	f47f acb2 	bne.w	8018930 <nema_vg_draw_path+0x290>
 8018fcc:	f893 2048 	ldrb.w	r2, [r3, #72]	@ 0x48
 8018fd0:	2a01      	cmp	r2, #1
 8018fd2:	d049      	beq.n	8019068 <nema_vg_draw_path+0x9c8>
 8018fd4:	2201      	movs	r2, #1
 8018fd6:	ed98 6a00 	vldr	s12, [r8]
 8018fda:	eef6 6a00 	vmov.f32	s13, #96	@ 0x3f000000  0.5
 8018fde:	6002      	str	r2, [r0, #0]
 8018fe0:	4690      	mov	r8, r2
 8018fe2:	ee26 6a26 	vmul.f32	s12, s12, s13
 8018fe6:	e4ab      	b.n	8018940 <nema_vg_draw_path+0x2a0>
 8018fe8:	eef1 6a47 	vneg.f32	s13, s14
 8018fec:	eef4 5ae6 	vcmpe.f32	s11, s13
 8018ff0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018ff4:	f53f ac68 	bmi.w	80188c8 <nema_vg_draw_path+0x228>
 8018ff8:	eddf 5a12 	vldr	s11, [pc, #72]	@ 8019044 <nema_vg_draw_path+0x9a4>
 8018ffc:	ee66 6aa5 	vmul.f32	s13, s13, s11
 8019000:	e46d      	b.n	80188de <nema_vg_draw_path+0x23e>
 8019002:	685b      	ldr	r3, [r3, #4]
 8019004:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8019008:	f000 80c7 	beq.w	801919a <nema_vg_draw_path+0xafa>
 801900c:	f1b3 4f40 	cmp.w	r3, #3221225472	@ 0xc0000000
 8019010:	f47f ae32 	bne.w	8018c78 <nema_vg_draw_path+0x5d8>
 8019014:	2000      	movs	r0, #0
 8019016:	f7f9 f93d 	bl	8012294 <nema_enable_tiling_2x2>
 801901a:	2204      	movs	r2, #4
 801901c:	683b      	ldr	r3, [r7, #0]
 801901e:	77da      	strb	r2, [r3, #31]
 8019020:	e62a      	b.n	8018c78 <nema_vg_draw_path+0x5d8>
 8019022:	bf00      	nop
 8019024:	20000138 	.word	0x20000138
 8019028:	2000013c 	.word	0x2000013c
 801902c:	2008314c 	.word	0x2008314c
 8019030:	20083150 	.word	0x20083150
 8019034:	2008318c 	.word	0x2008318c
 8019038:	20083190 	.word	0x20083190
 801903c:	3a83126f 	.word	0x3a83126f
 8019040:	200831cc 	.word	0x200831cc
 8019044:	3727c5ac 	.word	0x3727c5ac
 8019048:	f1ba 0f01 	cmp.w	sl, #1
 801904c:	d0be      	beq.n	8018fcc <nema_vg_draw_path+0x92c>
 801904e:	f240 5201 	movw	r2, #1281	@ 0x501
 8019052:	fa1f fa8a 	uxth.w	sl, sl
 8019056:	4592      	cmp	sl, r2
 8019058:	d106      	bne.n	8019068 <nema_vg_draw_path+0x9c8>
 801905a:	f8db 2000 	ldr.w	r2, [fp]
 801905e:	f002 427f 	and.w	r2, r2, #4278190080	@ 0xff000000
 8019062:	f1b2 4f7f 	cmp.w	r2, #4278190080	@ 0xff000000
 8019066:	d0b1      	beq.n	8018fcc <nema_vg_draw_path+0x92c>
 8019068:	ed98 6a00 	vldr	s12, [r8]
 801906c:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 8019070:	f04f 0800 	mov.w	r8, #0
 8019074:	ee26 6a27 	vmul.f32	s12, s12, s15
 8019078:	e462      	b.n	8018940 <nema_vg_draw_path+0x2a0>
 801907a:	f240 5201 	movw	r2, #1281	@ 0x501
 801907e:	6a58      	ldr	r0, [r3, #36]	@ 0x24
 8019080:	b283      	uxth	r3, r0
 8019082:	4293      	cmp	r3, r2
 8019084:	d03a      	beq.n	80190fc <nema_vg_draw_path+0xa5c>
 8019086:	f04f 33ff 	mov.w	r3, #4294967295
 801908a:	f040 7080 	orr.w	r0, r0, #16777216	@ 0x1000000
 801908e:	461a      	mov	r2, r3
 8019090:	2100      	movs	r1, #0
 8019092:	f005 f905 	bl	801e2a0 <nema_set_blend>
 8019096:	f8db 0000 	ldr.w	r0, [fp]
 801909a:	f7f9 fabb 	bl	8012614 <nema_set_raster_color>
 801909e:	f899 3000 	ldrb.w	r3, [r9]
 80190a2:	4d64      	ldr	r5, [pc, #400]	@ (8019234 <nema_vg_draw_path+0xb94>)
 80190a4:	702b      	strb	r3, [r5, #0]
 80190a6:	2b00      	cmp	r3, #0
 80190a8:	d14b      	bne.n	8019142 <nema_vg_draw_path+0xaa2>
 80190aa:	6833      	ldr	r3, [r6, #0]
 80190ac:	4620      	mov	r0, r4
 80190ae:	b9e3      	cbnz	r3, 80190ea <nema_vg_draw_path+0xa4a>
 80190b0:	f7fa fc62 	bl	8013978 <stroke_thin_path>
 80190b4:	4604      	mov	r4, r0
 80190b6:	b9e8      	cbnz	r0, 80190f4 <nema_vg_draw_path+0xa54>
 80190b8:	782b      	ldrb	r3, [r5, #0]
 80190ba:	2b00      	cmp	r3, #0
 80190bc:	f43f ab28 	beq.w	8018710 <nema_vg_draw_path+0x70>
 80190c0:	2101      	movs	r1, #1
 80190c2:	f44f 7062 	mov.w	r0, #904	@ 0x388
 80190c6:	f004 ffc9 	bl	801e05c <nema_cl_add_cmd>
 80190ca:	2300      	movs	r3, #0
 80190cc:	782a      	ldrb	r2, [r5, #0]
 80190ce:	461c      	mov	r4, r3
 80190d0:	702b      	strb	r3, [r5, #0]
 80190d2:	f889 2000 	strb.w	r2, [r9]
 80190d6:	f7ff bbc0 	b.w	801885a <nema_vg_draw_path+0x1ba>
 80190da:	eeb0 8a47 	vmov.f32	s16, s14
 80190de:	f8d3 a024 	ldr.w	sl, [r3, #36]	@ 0x24
 80190e2:	f893 c01c 	ldrb.w	ip, [r3, #28]
 80190e6:	f7ff bb92 	b.w	801880e <nema_vg_draw_path+0x16e>
 80190ea:	f7fb fc09 	bl	8014900 <stroke_path>
 80190ee:	4604      	mov	r4, r0
 80190f0:	2800      	cmp	r0, #0
 80190f2:	d0e1      	beq.n	80190b8 <nema_vg_draw_path+0xa18>
 80190f4:	f003 fdfe 	bl	801ccf4 <nema_vg_set_error>
 80190f8:	4620      	mov	r0, r4
 80190fa:	e579      	b.n	8018bf0 <nema_vg_draw_path+0x550>
 80190fc:	2004      	movs	r0, #4
 80190fe:	f004 ff51 	bl	801dfa4 <nema_cl_get_space>
 8019102:	2800      	cmp	r0, #0
 8019104:	d050      	beq.n	80191a8 <nema_vg_draw_path+0xb08>
 8019106:	f44f 7ce8 	mov.w	ip, #464	@ 0x1d0
 801910a:	f44f 778e 	mov.w	r7, #284	@ 0x11c
 801910e:	f44f 7596 	mov.w	r5, #300	@ 0x12c
 8019112:	f44f 718c 	mov.w	r1, #280	@ 0x118
 8019116:	f04f 4210 	mov.w	r2, #2415919104	@ 0x90000000
 801911a:	f8db 3000 	ldr.w	r3, [fp]
 801911e:	e9c0 c800 	strd	ip, r8, [r0]
 8019122:	6143      	str	r3, [r0, #20]
 8019124:	4b44      	ldr	r3, [pc, #272]	@ (8019238 <nema_vg_draw_path+0xb98>)
 8019126:	6087      	str	r7, [r0, #8]
 8019128:	6105      	str	r5, [r0, #16]
 801912a:	e9c0 1206 	strd	r1, r2, [r0, #24]
 801912e:	60c3      	str	r3, [r0, #12]
 8019130:	e7b5      	b.n	801909e <nema_vg_draw_path+0x9fe>
 8019132:	f44f 4080 	mov.w	r0, #16384	@ 0x4000
 8019136:	f003 fddd 	bl	801ccf4 <nema_vg_set_error>
 801913a:	f44f 4480 	mov.w	r4, #16384	@ 0x4000
 801913e:	f7ff bb8c 	b.w	801885a <nema_vg_draw_path+0x1ba>
 8019142:	2007      	movs	r0, #7
 8019144:	f004 ff2e 	bl	801dfa4 <nema_cl_get_space>
 8019148:	b318      	cbz	r0, 8019192 <nema_vg_draw_path+0xaf2>
 801914a:	f44f 725d 	mov.w	r2, #884	@ 0x374
 801914e:	6002      	str	r2, [r0, #0]
 8019150:	f44f 725a 	mov.w	r2, #872	@ 0x368
 8019154:	4b39      	ldr	r3, [pc, #228]	@ (801923c <nema_vg_draw_path+0xb9c>)
 8019156:	6959      	ldr	r1, [r3, #20]
 8019158:	6082      	str	r2, [r0, #8]
 801915a:	f44f 7258 	mov.w	r2, #864	@ 0x360
 801915e:	6041      	str	r1, [r0, #4]
 8019160:	6899      	ldr	r1, [r3, #8]
 8019162:	6102      	str	r2, [r0, #16]
 8019164:	f44f 7259 	mov.w	r2, #868	@ 0x364
 8019168:	60c1      	str	r1, [r0, #12]
 801916a:	6819      	ldr	r1, [r3, #0]
 801916c:	6182      	str	r2, [r0, #24]
 801916e:	f44f 725b 	mov.w	r2, #876	@ 0x36c
 8019172:	6141      	str	r1, [r0, #20]
 8019174:	6859      	ldr	r1, [r3, #4]
 8019176:	6202      	str	r2, [r0, #32]
 8019178:	f44f 725c 	mov.w	r2, #880	@ 0x370
 801917c:	61c1      	str	r1, [r0, #28]
 801917e:	68d9      	ldr	r1, [r3, #12]
 8019180:	6282      	str	r2, [r0, #40]	@ 0x28
 8019182:	6241      	str	r1, [r0, #36]	@ 0x24
 8019184:	6919      	ldr	r1, [r3, #16]
 8019186:	f44f 7262 	mov.w	r2, #904	@ 0x388
 801918a:	2300      	movs	r3, #0
 801918c:	e9c0 230c 	strd	r2, r3, [r0, #48]	@ 0x30
 8019190:	62c1      	str	r1, [r0, #44]	@ 0x2c
 8019192:	2300      	movs	r3, #0
 8019194:	f889 3000 	strb.w	r3, [r9]
 8019198:	e787      	b.n	80190aa <nema_vg_draw_path+0xa0a>
 801919a:	2000      	movs	r0, #0
 801919c:	f7f9 f866 	bl	801226c <nema_enable_tiling>
 80191a0:	2203      	movs	r2, #3
 80191a2:	683b      	ldr	r3, [r7, #0]
 80191a4:	77da      	strb	r2, [r3, #31]
 80191a6:	e567      	b.n	8018c78 <nema_vg_draw_path+0x5d8>
 80191a8:	f44f 7400 	mov.w	r4, #512	@ 0x200
 80191ac:	4620      	mov	r0, r4
 80191ae:	e51f      	b.n	8018bf0 <nema_vg_draw_path+0x550>
 80191b0:	e9cd 0204 	strd	r0, r2, [sp, #16]
 80191b4:	9103      	str	r1, [sp, #12]
 80191b6:	ed8d 6a02 	vstr	s12, [sp, #8]
 80191ba:	9301      	str	r3, [sp, #4]
 80191bc:	f018 f978 	bl	80314b0 <sqrtf>
 80191c0:	e9dd 0204 	ldrd	r0, r2, [sp, #16]
 80191c4:	9903      	ldr	r1, [sp, #12]
 80191c6:	ed9d 6a02 	vldr	s12, [sp, #8]
 80191ca:	9b01      	ldr	r3, [sp, #4]
 80191cc:	e5bd      	b.n	8018d4a <nema_vg_draw_path+0x6aa>
 80191ce:	e9cd 0204 	strd	r0, r2, [sp, #16]
 80191d2:	9103      	str	r1, [sp, #12]
 80191d4:	ed8d 6a02 	vstr	s12, [sp, #8]
 80191d8:	9301      	str	r3, [sp, #4]
 80191da:	f018 f969 	bl	80314b0 <sqrtf>
 80191de:	e9dd 0204 	ldrd	r0, r2, [sp, #16]
 80191e2:	9903      	ldr	r1, [sp, #12]
 80191e4:	ed9d 6a02 	vldr	s12, [sp, #8]
 80191e8:	9b01      	ldr	r3, [sp, #4]
 80191ea:	e59c      	b.n	8018d26 <nema_vg_draw_path+0x686>
 80191ec:	e9cd 3102 	strd	r3, r1, [sp, #8]
 80191f0:	9001      	str	r0, [sp, #4]
 80191f2:	f018 f95d 	bl	80314b0 <sqrtf>
 80191f6:	e9dd 3102 	ldrd	r3, r1, [sp, #8]
 80191fa:	9801      	ldr	r0, [sp, #4]
 80191fc:	e600      	b.n	8018e00 <nema_vg_draw_path+0x760>
 80191fe:	e9cd 3102 	strd	r3, r1, [sp, #8]
 8019202:	9001      	str	r0, [sp, #4]
 8019204:	f018 f954 	bl	80314b0 <sqrtf>
 8019208:	e9dd 3102 	ldrd	r3, r1, [sp, #8]
 801920c:	9801      	ldr	r0, [sp, #4]
 801920e:	e5e5      	b.n	8018ddc <nema_vg_draw_path+0x73c>
 8019210:	e9cd 3102 	strd	r3, r1, [sp, #8]
 8019214:	9001      	str	r0, [sp, #4]
 8019216:	f018 f94b 	bl	80314b0 <sqrtf>
 801921a:	e9dd 3102 	ldrd	r3, r1, [sp, #8]
 801921e:	9801      	ldr	r0, [sp, #4]
 8019220:	e69b      	b.n	8018f5a <nema_vg_draw_path+0x8ba>
 8019222:	e9cd 3102 	strd	r3, r1, [sp, #8]
 8019226:	9001      	str	r0, [sp, #4]
 8019228:	f018 f942 	bl	80314b0 <sqrtf>
 801922c:	e9dd 3102 	ldrd	r3, r1, [sp, #8]
 8019230:	9801      	ldr	r0, [sp, #4]
 8019232:	e680      	b.n	8018f36 <nema_vg_draw_path+0x896>
 8019234:	20083194 	.word	0x20083194
 8019238:	941fb414 	.word	0x941fb414
 801923c:	200831cc 	.word	0x200831cc

08019240 <nema_vg_init_stencil_pool>:
 8019240:	b5f0      	push	{r4, r5, r6, r7, lr}
 8019242:	460f      	mov	r7, r1
 8019244:	4606      	mov	r6, r0
 8019246:	b091      	sub	sp, #68	@ 0x44
 8019248:	ac04      	add	r4, sp, #16
 801924a:	4613      	mov	r3, r2
 801924c:	4601      	mov	r1, r0
 801924e:	463a      	mov	r2, r7
 8019250:	4620      	mov	r0, r4
 8019252:	f003 fcc1 	bl	801cbd8 <stencil_buffer_create>
 8019256:	e894 000f 	ldmia.w	r4, {r0, r1, r2, r3}
 801925a:	ad0c      	add	r5, sp, #48	@ 0x30
 801925c:	ac08      	add	r4, sp, #32
 801925e:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 8019262:	e885 000f 	stmia.w	r5, {r0, r1, r2, r3}
 8019266:	f003 fc67 	bl	801cb38 <context_reset>
 801926a:	2216      	movs	r2, #22
 801926c:	2101      	movs	r1, #1
 801926e:	4821      	ldr	r0, [pc, #132]	@ (80192f4 <nema_vg_init_stencil_pool+0xb4>)
 8019270:	f7f9 f952 	bl	8012518 <nema_load_frag_shader>
 8019274:	2217      	movs	r2, #23
 8019276:	2101      	movs	r1, #1
 8019278:	481f      	ldr	r0, [pc, #124]	@ (80192f8 <nema_vg_init_stencil_pool+0xb8>)
 801927a:	f7f9 f94d 	bl	8012518 <nema_load_frag_shader>
 801927e:	2101      	movs	r1, #1
 8019280:	f44f 7062 	mov.w	r0, #904	@ 0x388
 8019284:	f004 feea 	bl	801e05c <nema_cl_add_cmd>
 8019288:	2215      	movs	r2, #21
 801928a:	2101      	movs	r1, #1
 801928c:	481b      	ldr	r0, [pc, #108]	@ (80192fc <nema_vg_init_stencil_pool+0xbc>)
 801928e:	f7f9 f943 	bl	8012518 <nema_load_frag_shader>
 8019292:	2214      	movs	r2, #20
 8019294:	2101      	movs	r1, #1
 8019296:	481a      	ldr	r0, [pc, #104]	@ (8019300 <nema_vg_init_stencil_pool+0xc0>)
 8019298:	f7f9 f93e 	bl	8012518 <nema_load_frag_shader>
 801929c:	4c19      	ldr	r4, [pc, #100]	@ (8019304 <nema_vg_init_stencil_pool+0xc4>)
 801929e:	4b1a      	ldr	r3, [pc, #104]	@ (8019308 <nema_vg_init_stencil_pool+0xc8>)
 80192a0:	a802      	add	r0, sp, #8
 80192a2:	2213      	movs	r2, #19
 80192a4:	2101      	movs	r1, #1
 80192a6:	e9cd 4302 	strd	r4, r3, [sp, #8]
 80192aa:	f7f9 f935 	bl	8012518 <nema_load_frag_shader>
 80192ae:	ab10      	add	r3, sp, #64	@ 0x40
 80192b0:	e913 0003 	ldmdb	r3, {r0, r1}
 80192b4:	e895 000c 	ldmia.w	r5, {r2, r3}
 80192b8:	e88d 0003 	stmia.w	sp, {r0, r1}
 80192bc:	4639      	mov	r1, r7
 80192be:	4630      	mov	r0, r6
 80192c0:	f003 fc9e 	bl	801cc00 <stencil_buffer_set>
 80192c4:	f003 fcd8 	bl	801cc78 <lut_buffer_create>
 80192c8:	f004 fad4 	bl	801d874 <tsvg_init>
 80192cc:	4639      	mov	r1, r7
 80192ce:	4630      	mov	r0, r6
 80192d0:	f004 fac6 	bl	801d860 <set_tsvg_text_max_size>
 80192d4:	f003 fc7c 	bl	801cbd0 <nema_vg_get_context>
 80192d8:	4c0c      	ldr	r4, [pc, #48]	@ (801930c <nema_vg_init_stencil_pool+0xcc>)
 80192da:	6020      	str	r0, [r4, #0]
 80192dc:	f003 fcc6 	bl	801cc6c <nema_vg_get_stencil>
 80192e0:	6822      	ldr	r2, [r4, #0]
 80192e2:	490b      	ldr	r1, [pc, #44]	@ (8019310 <nema_vg_init_stencil_pool+0xd0>)
 80192e4:	6b13      	ldr	r3, [r2, #48]	@ 0x30
 80192e6:	6008      	str	r0, [r1, #0]
 80192e8:	f043 0320 	orr.w	r3, r3, #32
 80192ec:	6313      	str	r3, [r2, #48]	@ 0x30
 80192ee:	b011      	add	sp, #68	@ 0x44
 80192f0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80192f2:	bf00      	nop
 80192f4:	08036008 	.word	0x08036008
 80192f8:	08036020 	.word	0x08036020
 80192fc:	08036018 	.word	0x08036018
 8019300:	08036010 	.word	0x08036010
 8019304:	0a980002 	.word	0x0a980002
 8019308:	8081a046 	.word	0x8081a046
 801930c:	20083148 	.word	0x20083148
 8019310:	200831f0 	.word	0x200831f0

08019314 <points_coincide>:
 8019314:	edd0 7a00 	vldr	s15, [r0]
 8019318:	ed91 7a00 	vldr	s14, [r1]
 801931c:	ee77 6ac7 	vsub.f32	s13, s15, s14
 8019320:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 8019324:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019328:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801932c:	bf48      	it	mi
 801932e:	eef1 6a66 	vnegmi.f32	s13, s13
 8019332:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019336:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 801933a:	bf4c      	ite	mi
 801933c:	eeb1 6a67 	vnegmi.f32	s12, s15
 8019340:	eeb0 6a67 	vmovpl.f32	s12, s15
 8019344:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019348:	d439      	bmi.n	80193be <points_coincide+0xaa>
 801934a:	eeb4 7ac6 	vcmpe.f32	s14, s12
 801934e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019352:	dc3b      	bgt.n	80193cc <points_coincide+0xb8>
 8019354:	eddf 7a2e 	vldr	s15, [pc, #184]	@ 8019410 <points_coincide+0xfc>
 8019358:	ee67 7a27 	vmul.f32	s15, s14, s15
 801935c:	eef4 6ae7 	vcmpe.f32	s13, s15
 8019360:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019364:	d840      	bhi.n	80193e8 <points_coincide+0xd4>
 8019366:	edd0 7a01 	vldr	s15, [r0, #4]
 801936a:	ed91 7a01 	vldr	s14, [r1, #4]
 801936e:	ee77 6ac7 	vsub.f32	s13, s15, s14
 8019372:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 8019376:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801937a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801937e:	bf48      	it	mi
 8019380:	eef1 6a66 	vnegmi.f32	s13, s13
 8019384:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019388:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 801938c:	bf4c      	ite	mi
 801938e:	eeb1 6a67 	vnegmi.f32	s12, s15
 8019392:	eeb0 6a67 	vmovpl.f32	s12, s15
 8019396:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801939a:	d427      	bmi.n	80193ec <points_coincide+0xd8>
 801939c:	eeb4 7ac6 	vcmpe.f32	s14, s12
 80193a0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80193a4:	dc29      	bgt.n	80193fa <points_coincide+0xe6>
 80193a6:	eddf 7a1a 	vldr	s15, [pc, #104]	@ 8019410 <points_coincide+0xfc>
 80193aa:	ee67 7a27 	vmul.f32	s15, s14, s15
 80193ae:	eef4 6ae7 	vcmpe.f32	s13, s15
 80193b2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80193b6:	bf94      	ite	ls
 80193b8:	2001      	movls	r0, #1
 80193ba:	2000      	movhi	r0, #0
 80193bc:	4770      	bx	lr
 80193be:	eeb1 7a47 	vneg.f32	s14, s14
 80193c2:	eeb4 6ac7 	vcmpe.f32	s12, s14
 80193c6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80193ca:	d5c3      	bpl.n	8019354 <points_coincide+0x40>
 80193cc:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80193d0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80193d4:	ed9f 7a0e 	vldr	s14, [pc, #56]	@ 8019410 <points_coincide+0xfc>
 80193d8:	d5be      	bpl.n	8019358 <points_coincide+0x44>
 80193da:	ee67 7ac7 	vnmul.f32	s15, s15, s14
 80193de:	eef4 6ae7 	vcmpe.f32	s13, s15
 80193e2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80193e6:	d9be      	bls.n	8019366 <points_coincide+0x52>
 80193e8:	2000      	movs	r0, #0
 80193ea:	4770      	bx	lr
 80193ec:	eeb1 7a47 	vneg.f32	s14, s14
 80193f0:	eeb4 6ac7 	vcmpe.f32	s12, s14
 80193f4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80193f8:	d5d5      	bpl.n	80193a6 <points_coincide+0x92>
 80193fa:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80193fe:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019402:	ed9f 7a03 	vldr	s14, [pc, #12]	@ 8019410 <points_coincide+0xfc>
 8019406:	d5d0      	bpl.n	80193aa <points_coincide+0x96>
 8019408:	ee67 7ac7 	vnmul.f32	s15, s15, s14
 801940c:	e7cf      	b.n	80193ae <points_coincide+0x9a>
 801940e:	bf00      	nop
 8019410:	3727c5ac 	.word	0x3727c5ac

08019414 <add_last_point>:
 8019414:	b4f0      	push	{r4, r5, r6, r7}
 8019416:	4b2b      	ldr	r3, [pc, #172]	@ (80194c4 <add_last_point+0xb0>)
 8019418:	b082      	sub	sp, #8
 801941a:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 801941c:	f5b2 7f80 	cmp.w	r2, #256	@ 0x100
 8019420:	d022      	beq.n	8019468 <add_last_point+0x54>
 8019422:	f240 11ff 	movw	r1, #511	@ 0x1ff
 8019426:	428a      	cmp	r2, r1
 8019428:	d029      	beq.n	801947e <add_last_point+0x6a>
 801942a:	4c27      	ldr	r4, [pc, #156]	@ (80194c8 <add_last_point+0xb4>)
 801942c:	695a      	ldr	r2, [r3, #20]
 801942e:	6919      	ldr	r1, [r3, #16]
 8019430:	6826      	ldr	r6, [r4, #0]
 8019432:	1c57      	adds	r7, r2, #1
 8019434:	1c8d      	adds	r5, r1, #2
 8019436:	bb46      	cbnz	r6, 801948a <add_last_point+0x76>
 8019438:	681e      	ldr	r6, [r3, #0]
 801943a:	4296      	cmp	r6, r2
 801943c:	d936      	bls.n	80194ac <add_last_point+0x98>
 801943e:	685e      	ldr	r6, [r3, #4]
 8019440:	f040 0002 	orr.w	r0, r0, #2
 8019444:	615f      	str	r7, [r3, #20]
 8019446:	689f      	ldr	r7, [r3, #8]
 8019448:	54b0      	strb	r0, [r6, r2]
 801944a:	1c4a      	adds	r2, r1, #1
 801944c:	42ba      	cmp	r2, r7
 801944e:	d224      	bcs.n	801949a <add_last_point+0x86>
 8019450:	2000      	movs	r0, #0
 8019452:	68da      	ldr	r2, [r3, #12]
 8019454:	611d      	str	r5, [r3, #16]
 8019456:	eb02 0181 	add.w	r1, r2, r1, lsl #2
 801945a:	ed81 0a00 	vstr	s0, [r1]
 801945e:	edc1 0a01 	vstr	s1, [r1, #4]
 8019462:	b002      	add	sp, #8
 8019464:	bcf0      	pop	{r4, r5, r6, r7}
 8019466:	4770      	bx	lr
 8019468:	4917      	ldr	r1, [pc, #92]	@ (80194c8 <add_last_point+0xb4>)
 801946a:	695a      	ldr	r2, [r3, #20]
 801946c:	680d      	ldr	r5, [r1, #0]
 801946e:	1c54      	adds	r4, r2, #1
 8019470:	b98d      	cbnz	r5, 8019496 <add_last_point+0x82>
 8019472:	681d      	ldr	r5, [r3, #0]
 8019474:	4295      	cmp	r5, r2
 8019476:	d91f      	bls.n	80194b8 <add_last_point+0xa4>
 8019478:	6859      	ldr	r1, [r3, #4]
 801947a:	615c      	str	r4, [r3, #20]
 801947c:	5488      	strb	r0, [r1, r2]
 801947e:	2200      	movs	r2, #0
 8019480:	2000      	movs	r0, #0
 8019482:	625a      	str	r2, [r3, #36]	@ 0x24
 8019484:	b002      	add	sp, #8
 8019486:	bcf0      	pop	{r4, r5, r6, r7}
 8019488:	4770      	bx	lr
 801948a:	615f      	str	r7, [r3, #20]
 801948c:	2000      	movs	r0, #0
 801948e:	611d      	str	r5, [r3, #16]
 8019490:	b002      	add	sp, #8
 8019492:	bcf0      	pop	{r4, r5, r6, r7}
 8019494:	4770      	bx	lr
 8019496:	615c      	str	r4, [r3, #20]
 8019498:	e7f1      	b.n	801947e <add_last_point+0x6a>
 801949a:	2102      	movs	r1, #2
 801949c:	2201      	movs	r2, #1
 801949e:	2000      	movs	r0, #0
 80194a0:	611d      	str	r5, [r3, #16]
 80194a2:	6299      	str	r1, [r3, #40]	@ 0x28
 80194a4:	6022      	str	r2, [r4, #0]
 80194a6:	b002      	add	sp, #8
 80194a8:	bcf0      	pop	{r4, r5, r6, r7}
 80194aa:	4770      	bx	lr
 80194ac:	2102      	movs	r1, #2
 80194ae:	2201      	movs	r2, #1
 80194b0:	615f      	str	r7, [r3, #20]
 80194b2:	6299      	str	r1, [r3, #40]	@ 0x28
 80194b4:	6022      	str	r2, [r4, #0]
 80194b6:	e7e9      	b.n	801948c <add_last_point+0x78>
 80194b8:	2002      	movs	r0, #2
 80194ba:	2201      	movs	r2, #1
 80194bc:	615c      	str	r4, [r3, #20]
 80194be:	6298      	str	r0, [r3, #40]	@ 0x28
 80194c0:	600a      	str	r2, [r1, #0]
 80194c2:	e7dc      	b.n	801947e <add_last_point+0x6a>
 80194c4:	200832f0 	.word	0x200832f0
 80194c8:	200832e8 	.word	0x200832e8

080194cc <calc_move_geometry>:
 80194cc:	b4f0      	push	{r4, r5, r6, r7}
 80194ce:	4b2b      	ldr	r3, [pc, #172]	@ (801957c <calc_move_geometry+0xb0>)
 80194d0:	482b      	ldr	r0, [pc, #172]	@ (8019580 <calc_move_geometry+0xb4>)
 80194d2:	ed93 7a00 	vldr	s14, [r3]
 80194d6:	eeb4 0a47 	vcmp.f32	s0, s14
 80194da:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80194de:	4b29      	ldr	r3, [pc, #164]	@ (8019584 <calc_move_geometry+0xb8>)
 80194e0:	bf48      	it	mi
 80194e2:	eeb0 0a47 	vmovmi.f32	s0, s14
 80194e6:	edd3 7a00 	vldr	s15, [r3]
 80194ea:	eef4 7a40 	vcmp.f32	s15, s0
 80194ee:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80194f2:	eef4 0a47 	vcmp.f32	s1, s14
 80194f6:	bf48      	it	mi
 80194f8:	eeb0 0a67 	vmovmi.f32	s0, s15
 80194fc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019500:	bf48      	it	mi
 8019502:	eef0 0a47 	vmovmi.f32	s1, s14
 8019506:	eef4 7a60 	vcmp.f32	s15, s1
 801950a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801950e:	4b1e      	ldr	r3, [pc, #120]	@ (8019588 <calc_move_geometry+0xbc>)
 8019510:	6806      	ldr	r6, [r0, #0]
 8019512:	e9d3 1204 	ldrd	r1, r2, [r3, #16]
 8019516:	b082      	sub	sp, #8
 8019518:	bf48      	it	mi
 801951a:	eef0 0a67 	vmovmi.f32	s1, s15
 801951e:	1c55      	adds	r5, r2, #1
 8019520:	1c8c      	adds	r4, r1, #2
 8019522:	b9b6      	cbnz	r6, 8019552 <calc_move_geometry+0x86>
 8019524:	681e      	ldr	r6, [r3, #0]
 8019526:	4296      	cmp	r6, r2
 8019528:	d921      	bls.n	801956e <calc_move_geometry+0xa2>
 801952a:	2601      	movs	r6, #1
 801952c:	685f      	ldr	r7, [r3, #4]
 801952e:	615d      	str	r5, [r3, #20]
 8019530:	689d      	ldr	r5, [r3, #8]
 8019532:	54be      	strb	r6, [r7, r2]
 8019534:	198a      	adds	r2, r1, r6
 8019536:	42aa      	cmp	r2, r5
 8019538:	d211      	bcs.n	801955e <calc_move_geometry+0x92>
 801953a:	2000      	movs	r0, #0
 801953c:	68da      	ldr	r2, [r3, #12]
 801953e:	611c      	str	r4, [r3, #16]
 8019540:	eb02 0181 	add.w	r1, r2, r1, lsl #2
 8019544:	ed81 0a00 	vstr	s0, [r1]
 8019548:	edc1 0a01 	vstr	s1, [r1, #4]
 801954c:	b002      	add	sp, #8
 801954e:	bcf0      	pop	{r4, r5, r6, r7}
 8019550:	4770      	bx	lr
 8019552:	615d      	str	r5, [r3, #20]
 8019554:	2000      	movs	r0, #0
 8019556:	611c      	str	r4, [r3, #16]
 8019558:	b002      	add	sp, #8
 801955a:	bcf0      	pop	{r4, r5, r6, r7}
 801955c:	4770      	bx	lr
 801955e:	2202      	movs	r2, #2
 8019560:	6006      	str	r6, [r0, #0]
 8019562:	2000      	movs	r0, #0
 8019564:	611c      	str	r4, [r3, #16]
 8019566:	629a      	str	r2, [r3, #40]	@ 0x28
 8019568:	b002      	add	sp, #8
 801956a:	bcf0      	pop	{r4, r5, r6, r7}
 801956c:	4770      	bx	lr
 801956e:	2102      	movs	r1, #2
 8019570:	2201      	movs	r2, #1
 8019572:	615d      	str	r5, [r3, #20]
 8019574:	6299      	str	r1, [r3, #40]	@ 0x28
 8019576:	6002      	str	r2, [r0, #0]
 8019578:	e7ec      	b.n	8019554 <calc_move_geometry+0x88>
 801957a:	bf00      	nop
 801957c:	20000144 	.word	0x20000144
 8019580:	200832e8 	.word	0x200832e8
 8019584:	20000140 	.word	0x20000140
 8019588:	200832f0 	.word	0x200832f0

0801958c <calc_line_geometry>:
 801958c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8019590:	ed2d 8b08 	vpush	{d8-d11}
 8019594:	4b6e      	ldr	r3, [pc, #440]	@ (8019750 <calc_line_geometry+0x1c4>)
 8019596:	b097      	sub	sp, #92	@ 0x5c
 8019598:	ed93 5a00 	vldr	s10, [r3]
 801959c:	eeb4 5ac0 	vcmpe.f32	s10, s0
 80195a0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80195a4:	4b6b      	ldr	r3, [pc, #428]	@ (8019754 <calc_line_geometry+0x1c8>)
 80195a6:	ed8d 0a02 	vstr	s0, [sp, #8]
 80195aa:	edcd 0a03 	vstr	s1, [sp, #12]
 80195ae:	ed8d 1a00 	vstr	s2, [sp]
 80195b2:	edcd 1a01 	vstr	s3, [sp, #4]
 80195b6:	edd3 5a00 	vldr	s11, [r3]
 80195ba:	d405      	bmi.n	80195c8 <calc_line_geometry+0x3c>
 80195bc:	eeb4 5ae0 	vcmpe.f32	s10, s1
 80195c0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80195c4:	f140 824a 	bpl.w	8019a5c <calc_line_geometry+0x4d0>
 80195c8:	eeb4 5ac1 	vcmpe.f32	s10, s2
 80195cc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80195d0:	f100 80ca 	bmi.w	8019768 <calc_line_geometry+0x1dc>
 80195d4:	eeb4 5ae1 	vcmpe.f32	s10, s3
 80195d8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80195dc:	f100 80c4 	bmi.w	8019768 <calc_line_geometry+0x1dc>
 80195e0:	2201      	movs	r2, #1
 80195e2:	eeb4 1ae5 	vcmpe.f32	s2, s11
 80195e6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80195ea:	f100 824f 	bmi.w	8019a8c <calc_line_geometry+0x500>
 80195ee:	eef4 1ae5 	vcmpe.f32	s3, s11
 80195f2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80195f6:	f100 8249 	bmi.w	8019a8c <calc_line_geometry+0x500>
 80195fa:	2400      	movs	r4, #0
 80195fc:	ab12      	add	r3, sp, #72	@ 0x48
 80195fe:	9412      	str	r4, [sp, #72]	@ 0x48
 8019600:	e9c3 4401 	strd	r4, r4, [r3, #4]
 8019604:	60dc      	str	r4, [r3, #12]
 8019606:	2a00      	cmp	r2, #0
 8019608:	f000 83de 	beq.w	8019dc8 <calc_line_geometry+0x83c>
 801960c:	ee31 3ae0 	vsub.f32	s6, s3, s1
 8019610:	ee70 9a65 	vsub.f32	s19, s0, s11
 8019614:	ee71 2a40 	vsub.f32	s5, s2, s0
 8019618:	ee30 8ae5 	vsub.f32	s16, s1, s11
 801961c:	ee35 2a65 	vsub.f32	s4, s10, s11
 8019620:	eef1 4a43 	vneg.f32	s9, s6
 8019624:	ee75 5ae5 	vsub.f32	s11, s11, s11
 8019628:	ee24 baa9 	vmul.f32	s22, s9, s19
 801962c:	ee62 8a88 	vmul.f32	s17, s5, s16
 8019630:	ee62 ba43 	vnmul.f32	s23, s4, s6
 8019634:	ee62 3aa5 	vmul.f32	s7, s5, s11
 8019638:	ee7b aa28 	vadd.f32	s21, s22, s17
 801963c:	ee73 3aab 	vadd.f32	s7, s7, s23
 8019640:	eeca 7aa3 	vdiv.f32	s15, s21, s7
 8019644:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8019648:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801964c:	aa02      	add	r2, sp, #8
 801964e:	ad0a      	add	r5, sp, #40	@ 0x28
 8019650:	e892 0003 	ldmia.w	r2, {r0, r1}
 8019654:	ed8d 1a0c 	vstr	s2, [sp, #48]	@ 0x30
 8019658:	edcd 1a0d 	vstr	s3, [sp, #52]	@ 0x34
 801965c:	e885 0003 	stmia.w	r5, {r0, r1}
 8019660:	db07      	blt.n	8019672 <calc_line_geometry+0xe6>
 8019662:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8019666:	eef4 7ac7 	vcmpe.f32	s15, s14
 801966a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801966e:	f240 85c9 	bls.w	801a204 <calc_line_geometry+0xc78>
 8019672:	ed9f 4a3b 	vldr	s8, [pc, #236]	@ 8019760 <calc_line_geometry+0x1d4>
 8019676:	4622      	mov	r2, r4
 8019678:	eeb0 aa44 	vmov.f32	s20, s8
 801967c:	ee35 9a45 	vsub.f32	s18, s10, s10
 8019680:	ee70 7ac5 	vsub.f32	s15, s1, s10
 8019684:	ee62 6a89 	vmul.f32	s13, s5, s18
 8019688:	ee62 3aa7 	vmul.f32	s7, s5, s15
 801968c:	ee76 6aab 	vadd.f32	s13, s13, s23
 8019690:	ee73 3a8b 	vadd.f32	s7, s7, s22
 8019694:	ee83 7aa6 	vdiv.f32	s14, s7, s13
 8019698:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 801969c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80196a0:	db07      	blt.n	80196b2 <calc_line_geometry+0x126>
 80196a2:	eeb7 6a00 	vmov.f32	s12, #112	@ 0x3f800000  1.0
 80196a6:	eeb4 7ac6 	vcmpe.f32	s14, s12
 80196aa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80196ae:	f240 8574 	bls.w	801a19a <calc_line_geometry+0xc0e>
 80196b2:	ee62 3a82 	vmul.f32	s7, s5, s4
 80196b6:	ee25 4ac3 	vnmul.f32	s8, s11, s6
 80196ba:	ee34 4a23 	vadd.f32	s8, s8, s7
 80196be:	eeca 7a84 	vdiv.f32	s15, s21, s8
 80196c2:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80196c6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80196ca:	db07      	blt.n	80196dc <calc_line_geometry+0x150>
 80196cc:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 80196d0:	eef4 7ac7 	vcmpe.f32	s15, s14
 80196d4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80196d8:	f240 8527 	bls.w	801a12a <calc_line_geometry+0xb9e>
 80196dc:	ee30 5a45 	vsub.f32	s10, s0, s10
 80196e0:	ee69 6a43 	vnmul.f32	s13, s18, s6
 80196e4:	ee64 4a85 	vmul.f32	s9, s9, s10
 80196e8:	ee76 6aa3 	vadd.f32	s13, s13, s7
 80196ec:	ee74 4aa8 	vadd.f32	s9, s9, s17
 80196f0:	eec4 7aa6 	vdiv.f32	s15, s9, s13
 80196f4:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80196f8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80196fc:	db07      	blt.n	801970e <calc_line_geometry+0x182>
 80196fe:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8019702:	eef4 7ac7 	vcmpe.f32	s15, s14
 8019706:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801970a:	f240 84e4 	bls.w	801a0d6 <calc_line_geometry+0xb4a>
 801970e:	4d12      	ldr	r5, [pc, #72]	@ (8019758 <calc_line_geometry+0x1cc>)
 8019710:	4b12      	ldr	r3, [pc, #72]	@ (801975c <calc_line_geometry+0x1d0>)
 8019712:	6828      	ldr	r0, [r5, #0]
 8019714:	e9d3 4204 	ldrd	r4, r2, [r3, #16]
 8019718:	1c51      	adds	r1, r2, #1
 801971a:	1ca6      	adds	r6, r4, #2
 801971c:	2800      	cmp	r0, #0
 801971e:	f040 8435 	bne.w	8019f8c <calc_line_geometry+0xa00>
 8019722:	6818      	ldr	r0, [r3, #0]
 8019724:	4290      	cmp	r0, r2
 8019726:	f240 848f 	bls.w	801a048 <calc_line_geometry+0xabc>
 801972a:	2082      	movs	r0, #130	@ 0x82
 801972c:	685f      	ldr	r7, [r3, #4]
 801972e:	6159      	str	r1, [r3, #20]
 8019730:	54b8      	strb	r0, [r7, r2]
 8019732:	689a      	ldr	r2, [r3, #8]
 8019734:	1c61      	adds	r1, r4, #1
 8019736:	4291      	cmp	r1, r2
 8019738:	f080 8480 	bcs.w	801a03c <calc_line_geometry+0xab0>
 801973c:	68da      	ldr	r2, [r3, #12]
 801973e:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8019740:	9913      	ldr	r1, [sp, #76]	@ 0x4c
 8019742:	eb02 0284 	add.w	r2, r2, r4, lsl #2
 8019746:	611e      	str	r6, [r3, #16]
 8019748:	6010      	str	r0, [r2, #0]
 801974a:	6051      	str	r1, [r2, #4]
 801974c:	f000 bc20 	b.w	8019f90 <calc_line_geometry+0xa04>
 8019750:	20000140 	.word	0x20000140
 8019754:	20000144 	.word	0x20000144
 8019758:	200832e8 	.word	0x200832e8
 801975c:	200832f0 	.word	0x200832f0
 8019760:	00000000 	.word	0x00000000
 8019764:	3727c5ac 	.word	0x3727c5ac
 8019768:	ee35 2a65 	vsub.f32	s4, s10, s11
 801976c:	2200      	movs	r2, #0
 801976e:	eef1 3a42 	vneg.f32	s7, s4
 8019772:	ee35 3ae5 	vsub.f32	s6, s11, s11
 8019776:	ab12      	add	r3, sp, #72	@ 0x48
 8019778:	e9c3 2201 	strd	r2, r2, [r3, #4]
 801977c:	9212      	str	r2, [sp, #72]	@ 0x48
 801977e:	60da      	str	r2, [r3, #12]
 8019780:	ee70 2ae1 	vsub.f32	s5, s1, s3
 8019784:	ee70 4a41 	vsub.f32	s9, s0, s2
 8019788:	ee31 aa65 	vsub.f32	s20, s2, s11
 801978c:	eeb1 4a62 	vneg.f32	s8, s5
 8019790:	ee71 8ae5 	vsub.f32	s17, s3, s11
 8019794:	ee63 3aa2 	vmul.f32	s7, s7, s5
 8019798:	ee64 ba0a 	vmul.f32	s23, s8, s20
 801979c:	ee64 9aa8 	vmul.f32	s19, s9, s17
 80197a0:	ee64 7a83 	vmul.f32	s15, s9, s6
 80197a4:	ee3b baa9 	vadd.f32	s22, s23, s19
 80197a8:	ee77 7aa3 	vadd.f32	s15, s15, s7
 80197ac:	ee8b 7a27 	vdiv.f32	s14, s22, s15
 80197b0:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 80197b4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80197b8:	aa02      	add	r2, sp, #8
 80197ba:	ac10      	add	r4, sp, #64	@ 0x40
 80197bc:	e892 0003 	ldmia.w	r2, {r0, r1}
 80197c0:	ed8d 1a0e 	vstr	s2, [sp, #56]	@ 0x38
 80197c4:	edcd 1a0f 	vstr	s3, [sp, #60]	@ 0x3c
 80197c8:	e884 0003 	stmia.w	r4, {r0, r1}
 80197cc:	db07      	blt.n	80197de <calc_line_geometry+0x252>
 80197ce:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 80197d2:	eeb4 7ae6 	vcmpe.f32	s14, s13
 80197d6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80197da:	f240 824f 	bls.w	8019c7c <calc_line_geometry+0x6f0>
 80197de:	ed1f 8a20 	vldr	s16, [pc, #-128]	@ 8019760 <calc_line_geometry+0x1d4>
 80197e2:	2200      	movs	r2, #0
 80197e4:	eef0 aa48 	vmov.f32	s21, s16
 80197e8:	ee35 9a45 	vsub.f32	s18, s10, s10
 80197ec:	ee71 6ac5 	vsub.f32	s13, s3, s10
 80197f0:	ee64 7a89 	vmul.f32	s15, s9, s18
 80197f4:	ee24 7aa6 	vmul.f32	s14, s9, s13
 80197f8:	ee77 3aa3 	vadd.f32	s7, s15, s7
 80197fc:	ee77 7a2b 	vadd.f32	s15, s14, s23
 8019800:	ee87 7aa3 	vdiv.f32	s14, s15, s7
 8019804:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 8019808:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801980c:	db07      	blt.n	801981e <calc_line_geometry+0x292>
 801980e:	eef7 7a00 	vmov.f32	s15, #112	@ 0x3f800000  1.0
 8019812:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8019816:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801981a:	f240 825d 	bls.w	8019cd8 <calc_line_geometry+0x74c>
 801981e:	ee64 3a82 	vmul.f32	s7, s9, s4
 8019822:	ee23 7a62 	vnmul.f32	s14, s6, s5
 8019826:	ee37 7a23 	vadd.f32	s14, s14, s7
 801982a:	eecb 7a07 	vdiv.f32	s15, s22, s14
 801982e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8019832:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019836:	db07      	blt.n	8019848 <calc_line_geometry+0x2bc>
 8019838:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 801983c:	eef4 7ae6 	vcmpe.f32	s15, s13
 8019840:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019844:	f240 81e3 	bls.w	8019c0e <calc_line_geometry+0x682>
 8019848:	ee31 7a45 	vsub.f32	s14, s2, s10
 801984c:	ee69 7a62 	vnmul.f32	s15, s18, s5
 8019850:	ee24 4a07 	vmul.f32	s8, s8, s14
 8019854:	ee77 7aa3 	vadd.f32	s15, s15, s7
 8019858:	ee34 4a29 	vadd.f32	s8, s8, s19
 801985c:	eec4 6a27 	vdiv.f32	s13, s8, s15
 8019860:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 8019864:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019868:	db07      	blt.n	801987a <calc_line_geometry+0x2ee>
 801986a:	eeb7 6a00 	vmov.f32	s12, #112	@ 0x3f800000  1.0
 801986e:	eef4 6ac6 	vcmpe.f32	s13, s12
 8019872:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019876:	f240 826b 	bls.w	8019d50 <calc_line_geometry+0x7c4>
 801987a:	eeb4 0ae5 	vcmpe.f32	s0, s11
 801987e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019882:	bf54      	ite	pl
 8019884:	eef0 7a40 	vmovpl.f32	s15, s0
 8019888:	eef0 7a65 	vmovmi.f32	s15, s11
 801988c:	eeb4 5a67 	vcmp.f32	s10, s15
 8019890:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019894:	eef4 0ae5 	vcmpe.f32	s1, s11
 8019898:	bf48      	it	mi
 801989a:	eef0 7a45 	vmovmi.f32	s15, s10
 801989e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80198a2:	bf54      	ite	pl
 80198a4:	eef0 6a60 	vmovpl.f32	s13, s1
 80198a8:	eef0 6a65 	vmovmi.f32	s13, s11
 80198ac:	eeb4 5a66 	vcmp.f32	s10, s13
 80198b0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80198b4:	eeb4 1ae5 	vcmpe.f32	s2, s11
 80198b8:	bf48      	it	mi
 80198ba:	eef0 6a45 	vmovmi.f32	s13, s10
 80198be:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80198c2:	bf54      	ite	pl
 80198c4:	eeb0 7a41 	vmovpl.f32	s14, s2
 80198c8:	eeb0 7a65 	vmovmi.f32	s14, s11
 80198cc:	eeb4 5a47 	vcmp.f32	s10, s14
 80198d0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80198d4:	eef4 1ae5 	vcmpe.f32	s3, s11
 80198d8:	bf48      	it	mi
 80198da:	eeb0 7a45 	vmovmi.f32	s14, s10
 80198de:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80198e2:	bf58      	it	pl
 80198e4:	eef0 5a61 	vmovpl.f32	s11, s3
 80198e8:	eeb4 5a65 	vcmp.f32	s10, s11
 80198ec:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80198f0:	bf48      	it	mi
 80198f2:	eef0 5a45 	vmovmi.f32	s11, s10
 80198f6:	2a02      	cmp	r2, #2
 80198f8:	f000 8178 	beq.w	8019bec <calc_line_geometry+0x660>
 80198fc:	ee37 5ac7 	vsub.f32	s10, s15, s14
 8019900:	eeb5 5ac0 	vcmpe.f32	s10, #0.0
 8019904:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019908:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801990c:	bf48      	it	mi
 801990e:	eeb1 5a45 	vnegmi.f32	s10, s10
 8019912:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019916:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 801991a:	bf4c      	ite	mi
 801991c:	eef1 4a67 	vnegmi.f32	s9, s15
 8019920:	eef0 4a67 	vmovpl.f32	s9, s15
 8019924:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019928:	f100 8261 	bmi.w	8019dee <calc_line_geometry+0x862>
 801992c:	eef4 4ac7 	vcmpe.f32	s9, s14
 8019930:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019934:	f140 8243 	bpl.w	8019dbe <calc_line_geometry+0x832>
 8019938:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801993c:	ed1f 6a77 	vldr	s12, [pc, #-476]	@ 8019764 <calc_line_geometry+0x1d8>
 8019940:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019944:	bf4c      	ite	mi
 8019946:	ee27 6ac6 	vnmulmi.f32	s12, s15, s12
 801994a:	ee27 6a86 	vmulpl.f32	s12, s15, s12
 801994e:	eeb4 5ac6 	vcmpe.f32	s10, s12
 8019952:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019956:	d96e      	bls.n	8019a36 <calc_line_geometry+0x4aa>
 8019958:	ee36 5ae5 	vsub.f32	s10, s13, s11
 801995c:	eeb5 5ac0 	vcmpe.f32	s10, #0.0
 8019960:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019964:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 8019968:	bf48      	it	mi
 801996a:	eeb1 5a45 	vnegmi.f32	s10, s10
 801996e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019972:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 8019976:	bf4c      	ite	mi
 8019978:	eef1 4a66 	vnegmi.f32	s9, s13
 801997c:	eef0 4a66 	vmovpl.f32	s9, s13
 8019980:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019984:	f100 82ee 	bmi.w	8019f64 <calc_line_geometry+0x9d8>
 8019988:	eef4 4ae5 	vcmpe.f32	s9, s11
 801998c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019990:	f100 82f0 	bmi.w	8019f74 <calc_line_geometry+0x9e8>
 8019994:	ed1f 6a8d 	vldr	s12, [pc, #-564]	@ 8019764 <calc_line_geometry+0x1d8>
 8019998:	ee25 6a86 	vmul.f32	s12, s11, s12
 801999c:	eeb4 5ac6 	vcmpe.f32	s10, s12
 80199a0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80199a4:	d947      	bls.n	8019a36 <calc_line_geometry+0x4aa>
 80199a6:	ee71 1ae0 	vsub.f32	s3, s3, s1
 80199aa:	ee31 1a40 	vsub.f32	s2, s2, s0
 80199ae:	ee37 6ac0 	vsub.f32	s12, s15, s0
 80199b2:	ee35 5ae0 	vsub.f32	s10, s11, s1
 80199b6:	ee37 0a40 	vsub.f32	s0, s14, s0
 80199ba:	ee76 0ae0 	vsub.f32	s1, s13, s1
 80199be:	ee26 6a21 	vmul.f32	s12, s12, s3
 80199c2:	ee25 5a01 	vmul.f32	s10, s10, s2
 80199c6:	ee60 1a21 	vmul.f32	s3, s0, s3
 80199ca:	ee20 1a81 	vmul.f32	s2, s1, s2
 80199ce:	4bdc      	ldr	r3, [pc, #880]	@ (8019d40 <calc_line_geometry+0x7b4>)
 80199d0:	48dc      	ldr	r0, [pc, #880]	@ (8019d44 <calc_line_geometry+0x7b8>)
 80199d2:	6959      	ldr	r1, [r3, #20]
 80199d4:	6802      	ldr	r2, [r0, #0]
 80199d6:	ee36 6a45 	vsub.f32	s12, s12, s10
 80199da:	ee71 1ac1 	vsub.f32	s3, s3, s2
 80199de:	1c4c      	adds	r4, r1, #1
 80199e0:	2a00      	cmp	r2, #0
 80199e2:	f000 8322 	beq.w	801a02a <calc_line_geometry+0xa9e>
 80199e6:	615c      	str	r4, [r3, #20]
 80199e8:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
 80199ec:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80199f0:	eef5 1ac0 	vcmpe.f32	s3, #0.0
 80199f4:	bf48      	it	mi
 80199f6:	eeb1 6a46 	vnegmi.f32	s12, s12
 80199fa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80199fe:	bf48      	it	mi
 8019a00:	eef1 1a61 	vnegmi.f32	s3, s3
 8019a04:	eeb4 6ae1 	vcmpe.f32	s12, s3
 8019a08:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019a0c:	6919      	ldr	r1, [r3, #16]
 8019a0e:	f101 0502 	add.w	r5, r1, #2
 8019a12:	f140 8350 	bpl.w	801a0b6 <calc_line_geometry+0xb2a>
 8019a16:	2a00      	cmp	r2, #0
 8019a18:	f040 834b 	bne.w	801a0b2 <calc_line_geometry+0xb26>
 8019a1c:	689a      	ldr	r2, [r3, #8]
 8019a1e:	1c4c      	adds	r4, r1, #1
 8019a20:	4294      	cmp	r4, r2
 8019a22:	f080 8516 	bcs.w	801a452 <calc_line_geometry+0xec6>
 8019a26:	68da      	ldr	r2, [r3, #12]
 8019a28:	611d      	str	r5, [r3, #16]
 8019a2a:	eb02 0181 	add.w	r1, r2, r1, lsl #2
 8019a2e:	edc1 7a00 	vstr	s15, [r1]
 8019a32:	edc1 5a01 	vstr	s11, [r1, #4]
 8019a36:	eeb0 0a47 	vmov.f32	s0, s14
 8019a3a:	eef0 0a65 	vmov.f32	s1, s11
 8019a3e:	2080      	movs	r0, #128	@ 0x80
 8019a40:	f7ff fce8 	bl	8019414 <add_last_point>
 8019a44:	4604      	mov	r4, r0
 8019a46:	2800      	cmp	r0, #0
 8019a48:	f000 81c9 	beq.w	8019dde <calc_line_geometry+0x852>
 8019a4c:	f003 f952 	bl	801ccf4 <nema_vg_set_error>
 8019a50:	4620      	mov	r0, r4
 8019a52:	b017      	add	sp, #92	@ 0x5c
 8019a54:	ecbd 8b08 	vpop	{d8-d11}
 8019a58:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8019a5c:	eeb4 0ae5 	vcmpe.f32	s0, s11
 8019a60:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019a64:	f53f adb0 	bmi.w	80195c8 <calc_line_geometry+0x3c>
 8019a68:	eef4 0ae5 	vcmpe.f32	s1, s11
 8019a6c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019a70:	eeb4 5ac1 	vcmpe.f32	s10, s2
 8019a74:	bf4c      	ite	mi
 8019a76:	2201      	movmi	r2, #1
 8019a78:	2200      	movpl	r2, #0
 8019a7a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019a7e:	d405      	bmi.n	8019a8c <calc_line_geometry+0x500>
 8019a80:	eeb4 5ae1 	vcmpe.f32	s10, s3
 8019a84:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019a88:	f57f adab 	bpl.w	80195e2 <calc_line_geometry+0x56>
 8019a8c:	2100      	movs	r1, #0
 8019a8e:	ee35 2a65 	vsub.f32	s4, s10, s11
 8019a92:	ab12      	add	r3, sp, #72	@ 0x48
 8019a94:	9112      	str	r1, [sp, #72]	@ 0x48
 8019a96:	e9c3 1101 	strd	r1, r1, [r3, #4]
 8019a9a:	60d9      	str	r1, [r3, #12]
 8019a9c:	eef1 3a42 	vneg.f32	s7, s4
 8019aa0:	ee35 3ae5 	vsub.f32	s6, s11, s11
 8019aa4:	2a00      	cmp	r2, #0
 8019aa6:	f47f ae6b 	bne.w	8019780 <calc_line_geometry+0x1f4>
 8019aaa:	ee71 2ae0 	vsub.f32	s5, s3, s1
 8019aae:	ee31 4a40 	vsub.f32	s8, s2, s0
 8019ab2:	ee70 9a65 	vsub.f32	s19, s0, s11
 8019ab6:	eef1 4a62 	vneg.f32	s9, s5
 8019aba:	ee30 8ae5 	vsub.f32	s16, s1, s11
 8019abe:	ee62 3aa3 	vmul.f32	s7, s5, s7
 8019ac2:	ee64 baa9 	vmul.f32	s23, s9, s19
 8019ac6:	ee64 8a08 	vmul.f32	s17, s8, s16
 8019aca:	ee24 7a03 	vmul.f32	s14, s8, s6
 8019ace:	ee3b baa8 	vadd.f32	s22, s23, s17
 8019ad2:	ee37 7a23 	vadd.f32	s14, s14, s7
 8019ad6:	eecb 7a07 	vdiv.f32	s15, s22, s14
 8019ada:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8019ade:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019ae2:	a902      	add	r1, sp, #8
 8019ae4:	ac06      	add	r4, sp, #24
 8019ae6:	c903      	ldmia	r1, {r0, r1}
 8019ae8:	ed8d 1a08 	vstr	s2, [sp, #32]
 8019aec:	edcd 1a09 	vstr	s3, [sp, #36]	@ 0x24
 8019af0:	e884 0003 	stmia.w	r4, {r0, r1}
 8019af4:	db07      	blt.n	8019b06 <calc_line_geometry+0x57a>
 8019af6:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8019afa:	eef4 7ae6 	vcmpe.f32	s15, s13
 8019afe:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019b02:	f240 8444 	bls.w	801a38e <calc_line_geometry+0xe02>
 8019b06:	ed9f 9a90 	vldr	s18, [pc, #576]	@ 8019d48 <calc_line_geometry+0x7bc>
 8019b0a:	eef0 aa49 	vmov.f32	s21, s18
 8019b0e:	ee35 aa45 	vsub.f32	s20, s10, s10
 8019b12:	ee70 7ac5 	vsub.f32	s15, s1, s10
 8019b16:	ee24 7a0a 	vmul.f32	s14, s8, s20
 8019b1a:	ee64 6a27 	vmul.f32	s13, s8, s15
 8019b1e:	ee77 3a23 	vadd.f32	s7, s14, s7
 8019b22:	ee36 7aab 	vadd.f32	s14, s13, s23
 8019b26:	eec7 6a23 	vdiv.f32	s13, s14, s7
 8019b2a:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 8019b2e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019b32:	db07      	blt.n	8019b44 <calc_line_geometry+0x5b8>
 8019b34:	eeb7 6a00 	vmov.f32	s12, #112	@ 0x3f800000  1.0
 8019b38:	eef4 6ac6 	vcmpe.f32	s13, s12
 8019b3c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019b40:	f240 83f0 	bls.w	801a324 <calc_line_geometry+0xd98>
 8019b44:	ee24 9a02 	vmul.f32	s18, s8, s4
 8019b48:	ee63 6a62 	vnmul.f32	s13, s6, s5
 8019b4c:	ee76 6a89 	vadd.f32	s13, s13, s18
 8019b50:	eecb 7a26 	vdiv.f32	s15, s22, s13
 8019b54:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8019b58:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019b5c:	db07      	blt.n	8019b6e <calc_line_geometry+0x5e2>
 8019b5e:	eef7 3a00 	vmov.f32	s7, #112	@ 0x3f800000  1.0
 8019b62:	eef4 7ae3 	vcmpe.f32	s15, s7
 8019b66:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019b6a:	f240 83a4 	bls.w	801a2b6 <calc_line_geometry+0xd2a>
 8019b6e:	ee70 7a45 	vsub.f32	s15, s0, s10
 8019b72:	ee2a 7a62 	vnmul.f32	s14, s20, s5
 8019b76:	ee64 4aa7 	vmul.f32	s9, s9, s15
 8019b7a:	ee37 7a09 	vadd.f32	s14, s14, s18
 8019b7e:	ee74 4aa8 	vadd.f32	s9, s9, s17
 8019b82:	eec4 6a87 	vdiv.f32	s13, s9, s14
 8019b86:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 8019b8a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019b8e:	db07      	blt.n	8019ba0 <calc_line_geometry+0x614>
 8019b90:	eeb7 6a00 	vmov.f32	s12, #112	@ 0x3f800000  1.0
 8019b94:	eef4 6ac6 	vcmpe.f32	s13, s12
 8019b98:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019b9c:	f240 8362 	bls.w	801a264 <calc_line_geometry+0xcd8>
 8019ba0:	f240 10ff 	movw	r0, #511	@ 0x1ff
 8019ba4:	4b66      	ldr	r3, [pc, #408]	@ (8019d40 <calc_line_geometry+0x7b4>)
 8019ba6:	4e67      	ldr	r6, [pc, #412]	@ (8019d44 <calc_line_geometry+0x7b8>)
 8019ba8:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 8019baa:	6834      	ldr	r4, [r6, #0]
 8019bac:	e9d3 5104 	ldrd	r5, r1, [r3, #16]
 8019bb0:	4282      	cmp	r2, r0
 8019bb2:	bf0c      	ite	eq
 8019bb4:	2282      	moveq	r2, #130	@ 0x82
 8019bb6:	2202      	movne	r2, #2
 8019bb8:	1caf      	adds	r7, r5, #2
 8019bba:	1c48      	adds	r0, r1, #1
 8019bbc:	2c00      	cmp	r4, #0
 8019bbe:	f040 8201 	bne.w	8019fc4 <calc_line_geometry+0xa38>
 8019bc2:	681c      	ldr	r4, [r3, #0]
 8019bc4:	428c      	cmp	r4, r1
 8019bc6:	f240 825f 	bls.w	801a088 <calc_line_geometry+0xafc>
 8019bca:	685c      	ldr	r4, [r3, #4]
 8019bcc:	6158      	str	r0, [r3, #20]
 8019bce:	6898      	ldr	r0, [r3, #8]
 8019bd0:	5462      	strb	r2, [r4, r1]
 8019bd2:	1c69      	adds	r1, r5, #1
 8019bd4:	4281      	cmp	r1, r0
 8019bd6:	f080 8251 	bcs.w	801a07c <calc_line_geometry+0xaf0>
 8019bda:	68da      	ldr	r2, [r3, #12]
 8019bdc:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8019bde:	9913      	ldr	r1, [sp, #76]	@ 0x4c
 8019be0:	eb02 0285 	add.w	r2, r2, r5, lsl #2
 8019be4:	611f      	str	r7, [r3, #16]
 8019be6:	6010      	str	r0, [r2, #0]
 8019be8:	6051      	str	r1, [r2, #4]
 8019bea:	e1ed      	b.n	8019fc8 <calc_line_geometry+0xa3c>
 8019bec:	4b54      	ldr	r3, [pc, #336]	@ (8019d40 <calc_line_geometry+0x7b4>)
 8019bee:	4855      	ldr	r0, [pc, #340]	@ (8019d44 <calc_line_geometry+0x7b8>)
 8019bf0:	695d      	ldr	r5, [r3, #20]
 8019bf2:	6801      	ldr	r1, [r0, #0]
 8019bf4:	1c6e      	adds	r6, r5, #1
 8019bf6:	2900      	cmp	r1, #0
 8019bf8:	f040 8106 	bne.w	8019e08 <calc_line_geometry+0x87c>
 8019bfc:	681c      	ldr	r4, [r3, #0]
 8019bfe:	42ac      	cmp	r4, r5
 8019c00:	f240 820e 	bls.w	801a020 <calc_line_geometry+0xa94>
 8019c04:	2482      	movs	r4, #130	@ 0x82
 8019c06:	685a      	ldr	r2, [r3, #4]
 8019c08:	615e      	str	r6, [r3, #20]
 8019c0a:	5554      	strb	r4, [r2, r5]
 8019c0c:	e0fd      	b.n	8019e0a <calc_line_geometry+0x87e>
 8019c0e:	ee28 3a83 	vmul.f32	s6, s17, s6
 8019c12:	ee2a aa02 	vmul.f32	s20, s20, s4
 8019c16:	ee33 aa4a 	vsub.f32	s20, s6, s20
 8019c1a:	eeca 7a07 	vdiv.f32	s15, s20, s14
 8019c1e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8019c22:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019c26:	f6ff ae0f 	blt.w	8019848 <calc_line_geometry+0x2bc>
 8019c2a:	eef4 7ae6 	vcmpe.f32	s15, s13
 8019c2e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019c32:	f63f ae09 	bhi.w	8019848 <calc_line_geometry+0x2bc>
 8019c36:	2a02      	cmp	r2, #2
 8019c38:	f43f ae06 	beq.w	8019848 <calc_line_geometry+0x2bc>
 8019c3c:	ee24 7aa7 	vmul.f32	s14, s9, s15
 8019c40:	ee62 7aa7 	vmul.f32	s15, s5, s15
 8019c44:	2a01      	cmp	r2, #1
 8019c46:	ee37 7a01 	vadd.f32	s14, s14, s2
 8019c4a:	ee77 7aa1 	vadd.f32	s15, s15, s3
 8019c4e:	f000 846b 	beq.w	801a528 <calc_line_geometry+0xf9c>
 8019c52:	eb03 05c2 	add.w	r5, r3, r2, lsl #3
 8019c56:	4619      	mov	r1, r3
 8019c58:	a80e      	add	r0, sp, #56	@ 0x38
 8019c5a:	ed85 7a00 	vstr	s14, [r5]
 8019c5e:	edc5 7a01 	vstr	s15, [r5, #4]
 8019c62:	f7ff fb57 	bl	8019314 <points_coincide>
 8019c66:	2800      	cmp	r0, #0
 8019c68:	f47f adee 	bne.w	8019848 <calc_line_geometry+0x2bc>
 8019c6c:	4620      	mov	r0, r4
 8019c6e:	f7ff fb51 	bl	8019314 <points_coincide>
 8019c72:	2800      	cmp	r0, #0
 8019c74:	f47f ade8 	bne.w	8019848 <calc_line_geometry+0x2bc>
 8019c78:	3201      	adds	r2, #1
 8019c7a:	e5e5      	b.n	8019848 <calc_line_geometry+0x2bc>
 8019c7c:	ee28 7a82 	vmul.f32	s14, s17, s4
 8019c80:	ee2a 6a03 	vmul.f32	s12, s20, s6
 8019c84:	ee37 7a46 	vsub.f32	s14, s14, s12
 8019c88:	ee87 8a27 	vdiv.f32	s16, s14, s15
 8019c8c:	eeb5 8ac0 	vcmpe.f32	s16, #0.0
 8019c90:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019c94:	f6ff ada3 	blt.w	80197de <calc_line_geometry+0x252>
 8019c98:	eeb4 8ae6 	vcmpe.f32	s16, s13
 8019c9c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019ca0:	f63f ad9d 	bhi.w	80197de <calc_line_geometry+0x252>
 8019ca4:	ee64 aa88 	vmul.f32	s21, s9, s16
 8019ca8:	ee22 8a88 	vmul.f32	s16, s5, s16
 8019cac:	ee7a aa81 	vadd.f32	s21, s21, s2
 8019cb0:	ee38 8a21 	vadd.f32	s16, s16, s3
 8019cb4:	4619      	mov	r1, r3
 8019cb6:	a80e      	add	r0, sp, #56	@ 0x38
 8019cb8:	edcd aa12 	vstr	s21, [sp, #72]	@ 0x48
 8019cbc:	ed8d 8a13 	vstr	s16, [sp, #76]	@ 0x4c
 8019cc0:	f7ff fb28 	bl	8019314 <points_coincide>
 8019cc4:	2800      	cmp	r0, #0
 8019cc6:	f040 8090 	bne.w	8019dea <calc_line_geometry+0x85e>
 8019cca:	4620      	mov	r0, r4
 8019ccc:	f7ff fb22 	bl	8019314 <points_coincide>
 8019cd0:	fab0 f280 	clz	r2, r0
 8019cd4:	0952      	lsrs	r2, r2, #5
 8019cd6:	e587      	b.n	80197e8 <calc_line_geometry+0x25c>
 8019cd8:	ee2a 7a09 	vmul.f32	s14, s20, s18
 8019cdc:	ee62 6a26 	vmul.f32	s13, s4, s13
 8019ce0:	ee76 6ac7 	vsub.f32	s13, s13, s14
 8019ce4:	ee86 7aa3 	vdiv.f32	s14, s13, s7
 8019ce8:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 8019cec:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019cf0:	f6ff ad95 	blt.w	801981e <calc_line_geometry+0x292>
 8019cf4:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8019cf8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019cfc:	f63f ad8f 	bhi.w	801981e <calc_line_geometry+0x292>
 8019d00:	ee62 7a87 	vmul.f32	s15, s5, s14
 8019d04:	ee64 6a87 	vmul.f32	s13, s9, s14
 8019d08:	2a01      	cmp	r2, #1
 8019d0a:	ee36 7a81 	vadd.f32	s14, s13, s2
 8019d0e:	ee77 7aa1 	vadd.f32	s15, s15, s3
 8019d12:	f000 845f 	beq.w	801a5d4 <calc_line_geometry+0x1048>
 8019d16:	eb03 05c2 	add.w	r5, r3, r2, lsl #3
 8019d1a:	4619      	mov	r1, r3
 8019d1c:	a80e      	add	r0, sp, #56	@ 0x38
 8019d1e:	ed85 7a00 	vstr	s14, [r5]
 8019d22:	edc5 7a01 	vstr	s15, [r5, #4]
 8019d26:	f7ff faf5 	bl	8019314 <points_coincide>
 8019d2a:	2800      	cmp	r0, #0
 8019d2c:	f47f ad77 	bne.w	801981e <calc_line_geometry+0x292>
 8019d30:	4620      	mov	r0, r4
 8019d32:	f7ff faef 	bl	8019314 <points_coincide>
 8019d36:	2800      	cmp	r0, #0
 8019d38:	f47f ad71 	bne.w	801981e <calc_line_geometry+0x292>
 8019d3c:	3201      	adds	r2, #1
 8019d3e:	e56e      	b.n	801981e <calc_line_geometry+0x292>
 8019d40:	200832f0 	.word	0x200832f0
 8019d44:	200832e8 	.word	0x200832e8
 8019d48:	00000000 	.word	0x00000000
 8019d4c:	3727c5ac 	.word	0x3727c5ac
 8019d50:	ee22 2a07 	vmul.f32	s4, s4, s14
 8019d54:	ee68 8a89 	vmul.f32	s17, s17, s18
 8019d58:	ee38 2ac2 	vsub.f32	s4, s17, s4
 8019d5c:	ee82 7a27 	vdiv.f32	s14, s4, s15
 8019d60:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 8019d64:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019d68:	f6ff ad87 	blt.w	801987a <calc_line_geometry+0x2ee>
 8019d6c:	eeb4 7ac6 	vcmpe.f32	s14, s12
 8019d70:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019d74:	f63f ad81 	bhi.w	801987a <calc_line_geometry+0x2ee>
 8019d78:	2a02      	cmp	r2, #2
 8019d7a:	f43f ad7e 	beq.w	801987a <calc_line_geometry+0x2ee>
 8019d7e:	ee64 7a87 	vmul.f32	s15, s9, s14
 8019d82:	ee22 7a87 	vmul.f32	s14, s5, s14
 8019d86:	2a01      	cmp	r2, #1
 8019d88:	ee77 7a81 	vadd.f32	s15, s15, s2
 8019d8c:	ee37 7a21 	vadd.f32	s14, s14, s3
 8019d90:	f000 8374 	beq.w	801a47c <calc_line_geometry+0xef0>
 8019d94:	eb03 05c2 	add.w	r5, r3, r2, lsl #3
 8019d98:	4619      	mov	r1, r3
 8019d9a:	a80e      	add	r0, sp, #56	@ 0x38
 8019d9c:	edc5 7a00 	vstr	s15, [r5]
 8019da0:	ed85 7a01 	vstr	s14, [r5, #4]
 8019da4:	f7ff fab6 	bl	8019314 <points_coincide>
 8019da8:	2800      	cmp	r0, #0
 8019daa:	f47f ad66 	bne.w	801987a <calc_line_geometry+0x2ee>
 8019dae:	4620      	mov	r0, r4
 8019db0:	f7ff fab0 	bl	8019314 <points_coincide>
 8019db4:	2800      	cmp	r0, #0
 8019db6:	f47f ad60 	bne.w	801987a <calc_line_geometry+0x2ee>
 8019dba:	3201      	adds	r2, #1
 8019dbc:	e55d      	b.n	801987a <calc_line_geometry+0x2ee>
 8019dbe:	ed1f 6a1d 	vldr	s12, [pc, #-116]	@ 8019d4c <calc_line_geometry+0x7c0>
 8019dc2:	ee27 6a06 	vmul.f32	s12, s14, s12
 8019dc6:	e5c2      	b.n	801994e <calc_line_geometry+0x3c2>
 8019dc8:	4610      	mov	r0, r2
 8019dca:	ed9d 0a00 	vldr	s0, [sp]
 8019dce:	eddd 0a01 	vldr	s1, [sp, #4]
 8019dd2:	f7ff fb1f 	bl	8019414 <add_last_point>
 8019dd6:	4604      	mov	r4, r0
 8019dd8:	2800      	cmp	r0, #0
 8019dda:	f47f ae37 	bne.w	8019a4c <calc_line_geometry+0x4c0>
 8019dde:	4620      	mov	r0, r4
 8019de0:	b017      	add	sp, #92	@ 0x5c
 8019de2:	ecbd 8b08 	vpop	{d8-d11}
 8019de6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8019dea:	2200      	movs	r2, #0
 8019dec:	e4fc      	b.n	80197e8 <calc_line_geometry+0x25c>
 8019dee:	eeb1 6a47 	vneg.f32	s12, s14
 8019df2:	eef4 4ac6 	vcmpe.f32	s9, s12
 8019df6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019dfa:	f53f ad9d 	bmi.w	8019938 <calc_line_geometry+0x3ac>
 8019dfe:	ed5f 4a2d 	vldr	s9, [pc, #-180]	@ 8019d4c <calc_line_geometry+0x7c0>
 8019e02:	ee26 6a24 	vmul.f32	s12, s12, s9
 8019e06:	e5a2      	b.n	801994e <calc_line_geometry+0x3c2>
 8019e08:	615e      	str	r6, [r3, #20]
 8019e0a:	ed9d 6a12 	vldr	s12, [sp, #72]	@ 0x48
 8019e0e:	ee37 5ac6 	vsub.f32	s10, s15, s12
 8019e12:	f240 12ff 	movw	r2, #511	@ 0x1ff
 8019e16:	eeb5 5ac0 	vcmpe.f32	s10, #0.0
 8019e1a:	6a5c      	ldr	r4, [r3, #36]	@ 0x24
 8019e1c:	4294      	cmp	r4, r2
 8019e1e:	bf0c      	ite	eq
 8019e20:	2482      	moveq	r4, #130	@ 0x82
 8019e22:	2402      	movne	r4, #2
 8019e24:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019e28:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8019e2c:	bf48      	it	mi
 8019e2e:	eeb1 5a45 	vnegmi.f32	s10, s10
 8019e32:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019e36:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
 8019e3a:	bf4c      	ite	mi
 8019e3c:	eef1 4a67 	vnegmi.f32	s9, s15
 8019e40:	eef0 4a67 	vmovpl.f32	s9, s15
 8019e44:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019e48:	d478      	bmi.n	8019f3c <calc_line_geometry+0x9b0>
 8019e4a:	eeb4 6ae4 	vcmpe.f32	s12, s9
 8019e4e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019e52:	dc7b      	bgt.n	8019f4c <calc_line_geometry+0x9c0>
 8019e54:	ed5f 7a43 	vldr	s15, [pc, #-268]	@ 8019d4c <calc_line_geometry+0x7c0>
 8019e58:	ee66 7a27 	vmul.f32	s15, s12, s15
 8019e5c:	eeb4 5ae7 	vcmpe.f32	s10, s15
 8019e60:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019e64:	691a      	ldr	r2, [r3, #16]
 8019e66:	f102 0e02 	add.w	lr, r2, #2
 8019e6a:	d93f      	bls.n	8019eec <calc_line_geometry+0x960>
 8019e6c:	eddd 7a13 	vldr	s15, [sp, #76]	@ 0x4c
 8019e70:	ee36 5ae7 	vsub.f32	s10, s13, s15
 8019e74:	eeb5 5ac0 	vcmpe.f32	s10, #0.0
 8019e78:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019e7c:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 8019e80:	bf48      	it	mi
 8019e82:	eeb1 5a45 	vnegmi.f32	s10, s10
 8019e86:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019e8a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8019e8e:	bf4c      	ite	mi
 8019e90:	eef1 4a66 	vnegmi.f32	s9, s13
 8019e94:	eef0 4a66 	vmovpl.f32	s9, s13
 8019e98:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019e9c:	f100 82a6 	bmi.w	801a3ec <calc_line_geometry+0xe60>
 8019ea0:	eef4 7ae4 	vcmpe.f32	s15, s9
 8019ea4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019ea8:	f340 80fe 	ble.w	801a0a8 <calc_line_geometry+0xb1c>
 8019eac:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 8019eb0:	ed5f 4a5a 	vldr	s9, [pc, #-360]	@ 8019d4c <calc_line_geometry+0x7c0>
 8019eb4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019eb8:	bf4c      	ite	mi
 8019eba:	ee66 6ae4 	vnmulmi.f32	s13, s13, s9
 8019ebe:	ee66 6aa4 	vmulpl.f32	s13, s13, s9
 8019ec2:	eeb4 5ae6 	vcmpe.f32	s10, s13
 8019ec6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019eca:	d90f      	bls.n	8019eec <calc_line_geometry+0x960>
 8019ecc:	3502      	adds	r5, #2
 8019ece:	1d17      	adds	r7, r2, #4
 8019ed0:	b949      	cbnz	r1, 8019ee6 <calc_line_geometry+0x95a>
 8019ed2:	f8d3 8008 	ldr.w	r8, [r3, #8]
 8019ed6:	1c51      	adds	r1, r2, #1
 8019ed8:	4541      	cmp	r1, r8
 8019eda:	f0c0 8294 	bcc.w	801a406 <calc_line_geometry+0xe7a>
 8019ede:	2102      	movs	r1, #2
 8019ee0:	2201      	movs	r2, #1
 8019ee2:	6299      	str	r1, [r3, #40]	@ 0x28
 8019ee4:	6002      	str	r2, [r0, #0]
 8019ee6:	615d      	str	r5, [r3, #20]
 8019ee8:	611f      	str	r7, [r3, #16]
 8019eea:	e5a4      	b.n	8019a36 <calc_line_geometry+0x4aa>
 8019eec:	2900      	cmp	r1, #0
 8019eee:	d160      	bne.n	8019fb2 <calc_line_geometry+0xa26>
 8019ef0:	f8d3 c008 	ldr.w	ip, [r3, #8]
 8019ef4:	1c51      	adds	r1, r2, #1
 8019ef6:	4561      	cmp	r1, ip
 8019ef8:	f080 80b2 	bcs.w	801a060 <calc_line_geometry+0xad4>
 8019efc:	68df      	ldr	r7, [r3, #12]
 8019efe:	9913      	ldr	r1, [sp, #76]	@ 0x4c
 8019f00:	eb07 0882 	add.w	r8, r7, r2, lsl #2
 8019f04:	1caf      	adds	r7, r5, #2
 8019f06:	681d      	ldr	r5, [r3, #0]
 8019f08:	f8c8 1004 	str.w	r1, [r8, #4]
 8019f0c:	42b5      	cmp	r5, r6
 8019f0e:	f8c3 e010 	str.w	lr, [r3, #16]
 8019f12:	ed88 6a00 	vstr	s12, [r8]
 8019f16:	f102 0104 	add.w	r1, r2, #4
 8019f1a:	f240 809b 	bls.w	801a054 <calc_line_geometry+0xac8>
 8019f1e:	1cd5      	adds	r5, r2, #3
 8019f20:	685a      	ldr	r2, [r3, #4]
 8019f22:	45ac      	cmp	ip, r5
 8019f24:	615f      	str	r7, [r3, #20]
 8019f26:	5594      	strb	r4, [r2, r6]
 8019f28:	f240 80a2 	bls.w	801a070 <calc_line_geometry+0xae4>
 8019f2c:	9814      	ldr	r0, [sp, #80]	@ 0x50
 8019f2e:	9a15      	ldr	r2, [sp, #84]	@ 0x54
 8019f30:	6119      	str	r1, [r3, #16]
 8019f32:	f8c8 0008 	str.w	r0, [r8, #8]
 8019f36:	f8c8 200c 	str.w	r2, [r8, #12]
 8019f3a:	e57c      	b.n	8019a36 <calc_line_geometry+0x4aa>
 8019f3c:	eeb1 4a46 	vneg.f32	s8, s12
 8019f40:	eef4 4ac4 	vcmpe.f32	s9, s8
 8019f44:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019f48:	f140 80a4 	bpl.w	801a094 <calc_line_geometry+0xb08>
 8019f4c:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8019f50:	ed5f 4a82 	vldr	s9, [pc, #-520]	@ 8019d4c <calc_line_geometry+0x7c0>
 8019f54:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019f58:	bf4c      	ite	mi
 8019f5a:	ee67 7ae4 	vnmulmi.f32	s15, s15, s9
 8019f5e:	ee67 7aa4 	vmulpl.f32	s15, s15, s9
 8019f62:	e77b      	b.n	8019e5c <calc_line_geometry+0x8d0>
 8019f64:	eeb1 6a65 	vneg.f32	s12, s11
 8019f68:	eef4 4ac6 	vcmpe.f32	s9, s12
 8019f6c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019f70:	f140 8095 	bpl.w	801a09e <calc_line_geometry+0xb12>
 8019f74:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 8019f78:	ed1f 6a8c 	vldr	s12, [pc, #-560]	@ 8019d4c <calc_line_geometry+0x7c0>
 8019f7c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019f80:	bf4c      	ite	mi
 8019f82:	ee26 6ac6 	vnmulmi.f32	s12, s13, s12
 8019f86:	ee26 6a86 	vmulpl.f32	s12, s13, s12
 8019f8a:	e507      	b.n	801999c <calc_line_geometry+0x410>
 8019f8c:	6159      	str	r1, [r3, #20]
 8019f8e:	611e      	str	r6, [r3, #16]
 8019f90:	eeb0 0a41 	vmov.f32	s0, s2
 8019f94:	eef0 0a61 	vmov.f32	s1, s3
 8019f98:	2000      	movs	r0, #0
 8019f9a:	f7ff fa3b 	bl	8019414 <add_last_point>
 8019f9e:	4604      	mov	r4, r0
 8019fa0:	2800      	cmp	r0, #0
 8019fa2:	f47f ad53 	bne.w	8019a4c <calc_line_geometry+0x4c0>
 8019fa6:	4620      	mov	r0, r4
 8019fa8:	b017      	add	sp, #92	@ 0x5c
 8019faa:	ecbd 8b08 	vpop	{d8-d11}
 8019fae:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8019fb2:	4671      	mov	r1, lr
 8019fb4:	f8c3 e010 	str.w	lr, [r3, #16]
 8019fb8:	695a      	ldr	r2, [r3, #20]
 8019fba:	3102      	adds	r1, #2
 8019fbc:	3201      	adds	r2, #1
 8019fbe:	615a      	str	r2, [r3, #20]
 8019fc0:	6119      	str	r1, [r3, #16]
 8019fc2:	e538      	b.n	8019a36 <calc_line_geometry+0x4aa>
 8019fc4:	6158      	str	r0, [r3, #20]
 8019fc6:	611f      	str	r7, [r3, #16]
 8019fc8:	eeb4 1a65 	vcmp.f32	s2, s11
 8019fcc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019fd0:	bf48      	it	mi
 8019fd2:	eeb0 1a65 	vmovmi.f32	s2, s11
 8019fd6:	eeb4 5a41 	vcmp.f32	s10, s2
 8019fda:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019fde:	eef4 1a65 	vcmp.f32	s3, s11
 8019fe2:	bf48      	it	mi
 8019fe4:	eeb0 1a45 	vmovmi.f32	s2, s10
 8019fe8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019fec:	bf48      	it	mi
 8019fee:	eef0 1a65 	vmovmi.f32	s3, s11
 8019ff2:	eeb4 5a61 	vcmp.f32	s10, s3
 8019ff6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019ffa:	bf48      	it	mi
 8019ffc:	eef0 1a45 	vmovmi.f32	s3, s10
 801a000:	eeb0 0a41 	vmov.f32	s0, s2
 801a004:	eef0 0a61 	vmov.f32	s1, s3
 801a008:	2080      	movs	r0, #128	@ 0x80
 801a00a:	ed8d 1a10 	vstr	s2, [sp, #64]	@ 0x40
 801a00e:	edcd 1a11 	vstr	s3, [sp, #68]	@ 0x44
 801a012:	f7ff f9ff 	bl	8019414 <add_last_point>
 801a016:	4604      	mov	r4, r0
 801a018:	2800      	cmp	r0, #0
 801a01a:	f43f aee0 	beq.w	8019dde <calc_line_geometry+0x852>
 801a01e:	e515      	b.n	8019a4c <calc_line_geometry+0x4c0>
 801a020:	2101      	movs	r1, #1
 801a022:	629a      	str	r2, [r3, #40]	@ 0x28
 801a024:	615e      	str	r6, [r3, #20]
 801a026:	6001      	str	r1, [r0, #0]
 801a028:	e6ef      	b.n	8019e0a <calc_line_geometry+0x87e>
 801a02a:	681d      	ldr	r5, [r3, #0]
 801a02c:	428d      	cmp	r5, r1
 801a02e:	f240 8217 	bls.w	801a460 <calc_line_geometry+0xed4>
 801a032:	2682      	movs	r6, #130	@ 0x82
 801a034:	685d      	ldr	r5, [r3, #4]
 801a036:	615c      	str	r4, [r3, #20]
 801a038:	546e      	strb	r6, [r5, r1]
 801a03a:	e4d5      	b.n	80199e8 <calc_line_geometry+0x45c>
 801a03c:	2102      	movs	r1, #2
 801a03e:	2201      	movs	r2, #1
 801a040:	611e      	str	r6, [r3, #16]
 801a042:	6299      	str	r1, [r3, #40]	@ 0x28
 801a044:	602a      	str	r2, [r5, #0]
 801a046:	e7a3      	b.n	8019f90 <calc_line_geometry+0xa04>
 801a048:	2002      	movs	r0, #2
 801a04a:	2201      	movs	r2, #1
 801a04c:	6159      	str	r1, [r3, #20]
 801a04e:	6298      	str	r0, [r3, #40]	@ 0x28
 801a050:	602a      	str	r2, [r5, #0]
 801a052:	e79c      	b.n	8019f8e <calc_line_geometry+0xa02>
 801a054:	2402      	movs	r4, #2
 801a056:	2201      	movs	r2, #1
 801a058:	615f      	str	r7, [r3, #20]
 801a05a:	629c      	str	r4, [r3, #40]	@ 0x28
 801a05c:	6002      	str	r2, [r0, #0]
 801a05e:	e7af      	b.n	8019fc0 <calc_line_geometry+0xa34>
 801a060:	2102      	movs	r1, #2
 801a062:	2201      	movs	r2, #1
 801a064:	6299      	str	r1, [r3, #40]	@ 0x28
 801a066:	f8c3 e010 	str.w	lr, [r3, #16]
 801a06a:	6002      	str	r2, [r0, #0]
 801a06c:	4671      	mov	r1, lr
 801a06e:	e7a3      	b.n	8019fb8 <calc_line_geometry+0xa2c>
 801a070:	2402      	movs	r4, #2
 801a072:	2201      	movs	r2, #1
 801a074:	6119      	str	r1, [r3, #16]
 801a076:	629c      	str	r4, [r3, #40]	@ 0x28
 801a078:	6002      	str	r2, [r0, #0]
 801a07a:	e4dc      	b.n	8019a36 <calc_line_geometry+0x4aa>
 801a07c:	2102      	movs	r1, #2
 801a07e:	2201      	movs	r2, #1
 801a080:	611f      	str	r7, [r3, #16]
 801a082:	6299      	str	r1, [r3, #40]	@ 0x28
 801a084:	6032      	str	r2, [r6, #0]
 801a086:	e79f      	b.n	8019fc8 <calc_line_geometry+0xa3c>
 801a088:	2102      	movs	r1, #2
 801a08a:	2201      	movs	r2, #1
 801a08c:	6158      	str	r0, [r3, #20]
 801a08e:	6299      	str	r1, [r3, #40]	@ 0x28
 801a090:	6032      	str	r2, [r6, #0]
 801a092:	e798      	b.n	8019fc6 <calc_line_geometry+0xa3a>
 801a094:	eddf 7ae7 	vldr	s15, [pc, #924]	@ 801a434 <calc_line_geometry+0xea8>
 801a098:	ee64 7a27 	vmul.f32	s15, s8, s15
 801a09c:	e6de      	b.n	8019e5c <calc_line_geometry+0x8d0>
 801a09e:	eddf 4ae5 	vldr	s9, [pc, #916]	@ 801a434 <calc_line_geometry+0xea8>
 801a0a2:	ee26 6a24 	vmul.f32	s12, s12, s9
 801a0a6:	e479      	b.n	801999c <calc_line_geometry+0x410>
 801a0a8:	eddf 6ae2 	vldr	s13, [pc, #904]	@ 801a434 <calc_line_geometry+0xea8>
 801a0ac:	ee67 6aa6 	vmul.f32	s13, s15, s13
 801a0b0:	e707      	b.n	8019ec2 <calc_line_geometry+0x936>
 801a0b2:	611d      	str	r5, [r3, #16]
 801a0b4:	e4bf      	b.n	8019a36 <calc_line_geometry+0x4aa>
 801a0b6:	2a00      	cmp	r2, #0
 801a0b8:	d1fb      	bne.n	801a0b2 <calc_line_geometry+0xb26>
 801a0ba:	689a      	ldr	r2, [r3, #8]
 801a0bc:	1c4c      	adds	r4, r1, #1
 801a0be:	4294      	cmp	r4, r2
 801a0c0:	f080 81c7 	bcs.w	801a452 <calc_line_geometry+0xec6>
 801a0c4:	68da      	ldr	r2, [r3, #12]
 801a0c6:	611d      	str	r5, [r3, #16]
 801a0c8:	eb02 0181 	add.w	r1, r2, r1, lsl #2
 801a0cc:	ed81 7a00 	vstr	s14, [r1]
 801a0d0:	edc1 6a01 	vstr	s13, [r1, #4]
 801a0d4:	e4af      	b.n	8019a36 <calc_line_geometry+0x4aa>
 801a0d6:	ee28 6a09 	vmul.f32	s12, s16, s18
 801a0da:	ee22 5a05 	vmul.f32	s10, s4, s10
 801a0de:	ee36 5a45 	vsub.f32	s10, s12, s10
 801a0e2:	eec5 7a26 	vdiv.f32	s15, s10, s13
 801a0e6:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801a0ea:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a0ee:	f6ff ab0e 	blt.w	801970e <calc_line_geometry+0x182>
 801a0f2:	eef4 7ac7 	vcmpe.f32	s15, s14
 801a0f6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a0fa:	f63f ab08 	bhi.w	801970e <calc_line_geometry+0x182>
 801a0fe:	2a02      	cmp	r2, #2
 801a100:	f43f ab05 	beq.w	801970e <calc_line_geometry+0x182>
 801a104:	ee22 7aa7 	vmul.f32	s14, s5, s15
 801a108:	2a01      	cmp	r2, #1
 801a10a:	ee37 0a00 	vadd.f32	s0, s14, s0
 801a10e:	f000 82f9 	beq.w	801a704 <calc_line_geometry+0x1178>
 801a112:	ee63 7a27 	vmul.f32	s15, s6, s15
 801a116:	ee77 0aa0 	vadd.f32	s1, s15, s1
 801a11a:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 801a11e:	ed83 0a00 	vstr	s0, [r3]
 801a122:	edc3 0a01 	vstr	s1, [r3, #4]
 801a126:	f7ff baf2 	b.w	801970e <calc_line_geometry+0x182>
 801a12a:	ee62 7a29 	vmul.f32	s15, s4, s19
 801a12e:	ee25 6a88 	vmul.f32	s12, s11, s16
 801a132:	ee36 6a67 	vsub.f32	s12, s12, s15
 801a136:	eec6 7a04 	vdiv.f32	s15, s12, s8
 801a13a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801a13e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a142:	f6ff aacb 	blt.w	80196dc <calc_line_geometry+0x150>
 801a146:	eef4 7ac7 	vcmpe.f32	s15, s14
 801a14a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a14e:	f63f aac5 	bhi.w	80196dc <calc_line_geometry+0x150>
 801a152:	2a02      	cmp	r2, #2
 801a154:	f43f aac2 	beq.w	80196dc <calc_line_geometry+0x150>
 801a158:	ee22 7aa7 	vmul.f32	s14, s5, s15
 801a15c:	2a01      	cmp	r2, #1
 801a15e:	ee37 7a00 	vadd.f32	s14, s14, s0
 801a162:	f000 8329 	beq.w	801a7b8 <calc_line_geometry+0x122c>
 801a166:	ee63 7a27 	vmul.f32	s15, s6, s15
 801a16a:	ee77 7aa0 	vadd.f32	s15, s15, s1
 801a16e:	eb03 04c2 	add.w	r4, r3, r2, lsl #3
 801a172:	4628      	mov	r0, r5
 801a174:	4619      	mov	r1, r3
 801a176:	edc4 7a01 	vstr	s15, [r4, #4]
 801a17a:	ed84 7a00 	vstr	s14, [r4]
 801a17e:	f7ff f8c9 	bl	8019314 <points_coincide>
 801a182:	2800      	cmp	r0, #0
 801a184:	f47f aaaa 	bne.w	80196dc <calc_line_geometry+0x150>
 801a188:	a80c      	add	r0, sp, #48	@ 0x30
 801a18a:	f7ff f8c3 	bl	8019314 <points_coincide>
 801a18e:	2800      	cmp	r0, #0
 801a190:	f47f aaa4 	bne.w	80196dc <calc_line_geometry+0x150>
 801a194:	3201      	adds	r2, #1
 801a196:	f7ff baa1 	b.w	80196dc <calc_line_geometry+0x150>
 801a19a:	ee29 7a89 	vmul.f32	s14, s19, s18
 801a19e:	ee62 7a27 	vmul.f32	s15, s4, s15
 801a1a2:	ee77 7ac7 	vsub.f32	s15, s15, s14
 801a1a6:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 801a1aa:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 801a1ae:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a1b2:	f6ff aa7e 	blt.w	80196b2 <calc_line_geometry+0x126>
 801a1b6:	eeb4 7ac6 	vcmpe.f32	s14, s12
 801a1ba:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a1be:	f63f aa78 	bhi.w	80196b2 <calc_line_geometry+0x126>
 801a1c2:	ee62 6a87 	vmul.f32	s13, s5, s14
 801a1c6:	2a01      	cmp	r2, #1
 801a1c8:	ee76 6a80 	vadd.f32	s13, s13, s0
 801a1cc:	f000 834e 	beq.w	801a86c <calc_line_geometry+0x12e0>
 801a1d0:	ee63 7a07 	vmul.f32	s15, s6, s14
 801a1d4:	ee77 7aa0 	vadd.f32	s15, s15, s1
 801a1d8:	eb03 04c2 	add.w	r4, r3, r2, lsl #3
 801a1dc:	4619      	mov	r1, r3
 801a1de:	4628      	mov	r0, r5
 801a1e0:	edc4 7a01 	vstr	s15, [r4, #4]
 801a1e4:	edc4 6a00 	vstr	s13, [r4]
 801a1e8:	f7ff f894 	bl	8019314 <points_coincide>
 801a1ec:	2800      	cmp	r0, #0
 801a1ee:	f47f aa60 	bne.w	80196b2 <calc_line_geometry+0x126>
 801a1f2:	a80c      	add	r0, sp, #48	@ 0x30
 801a1f4:	f7ff f88e 	bl	8019314 <points_coincide>
 801a1f8:	2800      	cmp	r0, #0
 801a1fa:	f47f aa5a 	bne.w	80196b2 <calc_line_geometry+0x126>
 801a1fe:	3201      	adds	r2, #1
 801a200:	f7ff ba57 	b.w	80196b2 <calc_line_geometry+0x126>
 801a204:	ee62 7a08 	vmul.f32	s15, s4, s16
 801a208:	ee65 6aa9 	vmul.f32	s13, s11, s19
 801a20c:	ee77 7ae6 	vsub.f32	s15, s15, s13
 801a210:	ee87 4aa3 	vdiv.f32	s8, s15, s7
 801a214:	eeb5 4ac0 	vcmpe.f32	s8, #0.0
 801a218:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a21c:	f6ff aa29 	blt.w	8019672 <calc_line_geometry+0xe6>
 801a220:	eeb4 4ac7 	vcmpe.f32	s8, s14
 801a224:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a228:	f63f aa23 	bhi.w	8019672 <calc_line_geometry+0xe6>
 801a22c:	ee22 aa84 	vmul.f32	s20, s5, s8
 801a230:	ee23 4a04 	vmul.f32	s8, s6, s8
 801a234:	ee3a aa00 	vadd.f32	s20, s20, s0
 801a238:	ee34 4a20 	vadd.f32	s8, s8, s1
 801a23c:	4619      	mov	r1, r3
 801a23e:	4628      	mov	r0, r5
 801a240:	ed8d aa12 	vstr	s20, [sp, #72]	@ 0x48
 801a244:	ed8d 4a13 	vstr	s8, [sp, #76]	@ 0x4c
 801a248:	f7ff f864 	bl	8019314 <points_coincide>
 801a24c:	b938      	cbnz	r0, 801a25e <calc_line_geometry+0xcd2>
 801a24e:	a80c      	add	r0, sp, #48	@ 0x30
 801a250:	f7ff f860 	bl	8019314 <points_coincide>
 801a254:	fab0 f280 	clz	r2, r0
 801a258:	0952      	lsrs	r2, r2, #5
 801a25a:	f7ff ba0f 	b.w	801967c <calc_line_geometry+0xf0>
 801a25e:	4622      	mov	r2, r4
 801a260:	f7ff ba0c 	b.w	801967c <calc_line_geometry+0xf0>
 801a264:	ee28 8a0a 	vmul.f32	s16, s16, s20
 801a268:	ee27 2a82 	vmul.f32	s4, s15, s4
 801a26c:	ee38 2a42 	vsub.f32	s4, s16, s4
 801a270:	eec2 6a07 	vdiv.f32	s13, s4, s14
 801a274:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 801a278:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a27c:	f6ff ac90 	blt.w	8019ba0 <calc_line_geometry+0x614>
 801a280:	eef4 6ac6 	vcmpe.f32	s13, s12
 801a284:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a288:	f63f ac8a 	bhi.w	8019ba0 <calc_line_geometry+0x614>
 801a28c:	2a02      	cmp	r2, #2
 801a28e:	f43f ac87 	beq.w	8019ba0 <calc_line_geometry+0x614>
 801a292:	ee64 7a26 	vmul.f32	s15, s8, s13
 801a296:	2a01      	cmp	r2, #1
 801a298:	ee37 0a80 	vadd.f32	s0, s15, s0
 801a29c:	f000 833c 	beq.w	801a918 <calc_line_geometry+0x138c>
 801a2a0:	ee62 7aa6 	vmul.f32	s15, s5, s13
 801a2a4:	ee77 0aa0 	vadd.f32	s1, s15, s1
 801a2a8:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 801a2ac:	ed83 0a00 	vstr	s0, [r3]
 801a2b0:	edc3 0a01 	vstr	s1, [r3, #4]
 801a2b4:	e474      	b.n	8019ba0 <calc_line_geometry+0x614>
 801a2b6:	ee28 3a03 	vmul.f32	s6, s16, s6
 801a2ba:	ee69 7a82 	vmul.f32	s15, s19, s4
 801a2be:	ee73 7a67 	vsub.f32	s15, s6, s15
 801a2c2:	ee87 6aa6 	vdiv.f32	s12, s15, s13
 801a2c6:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
 801a2ca:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a2ce:	f6ff ac4e 	blt.w	8019b6e <calc_line_geometry+0x5e2>
 801a2d2:	eeb4 6ae3 	vcmpe.f32	s12, s7
 801a2d6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a2da:	f63f ac48 	bhi.w	8019b6e <calc_line_geometry+0x5e2>
 801a2de:	2a02      	cmp	r2, #2
 801a2e0:	f43f ac45 	beq.w	8019b6e <calc_line_geometry+0x5e2>
 801a2e4:	ee64 3a06 	vmul.f32	s7, s8, s12
 801a2e8:	2a01      	cmp	r2, #1
 801a2ea:	ee73 3a80 	vadd.f32	s7, s7, s0
 801a2ee:	f000 8373 	beq.w	801a9d8 <calc_line_geometry+0x144c>
 801a2f2:	ee62 7a86 	vmul.f32	s15, s5, s12
 801a2f6:	ee77 7aa0 	vadd.f32	s15, s15, s1
 801a2fa:	4620      	mov	r0, r4
 801a2fc:	eb03 04c2 	add.w	r4, r3, r2, lsl #3
 801a300:	4619      	mov	r1, r3
 801a302:	edc4 7a01 	vstr	s15, [r4, #4]
 801a306:	edc4 3a00 	vstr	s7, [r4]
 801a30a:	f7ff f803 	bl	8019314 <points_coincide>
 801a30e:	2800      	cmp	r0, #0
 801a310:	f47f ac2d 	bne.w	8019b6e <calc_line_geometry+0x5e2>
 801a314:	a808      	add	r0, sp, #32
 801a316:	f7fe fffd 	bl	8019314 <points_coincide>
 801a31a:	2800      	cmp	r0, #0
 801a31c:	f47f ac27 	bne.w	8019b6e <calc_line_geometry+0x5e2>
 801a320:	3201      	adds	r2, #1
 801a322:	e424      	b.n	8019b6e <calc_line_geometry+0x5e2>
 801a324:	ee29 7a8a 	vmul.f32	s14, s19, s20
 801a328:	ee67 7a82 	vmul.f32	s15, s15, s4
 801a32c:	ee77 7ac7 	vsub.f32	s15, s15, s14
 801a330:	ee87 7aa3 	vdiv.f32	s14, s15, s7
 801a334:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 801a338:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a33c:	f6ff ac02 	blt.w	8019b44 <calc_line_geometry+0x5b8>
 801a340:	eeb4 7ac6 	vcmpe.f32	s14, s12
 801a344:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a348:	f63f abfc 	bhi.w	8019b44 <calc_line_geometry+0x5b8>
 801a34c:	ee64 6a07 	vmul.f32	s13, s8, s14
 801a350:	2a01      	cmp	r2, #1
 801a352:	ee76 6a80 	vadd.f32	s13, s13, s0
 801a356:	f000 83b7 	beq.w	801aac8 <calc_line_geometry+0x153c>
 801a35a:	ee62 7a87 	vmul.f32	s15, s5, s14
 801a35e:	ee77 7aa0 	vadd.f32	s15, s15, s1
 801a362:	eb03 05c2 	add.w	r5, r3, r2, lsl #3
 801a366:	4619      	mov	r1, r3
 801a368:	4620      	mov	r0, r4
 801a36a:	edc5 7a01 	vstr	s15, [r5, #4]
 801a36e:	edc5 6a00 	vstr	s13, [r5]
 801a372:	f7fe ffcf 	bl	8019314 <points_coincide>
 801a376:	2800      	cmp	r0, #0
 801a378:	f47f abe4 	bne.w	8019b44 <calc_line_geometry+0x5b8>
 801a37c:	a808      	add	r0, sp, #32
 801a37e:	f7fe ffc9 	bl	8019314 <points_coincide>
 801a382:	2800      	cmp	r0, #0
 801a384:	f47f abde 	bne.w	8019b44 <calc_line_geometry+0x5b8>
 801a388:	3201      	adds	r2, #1
 801a38a:	f7ff bbdb 	b.w	8019b44 <calc_line_geometry+0x5b8>
 801a38e:	ee68 7a02 	vmul.f32	s15, s16, s4
 801a392:	ee29 6a83 	vmul.f32	s12, s19, s6
 801a396:	ee77 7ac6 	vsub.f32	s15, s15, s12
 801a39a:	ee87 9a87 	vdiv.f32	s18, s15, s14
 801a39e:	eeb5 9ac0 	vcmpe.f32	s18, #0.0
 801a3a2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a3a6:	f6ff abae 	blt.w	8019b06 <calc_line_geometry+0x57a>
 801a3aa:	eeb4 9ae6 	vcmpe.f32	s18, s13
 801a3ae:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a3b2:	f63f aba8 	bhi.w	8019b06 <calc_line_geometry+0x57a>
 801a3b6:	ee64 aa09 	vmul.f32	s21, s8, s18
 801a3ba:	ee22 9a89 	vmul.f32	s18, s5, s18
 801a3be:	ee7a aa80 	vadd.f32	s21, s21, s0
 801a3c2:	ee39 9a20 	vadd.f32	s18, s18, s1
 801a3c6:	4619      	mov	r1, r3
 801a3c8:	4620      	mov	r0, r4
 801a3ca:	edcd aa12 	vstr	s21, [sp, #72]	@ 0x48
 801a3ce:	ed8d 9a13 	vstr	s18, [sp, #76]	@ 0x4c
 801a3d2:	f7fe ff9f 	bl	8019314 <points_coincide>
 801a3d6:	2800      	cmp	r0, #0
 801a3d8:	f47f ab99 	bne.w	8019b0e <calc_line_geometry+0x582>
 801a3dc:	a808      	add	r0, sp, #32
 801a3de:	f7fe ff99 	bl	8019314 <points_coincide>
 801a3e2:	fab0 f280 	clz	r2, r0
 801a3e6:	0952      	lsrs	r2, r2, #5
 801a3e8:	f7ff bb91 	b.w	8019b0e <calc_line_geometry+0x582>
 801a3ec:	eeb1 4a67 	vneg.f32	s8, s15
 801a3f0:	eef4 4ac4 	vcmpe.f32	s9, s8
 801a3f4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a3f8:	f53f ad58 	bmi.w	8019eac <calc_line_geometry+0x920>
 801a3fc:	eddf 6a0d 	vldr	s13, [pc, #52]	@ 801a434 <calc_line_geometry+0xea8>
 801a400:	ee64 6a26 	vmul.f32	s13, s8, s13
 801a404:	e55d      	b.n	8019ec2 <calc_line_geometry+0x936>
 801a406:	68d9      	ldr	r1, [r3, #12]
 801a408:	f8dd c050 	ldr.w	ip, [sp, #80]	@ 0x50
 801a40c:	eb01 0982 	add.w	r9, r1, r2, lsl #2
 801a410:	6819      	ldr	r1, [r3, #0]
 801a412:	f8c3 e010 	str.w	lr, [r3, #16]
 801a416:	f8dd e054 	ldr.w	lr, [sp, #84]	@ 0x54
 801a41a:	42b1      	cmp	r1, r6
 801a41c:	f8c9 c000 	str.w	ip, [r9]
 801a420:	f8c9 e004 	str.w	lr, [r9, #4]
 801a424:	d808      	bhi.n	801a438 <calc_line_geometry+0xeac>
 801a426:	2102      	movs	r1, #2
 801a428:	2201      	movs	r2, #1
 801a42a:	615d      	str	r5, [r3, #20]
 801a42c:	6299      	str	r1, [r3, #40]	@ 0x28
 801a42e:	6002      	str	r2, [r0, #0]
 801a430:	e55a      	b.n	8019ee8 <calc_line_geometry+0x95c>
 801a432:	bf00      	nop
 801a434:	3727c5ac 	.word	0x3727c5ac
 801a438:	3203      	adds	r2, #3
 801a43a:	6859      	ldr	r1, [r3, #4]
 801a43c:	4590      	cmp	r8, r2
 801a43e:	615d      	str	r5, [r3, #20]
 801a440:	558c      	strb	r4, [r1, r6]
 801a442:	d914      	bls.n	801a46e <calc_line_geometry+0xee2>
 801a444:	ed89 6a02 	vstr	s12, [r9, #8]
 801a448:	611f      	str	r7, [r3, #16]
 801a44a:	edc9 7a03 	vstr	s15, [r9, #12]
 801a44e:	f7ff baf2 	b.w	8019a36 <calc_line_geometry+0x4aa>
 801a452:	2102      	movs	r1, #2
 801a454:	2201      	movs	r2, #1
 801a456:	611d      	str	r5, [r3, #16]
 801a458:	6299      	str	r1, [r3, #40]	@ 0x28
 801a45a:	6002      	str	r2, [r0, #0]
 801a45c:	f7ff baeb 	b.w	8019a36 <calc_line_geometry+0x4aa>
 801a460:	2102      	movs	r1, #2
 801a462:	2201      	movs	r2, #1
 801a464:	615c      	str	r4, [r3, #20]
 801a466:	6299      	str	r1, [r3, #40]	@ 0x28
 801a468:	6002      	str	r2, [r0, #0]
 801a46a:	f7ff babd 	b.w	80199e8 <calc_line_geometry+0x45c>
 801a46e:	2102      	movs	r1, #2
 801a470:	2201      	movs	r2, #1
 801a472:	611f      	str	r7, [r3, #16]
 801a474:	6299      	str	r1, [r3, #40]	@ 0x28
 801a476:	6002      	str	r2, [r0, #0]
 801a478:	f7ff badd 	b.w	8019a36 <calc_line_geometry+0x4aa>
 801a47c:	eddd 6a12 	vldr	s13, [sp, #72]	@ 0x48
 801a480:	ee36 6ae7 	vsub.f32	s12, s13, s15
 801a484:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
 801a488:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a48c:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 801a490:	bf48      	it	mi
 801a492:	eeb1 6a46 	vnegmi.f32	s12, s12
 801a496:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a49a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801a49e:	bf4c      	ite	mi
 801a4a0:	eef1 4a66 	vnegmi.f32	s9, s13
 801a4a4:	eef0 4a66 	vmovpl.f32	s9, s13
 801a4a8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a4ac:	f100 8112 	bmi.w	801a6d4 <calc_line_geometry+0x1148>
 801a4b0:	eef4 7ae4 	vcmpe.f32	s15, s9
 801a4b4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a4b8:	f300 80dc 	bgt.w	801a674 <calc_line_geometry+0x10e8>
 801a4bc:	ed5f 6a23 	vldr	s13, [pc, #-140]	@ 801a434 <calc_line_geometry+0xea8>
 801a4c0:	ee67 6aa6 	vmul.f32	s13, s15, s13
 801a4c4:	eeb4 6ae6 	vcmpe.f32	s12, s13
 801a4c8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a4cc:	f63f ac62 	bhi.w	8019d94 <calc_line_geometry+0x808>
 801a4d0:	eddd 6a13 	vldr	s13, [sp, #76]	@ 0x4c
 801a4d4:	ee36 6ac7 	vsub.f32	s12, s13, s14
 801a4d8:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
 801a4dc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a4e0:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 801a4e4:	bf48      	it	mi
 801a4e6:	eeb1 6a46 	vnegmi.f32	s12, s12
 801a4ea:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a4ee:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 801a4f2:	bf4c      	ite	mi
 801a4f4:	eef1 4a66 	vnegmi.f32	s9, s13
 801a4f8:	eef0 4a66 	vmovpl.f32	s9, s13
 801a4fc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a500:	f100 834a 	bmi.w	801ab98 <calc_line_geometry+0x160c>
 801a504:	eeb4 7ae4 	vcmpe.f32	s14, s9
 801a508:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a50c:	f300 82d0 	bgt.w	801aab0 <calc_line_geometry+0x1524>
 801a510:	ed5f 6a38 	vldr	s13, [pc, #-224]	@ 801a434 <calc_line_geometry+0xea8>
 801a514:	ee67 6a26 	vmul.f32	s13, s14, s13
 801a518:	eeb4 6ae6 	vcmpe.f32	s12, s13
 801a51c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a520:	f63f ac38 	bhi.w	8019d94 <calc_line_geometry+0x808>
 801a524:	f7ff b9a9 	b.w	801987a <calc_line_geometry+0x2ee>
 801a528:	eddd 6a12 	vldr	s13, [sp, #72]	@ 0x48
 801a52c:	ee36 6ac7 	vsub.f32	s12, s13, s14
 801a530:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
 801a534:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a538:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 801a53c:	bf48      	it	mi
 801a53e:	eeb1 6a46 	vnegmi.f32	s12, s12
 801a542:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a546:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 801a54a:	bf4c      	ite	mi
 801a54c:	eeb1 3a66 	vnegmi.f32	s6, s13
 801a550:	eeb0 3a66 	vmovpl.f32	s6, s13
 801a554:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a558:	f100 80c8 	bmi.w	801a6ec <calc_line_geometry+0x1160>
 801a55c:	eeb4 7ac3 	vcmpe.f32	s14, s6
 801a560:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a564:	f300 8092 	bgt.w	801a68c <calc_line_geometry+0x1100>
 801a568:	ed5f 6a4e 	vldr	s13, [pc, #-312]	@ 801a434 <calc_line_geometry+0xea8>
 801a56c:	ee67 6a26 	vmul.f32	s13, s14, s13
 801a570:	eeb4 6ae6 	vcmpe.f32	s12, s13
 801a574:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a578:	f63f ab6b 	bhi.w	8019c52 <calc_line_geometry+0x6c6>
 801a57c:	eddd 6a13 	vldr	s13, [sp, #76]	@ 0x4c
 801a580:	ee36 6ae7 	vsub.f32	s12, s13, s15
 801a584:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
 801a588:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a58c:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 801a590:	bf48      	it	mi
 801a592:	eeb1 6a46 	vnegmi.f32	s12, s12
 801a596:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a59a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801a59e:	bf4c      	ite	mi
 801a5a0:	eeb1 3a66 	vnegmi.f32	s6, s13
 801a5a4:	eeb0 3a66 	vmovpl.f32	s6, s13
 801a5a8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a5ac:	f100 8312 	bmi.w	801abd4 <calc_line_geometry+0x1648>
 801a5b0:	eef4 7ac3 	vcmpe.f32	s15, s6
 801a5b4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a5b8:	f300 82e2 	bgt.w	801ab80 <calc_line_geometry+0x15f4>
 801a5bc:	ed5f 6a63 	vldr	s13, [pc, #-396]	@ 801a434 <calc_line_geometry+0xea8>
 801a5c0:	ee67 6aa6 	vmul.f32	s13, s15, s13
 801a5c4:	eeb4 6ae6 	vcmpe.f32	s12, s13
 801a5c8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a5cc:	f63f ab41 	bhi.w	8019c52 <calc_line_geometry+0x6c6>
 801a5d0:	f7ff b93a 	b.w	8019848 <calc_line_geometry+0x2bc>
 801a5d4:	ee7a 6ac7 	vsub.f32	s13, s21, s14
 801a5d8:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 801a5dc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a5e0:	eef5 aac0 	vcmpe.f32	s21, #0.0
 801a5e4:	bf48      	it	mi
 801a5e6:	eef1 6a66 	vnegmi.f32	s13, s13
 801a5ea:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a5ee:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 801a5f2:	bf4c      	ite	mi
 801a5f4:	eeb1 6a6a 	vnegmi.f32	s12, s21
 801a5f8:	eeb0 6a6a 	vmovpl.f32	s12, s21
 801a5fc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a600:	d45c      	bmi.n	801a6bc <calc_line_geometry+0x1130>
 801a602:	eeb4 7ac6 	vcmpe.f32	s14, s12
 801a606:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a60a:	dc4b      	bgt.n	801a6a4 <calc_line_geometry+0x1118>
 801a60c:	ed5f aa77 	vldr	s21, [pc, #-476]	@ 801a434 <calc_line_geometry+0xea8>
 801a610:	ee67 aa2a 	vmul.f32	s21, s14, s21
 801a614:	eef4 6aea 	vcmpe.f32	s13, s21
 801a618:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a61c:	f63f ab7b 	bhi.w	8019d16 <calc_line_geometry+0x78a>
 801a620:	ee78 6a67 	vsub.f32	s13, s16, s15
 801a624:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 801a628:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a62c:	eeb5 8ac0 	vcmpe.f32	s16, #0.0
 801a630:	bf48      	it	mi
 801a632:	eef1 6a66 	vnegmi.f32	s13, s13
 801a636:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a63a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801a63e:	bf4c      	ite	mi
 801a640:	eeb1 6a48 	vnegmi.f32	s12, s16
 801a644:	eeb0 6a48 	vmovpl.f32	s12, s16
 801a648:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a64c:	f100 82b0 	bmi.w	801abb0 <calc_line_geometry+0x1624>
 801a650:	eef4 7ac6 	vcmpe.f32	s15, s12
 801a654:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a658:	f300 821e 	bgt.w	801aa98 <calc_line_geometry+0x150c>
 801a65c:	ed1f 8a8b 	vldr	s16, [pc, #-556]	@ 801a434 <calc_line_geometry+0xea8>
 801a660:	ee27 8a88 	vmul.f32	s16, s15, s16
 801a664:	eef4 6ac8 	vcmpe.f32	s13, s16
 801a668:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a66c:	f63f ab53 	bhi.w	8019d16 <calc_line_geometry+0x78a>
 801a670:	f7ff b8d5 	b.w	801981e <calc_line_geometry+0x292>
 801a674:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 801a678:	ed5f 4a92 	vldr	s9, [pc, #-584]	@ 801a434 <calc_line_geometry+0xea8>
 801a67c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a680:	bf4c      	ite	mi
 801a682:	ee66 6ae4 	vnmulmi.f32	s13, s13, s9
 801a686:	ee66 6aa4 	vmulpl.f32	s13, s13, s9
 801a68a:	e71b      	b.n	801a4c4 <calc_line_geometry+0xf38>
 801a68c:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 801a690:	ed1f 3a98 	vldr	s6, [pc, #-608]	@ 801a434 <calc_line_geometry+0xea8>
 801a694:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a698:	bf4c      	ite	mi
 801a69a:	ee66 6ac3 	vnmulmi.f32	s13, s13, s6
 801a69e:	ee66 6a83 	vmulpl.f32	s13, s13, s6
 801a6a2:	e765      	b.n	801a570 <calc_line_geometry+0xfe4>
 801a6a4:	eef5 aac0 	vcmpe.f32	s21, #0.0
 801a6a8:	ed1f 6a9e 	vldr	s12, [pc, #-632]	@ 801a434 <calc_line_geometry+0xea8>
 801a6ac:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a6b0:	bf4c      	ite	mi
 801a6b2:	ee6a aac6 	vnmulmi.f32	s21, s21, s12
 801a6b6:	ee6a aa86 	vmulpl.f32	s21, s21, s12
 801a6ba:	e7ab      	b.n	801a614 <calc_line_geometry+0x1088>
 801a6bc:	eef1 3a47 	vneg.f32	s7, s14
 801a6c0:	eef4 3ac6 	vcmpe.f32	s7, s12
 801a6c4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a6c8:	dcec      	bgt.n	801a6a4 <calc_line_geometry+0x1118>
 801a6ca:	ed5f aaa6 	vldr	s21, [pc, #-664]	@ 801a434 <calc_line_geometry+0xea8>
 801a6ce:	ee63 aaaa 	vmul.f32	s21, s7, s21
 801a6d2:	e79f      	b.n	801a614 <calc_line_geometry+0x1088>
 801a6d4:	eeb1 4a67 	vneg.f32	s8, s15
 801a6d8:	eeb4 4ae4 	vcmpe.f32	s8, s9
 801a6dc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a6e0:	dcc8      	bgt.n	801a674 <calc_line_geometry+0x10e8>
 801a6e2:	ed5f 6aac 	vldr	s13, [pc, #-688]	@ 801a434 <calc_line_geometry+0xea8>
 801a6e6:	ee64 6a26 	vmul.f32	s13, s8, s13
 801a6ea:	e6eb      	b.n	801a4c4 <calc_line_geometry+0xf38>
 801a6ec:	eeb1 8a47 	vneg.f32	s16, s14
 801a6f0:	eeb4 8ac3 	vcmpe.f32	s16, s6
 801a6f4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a6f8:	dcc8      	bgt.n	801a68c <calc_line_geometry+0x1100>
 801a6fa:	ed5f 6ab2 	vldr	s13, [pc, #-712]	@ 801a434 <calc_line_geometry+0xea8>
 801a6fe:	ee68 6a26 	vmul.f32	s13, s16, s13
 801a702:	e735      	b.n	801a570 <calc_line_geometry+0xfe4>
 801a704:	ed9d 7a12 	vldr	s14, [sp, #72]	@ 0x48
 801a708:	ee77 6a40 	vsub.f32	s13, s14, s0
 801a70c:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 801a710:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a714:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 801a718:	bf48      	it	mi
 801a71a:	eef1 6a66 	vnegmi.f32	s13, s13
 801a71e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a722:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 801a726:	bf4c      	ite	mi
 801a728:	eeb1 6a47 	vnegmi.f32	s12, s14
 801a72c:	eeb0 6a47 	vmovpl.f32	s12, s14
 801a730:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a734:	f100 82ba 	bmi.w	801acac <calc_line_geometry+0x1720>
 801a738:	eeb4 0ac6 	vcmpe.f32	s0, s12
 801a73c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a740:	f300 826c 	bgt.w	801ac1c <calc_line_geometry+0x1690>
 801a744:	ed1f 7ac5 	vldr	s14, [pc, #-788]	@ 801a434 <calc_line_geometry+0xea8>
 801a748:	ee20 7a07 	vmul.f32	s14, s0, s14
 801a74c:	eef4 6ac7 	vcmpe.f32	s13, s14
 801a750:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a754:	ee63 7a27 	vmul.f32	s15, s6, s15
 801a758:	f63f acdd 	bhi.w	801a116 <calc_line_geometry+0xb8a>
 801a75c:	ed9d 7a13 	vldr	s14, [sp, #76]	@ 0x4c
 801a760:	ee77 6aa0 	vadd.f32	s13, s15, s1
 801a764:	ee37 6a66 	vsub.f32	s12, s14, s13
 801a768:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
 801a76c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a770:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 801a774:	bf48      	it	mi
 801a776:	eeb1 6a46 	vnegmi.f32	s12, s12
 801a77a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a77e:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 801a782:	bf4c      	ite	mi
 801a784:	eef1 5a47 	vnegmi.f32	s11, s14
 801a788:	eef0 5a47 	vmovpl.f32	s11, s14
 801a78c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a790:	f100 82e3 	bmi.w	801ad5a <calc_line_geometry+0x17ce>
 801a794:	eef4 6ae5 	vcmpe.f32	s13, s11
 801a798:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a79c:	f300 82e5 	bgt.w	801ad6a <calc_line_geometry+0x17de>
 801a7a0:	ed1f 7adc 	vldr	s14, [pc, #-880]	@ 801a434 <calc_line_geometry+0xea8>
 801a7a4:	ee26 7a87 	vmul.f32	s14, s13, s14
 801a7a8:	eeb4 6ac7 	vcmpe.f32	s12, s14
 801a7ac:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a7b0:	f63f acb1 	bhi.w	801a116 <calc_line_geometry+0xb8a>
 801a7b4:	f7fe bfab 	b.w	801970e <calc_line_geometry+0x182>
 801a7b8:	eddd 6a12 	vldr	s13, [sp, #72]	@ 0x48
 801a7bc:	ee36 6ac7 	vsub.f32	s12, s13, s14
 801a7c0:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
 801a7c4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a7c8:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 801a7cc:	bf48      	it	mi
 801a7ce:	eeb1 6a46 	vnegmi.f32	s12, s12
 801a7d2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a7d6:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 801a7da:	bf4c      	ite	mi
 801a7dc:	eef1 5a66 	vnegmi.f32	s11, s13
 801a7e0:	eef0 5a66 	vmovpl.f32	s11, s13
 801a7e4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a7e8:	f100 8254 	bmi.w	801ac94 <calc_line_geometry+0x1708>
 801a7ec:	eeb4 7ae5 	vcmpe.f32	s14, s11
 801a7f0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a7f4:	f300 8206 	bgt.w	801ac04 <calc_line_geometry+0x1678>
 801a7f8:	eddf 6af4 	vldr	s13, [pc, #976]	@ 801abcc <calc_line_geometry+0x1640>
 801a7fc:	ee67 6a26 	vmul.f32	s13, s14, s13
 801a800:	eeb4 6ae6 	vcmpe.f32	s12, s13
 801a804:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a808:	ee63 7a27 	vmul.f32	s15, s6, s15
 801a80c:	f63f acad 	bhi.w	801a16a <calc_line_geometry+0xbde>
 801a810:	eddd 6a13 	vldr	s13, [sp, #76]	@ 0x4c
 801a814:	ee37 6aa0 	vadd.f32	s12, s15, s1
 801a818:	ee76 5ac6 	vsub.f32	s11, s13, s12
 801a81c:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 801a820:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a824:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 801a828:	bf48      	it	mi
 801a82a:	eef1 5a65 	vnegmi.f32	s11, s11
 801a82e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a832:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
 801a836:	bf4c      	ite	mi
 801a838:	eeb1 4a66 	vnegmi.f32	s8, s13
 801a83c:	eeb0 4a66 	vmovpl.f32	s8, s13
 801a840:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a844:	f100 8276 	bmi.w	801ad34 <calc_line_geometry+0x17a8>
 801a848:	eeb4 4ac6 	vcmpe.f32	s8, s12
 801a84c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a850:	f100 8278 	bmi.w	801ad44 <calc_line_geometry+0x17b8>
 801a854:	eddf 6add 	vldr	s13, [pc, #884]	@ 801abcc <calc_line_geometry+0x1640>
 801a858:	ee66 6a26 	vmul.f32	s13, s12, s13
 801a85c:	eef4 5ae6 	vcmpe.f32	s11, s13
 801a860:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a864:	f63f ac81 	bhi.w	801a16a <calc_line_geometry+0xbde>
 801a868:	f7fe bf38 	b.w	80196dc <calc_line_geometry+0x150>
 801a86c:	ee7a 7a66 	vsub.f32	s15, s20, s13
 801a870:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801a874:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a878:	eeb5 aac0 	vcmpe.f32	s20, #0.0
 801a87c:	bf48      	it	mi
 801a87e:	eef1 7a67 	vnegmi.f32	s15, s15
 801a882:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a886:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 801a88a:	bf4c      	ite	mi
 801a88c:	eeb1 6a4a 	vnegmi.f32	s12, s20
 801a890:	eeb0 6a4a 	vmovpl.f32	s12, s20
 801a894:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a898:	f100 822c 	bmi.w	801acf4 <calc_line_geometry+0x1768>
 801a89c:	eef4 6ac6 	vcmpe.f32	s13, s12
 801a8a0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a8a4:	f300 81a2 	bgt.w	801abec <calc_line_geometry+0x1660>
 801a8a8:	ed9f aac8 	vldr	s20, [pc, #800]	@ 801abcc <calc_line_geometry+0x1640>
 801a8ac:	ee26 aa8a 	vmul.f32	s20, s13, s20
 801a8b0:	eef4 7aca 	vcmpe.f32	s15, s20
 801a8b4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a8b8:	ee63 7a07 	vmul.f32	s15, s6, s14
 801a8bc:	f63f ac8a 	bhi.w	801a1d4 <calc_line_geometry+0xc48>
 801a8c0:	ee37 7aa0 	vadd.f32	s14, s15, s1
 801a8c4:	ee34 6a47 	vsub.f32	s12, s8, s14
 801a8c8:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
 801a8cc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a8d0:	eeb5 4ac0 	vcmpe.f32	s8, #0.0
 801a8d4:	bf48      	it	mi
 801a8d6:	eeb1 6a46 	vnegmi.f32	s12, s12
 801a8da:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a8de:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 801a8e2:	bf4c      	ite	mi
 801a8e4:	eef1 3a44 	vnegmi.f32	s7, s8
 801a8e8:	eef0 3a44 	vmovpl.f32	s7, s8
 801a8ec:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a8f0:	f100 820d 	bmi.w	801ad0e <calc_line_geometry+0x1782>
 801a8f4:	eeb4 7ae3 	vcmpe.f32	s14, s7
 801a8f8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a8fc:	f300 820f 	bgt.w	801ad1e <calc_line_geometry+0x1792>
 801a900:	ed9f 4ab2 	vldr	s8, [pc, #712]	@ 801abcc <calc_line_geometry+0x1640>
 801a904:	ee27 4a04 	vmul.f32	s8, s14, s8
 801a908:	eeb4 6ac4 	vcmpe.f32	s12, s8
 801a90c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a910:	f63f ac60 	bhi.w	801a1d4 <calc_line_geometry+0xc48>
 801a914:	f7fe becd 	b.w	80196b2 <calc_line_geometry+0x126>
 801a918:	eddd 7a12 	vldr	s15, [sp, #72]	@ 0x48
 801a91c:	ee37 7ac0 	vsub.f32	s14, s15, s0
 801a920:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 801a924:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a928:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801a92c:	bf48      	it	mi
 801a92e:	eeb1 7a47 	vnegmi.f32	s14, s14
 801a932:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a936:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 801a93a:	bf4c      	ite	mi
 801a93c:	eeb1 6a67 	vnegmi.f32	s12, s15
 801a940:	eeb0 6a67 	vmovpl.f32	s12, s15
 801a944:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a948:	f100 81bc 	bmi.w	801acc4 <calc_line_geometry+0x1738>
 801a94c:	eeb4 6ac0 	vcmpe.f32	s12, s0
 801a950:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a954:	f100 816e 	bmi.w	801ac34 <calc_line_geometry+0x16a8>
 801a958:	eddf 7a9c 	vldr	s15, [pc, #624]	@ 801abcc <calc_line_geometry+0x1640>
 801a95c:	ee60 7a27 	vmul.f32	s15, s0, s15
 801a960:	eeb4 7ae7 	vcmpe.f32	s14, s15
 801a964:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a968:	ee62 7aa6 	vmul.f32	s15, s5, s13
 801a96c:	f63f ac9a 	bhi.w	801a2a4 <calc_line_geometry+0xd18>
 801a970:	ed9d 7a13 	vldr	s14, [sp, #76]	@ 0x4c
 801a974:	ee77 6aa0 	vadd.f32	s13, s15, s1
 801a978:	ee37 6a66 	vsub.f32	s12, s14, s13
 801a97c:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
 801a980:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a984:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 801a988:	bf48      	it	mi
 801a98a:	eeb1 6a46 	vnegmi.f32	s12, s12
 801a98e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a992:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 801a996:	bf4c      	ite	mi
 801a998:	eef1 4a47 	vnegmi.f32	s9, s14
 801a99c:	eef0 4a47 	vmovpl.f32	s9, s14
 801a9a0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a9a4:	f100 81f7 	bmi.w	801ad96 <calc_line_geometry+0x180a>
 801a9a8:	eef4 4ae6 	vcmpe.f32	s9, s13
 801a9ac:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a9b0:	f140 81f9 	bpl.w	801ada6 <calc_line_geometry+0x181a>
 801a9b4:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 801a9b8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a9bc:	eddf 6a83 	vldr	s13, [pc, #524]	@ 801abcc <calc_line_geometry+0x1640>
 801a9c0:	f100 8202 	bmi.w	801adc8 <calc_line_geometry+0x183c>
 801a9c4:	ee26 7a87 	vmul.f32	s14, s13, s14
 801a9c8:	eeb4 6ac7 	vcmpe.f32	s12, s14
 801a9cc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a9d0:	f63f ac68 	bhi.w	801a2a4 <calc_line_geometry+0xd18>
 801a9d4:	f7ff b8e4 	b.w	8019ba0 <calc_line_geometry+0x614>
 801a9d8:	eddd 7a12 	vldr	s15, [sp, #72]	@ 0x48
 801a9dc:	ee37 7ae3 	vsub.f32	s14, s15, s7
 801a9e0:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 801a9e4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a9e8:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801a9ec:	bf48      	it	mi
 801a9ee:	eeb1 7a47 	vnegmi.f32	s14, s14
 801a9f2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a9f6:	eef5 3ac0 	vcmpe.f32	s7, #0.0
 801a9fa:	bf4c      	ite	mi
 801a9fc:	eef1 6a67 	vnegmi.f32	s13, s15
 801aa00:	eef0 6a67 	vmovpl.f32	s13, s15
 801aa04:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801aa08:	f100 8168 	bmi.w	801acdc <calc_line_geometry+0x1750>
 801aa0c:	eef4 6ae3 	vcmpe.f32	s13, s7
 801aa10:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801aa14:	f100 811a 	bmi.w	801ac4c <calc_line_geometry+0x16c0>
 801aa18:	eddf 7a6c 	vldr	s15, [pc, #432]	@ 801abcc <calc_line_geometry+0x1640>
 801aa1c:	ee63 7aa7 	vmul.f32	s15, s7, s15
 801aa20:	eeb4 7ae7 	vcmpe.f32	s14, s15
 801aa24:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801aa28:	ee62 7a86 	vmul.f32	s15, s5, s12
 801aa2c:	f63f ac63 	bhi.w	801a2f6 <calc_line_geometry+0xd6a>
 801aa30:	ed9d 7a13 	vldr	s14, [sp, #76]	@ 0x4c
 801aa34:	ee77 6aa0 	vadd.f32	s13, s15, s1
 801aa38:	ee37 6a66 	vsub.f32	s12, s14, s13
 801aa3c:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
 801aa40:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801aa44:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 801aa48:	bf48      	it	mi
 801aa4a:	eeb1 6a46 	vnegmi.f32	s12, s12
 801aa4e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801aa52:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 801aa56:	bf4c      	ite	mi
 801aa58:	eeb1 3a47 	vnegmi.f32	s6, s14
 801aa5c:	eeb0 3a47 	vmovpl.f32	s6, s14
 801aa60:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801aa64:	f100 818c 	bmi.w	801ad80 <calc_line_geometry+0x17f4>
 801aa68:	eeb4 3ae6 	vcmpe.f32	s6, s13
 801aa6c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801aa70:	f140 818e 	bpl.w	801ad90 <calc_line_geometry+0x1804>
 801aa74:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 801aa78:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801aa7c:	eddf 6a53 	vldr	s13, [pc, #332]	@ 801abcc <calc_line_geometry+0x1640>
 801aa80:	f100 81a5 	bmi.w	801adce <calc_line_geometry+0x1842>
 801aa84:	ee26 7a87 	vmul.f32	s14, s13, s14
 801aa88:	eeb4 6ac7 	vcmpe.f32	s12, s14
 801aa8c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801aa90:	f63f ac31 	bhi.w	801a2f6 <calc_line_geometry+0xd6a>
 801aa94:	f7ff b86b 	b.w	8019b6e <calc_line_geometry+0x5e2>
 801aa98:	eeb5 8ac0 	vcmpe.f32	s16, #0.0
 801aa9c:	ed9f 6a4b 	vldr	s12, [pc, #300]	@ 801abcc <calc_line_geometry+0x1640>
 801aaa0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801aaa4:	bf4c      	ite	mi
 801aaa6:	ee28 8a46 	vnmulmi.f32	s16, s16, s12
 801aaaa:	ee28 8a06 	vmulpl.f32	s16, s16, s12
 801aaae:	e5d9      	b.n	801a664 <calc_line_geometry+0x10d8>
 801aab0:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 801aab4:	eddf 4a45 	vldr	s9, [pc, #276]	@ 801abcc <calc_line_geometry+0x1640>
 801aab8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801aabc:	bf4c      	ite	mi
 801aabe:	ee66 6ae4 	vnmulmi.f32	s13, s13, s9
 801aac2:	ee66 6aa4 	vmulpl.f32	s13, s13, s9
 801aac6:	e527      	b.n	801a518 <calc_line_geometry+0xf8c>
 801aac8:	ee7a 7ae6 	vsub.f32	s15, s21, s13
 801aacc:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801aad0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801aad4:	eef5 aac0 	vcmpe.f32	s21, #0.0
 801aad8:	bf48      	it	mi
 801aada:	eef1 7a67 	vnegmi.f32	s15, s15
 801aade:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801aae2:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 801aae6:	bf4c      	ite	mi
 801aae8:	eeb1 6a6a 	vnegmi.f32	s12, s21
 801aaec:	eeb0 6a6a 	vmovpl.f32	s12, s21
 801aaf0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801aaf4:	f100 80c2 	bmi.w	801ac7c <calc_line_geometry+0x16f0>
 801aaf8:	eeb4 6ae6 	vcmpe.f32	s12, s13
 801aafc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ab00:	f100 80b0 	bmi.w	801ac64 <calc_line_geometry+0x16d8>
 801ab04:	eddf aa31 	vldr	s21, [pc, #196]	@ 801abcc <calc_line_geometry+0x1640>
 801ab08:	ee66 aaaa 	vmul.f32	s21, s13, s21
 801ab0c:	eef4 7aea 	vcmpe.f32	s15, s21
 801ab10:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ab14:	ee62 7a87 	vmul.f32	s15, s5, s14
 801ab18:	f63f ac21 	bhi.w	801a35e <calc_line_geometry+0xdd2>
 801ab1c:	ee37 7aa0 	vadd.f32	s14, s15, s1
 801ab20:	ee39 6a47 	vsub.f32	s12, s18, s14
 801ab24:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
 801ab28:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ab2c:	eeb5 9ac0 	vcmpe.f32	s18, #0.0
 801ab30:	bf48      	it	mi
 801ab32:	eeb1 6a46 	vnegmi.f32	s12, s12
 801ab36:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ab3a:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 801ab3e:	bf4c      	ite	mi
 801ab40:	eef1 3a49 	vnegmi.f32	s7, s18
 801ab44:	eef0 3a49 	vmovpl.f32	s7, s18
 801ab48:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ab4c:	f100 812e 	bmi.w	801adac <calc_line_geometry+0x1820>
 801ab50:	eef4 3ac7 	vcmpe.f32	s7, s14
 801ab54:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ab58:	f140 8130 	bpl.w	801adbc <calc_line_geometry+0x1830>
 801ab5c:	eeb5 9ac0 	vcmpe.f32	s18, #0.0
 801ab60:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ab64:	ed9f 7a19 	vldr	s14, [pc, #100]	@ 801abcc <calc_line_geometry+0x1640>
 801ab68:	f100 812b 	bmi.w	801adc2 <calc_line_geometry+0x1836>
 801ab6c:	ee27 9a09 	vmul.f32	s18, s14, s18
 801ab70:	eeb4 6ac9 	vcmpe.f32	s12, s18
 801ab74:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ab78:	f63f abf1 	bhi.w	801a35e <calc_line_geometry+0xdd2>
 801ab7c:	f7fe bfe2 	b.w	8019b44 <calc_line_geometry+0x5b8>
 801ab80:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 801ab84:	ed9f 3a11 	vldr	s6, [pc, #68]	@ 801abcc <calc_line_geometry+0x1640>
 801ab88:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ab8c:	bf4c      	ite	mi
 801ab8e:	ee66 6ac3 	vnmulmi.f32	s13, s13, s6
 801ab92:	ee66 6a83 	vmulpl.f32	s13, s13, s6
 801ab96:	e515      	b.n	801a5c4 <calc_line_geometry+0x1038>
 801ab98:	eeb1 4a47 	vneg.f32	s8, s14
 801ab9c:	eeb4 4ae4 	vcmpe.f32	s8, s9
 801aba0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801aba4:	dc84      	bgt.n	801aab0 <calc_line_geometry+0x1524>
 801aba6:	eddf 6a09 	vldr	s13, [pc, #36]	@ 801abcc <calc_line_geometry+0x1640>
 801abaa:	ee64 6a26 	vmul.f32	s13, s8, s13
 801abae:	e4b3      	b.n	801a518 <calc_line_geometry+0xf8c>
 801abb0:	eef1 3a67 	vneg.f32	s7, s15
 801abb4:	eef4 3ac6 	vcmpe.f32	s7, s12
 801abb8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801abbc:	f73f af6c 	bgt.w	801aa98 <calc_line_geometry+0x150c>
 801abc0:	ed9f 8a02 	vldr	s16, [pc, #8]	@ 801abcc <calc_line_geometry+0x1640>
 801abc4:	ee23 8a88 	vmul.f32	s16, s7, s16
 801abc8:	e54c      	b.n	801a664 <calc_line_geometry+0x10d8>
 801abca:	bf00      	nop
 801abcc:	3727c5ac 	.word	0x3727c5ac
 801abd0:	3727c5ac 	.word	0x3727c5ac
 801abd4:	eeb1 8a67 	vneg.f32	s16, s15
 801abd8:	eeb4 8ac3 	vcmpe.f32	s16, s6
 801abdc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801abe0:	dcce      	bgt.n	801ab80 <calc_line_geometry+0x15f4>
 801abe2:	ed5f 6a05 	vldr	s13, [pc, #-20]	@ 801abd0 <calc_line_geometry+0x1644>
 801abe6:	ee68 6a26 	vmul.f32	s13, s16, s13
 801abea:	e4eb      	b.n	801a5c4 <calc_line_geometry+0x1038>
 801abec:	eeb5 aac0 	vcmpe.f32	s20, #0.0
 801abf0:	ed1f 6a09 	vldr	s12, [pc, #-36]	@ 801abd0 <calc_line_geometry+0x1644>
 801abf4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801abf8:	bf4c      	ite	mi
 801abfa:	ee2a aa46 	vnmulmi.f32	s20, s20, s12
 801abfe:	ee2a aa06 	vmulpl.f32	s20, s20, s12
 801ac02:	e655      	b.n	801a8b0 <calc_line_geometry+0x1324>
 801ac04:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 801ac08:	ed5f 5a0f 	vldr	s11, [pc, #-60]	@ 801abd0 <calc_line_geometry+0x1644>
 801ac0c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ac10:	bf4c      	ite	mi
 801ac12:	ee66 6ae5 	vnmulmi.f32	s13, s13, s11
 801ac16:	ee66 6aa5 	vmulpl.f32	s13, s13, s11
 801ac1a:	e5f1      	b.n	801a800 <calc_line_geometry+0x1274>
 801ac1c:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 801ac20:	ed1f 6a15 	vldr	s12, [pc, #-84]	@ 801abd0 <calc_line_geometry+0x1644>
 801ac24:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ac28:	bf4c      	ite	mi
 801ac2a:	ee27 7a46 	vnmulmi.f32	s14, s14, s12
 801ac2e:	ee27 7a06 	vmulpl.f32	s14, s14, s12
 801ac32:	e58b      	b.n	801a74c <calc_line_geometry+0x11c0>
 801ac34:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801ac38:	ed1f 6a1b 	vldr	s12, [pc, #-108]	@ 801abd0 <calc_line_geometry+0x1644>
 801ac3c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ac40:	bf4c      	ite	mi
 801ac42:	ee67 7ac6 	vnmulmi.f32	s15, s15, s12
 801ac46:	ee67 7a86 	vmulpl.f32	s15, s15, s12
 801ac4a:	e689      	b.n	801a960 <calc_line_geometry+0x13d4>
 801ac4c:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801ac50:	ed5f 6a21 	vldr	s13, [pc, #-132]	@ 801abd0 <calc_line_geometry+0x1644>
 801ac54:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ac58:	bf4c      	ite	mi
 801ac5a:	ee67 7ae6 	vnmulmi.f32	s15, s15, s13
 801ac5e:	ee67 7aa6 	vmulpl.f32	s15, s15, s13
 801ac62:	e6dd      	b.n	801aa20 <calc_line_geometry+0x1494>
 801ac64:	eef5 aac0 	vcmpe.f32	s21, #0.0
 801ac68:	ed1f 6a27 	vldr	s12, [pc, #-156]	@ 801abd0 <calc_line_geometry+0x1644>
 801ac6c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ac70:	bf4c      	ite	mi
 801ac72:	ee6a aac6 	vnmulmi.f32	s21, s21, s12
 801ac76:	ee6a aa86 	vmulpl.f32	s21, s21, s12
 801ac7a:	e747      	b.n	801ab0c <calc_line_geometry+0x1580>
 801ac7c:	eef1 3a66 	vneg.f32	s7, s13
 801ac80:	eef4 3ac6 	vcmpe.f32	s7, s12
 801ac84:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ac88:	dcec      	bgt.n	801ac64 <calc_line_geometry+0x16d8>
 801ac8a:	ed5f aa2f 	vldr	s21, [pc, #-188]	@ 801abd0 <calc_line_geometry+0x1644>
 801ac8e:	ee63 aaaa 	vmul.f32	s21, s7, s21
 801ac92:	e73b      	b.n	801ab0c <calc_line_geometry+0x1580>
 801ac94:	eeb1 4a47 	vneg.f32	s8, s14
 801ac98:	eeb4 4ae5 	vcmpe.f32	s8, s11
 801ac9c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801aca0:	dcb0      	bgt.n	801ac04 <calc_line_geometry+0x1678>
 801aca2:	ed5f 6a35 	vldr	s13, [pc, #-212]	@ 801abd0 <calc_line_geometry+0x1644>
 801aca6:	ee64 6a26 	vmul.f32	s13, s8, s13
 801acaa:	e5a9      	b.n	801a800 <calc_line_geometry+0x1274>
 801acac:	eef1 5a40 	vneg.f32	s11, s0
 801acb0:	eef4 5ac6 	vcmpe.f32	s11, s12
 801acb4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801acb8:	dcb0      	bgt.n	801ac1c <calc_line_geometry+0x1690>
 801acba:	ed1f 7a3b 	vldr	s14, [pc, #-236]	@ 801abd0 <calc_line_geometry+0x1644>
 801acbe:	ee25 7a87 	vmul.f32	s14, s11, s14
 801acc2:	e543      	b.n	801a74c <calc_line_geometry+0x11c0>
 801acc4:	eef1 4a40 	vneg.f32	s9, s0
 801acc8:	eef4 4ac6 	vcmpe.f32	s9, s12
 801accc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801acd0:	dcb0      	bgt.n	801ac34 <calc_line_geometry+0x16a8>
 801acd2:	ed5f 7a41 	vldr	s15, [pc, #-260]	@ 801abd0 <calc_line_geometry+0x1644>
 801acd6:	ee64 7aa7 	vmul.f32	s15, s9, s15
 801acda:	e641      	b.n	801a960 <calc_line_geometry+0x13d4>
 801acdc:	eeb1 3a63 	vneg.f32	s6, s7
 801ace0:	eeb4 3ae6 	vcmpe.f32	s6, s13
 801ace4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ace8:	dcb0      	bgt.n	801ac4c <calc_line_geometry+0x16c0>
 801acea:	ed5f 7a47 	vldr	s15, [pc, #-284]	@ 801abd0 <calc_line_geometry+0x1644>
 801acee:	ee63 7a27 	vmul.f32	s15, s6, s15
 801acf2:	e695      	b.n	801aa20 <calc_line_geometry+0x1494>
 801acf4:	eef1 3a66 	vneg.f32	s7, s13
 801acf8:	eef4 3ac6 	vcmpe.f32	s7, s12
 801acfc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ad00:	f73f af74 	bgt.w	801abec <calc_line_geometry+0x1660>
 801ad04:	ed1f aa4e 	vldr	s20, [pc, #-312]	@ 801abd0 <calc_line_geometry+0x1644>
 801ad08:	ee23 aa8a 	vmul.f32	s20, s7, s20
 801ad0c:	e5d0      	b.n	801a8b0 <calc_line_geometry+0x1324>
 801ad0e:	eeb1 7a47 	vneg.f32	s14, s14
 801ad12:	eeb4 7ae3 	vcmpe.f32	s14, s7
 801ad16:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ad1a:	f77f adf1 	ble.w	801a900 <calc_line_geometry+0x1374>
 801ad1e:	eeb5 4ac0 	vcmpe.f32	s8, #0.0
 801ad22:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ad26:	ed1f 7a56 	vldr	s14, [pc, #-344]	@ 801abd0 <calc_line_geometry+0x1644>
 801ad2a:	f57f adeb 	bpl.w	801a904 <calc_line_geometry+0x1378>
 801ad2e:	ee24 4a47 	vnmul.f32	s8, s8, s14
 801ad32:	e5e9      	b.n	801a908 <calc_line_geometry+0x137c>
 801ad34:	eeb1 6a46 	vneg.f32	s12, s12
 801ad38:	eeb4 6ac4 	vcmpe.f32	s12, s8
 801ad3c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ad40:	f77f ad88 	ble.w	801a854 <calc_line_geometry+0x12c8>
 801ad44:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 801ad48:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ad4c:	ed1f 6a60 	vldr	s12, [pc, #-384]	@ 801abd0 <calc_line_geometry+0x1644>
 801ad50:	f57f ad82 	bpl.w	801a858 <calc_line_geometry+0x12cc>
 801ad54:	ee66 6ac6 	vnmul.f32	s13, s13, s12
 801ad58:	e580      	b.n	801a85c <calc_line_geometry+0x12d0>
 801ad5a:	eef1 6a66 	vneg.f32	s13, s13
 801ad5e:	eef4 6ae5 	vcmpe.f32	s13, s11
 801ad62:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ad66:	f77f ad1b 	ble.w	801a7a0 <calc_line_geometry+0x1214>
 801ad6a:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 801ad6e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ad72:	ed5f 6a69 	vldr	s13, [pc, #-420]	@ 801abd0 <calc_line_geometry+0x1644>
 801ad76:	f57f ad15 	bpl.w	801a7a4 <calc_line_geometry+0x1218>
 801ad7a:	ee27 7a66 	vnmul.f32	s14, s14, s13
 801ad7e:	e513      	b.n	801a7a8 <calc_line_geometry+0x121c>
 801ad80:	eef1 6a66 	vneg.f32	s13, s13
 801ad84:	eef4 6ac3 	vcmpe.f32	s13, s6
 801ad88:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ad8c:	f73f ae72 	bgt.w	801aa74 <calc_line_geometry+0x14e8>
 801ad90:	ed1f 7a71 	vldr	s14, [pc, #-452]	@ 801abd0 <calc_line_geometry+0x1644>
 801ad94:	e676      	b.n	801aa84 <calc_line_geometry+0x14f8>
 801ad96:	eef1 6a66 	vneg.f32	s13, s13
 801ad9a:	eef4 6ae4 	vcmpe.f32	s13, s9
 801ad9e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ada2:	f73f ae07 	bgt.w	801a9b4 <calc_line_geometry+0x1428>
 801ada6:	ed1f 7a76 	vldr	s14, [pc, #-472]	@ 801abd0 <calc_line_geometry+0x1644>
 801adaa:	e60b      	b.n	801a9c4 <calc_line_geometry+0x1438>
 801adac:	eeb1 7a47 	vneg.f32	s14, s14
 801adb0:	eeb4 7ae3 	vcmpe.f32	s14, s7
 801adb4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801adb8:	f73f aed0 	bgt.w	801ab5c <calc_line_geometry+0x15d0>
 801adbc:	ed1f 9a7c 	vldr	s18, [pc, #-496]	@ 801abd0 <calc_line_geometry+0x1644>
 801adc0:	e6d4      	b.n	801ab6c <calc_line_geometry+0x15e0>
 801adc2:	ee29 9a47 	vnmul.f32	s18, s18, s14
 801adc6:	e6d3      	b.n	801ab70 <calc_line_geometry+0x15e4>
 801adc8:	ee27 7a66 	vnmul.f32	s14, s14, s13
 801adcc:	e5fc      	b.n	801a9c8 <calc_line_geometry+0x143c>
 801adce:	ee27 7a66 	vnmul.f32	s14, s14, s13
 801add2:	e659      	b.n	801aa88 <calc_line_geometry+0x14fc>

0801add4 <cubic_decasteljau>:
 801add4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801add8:	ed2d 8b0a 	vpush	{d8-d12}
 801addc:	4fd5      	ldr	r7, [pc, #852]	@ (801b134 <cubic_decasteljau+0x360>)
 801adde:	4bd6      	ldr	r3, [pc, #856]	@ (801b138 <cubic_decasteljau+0x364>)
 801ade0:	eeb0 8a40 	vmov.f32	s16, s0
 801ade4:	eef0 8a60 	vmov.f32	s17, s1
 801ade8:	eef0 ba43 	vmov.f32	s23, s6
 801adec:	eeb0 ca63 	vmov.f32	s24, s7
 801adf0:	eeb0 aa41 	vmov.f32	s20, s2
 801adf4:	eeb0 9a61 	vmov.f32	s18, s3
 801adf8:	eef0 aa42 	vmov.f32	s21, s4
 801adfc:	eef0 9a62 	vmov.f32	s19, s5
 801ae00:	edd7 6a00 	vldr	s13, [r7]
 801ae04:	ed93 6a00 	vldr	s12, [r3]
 801ae08:	2401      	movs	r4, #1
 801ae0a:	ed9f bacc 	vldr	s22, [pc, #816]	@ 801b13c <cubic_decasteljau+0x368>
 801ae0e:	4dcc      	ldr	r5, [pc, #816]	@ (801b140 <cubic_decasteljau+0x36c>)
 801ae10:	f8df a334 	ldr.w	sl, [pc, #820]	@ 801b148 <cubic_decasteljau+0x374>
 801ae14:	b089      	sub	sp, #36	@ 0x24
 801ae16:	eeb4 8ae6 	vcmpe.f32	s16, s13
 801ae1a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ae1e:	dc14      	bgt.n	801ae4a <cubic_decasteljau+0x76>
 801ae20:	eef4 8ae6 	vcmpe.f32	s17, s13
 801ae24:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ae28:	dc0f      	bgt.n	801ae4a <cubic_decasteljau+0x76>
 801ae2a:	eeb4 8ac6 	vcmpe.f32	s16, s12
 801ae2e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ae32:	d40a      	bmi.n	801ae4a <cubic_decasteljau+0x76>
 801ae34:	eef4 8ac6 	vcmpe.f32	s17, s12
 801ae38:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ae3c:	d405      	bmi.n	801ae4a <cubic_decasteljau+0x76>
 801ae3e:	eeb4 aae6 	vcmpe.f32	s20, s13
 801ae42:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ae46:	f340 8129 	ble.w	801b09c <cubic_decasteljau+0x2c8>
 801ae4a:	2300      	movs	r3, #0
 801ae4c:	ee76 7a0b 	vadd.f32	s15, s12, s22
 801ae50:	eeb4 8ae7 	vcmpe.f32	s16, s15
 801ae54:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ae58:	ee36 7acb 	vsub.f32	s14, s13, s22
 801ae5c:	d50f      	bpl.n	801ae7e <cubic_decasteljau+0xaa>
 801ae5e:	eeb4 aae7 	vcmpe.f32	s20, s15
 801ae62:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ae66:	d50a      	bpl.n	801ae7e <cubic_decasteljau+0xaa>
 801ae68:	eef4 aae7 	vcmpe.f32	s21, s15
 801ae6c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ae70:	d505      	bpl.n	801ae7e <cubic_decasteljau+0xaa>
 801ae72:	eef4 bae7 	vcmpe.f32	s23, s15
 801ae76:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ae7a:	f100 80a7 	bmi.w	801afcc <cubic_decasteljau+0x1f8>
 801ae7e:	eeb4 8ac7 	vcmpe.f32	s16, s14
 801ae82:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ae86:	dd0f      	ble.n	801aea8 <cubic_decasteljau+0xd4>
 801ae88:	eeb4 aac7 	vcmpe.f32	s20, s14
 801ae8c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ae90:	dd0a      	ble.n	801aea8 <cubic_decasteljau+0xd4>
 801ae92:	eef4 aac7 	vcmpe.f32	s21, s14
 801ae96:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ae9a:	dd05      	ble.n	801aea8 <cubic_decasteljau+0xd4>
 801ae9c:	eef4 bac7 	vcmpe.f32	s23, s14
 801aea0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801aea4:	f300 8092 	bgt.w	801afcc <cubic_decasteljau+0x1f8>
 801aea8:	eef4 8ae7 	vcmpe.f32	s17, s15
 801aeac:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801aeb0:	d50e      	bpl.n	801aed0 <cubic_decasteljau+0xfc>
 801aeb2:	eeb4 9ae7 	vcmpe.f32	s18, s15
 801aeb6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801aeba:	d509      	bpl.n	801aed0 <cubic_decasteljau+0xfc>
 801aebc:	eef4 9ae7 	vcmpe.f32	s19, s15
 801aec0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801aec4:	d504      	bpl.n	801aed0 <cubic_decasteljau+0xfc>
 801aec6:	eeb4 cae7 	vcmpe.f32	s24, s15
 801aeca:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801aece:	d47d      	bmi.n	801afcc <cubic_decasteljau+0x1f8>
 801aed0:	eef4 8ac7 	vcmpe.f32	s17, s14
 801aed4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801aed8:	dd0e      	ble.n	801aef8 <cubic_decasteljau+0x124>
 801aeda:	eeb4 9ac7 	vcmpe.f32	s18, s14
 801aede:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801aee2:	dd09      	ble.n	801aef8 <cubic_decasteljau+0x124>
 801aee4:	eef4 9ac7 	vcmpe.f32	s19, s14
 801aee8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801aeec:	dd04      	ble.n	801aef8 <cubic_decasteljau+0x124>
 801aeee:	eeb4 cac7 	vcmpe.f32	s24, s14
 801aef2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801aef6:	dc69      	bgt.n	801afcc <cubic_decasteljau+0x1f8>
 801aef8:	682a      	ldr	r2, [r5, #0]
 801aefa:	2b00      	cmp	r3, #0
 801aefc:	d077      	beq.n	801afee <cubic_decasteljau+0x21a>
 801aefe:	f8df e24c 	ldr.w	lr, [pc, #588]	@ 801b14c <cubic_decasteljau+0x378>
 801af02:	4b90      	ldr	r3, [pc, #576]	@ (801b144 <cubic_decasteljau+0x370>)
 801af04:	f8de 6000 	ldr.w	r6, [lr]
 801af08:	e9d3 1004 	ldrd	r1, r0, [r3, #16]
 801af0c:	3c01      	subs	r4, #1
 801af0e:	f100 0901 	add.w	r9, r0, #1
 801af12:	f101 0806 	add.w	r8, r1, #6
 801af16:	2e00      	cmp	r6, #0
 801af18:	d155      	bne.n	801afc6 <cubic_decasteljau+0x1f2>
 801af1a:	681e      	ldr	r6, [r3, #0]
 801af1c:	4286      	cmp	r6, r0
 801af1e:	d828      	bhi.n	801af72 <cubic_decasteljau+0x19e>
 801af20:	2002      	movs	r0, #2
 801af22:	2101      	movs	r1, #1
 801af24:	f8c3 9014 	str.w	r9, [r3, #20]
 801af28:	6298      	str	r0, [r3, #40]	@ 0x28
 801af2a:	f8ce 1000 	str.w	r1, [lr]
 801af2e:	f8c3 8010 	str.w	r8, [r3, #16]
 801af32:	b1aa      	cbz	r2, 801af60 <cubic_decasteljau+0x18c>
 801af34:	3a01      	subs	r2, #1
 801af36:	eb02 0342 	add.w	r3, r2, r2, lsl #1
 801af3a:	eb0a 03c3 	add.w	r3, sl, r3, lsl #3
 801af3e:	eef0 8a4c 	vmov.f32	s17, s24
 801af42:	eeb0 8a6b 	vmov.f32	s16, s23
 801af46:	ed93 aa00 	vldr	s20, [r3]
 801af4a:	ed93 9a01 	vldr	s18, [r3, #4]
 801af4e:	edd3 aa02 	vldr	s21, [r3, #8]
 801af52:	edd3 9a03 	vldr	s19, [r3, #12]
 801af56:	ed93 ca05 	vldr	s24, [r3, #20]
 801af5a:	edd3 ba04 	vldr	s23, [r3, #16]
 801af5e:	602a      	str	r2, [r5, #0]
 801af60:	2c00      	cmp	r4, #0
 801af62:	f000 8094 	beq.w	801b08e <cubic_decasteljau+0x2ba>
 801af66:	4b74      	ldr	r3, [pc, #464]	@ (801b138 <cubic_decasteljau+0x364>)
 801af68:	edd7 6a00 	vldr	s13, [r7]
 801af6c:	ed93 6a00 	vldr	s12, [r3]
 801af70:	e751      	b.n	801ae16 <cubic_decasteljau+0x42>
 801af72:	f04f 0b06 	mov.w	fp, #6
 801af76:	f8c3 9014 	str.w	r9, [r3, #20]
 801af7a:	e9d3 6901 	ldrd	r6, r9, [r3, #4]
 801af7e:	f806 b000 	strb.w	fp, [r6, r0]
 801af82:	1c48      	adds	r0, r1, #1
 801af84:	4548      	cmp	r0, r9
 801af86:	d218      	bcs.n	801afba <cubic_decasteljau+0x1e6>
 801af88:	68d8      	ldr	r0, [r3, #12]
 801af8a:	f101 0c03 	add.w	ip, r1, #3
 801af8e:	eb00 0081 	add.w	r0, r0, r1, lsl #2
 801af92:	45e1      	cmp	r9, ip
 801af94:	ed80 aa00 	vstr	s20, [r0]
 801af98:	ed80 9a01 	vstr	s18, [r0, #4]
 801af9c:	d90d      	bls.n	801afba <cubic_decasteljau+0x1e6>
 801af9e:	3105      	adds	r1, #5
 801afa0:	4589      	cmp	r9, r1
 801afa2:	edc0 aa02 	vstr	s21, [r0, #8]
 801afa6:	edc0 9a03 	vstr	s19, [r0, #12]
 801afaa:	d968      	bls.n	801b07e <cubic_decasteljau+0x2aa>
 801afac:	edc0 ba04 	vstr	s23, [r0, #16]
 801afb0:	f8c3 8010 	str.w	r8, [r3, #16]
 801afb4:	ed80 ca05 	vstr	s24, [r0, #20]
 801afb8:	e7bb      	b.n	801af32 <cubic_decasteljau+0x15e>
 801afba:	2002      	movs	r0, #2
 801afbc:	2101      	movs	r1, #1
 801afbe:	6298      	str	r0, [r3, #40]	@ 0x28
 801afc0:	f8ce 1000 	str.w	r1, [lr]
 801afc4:	e7b3      	b.n	801af2e <cubic_decasteljau+0x15a>
 801afc6:	f8c3 9014 	str.w	r9, [r3, #20]
 801afca:	e7b0      	b.n	801af2e <cubic_decasteljau+0x15a>
 801afcc:	eeb0 1a6b 	vmov.f32	s2, s23
 801afd0:	eef0 1a4c 	vmov.f32	s3, s24
 801afd4:	eeb0 0a48 	vmov.f32	s0, s16
 801afd8:	eef0 0a68 	vmov.f32	s1, s17
 801afdc:	f7fe fad6 	bl	801958c <calc_line_geometry>
 801afe0:	3c01      	subs	r4, #1
 801afe2:	4680      	mov	r8, r0
 801afe4:	2800      	cmp	r0, #0
 801afe6:	f040 809d 	bne.w	801b124 <cubic_decasteljau+0x350>
 801afea:	682a      	ldr	r2, [r5, #0]
 801afec:	e7a1      	b.n	801af32 <cubic_decasteljau+0x15e>
 801afee:	2a09      	cmp	r2, #9
 801aff0:	dc85      	bgt.n	801aefe <cubic_decasteljau+0x12a>
 801aff2:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 801aff6:	ee3a 7a8a 	vadd.f32	s14, s21, s20
 801affa:	ee39 5a8c 	vadd.f32	s10, s19, s24
 801affe:	ee7a aaab 	vadd.f32	s21, s21, s23
 801b002:	ee78 5a0a 	vadd.f32	s11, s16, s20
 801b006:	ee79 9a29 	vadd.f32	s19, s18, s19
 801b00a:	ee39 9a28 	vadd.f32	s18, s18, s17
 801b00e:	ee2a 2aa7 	vmul.f32	s4, s21, s15
 801b012:	ee25 aaa7 	vmul.f32	s20, s11, s15
 801b016:	ee27 7a27 	vmul.f32	s14, s14, s15
 801b01a:	ee25 5a27 	vmul.f32	s10, s10, s15
 801b01e:	ee69 9aa7 	vmul.f32	s19, s19, s15
 801b022:	ee29 9a27 	vmul.f32	s18, s18, s15
 801b026:	ee7a aa07 	vadd.f32	s21, s20, s14
 801b02a:	ee79 5a85 	vadd.f32	s11, s19, s10
 801b02e:	ee37 7a02 	vadd.f32	s14, s14, s4
 801b032:	ee79 9a29 	vadd.f32	s19, s18, s19
 801b036:	ee27 7a27 	vmul.f32	s14, s14, s15
 801b03a:	ee65 5aa7 	vmul.f32	s11, s11, s15
 801b03e:	ee6a aaa7 	vmul.f32	s21, s21, s15
 801b042:	ee69 9aa7 	vmul.f32	s19, s19, s15
 801b046:	ee3a 4a87 	vadd.f32	s8, s21, s14
 801b04a:	ee79 4aa5 	vadd.f32	s9, s19, s11
 801b04e:	eb02 0342 	add.w	r3, r2, r2, lsl #1
 801b052:	eb0a 03c3 	add.w	r3, sl, r3, lsl #3
 801b056:	3201      	adds	r2, #1
 801b058:	edc3 ba04 	vstr	s23, [r3, #16]
 801b05c:	ed83 ca05 	vstr	s24, [r3, #20]
 801b060:	3401      	adds	r4, #1
 801b062:	ed83 2a02 	vstr	s4, [r3, #8]
 801b066:	ed83 7a00 	vstr	s14, [r3]
 801b06a:	ee64 ba27 	vmul.f32	s23, s8, s15
 801b06e:	ed83 5a03 	vstr	s10, [r3, #12]
 801b072:	edc3 5a01 	vstr	s11, [r3, #4]
 801b076:	ee24 caa7 	vmul.f32	s24, s9, s15
 801b07a:	602a      	str	r2, [r5, #0]
 801b07c:	e6cb      	b.n	801ae16 <cubic_decasteljau+0x42>
 801b07e:	2002      	movs	r0, #2
 801b080:	2101      	movs	r1, #1
 801b082:	f8c3 8010 	str.w	r8, [r3, #16]
 801b086:	6298      	str	r0, [r3, #40]	@ 0x28
 801b088:	f8ce 1000 	str.w	r1, [lr]
 801b08c:	e751      	b.n	801af32 <cubic_decasteljau+0x15e>
 801b08e:	46a0      	mov	r8, r4
 801b090:	4640      	mov	r0, r8
 801b092:	b009      	add	sp, #36	@ 0x24
 801b094:	ecbd 8b0a 	vpop	{d8-d12}
 801b098:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b09c:	eeb4 9ae6 	vcmpe.f32	s18, s13
 801b0a0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801b0a4:	f73f aed1 	bgt.w	801ae4a <cubic_decasteljau+0x76>
 801b0a8:	eeb4 aac6 	vcmpe.f32	s20, s12
 801b0ac:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801b0b0:	f53f aecb 	bmi.w	801ae4a <cubic_decasteljau+0x76>
 801b0b4:	eeb4 9ac6 	vcmpe.f32	s18, s12
 801b0b8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801b0bc:	f53f aec5 	bmi.w	801ae4a <cubic_decasteljau+0x76>
 801b0c0:	eef4 aae6 	vcmpe.f32	s21, s13
 801b0c4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801b0c8:	f73f aebf 	bgt.w	801ae4a <cubic_decasteljau+0x76>
 801b0cc:	eef4 9ae6 	vcmpe.f32	s19, s13
 801b0d0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801b0d4:	f73f aeb9 	bgt.w	801ae4a <cubic_decasteljau+0x76>
 801b0d8:	eef4 aac6 	vcmpe.f32	s21, s12
 801b0dc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801b0e0:	f53f aeb3 	bmi.w	801ae4a <cubic_decasteljau+0x76>
 801b0e4:	eef4 9ac6 	vcmpe.f32	s19, s12
 801b0e8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801b0ec:	f53f aead 	bmi.w	801ae4a <cubic_decasteljau+0x76>
 801b0f0:	eef4 bae6 	vcmpe.f32	s23, s13
 801b0f4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801b0f8:	f73f aea7 	bgt.w	801ae4a <cubic_decasteljau+0x76>
 801b0fc:	eeb4 cae6 	vcmpe.f32	s24, s13
 801b100:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801b104:	f73f aea1 	bgt.w	801ae4a <cubic_decasteljau+0x76>
 801b108:	eef4 bac6 	vcmpe.f32	s23, s12
 801b10c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801b110:	f53f ae9b 	bmi.w	801ae4a <cubic_decasteljau+0x76>
 801b114:	eeb4 cac6 	vcmpe.f32	s24, s12
 801b118:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801b11c:	bf54      	ite	pl
 801b11e:	2301      	movpl	r3, #1
 801b120:	2300      	movmi	r3, #0
 801b122:	e693      	b.n	801ae4c <cubic_decasteljau+0x78>
 801b124:	f001 fde6 	bl	801ccf4 <nema_vg_set_error>
 801b128:	4640      	mov	r0, r8
 801b12a:	b009      	add	sp, #36	@ 0x24
 801b12c:	ecbd 8b0a 	vpop	{d8-d12}
 801b130:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b134:	20000140 	.word	0x20000140
 801b138:	20000144 	.word	0x20000144
 801b13c:	42480000 	.word	0x42480000
 801b140:	20083434 	.word	0x20083434
 801b144:	200832f0 	.word	0x200832f0
 801b148:	20083344 	.word	0x20083344
 801b14c:	200832e8 	.word	0x200832e8

0801b150 <arc_to_cubic>:
 801b150:	b530      	push	{r4, r5, lr}
 801b152:	ed2d 8b0e 	vpush	{d8-d14}
 801b156:	eddf 8ab7 	vldr	s17, [pc, #732]	@ 801b434 <arc_to_cubic+0x2e4>
 801b15a:	ee60 9a28 	vmul.f32	s19, s0, s17
 801b15e:	ee60 8aa8 	vmul.f32	s17, s1, s17
 801b162:	eeb5 0a00 	vmov.f32	s0, #80	@ 0x3e800000  0.250
 801b166:	ee78 8ae9 	vsub.f32	s17, s17, s19
 801b16a:	b093      	sub	sp, #76	@ 0x4c
 801b16c:	ee28 0a80 	vmul.f32	s0, s17, s0
 801b170:	4604      	mov	r4, r0
 801b172:	460d      	mov	r5, r1
 801b174:	eef0 ba41 	vmov.f32	s23, s2
 801b178:	eeb0 ca61 	vmov.f32	s24, s3
 801b17c:	eef0 ca42 	vmov.f32	s25, s4
 801b180:	eeb0 da62 	vmov.f32	s26, s5
 801b184:	ed9f 8aac 	vldr	s16, [pc, #688]	@ 801b438 <arc_to_cubic+0x2e8>
 801b188:	f016 fb16 	bl	80317b8 <tanf>
 801b18c:	ee20 8a08 	vmul.f32	s16, s0, s16
 801b190:	eeb0 0a68 	vmov.f32	s0, s17
 801b194:	f016 fa7e 	bl	8031694 <cosf>
 801b198:	eeb0 9a40 	vmov.f32	s18, s0
 801b19c:	eeb0 0a68 	vmov.f32	s0, s17
 801b1a0:	f016 fac4 	bl	803172c <sinf>
 801b1a4:	ed94 7a09 	vldr	s14, [r4, #36]	@ 0x24
 801b1a8:	eddf 7aa4 	vldr	s15, [pc, #656]	@ 801b43c <arc_to_cubic+0x2ec>
 801b1ac:	ee87 ea27 	vdiv.f32	s28, s14, s15
 801b1b0:	eddf 7aa3 	vldr	s15, [pc, #652]	@ 801b440 <arc_to_cubic+0x2f0>
 801b1b4:	eeb0 ba40 	vmov.f32	s22, s0
 801b1b8:	ee68 8a00 	vmul.f32	s17, s16, s0
 801b1bc:	eeb0 0a69 	vmov.f32	s0, s19
 801b1c0:	ee2e ea27 	vmul.f32	s28, s28, s15
 801b1c4:	f016 fa66 	bl	8031694 <cosf>
 801b1c8:	eef0 aa40 	vmov.f32	s21, s0
 801b1cc:	eeb0 0a69 	vmov.f32	s0, s19
 801b1d0:	f016 faac 	bl	803172c <sinf>
 801b1d4:	eeb0 aa40 	vmov.f32	s20, s0
 801b1d8:	eeb0 0a4e 	vmov.f32	s0, s28
 801b1dc:	f016 fa5a 	bl	8031694 <cosf>
 801b1e0:	ee68 da09 	vmul.f32	s27, s16, s18
 801b1e4:	eef0 9a40 	vmov.f32	s19, s0
 801b1e8:	eeb0 0a4e 	vmov.f32	s0, s28
 801b1ec:	f016 fa9e 	bl	803172c <sinf>
 801b1f0:	4b94      	ldr	r3, [pc, #592]	@ (801b444 <arc_to_cubic+0x2f4>)
 801b1f2:	07e9      	lsls	r1, r5, #31
 801b1f4:	ee78 8a89 	vadd.f32	s17, s17, s18
 801b1f8:	ee7b da6d 	vsub.f32	s27, s22, s27
 801b1fc:	781b      	ldrb	r3, [r3, #0]
 801b1fe:	f140 80a8 	bpl.w	801b352 <arc_to_cubic+0x202>
 801b202:	ed94 7a03 	vldr	s14, [r4, #12]
 801b206:	edd4 0a04 	vldr	s1, [r4, #16]
 801b20a:	ee6d 6a8a 	vmul.f32	s13, s27, s20
 801b20e:	ee68 1a0a 	vmul.f32	s3, s16, s20
 801b212:	ee68 7aaa 	vmul.f32	s15, s17, s21
 801b216:	ee28 8a2a 	vmul.f32	s16, s16, s21
 801b21a:	ee68 8a8a 	vmul.f32	s17, s17, s20
 801b21e:	ee6d daaa 	vmul.f32	s27, s27, s21
 801b222:	eddf 2a89 	vldr	s5, [pc, #548]	@ 801b448 <arc_to_cubic+0x2f8>
 801b226:	ee77 7ae6 	vsub.f32	s15, s15, s13
 801b22a:	ee7a 1ae1 	vsub.f32	s3, s21, s3
 801b22e:	ee38 8a0a 	vadd.f32	s16, s16, s20
 801b232:	ee78 8aad 	vadd.f32	s17, s17, s27
 801b236:	ee71 1aa2 	vadd.f32	s3, s3, s5
 801b23a:	ee38 8a22 	vadd.f32	s16, s16, s5
 801b23e:	ee77 7aa2 	vadd.f32	s15, s15, s5
 801b242:	ee78 8aa2 	vadd.f32	s17, s17, s5
 801b246:	ee61 1aac 	vmul.f32	s3, s3, s25
 801b24a:	ee28 8a0d 	vmul.f32	s16, s16, s26
 801b24e:	ee67 7aac 	vmul.f32	s15, s15, s25
 801b252:	ee68 8a8d 	vmul.f32	s17, s17, s26
 801b256:	ee29 1aa1 	vmul.f32	s2, s19, s3
 801b25a:	ee20 6a08 	vmul.f32	s12, s0, s16
 801b25e:	ee29 2aa7 	vmul.f32	s4, s19, s15
 801b262:	ee60 6a28 	vmul.f32	s13, s0, s17
 801b266:	ee60 1a21 	vmul.f32	s3, s0, s3
 801b26a:	ee29 8a88 	vmul.f32	s16, s19, s16
 801b26e:	ee60 7a27 	vmul.f32	s15, s0, s15
 801b272:	ee69 8aa8 	vmul.f32	s17, s19, s17
 801b276:	ee31 1a46 	vsub.f32	s2, s2, s12
 801b27a:	ee31 8a88 	vadd.f32	s16, s3, s16
 801b27e:	ee32 2a66 	vsub.f32	s4, s4, s13
 801b282:	ee77 8aa8 	vadd.f32	s17, s15, s17
 801b286:	07aa      	lsls	r2, r5, #30
 801b288:	ee31 1a2b 	vadd.f32	s2, s2, s23
 801b28c:	ee38 8a0c 	vadd.f32	s16, s16, s24
 801b290:	ee32 2a2b 	vadd.f32	s4, s4, s23
 801b294:	ee78 8a8c 	vadd.f32	s17, s17, s24
 801b298:	d517      	bpl.n	801b2ca <arc_to_cubic+0x17a>
 801b29a:	ed94 3a05 	vldr	s6, [r4, #20]
 801b29e:	edd4 3a06 	vldr	s7, [r4, #24]
 801b2a2:	2b00      	cmp	r3, #0
 801b2a4:	f040 8098 	bne.w	801b3d8 <arc_to_cubic+0x288>
 801b2a8:	eef0 2a68 	vmov.f32	s5, s17
 801b2ac:	eef0 1a48 	vmov.f32	s3, s16
 801b2b0:	eeb0 0a47 	vmov.f32	s0, s14
 801b2b4:	f7ff fd8e 	bl	801add4 <cubic_decasteljau>
 801b2b8:	4604      	mov	r4, r0
 801b2ba:	b108      	cbz	r0, 801b2c0 <arc_to_cubic+0x170>
 801b2bc:	f001 fd1a 	bl	801ccf4 <nema_vg_set_error>
 801b2c0:	4620      	mov	r0, r4
 801b2c2:	b013      	add	sp, #76	@ 0x4c
 801b2c4:	ecbd 8b0e 	vpop	{d8-d14}
 801b2c8:	bd30      	pop	{r4, r5, pc}
 801b2ca:	ee69 6a2a 	vmul.f32	s13, s18, s21
 801b2ce:	ee29 9a0a 	vmul.f32	s18, s18, s20
 801b2d2:	ee6b aa2a 	vmul.f32	s21, s22, s21
 801b2d6:	ee2b aa0a 	vmul.f32	s20, s22, s20
 801b2da:	ee79 aa2a 	vadd.f32	s21, s18, s21
 801b2de:	ee36 aaca 	vsub.f32	s20, s13, s20
 801b2e2:	ee3a aa22 	vadd.f32	s20, s20, s5
 801b2e6:	ee7a 2aa2 	vadd.f32	s5, s21, s5
 801b2ea:	ee6a ca2c 	vmul.f32	s25, s20, s25
 801b2ee:	ee22 da8d 	vmul.f32	s26, s5, s26
 801b2f2:	ee29 3aac 	vmul.f32	s6, s19, s25
 801b2f6:	ee69 3a8d 	vmul.f32	s7, s19, s26
 801b2fa:	ee60 ca2c 	vmul.f32	s25, s0, s25
 801b2fe:	ee20 0a0d 	vmul.f32	s0, s0, s26
 801b302:	ee7c 3aa3 	vadd.f32	s7, s25, s7
 801b306:	ee33 0a40 	vsub.f32	s0, s6, s0
 801b30a:	ee73 3a8c 	vadd.f32	s7, s7, s24
 801b30e:	ee30 3a2b 	vadd.f32	s6, s0, s23
 801b312:	2b00      	cmp	r3, #0
 801b314:	d0c8      	beq.n	801b2a8 <arc_to_cubic+0x158>
 801b316:	4b4d      	ldr	r3, [pc, #308]	@ (801b44c <arc_to_cubic+0x2fc>)
 801b318:	ed93 6a00 	vldr	s12, [r3]
 801b31c:	edd3 5a01 	vldr	s11, [r3, #4]
 801b320:	edd3 6a03 	vldr	s13, [r3, #12]
 801b324:	edd3 2a04 	vldr	s5, [r3, #16]
 801b328:	ee23 5aa5 	vmul.f32	s10, s7, s11
 801b32c:	ee63 ba26 	vmul.f32	s23, s6, s13
 801b330:	ee23 0a06 	vmul.f32	s0, s6, s12
 801b334:	ee63 3aa2 	vmul.f32	s7, s7, s5
 801b338:	ee30 3a05 	vadd.f32	s6, s0, s10
 801b33c:	ed93 4a02 	vldr	s8, [r3, #8]
 801b340:	ee7b 3aa3 	vadd.f32	s7, s23, s7
 801b344:	edd3 4a05 	vldr	s9, [r3, #20]
 801b348:	ee33 3a04 	vadd.f32	s6, s6, s8
 801b34c:	ee73 3aa4 	vadd.f32	s7, s7, s9
 801b350:	e04f      	b.n	801b3f2 <arc_to_cubic+0x2a2>
 801b352:	eddf 0a3d 	vldr	s1, [pc, #244]	@ 801b448 <arc_to_cubic+0x2f8>
 801b356:	ee6a 7a20 	vmul.f32	s15, s20, s1
 801b35a:	ee6a 6aa0 	vmul.f32	s13, s21, s1
 801b35e:	ee7a 7ae7 	vsub.f32	s15, s21, s15
 801b362:	ee76 6a8a 	vadd.f32	s13, s13, s20
 801b366:	ee77 7aa0 	vadd.f32	s15, s15, s1
 801b36a:	ee76 6aa0 	vadd.f32	s13, s13, s1
 801b36e:	ee67 7aac 	vmul.f32	s15, s15, s25
 801b372:	ee66 6a8d 	vmul.f32	s13, s13, s26
 801b376:	ee29 7aa7 	vmul.f32	s14, s19, s15
 801b37a:	ee60 0a27 	vmul.f32	s1, s0, s15
 801b37e:	ee60 7a26 	vmul.f32	s15, s0, s13
 801b382:	ee69 6aa6 	vmul.f32	s13, s19, s13
 801b386:	ee37 7a67 	vsub.f32	s14, s14, s15
 801b38a:	ee70 0aa6 	vadd.f32	s1, s1, s13
 801b38e:	ee37 7a2b 	vadd.f32	s14, s14, s23
 801b392:	ee70 0a8c 	vadd.f32	s1, s1, s24
 801b396:	2b00      	cmp	r3, #0
 801b398:	f43f af37 	beq.w	801b20a <arc_to_cubic+0xba>
 801b39c:	4a2b      	ldr	r2, [pc, #172]	@ (801b44c <arc_to_cubic+0x2fc>)
 801b39e:	edd2 6a00 	vldr	s13, [r2]
 801b3a2:	edd2 5a01 	vldr	s11, [r2, #4]
 801b3a6:	edd2 7a03 	vldr	s15, [r2, #12]
 801b3aa:	ed92 6a04 	vldr	s12, [r2, #16]
 801b3ae:	ee67 7a27 	vmul.f32	s15, s14, s15
 801b3b2:	ee67 6a26 	vmul.f32	s13, s14, s13
 801b3b6:	ee60 5aa5 	vmul.f32	s11, s1, s11
 801b3ba:	ee60 0a86 	vmul.f32	s1, s1, s12
 801b3be:	ee76 6aa5 	vadd.f32	s13, s13, s11
 801b3c2:	ee77 0aa0 	vadd.f32	s1, s15, s1
 801b3c6:	ed92 7a02 	vldr	s14, [r2, #8]
 801b3ca:	edd2 7a05 	vldr	s15, [r2, #20]
 801b3ce:	ee36 7a87 	vadd.f32	s14, s13, s14
 801b3d2:	ee70 0aa7 	vadd.f32	s1, s1, s15
 801b3d6:	e718      	b.n	801b20a <arc_to_cubic+0xba>
 801b3d8:	4b1c      	ldr	r3, [pc, #112]	@ (801b44c <arc_to_cubic+0x2fc>)
 801b3da:	ed93 6a00 	vldr	s12, [r3]
 801b3de:	edd3 5a01 	vldr	s11, [r3, #4]
 801b3e2:	ed93 4a02 	vldr	s8, [r3, #8]
 801b3e6:	edd3 6a03 	vldr	s13, [r3, #12]
 801b3ea:	edd3 2a04 	vldr	s5, [r3, #16]
 801b3ee:	edd3 4a05 	vldr	s9, [r3, #20]
 801b3f2:	ee21 5a06 	vmul.f32	s10, s2, s12
 801b3f6:	ee65 1a88 	vmul.f32	s3, s11, s16
 801b3fa:	ee21 1a26 	vmul.f32	s2, s2, s13
 801b3fe:	ee22 6a06 	vmul.f32	s12, s4, s12
 801b402:	ee62 6a26 	vmul.f32	s13, s4, s13
 801b406:	ee68 7aa2 	vmul.f32	s15, s17, s5
 801b40a:	ee25 2aa8 	vmul.f32	s4, s11, s17
 801b40e:	ee28 8a22 	vmul.f32	s16, s16, s5
 801b412:	ee75 5a21 	vadd.f32	s11, s10, s3
 801b416:	ee31 8a08 	vadd.f32	s16, s2, s16
 801b41a:	ee36 2a02 	vadd.f32	s4, s12, s4
 801b41e:	ee76 7aa7 	vadd.f32	s15, s13, s15
 801b422:	ee35 1a84 	vadd.f32	s2, s11, s8
 801b426:	ee38 8a24 	vadd.f32	s16, s16, s9
 801b42a:	ee32 2a04 	vadd.f32	s4, s4, s8
 801b42e:	ee77 8aa4 	vadd.f32	s17, s15, s9
 801b432:	e739      	b.n	801b2a8 <arc_to_cubic+0x158>
 801b434:	3c8efa35 	.word	0x3c8efa35
 801b438:	3faaaaab 	.word	0x3faaaaab
 801b43c:	43340000 	.word	0x43340000
 801b440:	40490fdb 	.word	0x40490fdb
 801b444:	2008331c 	.word	0x2008331c
 801b448:	00000000 	.word	0x00000000
 801b44c:	20083320 	.word	0x20083320

0801b450 <calc_new_geometry>:
 801b450:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b454:	ed2d 8b10 	vpush	{d8-d15}
 801b458:	b0a1      	sub	sp, #132	@ 0x84
 801b45a:	4682      	mov	sl, r0
 801b45c:	2248      	movs	r2, #72	@ 0x48
 801b45e:	a80e      	add	r0, sp, #56	@ 0x38
 801b460:	2100      	movs	r1, #0
 801b462:	f017 fb90 	bl	8032b86 <memset>
 801b466:	2201      	movs	r2, #1
 801b468:	2300      	movs	r3, #0
 801b46a:	f88d 2038 	strb.w	r2, [sp, #56]	@ 0x38
 801b46e:	f88d 203a 	strb.w	r2, [sp, #58]	@ 0x3a
 801b472:	f8da 2000 	ldr.w	r2, [sl]
 801b476:	ed9f ba80 	vldr	s22, [pc, #512]	@ 801b678 <calc_new_geometry+0x228>
 801b47a:	429a      	cmp	r2, r3
 801b47c:	ed9f aa7f 	vldr	s20, [pc, #508]	@ 801b67c <calc_new_geometry+0x22c>
 801b480:	eddf aa7f 	vldr	s21, [pc, #508]	@ 801b680 <calc_new_geometry+0x230>
 801b484:	eddf 9a7f 	vldr	s19, [pc, #508]	@ 801b684 <calc_new_geometry+0x234>
 801b488:	ed9f 9a7f 	vldr	s18, [pc, #508]	@ 801b688 <calc_new_geometry+0x238>
 801b48c:	f240 80e7 	bls.w	801b65e <calc_new_geometry+0x20e>
 801b490:	2200      	movs	r2, #0
 801b492:	f8da 1008 	ldr.w	r1, [sl, #8]
 801b496:	f8df b1f8 	ldr.w	fp, [pc, #504]	@ 801b690 <calc_new_geometry+0x240>
 801b49a:	5ccc      	ldrb	r4, [r1, r3]
 801b49c:	af13      	add	r7, sp, #76	@ 0x4c
 801b49e:	f004 066f 	and.w	r6, r4, #111	@ 0x6f
 801b4a2:	ad11      	add	r5, sp, #68	@ 0x44
 801b4a4:	3301      	adds	r3, #1
 801b4a6:	2e01      	cmp	r6, #1
 801b4a8:	e897 0003 	ldmia.w	r7, {r0, r1}
 801b4ac:	9301      	str	r3, [sp, #4]
 801b4ae:	f004 0910 	and.w	r9, r4, #16
 801b4b2:	f8cb 2024 	str.w	r2, [fp, #36]	@ 0x24
 801b4b6:	e885 0003 	stmia.w	r5, {r0, r1}
 801b4ba:	f000 8244 	beq.w	801b946 <calc_new_geometry+0x4f6>
 801b4be:	0663      	lsls	r3, r4, #25
 801b4c0:	f000 8229 	beq.w	801b916 <calc_new_geometry+0x4c6>
 801b4c4:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801b4c6:	f89d e07c 	ldrb.w	lr, [sp, #124]	@ 0x7c
 801b4ca:	bb63      	cbnz	r3, 801b526 <calc_new_geometry+0xd6>
 801b4cc:	2201      	movs	r2, #1
 801b4ce:	f8df 81c4 	ldr.w	r8, [pc, #452]	@ 801b694 <calc_new_geometry+0x244>
 801b4d2:	f88d 2038 	strb.w	r2, [sp, #56]	@ 0x38
 801b4d6:	f898 2000 	ldrb.w	r2, [r8]
 801b4da:	b322      	cbz	r2, 801b526 <calc_new_geometry+0xd6>
 801b4dc:	4a6b      	ldr	r2, [pc, #428]	@ (801b68c <calc_new_geometry+0x23c>)
 801b4de:	ed9d 7a11 	vldr	s14, [sp, #68]	@ 0x44
 801b4e2:	eddd 7a12 	vldr	s15, [sp, #72]	@ 0x48
 801b4e6:	ed92 6a03 	vldr	s12, [r2, #12]
 801b4ea:	edd2 6a04 	vldr	s13, [r2, #16]
 801b4ee:	ed92 5a00 	vldr	s10, [r2]
 801b4f2:	edd2 5a01 	vldr	s11, [r2, #4]
 801b4f6:	ee27 5a05 	vmul.f32	s10, s14, s10
 801b4fa:	ee67 5aa5 	vmul.f32	s11, s15, s11
 801b4fe:	ee27 7a06 	vmul.f32	s14, s14, s12
 801b502:	ee67 7aa6 	vmul.f32	s15, s15, s13
 801b506:	ee35 6a25 	vadd.f32	s12, s10, s11
 801b50a:	ee37 7a27 	vadd.f32	s14, s14, s15
 801b50e:	edd2 6a02 	vldr	s13, [r2, #8]
 801b512:	edd2 7a05 	vldr	s15, [r2, #20]
 801b516:	ee76 6a26 	vadd.f32	s13, s12, s13
 801b51a:	ee77 7a27 	vadd.f32	s15, s14, s15
 801b51e:	edcd 6a11 	vstr	s13, [sp, #68]	@ 0x44
 801b522:	edcd 7a12 	vstr	s15, [sp, #72]	@ 0x48
 801b526:	f04f 0800 	mov.w	r8, #0
 801b52a:	f8da 200c 	ldr.w	r2, [sl, #12]
 801b52e:	ea4f 0c83 	mov.w	ip, r3, lsl #2
 801b532:	eb02 010c 	add.w	r1, r2, ip
 801b536:	1c58      	adds	r0, r3, #1
 801b538:	2e06      	cmp	r6, #6
 801b53a:	f88d 803a 	strb.w	r8, [sp, #58]	@ 0x3a
 801b53e:	9103      	str	r1, [sp, #12]
 801b540:	4680      	mov	r8, r0
 801b542:	f000 833c 	beq.w	801bbbe <calc_new_geometry+0x76e>
 801b546:	2e05      	cmp	r6, #5
 801b548:	f000 84a7 	beq.w	801be9a <calc_new_geometry+0xa4a>
 801b54c:	2e07      	cmp	r6, #7
 801b54e:	f00e 0e6f 	and.w	lr, lr, #111	@ 0x6f
 801b552:	f000 84f2 	beq.w	801bf3a <calc_new_geometry+0xaea>
 801b556:	2e08      	cmp	r6, #8
 801b558:	f000 8727 	beq.w	801c3aa <calc_new_geometry+0xf5a>
 801b55c:	f004 000f 	and.w	r0, r4, #15
 801b560:	2809      	cmp	r0, #9
 801b562:	9002      	str	r0, [sp, #8]
 801b564:	f000 86d7 	beq.w	801c316 <calc_new_geometry+0xec6>
 801b568:	2e04      	cmp	r6, #4
 801b56a:	f040 83bc 	bne.w	801bce6 <calc_new_geometry+0x896>
 801b56e:	eddd 7a19 	vldr	s15, [sp, #100]	@ 0x64
 801b572:	edcd 7a13 	vstr	s15, [sp, #76]	@ 0x4c
 801b576:	9b03      	ldr	r3, [sp, #12]
 801b578:	f8cd 803c 	str.w	r8, [sp, #60]	@ 0x3c
 801b57c:	f89d 2038 	ldrb.w	r2, [sp, #56]	@ 0x38
 801b580:	ed93 7a00 	vldr	s14, [r3]
 801b584:	f1b9 0f00 	cmp.w	r9, #0
 801b588:	f000 84d1 	beq.w	801bf2e <calc_new_geometry+0xade>
 801b58c:	eddd 6a1a 	vldr	s13, [sp, #104]	@ 0x68
 801b590:	ee36 7a87 	vadd.f32	s14, s13, s14
 801b594:	ed8d 7a14 	vstr	s14, [sp, #80]	@ 0x50
 801b598:	f8df 80f8 	ldr.w	r8, [pc, #248]	@ 801b694 <calc_new_geometry+0x244>
 801b59c:	f898 3000 	ldrb.w	r3, [r8]
 801b5a0:	edcd 7a19 	vstr	s15, [sp, #100]	@ 0x64
 801b5a4:	ed8d 7a1a 	vstr	s14, [sp, #104]	@ 0x68
 801b5a8:	f88d 407c 	strb.w	r4, [sp, #124]	@ 0x7c
 801b5ac:	b303      	cbz	r3, 801b5f0 <calc_new_geometry+0x1a0>
 801b5ae:	4b37      	ldr	r3, [pc, #220]	@ (801b68c <calc_new_geometry+0x23c>)
 801b5b0:	ed93 6a03 	vldr	s12, [r3, #12]
 801b5b4:	edd3 6a04 	vldr	s13, [r3, #16]
 801b5b8:	ed93 5a00 	vldr	s10, [r3]
 801b5bc:	edd3 5a01 	vldr	s11, [r3, #4]
 801b5c0:	ee27 5a85 	vmul.f32	s10, s15, s10
 801b5c4:	ee67 5a25 	vmul.f32	s11, s14, s11
 801b5c8:	ee67 7a86 	vmul.f32	s15, s15, s12
 801b5cc:	ee27 7a26 	vmul.f32	s14, s14, s13
 801b5d0:	ee75 5a25 	vadd.f32	s11, s10, s11
 801b5d4:	ee77 7a87 	vadd.f32	s15, s15, s14
 801b5d8:	ed93 6a02 	vldr	s12, [r3, #8]
 801b5dc:	edd3 6a05 	vldr	s13, [r3, #20]
 801b5e0:	ee35 7a86 	vadd.f32	s14, s11, s12
 801b5e4:	ee77 7aa6 	vadd.f32	s15, s15, s13
 801b5e8:	ed8d 7a13 	vstr	s14, [sp, #76]	@ 0x4c
 801b5ec:	edcd 7a14 	vstr	s15, [sp, #80]	@ 0x50
 801b5f0:	2a01      	cmp	r2, #1
 801b5f2:	f000 826c 	beq.w	801bace <calc_new_geometry+0x67e>
 801b5f6:	f004 036d 	and.w	r3, r4, #109	@ 0x6d
 801b5fa:	2b05      	cmp	r3, #5
 801b5fc:	d04c      	beq.n	801b698 <calc_new_geometry+0x248>
 801b5fe:	2e06      	cmp	r6, #6
 801b600:	f000 81d7 	beq.w	801b9b2 <calc_new_geometry+0x562>
 801b604:	2e08      	cmp	r6, #8
 801b606:	f000 81d4 	beq.w	801b9b2 <calc_new_geometry+0x562>
 801b60a:	f004 030f 	and.w	r3, r4, #15
 801b60e:	9302      	str	r3, [sp, #8]
 801b610:	9b02      	ldr	r3, [sp, #8]
 801b612:	2b09      	cmp	r3, #9
 801b614:	f000 83fd 	beq.w	801be12 <calc_new_geometry+0x9c2>
 801b618:	f1a6 030a 	sub.w	r3, r6, #10
 801b61c:	2b01      	cmp	r3, #1
 801b61e:	d918      	bls.n	801b652 <calc_new_geometry+0x202>
 801b620:	1eb3      	subs	r3, r6, #2
 801b622:	2b02      	cmp	r3, #2
 801b624:	f240 82bc 	bls.w	801bba0 <calc_new_geometry+0x750>
 801b628:	2e01      	cmp	r6, #1
 801b62a:	f000 86f4 	beq.w	801c416 <calc_new_geometry+0xfc6>
 801b62e:	f44f 7380 	mov.w	r3, #256	@ 0x100
 801b632:	ed9d 1a13 	vldr	s2, [sp, #76]	@ 0x4c
 801b636:	eddd 1a14 	vldr	s3, [sp, #80]	@ 0x50
 801b63a:	ed9d 0a11 	vldr	s0, [sp, #68]	@ 0x44
 801b63e:	eddd 0a12 	vldr	s1, [sp, #72]	@ 0x48
 801b642:	f8cb 3024 	str.w	r3, [fp, #36]	@ 0x24
 801b646:	f7fd ffa1 	bl	801958c <calc_line_geometry>
 801b64a:	4601      	mov	r1, r0
 801b64c:	2800      	cmp	r0, #0
 801b64e:	f040 81c6 	bne.w	801b9de <calc_new_geometry+0x58e>
 801b652:	9b01      	ldr	r3, [sp, #4]
 801b654:	f8da 2000 	ldr.w	r2, [sl]
 801b658:	429a      	cmp	r2, r3
 801b65a:	f63f af19 	bhi.w	801b490 <calc_new_geometry+0x40>
 801b65e:	f89d 3039 	ldrb.w	r3, [sp, #57]	@ 0x39
 801b662:	2b01      	cmp	r3, #1
 801b664:	f000 8720 	beq.w	801c4a8 <calc_new_geometry+0x1058>
 801b668:	2100      	movs	r1, #0
 801b66a:	4608      	mov	r0, r1
 801b66c:	b021      	add	sp, #132	@ 0x84
 801b66e:	ecbd 8b10 	vpop	{d8-d15}
 801b672:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b676:	bf00      	nop
 801b678:	3c8efa35 	.word	0x3c8efa35
 801b67c:	42652ee1 	.word	0x42652ee1
 801b680:	43340000 	.word	0x43340000
 801b684:	42b40000 	.word	0x42b40000
 801b688:	00000000 	.word	0x00000000
 801b68c:	20083320 	.word	0x20083320
 801b690:	200832f0 	.word	0x200832f0
 801b694:	2008331c 	.word	0x2008331c
 801b698:	f8df 836c 	ldr.w	r8, [pc, #876]	@ 801ba08 <calc_new_geometry+0x5b8>
 801b69c:	4ed5      	ldr	r6, [pc, #852]	@ (801b9f4 <calc_new_geometry+0x5a4>)
 801b69e:	edd8 6a00 	vldr	s13, [r8]
 801b6a2:	e895 0003 	ldmia.w	r5, {r0, r1}
 801b6a6:	ed96 6a00 	vldr	s12, [r6]
 801b6aa:	ed9d 8a11 	vldr	s16, [sp, #68]	@ 0x44
 801b6ae:	eddd 8a12 	vldr	s17, [sp, #72]	@ 0x48
 801b6b2:	eddd ba15 	vldr	s23, [sp, #84]	@ 0x54
 801b6b6:	ed9d ca16 	vldr	s24, [sp, #88]	@ 0x58
 801b6ba:	eddd ca13 	vldr	s25, [sp, #76]	@ 0x4c
 801b6be:	ed9d da14 	vldr	s26, [sp, #80]	@ 0x50
 801b6c2:	2401      	movs	r4, #1
 801b6c4:	eddf dacc 	vldr	s27, [pc, #816]	@ 801b9f8 <calc_new_geometry+0x5a8>
 801b6c8:	aa0a      	add	r2, sp, #40	@ 0x28
 801b6ca:	ab0c      	add	r3, sp, #48	@ 0x30
 801b6cc:	e882 0003 	stmia.w	r2, {r0, r1}
 801b6d0:	e897 0003 	ldmia.w	r7, {r0, r1}
 801b6d4:	e883 0003 	stmia.w	r3, {r0, r1}
 801b6d8:	4dc8      	ldr	r5, [pc, #800]	@ (801b9fc <calc_new_geometry+0x5ac>)
 801b6da:	eeb4 8ae6 	vcmpe.f32	s16, s13
 801b6de:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801b6e2:	dc23      	bgt.n	801b72c <calc_new_geometry+0x2dc>
 801b6e4:	eef4 8ae6 	vcmpe.f32	s17, s13
 801b6e8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801b6ec:	dc1e      	bgt.n	801b72c <calc_new_geometry+0x2dc>
 801b6ee:	eeb4 8ac6 	vcmpe.f32	s16, s12
 801b6f2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801b6f6:	d419      	bmi.n	801b72c <calc_new_geometry+0x2dc>
 801b6f8:	eef4 8ac6 	vcmpe.f32	s17, s12
 801b6fc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801b700:	d414      	bmi.n	801b72c <calc_new_geometry+0x2dc>
 801b702:	eef4 bae6 	vcmpe.f32	s23, s13
 801b706:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801b70a:	dc0f      	bgt.n	801b72c <calc_new_geometry+0x2dc>
 801b70c:	eeb4 cae6 	vcmpe.f32	s24, s13
 801b710:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801b714:	dc0a      	bgt.n	801b72c <calc_new_geometry+0x2dc>
 801b716:	eef4 bac6 	vcmpe.f32	s23, s12
 801b71a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801b71e:	d405      	bmi.n	801b72c <calc_new_geometry+0x2dc>
 801b720:	eeb4 cac6 	vcmpe.f32	s24, s12
 801b724:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801b728:	f140 845c 	bpl.w	801bfe4 <calc_new_geometry+0xb94>
 801b72c:	2200      	movs	r2, #0
 801b72e:	ee76 7a2d 	vadd.f32	s15, s12, s27
 801b732:	eeb4 8ae7 	vcmpe.f32	s16, s15
 801b736:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801b73a:	ee36 7aed 	vsub.f32	s14, s13, s27
 801b73e:	d509      	bpl.n	801b754 <calc_new_geometry+0x304>
 801b740:	eef4 bae7 	vcmpe.f32	s23, s15
 801b744:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801b748:	d504      	bpl.n	801b754 <calc_new_geometry+0x304>
 801b74a:	eef4 cae7 	vcmpe.f32	s25, s15
 801b74e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801b752:	d463      	bmi.n	801b81c <calc_new_geometry+0x3cc>
 801b754:	eeb4 8ac7 	vcmpe.f32	s16, s14
 801b758:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801b75c:	dd09      	ble.n	801b772 <calc_new_geometry+0x322>
 801b75e:	eef4 bac7 	vcmpe.f32	s23, s14
 801b762:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801b766:	dd04      	ble.n	801b772 <calc_new_geometry+0x322>
 801b768:	eef4 cac7 	vcmpe.f32	s25, s14
 801b76c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801b770:	dc54      	bgt.n	801b81c <calc_new_geometry+0x3cc>
 801b772:	eef4 8ae7 	vcmpe.f32	s17, s15
 801b776:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801b77a:	d509      	bpl.n	801b790 <calc_new_geometry+0x340>
 801b77c:	eeb4 cae7 	vcmpe.f32	s24, s15
 801b780:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801b784:	d504      	bpl.n	801b790 <calc_new_geometry+0x340>
 801b786:	eeb4 dae7 	vcmpe.f32	s26, s15
 801b78a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801b78e:	d445      	bmi.n	801b81c <calc_new_geometry+0x3cc>
 801b790:	eef4 8ac7 	vcmpe.f32	s17, s14
 801b794:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801b798:	dd09      	ble.n	801b7ae <calc_new_geometry+0x35e>
 801b79a:	eeb4 cac7 	vcmpe.f32	s24, s14
 801b79e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801b7a2:	dd04      	ble.n	801b7ae <calc_new_geometry+0x35e>
 801b7a4:	eeb4 dac7 	vcmpe.f32	s26, s14
 801b7a8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801b7ac:	dc36      	bgt.n	801b81c <calc_new_geometry+0x3cc>
 801b7ae:	682b      	ldr	r3, [r5, #0]
 801b7b0:	2a00      	cmp	r2, #0
 801b7b2:	d073      	beq.n	801b89c <calc_new_geometry+0x44c>
 801b7b4:	e9db 2104 	ldrd	r2, r1, [fp, #16]
 801b7b8:	4891      	ldr	r0, [pc, #580]	@ (801ba00 <calc_new_geometry+0x5b0>)
 801b7ba:	3c01      	subs	r4, #1
 801b7bc:	6807      	ldr	r7, [r0, #0]
 801b7be:	f101 0c01 	add.w	ip, r1, #1
 801b7c2:	f102 0904 	add.w	r9, r2, #4
 801b7c6:	2f00      	cmp	r7, #0
 801b7c8:	d152      	bne.n	801b870 <calc_new_geometry+0x420>
 801b7ca:	f8db 7000 	ldr.w	r7, [fp]
 801b7ce:	428f      	cmp	r7, r1
 801b7d0:	d83d      	bhi.n	801b84e <calc_new_geometry+0x3fe>
 801b7d2:	2102      	movs	r1, #2
 801b7d4:	2201      	movs	r2, #1
 801b7d6:	f8cb c014 	str.w	ip, [fp, #20]
 801b7da:	f8cb 1028 	str.w	r1, [fp, #40]	@ 0x28
 801b7de:	6002      	str	r2, [r0, #0]
 801b7e0:	f8cb 9010 	str.w	r9, [fp, #16]
 801b7e4:	b193      	cbz	r3, 801b80c <calc_new_geometry+0x3bc>
 801b7e6:	3b01      	subs	r3, #1
 801b7e8:	4986      	ldr	r1, [pc, #536]	@ (801ba04 <calc_new_geometry+0x5b4>)
 801b7ea:	eb03 0243 	add.w	r2, r3, r3, lsl #1
 801b7ee:	eb01 02c2 	add.w	r2, r1, r2, lsl #3
 801b7f2:	ed92 8a00 	vldr	s16, [r2]
 801b7f6:	edd2 8a01 	vldr	s17, [r2, #4]
 801b7fa:	edd2 ba02 	vldr	s23, [r2, #8]
 801b7fe:	ed92 ca03 	vldr	s24, [r2, #12]
 801b802:	edd2 ca04 	vldr	s25, [r2, #16]
 801b806:	ed92 da05 	vldr	s26, [r2, #20]
 801b80a:	602b      	str	r3, [r5, #0]
 801b80c:	2c00      	cmp	r4, #0
 801b80e:	f43f af20 	beq.w	801b652 <calc_new_geometry+0x202>
 801b812:	edd8 6a00 	vldr	s13, [r8]
 801b816:	ed96 6a00 	vldr	s12, [r6]
 801b81a:	e75e      	b.n	801b6da <calc_new_geometry+0x28a>
 801b81c:	eeb0 1a6c 	vmov.f32	s2, s25
 801b820:	eef0 1a4d 	vmov.f32	s3, s26
 801b824:	eeb0 0a48 	vmov.f32	s0, s16
 801b828:	eef0 0a68 	vmov.f32	s1, s17
 801b82c:	ed8d 8a0a 	vstr	s16, [sp, #40]	@ 0x28
 801b830:	edcd 8a0b 	vstr	s17, [sp, #44]	@ 0x2c
 801b834:	edcd ca0c 	vstr	s25, [sp, #48]	@ 0x30
 801b838:	ed8d da0d 	vstr	s26, [sp, #52]	@ 0x34
 801b83c:	f7fd fea6 	bl	801958c <calc_line_geometry>
 801b840:	4601      	mov	r1, r0
 801b842:	2800      	cmp	r0, #0
 801b844:	f040 819e 	bne.w	801bb84 <calc_new_geometry+0x734>
 801b848:	3c01      	subs	r4, #1
 801b84a:	682b      	ldr	r3, [r5, #0]
 801b84c:	e7ca      	b.n	801b7e4 <calc_new_geometry+0x394>
 801b84e:	f04f 0e05 	mov.w	lr, #5
 801b852:	f8cb c014 	str.w	ip, [fp, #20]
 801b856:	e9db 7c01 	ldrd	r7, ip, [fp, #4]
 801b85a:	f807 e001 	strb.w	lr, [r7, r1]
 801b85e:	1c51      	adds	r1, r2, #1
 801b860:	4561      	cmp	r1, ip
 801b862:	d308      	bcc.n	801b876 <calc_new_geometry+0x426>
 801b864:	2102      	movs	r1, #2
 801b866:	2201      	movs	r2, #1
 801b868:	f8cb 1028 	str.w	r1, [fp, #40]	@ 0x28
 801b86c:	6002      	str	r2, [r0, #0]
 801b86e:	e7b7      	b.n	801b7e0 <calc_new_geometry+0x390>
 801b870:	f8cb c014 	str.w	ip, [fp, #20]
 801b874:	e7b4      	b.n	801b7e0 <calc_new_geometry+0x390>
 801b876:	f8db 100c 	ldr.w	r1, [fp, #12]
 801b87a:	f102 0e03 	add.w	lr, r2, #3
 801b87e:	45f4      	cmp	ip, lr
 801b880:	eb01 0282 	add.w	r2, r1, r2, lsl #2
 801b884:	edc2 ba00 	vstr	s23, [r2]
 801b888:	ed82 ca01 	vstr	s24, [r2, #4]
 801b88c:	d93b      	bls.n	801b906 <calc_new_geometry+0x4b6>
 801b88e:	edc2 ca02 	vstr	s25, [r2, #8]
 801b892:	f8cb 9010 	str.w	r9, [fp, #16]
 801b896:	ed82 da03 	vstr	s26, [r2, #12]
 801b89a:	e7a3      	b.n	801b7e4 <calc_new_geometry+0x394>
 801b89c:	2b09      	cmp	r3, #9
 801b89e:	dc89      	bgt.n	801b7b4 <calc_new_geometry+0x364>
 801b8a0:	eef6 5a00 	vmov.f32	s11, #96	@ 0x3f000000  0.5
 801b8a4:	ee7b 7aac 	vadd.f32	s15, s23, s25
 801b8a8:	ee3c 5a0d 	vadd.f32	s10, s24, s26
 801b8ac:	ee38 7a2b 	vadd.f32	s14, s16, s23
 801b8b0:	ee38 ca8c 	vadd.f32	s24, s17, s24
 801b8b4:	ee67 ba25 	vmul.f32	s23, s14, s11
 801b8b8:	ee67 7aa5 	vmul.f32	s15, s15, s11
 801b8bc:	ee25 5a25 	vmul.f32	s10, s10, s11
 801b8c0:	ee2c ca25 	vmul.f32	s24, s24, s11
 801b8c4:	ee7b 4aa7 	vadd.f32	s9, s23, s15
 801b8c8:	ee3c 7a05 	vadd.f32	s14, s24, s10
 801b8cc:	ee64 4aa5 	vmul.f32	s9, s9, s11
 801b8d0:	ee67 5a25 	vmul.f32	s11, s14, s11
 801b8d4:	494b      	ldr	r1, [pc, #300]	@ (801ba04 <calc_new_geometry+0x5b4>)
 801b8d6:	eb03 0243 	add.w	r2, r3, r3, lsl #1
 801b8da:	eb01 02c2 	add.w	r2, r1, r2, lsl #3
 801b8de:	3301      	adds	r3, #1
 801b8e0:	edc2 ca04 	vstr	s25, [r2, #16]
 801b8e4:	ed82 da05 	vstr	s26, [r2, #20]
 801b8e8:	3401      	adds	r4, #1
 801b8ea:	edc2 7a02 	vstr	s15, [r2, #8]
 801b8ee:	edc2 4a00 	vstr	s9, [r2]
 801b8f2:	eef0 ca64 	vmov.f32	s25, s9
 801b8f6:	ed82 5a03 	vstr	s10, [r2, #12]
 801b8fa:	edc2 5a01 	vstr	s11, [r2, #4]
 801b8fe:	eeb0 da65 	vmov.f32	s26, s11
 801b902:	602b      	str	r3, [r5, #0]
 801b904:	e6e9      	b.n	801b6da <calc_new_geometry+0x28a>
 801b906:	2102      	movs	r1, #2
 801b908:	2201      	movs	r2, #1
 801b90a:	f8cb 9010 	str.w	r9, [fp, #16]
 801b90e:	f8cb 1028 	str.w	r1, [fp, #40]	@ 0x28
 801b912:	6002      	str	r2, [r0, #0]
 801b914:	e766      	b.n	801b7e4 <calc_new_geometry+0x394>
 801b916:	f89d 2038 	ldrb.w	r2, [sp, #56]	@ 0x38
 801b91a:	2300      	movs	r3, #0
 801b91c:	2a01      	cmp	r2, #1
 801b91e:	bf19      	ittee	ne
 801b920:	eddd 7a1d 	vldrne	s15, [sp, #116]	@ 0x74
 801b924:	ed9d 7a1e 	vldrne	s14, [sp, #120]	@ 0x78
 801b928:	eeb0 7a49 	vmoveq.f32	s14, s18
 801b92c:	eef0 7a49 	vmoveq.f32	s15, s18
 801b930:	ed8d 7a14 	vstr	s14, [sp, #80]	@ 0x50
 801b934:	edcd 7a13 	vstr	s15, [sp, #76]	@ 0x4c
 801b938:	f88d 303a 	strb.w	r3, [sp, #58]	@ 0x3a
 801b93c:	f88d 3039 	strb.w	r3, [sp, #57]	@ 0x39
 801b940:	f8df 80c8 	ldr.w	r8, [pc, #200]	@ 801ba0c <calc_new_geometry+0x5bc>
 801b944:	e62a      	b.n	801b59c <calc_new_geometry+0x14c>
 801b946:	f89d 2039 	ldrb.w	r2, [sp, #57]	@ 0x39
 801b94a:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801b94c:	2a01      	cmp	r2, #1
 801b94e:	f000 80d3 	beq.w	801baf8 <calc_new_geometry+0x6a8>
 801b952:	f8df 80b8 	ldr.w	r8, [pc, #184]	@ 801ba0c <calc_new_geometry+0x5bc>
 801b956:	f04f 0c01 	mov.w	ip, #1
 801b95a:	f04f 0e00 	mov.w	lr, #0
 801b95e:	009a      	lsls	r2, r3, #2
 801b960:	f8da 000c 	ldr.w	r0, [sl, #12]
 801b964:	1d11      	adds	r1, r2, #4
 801b966:	4401      	add	r1, r0
 801b968:	4402      	add	r2, r0
 801b96a:	eb03 000c 	add.w	r0, r3, ip
 801b96e:	9310      	str	r3, [sp, #64]	@ 0x40
 801b970:	f88d e038 	strb.w	lr, [sp, #56]	@ 0x38
 801b974:	f88d c03a 	strb.w	ip, [sp, #58]	@ 0x3a
 801b978:	900f      	str	r0, [sp, #60]	@ 0x3c
 801b97a:	3302      	adds	r3, #2
 801b97c:	edd2 7a00 	vldr	s15, [r2]
 801b980:	f1b9 0f00 	cmp.w	r9, #0
 801b984:	f000 80b0 	beq.w	801bae8 <calc_new_geometry+0x698>
 801b988:	ed9d 7a19 	vldr	s14, [sp, #100]	@ 0x64
 801b98c:	ee77 7a27 	vadd.f32	s15, s14, s15
 801b990:	edcd 7a13 	vstr	s15, [sp, #76]	@ 0x4c
 801b994:	930f      	str	r3, [sp, #60]	@ 0x3c
 801b996:	ed91 7a00 	vldr	s14, [r1]
 801b99a:	eddd 6a1a 	vldr	s13, [sp, #104]	@ 0x68
 801b99e:	ee36 7a87 	vadd.f32	s14, s13, s14
 801b9a2:	ed8d 7a14 	vstr	s14, [sp, #80]	@ 0x50
 801b9a6:	edcd 7a1d 	vstr	s15, [sp, #116]	@ 0x74
 801b9aa:	ed8d 7a1e 	vstr	s14, [sp, #120]	@ 0x78
 801b9ae:	2200      	movs	r2, #0
 801b9b0:	e5f4      	b.n	801b59c <calc_new_geometry+0x14c>
 801b9b2:	ed9d 3a13 	vldr	s6, [sp, #76]	@ 0x4c
 801b9b6:	eddd 3a14 	vldr	s7, [sp, #80]	@ 0x50
 801b9ba:	ed9d 2a17 	vldr	s4, [sp, #92]	@ 0x5c
 801b9be:	eddd 2a18 	vldr	s5, [sp, #96]	@ 0x60
 801b9c2:	ed9d 1a15 	vldr	s2, [sp, #84]	@ 0x54
 801b9c6:	eddd 1a16 	vldr	s3, [sp, #88]	@ 0x58
 801b9ca:	ed9d 0a11 	vldr	s0, [sp, #68]	@ 0x44
 801b9ce:	eddd 0a12 	vldr	s1, [sp, #72]	@ 0x48
 801b9d2:	f7ff f9ff 	bl	801add4 <cubic_decasteljau>
 801b9d6:	4601      	mov	r1, r0
 801b9d8:	2800      	cmp	r0, #0
 801b9da:	f43f ae3a 	beq.w	801b652 <calc_new_geometry+0x202>
 801b9de:	9101      	str	r1, [sp, #4]
 801b9e0:	f001 f988 	bl	801ccf4 <nema_vg_set_error>
 801b9e4:	9901      	ldr	r1, [sp, #4]
 801b9e6:	4608      	mov	r0, r1
 801b9e8:	b021      	add	sp, #132	@ 0x84
 801b9ea:	ecbd 8b10 	vpop	{d8-d15}
 801b9ee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b9f2:	bf00      	nop
 801b9f4:	20000144 	.word	0x20000144
 801b9f8:	42480000 	.word	0x42480000
 801b9fc:	20083434 	.word	0x20083434
 801ba00:	200832e8 	.word	0x200832e8
 801ba04:	20083344 	.word	0x20083344
 801ba08:	20000140 	.word	0x20000140
 801ba0c:	2008331c 	.word	0x2008331c
 801ba10:	9e05      	ldr	r6, [sp, #20]
 801ba12:	eddd 7a1d 	vldr	s15, [sp, #116]	@ 0x74
 801ba16:	eddd 6a19 	vldr	s13, [sp, #100]	@ 0x64
 801ba1a:	ee76 6ae7 	vsub.f32	s13, s13, s15
 801ba1e:	eef5 6a40 	vcmp.f32	s13, #0.0
 801ba22:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ba26:	ed9d 7a1e 	vldr	s14, [sp, #120]	@ 0x78
 801ba2a:	d108      	bne.n	801ba3e <calc_new_geometry+0x5ee>
 801ba2c:	eddd 6a1a 	vldr	s13, [sp, #104]	@ 0x68
 801ba30:	ee76 6ac7 	vsub.f32	s13, s13, s14
 801ba34:	eef5 6a40 	vcmp.f32	s13, #0.0
 801ba38:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ba3c:	d03f      	beq.n	801babe <calc_new_geometry+0x66e>
 801ba3e:	e897 0003 	ldmia.w	r7, {r0, r1}
 801ba42:	f8df 82ec 	ldr.w	r8, [pc, #748]	@ 801bd30 <calc_new_geometry+0x8e0>
 801ba46:	edcd 7a19 	vstr	s15, [sp, #100]	@ 0x64
 801ba4a:	f898 3000 	ldrb.w	r3, [r8]
 801ba4e:	ed8d 7a1a 	vstr	s14, [sp, #104]	@ 0x68
 801ba52:	e885 0003 	stmia.w	r5, {r0, r1}
 801ba56:	edcd 7a13 	vstr	s15, [sp, #76]	@ 0x4c
 801ba5a:	ed8d 7a14 	vstr	s14, [sp, #80]	@ 0x50
 801ba5e:	b303      	cbz	r3, 801baa2 <calc_new_geometry+0x652>
 801ba60:	4bb2      	ldr	r3, [pc, #712]	@ (801bd2c <calc_new_geometry+0x8dc>)
 801ba62:	ed93 6a03 	vldr	s12, [r3, #12]
 801ba66:	edd3 6a04 	vldr	s13, [r3, #16]
 801ba6a:	ed93 5a00 	vldr	s10, [r3]
 801ba6e:	edd3 5a01 	vldr	s11, [r3, #4]
 801ba72:	ee27 5a85 	vmul.f32	s10, s15, s10
 801ba76:	ee67 5a25 	vmul.f32	s11, s14, s11
 801ba7a:	ee67 7a86 	vmul.f32	s15, s15, s12
 801ba7e:	ee27 7a26 	vmul.f32	s14, s14, s13
 801ba82:	ee35 6a25 	vadd.f32	s12, s10, s11
 801ba86:	ee37 7a87 	vadd.f32	s14, s15, s14
 801ba8a:	edd3 6a02 	vldr	s13, [r3, #8]
 801ba8e:	edd3 7a05 	vldr	s15, [r3, #20]
 801ba92:	ee76 6a26 	vadd.f32	s13, s12, s13
 801ba96:	ee77 7a27 	vadd.f32	s15, s14, s15
 801ba9a:	edcd 6a13 	vstr	s13, [sp, #76]	@ 0x4c
 801ba9e:	edcd 7a14 	vstr	s15, [sp, #80]	@ 0x50
 801baa2:	ed9d 1a13 	vldr	s2, [sp, #76]	@ 0x4c
 801baa6:	eddd 1a14 	vldr	s3, [sp, #80]	@ 0x50
 801baaa:	ed9d 0a11 	vldr	s0, [sp, #68]	@ 0x44
 801baae:	eddd 0a12 	vldr	s1, [sp, #72]	@ 0x48
 801bab2:	f7fd fd6b 	bl	801958c <calc_line_geometry>
 801bab6:	4601      	mov	r1, r0
 801bab8:	2800      	cmp	r0, #0
 801baba:	f040 8425 	bne.w	801c308 <calc_new_geometry+0xeb8>
 801babe:	2300      	movs	r3, #0
 801bac0:	f88d 3039 	strb.w	r3, [sp, #57]	@ 0x39
 801bac4:	f89d 3038 	ldrb.w	r3, [sp, #56]	@ 0x38
 801bac8:	2b01      	cmp	r3, #1
 801baca:	f47f ada1 	bne.w	801b610 <calc_new_geometry+0x1c0>
 801bace:	ed9d 0a11 	vldr	s0, [sp, #68]	@ 0x44
 801bad2:	eddd 0a12 	vldr	s1, [sp, #72]	@ 0x48
 801bad6:	f7fd fcf9 	bl	80194cc <calc_move_geometry>
 801bada:	4601      	mov	r1, r0
 801badc:	2800      	cmp	r0, #0
 801bade:	f47f af7e 	bne.w	801b9de <calc_new_geometry+0x58e>
 801bae2:	f88d 0038 	strb.w	r0, [sp, #56]	@ 0x38
 801bae6:	e586      	b.n	801b5f6 <calc_new_geometry+0x1a6>
 801bae8:	edcd 7a13 	vstr	s15, [sp, #76]	@ 0x4c
 801baec:	930f      	str	r3, [sp, #60]	@ 0x3c
 801baee:	ed91 7a00 	vldr	s14, [r1]
 801baf2:	ed8d 7a14 	vstr	s14, [sp, #80]	@ 0x50
 801baf6:	e756      	b.n	801b9a6 <calc_new_geometry+0x556>
 801baf8:	2b00      	cmp	r3, #0
 801bafa:	f43f af2a 	beq.w	801b952 <calc_new_geometry+0x502>
 801bafe:	f89d 3038 	ldrb.w	r3, [sp, #56]	@ 0x38
 801bb02:	2b00      	cmp	r3, #0
 801bb04:	f000 8269 	beq.w	801bfda <calc_new_geometry+0xb8a>
 801bb08:	eef0 7a49 	vmov.f32	s15, s18
 801bb0c:	eeb0 7a49 	vmov.f32	s14, s18
 801bb10:	f8df 821c 	ldr.w	r8, [pc, #540]	@ 801bd30 <calc_new_geometry+0x8e0>
 801bb14:	f898 3000 	ldrb.w	r3, [r8]
 801bb18:	b1e3      	cbz	r3, 801bb54 <calc_new_geometry+0x704>
 801bb1a:	4b84      	ldr	r3, [pc, #528]	@ (801bd2c <calc_new_geometry+0x8dc>)
 801bb1c:	edd3 5a00 	vldr	s11, [r3]
 801bb20:	ed93 6a01 	vldr	s12, [r3, #4]
 801bb24:	edd3 6a03 	vldr	s13, [r3, #12]
 801bb28:	ed93 5a04 	vldr	s10, [r3, #16]
 801bb2c:	ee27 6a86 	vmul.f32	s12, s15, s12
 801bb30:	ee67 6a26 	vmul.f32	s13, s14, s13
 801bb34:	ee67 7a85 	vmul.f32	s15, s15, s10
 801bb38:	ee67 5a25 	vmul.f32	s11, s14, s11
 801bb3c:	ee76 6aa7 	vadd.f32	s13, s13, s15
 801bb40:	ee35 7a86 	vadd.f32	s14, s11, s12
 801bb44:	edd3 7a05 	vldr	s15, [r3, #20]
 801bb48:	ed93 6a02 	vldr	s12, [r3, #8]
 801bb4c:	ee76 7aa7 	vadd.f32	s15, s13, s15
 801bb50:	ee37 7a06 	vadd.f32	s14, s14, s12
 801bb54:	f240 13ff 	movw	r3, #511	@ 0x1ff
 801bb58:	eeb0 1a47 	vmov.f32	s2, s14
 801bb5c:	eef0 1a67 	vmov.f32	s3, s15
 801bb60:	ed9d 0a13 	vldr	s0, [sp, #76]	@ 0x4c
 801bb64:	eddd 0a14 	vldr	s1, [sp, #80]	@ 0x50
 801bb68:	ed8d 7a08 	vstr	s14, [sp, #32]
 801bb6c:	edcd 7a09 	vstr	s15, [sp, #36]	@ 0x24
 801bb70:	f8cb 3024 	str.w	r3, [fp, #36]	@ 0x24
 801bb74:	f7fd fd0a 	bl	801958c <calc_line_geometry>
 801bb78:	4601      	mov	r1, r0
 801bb7a:	2800      	cmp	r0, #0
 801bb7c:	f040 83c4 	bne.w	801c308 <calc_new_geometry+0xeb8>
 801bb80:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801bb82:	e6e8      	b.n	801b956 <calc_new_geometry+0x506>
 801bb84:	9101      	str	r1, [sp, #4]
 801bb86:	f001 f8b5 	bl	801ccf4 <nema_vg_set_error>
 801bb8a:	9901      	ldr	r1, [sp, #4]
 801bb8c:	4608      	mov	r0, r1
 801bb8e:	f001 f8b1 	bl	801ccf4 <nema_vg_set_error>
 801bb92:	9901      	ldr	r1, [sp, #4]
 801bb94:	4608      	mov	r0, r1
 801bb96:	b021      	add	sp, #132	@ 0x84
 801bb98:	ecbd 8b10 	vpop	{d8-d15}
 801bb9c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801bba0:	ed9d 1a13 	vldr	s2, [sp, #76]	@ 0x4c
 801bba4:	eddd 1a14 	vldr	s3, [sp, #80]	@ 0x50
 801bba8:	ed9d 0a11 	vldr	s0, [sp, #68]	@ 0x44
 801bbac:	eddd 0a12 	vldr	s1, [sp, #72]	@ 0x48
 801bbb0:	f7fd fcec 	bl	801958c <calc_line_geometry>
 801bbb4:	4601      	mov	r1, r0
 801bbb6:	2800      	cmp	r0, #0
 801bbb8:	f43f ad4b 	beq.w	801b652 <calc_new_geometry+0x202>
 801bbbc:	e70f      	b.n	801b9de <calc_new_geometry+0x58e>
 801bbbe:	900f      	str	r0, [sp, #60]	@ 0x3c
 801bbc0:	ed91 5a00 	vldr	s10, [r1]
 801bbc4:	ed8d 5a15 	vstr	s10, [sp, #84]	@ 0x54
 801bbc8:	1c98      	adds	r0, r3, #2
 801bbca:	900f      	str	r0, [sp, #60]	@ 0x3c
 801bbcc:	edd1 5a01 	vldr	s11, [r1, #4]
 801bbd0:	edcd 5a16 	vstr	s11, [sp, #88]	@ 0x58
 801bbd4:	1cd8      	adds	r0, r3, #3
 801bbd6:	900f      	str	r0, [sp, #60]	@ 0x3c
 801bbd8:	ed91 7a02 	vldr	s14, [r1, #8]
 801bbdc:	ed8d 7a17 	vstr	s14, [sp, #92]	@ 0x5c
 801bbe0:	3304      	adds	r3, #4
 801bbe2:	930f      	str	r3, [sp, #60]	@ 0x3c
 801bbe4:	edd1 7a03 	vldr	s15, [r1, #12]
 801bbe8:	edcd 7a18 	vstr	s15, [sp, #96]	@ 0x60
 801bbec:	f1b9 0f00 	cmp.w	r9, #0
 801bbf0:	d013      	beq.n	801bc1a <calc_new_geometry+0x7ca>
 801bbf2:	ed9d 6a19 	vldr	s12, [sp, #100]	@ 0x64
 801bbf6:	eddd 6a1a 	vldr	s13, [sp, #104]	@ 0x68
 801bbfa:	ee35 5a06 	vadd.f32	s10, s10, s12
 801bbfe:	ee37 7a06 	vadd.f32	s14, s14, s12
 801bc02:	ee75 5aa6 	vadd.f32	s11, s11, s13
 801bc06:	ee77 7aa6 	vadd.f32	s15, s15, s13
 801bc0a:	ed8d 5a15 	vstr	s10, [sp, #84]	@ 0x54
 801bc0e:	ed8d 7a17 	vstr	s14, [sp, #92]	@ 0x5c
 801bc12:	edcd 5a16 	vstr	s11, [sp, #88]	@ 0x58
 801bc16:	edcd 7a18 	vstr	s15, [sp, #96]	@ 0x60
 801bc1a:	f8df 8114 	ldr.w	r8, [pc, #276]	@ 801bd30 <calc_new_geometry+0x8e0>
 801bc1e:	ed8d 7a1b 	vstr	s14, [sp, #108]	@ 0x6c
 801bc22:	f898 1000 	ldrb.w	r1, [r8]
 801bc26:	edcd 7a1c 	vstr	s15, [sp, #112]	@ 0x70
 801bc2a:	2900      	cmp	r1, #0
 801bc2c:	d057      	beq.n	801bcde <calc_new_geometry+0x88e>
 801bc2e:	493f      	ldr	r1, [pc, #252]	@ (801bd2c <calc_new_geometry+0x8dc>)
 801bc30:	1c58      	adds	r0, r3, #1
 801bc32:	ed91 6a03 	vldr	s12, [r1, #12]
 801bc36:	edd1 6a04 	vldr	s13, [r1, #16]
 801bc3a:	ed91 4a00 	vldr	s8, [r1]
 801bc3e:	edd1 4a01 	vldr	s9, [r1, #4]
 801bc42:	ee24 3a05 	vmul.f32	s6, s8, s10
 801bc46:	ee65 3aa4 	vmul.f32	s7, s11, s9
 801bc4a:	ee24 4a07 	vmul.f32	s8, s8, s14
 801bc4e:	ee64 4aa7 	vmul.f32	s9, s9, s15
 801bc52:	ee26 5a05 	vmul.f32	s10, s12, s10
 801bc56:	ee66 7aa7 	vmul.f32	s15, s13, s15
 801bc5a:	ee26 7a07 	vmul.f32	s14, s12, s14
 801bc5e:	ee65 5aa6 	vmul.f32	s11, s11, s13
 801bc62:	ed91 6a02 	vldr	s12, [r1, #8]
 801bc66:	ee75 6a25 	vadd.f32	s13, s10, s11
 801bc6a:	ee37 7a27 	vadd.f32	s14, s14, s15
 801bc6e:	ee73 3a23 	vadd.f32	s7, s6, s7
 801bc72:	edd1 7a05 	vldr	s15, [r1, #20]
 801bc76:	ee74 4a24 	vadd.f32	s9, s8, s9
 801bc7a:	ee73 5a86 	vadd.f32	s11, s7, s12
 801bc7e:	ee76 6aa7 	vadd.f32	s13, s13, s15
 801bc82:	ee34 6a86 	vadd.f32	s12, s9, s12
 801bc86:	ee77 7a27 	vadd.f32	s15, s14, s15
 801bc8a:	edcd 5a15 	vstr	s11, [sp, #84]	@ 0x54
 801bc8e:	ed8d 6a17 	vstr	s12, [sp, #92]	@ 0x5c
 801bc92:	edcd 6a16 	vstr	s13, [sp, #88]	@ 0x58
 801bc96:	edcd 7a18 	vstr	s15, [sp, #96]	@ 0x60
 801bc9a:	ea4f 0c83 	mov.w	ip, r3, lsl #2
 801bc9e:	f10c 0104 	add.w	r1, ip, #4
 801bca2:	4411      	add	r1, r2
 801bca4:	3302      	adds	r3, #2
 801bca6:	4462      	add	r2, ip
 801bca8:	900f      	str	r0, [sp, #60]	@ 0x3c
 801bcaa:	f1b9 0f00 	cmp.w	r9, #0
 801bcae:	f000 8187 	beq.w	801bfc0 <calc_new_geometry+0xb70>
 801bcb2:	ed92 7a00 	vldr	s14, [r2]
 801bcb6:	eddd 7a19 	vldr	s15, [sp, #100]	@ 0x64
 801bcba:	ee77 7a27 	vadd.f32	s15, s14, s15
 801bcbe:	edcd 7a13 	vstr	s15, [sp, #76]	@ 0x4c
 801bcc2:	930f      	str	r3, [sp, #60]	@ 0x3c
 801bcc4:	edd1 6a00 	vldr	s13, [r1]
 801bcc8:	ed9d 7a1a 	vldr	s14, [sp, #104]	@ 0x68
 801bccc:	ee36 7a87 	vadd.f32	s14, s13, s14
 801bcd0:	f89d 2038 	ldrb.w	r2, [sp, #56]	@ 0x38
 801bcd4:	ed8d 7a14 	vstr	s14, [sp, #80]	@ 0x50
 801bcd8:	e460      	b.n	801b59c <calc_new_geometry+0x14c>
 801bcda:	f8df 8054 	ldr.w	r8, [pc, #84]	@ 801bd30 <calc_new_geometry+0x8e0>
 801bcde:	1c58      	adds	r0, r3, #1
 801bce0:	ea4f 0c83 	mov.w	ip, r3, lsl #2
 801bce4:	e7db      	b.n	801bc9e <calc_new_geometry+0x84e>
 801bce6:	2e03      	cmp	r6, #3
 801bce8:	f000 80be 	beq.w	801be68 <calc_new_geometry+0xa18>
 801bcec:	2e0a      	cmp	r6, #10
 801bcee:	f040 8478 	bne.w	801c5e2 <calc_new_geometry+0x1192>
 801bcf2:	9b03      	ldr	r3, [sp, #12]
 801bcf4:	f8cd 803c 	str.w	r8, [sp, #60]	@ 0x3c
 801bcf8:	edd3 7a00 	vldr	s15, [r3]
 801bcfc:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 801bd00:	f89d 3038 	ldrb.w	r3, [sp, #56]	@ 0x38
 801bd04:	ee17 8a90 	vmov	r8, s15
 801bd08:	2b01      	cmp	r3, #1
 801bd0a:	f000 839a 	beq.w	801c442 <calc_new_geometry+0xff2>
 801bd0e:	eb08 78d8 	add.w	r8, r8, r8, lsr #31
 801bd12:	ea4f 0368 	mov.w	r3, r8, asr #1
 801bd16:	2b00      	cmp	r3, #0
 801bd18:	9304      	str	r3, [sp, #16]
 801bd1a:	f77f ae7a 	ble.w	801ba12 <calc_new_geometry+0x5c2>
 801bd1e:	2200      	movs	r2, #0
 801bd20:	9605      	str	r6, [sp, #20]
 801bd22:	f8df 800c 	ldr.w	r8, [pc, #12]	@ 801bd30 <calc_new_geometry+0x8e0>
 801bd26:	4b01      	ldr	r3, [pc, #4]	@ (801bd2c <calc_new_geometry+0x8dc>)
 801bd28:	4616      	mov	r6, r2
 801bd2a:	e056      	b.n	801bdda <calc_new_geometry+0x98a>
 801bd2c:	20083320 	.word	0x20083320
 801bd30:	2008331c 	.word	0x2008331c
 801bd34:	3727c5ac 	.word	0x3727c5ac
 801bd38:	eddd 7a19 	vldr	s15, [sp, #100]	@ 0x64
 801bd3c:	ee37 7a27 	vadd.f32	s14, s14, s15
 801bd40:	ed8d 7a13 	vstr	s14, [sp, #76]	@ 0x4c
 801bd44:	910f      	str	r1, [sp, #60]	@ 0x3c
 801bd46:	eddc 6a00 	vldr	s13, [ip]
 801bd4a:	eddd 7a1a 	vldr	s15, [sp, #104]	@ 0x68
 801bd4e:	ee76 7aa7 	vadd.f32	s15, s13, s15
 801bd52:	edcd 7a14 	vstr	s15, [sp, #80]	@ 0x50
 801bd56:	f898 1000 	ldrb.w	r1, [r8]
 801bd5a:	3601      	adds	r6, #1
 801bd5c:	ed8d 7a19 	vstr	s14, [sp, #100]	@ 0x64
 801bd60:	edcd 7a1a 	vstr	s15, [sp, #104]	@ 0x68
 801bd64:	f88d 407c 	strb.w	r4, [sp, #124]	@ 0x7c
 801bd68:	b1f9      	cbz	r1, 801bdaa <calc_new_geometry+0x95a>
 801bd6a:	ed93 6a03 	vldr	s12, [r3, #12]
 801bd6e:	edd3 6a04 	vldr	s13, [r3, #16]
 801bd72:	ed93 5a00 	vldr	s10, [r3]
 801bd76:	edd3 5a01 	vldr	s11, [r3, #4]
 801bd7a:	ee27 5a05 	vmul.f32	s10, s14, s10
 801bd7e:	ee67 5aa5 	vmul.f32	s11, s15, s11
 801bd82:	ee27 7a06 	vmul.f32	s14, s14, s12
 801bd86:	ee67 7aa6 	vmul.f32	s15, s15, s13
 801bd8a:	ee75 5a25 	vadd.f32	s11, s10, s11
 801bd8e:	ee77 7a27 	vadd.f32	s15, s14, s15
 801bd92:	ed93 6a02 	vldr	s12, [r3, #8]
 801bd96:	edd3 6a05 	vldr	s13, [r3, #20]
 801bd9a:	ee35 7a86 	vadd.f32	s14, s11, s12
 801bd9e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 801bda2:	ed8d 7a13 	vstr	s14, [sp, #76]	@ 0x4c
 801bda6:	edcd 7a14 	vstr	s15, [sp, #80]	@ 0x50
 801bdaa:	ed9d 1a13 	vldr	s2, [sp, #76]	@ 0x4c
 801bdae:	eddd 1a14 	vldr	s3, [sp, #80]	@ 0x50
 801bdb2:	ed9d 0a11 	vldr	s0, [sp, #68]	@ 0x44
 801bdb6:	eddd 0a12 	vldr	s1, [sp, #72]	@ 0x48
 801bdba:	9303      	str	r3, [sp, #12]
 801bdbc:	f7fd fbe6 	bl	801958c <calc_line_geometry>
 801bdc0:	9b03      	ldr	r3, [sp, #12]
 801bdc2:	4601      	mov	r1, r0
 801bdc4:	2800      	cmp	r0, #0
 801bdc6:	f040 829f 	bne.w	801c308 <calc_new_geometry+0xeb8>
 801bdca:	e897 0003 	ldmia.w	r7, {r0, r1}
 801bdce:	9a04      	ldr	r2, [sp, #16]
 801bdd0:	e885 0003 	stmia.w	r5, {r0, r1}
 801bdd4:	4296      	cmp	r6, r2
 801bdd6:	f43f ae1b 	beq.w	801ba10 <calc_new_geometry+0x5c0>
 801bdda:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 801bddc:	f8da 200c 	ldr.w	r2, [sl, #12]
 801bde0:	0088      	lsls	r0, r1, #2
 801bde2:	f100 0c04 	add.w	ip, r0, #4
 801bde6:	4494      	add	ip, r2
 801bde8:	4410      	add	r0, r2
 801bdea:	1c4a      	adds	r2, r1, #1
 801bdec:	920f      	str	r2, [sp, #60]	@ 0x3c
 801bdee:	3102      	adds	r1, #2
 801bdf0:	ed90 7a00 	vldr	s14, [r0]
 801bdf4:	f1b9 0f00 	cmp.w	r9, #0
 801bdf8:	d19e      	bne.n	801bd38 <calc_new_geometry+0x8e8>
 801bdfa:	ed8d 7a13 	vstr	s14, [sp, #76]	@ 0x4c
 801bdfe:	910f      	str	r1, [sp, #60]	@ 0x3c
 801be00:	eddc 7a00 	vldr	s15, [ip]
 801be04:	edcd 7a14 	vstr	s15, [sp, #80]	@ 0x50
 801be08:	e7a5      	b.n	801bd56 <calc_new_geometry+0x906>
 801be0a:	9b02      	ldr	r3, [sp, #8]
 801be0c:	2b09      	cmp	r3, #9
 801be0e:	f47f ac20 	bne.w	801b652 <calc_new_geometry+0x202>
 801be12:	ed9d 8a1b 	vldr	s16, [sp, #108]	@ 0x6c
 801be16:	eddd ba19 	vldr	s23, [sp, #100]	@ 0x64
 801be1a:	ee78 6a6b 	vsub.f32	s13, s16, s23
 801be1e:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 801be22:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801be26:	eeb5 8ac0 	vcmpe.f32	s16, #0.0
 801be2a:	bf48      	it	mi
 801be2c:	eef1 6a66 	vnegmi.f32	s13, s13
 801be30:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801be34:	eef5 bac0 	vcmpe.f32	s23, #0.0
 801be38:	bf4c      	ite	mi
 801be3a:	eeb1 7a48 	vnegmi.f32	s14, s16
 801be3e:	eeb0 7a48 	vmovpl.f32	s14, s16
 801be42:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801be46:	eddd 8a1c 	vldr	s17, [sp, #112]	@ 0x70
 801be4a:	ed9d ca1a 	vldr	s24, [sp, #104]	@ 0x68
 801be4e:	f100 80e4 	bmi.w	801c01a <calc_new_geometry+0xbca>
 801be52:	eef4 bac7 	vcmpe.f32	s23, s14
 801be56:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801be5a:	f300 80e6 	bgt.w	801c02a <calc_new_geometry+0xbda>
 801be5e:	ed5f 7a4b 	vldr	s15, [pc, #-300]	@ 801bd34 <calc_new_geometry+0x8e4>
 801be62:	ee6b 7aa7 	vmul.f32	s15, s23, s15
 801be66:	e0eb      	b.n	801c040 <calc_new_geometry+0xbf0>
 801be68:	9b03      	ldr	r3, [sp, #12]
 801be6a:	f8cd 803c 	str.w	r8, [sp, #60]	@ 0x3c
 801be6e:	ed9d 7a1a 	vldr	s14, [sp, #104]	@ 0x68
 801be72:	f89d 2038 	ldrb.w	r2, [sp, #56]	@ 0x38
 801be76:	edd3 7a00 	vldr	s15, [r3]
 801be7a:	f1b9 0f00 	cmp.w	r9, #0
 801be7e:	f000 8097 	beq.w	801bfb0 <calc_new_geometry+0xb60>
 801be82:	eddd 6a19 	vldr	s13, [sp, #100]	@ 0x64
 801be86:	ee76 7aa7 	vadd.f32	s15, s13, s15
 801be8a:	ed8d 7a14 	vstr	s14, [sp, #80]	@ 0x50
 801be8e:	f8df 841c 	ldr.w	r8, [pc, #1052]	@ 801c2ac <calc_new_geometry+0xe5c>
 801be92:	edcd 7a13 	vstr	s15, [sp, #76]	@ 0x4c
 801be96:	f7ff bb81 	b.w	801b59c <calc_new_geometry+0x14c>
 801be9a:	900f      	str	r0, [sp, #60]	@ 0x3c
 801be9c:	ed91 7a00 	vldr	s14, [r1]
 801bea0:	ed8d 7a15 	vstr	s14, [sp, #84]	@ 0x54
 801bea4:	3302      	adds	r3, #2
 801bea6:	930f      	str	r3, [sp, #60]	@ 0x3c
 801bea8:	edd1 7a01 	vldr	s15, [r1, #4]
 801beac:	edcd 7a16 	vstr	s15, [sp, #88]	@ 0x58
 801beb0:	f1b9 0f00 	cmp.w	r9, #0
 801beb4:	d00b      	beq.n	801bece <calc_new_geometry+0xa7e>
 801beb6:	ed9d 6a19 	vldr	s12, [sp, #100]	@ 0x64
 801beba:	eddd 6a1a 	vldr	s13, [sp, #104]	@ 0x68
 801bebe:	ee37 7a06 	vadd.f32	s14, s14, s12
 801bec2:	ee77 7aa6 	vadd.f32	s15, s15, s13
 801bec6:	ed8d 7a15 	vstr	s14, [sp, #84]	@ 0x54
 801beca:	edcd 7a16 	vstr	s15, [sp, #88]	@ 0x58
 801bece:	f8df 83dc 	ldr.w	r8, [pc, #988]	@ 801c2ac <calc_new_geometry+0xe5c>
 801bed2:	ed8d 7a1b 	vstr	s14, [sp, #108]	@ 0x6c
 801bed6:	f898 1000 	ldrb.w	r1, [r8]
 801beda:	edcd 7a1c 	vstr	s15, [sp, #112]	@ 0x70
 801bede:	2900      	cmp	r1, #0
 801bee0:	f43f aefd 	beq.w	801bcde <calc_new_geometry+0x88e>
 801bee4:	49ef      	ldr	r1, [pc, #956]	@ (801c2a4 <calc_new_geometry+0xe54>)
 801bee6:	1c58      	adds	r0, r3, #1
 801bee8:	ed91 6a03 	vldr	s12, [r1, #12]
 801beec:	edd1 6a04 	vldr	s13, [r1, #16]
 801bef0:	ed91 5a00 	vldr	s10, [r1]
 801bef4:	edd1 5a01 	vldr	s11, [r1, #4]
 801bef8:	ee27 5a05 	vmul.f32	s10, s14, s10
 801befc:	ee67 5aa5 	vmul.f32	s11, s15, s11
 801bf00:	ee27 7a06 	vmul.f32	s14, s14, s12
 801bf04:	ee67 7aa6 	vmul.f32	s15, s15, s13
 801bf08:	ee35 6a25 	vadd.f32	s12, s10, s11
 801bf0c:	ee37 7a27 	vadd.f32	s14, s14, s15
 801bf10:	edd1 6a02 	vldr	s13, [r1, #8]
 801bf14:	edd1 7a05 	vldr	s15, [r1, #20]
 801bf18:	ee76 6a26 	vadd.f32	s13, s12, s13
 801bf1c:	ee77 7a27 	vadd.f32	s15, s14, s15
 801bf20:	edcd 6a15 	vstr	s13, [sp, #84]	@ 0x54
 801bf24:	edcd 7a16 	vstr	s15, [sp, #88]	@ 0x58
 801bf28:	ea4f 0c83 	mov.w	ip, r3, lsl #2
 801bf2c:	e6b7      	b.n	801bc9e <calc_new_geometry+0x84e>
 801bf2e:	f8df 837c 	ldr.w	r8, [pc, #892]	@ 801c2ac <calc_new_geometry+0xe5c>
 801bf32:	ed8d 7a14 	vstr	s14, [sp, #80]	@ 0x50
 801bf36:	f7ff bb31 	b.w	801b59c <calc_new_geometry+0x14c>
 801bf3a:	f1ae 0e05 	sub.w	lr, lr, #5
 801bf3e:	f1be 0f03 	cmp.w	lr, #3
 801bf42:	ed9d 7a19 	vldr	s14, [sp, #100]	@ 0x64
 801bf46:	eddd 7a1a 	vldr	s15, [sp, #104]	@ 0x68
 801bf4a:	f240 8206 	bls.w	801c35a <calc_new_geometry+0xf0a>
 801bf4e:	f8df 835c 	ldr.w	r8, [pc, #860]	@ 801c2ac <calc_new_geometry+0xe5c>
 801bf52:	edcd 7a16 	vstr	s15, [sp, #88]	@ 0x58
 801bf56:	f898 1000 	ldrb.w	r1, [r8]
 801bf5a:	ed8d 7a15 	vstr	s14, [sp, #84]	@ 0x54
 801bf5e:	ed8d 7a1b 	vstr	s14, [sp, #108]	@ 0x6c
 801bf62:	edcd 7a1c 	vstr	s15, [sp, #112]	@ 0x70
 801bf66:	2900      	cmp	r1, #0
 801bf68:	f43f ae99 	beq.w	801bc9e <calc_new_geometry+0x84e>
 801bf6c:	49cd      	ldr	r1, [pc, #820]	@ (801c2a4 <calc_new_geometry+0xe54>)
 801bf6e:	ed91 6a03 	vldr	s12, [r1, #12]
 801bf72:	edd1 6a04 	vldr	s13, [r1, #16]
 801bf76:	ed91 5a00 	vldr	s10, [r1]
 801bf7a:	edd1 5a01 	vldr	s11, [r1, #4]
 801bf7e:	ee27 5a05 	vmul.f32	s10, s14, s10
 801bf82:	ee67 5aa5 	vmul.f32	s11, s15, s11
 801bf86:	ee27 7a06 	vmul.f32	s14, s14, s12
 801bf8a:	ee67 7aa6 	vmul.f32	s15, s15, s13
 801bf8e:	ee35 6a25 	vadd.f32	s12, s10, s11
 801bf92:	ee37 7a27 	vadd.f32	s14, s14, s15
 801bf96:	edd1 6a02 	vldr	s13, [r1, #8]
 801bf9a:	edd1 7a05 	vldr	s15, [r1, #20]
 801bf9e:	ee76 6a26 	vadd.f32	s13, s12, s13
 801bfa2:	ee77 7a27 	vadd.f32	s15, s14, s15
 801bfa6:	edcd 6a15 	vstr	s13, [sp, #84]	@ 0x54
 801bfaa:	edcd 7a16 	vstr	s15, [sp, #88]	@ 0x58
 801bfae:	e676      	b.n	801bc9e <calc_new_geometry+0x84e>
 801bfb0:	f8df 82f8 	ldr.w	r8, [pc, #760]	@ 801c2ac <calc_new_geometry+0xe5c>
 801bfb4:	edcd 7a13 	vstr	s15, [sp, #76]	@ 0x4c
 801bfb8:	ed8d 7a14 	vstr	s14, [sp, #80]	@ 0x50
 801bfbc:	f7ff baee 	b.w	801b59c <calc_new_geometry+0x14c>
 801bfc0:	edd2 7a00 	vldr	s15, [r2]
 801bfc4:	edcd 7a13 	vstr	s15, [sp, #76]	@ 0x4c
 801bfc8:	930f      	str	r3, [sp, #60]	@ 0x3c
 801bfca:	ed91 7a00 	vldr	s14, [r1]
 801bfce:	f89d 2038 	ldrb.w	r2, [sp, #56]	@ 0x38
 801bfd2:	ed8d 7a14 	vstr	s14, [sp, #80]	@ 0x50
 801bfd6:	f7ff bae1 	b.w	801b59c <calc_new_geometry+0x14c>
 801bfda:	ed9d 7a1d 	vldr	s14, [sp, #116]	@ 0x74
 801bfde:	eddd 7a1e 	vldr	s15, [sp, #120]	@ 0x78
 801bfe2:	e595      	b.n	801bb10 <calc_new_geometry+0x6c0>
 801bfe4:	eef4 cae6 	vcmpe.f32	s25, s13
 801bfe8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801bfec:	f73f ab9e 	bgt.w	801b72c <calc_new_geometry+0x2dc>
 801bff0:	eeb4 dae6 	vcmpe.f32	s26, s13
 801bff4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801bff8:	f73f ab98 	bgt.w	801b72c <calc_new_geometry+0x2dc>
 801bffc:	eef4 cac6 	vcmpe.f32	s25, s12
 801c000:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801c004:	f53f ab92 	bmi.w	801b72c <calc_new_geometry+0x2dc>
 801c008:	eeb4 dac6 	vcmpe.f32	s26, s12
 801c00c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801c010:	bf54      	ite	pl
 801c012:	2201      	movpl	r2, #1
 801c014:	2200      	movmi	r2, #0
 801c016:	f7ff bb8a 	b.w	801b72e <calc_new_geometry+0x2de>
 801c01a:	eef1 7a6b 	vneg.f32	s15, s23
 801c01e:	eef4 7ac7 	vcmpe.f32	s15, s14
 801c022:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801c026:	f340 8202 	ble.w	801c42e <calc_new_geometry+0xfde>
 801c02a:	eeb5 8ac0 	vcmpe.f32	s16, #0.0
 801c02e:	eddf 7aa0 	vldr	s15, [pc, #640]	@ 801c2b0 <calc_new_geometry+0xe60>
 801c032:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801c036:	bf4c      	ite	mi
 801c038:	ee68 7a67 	vnmulmi.f32	s15, s16, s15
 801c03c:	ee68 7a27 	vmulpl.f32	s15, s16, s15
 801c040:	eef4 6ae7 	vcmpe.f32	s13, s15
 801c044:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801c048:	d82e      	bhi.n	801c0a8 <calc_new_geometry+0xc58>
 801c04a:	ee78 6acc 	vsub.f32	s13, s17, s24
 801c04e:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 801c052:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801c056:	eef5 8ac0 	vcmpe.f32	s17, #0.0
 801c05a:	bf48      	it	mi
 801c05c:	eef1 6a66 	vnegmi.f32	s13, s13
 801c060:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801c064:	eeb5 cac0 	vcmpe.f32	s24, #0.0
 801c068:	bf4c      	ite	mi
 801c06a:	eeb1 7a68 	vnegmi.f32	s14, s17
 801c06e:	eeb0 7a68 	vmovpl.f32	s14, s17
 801c072:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801c076:	f100 81f1 	bmi.w	801c45c <calc_new_geometry+0x100c>
 801c07a:	eeb4 cac7 	vcmpe.f32	s24, s14
 801c07e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801c082:	f340 81d9 	ble.w	801c438 <calc_new_geometry+0xfe8>
 801c086:	eef5 8ac0 	vcmpe.f32	s17, #0.0
 801c08a:	eddf 7a89 	vldr	s15, [pc, #548]	@ 801c2b0 <calc_new_geometry+0xe60>
 801c08e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801c092:	bf4c      	ite	mi
 801c094:	ee68 7ae7 	vnmulmi.f32	s15, s17, s15
 801c098:	ee68 7aa7 	vmulpl.f32	s15, s17, s15
 801c09c:	eef4 6ae7 	vcmpe.f32	s13, s15
 801c0a0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801c0a4:	f67f aad5 	bls.w	801b652 <calc_new_geometry+0x202>
 801c0a8:	eddd ca15 	vldr	s25, [sp, #84]	@ 0x54
 801c0ac:	eef5 cac0 	vcmpe.f32	s25, #0.0
 801c0b0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801c0b4:	f100 815e 	bmi.w	801c374 <calc_new_geometry+0xf24>
 801c0b8:	eddf 7a7d 	vldr	s15, [pc, #500]	@ 801c2b0 <calc_new_geometry+0xe60>
 801c0bc:	eef4 cae7 	vcmpe.f32	s25, s15
 801c0c0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801c0c4:	f240 815e 	bls.w	801c384 <calc_new_geometry+0xf34>
 801c0c8:	eddd da16 	vldr	s27, [sp, #88]	@ 0x58
 801c0cc:	eef5 dac0 	vcmpe.f32	s27, #0.0
 801c0d0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801c0d4:	f100 81cf 	bmi.w	801c476 <calc_new_geometry+0x1026>
 801c0d8:	eddf 7a75 	vldr	s15, [pc, #468]	@ 801c2b0 <calc_new_geometry+0xe60>
 801c0dc:	eef4 dae7 	vcmpe.f32	s27, s15
 801c0e0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801c0e4:	f240 814e 	bls.w	801c384 <calc_new_geometry+0xf34>
 801c0e8:	eef5 cac0 	vcmpe.f32	s25, #0.0
 801c0ec:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801c0f0:	f89d 403b 	ldrb.w	r4, [sp, #59]	@ 0x3b
 801c0f4:	f3c4 1580 	ubfx	r5, r4, #6, #1
 801c0f8:	f3c4 1440 	ubfx	r4, r4, #5, #1
 801c0fc:	f100 81d1 	bmi.w	801c4a2 <calc_new_geometry+0x1052>
 801c100:	eef5 dac0 	vcmpe.f32	s27, #0.0
 801c104:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801c108:	f100 81c8 	bmi.w	801c49c <calc_new_geometry+0x104c>
 801c10c:	ed9d ea17 	vldr	s28, [sp, #92]	@ 0x5c
 801c110:	ee2e ea0b 	vmul.f32	s28, s28, s22
 801c114:	eeb0 0a4e 	vmov.f32	s0, s28
 801c118:	f015 fabc 	bl	8031694 <cosf>
 801c11c:	eeb0 da40 	vmov.f32	s26, s0
 801c120:	eeb0 0a4e 	vmov.f32	s0, s28
 801c124:	f015 fb02 	bl	803172c <sinf>
 801c128:	ee28 5a0d 	vmul.f32	s10, s16, s26
 801c12c:	ee68 5a80 	vmul.f32	s11, s17, s0
 801c130:	ee2b 7ac0 	vnmul.f32	s14, s23, s0
 801c134:	ee6c 6a00 	vmul.f32	s13, s24, s0
 801c138:	ee6c 7a0d 	vmul.f32	s15, s24, s26
 801c13c:	ee28 8a40 	vnmul.f32	s16, s16, s0
 801c140:	ee68 8a8d 	vmul.f32	s17, s17, s26
 801c144:	ee2b 6a8d 	vmul.f32	s12, s23, s26
 801c148:	ee35 ca25 	vadd.f32	s24, s10, s11
 801c14c:	ee38 fa28 	vadd.f32	s30, s16, s17
 801c150:	ee76 ba26 	vadd.f32	s23, s12, s13
 801c154:	ee37 8a27 	vadd.f32	s16, s14, s15
 801c158:	ee8c 6a2c 	vdiv.f32	s12, s24, s25
 801c15c:	eecb 5aac 	vdiv.f32	s11, s23, s25
 801c160:	eecf 6a2d 	vdiv.f32	s13, s30, s27
 801c164:	ee88 5a2d 	vdiv.f32	s10, s16, s27
 801c168:	ee76 8a65 	vsub.f32	s17, s12, s11
 801c16c:	ee76 eac5 	vsub.f32	s29, s13, s10
 801c170:	ee28 7aa8 	vmul.f32	s14, s17, s17
 801c174:	ee6e 7aae 	vmul.f32	s15, s29, s29
 801c178:	ee77 7a27 	vadd.f32	s15, s14, s15
 801c17c:	eef5 7a40 	vcmp.f32	s15, #0.0
 801c180:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 801c184:	ee76 4a25 	vadd.f32	s9, s12, s11
 801c188:	ee76 fa85 	vadd.f32	s31, s13, s10
 801c18c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801c190:	eeb0 ea40 	vmov.f32	s28, s0
 801c194:	ee64 4a87 	vmul.f32	s9, s9, s14
 801c198:	ee6f fa87 	vmul.f32	s31, s31, s14
 801c19c:	f000 821c 	beq.w	801c5d8 <calc_new_geometry+0x1188>
 801c1a0:	eeb7 4a00 	vmov.f32	s8, #112	@ 0x3f800000  1.0
 801c1a4:	eeb5 7a00 	vmov.f32	s14, #80	@ 0x3e800000  0.250
 801c1a8:	ee84 0a27 	vdiv.f32	s0, s8, s15
 801c1ac:	ee30 0a47 	vsub.f32	s0, s0, s14
 801c1b0:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 801c1b4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801c1b8:	f100 82c7 	bmi.w	801c74a <calc_new_geometry+0x12fa>
 801c1bc:	eeb5 0a40 	vcmp.f32	s0, #0.0
 801c1c0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801c1c4:	eeb1 8ac0 	vsqrt.f32	s16, s0
 801c1c8:	f100 82e8 	bmi.w	801c79c <calc_new_geometry+0x134c>
 801c1cc:	ee28 fa28 	vmul.f32	s30, s16, s17
 801c1d0:	ee68 ea2e 	vmul.f32	s29, s16, s29
 801c1d4:	ee3f cacf 	vsub.f32	s24, s31, s30
 801c1d8:	ee7e baa4 	vadd.f32	s23, s29, s9
 801c1dc:	ee36 0acc 	vsub.f32	s0, s13, s24
 801c1e0:	ee76 0a6b 	vsub.f32	s1, s12, s23
 801c1e4:	edcd 4a06 	vstr	s9, [sp, #24]
 801c1e8:	edcd 6a05 	vstr	s13, [sp, #20]
 801c1ec:	ed8d 6a04 	vstr	s12, [sp, #16]
 801c1f0:	ed8d 5a07 	vstr	s10, [sp, #28]
 801c1f4:	edcd 5a02 	vstr	s11, [sp, #8]
 801c1f8:	f015 f938 	bl	803146c <atan2f>
 801c1fc:	eddd 5a02 	vldr	s11, [sp, #8]
 801c200:	ed9d 5a07 	vldr	s10, [sp, #28]
 801c204:	eeb0 8a40 	vmov.f32	s16, s0
 801c208:	ee75 0aeb 	vsub.f32	s1, s11, s23
 801c20c:	ee35 0a4c 	vsub.f32	s0, s10, s24
 801c210:	edcd 5a03 	vstr	s11, [sp, #12]
 801c214:	ed8d 5a02 	vstr	s10, [sp, #8]
 801c218:	f015 f928 	bl	803146c <atan2f>
 801c21c:	ee28 8a0a 	vmul.f32	s16, s16, s20
 801c220:	ee60 8a0a 	vmul.f32	s17, s0, s20
 801c224:	ee78 7ac8 	vsub.f32	s15, s17, s16
 801c228:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801c22c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801c230:	bf44      	itt	mi
 801c232:	ed9f 7a1d 	vldrmi	s14, [pc, #116]	@ 801c2a8 <calc_new_geometry+0xe58>
 801c236:	ee77 7a87 	vaddmi.f32	s15, s15, s14
 801c23a:	eef4 7aea 	vcmpe.f32	s15, s21
 801c23e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801c242:	ed9d 5a02 	vldr	s10, [sp, #8]
 801c246:	eddd 5a03 	vldr	s11, [sp, #12]
 801c24a:	ed9d 6a04 	vldr	s12, [sp, #16]
 801c24e:	eddd 6a05 	vldr	s13, [sp, #20]
 801c252:	eddd 4a06 	vldr	s9, [sp, #24]
 801c256:	f140 819e 	bpl.w	801c596 <calc_new_geometry+0x1146>
 801c25a:	42a5      	cmp	r5, r4
 801c25c:	f000 8252 	beq.w	801c704 <calc_new_geometry+0x12b4>
 801c260:	ee6c 7a2d 	vmul.f32	s15, s24, s27
 801c264:	ee6b baac 	vmul.f32	s23, s23, s25
 801c268:	ee2d 7a2b 	vmul.f32	s14, s26, s23
 801c26c:	ee6e ba2b 	vmul.f32	s23, s28, s23
 801c270:	ee2e ea27 	vmul.f32	s28, s28, s15
 801c274:	ee6d 7a27 	vmul.f32	s15, s26, s15
 801c278:	ee37 ea4e 	vsub.f32	s28, s14, s28
 801c27c:	ee3b caa7 	vadd.f32	s24, s23, s15
 801c280:	eeb4 8ae8 	vcmpe.f32	s16, s17
 801c284:	2d00      	cmp	r5, #0
 801c286:	f000 8148 	beq.w	801c51a <calc_new_geometry+0x10ca>
 801c28a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801c28e:	f300 8236 	bgt.w	801c6fe <calc_new_geometry+0x12ae>
 801c292:	eeb4 8ae8 	vcmpe.f32	s16, s17
 801c296:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801c29a:	bf48      	it	mi
 801c29c:	2101      	movmi	r1, #1
 801c29e:	d415      	bmi.n	801c2cc <calc_new_geometry+0xe7c>
 801c2a0:	f7ff b9d7 	b.w	801b652 <calc_new_geometry+0x202>
 801c2a4:	20083320 	.word	0x20083320
 801c2a8:	43b40000 	.word	0x43b40000
 801c2ac:	2008331c 	.word	0x2008331c
 801c2b0:	3727c5ac 	.word	0x3727c5ac
 801c2b4:	b727c5ac 	.word	0xb727c5ac
 801c2b8:	00000000 	.word	0x00000000
 801c2bc:	eef4 bae8 	vcmpe.f32	s23, s17
 801c2c0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801c2c4:	eeb0 8a6b 	vmov.f32	s16, s23
 801c2c8:	f57f a9c3 	bpl.w	801b652 <calc_new_geometry+0x202>
 801c2cc:	ee78 ba29 	vadd.f32	s23, s16, s19
 801c2d0:	eef4 bae8 	vcmpe.f32	s23, s17
 801c2d4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801c2d8:	bfa4      	itt	ge
 801c2da:	3102      	addge	r1, #2
 801c2dc:	b2c9      	uxtbge	r1, r1
 801c2de:	eeb0 0a48 	vmov.f32	s0, s16
 801c2e2:	eef0 2a6d 	vmov.f32	s5, s27
 801c2e6:	eeb0 2a6c 	vmov.f32	s4, s25
 801c2ea:	eef0 1a4c 	vmov.f32	s3, s24
 801c2ee:	eeb0 1a4e 	vmov.f32	s2, s28
 801c2f2:	a80e      	add	r0, sp, #56	@ 0x38
 801c2f4:	bf54      	ite	pl
 801c2f6:	eef0 0a68 	vmovpl.f32	s1, s17
 801c2fa:	eef0 0a6b 	vmovmi.f32	s1, s23
 801c2fe:	f7fe ff27 	bl	801b150 <arc_to_cubic>
 801c302:	4601      	mov	r1, r0
 801c304:	2800      	cmp	r0, #0
 801c306:	d0d9      	beq.n	801c2bc <calc_new_geometry+0xe6c>
 801c308:	9101      	str	r1, [sp, #4]
 801c30a:	f000 fcf3 	bl	801ccf4 <nema_vg_set_error>
 801c30e:	9901      	ldr	r1, [sp, #4]
 801c310:	4608      	mov	r0, r1
 801c312:	f7ff bb64 	b.w	801b9de <calc_new_geometry+0x58e>
 801c316:	f8cd 803c 	str.w	r8, [sp, #60]	@ 0x3c
 801c31a:	f8d1 e000 	ldr.w	lr, [r1]
 801c31e:	1c98      	adds	r0, r3, #2
 801c320:	900f      	str	r0, [sp, #60]	@ 0x3c
 801c322:	f8cd e054 	str.w	lr, [sp, #84]	@ 0x54
 801c326:	f8d1 e004 	ldr.w	lr, [r1, #4]
 801c32a:	1cd8      	adds	r0, r3, #3
 801c32c:	900f      	str	r0, [sp, #60]	@ 0x3c
 801c32e:	f8cd e058 	str.w	lr, [sp, #88]	@ 0x58
 801c332:	f10c 0c0c 	add.w	ip, ip, #12
 801c336:	f8d1 e008 	ldr.w	lr, [r1, #8]
 801c33a:	eb02 010c 	add.w	r1, r2, ip
 801c33e:	f103 0804 	add.w	r8, r3, #4
 801c342:	9103      	str	r1, [sp, #12]
 801c344:	4603      	mov	r3, r0
 801c346:	991a      	ldr	r1, [sp, #104]	@ 0x68
 801c348:	9819      	ldr	r0, [sp, #100]	@ 0x64
 801c34a:	f8cd e05c 	str.w	lr, [sp, #92]	@ 0x5c
 801c34e:	f88d 403b 	strb.w	r4, [sp, #59]	@ 0x3b
 801c352:	901b      	str	r0, [sp, #108]	@ 0x6c
 801c354:	911c      	str	r1, [sp, #112]	@ 0x70
 801c356:	f7ff b907 	b.w	801b568 <calc_new_geometry+0x118>
 801c35a:	ee37 7a07 	vadd.f32	s14, s14, s14
 801c35e:	ee77 7aa7 	vadd.f32	s15, s15, s15
 801c362:	ed9d 6a1b 	vldr	s12, [sp, #108]	@ 0x6c
 801c366:	eddd 6a1c 	vldr	s13, [sp, #112]	@ 0x70
 801c36a:	ee37 7a46 	vsub.f32	s14, s14, s12
 801c36e:	ee77 7ae6 	vsub.f32	s15, s15, s13
 801c372:	e5ec      	b.n	801bf4e <calc_new_geometry+0xafe>
 801c374:	ed5f 7a31 	vldr	s15, [pc, #-196]	@ 801c2b4 <calc_new_geometry+0xe64>
 801c378:	eef4 cae7 	vcmpe.f32	s25, s15
 801c37c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801c380:	f6ff aea2 	blt.w	801c0c8 <calc_new_geometry+0xc78>
 801c384:	ed9d 1a13 	vldr	s2, [sp, #76]	@ 0x4c
 801c388:	eddd 1a14 	vldr	s3, [sp, #80]	@ 0x50
 801c38c:	ed9d 0a11 	vldr	s0, [sp, #68]	@ 0x44
 801c390:	eddd 0a12 	vldr	s1, [sp, #72]	@ 0x48
 801c394:	f7fd f8fa 	bl	801958c <calc_line_geometry>
 801c398:	4601      	mov	r1, r0
 801c39a:	2800      	cmp	r0, #0
 801c39c:	f43f a959 	beq.w	801b652 <calc_new_geometry+0x202>
 801c3a0:	9101      	str	r1, [sp, #4]
 801c3a2:	f000 fca7 	bl	801ccf4 <nema_vg_set_error>
 801c3a6:	9901      	ldr	r1, [sp, #4]
 801c3a8:	e7b2      	b.n	801c310 <calc_new_geometry+0xec0>
 801c3aa:	f1ae 0e05 	sub.w	lr, lr, #5
 801c3ae:	f1be 0f03 	cmp.w	lr, #3
 801c3b2:	ed9d 6a19 	vldr	s12, [sp, #100]	@ 0x64
 801c3b6:	eddd 6a1a 	vldr	s13, [sp, #104]	@ 0x68
 801c3ba:	d91f      	bls.n	801c3fc <calc_new_geometry+0xfac>
 801c3bc:	eef0 5a66 	vmov.f32	s11, s13
 801c3c0:	eeb0 5a46 	vmov.f32	s10, s12
 801c3c4:	edcd 5a16 	vstr	s11, [sp, #88]	@ 0x58
 801c3c8:	ed8d 5a15 	vstr	s10, [sp, #84]	@ 0x54
 801c3cc:	900f      	str	r0, [sp, #60]	@ 0x3c
 801c3ce:	ed91 7a00 	vldr	s14, [r1]
 801c3d2:	ed8d 7a17 	vstr	s14, [sp, #92]	@ 0x5c
 801c3d6:	3302      	adds	r3, #2
 801c3d8:	930f      	str	r3, [sp, #60]	@ 0x3c
 801c3da:	edd1 7a01 	vldr	s15, [r1, #4]
 801c3de:	edcd 7a18 	vstr	s15, [sp, #96]	@ 0x60
 801c3e2:	f1b9 0f00 	cmp.w	r9, #0
 801c3e6:	f43f ac18 	beq.w	801bc1a <calc_new_geometry+0x7ca>
 801c3ea:	ee37 7a06 	vadd.f32	s14, s14, s12
 801c3ee:	ee77 7aa6 	vadd.f32	s15, s15, s13
 801c3f2:	ed8d 7a17 	vstr	s14, [sp, #92]	@ 0x5c
 801c3f6:	edcd 7a18 	vstr	s15, [sp, #96]	@ 0x60
 801c3fa:	e40e      	b.n	801bc1a <calc_new_geometry+0x7ca>
 801c3fc:	ee36 5a06 	vadd.f32	s10, s12, s12
 801c400:	ee76 5aa6 	vadd.f32	s11, s13, s13
 801c404:	ed9d 7a1b 	vldr	s14, [sp, #108]	@ 0x6c
 801c408:	eddd 7a1c 	vldr	s15, [sp, #112]	@ 0x70
 801c40c:	ee35 5a47 	vsub.f32	s10, s10, s14
 801c410:	ee75 5ae7 	vsub.f32	s11, s11, s15
 801c414:	e7d6      	b.n	801c3c4 <calc_new_geometry+0xf74>
 801c416:	ed9d 0a13 	vldr	s0, [sp, #76]	@ 0x4c
 801c41a:	eddd 0a14 	vldr	s1, [sp, #80]	@ 0x50
 801c41e:	f7fd f855 	bl	80194cc <calc_move_geometry>
 801c422:	4601      	mov	r1, r0
 801c424:	2800      	cmp	r0, #0
 801c426:	f43f a914 	beq.w	801b652 <calc_new_geometry+0x202>
 801c42a:	f7ff bad8 	b.w	801b9de <calc_new_geometry+0x58e>
 801c42e:	ed1f 7a60 	vldr	s14, [pc, #-384]	@ 801c2b0 <calc_new_geometry+0xe60>
 801c432:	ee67 7a87 	vmul.f32	s15, s15, s14
 801c436:	e603      	b.n	801c040 <calc_new_geometry+0xbf0>
 801c438:	ed5f 7a63 	vldr	s15, [pc, #-396]	@ 801c2b0 <calc_new_geometry+0xe60>
 801c43c:	ee6c 7a27 	vmul.f32	s15, s24, s15
 801c440:	e62c      	b.n	801c09c <calc_new_geometry+0xc4c>
 801c442:	ed9d 0a11 	vldr	s0, [sp, #68]	@ 0x44
 801c446:	eddd 0a12 	vldr	s1, [sp, #72]	@ 0x48
 801c44a:	f7fd f83f 	bl	80194cc <calc_move_geometry>
 801c44e:	4601      	mov	r1, r0
 801c450:	2800      	cmp	r0, #0
 801c452:	f47f af59 	bne.w	801c308 <calc_new_geometry+0xeb8>
 801c456:	f88d 0038 	strb.w	r0, [sp, #56]	@ 0x38
 801c45a:	e458      	b.n	801bd0e <calc_new_geometry+0x8be>
 801c45c:	eef1 7a4c 	vneg.f32	s15, s24
 801c460:	eef4 7ac7 	vcmpe.f32	s15, s14
 801c464:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801c468:	f73f ae0d 	bgt.w	801c086 <calc_new_geometry+0xc36>
 801c46c:	ed1f 7a70 	vldr	s14, [pc, #-448]	@ 801c2b0 <calc_new_geometry+0xe60>
 801c470:	ee67 7a87 	vmul.f32	s15, s15, s14
 801c474:	e612      	b.n	801c09c <calc_new_geometry+0xc4c>
 801c476:	ed5f 7a71 	vldr	s15, [pc, #-452]	@ 801c2b4 <calc_new_geometry+0xe64>
 801c47a:	eef4 dae7 	vcmpe.f32	s27, s15
 801c47e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801c482:	f6bf af7f 	bge.w	801c384 <calc_new_geometry+0xf34>
 801c486:	eef5 cac0 	vcmpe.f32	s25, #0.0
 801c48a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801c48e:	f89d 403b 	ldrb.w	r4, [sp, #59]	@ 0x3b
 801c492:	f3c4 1580 	ubfx	r5, r4, #6, #1
 801c496:	f3c4 1440 	ubfx	r4, r4, #5, #1
 801c49a:	d402      	bmi.n	801c4a2 <calc_new_geometry+0x1052>
 801c49c:	eef1 da6d 	vneg.f32	s27, s27
 801c4a0:	e634      	b.n	801c10c <calc_new_geometry+0xcbc>
 801c4a2:	eef1 ca6c 	vneg.f32	s25, s25
 801c4a6:	e62b      	b.n	801c100 <calc_new_geometry+0xcb0>
 801c4a8:	f89d 3038 	ldrb.w	r3, [sp, #56]	@ 0x38
 801c4ac:	2b00      	cmp	r3, #0
 801c4ae:	f000 8121 	beq.w	801c6f4 <calc_new_geometry+0x12a4>
 801c4b2:	ed5f 1a7f 	vldr	s3, [pc, #-508]	@ 801c2b8 <calc_new_geometry+0xe68>
 801c4b6:	eeb0 1a61 	vmov.f32	s2, s3
 801c4ba:	4bc4      	ldr	r3, [pc, #784]	@ (801c7cc <calc_new_geometry+0x137c>)
 801c4bc:	781b      	ldrb	r3, [r3, #0]
 801c4be:	b1e3      	cbz	r3, 801c4fa <calc_new_geometry+0x10aa>
 801c4c0:	4bc3      	ldr	r3, [pc, #780]	@ (801c7d0 <calc_new_geometry+0x1380>)
 801c4c2:	edd3 6a04 	vldr	s13, [r3, #16]
 801c4c6:	edd3 7a00 	vldr	s15, [r3]
 801c4ca:	ed93 7a01 	vldr	s14, [r3, #4]
 801c4ce:	ed93 6a03 	vldr	s12, [r3, #12]
 801c4d2:	ee21 7a87 	vmul.f32	s14, s3, s14
 801c4d6:	ee61 7a27 	vmul.f32	s15, s2, s15
 801c4da:	ee61 1aa6 	vmul.f32	s3, s3, s13
 801c4de:	ee21 1a06 	vmul.f32	s2, s2, s12
 801c4e2:	ee77 7a87 	vadd.f32	s15, s15, s14
 801c4e6:	ee71 1a21 	vadd.f32	s3, s2, s3
 801c4ea:	edd3 6a02 	vldr	s13, [r3, #8]
 801c4ee:	ed93 7a05 	vldr	s14, [r3, #20]
 801c4f2:	ee37 1aa6 	vadd.f32	s2, s15, s13
 801c4f6:	ee71 1a87 	vadd.f32	s3, s3, s14
 801c4fa:	f240 12ff 	movw	r2, #511	@ 0x1ff
 801c4fe:	4bb5      	ldr	r3, [pc, #724]	@ (801c7d4 <calc_new_geometry+0x1384>)
 801c500:	ed9d 0a13 	vldr	s0, [sp, #76]	@ 0x4c
 801c504:	eddd 0a14 	vldr	s1, [sp, #80]	@ 0x50
 801c508:	625a      	str	r2, [r3, #36]	@ 0x24
 801c50a:	f7fd f83f 	bl	801958c <calc_line_geometry>
 801c50e:	4601      	mov	r1, r0
 801c510:	2800      	cmp	r0, #0
 801c512:	f43f aa68 	beq.w	801b9e6 <calc_new_geometry+0x596>
 801c516:	f7ff ba62 	b.w	801b9de <calc_new_geometry+0x58e>
 801c51a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801c51e:	eef0 ba68 	vmov.f32	s23, s17
 801c522:	d50b      	bpl.n	801c53c <calc_new_geometry+0x10ec>
 801c524:	eef0 8a48 	vmov.f32	s17, s16
 801c528:	ed9f 8aab 	vldr	s16, [pc, #684]	@ 801c7d8 <calc_new_geometry+0x1388>
 801c52c:	ee38 8a88 	vadd.f32	s16, s17, s16
 801c530:	b125      	cbz	r5, 801c53c <calc_new_geometry+0x10ec>
 801c532:	eef0 8a48 	vmov.f32	s17, s16
 801c536:	eeb0 8a6b 	vmov.f32	s16, s23
 801c53a:	e6aa      	b.n	801c292 <calc_new_geometry+0xe42>
 801c53c:	eeb4 8aeb 	vcmpe.f32	s16, s23
 801c540:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801c544:	bfc8      	it	gt
 801c546:	2101      	movgt	r1, #1
 801c548:	dc09      	bgt.n	801c55e <calc_new_geometry+0x110e>
 801c54a:	f7ff b882 	b.w	801b652 <calc_new_geometry+0x202>
 801c54e:	eef4 8aeb 	vcmpe.f32	s17, s23
 801c552:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801c556:	eeb0 8a68 	vmov.f32	s16, s17
 801c55a:	f77f a87a 	ble.w	801b652 <calc_new_geometry+0x202>
 801c55e:	ee78 8a69 	vsub.f32	s17, s16, s19
 801c562:	eef4 8aeb 	vcmpe.f32	s17, s23
 801c566:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801c56a:	bf9c      	itt	ls
 801c56c:	3102      	addls	r1, #2
 801c56e:	b2c9      	uxtbls	r1, r1
 801c570:	eeb0 0a48 	vmov.f32	s0, s16
 801c574:	eef0 2a6d 	vmov.f32	s5, s27
 801c578:	eeb0 2a6c 	vmov.f32	s4, s25
 801c57c:	eef0 1a4c 	vmov.f32	s3, s24
 801c580:	eeb0 1a4e 	vmov.f32	s2, s28
 801c584:	a80e      	add	r0, sp, #56	@ 0x38
 801c586:	fe78 0aab 	vselgt.f32	s1, s17, s23
 801c58a:	f7fe fde1 	bl	801b150 <arc_to_cubic>
 801c58e:	4601      	mov	r1, r0
 801c590:	2800      	cmp	r0, #0
 801c592:	d0dc      	beq.n	801c54e <calc_new_geometry+0x10fe>
 801c594:	e6b8      	b.n	801c308 <calc_new_geometry+0xeb8>
 801c596:	db02      	blt.n	801c59e <calc_new_geometry+0x114e>
 801c598:	42a5      	cmp	r5, r4
 801c59a:	f43f ae61 	beq.w	801c260 <calc_new_geometry+0xe10>
 801c59e:	ee74 baee 	vsub.f32	s23, s9, s29
 801c5a2:	ee3f ca2f 	vadd.f32	s24, s30, s31
 801c5a6:	ee76 0a6b 	vsub.f32	s1, s12, s23
 801c5aa:	ee36 0acc 	vsub.f32	s0, s13, s24
 801c5ae:	ed8d 5a03 	vstr	s10, [sp, #12]
 801c5b2:	edcd 5a02 	vstr	s11, [sp, #8]
 801c5b6:	f014 ff59 	bl	803146c <atan2f>
 801c5ba:	eddd 5a02 	vldr	s11, [sp, #8]
 801c5be:	ed9d 5a03 	vldr	s10, [sp, #12]
 801c5c2:	ee75 0aeb 	vsub.f32	s1, s11, s23
 801c5c6:	ee20 8a0a 	vmul.f32	s16, s0, s20
 801c5ca:	ee35 0a4c 	vsub.f32	s0, s10, s24
 801c5ce:	f014 ff4d 	bl	803146c <atan2f>
 801c5d2:	ee60 8a0a 	vmul.f32	s17, s0, s20
 801c5d6:	e643      	b.n	801c260 <calc_new_geometry+0xe10>
 801c5d8:	f44f 7180 	mov.w	r1, #256	@ 0x100
 801c5dc:	4608      	mov	r0, r1
 801c5de:	f7ff b9fe 	b.w	801b9de <calc_new_geometry+0x58e>
 801c5e2:	2e0b      	cmp	r6, #11
 801c5e4:	f47f ab79 	bne.w	801bcda <calc_new_geometry+0x88a>
 801c5e8:	9b03      	ldr	r3, [sp, #12]
 801c5ea:	f8cd 803c 	str.w	r8, [sp, #60]	@ 0x3c
 801c5ee:	edd3 7a00 	vldr	s15, [r3]
 801c5f2:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 801c5f6:	f89d 3038 	ldrb.w	r3, [sp, #56]	@ 0x38
 801c5fa:	ee17 8a90 	vmov	r8, s15
 801c5fe:	2b01      	cmp	r3, #1
 801c600:	f000 808c 	beq.w	801c71c <calc_new_geometry+0x12cc>
 801c604:	eb08 78d8 	add.w	r8, r8, r8, lsr #31
 801c608:	ea4f 0368 	mov.w	r3, r8, asr #1
 801c60c:	2b00      	cmp	r3, #0
 801c60e:	9304      	str	r3, [sp, #16]
 801c610:	f77e affe 	ble.w	801b610 <calc_new_geometry+0x1c0>
 801c614:	2100      	movs	r1, #0
 801c616:	9605      	str	r6, [sp, #20]
 801c618:	f8df 81b0 	ldr.w	r8, [pc, #432]	@ 801c7cc <calc_new_geometry+0x137c>
 801c61c:	464e      	mov	r6, r9
 801c61e:	4b6c      	ldr	r3, [pc, #432]	@ (801c7d0 <calc_new_geometry+0x1380>)
 801c620:	4689      	mov	r9, r1
 801c622:	e052      	b.n	801c6ca <calc_new_geometry+0x127a>
 801c624:	eddd 7a19 	vldr	s15, [sp, #100]	@ 0x64
 801c628:	ee37 7a27 	vadd.f32	s14, s14, s15
 801c62c:	ed8d 7a13 	vstr	s14, [sp, #76]	@ 0x4c
 801c630:	910f      	str	r1, [sp, #60]	@ 0x3c
 801c632:	eddc 6a00 	vldr	s13, [ip]
 801c636:	eddd 7a1a 	vldr	s15, [sp, #104]	@ 0x68
 801c63a:	ee76 7aa7 	vadd.f32	s15, s13, s15
 801c63e:	edcd 7a14 	vstr	s15, [sp, #80]	@ 0x50
 801c642:	f898 1000 	ldrb.w	r1, [r8]
 801c646:	f109 0901 	add.w	r9, r9, #1
 801c64a:	ed8d 7a19 	vstr	s14, [sp, #100]	@ 0x64
 801c64e:	edcd 7a1a 	vstr	s15, [sp, #104]	@ 0x68
 801c652:	f88d 407c 	strb.w	r4, [sp, #124]	@ 0x7c
 801c656:	b1f9      	cbz	r1, 801c698 <calc_new_geometry+0x1248>
 801c658:	ed93 6a03 	vldr	s12, [r3, #12]
 801c65c:	edd3 6a04 	vldr	s13, [r3, #16]
 801c660:	ed93 5a00 	vldr	s10, [r3]
 801c664:	edd3 5a01 	vldr	s11, [r3, #4]
 801c668:	ee27 5a05 	vmul.f32	s10, s14, s10
 801c66c:	ee67 5aa5 	vmul.f32	s11, s15, s11
 801c670:	ee27 7a06 	vmul.f32	s14, s14, s12
 801c674:	ee67 7aa6 	vmul.f32	s15, s15, s13
 801c678:	ee35 6a25 	vadd.f32	s12, s10, s11
 801c67c:	ee37 7a27 	vadd.f32	s14, s14, s15
 801c680:	edd3 6a02 	vldr	s13, [r3, #8]
 801c684:	edd3 7a05 	vldr	s15, [r3, #20]
 801c688:	ee76 6a26 	vadd.f32	s13, s12, s13
 801c68c:	ee77 7a27 	vadd.f32	s15, s14, s15
 801c690:	edcd 6a13 	vstr	s13, [sp, #76]	@ 0x4c
 801c694:	edcd 7a14 	vstr	s15, [sp, #80]	@ 0x50
 801c698:	ed9d 1a13 	vldr	s2, [sp, #76]	@ 0x4c
 801c69c:	eddd 1a14 	vldr	s3, [sp, #80]	@ 0x50
 801c6a0:	ed9d 0a11 	vldr	s0, [sp, #68]	@ 0x44
 801c6a4:	eddd 0a12 	vldr	s1, [sp, #72]	@ 0x48
 801c6a8:	9303      	str	r3, [sp, #12]
 801c6aa:	f7fc ff6f 	bl	801958c <calc_line_geometry>
 801c6ae:	9b03      	ldr	r3, [sp, #12]
 801c6b0:	4601      	mov	r1, r0
 801c6b2:	2800      	cmp	r0, #0
 801c6b4:	f47f ae28 	bne.w	801c308 <calc_new_geometry+0xeb8>
 801c6b8:	e897 0003 	ldmia.w	r7, {r0, r1}
 801c6bc:	9a04      	ldr	r2, [sp, #16]
 801c6be:	e885 0003 	stmia.w	r5, {r0, r1}
 801c6c2:	4591      	cmp	r9, r2
 801c6c4:	d025      	beq.n	801c712 <calc_new_geometry+0x12c2>
 801c6c6:	f8da 200c 	ldr.w	r2, [sl, #12]
 801c6ca:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 801c6cc:	0088      	lsls	r0, r1, #2
 801c6ce:	f100 0c04 	add.w	ip, r0, #4
 801c6d2:	4494      	add	ip, r2
 801c6d4:	4410      	add	r0, r2
 801c6d6:	1c4a      	adds	r2, r1, #1
 801c6d8:	920f      	str	r2, [sp, #60]	@ 0x3c
 801c6da:	3102      	adds	r1, #2
 801c6dc:	ed90 7a00 	vldr	s14, [r0]
 801c6e0:	2e00      	cmp	r6, #0
 801c6e2:	d19f      	bne.n	801c624 <calc_new_geometry+0x11d4>
 801c6e4:	ed8d 7a13 	vstr	s14, [sp, #76]	@ 0x4c
 801c6e8:	910f      	str	r1, [sp, #60]	@ 0x3c
 801c6ea:	eddc 7a00 	vldr	s15, [ip]
 801c6ee:	edcd 7a14 	vstr	s15, [sp, #80]	@ 0x50
 801c6f2:	e7a6      	b.n	801c642 <calc_new_geometry+0x11f2>
 801c6f4:	ed9d 1a1d 	vldr	s2, [sp, #116]	@ 0x74
 801c6f8:	eddd 1a1e 	vldr	s3, [sp, #120]	@ 0x78
 801c6fc:	e6dd      	b.n	801c4ba <calc_new_geometry+0x106a>
 801c6fe:	eef0 ba48 	vmov.f32	s23, s16
 801c702:	e711      	b.n	801c528 <calc_new_geometry+0x10d8>
 801c704:	eef4 7aea 	vcmpe.f32	s15, s21
 801c708:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801c70c:	f6bf ada8 	bge.w	801c260 <calc_new_geometry+0xe10>
 801c710:	e745      	b.n	801c59e <calc_new_geometry+0x114e>
 801c712:	9e05      	ldr	r6, [sp, #20]
 801c714:	f89d 3038 	ldrb.w	r3, [sp, #56]	@ 0x38
 801c718:	f7ff b9d6 	b.w	801bac8 <calc_new_geometry+0x678>
 801c71c:	ed9d 0a11 	vldr	s0, [sp, #68]	@ 0x44
 801c720:	eddd 0a12 	vldr	s1, [sp, #72]	@ 0x48
 801c724:	f7fc fed2 	bl	80194cc <calc_move_geometry>
 801c728:	4601      	mov	r1, r0
 801c72a:	2800      	cmp	r0, #0
 801c72c:	f47f adec 	bne.w	801c308 <calc_new_geometry+0xeb8>
 801c730:	eb08 78d8 	add.w	r8, r8, r8, lsr #31
 801c734:	ea4f 0368 	mov.w	r3, r8, asr #1
 801c738:	2b00      	cmp	r3, #0
 801c73a:	9304      	str	r3, [sp, #16]
 801c73c:	f88d 0038 	strb.w	r0, [sp, #56]	@ 0x38
 801c740:	f77f ab63 	ble.w	801be0a <calc_new_geometry+0x9ba>
 801c744:	f8da 200c 	ldr.w	r2, [sl, #12]
 801c748:	e764      	b.n	801c614 <calc_new_geometry+0x11c4>
 801c74a:	ee27 0a87 	vmul.f32	s0, s15, s14
 801c74e:	eeb5 0a40 	vcmp.f32	s0, #0.0
 801c752:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801c756:	eef1 8ac0 	vsqrt.f32	s17, s0
 801c75a:	d41c      	bmi.n	801c796 <calc_new_geometry+0x1346>
 801c75c:	ee6c caa8 	vmul.f32	s25, s25, s17
 801c760:	ee6d daa8 	vmul.f32	s27, s27, s17
 801c764:	ee8c 6a2c 	vdiv.f32	s12, s24, s25
 801c768:	ee88 5a2d 	vdiv.f32	s10, s16, s27
 801c76c:	eecb 5aac 	vdiv.f32	s11, s23, s25
 801c770:	eecf 6a2d 	vdiv.f32	s13, s30, s27
 801c774:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 801c778:	ee76 4a25 	vadd.f32	s9, s12, s11
 801c77c:	ee36 7a85 	vadd.f32	s14, s13, s10
 801c780:	ee64 4aa7 	vmul.f32	s9, s9, s15
 801c784:	ee67 fa27 	vmul.f32	s31, s14, s15
 801c788:	ee76 8a65 	vsub.f32	s17, s12, s11
 801c78c:	ee76 eac5 	vsub.f32	s29, s13, s10
 801c790:	eeb0 8a49 	vmov.f32	s16, s18
 801c794:	e51a      	b.n	801c1cc <calc_new_geometry+0xd7c>
 801c796:	f014 fe8b 	bl	80314b0 <sqrtf>
 801c79a:	e7df      	b.n	801c75c <calc_new_geometry+0x130c>
 801c79c:	edcd 4a06 	vstr	s9, [sp, #24]
 801c7a0:	ed8d 5a05 	vstr	s10, [sp, #20]
 801c7a4:	edcd 5a04 	vstr	s11, [sp, #16]
 801c7a8:	ed8d 6a03 	vstr	s12, [sp, #12]
 801c7ac:	edcd 6a02 	vstr	s13, [sp, #8]
 801c7b0:	f014 fe7e 	bl	80314b0 <sqrtf>
 801c7b4:	eddd 4a06 	vldr	s9, [sp, #24]
 801c7b8:	ed9d 5a05 	vldr	s10, [sp, #20]
 801c7bc:	eddd 5a04 	vldr	s11, [sp, #16]
 801c7c0:	ed9d 6a03 	vldr	s12, [sp, #12]
 801c7c4:	eddd 6a02 	vldr	s13, [sp, #8]
 801c7c8:	e500      	b.n	801c1cc <calc_new_geometry+0xd7c>
 801c7ca:	bf00      	nop
 801c7cc:	2008331c 	.word	0x2008331c
 801c7d0:	20083320 	.word	0x20083320
 801c7d4:	200832f0 	.word	0x200832f0
 801c7d8:	43b40000 	.word	0x43b40000

0801c7dc <calc_clipped_path>:
 801c7dc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801c7e0:	2600      	movs	r6, #0
 801c7e2:	4c3b      	ldr	r4, [pc, #236]	@ (801c8d0 <calc_clipped_path+0xf4>)
 801c7e4:	4605      	mov	r5, r0
 801c7e6:	6026      	str	r6, [r4, #0]
 801c7e8:	4617      	mov	r7, r2
 801c7ea:	e9dd 6808 	ldrd	r6, r8, [sp, #32]
 801c7ee:	469a      	mov	sl, r3
 801c7f0:	2b00      	cmp	r3, #0
 801c7f2:	d04f      	beq.n	801c894 <calc_clipped_path+0xb8>
 801c7f4:	f1b8 0f00 	cmp.w	r8, #0
 801c7f8:	bf14      	ite	ne
 801c7fa:	f04f 0900 	movne.w	r9, #0
 801c7fe:	f04f 0902 	moveq.w	r9, #2
 801c802:	edd1 7a35 	vldr	s15, [r1, #212]	@ 0xd4
 801c806:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 801c80a:	eddf 6a32 	vldr	s13, [pc, #200]	@ 801c8d4 <calc_clipped_path+0xf8>
 801c80e:	ee67 7a87 	vmul.f32	s15, s15, s14
 801c812:	ed9f 7a31 	vldr	s14, [pc, #196]	@ 801c8d8 <calc_clipped_path+0xfc>
 801c816:	ee77 6ae6 	vsub.f32	s13, s15, s13
 801c81a:	ee77 7a67 	vsub.f32	s15, s14, s15
 801c81e:	4a2f      	ldr	r2, [pc, #188]	@ (801c8dc <calc_clipped_path+0x100>)
 801c820:	4b2f      	ldr	r3, [pc, #188]	@ (801c8e0 <calc_clipped_path+0x104>)
 801c822:	edc2 6a00 	vstr	s13, [r2]
 801c826:	edc3 7a00 	vstr	s15, [r3]
 801c82a:	f000 f9d1 	bl	801cbd0 <nema_vg_get_context>
 801c82e:	f8d5 1084 	ldr.w	r1, [r5, #132]	@ 0x84
 801c832:	6b03      	ldr	r3, [r0, #48]	@ 0x30
 801c834:	f8df c0b8 	ldr.w	ip, [pc, #184]	@ 801c8f0 <calc_clipped_path+0x114>
 801c838:	ea41 0203 	orr.w	r2, r1, r3
 801c83c:	4c29      	ldr	r4, [pc, #164]	@ (801c8e4 <calc_clipped_path+0x108>)
 801c83e:	f002 0201 	and.w	r2, r2, #1
 801c842:	f8cc 0000 	str.w	r0, [ip]
 801c846:	7022      	strb	r2, [r4, #0]
 801c848:	b132      	cbz	r2, 801c858 <calc_clipped_path+0x7c>
 801c84a:	07dc      	lsls	r4, r3, #31
 801c84c:	d42b      	bmi.n	801c8a6 <calc_clipped_path+0xca>
 801c84e:	07cb      	lsls	r3, r1, #31
 801c850:	d438      	bmi.n	801c8c4 <calc_clipped_path+0xe8>
 801c852:	4825      	ldr	r0, [pc, #148]	@ (801c8e8 <calc_clipped_path+0x10c>)
 801c854:	f7f5 f99c 	bl	8011b90 <nema_mat3x3_load_identity>
 801c858:	2200      	movs	r2, #0
 801c85a:	2100      	movs	r1, #0
 801c85c:	4c23      	ldr	r4, [pc, #140]	@ (801c8ec <calc_clipped_path+0x110>)
 801c85e:	683b      	ldr	r3, [r7, #0]
 801c860:	e9c4 2204 	strd	r2, r2, [r4, #16]
 801c864:	f884 2020 	strb.w	r2, [r4, #32]
 801c868:	6262      	str	r2, [r4, #36]	@ 0x24
 801c86a:	6832      	ldr	r2, [r6, #0]
 801c86c:	4628      	mov	r0, r5
 801c86e:	f8c4 a004 	str.w	sl, [r4, #4]
 801c872:	f8c4 800c 	str.w	r8, [r4, #12]
 801c876:	6023      	str	r3, [r4, #0]
 801c878:	60a2      	str	r2, [r4, #8]
 801c87a:	61a1      	str	r1, [r4, #24]
 801c87c:	61e1      	str	r1, [r4, #28]
 801c87e:	f7fe fde7 	bl	801b450 <calc_new_geometry>
 801c882:	4605      	mov	r5, r0
 801c884:	b948      	cbnz	r0, 801c89a <calc_clipped_path+0xbe>
 801c886:	e9d4 3204 	ldrd	r3, r2, [r4, #16]
 801c88a:	603a      	str	r2, [r7, #0]
 801c88c:	6033      	str	r3, [r6, #0]
 801c88e:	4648      	mov	r0, r9
 801c890:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801c894:	f04f 0902 	mov.w	r9, #2
 801c898:	e7b3      	b.n	801c802 <calc_clipped_path+0x26>
 801c89a:	46a9      	mov	r9, r5
 801c89c:	f000 fa2a 	bl	801ccf4 <nema_vg_set_error>
 801c8a0:	4648      	mov	r0, r9
 801c8a2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801c8a6:	f100 014c 	add.w	r1, r0, #76	@ 0x4c
 801c8aa:	480f      	ldr	r0, [pc, #60]	@ (801c8e8 <calc_clipped_path+0x10c>)
 801c8ac:	f7f5 f97e 	bl	8011bac <nema_mat3x3_copy>
 801c8b0:	f8d5 3084 	ldr.w	r3, [r5, #132]	@ 0x84
 801c8b4:	07da      	lsls	r2, r3, #31
 801c8b6:	d5cf      	bpl.n	801c858 <calc_clipped_path+0x7c>
 801c8b8:	f105 0160 	add.w	r1, r5, #96	@ 0x60
 801c8bc:	480a      	ldr	r0, [pc, #40]	@ (801c8e8 <calc_clipped_path+0x10c>)
 801c8be:	f7f5 f9c1 	bl	8011c44 <nema_mat3x3_mul>
 801c8c2:	e7c9      	b.n	801c858 <calc_clipped_path+0x7c>
 801c8c4:	f105 0160 	add.w	r1, r5, #96	@ 0x60
 801c8c8:	4807      	ldr	r0, [pc, #28]	@ (801c8e8 <calc_clipped_path+0x10c>)
 801c8ca:	f7f5 f96f 	bl	8011bac <nema_mat3x3_copy>
 801c8ce:	e7c3      	b.n	801c858 <calc_clipped_path+0x7c>
 801c8d0:	200832e8 	.word	0x200832e8
 801c8d4:	43fd8000 	.word	0x43fd8000
 801c8d8:	44bf6000 	.word	0x44bf6000
 801c8dc:	20000144 	.word	0x20000144
 801c8e0:	20000140 	.word	0x20000140
 801c8e4:	2008331c 	.word	0x2008331c
 801c8e8:	20083320 	.word	0x20083320
 801c8ec:	200832f0 	.word	0x200832f0
 801c8f0:	200832ec 	.word	0x200832ec

0801c8f4 <draw_clipped_path>:
 801c8f4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801c8f8:	b0b2      	sub	sp, #200	@ 0xc8
 801c8fa:	460e      	mov	r6, r1
 801c8fc:	4605      	mov	r5, r0
 801c8fe:	f000 f967 	bl	801cbd0 <nema_vg_get_context>
 801c902:	4f84      	ldr	r7, [pc, #528]	@ (801cb14 <draw_clipped_path+0x220>)
 801c904:	6842      	ldr	r2, [r0, #4]
 801c906:	e9d0 130d 	ldrd	r1, r3, [r0, #52]	@ 0x34
 801c90a:	089b      	lsrs	r3, r3, #2
 801c90c:	9307      	str	r3, [sp, #28]
 801c90e:	9106      	str	r1, [sp, #24]
 801c910:	6038      	str	r0, [r7, #0]
 801c912:	2a00      	cmp	r2, #0
 801c914:	d056      	beq.n	801c9c4 <draw_clipped_path+0xd0>
 801c916:	6881      	ldr	r1, [r0, #8]
 801c918:	2900      	cmp	r1, #0
 801c91a:	d053      	beq.n	801c9c4 <draw_clipped_path+0xd0>
 801c91c:	6889      	ldr	r1, [r1, #8]
 801c91e:	6893      	ldr	r3, [r2, #8]
 801c920:	aa07      	add	r2, sp, #28
 801c922:	e9cd 2100 	strd	r2, r1, [sp]
 801c926:	4628      	mov	r0, r5
 801c928:	aa06      	add	r2, sp, #24
 801c92a:	4631      	mov	r1, r6
 801c92c:	f7ff ff56 	bl	801c7dc <calc_clipped_path>
 801c930:	4b79      	ldr	r3, [pc, #484]	@ (801cb18 <draw_clipped_path+0x224>)
 801c932:	4680      	mov	r8, r0
 801c934:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801c936:	683c      	ldr	r4, [r7, #0]
 801c938:	2b02      	cmp	r3, #2
 801c93a:	d002      	beq.n	801c942 <draw_clipped_path+0x4e>
 801c93c:	2800      	cmp	r0, #0
 801c93e:	f000 80b4 	beq.w	801caaa <draw_clipped_path+0x1b6>
 801c942:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 801c944:	06db      	lsls	r3, r3, #27
 801c946:	f140 8087 	bpl.w	801ca58 <draw_clipped_path+0x164>
 801c94a:	e9dd 2a06 	ldrd	r2, sl, [sp, #24]
 801c94e:	ac02      	add	r4, sp, #8
 801c950:	4620      	mov	r0, r4
 801c952:	2100      	movs	r1, #0
 801c954:	f10d 0920 	add.w	r9, sp, #32
 801c958:	f7e6 fa82 	bl	8002e60 <nema_buffer_create_pool>
 801c95c:	e894 000f 	ldmia.w	r4, {r0, r1, r2, r3}
 801c960:	e889 000f 	stmia.w	r9, {r0, r1, r2, r3}
 801c964:	4648      	mov	r0, r9
 801c966:	f7e6 fa9d 	bl	8002ea4 <nema_buffer_map>
 801c96a:	f10d 0830 	add.w	r8, sp, #48	@ 0x30
 801c96e:	ea4f 028a 	mov.w	r2, sl, lsl #2
 801c972:	4620      	mov	r0, r4
 801c974:	2100      	movs	r1, #0
 801c976:	f7e6 fa73 	bl	8002e60 <nema_buffer_create_pool>
 801c97a:	e894 000f 	ldmia.w	r4, {r0, r1, r2, r3}
 801c97e:	e888 000f 	stmia.w	r8, {r0, r1, r2, r3}
 801c982:	4640      	mov	r0, r8
 801c984:	f7e6 fa8e 	bl	8002ea4 <nema_buffer_map>
 801c988:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801c98a:	2b00      	cmp	r3, #0
 801c98c:	d076      	beq.n	801ca7c <draw_clipped_path+0x188>
 801c98e:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 801c990:	2a00      	cmp	r2, #0
 801c992:	d070      	beq.n	801ca76 <draw_clipped_path+0x182>
 801c994:	a907      	add	r1, sp, #28
 801c996:	e9cd 1200 	strd	r1, r2, [sp]
 801c99a:	4628      	mov	r0, r5
 801c99c:	aa06      	add	r2, sp, #24
 801c99e:	4631      	mov	r1, r6
 801c9a0:	f7ff ff1c 	bl	801c7dc <calc_clipped_path>
 801c9a4:	4604      	mov	r4, r0
 801c9a6:	2800      	cmp	r0, #0
 801c9a8:	f000 809a 	beq.w	801cae0 <draw_clipped_path+0x1ec>
 801c9ac:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801c9ae:	b113      	cbz	r3, 801c9b6 <draw_clipped_path+0xc2>
 801c9b0:	4648      	mov	r0, r9
 801c9b2:	f7e6 fa79 	bl	8002ea8 <nema_buffer_destroy>
 801c9b6:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801c9b8:	2b00      	cmp	r3, #0
 801c9ba:	d04e      	beq.n	801ca5a <draw_clipped_path+0x166>
 801c9bc:	4640      	mov	r0, r8
 801c9be:	f7e6 fa73 	bl	8002ea8 <nema_buffer_destroy>
 801c9c2:	e04a      	b.n	801ca5a <draw_clipped_path+0x166>
 801c9c4:	edd6 7a35 	vldr	s15, [r6, #212]	@ 0xd4
 801c9c8:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 801c9cc:	eddf 6a53 	vldr	s13, [pc, #332]	@ 801cb1c <draw_clipped_path+0x228>
 801c9d0:	ee67 7a87 	vmul.f32	s15, s15, s14
 801c9d4:	ed9f 7a52 	vldr	s14, [pc, #328]	@ 801cb20 <draw_clipped_path+0x22c>
 801c9d8:	ee77 6ae6 	vsub.f32	s13, s15, s13
 801c9dc:	2201      	movs	r2, #1
 801c9de:	ee77 7a67 	vsub.f32	s15, s14, s15
 801c9e2:	4950      	ldr	r1, [pc, #320]	@ (801cb24 <draw_clipped_path+0x230>)
 801c9e4:	4b50      	ldr	r3, [pc, #320]	@ (801cb28 <draw_clipped_path+0x234>)
 801c9e6:	4851      	ldr	r0, [pc, #324]	@ (801cb2c <draw_clipped_path+0x238>)
 801c9e8:	601a      	str	r2, [r3, #0]
 801c9ea:	edc1 7a00 	vstr	s15, [r1]
 801c9ee:	edc0 6a00 	vstr	s13, [r0]
 801c9f2:	f000 f8ed 	bl	801cbd0 <nema_vg_get_context>
 801c9f6:	f8d5 1084 	ldr.w	r1, [r5, #132]	@ 0x84
 801c9fa:	6b02      	ldr	r2, [r0, #48]	@ 0x30
 801c9fc:	4c4c      	ldr	r4, [pc, #304]	@ (801cb30 <draw_clipped_path+0x23c>)
 801c9fe:	ea41 0302 	orr.w	r3, r1, r2
 801ca02:	f003 0301 	and.w	r3, r3, #1
 801ca06:	6038      	str	r0, [r7, #0]
 801ca08:	7023      	strb	r3, [r4, #0]
 801ca0a:	b133      	cbz	r3, 801ca1a <draw_clipped_path+0x126>
 801ca0c:	07d4      	lsls	r4, r2, #31
 801ca0e:	d43d      	bmi.n	801ca8c <draw_clipped_path+0x198>
 801ca10:	07ca      	lsls	r2, r1, #31
 801ca12:	d42a      	bmi.n	801ca6a <draw_clipped_path+0x176>
 801ca14:	4847      	ldr	r0, [pc, #284]	@ (801cb34 <draw_clipped_path+0x240>)
 801ca16:	f7f5 f8bb 	bl	8011b90 <nema_mat3x3_load_identity>
 801ca1a:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 801ca1e:	2300      	movs	r3, #0
 801ca20:	2200      	movs	r2, #0
 801ca22:	4c3d      	ldr	r4, [pc, #244]	@ (801cb18 <draw_clipped_path+0x224>)
 801ca24:	9306      	str	r3, [sp, #24]
 801ca26:	6020      	str	r0, [r4, #0]
 801ca28:	4628      	mov	r0, r5
 801ca2a:	6063      	str	r3, [r4, #4]
 801ca2c:	e9c4 3303 	strd	r3, r3, [r4, #12]
 801ca30:	6163      	str	r3, [r4, #20]
 801ca32:	f884 3020 	strb.w	r3, [r4, #32]
 801ca36:	6263      	str	r3, [r4, #36]	@ 0x24
 801ca38:	60a1      	str	r1, [r4, #8]
 801ca3a:	9307      	str	r3, [sp, #28]
 801ca3c:	61a2      	str	r2, [r4, #24]
 801ca3e:	61e2      	str	r2, [r4, #28]
 801ca40:	f7fe fd06 	bl	801b450 <calc_new_geometry>
 801ca44:	b968      	cbnz	r0, 801ca62 <draw_clipped_path+0x16e>
 801ca46:	e9d4 3204 	ldrd	r3, r2, [r4, #16]
 801ca4a:	683c      	ldr	r4, [r7, #0]
 801ca4c:	e9cd 2306 	strd	r2, r3, [sp, #24]
 801ca50:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 801ca52:	06db      	lsls	r3, r3, #27
 801ca54:	f53f af79 	bmi.w	801c94a <draw_clipped_path+0x56>
 801ca58:	2402      	movs	r4, #2
 801ca5a:	4620      	mov	r0, r4
 801ca5c:	b032      	add	sp, #200	@ 0xc8
 801ca5e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801ca62:	f000 f947 	bl	801ccf4 <nema_vg_set_error>
 801ca66:	683c      	ldr	r4, [r7, #0]
 801ca68:	e76b      	b.n	801c942 <draw_clipped_path+0x4e>
 801ca6a:	f105 0160 	add.w	r1, r5, #96	@ 0x60
 801ca6e:	4831      	ldr	r0, [pc, #196]	@ (801cb34 <draw_clipped_path+0x240>)
 801ca70:	f7f5 f89c 	bl	8011bac <nema_mat3x3_copy>
 801ca74:	e7d1      	b.n	801ca1a <draw_clipped_path+0x126>
 801ca76:	4648      	mov	r0, r9
 801ca78:	f7e6 fa16 	bl	8002ea8 <nema_buffer_destroy>
 801ca7c:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801ca7e:	2b00      	cmp	r3, #0
 801ca80:	d0ea      	beq.n	801ca58 <draw_clipped_path+0x164>
 801ca82:	4640      	mov	r0, r8
 801ca84:	f7e6 fa10 	bl	8002ea8 <nema_buffer_destroy>
 801ca88:	2402      	movs	r4, #2
 801ca8a:	e7e6      	b.n	801ca5a <draw_clipped_path+0x166>
 801ca8c:	f100 014c 	add.w	r1, r0, #76	@ 0x4c
 801ca90:	4828      	ldr	r0, [pc, #160]	@ (801cb34 <draw_clipped_path+0x240>)
 801ca92:	f7f5 f88b 	bl	8011bac <nema_mat3x3_copy>
 801ca96:	f8d5 3084 	ldr.w	r3, [r5, #132]	@ 0x84
 801ca9a:	07d9      	lsls	r1, r3, #31
 801ca9c:	d5bd      	bpl.n	801ca1a <draw_clipped_path+0x126>
 801ca9e:	f105 0160 	add.w	r1, r5, #96	@ 0x60
 801caa2:	4824      	ldr	r0, [pc, #144]	@ (801cb34 <draw_clipped_path+0x240>)
 801caa4:	f7f5 f8ce 	bl	8011c44 <nema_mat3x3_mul>
 801caa8:	e7b7      	b.n	801ca1a <draw_clipped_path+0x126>
 801caaa:	4629      	mov	r1, r5
 801caac:	2288      	movs	r2, #136	@ 0x88
 801caae:	a810      	add	r0, sp, #64	@ 0x40
 801cab0:	f016 f94b 	bl	8032d4a <memcpy>
 801cab4:	e9d4 2301 	ldrd	r2, r3, [r4, #4]
 801cab8:	6898      	ldr	r0, [r3, #8]
 801caba:	6892      	ldr	r2, [r2, #8]
 801cabc:	e9dd 1306 	ldrd	r1, r3, [sp, #24]
 801cac0:	9000      	str	r0, [sp, #0]
 801cac2:	a810      	add	r0, sp, #64	@ 0x40
 801cac4:	f000 fe54 	bl	801d770 <nema_vg_path_set_shape>
 801cac8:	2201      	movs	r2, #1
 801caca:	683b      	ldr	r3, [r7, #0]
 801cacc:	a810      	add	r0, sp, #64	@ 0x40
 801cace:	779a      	strb	r2, [r3, #30]
 801cad0:	4631      	mov	r1, r6
 801cad2:	f7fb fde5 	bl	80186a0 <nema_vg_draw_path>
 801cad6:	683b      	ldr	r3, [r7, #0]
 801cad8:	4604      	mov	r4, r0
 801cada:	f883 801e 	strb.w	r8, [r3, #30]
 801cade:	e7bc      	b.n	801ca5a <draw_clipped_path+0x166>
 801cae0:	4629      	mov	r1, r5
 801cae2:	2288      	movs	r2, #136	@ 0x88
 801cae4:	a810      	add	r0, sp, #64	@ 0x40
 801cae6:	f016 f930 	bl	8032d4a <memcpy>
 801caea:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 801caec:	9b07      	ldr	r3, [sp, #28]
 801caee:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 801caf0:	9906      	ldr	r1, [sp, #24]
 801caf2:	a810      	add	r0, sp, #64	@ 0x40
 801caf4:	9400      	str	r4, [sp, #0]
 801caf6:	f000 fe3b 	bl	801d770 <nema_vg_path_set_shape>
 801cafa:	2201      	movs	r2, #1
 801cafc:	683b      	ldr	r3, [r7, #0]
 801cafe:	a810      	add	r0, sp, #64	@ 0x40
 801cb00:	779a      	strb	r2, [r3, #30]
 801cb02:	4631      	mov	r1, r6
 801cb04:	f7fb fdcc 	bl	80186a0 <nema_vg_draw_path>
 801cb08:	2200      	movs	r2, #0
 801cb0a:	683b      	ldr	r3, [r7, #0]
 801cb0c:	4604      	mov	r4, r0
 801cb0e:	779a      	strb	r2, [r3, #30]
 801cb10:	e74c      	b.n	801c9ac <draw_clipped_path+0xb8>
 801cb12:	bf00      	nop
 801cb14:	200832ec 	.word	0x200832ec
 801cb18:	200832f0 	.word	0x200832f0
 801cb1c:	43fd8000 	.word	0x43fd8000
 801cb20:	44bf6000 	.word	0x44bf6000
 801cb24:	20000140 	.word	0x20000140
 801cb28:	200832e8 	.word	0x200832e8
 801cb2c:	20000144 	.word	0x20000144
 801cb30:	2008331c 	.word	0x2008331c
 801cb34:	20083320 	.word	0x20083320

0801cb38 <context_reset>:
 801cb38:	b570      	push	{r4, r5, r6, lr}
 801cb3a:	4c23      	ldr	r4, [pc, #140]	@ (801cbc8 <context_reset+0x90>)
 801cb3c:	6820      	ldr	r0, [r4, #0]
 801cb3e:	b110      	cbz	r0, 801cb46 <context_reset+0xe>
 801cb40:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 801cb42:	069b      	lsls	r3, r3, #26
 801cb44:	d43a      	bmi.n	801cbbc <context_reset+0x84>
 801cb46:	2300      	movs	r3, #0
 801cb48:	6962      	ldr	r2, [r4, #20]
 801cb4a:	e9c4 3300 	strd	r3, r3, [r4]
 801cb4e:	60a3      	str	r3, [r4, #8]
 801cb50:	b112      	cbz	r2, 801cb58 <context_reset+0x20>
 801cb52:	481e      	ldr	r0, [pc, #120]	@ (801cbcc <context_reset+0x94>)
 801cb54:	f7e6 f9a8 	bl	8002ea8 <nema_buffer_destroy>
 801cb58:	2300      	movs	r3, #0
 801cb5a:	2200      	movs	r2, #0
 801cb5c:	2602      	movs	r6, #2
 801cb5e:	f240 5501 	movw	r5, #1281	@ 0x501
 801cb62:	f04f 7000 	mov.w	r0, #33554432	@ 0x2000000
 801cb66:	f04f 61f0 	mov.w	r1, #125829120	@ 0x7800000
 801cb6a:	e9c4 2203 	strd	r2, r2, [r4, #12]
 801cb6e:	e9c4 2205 	strd	r2, r2, [r4, #20]
 801cb72:	6222      	str	r2, [r4, #32]
 801cb74:	e9c4 220c 	strd	r2, r2, [r4, #48]	@ 0x30
 801cb78:	e9c4 220e 	strd	r2, r2, [r4, #56]	@ 0x38
 801cb7c:	f884 2048 	strb.w	r2, [r4, #72]	@ 0x48
 801cb80:	61e6      	str	r6, [r4, #28]
 801cb82:	e9c4 5009 	strd	r5, r0, [r4, #36]	@ 0x24
 801cb86:	62e1      	str	r1, [r4, #44]	@ 0x2c
 801cb88:	6423      	str	r3, [r4, #64]	@ 0x40
 801cb8a:	6463      	str	r3, [r4, #68]	@ 0x44
 801cb8c:	64e3      	str	r3, [r4, #76]	@ 0x4c
 801cb8e:	6723      	str	r3, [r4, #112]	@ 0x70
 801cb90:	6523      	str	r3, [r4, #80]	@ 0x50
 801cb92:	6763      	str	r3, [r4, #116]	@ 0x74
 801cb94:	6563      	str	r3, [r4, #84]	@ 0x54
 801cb96:	67a3      	str	r3, [r4, #120]	@ 0x78
 801cb98:	65a3      	str	r3, [r4, #88]	@ 0x58
 801cb9a:	67e3      	str	r3, [r4, #124]	@ 0x7c
 801cb9c:	65e3      	str	r3, [r4, #92]	@ 0x5c
 801cb9e:	f8c4 3080 	str.w	r3, [r4, #128]	@ 0x80
 801cba2:	6623      	str	r3, [r4, #96]	@ 0x60
 801cba4:	f8c4 3084 	str.w	r3, [r4, #132]	@ 0x84
 801cba8:	6663      	str	r3, [r4, #100]	@ 0x64
 801cbaa:	f8c4 3088 	str.w	r3, [r4, #136]	@ 0x88
 801cbae:	66a3      	str	r3, [r4, #104]	@ 0x68
 801cbb0:	f8c4 308c 	str.w	r3, [r4, #140]	@ 0x8c
 801cbb4:	66e3      	str	r3, [r4, #108]	@ 0x6c
 801cbb6:	f8c4 3090 	str.w	r3, [r4, #144]	@ 0x90
 801cbba:	bd70      	pop	{r4, r5, r6, pc}
 801cbbc:	6883      	ldr	r3, [r0, #8]
 801cbbe:	2b00      	cmp	r3, #0
 801cbc0:	d0c1      	beq.n	801cb46 <context_reset+0xe>
 801cbc2:	f7e6 f971 	bl	8002ea8 <nema_buffer_destroy>
 801cbc6:	e7be      	b.n	801cb46 <context_reset+0xe>
 801cbc8:	20000148 	.word	0x20000148
 801cbcc:	20000154 	.word	0x20000154

0801cbd0 <nema_vg_get_context>:
 801cbd0:	4800      	ldr	r0, [pc, #0]	@ (801cbd4 <nema_vg_get_context+0x4>)
 801cbd2:	4770      	bx	lr
 801cbd4:	20000148 	.word	0x20000148

0801cbd8 <stencil_buffer_create>:
 801cbd8:	b538      	push	{r3, r4, r5, lr}
 801cbda:	4605      	mov	r5, r0
 801cbdc:	1cc8      	adds	r0, r1, #3
 801cbde:	bf48      	it	mi
 801cbe0:	1d88      	addmi	r0, r1, #6
 801cbe2:	1cd4      	adds	r4, r2, #3
 801cbe4:	bf48      	it	mi
 801cbe6:	1d94      	addmi	r4, r2, #6
 801cbe8:	1080      	asrs	r0, r0, #2
 801cbea:	0080      	lsls	r0, r0, #2
 801cbec:	f024 0203 	bic.w	r2, r4, #3
 801cbf0:	fb02 f200 	mul.w	r2, r2, r0
 801cbf4:	4619      	mov	r1, r3
 801cbf6:	4628      	mov	r0, r5
 801cbf8:	f7e6 f932 	bl	8002e60 <nema_buffer_create_pool>
 801cbfc:	4628      	mov	r0, r5
 801cbfe:	bd38      	pop	{r3, r4, r5, pc}

0801cc00 <stencil_buffer_set>:
 801cc00:	b082      	sub	sp, #8
 801cc02:	b470      	push	{r4, r5, r6}
 801cc04:	4606      	mov	r6, r0
 801cc06:	460d      	mov	r5, r1
 801cc08:	a803      	add	r0, sp, #12
 801cc0a:	e880 000c 	stmia.w	r0, {r2, r3}
 801cc0e:	4c15      	ldr	r4, [pc, #84]	@ (801cc64 <stencil_buffer_set+0x64>)
 801cc10:	c80f      	ldmia	r0, {r0, r1, r2, r3}
 801cc12:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 801cc16:	1cf3      	adds	r3, r6, #3
 801cc18:	bf48      	it	mi
 801cc1a:	1db3      	addmi	r3, r6, #6
 801cc1c:	1cea      	adds	r2, r5, #3
 801cc1e:	bf48      	it	mi
 801cc20:	1daa      	addmi	r2, r5, #6
 801cc22:	f022 0203 	bic.w	r2, r2, #3
 801cc26:	ee07 2a90 	vmov	s15, r2
 801cc2a:	f023 0303 	bic.w	r3, r3, #3
 801cc2e:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 801cc32:	ee07 3a90 	vmov	s15, r3
 801cc36:	2100      	movs	r1, #0
 801cc38:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801cc3c:	61a1      	str	r1, [r4, #24]
 801cc3e:	61e1      	str	r1, [r4, #28]
 801cc40:	6261      	str	r1, [r4, #36]	@ 0x24
 801cc42:	6321      	str	r1, [r4, #48]	@ 0x30
 801cc44:	4908      	ldr	r1, [pc, #32]	@ (801cc68 <stencil_buffer_set+0x68>)
 801cc46:	ed84 7a0b 	vstr	s14, [r4, #44]	@ 0x2c
 801cc4a:	600c      	str	r4, [r1, #0]
 801cc4c:	ed84 7a0d 	vstr	s14, [r4, #52]	@ 0x34
 801cc50:	edc4 7a08 	vstr	s15, [r4, #32]
 801cc54:	edc4 7a0a 	vstr	s15, [r4, #40]	@ 0x28
 801cc58:	e9c4 3204 	strd	r3, r2, [r4, #16]
 801cc5c:	bc70      	pop	{r4, r5, r6}
 801cc5e:	b002      	add	sp, #8
 801cc60:	4770      	bx	lr
 801cc62:	bf00      	nop
 801cc64:	20083438 	.word	0x20083438
 801cc68:	20000148 	.word	0x20000148

0801cc6c <nema_vg_get_stencil>:
 801cc6c:	4b01      	ldr	r3, [pc, #4]	@ (801cc74 <nema_vg_get_stencil+0x8>)
 801cc6e:	6818      	ldr	r0, [r3, #0]
 801cc70:	4770      	bx	lr
 801cc72:	bf00      	nop
 801cc74:	20000148 	.word	0x20000148

0801cc78 <lut_buffer_create>:
 801cc78:	b5f0      	push	{r4, r5, r6, r7, lr}
 801cc7a:	4d1a      	ldr	r5, [pc, #104]	@ (801cce4 <lut_buffer_create+0x6c>)
 801cc7c:	b085      	sub	sp, #20
 801cc7e:	69ac      	ldr	r4, [r5, #24]
 801cc80:	b10c      	cbz	r4, 801cc86 <lut_buffer_create+0xe>
 801cc82:	b005      	add	sp, #20
 801cc84:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801cc86:	466e      	mov	r6, sp
 801cc88:	f44f 7280 	mov.w	r2, #256	@ 0x100
 801cc8c:	4630      	mov	r0, r6
 801cc8e:	4621      	mov	r1, r4
 801cc90:	f7e6 f8e6 	bl	8002e60 <nema_buffer_create_pool>
 801cc94:	e896 000f 	ldmia.w	r6, {r0, r1, r2, r3}
 801cc98:	f105 060c 	add.w	r6, r5, #12
 801cc9c:	e886 000f 	stmia.w	r6, {r0, r1, r2, r3}
 801cca0:	4627      	mov	r7, r4
 801cca2:	4623      	mov	r3, r4
 801cca4:	696d      	ldr	r5, [r5, #20]
 801cca6:	26ff      	movs	r6, #255	@ 0xff
 801cca8:	e008      	b.n	801ccbc <lut_buffer_create+0x44>
 801ccaa:	2880      	cmp	r0, #128	@ 0x80
 801ccac:	f1c4 0100 	rsb	r1, r4, #0
 801ccb0:	d016      	beq.n	801cce0 <lut_buffer_create+0x68>
 801ccb2:	bfcc      	ite	gt
 801ccb4:	b2e1      	uxtbgt	r1, r4
 801ccb6:	b2c9      	uxtble	r1, r1
 801ccb8:	54a9      	strb	r1, [r5, r2]
 801ccba:	3410      	adds	r4, #16
 801ccbc:	ea44 1213 	orr.w	r2, r4, r3, lsr #4
 801ccc0:	3301      	adds	r3, #1
 801ccc2:	f1a3 0172 	sub.w	r1, r3, #114	@ 0x72
 801ccc6:	291e      	cmp	r1, #30
 801ccc8:	f103 30ff 	add.w	r0, r3, #4294967295
 801cccc:	b2d2      	uxtb	r2, r2
 801ccce:	d9ec      	bls.n	801ccaa <lut_buffer_create+0x32>
 801ccd0:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 801ccd4:	54ae      	strb	r6, [r5, r2]
 801ccd6:	d1f0      	bne.n	801ccba <lut_buffer_create+0x42>
 801ccd8:	f885 60ff 	strb.w	r6, [r5, #255]	@ 0xff
 801ccdc:	b005      	add	sp, #20
 801ccde:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801cce0:	54af      	strb	r7, [r5, r2]
 801cce2:	e7ea      	b.n	801ccba <lut_buffer_create+0x42>
 801cce4:	20000148 	.word	0x20000148

0801cce8 <nema_vg_set_fill_rule>:
 801cce8:	4b01      	ldr	r3, [pc, #4]	@ (801ccf0 <nema_vg_set_fill_rule+0x8>)
 801ccea:	7718      	strb	r0, [r3, #28]
 801ccec:	4770      	bx	lr
 801ccee:	bf00      	nop
 801ccf0:	20000148 	.word	0x20000148

0801ccf4 <nema_vg_set_error>:
 801ccf4:	4a02      	ldr	r2, [pc, #8]	@ (801cd00 <nema_vg_set_error+0xc>)
 801ccf6:	6a13      	ldr	r3, [r2, #32]
 801ccf8:	4318      	orrs	r0, r3
 801ccfa:	6210      	str	r0, [r2, #32]
 801ccfc:	4770      	bx	lr
 801ccfe:	bf00      	nop
 801cd00:	20000148 	.word	0x20000148

0801cd04 <nema_vg_set_blend>:
 801cd04:	4b01      	ldr	r3, [pc, #4]	@ (801cd0c <nema_vg_set_blend+0x8>)
 801cd06:	6258      	str	r0, [r3, #36]	@ 0x24
 801cd08:	4770      	bx	lr
 801cd0a:	bf00      	nop
 801cd0c:	20000148 	.word	0x20000148

0801cd10 <nema_vg_set_quality>:
 801cd10:	06c2      	lsls	r2, r0, #27
 801cd12:	bf4d      	iteet	mi
 801cd14:	2200      	movmi	r2, #0
 801cd16:	f04f 62f0 	movpl.w	r2, #125829120	@ 0x7800000
 801cd1a:	f04f 7100 	movpl.w	r1, #33554432	@ 0x2000000
 801cd1e:	4611      	movmi	r1, r2
 801cd20:	4b02      	ldr	r3, [pc, #8]	@ (801cd2c <nema_vg_set_quality+0x1c>)
 801cd22:	7758      	strb	r0, [r3, #29]
 801cd24:	e9c3 120a 	strd	r1, r2, [r3, #40]	@ 0x28
 801cd28:	4770      	bx	lr
 801cd2a:	bf00      	nop
 801cd2c:	20000148 	.word	0x20000148

0801cd30 <nema_vg_set_global_matrix>:
 801cd30:	2800      	cmp	r0, #0
 801cd32:	d034      	beq.n	801cd9e <nema_vg_set_global_matrix+0x6e>
 801cd34:	b510      	push	{r4, lr}
 801cd36:	4c1e      	ldr	r4, [pc, #120]	@ (801cdb0 <nema_vg_set_global_matrix+0x80>)
 801cd38:	6803      	ldr	r3, [r0, #0]
 801cd3a:	64e3      	str	r3, [r4, #76]	@ 0x4c
 801cd3c:	6803      	ldr	r3, [r0, #0]
 801cd3e:	6723      	str	r3, [r4, #112]	@ 0x70
 801cd40:	6843      	ldr	r3, [r0, #4]
 801cd42:	6523      	str	r3, [r4, #80]	@ 0x50
 801cd44:	6843      	ldr	r3, [r0, #4]
 801cd46:	6763      	str	r3, [r4, #116]	@ 0x74
 801cd48:	6883      	ldr	r3, [r0, #8]
 801cd4a:	6563      	str	r3, [r4, #84]	@ 0x54
 801cd4c:	6883      	ldr	r3, [r0, #8]
 801cd4e:	67a3      	str	r3, [r4, #120]	@ 0x78
 801cd50:	68c3      	ldr	r3, [r0, #12]
 801cd52:	65a3      	str	r3, [r4, #88]	@ 0x58
 801cd54:	68c3      	ldr	r3, [r0, #12]
 801cd56:	67e3      	str	r3, [r4, #124]	@ 0x7c
 801cd58:	6903      	ldr	r3, [r0, #16]
 801cd5a:	65e3      	str	r3, [r4, #92]	@ 0x5c
 801cd5c:	6903      	ldr	r3, [r0, #16]
 801cd5e:	f8c4 3080 	str.w	r3, [r4, #128]	@ 0x80
 801cd62:	6943      	ldr	r3, [r0, #20]
 801cd64:	6623      	str	r3, [r4, #96]	@ 0x60
 801cd66:	6943      	ldr	r3, [r0, #20]
 801cd68:	f8c4 3084 	str.w	r3, [r4, #132]	@ 0x84
 801cd6c:	6983      	ldr	r3, [r0, #24]
 801cd6e:	6663      	str	r3, [r4, #100]	@ 0x64
 801cd70:	6983      	ldr	r3, [r0, #24]
 801cd72:	f8c4 3088 	str.w	r3, [r4, #136]	@ 0x88
 801cd76:	69c3      	ldr	r3, [r0, #28]
 801cd78:	66a3      	str	r3, [r4, #104]	@ 0x68
 801cd7a:	69c3      	ldr	r3, [r0, #28]
 801cd7c:	f8c4 308c 	str.w	r3, [r4, #140]	@ 0x8c
 801cd80:	6a03      	ldr	r3, [r0, #32]
 801cd82:	66e3      	str	r3, [r4, #108]	@ 0x6c
 801cd84:	6a03      	ldr	r3, [r0, #32]
 801cd86:	f104 0070 	add.w	r0, r4, #112	@ 0x70
 801cd8a:	f8c4 3090 	str.w	r3, [r4, #144]	@ 0x90
 801cd8e:	f7f5 f84f 	bl	8011e30 <nema_mat3x3_invert>
 801cd92:	b950      	cbnz	r0, 801cdaa <nema_vg_set_global_matrix+0x7a>
 801cd94:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 801cd96:	f043 0301 	orr.w	r3, r3, #1
 801cd9a:	6323      	str	r3, [r4, #48]	@ 0x30
 801cd9c:	bd10      	pop	{r4, pc}
 801cd9e:	4a04      	ldr	r2, [pc, #16]	@ (801cdb0 <nema_vg_set_global_matrix+0x80>)
 801cda0:	6b13      	ldr	r3, [r2, #48]	@ 0x30
 801cda2:	f023 0301 	bic.w	r3, r3, #1
 801cda6:	6313      	str	r3, [r2, #48]	@ 0x30
 801cda8:	4770      	bx	lr
 801cdaa:	f44f 2080 	mov.w	r0, #262144	@ 0x40000
 801cdae:	bd10      	pop	{r4, pc}
 801cdb0:	20000148 	.word	0x20000148

0801cdb4 <nema_vg_handle_large_coords>:
 801cdb4:	4a08      	ldr	r2, [pc, #32]	@ (801cdd8 <nema_vg_handle_large_coords+0x24>)
 801cdb6:	6b13      	ldr	r3, [r2, #48]	@ 0x30
 801cdb8:	b130      	cbz	r0, 801cdc8 <nema_vg_handle_large_coords+0x14>
 801cdba:	f043 0304 	orr.w	r3, r3, #4
 801cdbe:	b939      	cbnz	r1, 801cdd0 <nema_vg_handle_large_coords+0x1c>
 801cdc0:	f023 0310 	bic.w	r3, r3, #16
 801cdc4:	6313      	str	r3, [r2, #48]	@ 0x30
 801cdc6:	4770      	bx	lr
 801cdc8:	f023 0304 	bic.w	r3, r3, #4
 801cdcc:	2900      	cmp	r1, #0
 801cdce:	d0f7      	beq.n	801cdc0 <nema_vg_handle_large_coords+0xc>
 801cdd0:	f043 0310 	orr.w	r3, r3, #16
 801cdd4:	6313      	str	r3, [r2, #48]	@ 0x30
 801cdd6:	4770      	bx	lr
 801cdd8:	20000148 	.word	0x20000148

0801cddc <nema_vg_paint_create>:
 801cddc:	b538      	push	{r3, r4, r5, lr}
 801cdde:	20e0      	movs	r0, #224	@ 0xe0
 801cde0:	f7e5 ffbc 	bl	8002d5c <nema_host_malloc>
 801cde4:	4604      	mov	r4, r0
 801cde6:	b1e8      	cbz	r0, 801ce24 <nema_vg_paint_create+0x48>
 801cde8:	2500      	movs	r5, #0
 801cdea:	f04f 537e 	mov.w	r3, #1065353216	@ 0x3f800000
 801cdee:	f04f 427f 	mov.w	r2, #4278190080	@ 0xff000000
 801cdf2:	f8c0 30d4 	str.w	r3, [r0, #212]	@ 0xd4
 801cdf6:	f8c0 30d8 	str.w	r3, [r0, #216]	@ 0xd8
 801cdfa:	f880 502c 	strb.w	r5, [r0, #44]	@ 0x2c
 801cdfe:	f880 50dd 	strb.w	r5, [r0, #221]	@ 0xdd
 801ce02:	f880 50d0 	strb.w	r5, [r0, #208]	@ 0xd0
 801ce06:	e9c0 250c 	strd	r2, r5, [r0, #48]	@ 0x30
 801ce0a:	e9c0 5500 	strd	r5, r5, [r0]
 801ce0e:	3038      	adds	r0, #56	@ 0x38
 801ce10:	f7f4 febe 	bl	8011b90 <nema_mat3x3_load_identity>
 801ce14:	f104 0008 	add.w	r0, r4, #8
 801ce18:	f7f4 feba 	bl	8011b90 <nema_mat3x3_load_identity>
 801ce1c:	f884 50dc 	strb.w	r5, [r4, #220]	@ 0xdc
 801ce20:	4620      	mov	r0, r4
 801ce22:	bd38      	pop	{r3, r4, r5, pc}
 801ce24:	2001      	movs	r0, #1
 801ce26:	f7ff ff65 	bl	801ccf4 <nema_vg_set_error>
 801ce2a:	4620      	mov	r0, r4
 801ce2c:	bd38      	pop	{r3, r4, r5, pc}
 801ce2e:	bf00      	nop

0801ce30 <nema_vg_paint_set_type>:
 801ce30:	b138      	cbz	r0, 801ce42 <nema_vg_paint_set_type+0x12>
 801ce32:	2904      	cmp	r1, #4
 801ce34:	d802      	bhi.n	801ce3c <nema_vg_paint_set_type+0xc>
 801ce36:	f880 10dd 	strb.w	r1, [r0, #221]	@ 0xdd
 801ce3a:	4770      	bx	lr
 801ce3c:	2008      	movs	r0, #8
 801ce3e:	f7ff bf59 	b.w	801ccf4 <nema_vg_set_error>
 801ce42:	2001      	movs	r0, #1
 801ce44:	f7ff bf56 	b.w	801ccf4 <nema_vg_set_error>

0801ce48 <nema_vg_paint_lock_tran_to_path>:
 801ce48:	b160      	cbz	r0, 801ce64 <nema_vg_paint_lock_tran_to_path+0x1c>
 801ce4a:	f890 30dc 	ldrb.w	r3, [r0, #220]	@ 0xdc
 801ce4e:	b121      	cbz	r1, 801ce5a <nema_vg_paint_lock_tran_to_path+0x12>
 801ce50:	f043 0301 	orr.w	r3, r3, #1
 801ce54:	f880 30dc 	strb.w	r3, [r0, #220]	@ 0xdc
 801ce58:	4770      	bx	lr
 801ce5a:	f023 0301 	bic.w	r3, r3, #1
 801ce5e:	f880 30dc 	strb.w	r3, [r0, #220]	@ 0xdc
 801ce62:	4770      	bx	lr
 801ce64:	2001      	movs	r0, #1
 801ce66:	f7ff bf45 	b.w	801ccf4 <nema_vg_set_error>
 801ce6a:	bf00      	nop

0801ce6c <nema_vg_grad_create>:
 801ce6c:	b530      	push	{r4, r5, lr}
 801ce6e:	2010      	movs	r0, #16
 801ce70:	b085      	sub	sp, #20
 801ce72:	f7e5 ff73 	bl	8002d5c <nema_host_malloc>
 801ce76:	466d      	mov	r5, sp
 801ce78:	4604      	mov	r4, r0
 801ce7a:	f44f 7280 	mov.w	r2, #256	@ 0x100
 801ce7e:	4628      	mov	r0, r5
 801ce80:	2100      	movs	r1, #0
 801ce82:	f7e5 ffed 	bl	8002e60 <nema_buffer_create_pool>
 801ce86:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
 801ce8a:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 801ce8e:	4620      	mov	r0, r4
 801ce90:	b005      	add	sp, #20
 801ce92:	bd30      	pop	{r4, r5, pc}

0801ce94 <nema_vg_grad_destroy>:
 801ce94:	b140      	cbz	r0, 801cea8 <nema_vg_grad_destroy+0x14>
 801ce96:	b510      	push	{r4, lr}
 801ce98:	4604      	mov	r4, r0
 801ce9a:	f7e6 f805 	bl	8002ea8 <nema_buffer_destroy>
 801ce9e:	4620      	mov	r0, r4
 801cea0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801cea4:	f7e5 bf58 	b.w	8002d58 <nema_host_free>
 801cea8:	4770      	bx	lr
 801ceaa:	bf00      	nop

0801ceac <nema_vg_grad_set>:
 801ceac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ceb0:	ed2d 8b10 	vpush	{d8-d15}
 801ceb4:	291f      	cmp	r1, #31
 801ceb6:	b091      	sub	sp, #68	@ 0x44
 801ceb8:	4680      	mov	r8, r0
 801ceba:	4615      	mov	r5, r2
 801cebc:	9304      	str	r3, [sp, #16]
 801cebe:	f300 8293 	bgt.w	801d3e8 <nema_vg_grad_set+0x53c>
 801cec2:	460f      	mov	r7, r1
 801cec4:	2100      	movs	r1, #0
 801cec6:	2601      	movs	r6, #1
 801cec8:	460c      	mov	r4, r1
 801ceca:	4608      	mov	r0, r1
 801cecc:	4633      	mov	r3, r6
 801cece:	2240      	movs	r2, #64	@ 0x40
 801ced0:	f7f4 f88c 	bl	8010fec <nema_set_clip_temp>
 801ced4:	f8d8 100c 	ldr.w	r1, [r8, #12]
 801ced8:	4633      	mov	r3, r6
 801ceda:	e9cd 4401 	strd	r4, r4, [sp, #4]
 801cede:	4630      	mov	r0, r6
 801cee0:	2240      	movs	r2, #64	@ 0x40
 801cee2:	9600      	str	r6, [sp, #0]
 801cee4:	f7f3 ff7e 	bl	8010de4 <nema_bind_tex>
 801cee8:	f04f 33ff 	mov.w	r3, #4294967295
 801ceec:	4631      	mov	r1, r6
 801ceee:	461a      	mov	r2, r3
 801cef0:	4630      	mov	r0, r6
 801cef2:	f001 f9d5 	bl	801e2a0 <nema_set_blend>
 801cef6:	4630      	mov	r0, r6
 801cef8:	f7f4 f8ae 	bl	8011058 <nema_enable_gradient>
 801cefc:	ed9f 6a80 	vldr	s12, [pc, #512]	@ 801d100 <nema_vg_grad_set+0x254>
 801cf00:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 801cf04:	4622      	mov	r2, r4
 801cf06:	4620      	mov	r0, r4
 801cf08:	eb05 0487 	add.w	r4, r5, r7, lsl #2
 801cf0c:	b912      	cbnz	r2, 801cf14 <nema_vg_grad_set+0x68>
 801cf0e:	2801      	cmp	r0, #1
 801cf10:	f340 80c3 	ble.w	801d09a <nema_vg_grad_set+0x1ee>
 801cf14:	eb05 0382 	add.w	r3, r5, r2, lsl #2
 801cf18:	3201      	adds	r2, #1
 801cf1a:	4297      	cmp	r7, r2
 801cf1c:	ed93 7a00 	vldr	s14, [r3]
 801cf20:	f340 80c0 	ble.w	801d0a4 <nema_vg_grad_set+0x1f8>
 801cf24:	0093      	lsls	r3, r2, #2
 801cf26:	18e9      	adds	r1, r5, r3
 801cf28:	edd1 7a00 	vldr	s15, [r1]
 801cf2c:	eef4 7ac7 	vcmpe.f32	s15, s14
 801cf30:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801cf34:	f100 80bc 	bmi.w	801d0b0 <nema_vg_grad_set+0x204>
 801cf38:	3304      	adds	r3, #4
 801cf3a:	442b      	add	r3, r5
 801cf3c:	4601      	mov	r1, r0
 801cf3e:	e00d      	b.n	801cf5c <nema_vg_grad_set+0xb0>
 801cf40:	42a3      	cmp	r3, r4
 801cf42:	f102 0201 	add.w	r2, r2, #1
 801cf46:	d022      	beq.n	801cf8e <nema_vg_grad_set+0xe2>
 801cf48:	ecb3 7a01 	vldmia	r3!, {s14}
 801cf4c:	eef4 7ac7 	vcmpe.f32	s15, s14
 801cf50:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801cf54:	f300 80ac 	bgt.w	801d0b0 <nema_vg_grad_set+0x204>
 801cf58:	eef0 7a47 	vmov.f32	s15, s14
 801cf5c:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801cf60:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801cf64:	dbec      	blt.n	801cf40 <nema_vg_grad_set+0x94>
 801cf66:	eef4 7ae6 	vcmpe.f32	s15, s13
 801cf6a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801cf6e:	d8e7      	bhi.n	801cf40 <nema_vg_grad_set+0x94>
 801cf70:	2900      	cmp	r1, #0
 801cf72:	f040 8082 	bne.w	801d07a <nema_vg_grad_set+0x1ce>
 801cf76:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801cf7a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801cf7e:	f300 8239 	bgt.w	801d3f4 <nema_vg_grad_set+0x548>
 801cf82:	42a3      	cmp	r3, r4
 801cf84:	f04f 0101 	mov.w	r1, #1
 801cf88:	f102 0201 	add.w	r2, r2, #1
 801cf8c:	d1dc      	bne.n	801cf48 <nema_vg_grad_set+0x9c>
 801cf8e:	2900      	cmp	r1, #0
 801cf90:	f340 808c 	ble.w	801d0ac <nema_vg_grad_set+0x200>
 801cf94:	eddf ca5e 	vldr	s25, [pc, #376]	@ 801d110 <nema_vg_grad_set+0x264>
 801cf98:	2600      	movs	r6, #0
 801cf9a:	f04f 0b01 	mov.w	fp, #1
 801cf9e:	eeb0 da6c 	vmov.f32	s26, s25
 801cfa2:	eef0 da6c 	vmov.f32	s27, s25
 801cfa6:	eeb0 ea6c 	vmov.f32	s28, s25
 801cfaa:	eeb0 aa6c 	vmov.f32	s20, s25
 801cfae:	eef0 8a6c 	vmov.f32	s17, s25
 801cfb2:	eeb0 9a6c 	vmov.f32	s18, s25
 801cfb6:	eef0 9a6c 	vmov.f32	s19, s25
 801cfba:	46b1      	mov	r9, r6
 801cfbc:	46b0      	mov	r8, r6
 801cfbe:	46da      	mov	sl, fp
 801cfc0:	eddf aa4f 	vldr	s21, [pc, #316]	@ 801d100 <nema_vg_grad_set+0x254>
 801cfc4:	eef7 ba00 	vmov.f32	s23, #112	@ 0x3f800000  1.0
 801cfc8:	ed9f ca4e 	vldr	s24, [pc, #312]	@ 801d104 <nema_vg_grad_set+0x258>
 801cfcc:	ed9f 8a50 	vldr	s16, [pc, #320]	@ 801d110 <nema_vg_grad_set+0x264>
 801cfd0:	f8cd b014 	str.w	fp, [sp, #20]
 801cfd4:	b91e      	cbnz	r6, 801cfde <nema_vg_grad_set+0x132>
 801cfd6:	f1b8 0f01 	cmp.w	r8, #1
 801cfda:	f340 8201 	ble.w	801d3e0 <nema_vg_grad_set+0x534>
 801cfde:	eb05 0386 	add.w	r3, r5, r6, lsl #2
 801cfe2:	ed93 7a00 	vldr	s14, [r3]
 801cfe6:	1c72      	adds	r2, r6, #1
 801cfe8:	4297      	cmp	r7, r2
 801cfea:	f340 817d 	ble.w	801d2e8 <nema_vg_grad_set+0x43c>
 801cfee:	0093      	lsls	r3, r2, #2
 801cff0:	18e9      	adds	r1, r5, r3
 801cff2:	edd1 7a00 	vldr	s15, [r1]
 801cff6:	eeb4 7ae7 	vcmpe.f32	s14, s15
 801cffa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801cffe:	f300 812d 	bgt.w	801d25c <nema_vg_grad_set+0x3b0>
 801d002:	3304      	adds	r3, #4
 801d004:	442b      	add	r3, r5
 801d006:	4641      	mov	r1, r8
 801d008:	e00c      	b.n	801d024 <nema_vg_grad_set+0x178>
 801d00a:	429c      	cmp	r4, r3
 801d00c:	f102 0201 	add.w	r2, r2, #1
 801d010:	d01f      	beq.n	801d052 <nema_vg_grad_set+0x1a6>
 801d012:	ecb3 7a01 	vldmia	r3!, {s14}
 801d016:	eef4 7ac7 	vcmpe.f32	s15, s14
 801d01a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801d01e:	dc7b      	bgt.n	801d118 <nema_vg_grad_set+0x26c>
 801d020:	eef0 7a47 	vmov.f32	s15, s14
 801d024:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801d028:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801d02c:	dbed      	blt.n	801d00a <nema_vg_grad_set+0x15e>
 801d02e:	eef4 7aeb 	vcmpe.f32	s15, s23
 801d032:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801d036:	d8e8      	bhi.n	801d00a <nema_vg_grad_set+0x15e>
 801d038:	bb39      	cbnz	r1, 801d08a <nema_vg_grad_set+0x1de>
 801d03a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801d03e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801d042:	f300 819c 	bgt.w	801d37e <nema_vg_grad_set+0x4d2>
 801d046:	429c      	cmp	r4, r3
 801d048:	f04f 0101 	mov.w	r1, #1
 801d04c:	f102 0201 	add.w	r2, r2, #1
 801d050:	d1df      	bne.n	801d012 <nema_vg_grad_set+0x166>
 801d052:	9b05      	ldr	r3, [sp, #20]
 801d054:	2b00      	cmp	r3, #0
 801d056:	f000 818d 	beq.w	801d374 <nema_vg_grad_set+0x4c8>
 801d05a:	2900      	cmp	r1, #0
 801d05c:	f340 81cc 	ble.w	801d3f8 <nema_vg_grad_set+0x54c>
 801d060:	eb05 0386 	add.w	r3, r5, r6, lsl #2
 801d064:	edd3 6a00 	vldr	s13, [r3]
 801d068:	eef4 6aeb 	vcmpe.f32	s13, s23
 801d06c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801d070:	f100 814a 	bmi.w	801d308 <nema_vg_grad_set+0x45c>
 801d074:	f8dd b014 	ldr.w	fp, [sp, #20]
 801d078:	e052      	b.n	801d120 <nema_vg_grad_set+0x274>
 801d07a:	3101      	adds	r1, #1
 801d07c:	2901      	cmp	r1, #1
 801d07e:	f77f af5f 	ble.w	801cf40 <nema_vg_grad_set+0x94>
 801d082:	4281      	cmp	r1, r0
 801d084:	d086      	beq.n	801cf94 <nema_vg_grad_set+0xe8>
 801d086:	4608      	mov	r0, r1
 801d088:	e740      	b.n	801cf0c <nema_vg_grad_set+0x60>
 801d08a:	3101      	adds	r1, #1
 801d08c:	2901      	cmp	r1, #1
 801d08e:	ddbc      	ble.n	801d00a <nema_vg_grad_set+0x15e>
 801d090:	46b1      	mov	r9, r6
 801d092:	f04f 0b00 	mov.w	fp, #0
 801d096:	4616      	mov	r6, r2
 801d098:	e042      	b.n	801d120 <nema_vg_grad_set+0x274>
 801d09a:	4297      	cmp	r7, r2
 801d09c:	eeb0 7a46 	vmov.f32	s14, s12
 801d0a0:	f73f af40 	bgt.w	801cf24 <nema_vg_grad_set+0x78>
 801d0a4:	4601      	mov	r1, r0
 801d0a6:	2900      	cmp	r1, #0
 801d0a8:	f73f af74 	bgt.w	801cf94 <nema_vg_grad_set+0xe8>
 801d0ac:	f47f af72 	bne.w	801cf94 <nema_vg_grad_set+0xe8>
 801d0b0:	4b15      	ldr	r3, [pc, #84]	@ (801d108 <nema_vg_grad_set+0x25c>)
 801d0b2:	ac0c      	add	r4, sp, #48	@ 0x30
 801d0b4:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 801d0b6:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 801d0ba:	2100      	movs	r1, #0
 801d0bc:	2500      	movs	r5, #0
 801d0be:	ab08      	add	r3, sp, #32
 801d0c0:	4e12      	ldr	r6, [pc, #72]	@ (801d10c <nema_vg_grad_set+0x260>)
 801d0c2:	4608      	mov	r0, r1
 801d0c4:	9300      	str	r3, [sp, #0]
 801d0c6:	2240      	movs	r2, #64	@ 0x40
 801d0c8:	2301      	movs	r3, #1
 801d0ca:	e9cd 4401 	strd	r4, r4, [sp, #4]
 801d0ce:	9508      	str	r5, [sp, #32]
 801d0d0:	9509      	str	r5, [sp, #36]	@ 0x24
 801d0d2:	950a      	str	r5, [sp, #40]	@ 0x28
 801d0d4:	960b      	str	r6, [sp, #44]	@ 0x2c
 801d0d6:	f7f4 fc5f 	bl	8011998 <nema_interpolate_rect_colors>
 801d0da:	f04f 33ff 	mov.w	r3, #4294967295
 801d0de:	2100      	movs	r1, #0
 801d0e0:	9300      	str	r3, [sp, #0]
 801d0e2:	4608      	mov	r0, r1
 801d0e4:	2301      	movs	r3, #1
 801d0e6:	2240      	movs	r2, #64	@ 0x40
 801d0e8:	f7f4 fa6c 	bl	80115c4 <nema_fill_rect>
 801d0ec:	2000      	movs	r0, #0
 801d0ee:	f7f3 ffb3 	bl	8011058 <nema_enable_gradient>
 801d0f2:	f7f3 ff93 	bl	801101c <nema_set_clip_pop>
 801d0f6:	b011      	add	sp, #68	@ 0x44
 801d0f8:	ecbd 8b10 	vpop	{d8-d15}
 801d0fc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d100:	c77fff00 	.word	0xc77fff00
 801d104:	427c0000 	.word	0x427c0000
 801d108:	080338c8 	.word	0x080338c8
 801d10c:	437f0000 	.word	0x437f0000
 801d110:	00000000 	.word	0x00000000
 801d114:	427e0000 	.word	0x427e0000
 801d118:	2300      	movs	r3, #0
 801d11a:	f04f 0b01 	mov.w	fp, #1
 801d11e:	9305      	str	r3, [sp, #20]
 801d120:	4588      	cmp	r8, r1
 801d122:	f000 809b 	beq.w	801d25c <nema_vg_grad_set+0x3b0>
 801d126:	eb05 0389 	add.w	r3, r5, r9, lsl #2
 801d12a:	edd3 6a00 	vldr	s13, [r3]
 801d12e:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 801d132:	ee26 7a8c 	vmul.f32	s14, s13, s24
 801d136:	ee37 7a27 	vadd.f32	s14, s14, s15
 801d13a:	eef0 7a66 	vmov.f32	s15, s13
 801d13e:	eefe 7acd 	vcvt.s32.f32	s15, s15, #6
 801d142:	9b04      	ldr	r3, [sp, #16]
 801d144:	45b1      	cmp	r9, r6
 801d146:	eb03 1309 	add.w	r3, r3, r9, lsl #4
 801d14a:	ee17 0a90 	vmov	r0, s15
 801d14e:	edd3 2a00 	vldr	s5, [r3]
 801d152:	edd3 3a01 	vldr	s7, [r3, #4]
 801d156:	ed93 6a03 	vldr	s12, [r3, #12]
 801d15a:	edd3 4a02 	vldr	s9, [r3, #8]
 801d15e:	f000 80f1 	beq.w	801d344 <nema_vg_grad_set+0x498>
 801d162:	eefd 7ac7 	vcvt.s32.f32	s15, s14
 801d166:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801d16a:	4688      	mov	r8, r1
 801d16c:	ee77 5a67 	vsub.f32	s11, s14, s15
 801d170:	eb05 0386 	add.w	r3, r5, r6, lsl #2
 801d174:	ed93 5a00 	vldr	s10, [r3]
 801d178:	ee65 6a0c 	vmul.f32	s13, s10, s24
 801d17c:	eebe 5acd 	vcvt.s32.f32	s10, s10, #6
 801d180:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 801d184:	9b04      	ldr	r3, [sp, #16]
 801d186:	ee76 7aa7 	vadd.f32	s15, s13, s15
 801d18a:	eb03 1306 	add.w	r3, r3, r6, lsl #4
 801d18e:	ed93 ea00 	vldr	s28, [r3]
 801d192:	edd3 da01 	vldr	s27, [r3, #4]
 801d196:	ed93 da02 	vldr	s26, [r3, #8]
 801d19a:	edd3 ca03 	vldr	s25, [r3, #12]
 801d19e:	ee15 3a10 	vmov	r3, s10
 801d1a2:	1a1a      	subs	r2, r3, r0
 801d1a4:	ee77 7ac7 	vsub.f32	s15, s15, s14
 801d1a8:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 801d1ac:	eef4 5ac7 	vcmpe.f32	s11, s14
 801d1b0:	ee3e 3a62 	vsub.f32	s6, s28, s5
 801d1b4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801d1b8:	ee3d 4ae3 	vsub.f32	s8, s27, s7
 801d1bc:	ee3d 5a64 	vsub.f32	s10, s26, s9
 801d1c0:	ee7c 6ac6 	vsub.f32	s13, s25, s12
 801d1c4:	ee83 2a27 	vdiv.f32	s4, s6, s15
 801d1c8:	ee84 3a27 	vdiv.f32	s6, s8, s15
 801d1cc:	ee85 4a27 	vdiv.f32	s8, s10, s15
 801d1d0:	ee86 5aa7 	vdiv.f32	s10, s13, s15
 801d1d4:	bfca      	itet	gt
 801d1d6:	eef7 7a08 	vmovgt.f32	s15, #120	@ 0x3fc00000  1.5
 801d1da:	ee77 7a65 	vsuble.f32	s15, s14, s11
 801d1de:	ee77 7ae5 	vsubgt.f32	s15, s15, s11
 801d1e2:	ee62 fa27 	vmul.f32	s31, s4, s15
 801d1e6:	ee23 7a27 	vmul.f32	s14, s6, s15
 801d1ea:	ee24 fa27 	vmul.f32	s30, s8, s15
 801d1ee:	ee65 7a27 	vmul.f32	s15, s10, s15
 801d1f2:	ee37 ba23 	vadd.f32	s22, s14, s7
 801d1f6:	ee77 ea86 	vadd.f32	s29, s15, s12
 801d1fa:	ee7f faa2 	vadd.f32	s31, s31, s5
 801d1fe:	ee3f fa24 	vadd.f32	s30, s30, s9
 801d202:	ed5f 4a3d 	vldr	s9, [pc, #-244]	@ 801d110 <nema_vg_grad_set+0x264>
 801d206:	eeb0 0a6f 	vmov.f32	s0, s31
 801d20a:	eef0 0a4b 	vmov.f32	s1, s22
 801d20e:	eef0 1a6e 	vmov.f32	s3, s29
 801d212:	eeb0 1a4f 	vmov.f32	s2, s30
 801d216:	eef0 3a64 	vmov.f32	s7, s9
 801d21a:	eef0 2a64 	vmov.f32	s5, s9
 801d21e:	eef0 5a48 	vmov.f32	s11, s16
 801d222:	e9cd 2006 	strd	r2, r0, [sp, #24]
 801d226:	f7f4 f961 	bl	80114ec <nema_set_gradient>
 801d22a:	e9dd 2006 	ldrd	r2, r0, [sp, #24]
 801d22e:	f04f 33ff 	mov.w	r3, #4294967295
 801d232:	2100      	movs	r1, #0
 801d234:	9300      	str	r3, [sp, #0]
 801d236:	2301      	movs	r3, #1
 801d238:	f7f4 f9c4 	bl	80115c4 <nema_fill_rect>
 801d23c:	f1ba 0f01 	cmp.w	sl, #1
 801d240:	d107      	bne.n	801d252 <nema_vg_grad_set+0x3a6>
 801d242:	eeb0 aa6e 	vmov.f32	s20, s29
 801d246:	eef0 8a4f 	vmov.f32	s17, s30
 801d24a:	eeb0 9a4b 	vmov.f32	s18, s22
 801d24e:	eef0 9a6f 	vmov.f32	s19, s31
 801d252:	f1bb 0f01 	cmp.w	fp, #1
 801d256:	46da      	mov	sl, fp
 801d258:	f47f aebc 	bne.w	801cfd4 <nema_vg_grad_set+0x128>
 801d25c:	2000      	movs	r0, #0
 801d25e:	f7f3 fefb 	bl	8011058 <nema_enable_gradient>
 801d262:	eefc 7aca 	vcvt.u32.f32	s15, s20
 801d266:	edcd 7a04 	vstr	s15, [sp, #16]
 801d26a:	eefc 7ae8 	vcvt.u32.f32	s15, s17
 801d26e:	edcd 7a05 	vstr	s15, [sp, #20]
 801d272:	eefc 7ac9 	vcvt.u32.f32	s15, s18
 801d276:	edcd 7a06 	vstr	s15, [sp, #24]
 801d27a:	eefc 7ae9 	vcvt.u32.f32	s15, s19
 801d27e:	edcd 7a07 	vstr	s15, [sp, #28]
 801d282:	f89d 3010 	ldrb.w	r3, [sp, #16]
 801d286:	f89d 2014 	ldrb.w	r2, [sp, #20]
 801d28a:	f89d 1018 	ldrb.w	r1, [sp, #24]
 801d28e:	f89d 001c 	ldrb.w	r0, [sp, #28]
 801d292:	f7f3 ff47 	bl	8011124 <nema_rgba>
 801d296:	2301      	movs	r3, #1
 801d298:	2100      	movs	r1, #0
 801d29a:	9000      	str	r0, [sp, #0]
 801d29c:	461a      	mov	r2, r3
 801d29e:	4608      	mov	r0, r1
 801d2a0:	f7f4 f990 	bl	80115c4 <nema_fill_rect>
 801d2a4:	eefc 7aec 	vcvt.u32.f32	s15, s25
 801d2a8:	edcd 7a04 	vstr	s15, [sp, #16]
 801d2ac:	eefc 7acd 	vcvt.u32.f32	s15, s26
 801d2b0:	edcd 7a05 	vstr	s15, [sp, #20]
 801d2b4:	eefc 7aed 	vcvt.u32.f32	s15, s27
 801d2b8:	edcd 7a06 	vstr	s15, [sp, #24]
 801d2bc:	eefc 7ace 	vcvt.u32.f32	s15, s28
 801d2c0:	edcd 7a07 	vstr	s15, [sp, #28]
 801d2c4:	f89d 3010 	ldrb.w	r3, [sp, #16]
 801d2c8:	f89d 2014 	ldrb.w	r2, [sp, #20]
 801d2cc:	f89d 1018 	ldrb.w	r1, [sp, #24]
 801d2d0:	f89d 001c 	ldrb.w	r0, [sp, #28]
 801d2d4:	f7f3 ff26 	bl	8011124 <nema_rgba>
 801d2d8:	2301      	movs	r3, #1
 801d2da:	9000      	str	r0, [sp, #0]
 801d2dc:	461a      	mov	r2, r3
 801d2de:	2100      	movs	r1, #0
 801d2e0:	203f      	movs	r0, #63	@ 0x3f
 801d2e2:	f7f4 f96f 	bl	80115c4 <nema_fill_rect>
 801d2e6:	e701      	b.n	801d0ec <nema_vg_grad_set+0x240>
 801d2e8:	9b05      	ldr	r3, [sp, #20]
 801d2ea:	2b00      	cmp	r3, #0
 801d2ec:	d0b6      	beq.n	801d25c <nema_vg_grad_set+0x3b0>
 801d2ee:	f1b8 0f00 	cmp.w	r8, #0
 801d2f2:	ddb3      	ble.n	801d25c <nema_vg_grad_set+0x3b0>
 801d2f4:	eb05 0386 	add.w	r3, r5, r6, lsl #2
 801d2f8:	edd3 6a00 	vldr	s13, [r3]
 801d2fc:	eef4 6aeb 	vcmpe.f32	s13, s23
 801d300:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801d304:	d5aa      	bpl.n	801d25c <nema_vg_grad_set+0x3b0>
 801d306:	4641      	mov	r1, r8
 801d308:	3101      	adds	r1, #1
 801d30a:	4541      	cmp	r1, r8
 801d30c:	d0a6      	beq.n	801d25c <nema_vg_grad_set+0x3b0>
 801d30e:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 801d312:	ee26 7a8c 	vmul.f32	s14, s13, s24
 801d316:	ee37 7a27 	vadd.f32	s14, s14, s15
 801d31a:	eef0 7a66 	vmov.f32	s15, s13
 801d31e:	eefe 7acd 	vcvt.s32.f32	s15, s15, #6
 801d322:	9b04      	ldr	r3, [sp, #16]
 801d324:	f04f 0b01 	mov.w	fp, #1
 801d328:	eb03 1306 	add.w	r3, r3, r6, lsl #4
 801d32c:	ed93 6a03 	vldr	s12, [r3, #12]
 801d330:	edd3 2a00 	vldr	s5, [r3]
 801d334:	edd3 3a01 	vldr	s7, [r3, #4]
 801d338:	edd3 4a02 	vldr	s9, [r3, #8]
 801d33c:	ee17 0a90 	vmov	r0, s15
 801d340:	f8cd b014 	str.w	fp, [sp, #20]
 801d344:	2902      	cmp	r1, #2
 801d346:	d037      	beq.n	801d3b8 <nema_vg_grad_set+0x50c>
 801d348:	eefd 7ac7 	vcvt.s32.f32	s15, s14
 801d34c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801d350:	4688      	mov	r8, r1
 801d352:	ee77 5a67 	vsub.f32	s11, s14, s15
 801d356:	dd10      	ble.n	801d37a <nema_vg_grad_set+0x4ce>
 801d358:	f1c0 0240 	rsb	r2, r0, #64	@ 0x40
 801d35c:	46b1      	mov	r9, r6
 801d35e:	eef0 ca46 	vmov.f32	s25, s12
 801d362:	eeb0 da64 	vmov.f32	s26, s9
 801d366:	eef0 da63 	vmov.f32	s27, s7
 801d36a:	eeb0 ea62 	vmov.f32	s28, s5
 801d36e:	ed5f 7a97 	vldr	s15, [pc, #-604]	@ 801d114 <nema_vg_grad_set+0x268>
 801d372:	e717      	b.n	801d1a4 <nema_vg_grad_set+0x2f8>
 801d374:	f04f 0b01 	mov.w	fp, #1
 801d378:	e6d2      	b.n	801d120 <nema_vg_grad_set+0x274>
 801d37a:	46b1      	mov	r9, r6
 801d37c:	e6f8      	b.n	801d170 <nema_vg_grad_set+0x2c4>
 801d37e:	f1b8 0f02 	cmp.w	r8, #2
 801d382:	f43f af6b 	beq.w	801d25c <nema_vg_grad_set+0x3b0>
 801d386:	ee67 6a8c 	vmul.f32	s13, s15, s24
 801d38a:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 801d38e:	ee36 7a87 	vadd.f32	s14, s13, s14
 801d392:	eef0 6a67 	vmov.f32	s13, s15
 801d396:	eefe 6acd 	vcvt.s32.f32	s13, s13, #6
 801d39a:	9b04      	ldr	r3, [sp, #16]
 801d39c:	468b      	mov	fp, r1
 801d39e:	eb03 1302 	add.w	r3, r3, r2, lsl #4
 801d3a2:	4616      	mov	r6, r2
 801d3a4:	edd3 3a01 	vldr	s7, [r3, #4]
 801d3a8:	edd3 2a00 	vldr	s5, [r3]
 801d3ac:	ed93 6a03 	vldr	s12, [r3, #12]
 801d3b0:	edd3 4a02 	vldr	s9, [r3, #8]
 801d3b4:	ee16 0a90 	vmov	r0, s13
 801d3b8:	eef6 5a00 	vmov.f32	s11, #96	@ 0x3f000000  0.5
 801d3bc:	4602      	mov	r2, r0
 801d3be:	eef0 7a47 	vmov.f32	s15, s14
 801d3c2:	46b1      	mov	r9, r6
 801d3c4:	eeb0 7a65 	vmov.f32	s14, s11
 801d3c8:	eef0 ca46 	vmov.f32	s25, s12
 801d3cc:	eeb0 da64 	vmov.f32	s26, s9
 801d3d0:	eef0 da63 	vmov.f32	s27, s7
 801d3d4:	eeb0 ea62 	vmov.f32	s28, s5
 801d3d8:	2000      	movs	r0, #0
 801d3da:	f04f 0802 	mov.w	r8, #2
 801d3de:	e6e1      	b.n	801d1a4 <nema_vg_grad_set+0x2f8>
 801d3e0:	4632      	mov	r2, r6
 801d3e2:	eeb0 7a6a 	vmov.f32	s14, s21
 801d3e6:	e5ff      	b.n	801cfe8 <nema_vg_grad_set+0x13c>
 801d3e8:	f44f 2000 	mov.w	r0, #524288	@ 0x80000
 801d3ec:	f7ff fc82 	bl	801ccf4 <nema_vg_set_error>
 801d3f0:	2720      	movs	r7, #32
 801d3f2:	e567      	b.n	801cec4 <nema_vg_grad_set+0x18>
 801d3f4:	2102      	movs	r1, #2
 801d3f6:	e644      	b.n	801d082 <nema_vg_grad_set+0x1d6>
 801d3f8:	469b      	mov	fp, r3
 801d3fa:	e691      	b.n	801d120 <nema_vg_grad_set+0x274>

0801d3fc <nema_vg_paint_set_grad_linear>:
 801d3fc:	2800      	cmp	r0, #0
 801d3fe:	d065      	beq.n	801d4cc <nema_vg_paint_set_grad_linear+0xd0>
 801d400:	b510      	push	{r4, lr}
 801d402:	ed2d 8b06 	vpush	{d8-d10}
 801d406:	ee31 8ae0 	vsub.f32	s16, s3, s1
 801d40a:	ee71 8a40 	vsub.f32	s17, s2, s0
 801d40e:	ee68 7a08 	vmul.f32	s15, s16, s16
 801d412:	eeb0 9a40 	vmov.f32	s18, s0
 801d416:	ee28 0aa8 	vmul.f32	s0, s17, s17
 801d41a:	f002 030c 	and.w	r3, r2, #12
 801d41e:	2b08      	cmp	r3, #8
 801d420:	bf08      	it	eq
 801d422:	f002 0201 	andeq.w	r2, r2, #1
 801d426:	f002 020f 	and.w	r2, r2, #15
 801d42a:	f880 20d0 	strb.w	r2, [r0, #208]	@ 0xd0
 801d42e:	6341      	str	r1, [r0, #52]	@ 0x34
 801d430:	ee30 0a27 	vadd.f32	s0, s0, s15
 801d434:	eef0 9a60 	vmov.f32	s19, s1
 801d438:	4604      	mov	r4, r0
 801d43a:	f7f4 fb7f 	bl	8011b3c <nema_sqrt>
 801d43e:	eeb5 0a40 	vcmp.f32	s0, #0.0
 801d442:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801d446:	f04f 0300 	mov.w	r3, #0
 801d44a:	d10e      	bne.n	801d46a <nema_vg_paint_set_grad_linear+0x6e>
 801d44c:	f04f 527e 	mov.w	r2, #1065353216	@ 0x3f800000
 801d450:	4920      	ldr	r1, [pc, #128]	@ (801d4d4 <nema_vg_paint_set_grad_linear+0xd8>)
 801d452:	63a3      	str	r3, [r4, #56]	@ 0x38
 801d454:	63e3      	str	r3, [r4, #60]	@ 0x3c
 801d456:	6463      	str	r3, [r4, #68]	@ 0x44
 801d458:	64a3      	str	r3, [r4, #72]	@ 0x48
 801d45a:	64e3      	str	r3, [r4, #76]	@ 0x4c
 801d45c:	6523      	str	r3, [r4, #80]	@ 0x50
 801d45e:	6563      	str	r3, [r4, #84]	@ 0x54
 801d460:	6421      	str	r1, [r4, #64]	@ 0x40
 801d462:	65a2      	str	r2, [r4, #88]	@ 0x58
 801d464:	ecbd 8b06 	vpop	{d8-d10}
 801d468:	bd10      	pop	{r4, pc}
 801d46a:	ee88 aa80 	vdiv.f32	s20, s17, s0
 801d46e:	eddf 7a1a 	vldr	s15, [pc, #104]	@ 801d4d8 <nema_vg_paint_set_grad_linear+0xdc>
 801d472:	eec8 8a00 	vdiv.f32	s17, s16, s0
 801d476:	f104 0038 	add.w	r0, r4, #56	@ 0x38
 801d47a:	ee87 8a80 	vdiv.f32	s16, s15, s0
 801d47e:	f7f4 fb87 	bl	8011b90 <nema_mat3x3_load_identity>
 801d482:	ee29 7aa8 	vmul.f32	s14, s19, s17
 801d486:	ee69 7a4a 	vnmul.f32	s15, s18, s20
 801d48a:	ee69 9a8a 	vmul.f32	s19, s19, s20
 801d48e:	ee29 9a28 	vmul.f32	s18, s18, s17
 801d492:	ee77 7ac7 	vsub.f32	s15, s15, s14
 801d496:	ee39 9a69 	vsub.f32	s18, s18, s19
 801d49a:	ee28 aa0a 	vmul.f32	s20, s16, s20
 801d49e:	ee28 7a28 	vmul.f32	s14, s16, s17
 801d4a2:	ee67 7a88 	vmul.f32	s15, s15, s16
 801d4a6:	ee29 9a08 	vmul.f32	s18, s18, s16
 801d4aa:	ee68 8ac8 	vnmul.f32	s17, s17, s16
 801d4ae:	edc4 7a10 	vstr	s15, [r4, #64]	@ 0x40
 801d4b2:	ed84 9a13 	vstr	s18, [r4, #76]	@ 0x4c
 801d4b6:	ed84 aa0e 	vstr	s20, [r4, #56]	@ 0x38
 801d4ba:	ed84 aa12 	vstr	s20, [r4, #72]	@ 0x48
 801d4be:	ed84 7a0f 	vstr	s14, [r4, #60]	@ 0x3c
 801d4c2:	edc4 8a11 	vstr	s17, [r4, #68]	@ 0x44
 801d4c6:	ecbd 8b06 	vpop	{d8-d10}
 801d4ca:	bd10      	pop	{r4, pc}
 801d4cc:	2001      	movs	r0, #1
 801d4ce:	f7ff bc11 	b.w	801ccf4 <nema_vg_set_error>
 801d4d2:	bf00      	nop
 801d4d4:	427e0000 	.word	0x427e0000
 801d4d8:	42800000 	.word	0x42800000

0801d4dc <nema_vg_paint_set_grad_radial>:
 801d4dc:	2800      	cmp	r0, #0
 801d4de:	d03f      	beq.n	801d560 <nema_vg_paint_set_grad_radial+0x84>
 801d4e0:	eeb5 1ac0 	vcmpe.f32	s2, #0.0
 801d4e4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801d4e8:	6341      	str	r1, [r0, #52]	@ 0x34
 801d4ea:	f880 20d0 	strb.w	r2, [r0, #208]	@ 0xd0
 801d4ee:	d421      	bmi.n	801d534 <nema_vg_paint_set_grad_radial+0x58>
 801d4f0:	eddf 7a1d 	vldr	s15, [pc, #116]	@ 801d568 <nema_vg_paint_set_grad_radial+0x8c>
 801d4f4:	eeb4 1ae7 	vcmpe.f32	s2, s15
 801d4f8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801d4fc:	d922      	bls.n	801d544 <nema_vg_paint_set_grad_radial+0x68>
 801d4fe:	ed9f 7a1b 	vldr	s14, [pc, #108]	@ 801d56c <nema_vg_paint_set_grad_radial+0x90>
 801d502:	eec7 7a01 	vdiv.f32	s15, s14, s2
 801d506:	2300      	movs	r3, #0
 801d508:	ee20 0a27 	vmul.f32	s0, s0, s15
 801d50c:	ee60 0aa7 	vmul.f32	s1, s1, s15
 801d510:	f04f 527e 	mov.w	r2, #1065353216	@ 0x3f800000
 801d514:	eef1 7a67 	vneg.f32	s15, s15
 801d518:	ed80 0a10 	vstr	s0, [r0, #64]	@ 0x40
 801d51c:	edc0 0a13 	vstr	s1, [r0, #76]	@ 0x4c
 801d520:	edc0 7a0e 	vstr	s15, [r0, #56]	@ 0x38
 801d524:	edc0 7a12 	vstr	s15, [r0, #72]	@ 0x48
 801d528:	63c3      	str	r3, [r0, #60]	@ 0x3c
 801d52a:	6443      	str	r3, [r0, #68]	@ 0x44
 801d52c:	6503      	str	r3, [r0, #80]	@ 0x50
 801d52e:	6543      	str	r3, [r0, #84]	@ 0x54
 801d530:	6582      	str	r2, [r0, #88]	@ 0x58
 801d532:	4770      	bx	lr
 801d534:	eddf 7a0e 	vldr	s15, [pc, #56]	@ 801d570 <nema_vg_paint_set_grad_radial+0x94>
 801d538:	eeb4 1ae7 	vcmpe.f32	s2, s15
 801d53c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801d540:	da00      	bge.n	801d544 <nema_vg_paint_set_grad_radial+0x68>
 801d542:	dbdc      	blt.n	801d4fe <nema_vg_paint_set_grad_radial+0x22>
 801d544:	2300      	movs	r3, #0
 801d546:	f04f 527e 	mov.w	r2, #1065353216	@ 0x3f800000
 801d54a:	490a      	ldr	r1, [pc, #40]	@ (801d574 <nema_vg_paint_set_grad_radial+0x98>)
 801d54c:	6383      	str	r3, [r0, #56]	@ 0x38
 801d54e:	63c3      	str	r3, [r0, #60]	@ 0x3c
 801d550:	6443      	str	r3, [r0, #68]	@ 0x44
 801d552:	6483      	str	r3, [r0, #72]	@ 0x48
 801d554:	64c3      	str	r3, [r0, #76]	@ 0x4c
 801d556:	6503      	str	r3, [r0, #80]	@ 0x50
 801d558:	6543      	str	r3, [r0, #84]	@ 0x54
 801d55a:	6401      	str	r1, [r0, #64]	@ 0x40
 801d55c:	6582      	str	r2, [r0, #88]	@ 0x58
 801d55e:	4770      	bx	lr
 801d560:	2001      	movs	r0, #1
 801d562:	f7ff bbc7 	b.w	801ccf4 <nema_vg_set_error>
 801d566:	bf00      	nop
 801d568:	3727c5ac 	.word	0x3727c5ac
 801d56c:	42800000 	.word	0x42800000
 801d570:	b727c5ac 	.word	0xb727c5ac
 801d574:	427e0000 	.word	0x427e0000

0801d578 <nema_vg_paint_set_paint_color>:
 801d578:	b108      	cbz	r0, 801d57e <nema_vg_paint_set_paint_color+0x6>
 801d57a:	6301      	str	r1, [r0, #48]	@ 0x30
 801d57c:	4770      	bx	lr
 801d57e:	2001      	movs	r0, #1
 801d580:	f7ff bbb8 	b.w	801ccf4 <nema_vg_set_error>

0801d584 <nema_vg_paint_set_opacity>:
 801d584:	b110      	cbz	r0, 801d58c <nema_vg_paint_set_opacity+0x8>
 801d586:	ed80 0a36 	vstr	s0, [r0, #216]	@ 0xd8
 801d58a:	4770      	bx	lr
 801d58c:	2001      	movs	r0, #1
 801d58e:	f7ff bbb1 	b.w	801ccf4 <nema_vg_set_error>
 801d592:	bf00      	nop

0801d594 <nema_vg_paint_set_stroke_width>:
 801d594:	b110      	cbz	r0, 801d59c <nema_vg_paint_set_stroke_width+0x8>
 801d596:	ed80 0a35 	vstr	s0, [r0, #212]	@ 0xd4
 801d59a:	4770      	bx	lr
 801d59c:	2001      	movs	r0, #1
 801d59e:	f7ff bba9 	b.w	801ccf4 <nema_vg_set_error>
 801d5a2:	bf00      	nop

0801d5a4 <bind_tex1_according_paint>:
 801d5a4:	b570      	push	{r4, r5, r6, lr}
 801d5a6:	f890 30dd 	ldrb.w	r3, [r0, #221]	@ 0xdd
 801d5aa:	b084      	sub	sp, #16
 801d5ac:	3b01      	subs	r3, #1
 801d5ae:	4604      	mov	r4, r0
 801d5b0:	2b03      	cmp	r3, #3
 801d5b2:	d81b      	bhi.n	801d5ec <bind_tex1_according_paint+0x48>
 801d5b4:	e8df f003 	tbb	[pc, r3]
 801d5b8:	281c0228 	.word	0x281c0228
 801d5bc:	6805      	ldr	r5, [r0, #0]
 801d5be:	2d00      	cmp	r5, #0
 801d5c0:	d050      	beq.n	801d664 <bind_tex1_according_paint+0xc0>
 801d5c2:	f890 302c 	ldrb.w	r3, [r0, #44]	@ 0x2c
 801d5c6:	2b00      	cmp	r3, #0
 801d5c8:	d03f      	beq.n	801d64a <bind_tex1_according_paint+0xa6>
 801d5ca:	6844      	ldr	r4, [r0, #4]
 801d5cc:	2c00      	cmp	r4, #0
 801d5ce:	d049      	beq.n	801d664 <bind_tex1_according_paint+0xc0>
 801d5d0:	7f26      	ldrb	r6, [r4, #28]
 801d5d2:	7f2b      	ldrb	r3, [r5, #28]
 801d5d4:	8a6a      	ldrh	r2, [r5, #18]
 801d5d6:	8a29      	ldrh	r1, [r5, #16]
 801d5d8:	68e8      	ldr	r0, [r5, #12]
 801d5da:	9603      	str	r6, [sp, #12]
 801d5dc:	68e4      	ldr	r4, [r4, #12]
 801d5de:	9402      	str	r4, [sp, #8]
 801d5e0:	7f6c      	ldrb	r4, [r5, #29]
 801d5e2:	9401      	str	r4, [sp, #4]
 801d5e4:	696c      	ldr	r4, [r5, #20]
 801d5e6:	9400      	str	r4, [sp, #0]
 801d5e8:	f7f3 ff1e 	bl	8011428 <nema_bind_lut_tex>
 801d5ec:	b004      	add	sp, #16
 801d5ee:	bd70      	pop	{r4, r5, r6, pc}
 801d5f0:	f7f4 fe38 	bl	8012264 <nema_readHwConfigH>
 801d5f4:	f410 7580 	ands.w	r5, r0, #256	@ 0x100
 801d5f8:	d116      	bne.n	801d628 <bind_tex1_according_paint+0x84>
 801d5fa:	2020      	movs	r0, #32
 801d5fc:	f7ff fb7a 	bl	801ccf4 <nema_vg_set_error>
 801d600:	f884 50dd 	strb.w	r5, [r4, #221]	@ 0xdd
 801d604:	b004      	add	sp, #16
 801d606:	bd70      	pop	{r4, r5, r6, pc}
 801d608:	2301      	movs	r3, #1
 801d60a:	2000      	movs	r0, #0
 801d60c:	f894 20d0 	ldrb.w	r2, [r4, #208]	@ 0xd0
 801d610:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 801d612:	431a      	orrs	r2, r3
 801d614:	68c9      	ldr	r1, [r1, #12]
 801d616:	e9cd 0201 	strd	r0, r2, [sp, #4]
 801d61a:	9300      	str	r3, [sp, #0]
 801d61c:	4618      	mov	r0, r3
 801d61e:	2240      	movs	r2, #64	@ 0x40
 801d620:	f7f3 fbe0 	bl	8010de4 <nema_bind_tex>
 801d624:	b004      	add	sp, #16
 801d626:	bd70      	pop	{r4, r5, r6, pc}
 801d628:	2201      	movs	r2, #1
 801d62a:	2004      	movs	r0, #4
 801d62c:	f894 30d0 	ldrb.w	r3, [r4, #208]	@ 0xd0
 801d630:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 801d632:	f043 0381 	orr.w	r3, r3, #129	@ 0x81
 801d636:	68c9      	ldr	r1, [r1, #12]
 801d638:	e9cd 0301 	strd	r0, r3, [sp, #4]
 801d63c:	9200      	str	r2, [sp, #0]
 801d63e:	4610      	mov	r0, r2
 801d640:	2340      	movs	r3, #64	@ 0x40
 801d642:	f7f3 fbcf 	bl	8010de4 <nema_bind_tex>
 801d646:	b004      	add	sp, #16
 801d648:	bd70      	pop	{r4, r5, r6, pc}
 801d64a:	7f68      	ldrb	r0, [r5, #29]
 801d64c:	8a6b      	ldrh	r3, [r5, #18]
 801d64e:	8a2a      	ldrh	r2, [r5, #16]
 801d650:	68e9      	ldr	r1, [r5, #12]
 801d652:	9002      	str	r0, [sp, #8]
 801d654:	6968      	ldr	r0, [r5, #20]
 801d656:	9001      	str	r0, [sp, #4]
 801d658:	7f28      	ldrb	r0, [r5, #28]
 801d65a:	9000      	str	r0, [sp, #0]
 801d65c:	2001      	movs	r0, #1
 801d65e:	f7f3 fbc1 	bl	8010de4 <nema_bind_tex>
 801d662:	e7c3      	b.n	801d5ec <bind_tex1_according_paint+0x48>
 801d664:	2002      	movs	r0, #2
 801d666:	b004      	add	sp, #16
 801d668:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801d66c:	f7ff bb42 	b.w	801ccf4 <nema_vg_set_error>

0801d670 <nema_vg_path_clear>:
 801d670:	b118      	cbz	r0, 801d67a <nema_vg_path_clear+0xa>
 801d672:	2300      	movs	r3, #0
 801d674:	f8c0 3084 	str.w	r3, [r0, #132]	@ 0x84
 801d678:	4770      	bx	lr
 801d67a:	2001      	movs	r0, #1
 801d67c:	f7ff bb3a 	b.w	801ccf4 <nema_vg_set_error>

0801d680 <nema_vg_path_create>:
 801d680:	b508      	push	{r3, lr}
 801d682:	2088      	movs	r0, #136	@ 0x88
 801d684:	f7e5 fb6a 	bl	8002d5c <nema_host_malloc>
 801d688:	2200      	movs	r2, #0
 801d68a:	f8c0 2084 	str.w	r2, [r0, #132]	@ 0x84
 801d68e:	bd08      	pop	{r3, pc}

0801d690 <nema_vg_path_set_shape_and_bbox>:
 801d690:	b430      	push	{r4, r5}
 801d692:	e9dd 5402 	ldrd	r5, r4, [sp, #8]
 801d696:	2800      	cmp	r0, #0
 801d698:	d065      	beq.n	801d766 <nema_vg_path_set_shape_and_bbox+0xd6>
 801d69a:	e9c0 1300 	strd	r1, r3, [r0]
 801d69e:	e9c0 2502 	strd	r2, r5, [r0, #8]
 801d6a2:	edd4 7a00 	vldr	s15, [r4]
 801d6a6:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 801d6aa:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 801d6ae:	eef4 7ae6 	vcmpe.f32	s15, s13
 801d6b2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801d6b6:	ee17 2a10 	vmov	r2, s14
 801d6ba:	bf4c      	ite	mi
 801d6bc:	2301      	movmi	r3, #1
 801d6be:	2300      	movpl	r3, #0
 801d6c0:	1ad3      	subs	r3, r2, r3
 801d6c2:	ee07 3a10 	vmov	s14, r3
 801d6c6:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 801d6ca:	edc0 6a04 	vstr	s13, [r0, #16]
 801d6ce:	ed94 7a01 	vldr	s14, [r4, #4]
 801d6d2:	eefd 7ac7 	vcvt.s32.f32	s15, s14
 801d6d6:	eeb8 6ae7 	vcvt.f32.s32	s12, s15
 801d6da:	eeb4 7ac6 	vcmpe.f32	s14, s12
 801d6de:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801d6e2:	ee17 2a90 	vmov	r2, s15
 801d6e6:	bf4c      	ite	mi
 801d6e8:	2301      	movmi	r3, #1
 801d6ea:	2300      	movpl	r3, #0
 801d6ec:	1ad3      	subs	r3, r2, r3
 801d6ee:	ee07 3a90 	vmov	s15, r3
 801d6f2:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801d6f6:	edc0 7a05 	vstr	s15, [r0, #20]
 801d6fa:	ed94 6a02 	vldr	s12, [r4, #8]
 801d6fe:	eebd 7ac6 	vcvt.s32.f32	s14, s12
 801d702:	eef8 5ac7 	vcvt.f32.s32	s11, s14
 801d706:	eeb4 6ae5 	vcmpe.f32	s12, s11
 801d70a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801d70e:	ee17 2a10 	vmov	r2, s14
 801d712:	bfcc      	ite	gt
 801d714:	2301      	movgt	r3, #1
 801d716:	2300      	movle	r3, #0
 801d718:	4413      	add	r3, r2
 801d71a:	ee07 3a10 	vmov	s14, r3
 801d71e:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801d722:	ed80 7a06 	vstr	s14, [r0, #24]
 801d726:	edd4 5a03 	vldr	s11, [r4, #12]
 801d72a:	eebd 6ae5 	vcvt.s32.f32	s12, s11
 801d72e:	eeb8 5ac6 	vcvt.f32.s32	s10, s12
 801d732:	eef4 5ac5 	vcmpe.f32	s11, s10
 801d736:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801d73a:	ee16 2a10 	vmov	r2, s12
 801d73e:	bfcc      	ite	gt
 801d740:	2301      	movgt	r3, #1
 801d742:	2300      	movle	r3, #0
 801d744:	4413      	add	r3, r2
 801d746:	ee06 3a10 	vmov	s12, r3
 801d74a:	eeb8 6ac6 	vcvt.f32.s32	s12, s12
 801d74e:	ee37 7a66 	vsub.f32	s14, s14, s13
 801d752:	ee76 7a67 	vsub.f32	s15, s12, s15
 801d756:	ed80 7a08 	vstr	s14, [r0, #32]
 801d75a:	edc0 7a09 	vstr	s15, [r0, #36]	@ 0x24
 801d75e:	ed80 6a07 	vstr	s12, [r0, #28]
 801d762:	bc30      	pop	{r4, r5}
 801d764:	4770      	bx	lr
 801d766:	2001      	movs	r0, #1
 801d768:	bc30      	pop	{r4, r5}
 801d76a:	f7ff bac3 	b.w	801ccf4 <nema_vg_set_error>
 801d76e:	bf00      	nop

0801d770 <nema_vg_path_set_shape>:
 801d770:	b430      	push	{r4, r5}
 801d772:	9d02      	ldr	r5, [sp, #8]
 801d774:	b130      	cbz	r0, 801d784 <nema_vg_path_set_shape+0x14>
 801d776:	e9c0 2502 	strd	r2, r5, [r0, #8]
 801d77a:	e9c0 1300 	strd	r1, r3, [r0]
 801d77e:	bc30      	pop	{r4, r5}
 801d780:	f001 b966 	b.w	801ea50 <calculate_aabb_per_shape>
 801d784:	2001      	movs	r0, #1
 801d786:	bc30      	pop	{r4, r5}
 801d788:	f7ff bab4 	b.w	801ccf4 <nema_vg_set_error>

0801d78c <nema_vg_path_set_matrix>:
 801d78c:	2800      	cmp	r0, #0
 801d78e:	d063      	beq.n	801d858 <nema_vg_path_set_matrix+0xcc>
 801d790:	f8d0 3084 	ldr.w	r3, [r0, #132]	@ 0x84
 801d794:	2900      	cmp	r1, #0
 801d796:	d055      	beq.n	801d844 <nema_vg_path_set_matrix+0xb8>
 801d798:	edd1 7a00 	vldr	s15, [r1]
 801d79c:	edc0 7a18 	vstr	s15, [r0, #96]	@ 0x60
 801d7a0:	edd1 3a01 	vldr	s7, [r1, #4]
 801d7a4:	edc0 3a19 	vstr	s7, [r0, #100]	@ 0x64
 801d7a8:	ed91 7a02 	vldr	s14, [r1, #8]
 801d7ac:	ed80 7a1a 	vstr	s14, [r0, #104]	@ 0x68
 801d7b0:	edd1 6a03 	vldr	s13, [r1, #12]
 801d7b4:	edc0 6a1b 	vstr	s13, [r0, #108]	@ 0x6c
 801d7b8:	ed91 4a04 	vldr	s8, [r1, #16]
 801d7bc:	ed80 4a1c 	vstr	s8, [r0, #112]	@ 0x70
 801d7c0:	ed91 5a05 	vldr	s10, [r1, #20]
 801d7c4:	ed80 5a1d 	vstr	s10, [r0, #116]	@ 0x74
 801d7c8:	ed91 6a06 	vldr	s12, [r1, #24]
 801d7cc:	ed80 6a1e 	vstr	s12, [r0, #120]	@ 0x78
 801d7d0:	eef7 4a00 	vmov.f32	s9, #112	@ 0x3f800000  1.0
 801d7d4:	edd1 5a07 	vldr	s11, [r1, #28]
 801d7d8:	eef4 7a64 	vcmp.f32	s15, s9
 801d7dc:	edc0 5a1f 	vstr	s11, [r0, #124]	@ 0x7c
 801d7e0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801d7e4:	6a0a      	ldr	r2, [r1, #32]
 801d7e6:	f8c0 2080 	str.w	r2, [r0, #128]	@ 0x80
 801d7ea:	d130      	bne.n	801d84e <nema_vg_path_set_matrix+0xc2>
 801d7ec:	eef5 3a40 	vcmp.f32	s7, #0.0
 801d7f0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801d7f4:	d12b      	bne.n	801d84e <nema_vg_path_set_matrix+0xc2>
 801d7f6:	eeb5 7a40 	vcmp.f32	s14, #0.0
 801d7fa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801d7fe:	d126      	bne.n	801d84e <nema_vg_path_set_matrix+0xc2>
 801d800:	eef5 6a40 	vcmp.f32	s13, #0.0
 801d804:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801d808:	d121      	bne.n	801d84e <nema_vg_path_set_matrix+0xc2>
 801d80a:	eeb4 4a64 	vcmp.f32	s8, s9
 801d80e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801d812:	d11c      	bne.n	801d84e <nema_vg_path_set_matrix+0xc2>
 801d814:	eeb5 5a40 	vcmp.f32	s10, #0.0
 801d818:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801d81c:	d117      	bne.n	801d84e <nema_vg_path_set_matrix+0xc2>
 801d81e:	eeb5 6a40 	vcmp.f32	s12, #0.0
 801d822:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801d826:	d112      	bne.n	801d84e <nema_vg_path_set_matrix+0xc2>
 801d828:	eef5 5a40 	vcmp.f32	s11, #0.0
 801d82c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801d830:	d10d      	bne.n	801d84e <nema_vg_path_set_matrix+0xc2>
 801d832:	ed90 7a20 	vldr	s14, [r0, #128]	@ 0x80
 801d836:	eef7 7a00 	vmov.f32	s15, #112	@ 0x3f800000  1.0
 801d83a:	eeb4 7a67 	vcmp.f32	s14, s15
 801d83e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801d842:	d104      	bne.n	801d84e <nema_vg_path_set_matrix+0xc2>
 801d844:	f023 0301 	bic.w	r3, r3, #1
 801d848:	f8c0 3084 	str.w	r3, [r0, #132]	@ 0x84
 801d84c:	4770      	bx	lr
 801d84e:	f043 0301 	orr.w	r3, r3, #1
 801d852:	f8c0 3084 	str.w	r3, [r0, #132]	@ 0x84
 801d856:	4770      	bx	lr
 801d858:	2001      	movs	r0, #1
 801d85a:	f7ff ba4b 	b.w	801ccf4 <nema_vg_set_error>
 801d85e:	bf00      	nop

0801d860 <set_tsvg_text_max_size>:
 801d860:	4a02      	ldr	r2, [pc, #8]	@ (801d86c <set_tsvg_text_max_size+0xc>)
 801d862:	4b03      	ldr	r3, [pc, #12]	@ (801d870 <set_tsvg_text_max_size+0x10>)
 801d864:	6010      	str	r0, [r2, #0]
 801d866:	6019      	str	r1, [r3, #0]
 801d868:	4770      	bx	lr
 801d86a:	bf00      	nop
 801d86c:	200001dc 	.word	0x200001dc
 801d870:	200001e0 	.word	0x200001e0

0801d874 <tsvg_init>:
 801d874:	b508      	push	{r3, lr}
 801d876:	f7ff fab1 	bl	801cddc <nema_vg_paint_create>
 801d87a:	4b05      	ldr	r3, [pc, #20]	@ (801d890 <tsvg_init+0x1c>)
 801d87c:	6018      	str	r0, [r3, #0]
 801d87e:	f7ff feff 	bl	801d680 <nema_vg_path_create>
 801d882:	4b04      	ldr	r3, [pc, #16]	@ (801d894 <tsvg_init+0x20>)
 801d884:	6018      	str	r0, [r3, #0]
 801d886:	f7ff faf1 	bl	801ce6c <nema_vg_grad_create>
 801d88a:	4b03      	ldr	r3, [pc, #12]	@ (801d898 <tsvg_init+0x24>)
 801d88c:	6018      	str	r0, [r3, #0]
 801d88e:	bd08      	pop	{r3, pc}
 801d890:	20083474 	.word	0x20083474
 801d894:	20083478 	.word	0x20083478
 801d898:	20083470 	.word	0x20083470

0801d89c <tsi_malloc_init_pool_aligned>:
 801d89c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801d8a0:	2807      	cmp	r0, #7
 801d8a2:	e9dd e706 	ldrd	lr, r7, [sp, #24]
 801d8a6:	d845      	bhi.n	801d934 <tsi_malloc_init_pool_aligned+0x98>
 801d8a8:	2f0f      	cmp	r7, #15
 801d8aa:	dd36      	ble.n	801d91a <tsi_malloc_init_pool_aligned+0x7e>
 801d8ac:	07bc      	lsls	r4, r7, #30
 801d8ae:	463e      	mov	r6, r7
 801d8b0:	d043      	beq.n	801d93a <tsi_malloc_init_pool_aligned+0x9e>
 801d8b2:	f027 0703 	bic.w	r7, r7, #3
 801d8b6:	3704      	adds	r7, #4
 801d8b8:	f107 0c0b 	add.w	ip, r7, #11
 801d8bc:	fb9c fcf7 	sdiv	ip, ip, r7
 801d8c0:	463e      	mov	r6, r7
 801d8c2:	fb07 fc0c 	mul.w	ip, r7, ip
 801d8c6:	fbb1 f4f6 	udiv	r4, r1, r6
 801d8ca:	fb06 1514 	mls	r5, r6, r4, r1
 801d8ce:	f8df 8080 	ldr.w	r8, [pc, #128]	@ 801d950 <tsi_malloc_init_pool_aligned+0xb4>
 801d8d2:	f8c8 c000 	str.w	ip, [r8]
 801d8d6:	b32d      	cbz	r5, 801d924 <tsi_malloc_init_pool_aligned+0x88>
 801d8d8:	fb04 6406 	mla	r4, r4, r6, r6
 801d8dc:	eb00 0540 	add.w	r5, r0, r0, lsl #1
 801d8e0:	4819      	ldr	r0, [pc, #100]	@ (801d948 <tsi_malloc_init_pool_aligned+0xac>)
 801d8e2:	00ed      	lsls	r5, r5, #3
 801d8e4:	1946      	adds	r6, r0, r5
 801d8e6:	5142      	str	r2, [r0, r5]
 801d8e8:	18ca      	adds	r2, r1, r3
 801d8ea:	60f4      	str	r4, [r6, #12]
 801d8ec:	6071      	str	r1, [r6, #4]
 801d8ee:	e9c6 3704 	strd	r3, r7, [r6, #16]
 801d8f2:	60b2      	str	r2, [r6, #8]
 801d8f4:	f1be 0f00 	cmp.w	lr, #0
 801d8f8:	d016      	beq.n	801d928 <tsi_malloc_init_pool_aligned+0x8c>
 801d8fa:	b1c4      	cbz	r4, 801d92e <tsi_malloc_init_pool_aligned+0x92>
 801d8fc:	2200      	movs	r2, #0
 801d8fe:	4610      	mov	r0, r2
 801d900:	4d12      	ldr	r5, [pc, #72]	@ (801d94c <tsi_malloc_init_pool_aligned+0xb0>)
 801d902:	eba3 034c 	sub.w	r3, r3, ip, lsl #1
 801d906:	eb0c 0104 	add.w	r1, ip, r4
 801d90a:	e884 1024 	stmia.w	r4, {r2, r5, ip}
 801d90e:	f84c 3004 	str.w	r3, [ip, r4]
 801d912:	e9c1 5201 	strd	r5, r2, [r1, #4]
 801d916:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801d91a:	f04f 0c10 	mov.w	ip, #16
 801d91e:	4666      	mov	r6, ip
 801d920:	4667      	mov	r7, ip
 801d922:	e7d0      	b.n	801d8c6 <tsi_malloc_init_pool_aligned+0x2a>
 801d924:	460c      	mov	r4, r1
 801d926:	e7d9      	b.n	801d8dc <tsi_malloc_init_pool_aligned+0x40>
 801d928:	4670      	mov	r0, lr
 801d92a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801d92e:	4620      	mov	r0, r4
 801d930:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801d934:	f04f 30ff 	mov.w	r0, #4294967295
 801d938:	e7ed      	b.n	801d916 <tsi_malloc_init_pool_aligned+0x7a>
 801d93a:	f107 0c0b 	add.w	ip, r7, #11
 801d93e:	fb9c fcf7 	sdiv	ip, ip, r7
 801d942:	fb07 fc0c 	mul.w	ip, r7, ip
 801d946:	e7be      	b.n	801d8c6 <tsi_malloc_init_pool_aligned+0x2a>
 801d948:	2008347c 	.word	0x2008347c
 801d94c:	000f1fa1 	.word	0x000f1fa1
 801d950:	200001e4 	.word	0x200001e4

0801d954 <tsi_malloc_pool>:
 801d954:	2807      	cmp	r0, #7
 801d956:	d850      	bhi.n	801d9fa <tsi_malloc_pool+0xa6>
 801d958:	b4f0      	push	{r4, r5, r6, r7}
 801d95a:	4b29      	ldr	r3, [pc, #164]	@ (801da00 <tsi_malloc_pool+0xac>)
 801d95c:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801d960:	eb03 00c0 	add.w	r0, r3, r0, lsl #3
 801d964:	68c4      	ldr	r4, [r0, #12]
 801d966:	2c00      	cmp	r4, #0
 801d968:	d03e      	beq.n	801d9e8 <tsi_malloc_pool+0x94>
 801d96a:	6947      	ldr	r7, [r0, #20]
 801d96c:	4b25      	ldr	r3, [pc, #148]	@ (801da04 <tsi_malloc_pool+0xb0>)
 801d96e:	f107 000b 	add.w	r0, r7, #11
 801d972:	fb90 f0f7 	sdiv	r0, r0, r7
 801d976:	fb07 f000 	mul.w	r0, r7, r0
 801d97a:	1e7d      	subs	r5, r7, #1
 801d97c:	4281      	cmp	r1, r0
 801d97e:	bfac      	ite	ge
 801d980:	186d      	addge	r5, r5, r1
 801d982:	182d      	addlt	r5, r5, r0
 801d984:	fb95 f5f7 	sdiv	r5, r5, r7
 801d988:	fb07 f505 	mul.w	r5, r7, r5
 801d98c:	6821      	ldr	r1, [r4, #0]
 801d98e:	6018      	str	r0, [r3, #0]
 801d990:	428d      	cmp	r5, r1
 801d992:	dd2f      	ble.n	801d9f4 <tsi_malloc_pool+0xa0>
 801d994:	68a3      	ldr	r3, [r4, #8]
 801d996:	b33b      	cbz	r3, 801d9e8 <tsi_malloc_pool+0x94>
 801d998:	4626      	mov	r6, r4
 801d99a:	e002      	b.n	801d9a2 <tsi_malloc_pool+0x4e>
 801d99c:	6893      	ldr	r3, [r2, #8]
 801d99e:	4616      	mov	r6, r2
 801d9a0:	b313      	cbz	r3, 801d9e8 <tsi_malloc_pool+0x94>
 801d9a2:	58e1      	ldr	r1, [r4, r3]
 801d9a4:	18e2      	adds	r2, r4, r3
 801d9a6:	42a9      	cmp	r1, r5
 801d9a8:	dbf8      	blt.n	801d99c <tsi_malloc_pool+0x48>
 801d9aa:	1943      	adds	r3, r0, r5
 801d9ac:	428b      	cmp	r3, r1
 801d9ae:	da1e      	bge.n	801d9ee <tsi_malloc_pool+0x9a>
 801d9b0:	1ac9      	subs	r1, r1, r3
 801d9b2:	f8df c058 	ldr.w	ip, [pc, #88]	@ 801da0c <tsi_malloc_pool+0xb8>
 801d9b6:	5099      	str	r1, [r3, r2]
 801d9b8:	4413      	add	r3, r2
 801d9ba:	f8c3 c004 	str.w	ip, [r3, #4]
 801d9be:	6891      	ldr	r1, [r2, #8]
 801d9c0:	2f00      	cmp	r7, #0
 801d9c2:	6099      	str	r1, [r3, #8]
 801d9c4:	dd08      	ble.n	801d9d8 <tsi_malloc_pool+0x84>
 801d9c6:	fbb3 f1f7 	udiv	r1, r3, r7
 801d9ca:	fb07 3c11 	mls	ip, r7, r1, r3
 801d9ce:	f1bc 0f00 	cmp.w	ip, #0
 801d9d2:	d001      	beq.n	801d9d8 <tsi_malloc_pool+0x84>
 801d9d4:	fb01 7307 	mla	r3, r1, r7, r7
 801d9d8:	1b1b      	subs	r3, r3, r4
 801d9da:	60b3      	str	r3, [r6, #8]
 801d9dc:	6015      	str	r5, [r2, #0]
 801d9de:	4b0a      	ldr	r3, [pc, #40]	@ (801da08 <tsi_malloc_pool+0xb4>)
 801d9e0:	4410      	add	r0, r2
 801d9e2:	6053      	str	r3, [r2, #4]
 801d9e4:	bcf0      	pop	{r4, r5, r6, r7}
 801d9e6:	4770      	bx	lr
 801d9e8:	2000      	movs	r0, #0
 801d9ea:	bcf0      	pop	{r4, r5, r6, r7}
 801d9ec:	4770      	bx	lr
 801d9ee:	6893      	ldr	r3, [r2, #8]
 801d9f0:	60b3      	str	r3, [r6, #8]
 801d9f2:	e7f4      	b.n	801d9de <tsi_malloc_pool+0x8a>
 801d9f4:	4626      	mov	r6, r4
 801d9f6:	4622      	mov	r2, r4
 801d9f8:	e7d7      	b.n	801d9aa <tsi_malloc_pool+0x56>
 801d9fa:	2000      	movs	r0, #0
 801d9fc:	4770      	bx	lr
 801d9fe:	bf00      	nop
 801da00:	2008347c 	.word	0x2008347c
 801da04:	200001e4 	.word	0x200001e4
 801da08:	000f1fa2 	.word	0x000f1fa2
 801da0c:	000f1fa1 	.word	0x000f1fa1

0801da10 <tsi_free>:
 801da10:	2800      	cmp	r0, #0
 801da12:	d044      	beq.n	801da9e <tsi_free+0x8e>
 801da14:	4b6f      	ldr	r3, [pc, #444]	@ (801dbd4 <tsi_free+0x1c4>)
 801da16:	68da      	ldr	r2, [r3, #12]
 801da18:	b12a      	cbz	r2, 801da26 <tsi_free+0x16>
 801da1a:	6859      	ldr	r1, [r3, #4]
 801da1c:	4288      	cmp	r0, r1
 801da1e:	d302      	bcc.n	801da26 <tsi_free+0x16>
 801da20:	6899      	ldr	r1, [r3, #8]
 801da22:	4288      	cmp	r0, r1
 801da24:	d342      	bcc.n	801daac <tsi_free+0x9c>
 801da26:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 801da28:	b12a      	cbz	r2, 801da36 <tsi_free+0x26>
 801da2a:	69d9      	ldr	r1, [r3, #28]
 801da2c:	4288      	cmp	r0, r1
 801da2e:	d302      	bcc.n	801da36 <tsi_free+0x26>
 801da30:	6a19      	ldr	r1, [r3, #32]
 801da32:	4288      	cmp	r0, r1
 801da34:	d352      	bcc.n	801dadc <tsi_free+0xcc>
 801da36:	6bda      	ldr	r2, [r3, #60]	@ 0x3c
 801da38:	b12a      	cbz	r2, 801da46 <tsi_free+0x36>
 801da3a:	6b59      	ldr	r1, [r3, #52]	@ 0x34
 801da3c:	4288      	cmp	r0, r1
 801da3e:	d302      	bcc.n	801da46 <tsi_free+0x36>
 801da40:	6b99      	ldr	r1, [r3, #56]	@ 0x38
 801da42:	4288      	cmp	r0, r1
 801da44:	d34c      	bcc.n	801dae0 <tsi_free+0xd0>
 801da46:	6d5a      	ldr	r2, [r3, #84]	@ 0x54
 801da48:	b12a      	cbz	r2, 801da56 <tsi_free+0x46>
 801da4a:	6cd9      	ldr	r1, [r3, #76]	@ 0x4c
 801da4c:	4281      	cmp	r1, r0
 801da4e:	d802      	bhi.n	801da56 <tsi_free+0x46>
 801da50:	6d19      	ldr	r1, [r3, #80]	@ 0x50
 801da52:	4281      	cmp	r1, r0
 801da54:	d846      	bhi.n	801dae4 <tsi_free+0xd4>
 801da56:	6eda      	ldr	r2, [r3, #108]	@ 0x6c
 801da58:	b12a      	cbz	r2, 801da66 <tsi_free+0x56>
 801da5a:	6e59      	ldr	r1, [r3, #100]	@ 0x64
 801da5c:	4288      	cmp	r0, r1
 801da5e:	d302      	bcc.n	801da66 <tsi_free+0x56>
 801da60:	6e99      	ldr	r1, [r3, #104]	@ 0x68
 801da62:	4281      	cmp	r1, r0
 801da64:	d840      	bhi.n	801dae8 <tsi_free+0xd8>
 801da66:	f8d3 2084 	ldr.w	r2, [r3, #132]	@ 0x84
 801da6a:	b132      	cbz	r2, 801da7a <tsi_free+0x6a>
 801da6c:	6fd9      	ldr	r1, [r3, #124]	@ 0x7c
 801da6e:	4281      	cmp	r1, r0
 801da70:	d803      	bhi.n	801da7a <tsi_free+0x6a>
 801da72:	f8d3 1080 	ldr.w	r1, [r3, #128]	@ 0x80
 801da76:	4288      	cmp	r0, r1
 801da78:	d338      	bcc.n	801daec <tsi_free+0xdc>
 801da7a:	f8d3 209c 	ldr.w	r2, [r3, #156]	@ 0x9c
 801da7e:	b13a      	cbz	r2, 801da90 <tsi_free+0x80>
 801da80:	f8d3 1094 	ldr.w	r1, [r3, #148]	@ 0x94
 801da84:	4288      	cmp	r0, r1
 801da86:	d303      	bcc.n	801da90 <tsi_free+0x80>
 801da88:	f8d3 1098 	ldr.w	r1, [r3, #152]	@ 0x98
 801da8c:	4288      	cmp	r0, r1
 801da8e:	d32f      	bcc.n	801daf0 <tsi_free+0xe0>
 801da90:	f8d3 20b4 	ldr.w	r2, [r3, #180]	@ 0xb4
 801da94:	b11a      	cbz	r2, 801da9e <tsi_free+0x8e>
 801da96:	f8d3 10ac 	ldr.w	r1, [r3, #172]	@ 0xac
 801da9a:	4281      	cmp	r1, r0
 801da9c:	d900      	bls.n	801daa0 <tsi_free+0x90>
 801da9e:	4770      	bx	lr
 801daa0:	f8d3 10b0 	ldr.w	r1, [r3, #176]	@ 0xb0
 801daa4:	4281      	cmp	r1, r0
 801daa6:	d9fa      	bls.n	801da9e <tsi_free+0x8e>
 801daa8:	2107      	movs	r1, #7
 801daaa:	e000      	b.n	801daae <tsi_free+0x9e>
 801daac:	2100      	movs	r1, #0
 801daae:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801dab2:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 801dab6:	eb03 03c1 	add.w	r3, r3, r1, lsl #3
 801daba:	695e      	ldr	r6, [r3, #20]
 801dabc:	4b46      	ldr	r3, [pc, #280]	@ (801dbd8 <tsi_free+0x1c8>)
 801dabe:	f106 010b 	add.w	r1, r6, #11
 801dac2:	fb91 f1f6 	sdiv	r1, r1, r6
 801dac6:	fb06 f101 	mul.w	r1, r6, r1
 801daca:	1a45      	subs	r5, r0, r1
 801dacc:	686c      	ldr	r4, [r5, #4]
 801dace:	4f43      	ldr	r7, [pc, #268]	@ (801dbdc <tsi_free+0x1cc>)
 801dad0:	429c      	cmp	r4, r3
 801dad2:	6039      	str	r1, [r7, #0]
 801dad4:	46a8      	mov	r8, r5
 801dad6:	d00d      	beq.n	801daf4 <tsi_free+0xe4>
 801dad8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801dadc:	2101      	movs	r1, #1
 801dade:	e7e6      	b.n	801daae <tsi_free+0x9e>
 801dae0:	2102      	movs	r1, #2
 801dae2:	e7e4      	b.n	801daae <tsi_free+0x9e>
 801dae4:	2103      	movs	r1, #3
 801dae6:	e7e2      	b.n	801daae <tsi_free+0x9e>
 801dae8:	2104      	movs	r1, #4
 801daea:	e7e0      	b.n	801daae <tsi_free+0x9e>
 801daec:	2105      	movs	r1, #5
 801daee:	e7de      	b.n	801daae <tsi_free+0x9e>
 801daf0:	2106      	movs	r1, #6
 801daf2:	e7dc      	b.n	801daae <tsi_free+0x9e>
 801daf4:	4b3a      	ldr	r3, [pc, #232]	@ (801dbe0 <tsi_free+0x1d0>)
 801daf6:	606b      	str	r3, [r5, #4]
 801daf8:	6894      	ldr	r4, [r2, #8]
 801dafa:	18a3      	adds	r3, r4, r2
 801dafc:	429d      	cmp	r5, r3
 801dafe:	d95e      	bls.n	801dbbe <tsi_free+0x1ae>
 801db00:	b90c      	cbnz	r4, 801db06 <tsi_free+0xf6>
 801db02:	e05c      	b.n	801dbbe <tsi_free+0x1ae>
 801db04:	b12c      	cbz	r4, 801db12 <tsi_free+0x102>
 801db06:	689c      	ldr	r4, [r3, #8]
 801db08:	469c      	mov	ip, r3
 801db0a:	469e      	mov	lr, r3
 801db0c:	1913      	adds	r3, r2, r4
 801db0e:	429d      	cmp	r5, r3
 801db10:	d8f8      	bhi.n	801db04 <tsi_free+0xf4>
 801db12:	682f      	ldr	r7, [r5, #0]
 801db14:	4594      	cmp	ip, r2
 801db16:	4438      	add	r0, r7
 801db18:	d04d      	beq.n	801dbb6 <tsi_free+0x1a6>
 801db1a:	f8dc 7000 	ldr.w	r7, [ip]
 801db1e:	eb01 040c 	add.w	r4, r1, ip
 801db22:	443c      	add	r4, r7
 801db24:	1b64      	subs	r4, r4, r5
 801db26:	fab4 f484 	clz	r4, r4
 801db2a:	0964      	lsrs	r4, r4, #5
 801db2c:	2e00      	cmp	r6, #0
 801db2e:	dd32      	ble.n	801db96 <tsi_free+0x186>
 801db30:	fbb5 f7f6 	udiv	r7, r5, r6
 801db34:	fb06 5c17 	mls	ip, r6, r7, r5
 801db38:	f1bc 0f00 	cmp.w	ip, #0
 801db3c:	d001      	beq.n	801db42 <tsi_free+0x132>
 801db3e:	fb07 6506 	mla	r5, r7, r6, r6
 801db42:	fbb3 f7f6 	udiv	r7, r3, r6
 801db46:	fb06 3c17 	mls	ip, r6, r7, r3
 801db4a:	1aad      	subs	r5, r5, r2
 801db4c:	f8ce 5008 	str.w	r5, [lr, #8]
 801db50:	f1bc 0f00 	cmp.w	ip, #0
 801db54:	d01d      	beq.n	801db92 <tsi_free+0x182>
 801db56:	fb07 6606 	mla	r6, r7, r6, r6
 801db5a:	1ab2      	subs	r2, r6, r2
 801db5c:	f8c8 2008 	str.w	r2, [r8, #8]
 801db60:	b154      	cbz	r4, 801db78 <tsi_free+0x168>
 801db62:	f8d8 5000 	ldr.w	r5, [r8]
 801db66:	46f0      	mov	r8, lr
 801db68:	f8de 4000 	ldr.w	r4, [lr]
 801db6c:	440d      	add	r5, r1
 801db6e:	442c      	add	r4, r5
 801db70:	f8ce 4000 	str.w	r4, [lr]
 801db74:	f8ce 2008 	str.w	r2, [lr, #8]
 801db78:	4283      	cmp	r3, r0
 801db7a:	d1ad      	bne.n	801dad8 <tsi_free+0xc8>
 801db7c:	6818      	ldr	r0, [r3, #0]
 801db7e:	f8d8 2000 	ldr.w	r2, [r8]
 801db82:	4401      	add	r1, r0
 801db84:	440a      	add	r2, r1
 801db86:	f8c8 2000 	str.w	r2, [r8]
 801db8a:	689b      	ldr	r3, [r3, #8]
 801db8c:	f8c8 3008 	str.w	r3, [r8, #8]
 801db90:	e7a2      	b.n	801dad8 <tsi_free+0xc8>
 801db92:	461e      	mov	r6, r3
 801db94:	e7e1      	b.n	801db5a <tsi_free+0x14a>
 801db96:	1aae      	subs	r6, r5, r2
 801db98:	1a9a      	subs	r2, r3, r2
 801db9a:	f8ce 6008 	str.w	r6, [lr, #8]
 801db9e:	60aa      	str	r2, [r5, #8]
 801dba0:	2c00      	cmp	r4, #0
 801dba2:	d0e9      	beq.n	801db78 <tsi_free+0x168>
 801dba4:	682d      	ldr	r5, [r5, #0]
 801dba6:	f8de 4000 	ldr.w	r4, [lr]
 801dbaa:	440d      	add	r5, r1
 801dbac:	442c      	add	r4, r5
 801dbae:	f8ce 4000 	str.w	r4, [lr]
 801dbb2:	46f0      	mov	r8, lr
 801dbb4:	e7de      	b.n	801db74 <tsi_free+0x164>
 801dbb6:	2e00      	cmp	r6, #0
 801dbb8:	dd06      	ble.n	801dbc8 <tsi_free+0x1b8>
 801dbba:	2400      	movs	r4, #0
 801dbbc:	e7b8      	b.n	801db30 <tsi_free+0x120>
 801dbbe:	682c      	ldr	r4, [r5, #0]
 801dbc0:	4696      	mov	lr, r2
 801dbc2:	4420      	add	r0, r4
 801dbc4:	2400      	movs	r4, #0
 801dbc6:	e7b1      	b.n	801db2c <tsi_free+0x11c>
 801dbc8:	eba5 020c 	sub.w	r2, r5, ip
 801dbcc:	f8cc 2008 	str.w	r2, [ip, #8]
 801dbd0:	60ac      	str	r4, [r5, #8]
 801dbd2:	e7d1      	b.n	801db78 <tsi_free+0x168>
 801dbd4:	2008347c 	.word	0x2008347c
 801dbd8:	000f1fa2 	.word	0x000f1fa2
 801dbdc:	200001e4 	.word	0x200001e4
 801dbe0:	000f1fa1 	.word	0x000f1fa1

0801dbe4 <nema_cl_create_sized>:
 801dbe4:	b5f0      	push	{r4, r5, r6, r7, lr}
 801dbe6:	b093      	sub	sp, #76	@ 0x4c
 801dbe8:	466d      	mov	r5, sp
 801dbea:	4606      	mov	r6, r0
 801dbec:	460a      	mov	r2, r1
 801dbee:	4628      	mov	r0, r5
 801dbf0:	2100      	movs	r1, #0
 801dbf2:	f7e5 f935 	bl	8002e60 <nema_buffer_create_pool>
 801dbf6:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
 801dbfa:	2500      	movs	r5, #0
 801dbfc:	ac04      	add	r4, sp, #16
 801dbfe:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 801dc02:	4620      	mov	r0, r4
 801dc04:	f7e5 f94e 	bl	8002ea4 <nema_buffer_map>
 801dc08:	e894 000f 	ldmia.w	r4, {r0, r1, r2, r3}
 801dc0c:	ac08      	add	r4, sp, #32
 801dc0e:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 801dc12:	2110      	movs	r1, #16
 801dc14:	f04f 32ff 	mov.w	r2, #4294967295
 801dc18:	9b04      	ldr	r3, [sp, #16]
 801dc1a:	950d      	str	r5, [sp, #52]	@ 0x34
 801dc1c:	e9cd 5510 	strd	r5, r5, [sp, #64]	@ 0x40
 801dc20:	42ab      	cmp	r3, r5
 801dc22:	4635      	mov	r5, r6
 801dc24:	bfb8      	it	lt
 801dc26:	3307      	addlt	r3, #7
 801dc28:	e9cd 120e 	strd	r1, r2, [sp, #56]	@ 0x38
 801dc2c:	10db      	asrs	r3, r3, #3
 801dc2e:	005b      	lsls	r3, r3, #1
 801dc30:	930c      	str	r3, [sp, #48]	@ 0x30
 801dc32:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 801dc34:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 801dc36:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 801dc38:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 801dc3a:	e894 0003 	ldmia.w	r4, {r0, r1}
 801dc3e:	2700      	movs	r7, #0
 801dc40:	e885 0003 	stmia.w	r5, {r0, r1}
 801dc44:	4630      	mov	r0, r6
 801dc46:	61b7      	str	r7, [r6, #24]
 801dc48:	b013      	add	sp, #76	@ 0x4c
 801dc4a:	bdf0      	pop	{r4, r5, r6, r7, pc}

0801dc4c <nema_extend_bound_cl>:
 801dc4c:	b5f0      	push	{r4, r5, r6, r7, lr}
 801dc4e:	4d6e      	ldr	r5, [pc, #440]	@ (801de08 <nema_extend_bound_cl+0x1bc>)
 801dc50:	b09f      	sub	sp, #124	@ 0x7c
 801dc52:	682b      	ldr	r3, [r5, #0]
 801dc54:	2b00      	cmp	r3, #0
 801dc56:	f000 80c1 	beq.w	801dddc <nema_extend_bound_cl+0x190>
 801dc5a:	4606      	mov	r6, r0
 801dc5c:	6998      	ldr	r0, [r3, #24]
 801dc5e:	0784      	lsls	r4, r0, #30
 801dc60:	f140 80b6 	bpl.w	801ddd0 <nema_extend_bound_cl+0x184>
 801dc64:	e9d3 1204 	ldrd	r1, r2, [r3, #16]
 801dc68:	0680      	lsls	r0, r0, #26
 801dc6a:	d44e      	bmi.n	801dd0a <nema_extend_bound_cl+0xbe>
 801dc6c:	1a89      	subs	r1, r1, r2
 801dc6e:	eb01 71d1 	add.w	r1, r1, r1, lsr #31
 801dc72:	1049      	asrs	r1, r1, #1
 801dc74:	2902      	cmp	r1, #2
 801dc76:	dd13      	ble.n	801dca0 <nema_extend_bound_cl+0x54>
 801dc78:	f44f 3c80 	mov.w	ip, #65536	@ 0x10000
 801dc7c:	2700      	movs	r7, #0
 801dc7e:	1e94      	subs	r4, r2, #2
 801dc80:	eb04 0441 	add.w	r4, r4, r1, lsl #1
 801dc84:	1c91      	adds	r1, r2, #2
 801dc86:	0092      	lsls	r2, r2, #2
 801dc88:	6898      	ldr	r0, [r3, #8]
 801dc8a:	f840 c002 	str.w	ip, [r0, r2]
 801dc8e:	6898      	ldr	r0, [r3, #8]
 801dc90:	4410      	add	r0, r2
 801dc92:	6047      	str	r7, [r0, #4]
 801dc94:	6159      	str	r1, [r3, #20]
 801dc96:	3102      	adds	r1, #2
 801dc98:	428c      	cmp	r4, r1
 801dc9a:	f102 0208 	add.w	r2, r2, #8
 801dc9e:	d1f3      	bne.n	801dc88 <nema_extend_bound_cl+0x3c>
 801dca0:	6a1c      	ldr	r4, [r3, #32]
 801dca2:	2c00      	cmp	r4, #0
 801dca4:	d050      	beq.n	801dd48 <nema_extend_bound_cl+0xfc>
 801dca6:	e9d3 2105 	ldrd	r2, r1, [r3, #20]
 801dcaa:	26f0      	movs	r6, #240	@ 0xf0
 801dcac:	27f4      	movs	r7, #244	@ 0xf4
 801dcae:	6898      	ldr	r0, [r3, #8]
 801dcb0:	f041 0104 	orr.w	r1, r1, #4
 801dcb4:	6199      	str	r1, [r3, #24]
 801dcb6:	f840 6022 	str.w	r6, [r0, r2, lsl #2]
 801dcba:	6899      	ldr	r1, [r3, #8]
 801dcbc:	68e6      	ldr	r6, [r4, #12]
 801dcbe:	0090      	lsls	r0, r2, #2
 801dcc0:	4401      	add	r1, r0
 801dcc2:	604e      	str	r6, [r1, #4]
 801dcc4:	6899      	ldr	r1, [r3, #8]
 801dcc6:	1c96      	adds	r6, r2, #2
 801dcc8:	4401      	add	r1, r0
 801dcca:	615e      	str	r6, [r3, #20]
 801dccc:	608f      	str	r7, [r1, #8]
 801dcce:	6899      	ldr	r1, [r3, #8]
 801dcd0:	6926      	ldr	r6, [r4, #16]
 801dcd2:	4401      	add	r1, r0
 801dcd4:	1d17      	adds	r7, r2, #4
 801dcd6:	60ce      	str	r6, [r1, #12]
 801dcd8:	621c      	str	r4, [r3, #32]
 801dcda:	615f      	str	r7, [r3, #20]
 801dcdc:	68e1      	ldr	r1, [r4, #12]
 801dcde:	f011 0107 	ands.w	r1, r1, #7
 801dce2:	d120      	bne.n	801dd26 <nema_extend_bound_cl+0xda>
 801dce4:	691e      	ldr	r6, [r3, #16]
 801dce6:	3205      	adds	r2, #5
 801dce8:	42b2      	cmp	r2, r6
 801dcea:	db23      	blt.n	801dd34 <nema_extend_bound_cl+0xe8>
 801dcec:	699a      	ldr	r2, [r3, #24]
 801dcee:	f022 0220 	bic.w	r2, r2, #32
 801dcf2:	619a      	str	r2, [r3, #24]
 801dcf4:	69a3      	ldr	r3, [r4, #24]
 801dcf6:	075a      	lsls	r2, r3, #29
 801dcf8:	d503      	bpl.n	801dd02 <nema_extend_bound_cl+0xb6>
 801dcfa:	6a24      	ldr	r4, [r4, #32]
 801dcfc:	69a3      	ldr	r3, [r4, #24]
 801dcfe:	075b      	lsls	r3, r3, #29
 801dd00:	d4fb      	bmi.n	801dcfa <nema_extend_bound_cl+0xae>
 801dd02:	2000      	movs	r0, #0
 801dd04:	602c      	str	r4, [r5, #0]
 801dd06:	b01f      	add	sp, #124	@ 0x7c
 801dd08:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801dd0a:	2900      	cmp	r1, #0
 801dd0c:	bfb8      	it	lt
 801dd0e:	3103      	addlt	r1, #3
 801dd10:	1089      	asrs	r1, r1, #2
 801dd12:	0049      	lsls	r1, r1, #1
 801dd14:	4291      	cmp	r1, r2
 801dd16:	bfcc      	ite	gt
 801dd18:	4610      	movgt	r0, r2
 801dd1a:	1a50      	suble	r0, r2, r1
 801dd1c:	1a09      	subs	r1, r1, r0
 801dd1e:	eb01 71d1 	add.w	r1, r1, r1, lsr #31
 801dd22:	1049      	asrs	r1, r1, #1
 801dd24:	e7a6      	b.n	801dc74 <nema_extend_bound_cl+0x28>
 801dd26:	f44f 4080 	mov.w	r0, #16384	@ 0x4000
 801dd2a:	f7f3 f853 	bl	8010dd4 <nema_set_error>
 801dd2e:	2000      	movs	r0, #0
 801dd30:	b01f      	add	sp, #124	@ 0x7c
 801dd32:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801dd34:	f44f 26a0 	mov.w	r6, #327680	@ 0x50000
 801dd38:	689a      	ldr	r2, [r3, #8]
 801dd3a:	4410      	add	r0, r2
 801dd3c:	e9c0 6104 	strd	r6, r1, [r0, #16]
 801dd40:	699a      	ldr	r2, [r3, #24]
 801dd42:	f022 0208 	bic.w	r2, r2, #8
 801dd46:	e7d2      	b.n	801dcee <nema_extend_bound_cl+0xa2>
 801dd48:	2028      	movs	r0, #40	@ 0x28
 801dd4a:	f7e5 f807 	bl	8002d5c <nema_host_malloc>
 801dd4e:	4604      	mov	r4, r0
 801dd50:	2800      	cmp	r0, #0
 801dd52:	d052      	beq.n	801ddfa <nema_extend_bound_cl+0x1ae>
 801dd54:	1cb1      	adds	r1, r6, #2
 801dd56:	00c9      	lsls	r1, r1, #3
 801dd58:	f5b1 6f80 	cmp.w	r1, #1024	@ 0x400
 801dd5c:	dd1a      	ble.n	801dd94 <nema_extend_bound_cl+0x148>
 801dd5e:	466e      	mov	r6, sp
 801dd60:	4627      	mov	r7, r4
 801dd62:	4668      	mov	r0, sp
 801dd64:	f7ff ff3e 	bl	801dbe4 <nema_cl_create_sized>
 801dd68:	ce0f      	ldmia	r6!, {r0, r1, r2, r3}
 801dd6a:	c70f      	stmia	r7!, {r0, r1, r2, r3}
 801dd6c:	ce0f      	ldmia	r6!, {r0, r1, r2, r3}
 801dd6e:	c70f      	stmia	r7!, {r0, r1, r2, r3}
 801dd70:	e896 0003 	ldmia.w	r6, {r0, r1}
 801dd74:	e887 0003 	stmia.w	r7, {r0, r1}
 801dd78:	68a3      	ldr	r3, [r4, #8]
 801dd7a:	2b00      	cmp	r3, #0
 801dd7c:	d034      	beq.n	801dde8 <nema_extend_bound_cl+0x19c>
 801dd7e:	682b      	ldr	r3, [r5, #0]
 801dd80:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 801dd82:	2a00      	cmp	r2, #0
 801dd84:	bf08      	it	eq
 801dd86:	461a      	moveq	r2, r3
 801dd88:	6262      	str	r2, [r4, #36]	@ 0x24
 801dd8a:	699a      	ldr	r2, [r3, #24]
 801dd8c:	f022 020c 	bic.w	r2, r2, #12
 801dd90:	61a2      	str	r2, [r4, #24]
 801dd92:	e788      	b.n	801dca6 <nema_extend_bound_cl+0x5a>
 801dd94:	a80a      	add	r0, sp, #40	@ 0x28
 801dd96:	f44f 6180 	mov.w	r1, #1024	@ 0x400
 801dd9a:	f7ff ff23 	bl	801dbe4 <nema_cl_create_sized>
 801dd9e:	2302      	movs	r3, #2
 801dda0:	46a4      	mov	ip, r4
 801dda2:	9310      	str	r3, [sp, #64]	@ 0x40
 801dda4:	ae0a      	add	r6, sp, #40	@ 0x28
 801dda6:	af14      	add	r7, sp, #80	@ 0x50
 801dda8:	ce0f      	ldmia	r6!, {r0, r1, r2, r3}
 801ddaa:	c70f      	stmia	r7!, {r0, r1, r2, r3}
 801ddac:	ce0f      	ldmia	r6!, {r0, r1, r2, r3}
 801ddae:	c70f      	stmia	r7!, {r0, r1, r2, r3}
 801ddb0:	e896 0003 	ldmia.w	r6, {r0, r1}
 801ddb4:	ae14      	add	r6, sp, #80	@ 0x50
 801ddb6:	e887 0003 	stmia.w	r7, {r0, r1}
 801ddba:	ce0f      	ldmia	r6!, {r0, r1, r2, r3}
 801ddbc:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 801ddc0:	ce0f      	ldmia	r6!, {r0, r1, r2, r3}
 801ddc2:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 801ddc6:	e897 0003 	ldmia.w	r7, {r0, r1}
 801ddca:	e88c 0003 	stmia.w	ip, {r0, r1}
 801ddce:	e7d3      	b.n	801dd78 <nema_extend_bound_cl+0x12c>
 801ddd0:	2008      	movs	r0, #8
 801ddd2:	f7f2 ffff 	bl	8010dd4 <nema_set_error>
 801ddd6:	f04f 30ff 	mov.w	r0, #4294967295
 801ddda:	e7a9      	b.n	801dd30 <nema_extend_bound_cl+0xe4>
 801dddc:	2080      	movs	r0, #128	@ 0x80
 801ddde:	f7f2 fff9 	bl	8010dd4 <nema_set_error>
 801dde2:	f04f 30ff 	mov.w	r0, #4294967295
 801dde6:	e7a3      	b.n	801dd30 <nema_extend_bound_cl+0xe4>
 801dde8:	2010      	movs	r0, #16
 801ddea:	f7f2 fff3 	bl	8010dd4 <nema_set_error>
 801ddee:	4620      	mov	r0, r4
 801ddf0:	f7e4 ffb2 	bl	8002d58 <nema_host_free>
 801ddf4:	f04f 30ff 	mov.w	r0, #4294967295
 801ddf8:	e79a      	b.n	801dd30 <nema_extend_bound_cl+0xe4>
 801ddfa:	2010      	movs	r0, #16
 801ddfc:	f7f2 ffea 	bl	8010dd4 <nema_set_error>
 801de00:	f04f 30ff 	mov.w	r0, #4294967295
 801de04:	e794      	b.n	801dd30 <nema_extend_bound_cl+0xe4>
 801de06:	bf00      	nop
 801de08:	2008353c 	.word	0x2008353c

0801de0c <nema_cl_bind_circular>:
 801de0c:	b358      	cbz	r0, 801de66 <nema_cl_bind_circular+0x5a>
 801de0e:	68c3      	ldr	r3, [r0, #12]
 801de10:	f013 0207 	ands.w	r2, r3, #7
 801de14:	d117      	bne.n	801de46 <nema_cl_bind_circular+0x3a>
 801de16:	b4f0      	push	{r4, r5, r6, r7}
 801de18:	4c15      	ldr	r4, [pc, #84]	@ (801de70 <nema_cl_bind_circular+0x64>)
 801de1a:	6a43      	ldr	r3, [r0, #36]	@ 0x24
 801de1c:	6821      	ldr	r1, [r4, #0]
 801de1e:	2b00      	cmp	r3, #0
 801de20:	bf08      	it	eq
 801de22:	4603      	moveq	r3, r0
 801de24:	b141      	cbz	r1, 801de38 <nema_cl_bind_circular+0x2c>
 801de26:	e9d1 5004 	ldrd	r5, r0, [r1, #16]
 801de2a:	1c46      	adds	r6, r0, #1
 801de2c:	42ae      	cmp	r6, r5
 801de2e:	db0e      	blt.n	801de4e <nema_cl_bind_circular+0x42>
 801de30:	698a      	ldr	r2, [r1, #24]
 801de32:	f022 0220 	bic.w	r2, r2, #32
 801de36:	618a      	str	r2, [r1, #24]
 801de38:	699a      	ldr	r2, [r3, #24]
 801de3a:	6023      	str	r3, [r4, #0]
 801de3c:	f042 0220 	orr.w	r2, r2, #32
 801de40:	619a      	str	r2, [r3, #24]
 801de42:	bcf0      	pop	{r4, r5, r6, r7}
 801de44:	4770      	bx	lr
 801de46:	f44f 4080 	mov.w	r0, #16384	@ 0x4000
 801de4a:	f7f2 bfc3 	b.w	8010dd4 <nema_set_error>
 801de4e:	f44f 27a0 	mov.w	r7, #327680	@ 0x50000
 801de52:	688d      	ldr	r5, [r1, #8]
 801de54:	eb05 0680 	add.w	r6, r5, r0, lsl #2
 801de58:	f845 7020 	str.w	r7, [r5, r0, lsl #2]
 801de5c:	6072      	str	r2, [r6, #4]
 801de5e:	698a      	ldr	r2, [r1, #24]
 801de60:	f022 0208 	bic.w	r2, r2, #8
 801de64:	e7e5      	b.n	801de32 <nema_cl_bind_circular+0x26>
 801de66:	f44f 5000 	mov.w	r0, #8192	@ 0x2000
 801de6a:	f7f2 bfb3 	b.w	8010dd4 <nema_set_error>
 801de6e:	bf00      	nop
 801de70:	2008353c 	.word	0x2008353c

0801de74 <nema_cl_unbind>:
 801de74:	4910      	ldr	r1, [pc, #64]	@ (801deb8 <nema_cl_unbind+0x44>)
 801de76:	680b      	ldr	r3, [r1, #0]
 801de78:	b1d3      	cbz	r3, 801deb0 <nema_cl_unbind+0x3c>
 801de7a:	b430      	push	{r4, r5}
 801de7c:	e9d3 0204 	ldrd	r0, r2, [r3, #16]
 801de80:	1c54      	adds	r4, r2, #1
 801de82:	4284      	cmp	r4, r0
 801de84:	db07      	blt.n	801de96 <nema_cl_unbind+0x22>
 801de86:	699a      	ldr	r2, [r3, #24]
 801de88:	f022 0220 	bic.w	r2, r2, #32
 801de8c:	619a      	str	r2, [r3, #24]
 801de8e:	2300      	movs	r3, #0
 801de90:	600b      	str	r3, [r1, #0]
 801de92:	bc30      	pop	{r4, r5}
 801de94:	4770      	bx	lr
 801de96:	f44f 25a0 	mov.w	r5, #327680	@ 0x50000
 801de9a:	2400      	movs	r4, #0
 801de9c:	6898      	ldr	r0, [r3, #8]
 801de9e:	f840 5022 	str.w	r5, [r0, r2, lsl #2]
 801dea2:	eb00 0282 	add.w	r2, r0, r2, lsl #2
 801dea6:	6054      	str	r4, [r2, #4]
 801dea8:	699a      	ldr	r2, [r3, #24]
 801deaa:	f022 0208 	bic.w	r2, r2, #8
 801deae:	e7eb      	b.n	801de88 <nema_cl_unbind+0x14>
 801deb0:	2300      	movs	r3, #0
 801deb2:	600b      	str	r3, [r1, #0]
 801deb4:	4770      	bx	lr
 801deb6:	bf00      	nop
 801deb8:	2008353c 	.word	0x2008353c

0801debc <nema_cl_get_bound>:
 801debc:	4b01      	ldr	r3, [pc, #4]	@ (801dec4 <nema_cl_get_bound+0x8>)
 801debe:	6818      	ldr	r0, [r3, #0]
 801dec0:	4770      	bx	lr
 801dec2:	bf00      	nop
 801dec4:	2008353c 	.word	0x2008353c

0801dec8 <nema_cl_submit_no_irq>:
 801dec8:	2800      	cmp	r0, #0
 801deca:	d052      	beq.n	801df72 <nema_cl_submit_no_irq+0xaa>
 801decc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801dece:	6944      	ldr	r4, [r0, #20]
 801ded0:	b1f4      	cbz	r4, 801df10 <nema_cl_submit_no_irq+0x48>
 801ded2:	6983      	ldr	r3, [r0, #24]
 801ded4:	4605      	mov	r5, r0
 801ded6:	069a      	lsls	r2, r3, #26
 801ded8:	d51b      	bpl.n	801df12 <nema_cl_submit_no_irq+0x4a>
 801deda:	6902      	ldr	r2, [r0, #16]
 801dedc:	2a00      	cmp	r2, #0
 801dede:	bfb8      	it	lt
 801dee0:	3203      	addlt	r2, #3
 801dee2:	1092      	asrs	r2, r2, #2
 801dee4:	0056      	lsls	r6, r2, #1
 801dee6:	42b4      	cmp	r4, r6
 801dee8:	da3d      	bge.n	801df66 <nema_cl_submit_no_irq+0x9e>
 801deea:	68c7      	ldr	r7, [r0, #12]
 801deec:	071b      	lsls	r3, r3, #28
 801deee:	d549      	bpl.n	801df84 <nema_cl_submit_no_irq+0xbc>
 801def0:	69e8      	ldr	r0, [r5, #28]
 801def2:	2800      	cmp	r0, #0
 801def4:	da41      	bge.n	801df7a <nema_cl_submit_no_irq+0xb2>
 801def6:	f04f 33ff 	mov.w	r3, #4294967295
 801defa:	61eb      	str	r3, [r5, #28]
 801defc:	4621      	mov	r1, r4
 801defe:	4638      	mov	r0, r7
 801df00:	f7f2 fd54 	bl	80109ac <nema_rb_submit_cmdlist2>
 801df04:	696b      	ldr	r3, [r5, #20]
 801df06:	61e8      	str	r0, [r5, #28]
 801df08:	42b3      	cmp	r3, r6
 801df0a:	bfa8      	it	ge
 801df0c:	2600      	movge	r6, #0
 801df0e:	616e      	str	r6, [r5, #20]
 801df10:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801df12:	4604      	mov	r4, r0
 801df14:	f06f 4640 	mvn.w	r6, #3221225472	@ 0xc0000000
 801df18:	e012      	b.n	801df40 <nema_cl_submit_no_irq+0x78>
 801df1a:	6923      	ldr	r3, [r4, #16]
 801df1c:	6949      	ldr	r1, [r1, #20]
 801df1e:	4433      	add	r3, r6
 801df20:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
 801df24:	69a3      	ldr	r3, [r4, #24]
 801df26:	4620      	mov	r0, r4
 801df28:	f023 0308 	bic.w	r3, r3, #8
 801df2c:	61a3      	str	r3, [r4, #24]
 801df2e:	f7e4 ffcb 	bl	8002ec8 <nema_buffer_flush>
 801df32:	69a3      	ldr	r3, [r4, #24]
 801df34:	f043 0308 	orr.w	r3, r3, #8
 801df38:	61a3      	str	r3, [r4, #24]
 801df3a:	6a24      	ldr	r4, [r4, #32]
 801df3c:	b134      	cbz	r4, 801df4c <nema_cl_submit_no_irq+0x84>
 801df3e:	69a3      	ldr	r3, [r4, #24]
 801df40:	0758      	lsls	r0, r3, #29
 801df42:	68a2      	ldr	r2, [r4, #8]
 801df44:	6a21      	ldr	r1, [r4, #32]
 801df46:	d4e8      	bmi.n	801df1a <nema_cl_submit_no_irq+0x52>
 801df48:	071b      	lsls	r3, r3, #28
 801df4a:	d523      	bpl.n	801df94 <nema_cl_submit_no_irq+0xcc>
 801df4c:	2000      	movs	r0, #0
 801df4e:	f7e4 ffbc 	bl	8002eca <nema_mutex_lock>
 801df52:	6969      	ldr	r1, [r5, #20]
 801df54:	4628      	mov	r0, r5
 801df56:	f7f2 fdad 	bl	8010ab4 <nema_rb_submit_cmdlist>
 801df5a:	61e8      	str	r0, [r5, #28]
 801df5c:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 801df60:	2000      	movs	r0, #0
 801df62:	f7e4 bfb4 	b.w	8002ece <nema_mutex_unlock>
 801df66:	d0d3      	beq.n	801df10 <nema_cl_submit_no_irq+0x48>
 801df68:	68c7      	ldr	r7, [r0, #12]
 801df6a:	1ba4      	subs	r4, r4, r6
 801df6c:	eb07 07c2 	add.w	r7, r7, r2, lsl #3
 801df70:	e7bc      	b.n	801deec <nema_cl_submit_no_irq+0x24>
 801df72:	f44f 5000 	mov.w	r0, #8192	@ 0x2000
 801df76:	f7f2 bf2d 	b.w	8010dd4 <nema_set_error>
 801df7a:	f7e4 fedf 	bl	8002d3c <nema_wait_irq_cl>
 801df7e:	2800      	cmp	r0, #0
 801df80:	dab9      	bge.n	801def6 <nema_cl_submit_no_irq+0x2e>
 801df82:	e7bb      	b.n	801defc <nema_cl_submit_no_irq+0x34>
 801df84:	4628      	mov	r0, r5
 801df86:	f7e4 ff9f 	bl	8002ec8 <nema_buffer_flush>
 801df8a:	69ab      	ldr	r3, [r5, #24]
 801df8c:	f043 0308 	orr.w	r3, r3, #8
 801df90:	61ab      	str	r3, [r5, #24]
 801df92:	e7ad      	b.n	801def0 <nema_cl_submit_no_irq+0x28>
 801df94:	4620      	mov	r0, r4
 801df96:	f7e4 ff97 	bl	8002ec8 <nema_buffer_flush>
 801df9a:	69a3      	ldr	r3, [r4, #24]
 801df9c:	f043 0308 	orr.w	r3, r3, #8
 801dfa0:	61a3      	str	r3, [r4, #24]
 801dfa2:	e7d3      	b.n	801df4c <nema_cl_submit_no_irq+0x84>

0801dfa4 <nema_cl_get_space>:
 801dfa4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801dfa6:	4e2c      	ldr	r6, [pc, #176]	@ (801e058 <nema_cl_get_space+0xb4>)
 801dfa8:	6834      	ldr	r4, [r6, #0]
 801dfaa:	2c00      	cmp	r4, #0
 801dfac:	d04d      	beq.n	801e04a <nema_cl_get_space+0xa6>
 801dfae:	69a7      	ldr	r7, [r4, #24]
 801dfb0:	4605      	mov	r5, r0
 801dfb2:	f027 0108 	bic.w	r1, r7, #8
 801dfb6:	f017 0720 	ands.w	r7, r7, #32
 801dfba:	61a1      	str	r1, [r4, #24]
 801dfbc:	6923      	ldr	r3, [r4, #16]
 801dfbe:	6961      	ldr	r1, [r4, #20]
 801dfc0:	d016      	beq.n	801dff0 <nema_cl_get_space+0x4c>
 801dfc2:	2b00      	cmp	r3, #0
 801dfc4:	bfb8      	it	lt
 801dfc6:	3303      	addlt	r3, #3
 801dfc8:	109b      	asrs	r3, r3, #2
 801dfca:	005b      	lsls	r3, r3, #1
 801dfcc:	4299      	cmp	r1, r3
 801dfce:	bfb4      	ite	lt
 801dfd0:	460a      	movlt	r2, r1
 801dfd2:	1aca      	subge	r2, r1, r3
 801dfd4:	1a9a      	subs	r2, r3, r2
 801dfd6:	eb02 72d2 	add.w	r2, r2, r2, lsr #31
 801dfda:	3001      	adds	r0, #1
 801dfdc:	ebb0 0f62 	cmp.w	r0, r2, asr #1
 801dfe0:	da1a      	bge.n	801e018 <nema_cl_get_space+0x74>
 801dfe2:	68a0      	ldr	r0, [r4, #8]
 801dfe4:	eb01 0545 	add.w	r5, r1, r5, lsl #1
 801dfe8:	6165      	str	r5, [r4, #20]
 801dfea:	eb00 0081 	add.w	r0, r0, r1, lsl #2
 801dfee:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801dff0:	1a5b      	subs	r3, r3, r1
 801dff2:	eb03 73d3 	add.w	r3, r3, r3, lsr #31
 801dff6:	105b      	asrs	r3, r3, #1
 801dff8:	3b01      	subs	r3, #1
 801dffa:	4283      	cmp	r3, r0
 801dffc:	dcf1      	bgt.n	801dfe2 <nema_cl_get_space+0x3e>
 801dffe:	f7ff fe25 	bl	801dc4c <nema_extend_bound_cl>
 801e002:	2800      	cmp	r0, #0
 801e004:	db26      	blt.n	801e054 <nema_cl_get_space+0xb0>
 801e006:	6834      	ldr	r4, [r6, #0]
 801e008:	6961      	ldr	r1, [r4, #20]
 801e00a:	68a0      	ldr	r0, [r4, #8]
 801e00c:	eb01 0545 	add.w	r5, r1, r5, lsl #1
 801e010:	6165      	str	r5, [r4, #20]
 801e012:	eb00 0081 	add.w	r0, r0, r1, lsl #2
 801e016:	e7ea      	b.n	801dfee <nema_cl_get_space+0x4a>
 801e018:	2900      	cmp	r1, #0
 801e01a:	d0e2      	beq.n	801dfe2 <nema_cl_get_space+0x3e>
 801e01c:	4299      	cmp	r1, r3
 801e01e:	d0e0      	beq.n	801dfe2 <nema_cl_get_space+0x3e>
 801e020:	4620      	mov	r0, r4
 801e022:	f7ff ff51 	bl	801dec8 <nema_cl_submit_no_irq>
 801e026:	69e0      	ldr	r0, [r4, #28]
 801e028:	f7f2 fe10 	bl	8010c4c <nema_rb_submit_cl_id>
 801e02c:	f06f 437f 	mvn.w	r3, #4278190080	@ 0xff000000
 801e030:	69e0      	ldr	r0, [r4, #28]
 801e032:	4298      	cmp	r0, r3
 801e034:	d1e7      	bne.n	801e006 <nema_cl_get_space+0x62>
 801e036:	f7e4 fe81 	bl	8002d3c <nema_wait_irq_cl>
 801e03a:	2800      	cmp	r0, #0
 801e03c:	dbe3      	blt.n	801e006 <nema_cl_get_space+0x62>
 801e03e:	f04f 33ff 	mov.w	r3, #4294967295
 801e042:	61e3      	str	r3, [r4, #28]
 801e044:	6834      	ldr	r4, [r6, #0]
 801e046:	6961      	ldr	r1, [r4, #20]
 801e048:	e7cb      	b.n	801dfe2 <nema_cl_get_space+0x3e>
 801e04a:	2080      	movs	r0, #128	@ 0x80
 801e04c:	f7f2 fec2 	bl	8010dd4 <nema_set_error>
 801e050:	4620      	mov	r0, r4
 801e052:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801e054:	4638      	mov	r0, r7
 801e056:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801e058:	2008353c 	.word	0x2008353c

0801e05c <nema_cl_add_cmd>:
 801e05c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801e060:	4e2e      	ldr	r6, [pc, #184]	@ (801e11c <nema_cl_add_cmd+0xc0>)
 801e062:	4680      	mov	r8, r0
 801e064:	6834      	ldr	r4, [r6, #0]
 801e066:	460f      	mov	r7, r1
 801e068:	b35c      	cbz	r4, 801e0c2 <nema_cl_add_cmd+0x66>
 801e06a:	e9d4 2505 	ldrd	r2, r5, [r4, #20]
 801e06e:	f025 0308 	bic.w	r3, r5, #8
 801e072:	f015 0020 	ands.w	r0, r5, #32
 801e076:	61a3      	str	r3, [r4, #24]
 801e078:	6923      	ldr	r3, [r4, #16]
 801e07a:	d016      	beq.n	801e0aa <nema_cl_add_cmd+0x4e>
 801e07c:	2b00      	cmp	r3, #0
 801e07e:	bfb8      	it	lt
 801e080:	3303      	addlt	r3, #3
 801e082:	109b      	asrs	r3, r3, #2
 801e084:	005b      	lsls	r3, r3, #1
 801e086:	429a      	cmp	r2, r3
 801e088:	bfb4      	ite	lt
 801e08a:	4611      	movlt	r1, r2
 801e08c:	1ad1      	subge	r1, r2, r3
 801e08e:	1a59      	subs	r1, r3, r1
 801e090:	2903      	cmp	r1, #3
 801e092:	dd2a      	ble.n	801e0ea <nema_cl_add_cmd+0x8e>
 801e094:	1c51      	adds	r1, r2, #1
 801e096:	68a0      	ldr	r0, [r4, #8]
 801e098:	1c93      	adds	r3, r2, #2
 801e09a:	f840 8022 	str.w	r8, [r0, r2, lsl #2]
 801e09e:	68a2      	ldr	r2, [r4, #8]
 801e0a0:	f842 7021 	str.w	r7, [r2, r1, lsl #2]
 801e0a4:	6163      	str	r3, [r4, #20]
 801e0a6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801e0aa:	07a9      	lsls	r1, r5, #30
 801e0ac:	d515      	bpl.n	801e0da <nema_cl_add_cmd+0x7e>
 801e0ae:	1d11      	adds	r1, r2, #4
 801e0b0:	4299      	cmp	r1, r3
 801e0b2:	dbef      	blt.n	801e094 <nema_cl_add_cmd+0x38>
 801e0b4:	f7ff fdca 	bl	801dc4c <nema_extend_bound_cl>
 801e0b8:	2800      	cmp	r0, #0
 801e0ba:	dbf4      	blt.n	801e0a6 <nema_cl_add_cmd+0x4a>
 801e0bc:	6834      	ldr	r4, [r6, #0]
 801e0be:	6962      	ldr	r2, [r4, #20]
 801e0c0:	e7e8      	b.n	801e094 <nema_cl_add_cmd+0x38>
 801e0c2:	4620      	mov	r0, r4
 801e0c4:	f7e4 ff01 	bl	8002eca <nema_mutex_lock>
 801e0c8:	4640      	mov	r0, r8
 801e0ca:	4639      	mov	r1, r7
 801e0cc:	f7f2 fcf6 	bl	8010abc <nema_rb_inline_cmd>
 801e0d0:	4620      	mov	r0, r4
 801e0d2:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 801e0d6:	f7e4 befa 	b.w	8002ece <nema_mutex_unlock>
 801e0da:	1c51      	adds	r1, r2, #1
 801e0dc:	4299      	cmp	r1, r3
 801e0de:	dbda      	blt.n	801e096 <nema_cl_add_cmd+0x3a>
 801e0e0:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 801e0e4:	2008      	movs	r0, #8
 801e0e6:	f7f2 be75 	b.w	8010dd4 <nema_set_error>
 801e0ea:	b1a2      	cbz	r2, 801e116 <nema_cl_add_cmd+0xba>
 801e0ec:	429a      	cmp	r2, r3
 801e0ee:	d0d1      	beq.n	801e094 <nema_cl_add_cmd+0x38>
 801e0f0:	4620      	mov	r0, r4
 801e0f2:	f7ff fee9 	bl	801dec8 <nema_cl_submit_no_irq>
 801e0f6:	69e0      	ldr	r0, [r4, #28]
 801e0f8:	f7f2 fda8 	bl	8010c4c <nema_rb_submit_cl_id>
 801e0fc:	f06f 437f 	mvn.w	r3, #4278190080	@ 0xff000000
 801e100:	69e0      	ldr	r0, [r4, #28]
 801e102:	4298      	cmp	r0, r3
 801e104:	d1da      	bne.n	801e0bc <nema_cl_add_cmd+0x60>
 801e106:	f7e4 fe19 	bl	8002d3c <nema_wait_irq_cl>
 801e10a:	2800      	cmp	r0, #0
 801e10c:	bfa4      	itt	ge
 801e10e:	f04f 33ff 	movge.w	r3, #4294967295
 801e112:	61e3      	strge	r3, [r4, #28]
 801e114:	e7d2      	b.n	801e0bc <nema_cl_add_cmd+0x60>
 801e116:	2101      	movs	r1, #1
 801e118:	e7bd      	b.n	801e096 <nema_cl_add_cmd+0x3a>
 801e11a:	bf00      	nop
 801e11c:	2008353c 	.word	0x2008353c

0801e120 <nema_cl_submit>:
 801e120:	2800      	cmp	r0, #0
 801e122:	d066      	beq.n	801e1f2 <nema_cl_submit+0xd2>
 801e124:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801e126:	6944      	ldr	r4, [r0, #20]
 801e128:	2c00      	cmp	r4, #0
 801e12a:	d061      	beq.n	801e1f0 <nema_cl_submit+0xd0>
 801e12c:	6983      	ldr	r3, [r0, #24]
 801e12e:	4605      	mov	r5, r0
 801e130:	069a      	lsls	r2, r3, #26
 801e132:	d51f      	bpl.n	801e174 <nema_cl_submit+0x54>
 801e134:	6902      	ldr	r2, [r0, #16]
 801e136:	2a00      	cmp	r2, #0
 801e138:	bfb8      	it	lt
 801e13a:	3203      	addlt	r2, #3
 801e13c:	1092      	asrs	r2, r2, #2
 801e13e:	0056      	lsls	r6, r2, #1
 801e140:	42b4      	cmp	r4, r6
 801e142:	d055      	beq.n	801e1f0 <nema_cl_submit+0xd0>
 801e144:	68c7      	ldr	r7, [r0, #12]
 801e146:	bfa4      	itt	ge
 801e148:	1ba4      	subge	r4, r4, r6
 801e14a:	eb07 07c2 	addge.w	r7, r7, r2, lsl #3
 801e14e:	071b      	lsls	r3, r3, #28
 801e150:	d553      	bpl.n	801e1fa <nema_cl_submit+0xda>
 801e152:	69e8      	ldr	r0, [r5, #28]
 801e154:	2800      	cmp	r0, #0
 801e156:	da57      	bge.n	801e208 <nema_cl_submit+0xe8>
 801e158:	f04f 33ff 	mov.w	r3, #4294967295
 801e15c:	61eb      	str	r3, [r5, #28]
 801e15e:	4621      	mov	r1, r4
 801e160:	4638      	mov	r0, r7
 801e162:	f7f2 fc23 	bl	80109ac <nema_rb_submit_cmdlist2>
 801e166:	696b      	ldr	r3, [r5, #20]
 801e168:	61e8      	str	r0, [r5, #28]
 801e16a:	429e      	cmp	r6, r3
 801e16c:	bfd8      	it	le
 801e16e:	2600      	movle	r6, #0
 801e170:	616e      	str	r6, [r5, #20]
 801e172:	e02f      	b.n	801e1d4 <nema_cl_submit+0xb4>
 801e174:	4604      	mov	r4, r0
 801e176:	f06f 4640 	mvn.w	r6, #3221225472	@ 0xc0000000
 801e17a:	e012      	b.n	801e1a2 <nema_cl_submit+0x82>
 801e17c:	6923      	ldr	r3, [r4, #16]
 801e17e:	6949      	ldr	r1, [r1, #20]
 801e180:	4433      	add	r3, r6
 801e182:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
 801e186:	69a3      	ldr	r3, [r4, #24]
 801e188:	4620      	mov	r0, r4
 801e18a:	f023 0308 	bic.w	r3, r3, #8
 801e18e:	61a3      	str	r3, [r4, #24]
 801e190:	f7e4 fe9a 	bl	8002ec8 <nema_buffer_flush>
 801e194:	69a3      	ldr	r3, [r4, #24]
 801e196:	f043 0308 	orr.w	r3, r3, #8
 801e19a:	61a3      	str	r3, [r4, #24]
 801e19c:	6a24      	ldr	r4, [r4, #32]
 801e19e:	b16c      	cbz	r4, 801e1bc <nema_cl_submit+0x9c>
 801e1a0:	69a3      	ldr	r3, [r4, #24]
 801e1a2:	0758      	lsls	r0, r3, #29
 801e1a4:	68a2      	ldr	r2, [r4, #8]
 801e1a6:	6a21      	ldr	r1, [r4, #32]
 801e1a8:	d4e8      	bmi.n	801e17c <nema_cl_submit+0x5c>
 801e1aa:	071b      	lsls	r3, r3, #28
 801e1ac:	d406      	bmi.n	801e1bc <nema_cl_submit+0x9c>
 801e1ae:	4620      	mov	r0, r4
 801e1b0:	f7e4 fe8a 	bl	8002ec8 <nema_buffer_flush>
 801e1b4:	69a3      	ldr	r3, [r4, #24]
 801e1b6:	f043 0308 	orr.w	r3, r3, #8
 801e1ba:	61a3      	str	r3, [r4, #24]
 801e1bc:	2000      	movs	r0, #0
 801e1be:	f7e4 fe84 	bl	8002eca <nema_mutex_lock>
 801e1c2:	6969      	ldr	r1, [r5, #20]
 801e1c4:	4628      	mov	r0, r5
 801e1c6:	f7f2 fc75 	bl	8010ab4 <nema_rb_submit_cmdlist>
 801e1ca:	61e8      	str	r0, [r5, #28]
 801e1cc:	2000      	movs	r0, #0
 801e1ce:	f7e4 fe7e 	bl	8002ece <nema_mutex_unlock>
 801e1d2:	69e8      	ldr	r0, [r5, #28]
 801e1d4:	f7f2 fd3a 	bl	8010c4c <nema_rb_submit_cl_id>
 801e1d8:	f06f 437f 	mvn.w	r3, #4278190080	@ 0xff000000
 801e1dc:	69e8      	ldr	r0, [r5, #28]
 801e1de:	4298      	cmp	r0, r3
 801e1e0:	d106      	bne.n	801e1f0 <nema_cl_submit+0xd0>
 801e1e2:	f7e4 fdab 	bl	8002d3c <nema_wait_irq_cl>
 801e1e6:	2800      	cmp	r0, #0
 801e1e8:	db02      	blt.n	801e1f0 <nema_cl_submit+0xd0>
 801e1ea:	f04f 33ff 	mov.w	r3, #4294967295
 801e1ee:	61eb      	str	r3, [r5, #28]
 801e1f0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801e1f2:	f44f 5000 	mov.w	r0, #8192	@ 0x2000
 801e1f6:	f7f2 bded 	b.w	8010dd4 <nema_set_error>
 801e1fa:	f7e4 fe65 	bl	8002ec8 <nema_buffer_flush>
 801e1fe:	69ab      	ldr	r3, [r5, #24]
 801e200:	f043 0308 	orr.w	r3, r3, #8
 801e204:	61ab      	str	r3, [r5, #24]
 801e206:	e7a4      	b.n	801e152 <nema_cl_submit+0x32>
 801e208:	f7e4 fd98 	bl	8002d3c <nema_wait_irq_cl>
 801e20c:	2800      	cmp	r0, #0
 801e20e:	daa3      	bge.n	801e158 <nema_cl_submit+0x38>
 801e210:	e7a5      	b.n	801e15e <nema_cl_submit+0x3e>
 801e212:	bf00      	nop

0801e214 <nema_cl_wait>:
 801e214:	b510      	push	{r4, lr}
 801e216:	b170      	cbz	r0, 801e236 <nema_cl_wait+0x22>
 801e218:	4604      	mov	r4, r0
 801e21a:	69c0      	ldr	r0, [r0, #28]
 801e21c:	2800      	cmp	r0, #0
 801e21e:	da04      	bge.n	801e22a <nema_cl_wait+0x16>
 801e220:	f04f 33ff 	mov.w	r3, #4294967295
 801e224:	61e3      	str	r3, [r4, #28]
 801e226:	2000      	movs	r0, #0
 801e228:	bd10      	pop	{r4, pc}
 801e22a:	f7e4 fd87 	bl	8002d3c <nema_wait_irq_cl>
 801e22e:	2800      	cmp	r0, #0
 801e230:	daf6      	bge.n	801e220 <nema_cl_wait+0xc>
 801e232:	2000      	movs	r0, #0
 801e234:	bd10      	pop	{r4, pc}
 801e236:	f44f 5000 	mov.w	r0, #8192	@ 0x2000
 801e23a:	f7f2 fdcb 	bl	8010dd4 <nema_set_error>
 801e23e:	f04f 30ff 	mov.w	r0, #4294967295
 801e242:	bd10      	pop	{r4, pc}

0801e244 <nema_blender_init>:
 801e244:	b530      	push	{r4, r5, lr}
 801e246:	b085      	sub	sp, #20
 801e248:	466d      	mov	r5, sp
 801e24a:	2418      	movs	r4, #24
 801e24c:	4b11      	ldr	r3, [pc, #68]	@ (801e294 <nema_blender_init+0x50>)
 801e24e:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 801e250:	e885 000f 	stmia.w	r5, {r0, r1, r2, r3}
 801e254:	2101      	movs	r1, #1
 801e256:	4622      	mov	r2, r4
 801e258:	4628      	mov	r0, r5
 801e25a:	440c      	add	r4, r1
 801e25c:	f7f4 f95c 	bl	8012518 <nema_load_frag_shader>
 801e260:	2c1f      	cmp	r4, #31
 801e262:	d1f7      	bne.n	801e254 <nema_blender_init+0x10>
 801e264:	4622      	mov	r2, r4
 801e266:	2101      	movs	r1, #1
 801e268:	a802      	add	r0, sp, #8
 801e26a:	f7f4 f955 	bl	8012518 <nema_load_frag_shader>
 801e26e:	f7f3 ffeb 	bl	8012248 <nema_readHwConfig>
 801e272:	f000 5080 	and.w	r0, r0, #268435456	@ 0x10000000
 801e276:	2800      	cmp	r0, #0
 801e278:	bf14      	ite	ne
 801e27a:	2201      	movne	r2, #1
 801e27c:	2200      	moveq	r2, #0
 801e27e:	4b06      	ldr	r3, [pc, #24]	@ (801e298 <nema_blender_init+0x54>)
 801e280:	701a      	strb	r2, [r3, #0]
 801e282:	d005      	beq.n	801e290 <nema_blender_init+0x4c>
 801e284:	2200      	movs	r2, #0
 801e286:	4b05      	ldr	r3, [pc, #20]	@ (801e29c <nema_blender_init+0x58>)
 801e288:	2001      	movs	r0, #1
 801e28a:	601a      	str	r2, [r3, #0]
 801e28c:	f7f4 f964 	bl	8012558 <nema_set_rop_blend_mode>
 801e290:	b005      	add	sp, #20
 801e292:	bd30      	pop	{r4, r5, pc}
 801e294:	080338d8 	.word	0x080338d8
 801e298:	20083541 	.word	0x20083541
 801e29c:	200001e8 	.word	0x200001e8

0801e2a0 <nema_set_blend>:
 801e2a0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e2a4:	4ca5      	ldr	r4, [pc, #660]	@ (801e53c <nema_set_blend+0x29c>)
 801e2a6:	4683      	mov	fp, r0
 801e2a8:	7820      	ldrb	r0, [r4, #0]
 801e2aa:	b0a7      	sub	sp, #156	@ 0x9c
 801e2ac:	9102      	str	r1, [sp, #8]
 801e2ae:	9200      	str	r2, [sp, #0]
 801e2b0:	2800      	cmp	r0, #0
 801e2b2:	f040 8233 	bne.w	801e71c <nema_set_blend+0x47c>
 801e2b6:	469a      	mov	sl, r3
 801e2b8:	465c      	mov	r4, fp
 801e2ba:	ea4f 535b 	mov.w	r3, fp, lsr #21
 801e2be:	055b      	lsls	r3, r3, #21
 801e2c0:	930e      	str	r3, [sp, #56]	@ 0x38
 801e2c2:	f40b 0300 	and.w	r3, fp, #8388608	@ 0x800000
 801e2c6:	930c      	str	r3, [sp, #48]	@ 0x30
 801e2c8:	f40b 0380 	and.w	r3, fp, #4194304	@ 0x400000
 801e2cc:	f00b 010f 	and.w	r1, fp, #15
 801e2d0:	930d      	str	r3, [sp, #52]	@ 0x34
 801e2d2:	f40b 1300 	and.w	r3, fp, #2097152	@ 0x200000
 801e2d6:	930b      	str	r3, [sp, #44]	@ 0x2c
 801e2d8:	9101      	str	r1, [sp, #4]
 801e2da:	b2d2      	uxtb	r2, r2
 801e2dc:	fa5f f38a 	uxtb.w	r3, sl
 801e2e0:	f3cb 2903 	ubfx	r9, fp, #8, #4
 801e2e4:	f00b 7100 	and.w	r1, fp, #33554432	@ 0x2000000
 801e2e8:	f3cb 6840 	ubfx	r8, fp, #25, #1
 801e2ec:	9d02      	ldr	r5, [sp, #8]
 801e2ee:	b2e8      	uxtb	r0, r5
 801e2f0:	2804      	cmp	r0, #4
 801e2f2:	4628      	mov	r0, r5
 801e2f4:	bf28      	it	cs
 801e2f6:	2000      	movcs	r0, #0
 801e2f8:	2a04      	cmp	r2, #4
 801e2fa:	9a00      	ldr	r2, [sp, #0]
 801e2fc:	bf28      	it	cs
 801e2fe:	f04f 32ff 	movcs.w	r2, #4294967295
 801e302:	2b04      	cmp	r3, #4
 801e304:	9002      	str	r0, [sp, #8]
 801e306:	9200      	str	r2, [sp, #0]
 801e308:	bf28      	it	cs
 801e30a:	4682      	movcs	sl, r0
 801e30c:	4602      	mov	r2, r0
 801e30e:	bf34      	ite	cc
 801e310:	4650      	movcc	r0, sl
 801e312:	2002      	movcs	r0, #2
 801e314:	4b8a      	ldr	r3, [pc, #552]	@ (801e540 <nema_set_blend+0x2a0>)
 801e316:	9010      	str	r0, [sp, #64]	@ 0x40
 801e318:	781b      	ldrb	r3, [r3, #0]
 801e31a:	b14b      	cbz	r3, 801e330 <nema_set_blend+0x90>
 801e31c:	f01b 7380 	ands.w	r3, fp, #16777216	@ 0x1000000
 801e320:	9303      	str	r3, [sp, #12]
 801e322:	d102      	bne.n	801e32a <nema_set_blend+0x8a>
 801e324:	4552      	cmp	r2, sl
 801e326:	f000 830c 	beq.w	801e942 <nema_set_blend+0x6a2>
 801e32a:	2001      	movs	r0, #1
 801e32c:	f7f4 f914 	bl	8012558 <nema_set_rop_blend_mode>
 801e330:	2c00      	cmp	r4, #0
 801e332:	bfac      	ite	ge
 801e334:	4642      	movge	r2, r8
 801e336:	2201      	movlt	r2, #1
 801e338:	4b82      	ldr	r3, [pc, #520]	@ (801e544 <nema_set_blend+0x2a4>)
 801e33a:	f1bb 0f01 	cmp.w	fp, #1
 801e33e:	789b      	ldrb	r3, [r3, #2]
 801e340:	9207      	str	r2, [sp, #28]
 801e342:	9305      	str	r3, [sp, #20]
 801e344:	f000 80e0 	beq.w	801e508 <nema_set_blend+0x268>
 801e348:	f00b 4380 	and.w	r3, fp, #1073741824	@ 0x40000000
 801e34c:	9315      	str	r3, [sp, #84]	@ 0x54
 801e34e:	f3cb 7380 	ubfx	r3, fp, #30, #1
 801e352:	9306      	str	r3, [sp, #24]
 801e354:	f00b 5300 	and.w	r3, fp, #536870912	@ 0x20000000
 801e358:	9309      	str	r3, [sp, #36]	@ 0x24
 801e35a:	9b01      	ldr	r3, [sp, #4]
 801e35c:	f00b 5280 	and.w	r2, fp, #268435456	@ 0x10000000
 801e360:	2b05      	cmp	r3, #5
 801e362:	f240 80df 	bls.w	801e524 <nema_set_blend+0x284>
 801e366:	2301      	movs	r3, #1
 801e368:	930a      	str	r3, [sp, #40]	@ 0x28
 801e36a:	9304      	str	r3, [sp, #16]
 801e36c:	2303      	movs	r3, #3
 801e36e:	4976      	ldr	r1, [pc, #472]	@ (801e548 <nema_set_blend+0x2a8>)
 801e370:	9303      	str	r3, [sp, #12]
 801e372:	9108      	str	r1, [sp, #32]
 801e374:	4d75      	ldr	r5, [pc, #468]	@ (801e54c <nema_set_blend+0x2ac>)
 801e376:	2a00      	cmp	r2, #0
 801e378:	4b75      	ldr	r3, [pc, #468]	@ (801e550 <nema_set_blend+0x2b0>)
 801e37a:	bf18      	it	ne
 801e37c:	462b      	movne	r3, r5
 801e37e:	f105 4500 	add.w	r5, r5, #2147483648	@ 0x80000000
 801e382:	f105 0502 	add.w	r5, r5, #2
 801e386:	9312      	str	r3, [sp, #72]	@ 0x48
 801e388:	4b72      	ldr	r3, [pc, #456]	@ (801e554 <nema_set_blend+0x2b4>)
 801e38a:	bf08      	it	eq
 801e38c:	462b      	moveq	r3, r5
 801e38e:	f8df e20c 	ldr.w	lr, [pc, #524]	@ 801e59c <nema_set_blend+0x2fc>
 801e392:	f8df c20c 	ldr.w	ip, [pc, #524]	@ 801e5a0 <nema_set_blend+0x300>
 801e396:	9311      	str	r3, [sp, #68]	@ 0x44
 801e398:	bf14      	ite	ne
 801e39a:	4673      	movne	r3, lr
 801e39c:	4663      	moveq	r3, ip
 801e39e:	4f6e      	ldr	r7, [pc, #440]	@ (801e558 <nema_set_blend+0x2b8>)
 801e3a0:	9314      	str	r3, [sp, #80]	@ 0x50
 801e3a2:	4b6e      	ldr	r3, [pc, #440]	@ (801e55c <nema_set_blend+0x2bc>)
 801e3a4:	bf18      	it	ne
 801e3a6:	463b      	movne	r3, r7
 801e3a8:	f5a5 25c8 	sub.w	r5, r5, #409600	@ 0x64000
 801e3ac:	9313      	str	r3, [sp, #76]	@ 0x4c
 801e3ae:	4b6c      	ldr	r3, [pc, #432]	@ (801e560 <nema_set_blend+0x2c0>)
 801e3b0:	f1a5 0542 	sub.w	r5, r5, #66	@ 0x42
 801e3b4:	496b      	ldr	r1, [pc, #428]	@ (801e564 <nema_set_blend+0x2c4>)
 801e3b6:	bf18      	it	ne
 801e3b8:	4619      	movne	r1, r3
 801e3ba:	f1a3 033e 	sub.w	r3, r3, #62	@ 0x3e
 801e3be:	bf18      	it	ne
 801e3c0:	462b      	movne	r3, r5
 801e3c2:	4e69      	ldr	r6, [pc, #420]	@ (801e568 <nema_set_blend+0x2c8>)
 801e3c4:	4f69      	ldr	r7, [pc, #420]	@ (801e56c <nema_set_blend+0x2cc>)
 801e3c6:	461d      	mov	r5, r3
 801e3c8:	4b69      	ldr	r3, [pc, #420]	@ (801e570 <nema_set_blend+0x2d0>)
 801e3ca:	486a      	ldr	r0, [pc, #424]	@ (801e574 <nema_set_blend+0x2d4>)
 801e3cc:	bf18      	it	ne
 801e3ce:	4630      	movne	r0, r6
 801e3d0:	f106 4600 	add.w	r6, r6, #2147483648	@ 0x80000000
 801e3d4:	f8df c1cc 	ldr.w	ip, [pc, #460]	@ 801e5a4 <nema_set_blend+0x304>
 801e3d8:	f506 3650 	add.w	r6, r6, #212992	@ 0x34000
 801e3dc:	bf04      	itt	eq
 801e3de:	46bc      	moveq	ip, r7
 801e3e0:	461e      	moveq	r6, r3
 801e3e2:	f107 4700 	add.w	r7, r7, #2147483648	@ 0x80000000
 801e3e6:	f1a3 0340 	sub.w	r3, r3, #64	@ 0x40
 801e3ea:	f1a7 0742 	sub.w	r7, r7, #66	@ 0x42
 801e3ee:	bf08      	it	eq
 801e3f0:	461f      	moveq	r7, r3
 801e3f2:	4c61      	ldr	r4, [pc, #388]	@ (801e578 <nema_set_blend+0x2d8>)
 801e3f4:	f8df e1b0 	ldr.w	lr, [pc, #432]	@ 801e5a8 <nema_set_blend+0x308>
 801e3f8:	4a60      	ldr	r2, [pc, #384]	@ (801e57c <nema_set_blend+0x2dc>)
 801e3fa:	bf18      	it	ne
 801e3fc:	4622      	movne	r2, r4
 801e3fe:	f504 3450 	add.w	r4, r4, #212992	@ 0x34000
 801e402:	bf08      	it	eq
 801e404:	4674      	moveq	r4, lr
 801e406:	f8dd e018 	ldr.w	lr, [sp, #24]
 801e40a:	f1b8 0f00 	cmp.w	r8, #0
 801e40e:	f040 8109 	bne.w	801e624 <nema_set_blend+0x384>
 801e412:	9b07      	ldr	r3, [sp, #28]
 801e414:	2b00      	cmp	r3, #0
 801e416:	bf0c      	ite	eq
 801e418:	2300      	moveq	r3, #0
 801e41a:	f44f 1300 	movne.w	r3, #2097152	@ 0x200000
 801e41e:	930f      	str	r3, [sp, #60]	@ 0x3c
 801e420:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801e422:	2b00      	cmp	r3, #0
 801e424:	f040 8105 	bne.w	801e632 <nema_set_blend+0x392>
 801e428:	f01b 6f80 	tst.w	fp, #67108864	@ 0x4000000
 801e42c:	f000 81b4 	beq.w	801e798 <nema_set_blend+0x4f8>
 801e430:	4684      	mov	ip, r0
 801e432:	460e      	mov	r6, r1
 801e434:	4614      	mov	r4, r2
 801e436:	462f      	mov	r7, r5
 801e438:	f04f 0804 	mov.w	r8, #4
 801e43c:	2200      	movs	r2, #0
 801e43e:	4850      	ldr	r0, [pc, #320]	@ (801e580 <nema_set_blend+0x2e0>)
 801e440:	f00b 53c0 	and.w	r3, fp, #402653184	@ 0x18000000
 801e444:	4293      	cmp	r3, r2
 801e446:	f850 302a 	ldr.w	r3, [r0, sl, lsl #2]
 801e44a:	bf18      	it	ne
 801e44c:	463e      	movne	r6, r7
 801e44e:	9309      	str	r3, [sp, #36]	@ 0x24
 801e450:	9b05      	ldr	r3, [sp, #20]
 801e452:	bf16      	itet	ne
 801e454:	46a4      	movne	ip, r4
 801e456:	270e      	moveq	r7, #14
 801e458:	270c      	movne	r7, #12
 801e45a:	9216      	str	r2, [sp, #88]	@ 0x58
 801e45c:	2b00      	cmp	r3, #0
 801e45e:	f000 80eb 	beq.w	801e638 <nema_set_blend+0x398>
 801e462:	4b48      	ldr	r3, [pc, #288]	@ (801e584 <nema_set_blend+0x2e4>)
 801e464:	4948      	ldr	r1, [pc, #288]	@ (801e588 <nema_set_blend+0x2e8>)
 801e466:	9800      	ldr	r0, [sp, #0]
 801e468:	e9cd 1316 	strd	r1, r3, [sp, #88]	@ 0x58
 801e46c:	1c43      	adds	r3, r0, #1
 801e46e:	f000 8257 	beq.w	801e920 <nema_set_blend+0x680>
 801e472:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 801e476:	4b45      	ldr	r3, [pc, #276]	@ (801e58c <nema_set_blend+0x2ec>)
 801e478:	9204      	str	r2, [sp, #16]
 801e47a:	ea43 13c0 	orr.w	r3, r3, r0, lsl #7
 801e47e:	e9cd 3118 	strd	r3, r1, [sp, #96]	@ 0x60
 801e482:	2203      	movs	r2, #3
 801e484:	2102      	movs	r1, #2
 801e486:	4c42      	ldr	r4, [pc, #264]	@ (801e590 <nema_set_blend+0x2f0>)
 801e488:	f1b9 0f01 	cmp.w	r9, #1
 801e48c:	f240 8110 	bls.w	801e6b0 <nema_set_blend+0x410>
 801e490:	9b01      	ldr	r3, [sp, #4]
 801e492:	2b05      	cmp	r3, #5
 801e494:	d803      	bhi.n	801e49e <nema_set_blend+0x1fe>
 801e496:	f01b 5f70 	tst.w	fp, #1006632960	@ 0x3c000000
 801e49a:	f000 8087 	beq.w	801e5ac <nema_set_blend+0x30c>
 801e49e:	9b03      	ldr	r3, [sp, #12]
 801e4a0:	b933      	cbnz	r3, 801e4b0 <nema_set_blend+0x210>
 801e4a2:	f1b9 0f00 	cmp.w	r9, #0
 801e4a6:	d103      	bne.n	801e4b0 <nema_set_blend+0x210>
 801e4a8:	9b07      	ldr	r3, [sp, #28]
 801e4aa:	2b00      	cmp	r3, #0
 801e4ac:	f000 81ca 	beq.w	801e844 <nema_set_blend+0x5a4>
 801e4b0:	f1b8 0f1d 	cmp.w	r8, #29
 801e4b4:	f000 8150 	beq.w	801e758 <nema_set_blend+0x4b8>
 801e4b8:	4b36      	ldr	r3, [pc, #216]	@ (801e594 <nema_set_blend+0x2f4>)
 801e4ba:	a826      	add	r0, sp, #152	@ 0x98
 801e4bc:	eb00 01c1 	add.w	r1, r0, r1, lsl #3
 801e4c0:	ea43 13ca 	orr.w	r3, r3, sl, lsl #7
 801e4c4:	9803      	ldr	r0, [sp, #12]
 801e4c6:	ea43 530e 	orr.w	r3, r3, lr, lsl #20
 801e4ca:	4303      	orrs	r3, r0
 801e4cc:	e941 3c10 	strd	r3, ip, [r1, #-64]	@ 0x40
 801e4d0:	1c55      	adds	r5, r2, #1
 801e4d2:	f1b9 0f00 	cmp.w	r9, #0
 801e4d6:	f040 8150 	bne.w	801e77a <nema_set_blend+0x4da>
 801e4da:	46ce      	mov	lr, r9
 801e4dc:	4b2d      	ldr	r3, [pc, #180]	@ (801e594 <nema_set_blend+0x2f4>)
 801e4de:	f8cd 9028 	str.w	r9, [sp, #40]	@ 0x28
 801e4e2:	f8cd 9018 	str.w	r9, [sp, #24]
 801e4e6:	9308      	str	r3, [sp, #32]
 801e4e8:	9b07      	ldr	r3, [sp, #28]
 801e4ea:	2b00      	cmp	r3, #0
 801e4ec:	d163      	bne.n	801e5b6 <nema_set_blend+0x316>
 801e4ee:	4b2a      	ldr	r3, [pc, #168]	@ (801e598 <nema_set_blend+0x2f8>)
 801e4f0:	f8dd a008 	ldr.w	sl, [sp, #8]
 801e4f4:	9308      	str	r3, [sp, #32]
 801e4f6:	f04f 4600 	mov.w	r6, #2147483648	@ 0x80000000
 801e4fa:	9f01      	ldr	r7, [sp, #4]
 801e4fc:	e061      	b.n	801e5c2 <nema_set_blend+0x322>
 801e4fe:	f04f 0900 	mov.w	r9, #0
 801e502:	46c8      	mov	r8, r9
 801e504:	f8cd 901c 	str.w	r9, [sp, #28]
 801e508:	2b00      	cmp	r3, #0
 801e50a:	f000 8153 	beq.w	801e7b4 <nema_set_blend+0x514>
 801e50e:	9b01      	ldr	r3, [sp, #4]
 801e510:	2b05      	cmp	r3, #5
 801e512:	f200 8169 	bhi.w	801e7e8 <nema_set_blend+0x548>
 801e516:	2300      	movs	r3, #0
 801e518:	f04f 0b01 	mov.w	fp, #1
 801e51c:	461a      	mov	r2, r3
 801e51e:	9306      	str	r3, [sp, #24]
 801e520:	9309      	str	r3, [sp, #36]	@ 0x24
 801e522:	9315      	str	r3, [sp, #84]	@ 0x54
 801e524:	9b07      	ldr	r3, [sp, #28]
 801e526:	2b00      	cmp	r3, #0
 801e528:	f000 8200 	beq.w	801e92c <nema_set_blend+0x68c>
 801e52c:	930a      	str	r3, [sp, #40]	@ 0x28
 801e52e:	4b06      	ldr	r3, [pc, #24]	@ (801e548 <nema_set_blend+0x2a8>)
 801e530:	2001      	movs	r0, #1
 801e532:	9308      	str	r3, [sp, #32]
 801e534:	2303      	movs	r3, #3
 801e536:	e9cd 3003 	strd	r3, r0, [sp, #12]
 801e53a:	e71b      	b.n	801e374 <nema_set_blend+0xd4>
 801e53c:	20083540 	.word	0x20083540
 801e540:	20083541 	.word	0x20083541
 801e544:	20000064 	.word	0x20000064
 801e548:	080c0003 	.word	0x080c0003
 801e54c:	000761c5 	.word	0x000761c5
 801e550:	000761c7 	.word	0x000761c7
 801e554:	800761c5 	.word	0x800761c5
 801e558:	80076185 	.word	0x80076185
 801e55c:	80076187 	.word	0x80076187
 801e560:	800121c5 	.word	0x800121c5
 801e564:	800121c7 	.word	0x800121c7
 801e568:	000121c5 	.word	0x000121c5
 801e56c:	000461c7 	.word	0x000461c7
 801e570:	800461c7 	.word	0x800461c7
 801e574:	000121c7 	.word	0x000121c7
 801e578:	00012185 	.word	0x00012185
 801e57c:	00012187 	.word	0x00012187
 801e580:	08036028 	.word	0x08036028
 801e584:	02009408 	.word	0x02009408
 801e588:	00f40182 	.word	0x00f40182
 801e58c:	000c100b 	.word	0x000c100b
 801e590:	1000fc00 	.word	0x1000fc00
 801e594:	080c0000 	.word	0x080c0000
 801e598:	080c0002 	.word	0x080c0002
 801e59c:	00076185 	.word	0x00076185
 801e5a0:	00076187 	.word	0x00076187
 801e5a4:	000461c5 	.word	0x000461c5
 801e5a8:	00046187 	.word	0x00046187
 801e5ac:	4615      	mov	r5, r2
 801e5ae:	460a      	mov	r2, r1
 801e5b0:	f1b9 0f00 	cmp.w	r9, #0
 801e5b4:	d098      	beq.n	801e4e8 <nema_set_blend+0x248>
 801e5b6:	9b06      	ldr	r3, [sp, #24]
 801e5b8:	2b00      	cmp	r3, #0
 801e5ba:	f000 8202 	beq.w	801e9c2 <nema_set_blend+0x722>
 801e5be:	2600      	movs	r6, #0
 801e5c0:	9f01      	ldr	r7, [sp, #4]
 801e5c2:	48c1      	ldr	r0, [pc, #772]	@ (801e8c8 <nema_set_blend+0x628>)
 801e5c4:	49c1      	ldr	r1, [pc, #772]	@ (801e8cc <nema_set_blend+0x62c>)
 801e5c6:	f850 3027 	ldr.w	r3, [r0, r7, lsl #2]
 801e5ca:	f851 7027 	ldr.w	r7, [r1, r7, lsl #2]
 801e5ce:	015b      	lsls	r3, r3, #5
 801e5d0:	ea43 3387 	orr.w	r3, r3, r7, lsl #14
 801e5d4:	9f08      	ldr	r7, [sp, #32]
 801e5d6:	ea47 5e0e 	orr.w	lr, r7, lr, lsl #20
 801e5da:	4fbd      	ldr	r7, [pc, #756]	@ (801e8d0 <nema_set_blend+0x630>)
 801e5dc:	ea4e 1eca 	orr.w	lr, lr, sl, lsl #7
 801e5e0:	431f      	orrs	r7, r3
 801e5e2:	ab26      	add	r3, sp, #152	@ 0x98
 801e5e4:	eb03 02c2 	add.w	r2, r3, r2, lsl #3
 801e5e8:	4337      	orrs	r7, r6
 801e5ea:	e942 e710 	strd	lr, r7, [r2, #-64]	@ 0x40
 801e5ee:	2e00      	cmp	r6, #0
 801e5f0:	f000 813f 	beq.w	801e872 <nema_set_blend+0x5d2>
 801e5f4:	9804      	ldr	r0, [sp, #16]
 801e5f6:	f7f3 fe95 	bl	8012324 <nema_matmul_bypass>
 801e5fa:	4629      	mov	r1, r5
 801e5fc:	2200      	movs	r2, #0
 801e5fe:	a816      	add	r0, sp, #88	@ 0x58
 801e600:	f7f3 ff8a 	bl	8012518 <nema_load_frag_shader>
 801e604:	4bb3      	ldr	r3, [pc, #716]	@ (801e8d4 <nema_set_blend+0x634>)
 801e606:	f1c5 0520 	rsb	r5, r5, #32
 801e60a:	6818      	ldr	r0, [r3, #0]
 801e60c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801e60e:	ea43 0800 	orr.w	r8, r3, r0
 801e612:	ea48 0005 	orr.w	r0, r8, r5
 801e616:	ea44 4000 	orr.w	r0, r4, r0, lsl #16
 801e61a:	f7f3 ff97 	bl	801254c <nema_set_frag_ptr>
 801e61e:	b027      	add	sp, #156	@ 0x9c
 801e620:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e624:	f44f 1380 	mov.w	r3, #1048576	@ 0x100000
 801e628:	930f      	str	r3, [sp, #60]	@ 0x3c
 801e62a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801e62c:	2b00      	cmp	r3, #0
 801e62e:	f43f aefb 	beq.w	801e428 <nema_set_blend+0x188>
 801e632:	f04f 0811 	mov.w	r8, #17
 801e636:	e701      	b.n	801e43c <nema_set_blend+0x19c>
 801e638:	9b00      	ldr	r3, [sp, #0]
 801e63a:	1c5a      	adds	r2, r3, #1
 801e63c:	f000 8136 	beq.w	801e8ac <nema_set_blend+0x60c>
 801e640:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 801e644:	9a05      	ldr	r2, [sp, #20]
 801e646:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 801e64a:	9204      	str	r2, [sp, #16]
 801e64c:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 801e64e:	2a00      	cmp	r2, #0
 801e650:	f000 80a9 	beq.w	801e7a6 <nema_set_blend+0x506>
 801e654:	f44f 2440 	mov.w	r4, #786432	@ 0xc0000
 801e658:	499f      	ldr	r1, [pc, #636]	@ (801e8d8 <nema_set_blend+0x638>)
 801e65a:	4aa0      	ldr	r2, [pc, #640]	@ (801e8dc <nema_set_blend+0x63c>)
 801e65c:	f44f 5500 	mov.w	r5, #8192	@ 0x2000
 801e660:	9219      	str	r2, [sp, #100]	@ 0x64
 801e662:	2204      	movs	r2, #4
 801e664:	9116      	str	r1, [sp, #88]	@ 0x58
 801e666:	9205      	str	r2, [sp, #20]
 801e668:	2102      	movs	r1, #2
 801e66a:	2203      	movs	r2, #3
 801e66c:	e9cd 5417 	strd	r5, r4, [sp, #92]	@ 0x5c
 801e670:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801e672:	2c00      	cmp	r4, #0
 801e674:	d04f      	beq.n	801e716 <nema_set_blend+0x476>
 801e676:	9c00      	ldr	r4, [sp, #0]
 801e678:	f1b4 3fff 	cmp.w	r4, #4294967295
 801e67c:	d04b      	beq.n	801e716 <nema_set_blend+0x476>
 801e67e:	f241 050b 	movw	r5, #4107	@ 0x100b
 801e682:	2300      	movs	r3, #0
 801e684:	f850 4024 	ldr.w	r4, [r0, r4, lsl #2]
 801e688:	a826      	add	r0, sp, #152	@ 0x98
 801e68a:	eb00 00c1 	add.w	r0, r0, r1, lsl #3
 801e68e:	9910      	ldr	r1, [sp, #64]	@ 0x40
 801e690:	f044 5480 	orr.w	r4, r4, #268435456	@ 0x10000000
 801e694:	ea45 11c1 	orr.w	r1, r5, r1, lsl #7
 801e698:	f1b9 0f01 	cmp.w	r9, #1
 801e69c:	f840 1c40 	str.w	r1, [r0, #-64]
 801e6a0:	f444 4420 	orr.w	r4, r4, #40960	@ 0xa000
 801e6a4:	4611      	mov	r1, r2
 801e6a6:	f840 3c3c 	str.w	r3, [r0, #-60]
 801e6aa:	9a05      	ldr	r2, [sp, #20]
 801e6ac:	f63f aef0 	bhi.w	801e490 <nema_set_blend+0x1f0>
 801e6b0:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801e6b2:	2b00      	cmp	r3, #0
 801e6b4:	f47f aeec 	bne.w	801e490 <nema_set_blend+0x1f0>
 801e6b8:	9b00      	ldr	r3, [sp, #0]
 801e6ba:	3301      	adds	r3, #1
 801e6bc:	f47f aee8 	bne.w	801e490 <nema_set_blend+0x1f0>
 801e6c0:	9b02      	ldr	r3, [sp, #8]
 801e6c2:	4553      	cmp	r3, sl
 801e6c4:	f47f aee4 	bne.w	801e490 <nema_set_blend+0x1f0>
 801e6c8:	f1b9 0f00 	cmp.w	r9, #0
 801e6cc:	bf15      	itete	ne
 801e6ce:	f44f 6600 	movne.w	r6, #2048	@ 0x800
 801e6d2:	f44f 5600 	moveq.w	r6, #8192	@ 0x2000
 801e6d6:	f44f 1500 	movne.w	r5, #2097152	@ 0x200000
 801e6da:	f44f 0500 	moveq.w	r5, #8388608	@ 0x800000
 801e6de:	9f01      	ldr	r7, [sp, #4]
 801e6e0:	f8df c1e4 	ldr.w	ip, [pc, #484]	@ 801e8c8 <nema_set_blend+0x628>
 801e6e4:	4879      	ldr	r0, [pc, #484]	@ (801e8cc <nema_set_blend+0x62c>)
 801e6e6:	f85c 3027 	ldr.w	r3, [ip, r7, lsl #2]
 801e6ea:	f850 0027 	ldr.w	r0, [r0, r7, lsl #2]
 801e6ee:	015b      	lsls	r3, r3, #5
 801e6f0:	ea43 3380 	orr.w	r3, r3, r0, lsl #14
 801e6f4:	f043 430a 	orr.w	r3, r3, #2315255808	@ 0x8a000000
 801e6f8:	f043 0306 	orr.w	r3, r3, #6
 801e6fc:	4333      	orrs	r3, r6
 801e6fe:	432b      	orrs	r3, r5
 801e700:	4877      	ldr	r0, [pc, #476]	@ (801e8e0 <nema_set_blend+0x640>)
 801e702:	9d02      	ldr	r5, [sp, #8]
 801e704:	ae26      	add	r6, sp, #152	@ 0x98
 801e706:	ea40 10c5 	orr.w	r0, r0, r5, lsl #7
 801e70a:	eb06 01c1 	add.w	r1, r6, r1, lsl #3
 801e70e:	4615      	mov	r5, r2
 801e710:	e941 0310 	strd	r0, r3, [r1, #-64]	@ 0x40
 801e714:	e76e      	b.n	801e5f4 <nema_set_blend+0x354>
 801e716:	f043 5480 	orr.w	r4, r3, #268435456	@ 0x10000000
 801e71a:	e6b5      	b.n	801e488 <nema_set_blend+0x1e8>
 801e71c:	f04f 3020 	mov.w	r0, #538976288	@ 0x20202020
 801e720:	f7f3 ff78 	bl	8012614 <nema_set_raster_color>
 801e724:	2000      	movs	r0, #0
 801e726:	f7f2 fc97 	bl	8011058 <nema_enable_gradient>
 801e72a:	f04f 0800 	mov.w	r8, #0
 801e72e:	f04f 0901 	mov.w	r9, #1
 801e732:	23ff      	movs	r3, #255	@ 0xff
 801e734:	f240 1401 	movw	r4, #257	@ 0x101
 801e738:	f04f 3aff 	mov.w	sl, #4294967295
 801e73c:	f8cd 8038 	str.w	r8, [sp, #56]	@ 0x38
 801e740:	f8cd 802c 	str.w	r8, [sp, #44]	@ 0x2c
 801e744:	e9cd 880c 	strd	r8, r8, [sp, #48]	@ 0x30
 801e748:	4641      	mov	r1, r8
 801e74a:	f8cd 9004 	str.w	r9, [sp, #4]
 801e74e:	461a      	mov	r2, r3
 801e750:	46a3      	mov	fp, r4
 801e752:	f8cd a000 	str.w	sl, [sp]
 801e756:	e5c9      	b.n	801e2ec <nema_set_blend+0x4c>
 801e758:	2f0e      	cmp	r7, #14
 801e75a:	f47f aead 	bne.w	801e4b8 <nema_set_blend+0x218>
 801e75e:	9b03      	ldr	r3, [sp, #12]
 801e760:	2b00      	cmp	r3, #0
 801e762:	f47f aea9 	bne.w	801e4b8 <nema_set_blend+0x218>
 801e766:	9b06      	ldr	r3, [sp, #24]
 801e768:	2b00      	cmp	r3, #0
 801e76a:	f47f aea5 	bne.w	801e4b8 <nema_set_blend+0x218>
 801e76e:	4615      	mov	r5, r2
 801e770:	460a      	mov	r2, r1
 801e772:	f1b9 0f00 	cmp.w	r9, #0
 801e776:	f43f aeb0 	beq.w	801e4da <nema_set_blend+0x23a>
 801e77a:	f04f 0e00 	mov.w	lr, #0
 801e77e:	4b59      	ldr	r3, [pc, #356]	@ (801e8e4 <nema_set_blend+0x644>)
 801e780:	9308      	str	r3, [sp, #32]
 801e782:	9b01      	ldr	r3, [sp, #4]
 801e784:	2b00      	cmp	r3, #0
 801e786:	f000 8123 	beq.w	801e9d0 <nema_set_blend+0x730>
 801e78a:	2b01      	cmp	r3, #1
 801e78c:	f04f 0600 	mov.w	r6, #0
 801e790:	f000 8137 	beq.w	801ea02 <nema_set_blend+0x762>
 801e794:	461f      	mov	r7, r3
 801e796:	e714      	b.n	801e5c2 <nema_set_blend+0x322>
 801e798:	e9dd 6c11 	ldrd	r6, ip, [sp, #68]	@ 0x44
 801e79c:	e9dd 7413 	ldrd	r7, r4, [sp, #76]	@ 0x4c
 801e7a0:	f04f 081d 	mov.w	r8, #29
 801e7a4:	e64a      	b.n	801e43c <nema_set_blend+0x19c>
 801e7a6:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 801e7a8:	2a00      	cmp	r2, #0
 801e7aa:	d046      	beq.n	801e83a <nema_set_blend+0x59a>
 801e7ac:	f44f 2440 	mov.w	r4, #786432	@ 0xc0000
 801e7b0:	494d      	ldr	r1, [pc, #308]	@ (801e8e8 <nema_set_blend+0x648>)
 801e7b2:	e752      	b.n	801e65a <nema_set_blend+0x3ba>
 801e7b4:	9b02      	ldr	r3, [sp, #8]
 801e7b6:	2b00      	cmp	r3, #0
 801e7b8:	f47f aea9 	bne.w	801e50e <nema_set_blend+0x26e>
 801e7bc:	9b00      	ldr	r3, [sp, #0]
 801e7be:	3301      	adds	r3, #1
 801e7c0:	f000 8114 	beq.w	801e9ec <nema_set_blend+0x74c>
 801e7c4:	9802      	ldr	r0, [sp, #8]
 801e7c6:	f7f3 fdad 	bl	8012324 <nema_matmul_bypass>
 801e7ca:	4b42      	ldr	r3, [pc, #264]	@ (801e8d4 <nema_set_blend+0x634>)
 801e7cc:	4947      	ldr	r1, [pc, #284]	@ (801e8ec <nema_set_blend+0x64c>)
 801e7ce:	9800      	ldr	r0, [sp, #0]
 801e7d0:	681a      	ldr	r2, [r3, #0]
 801e7d2:	4b47      	ldr	r3, [pc, #284]	@ (801e8f0 <nema_set_blend+0x650>)
 801e7d4:	f851 0020 	ldr.w	r0, [r1, r0, lsl #2]
 801e7d8:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 801e7dc:	4318      	orrs	r0, r3
 801e7de:	f7f3 feb5 	bl	801254c <nema_set_frag_ptr>
 801e7e2:	b027      	add	sp, #156	@ 0x9c
 801e7e4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e7e8:	2301      	movs	r3, #1
 801e7ea:	930a      	str	r3, [sp, #40]	@ 0x28
 801e7ec:	9304      	str	r3, [sp, #16]
 801e7ee:	469b      	mov	fp, r3
 801e7f0:	2303      	movs	r3, #3
 801e7f2:	f04f 0e00 	mov.w	lr, #0
 801e7f6:	9303      	str	r3, [sp, #12]
 801e7f8:	f103 6300 	add.w	r3, r3, #134217728	@ 0x8000000
 801e7fc:	f503 2340 	add.w	r3, r3, #786432	@ 0xc0000
 801e800:	9308      	str	r3, [sp, #32]
 801e802:	4b3c      	ldr	r3, [pc, #240]	@ (801e8f4 <nema_set_blend+0x654>)
 801e804:	f8cd e018 	str.w	lr, [sp, #24]
 801e808:	9312      	str	r3, [sp, #72]	@ 0x48
 801e80a:	f103 4300 	add.w	r3, r3, #2147483648	@ 0x80000000
 801e80e:	9311      	str	r3, [sp, #68]	@ 0x44
 801e810:	4b39      	ldr	r3, [pc, #228]	@ (801e8f8 <nema_set_blend+0x658>)
 801e812:	f8cd e024 	str.w	lr, [sp, #36]	@ 0x24
 801e816:	9314      	str	r3, [sp, #80]	@ 0x50
 801e818:	f103 4300 	add.w	r3, r3, #2147483648	@ 0x80000000
 801e81c:	9313      	str	r3, [sp, #76]	@ 0x4c
 801e81e:	f5a3 23c8 	sub.w	r3, r3, #409600	@ 0x64000
 801e822:	f8cd e054 	str.w	lr, [sp, #84]	@ 0x54
 801e826:	4835      	ldr	r0, [pc, #212]	@ (801e8fc <nema_set_blend+0x65c>)
 801e828:	4935      	ldr	r1, [pc, #212]	@ (801e900 <nema_set_blend+0x660>)
 801e82a:	4a36      	ldr	r2, [pc, #216]	@ (801e904 <nema_set_blend+0x664>)
 801e82c:	461d      	mov	r5, r3
 801e82e:	f8df c0ec 	ldr.w	ip, [pc, #236]	@ 801e91c <nema_set_blend+0x67c>
 801e832:	4e35      	ldr	r6, [pc, #212]	@ (801e908 <nema_set_blend+0x668>)
 801e834:	4c35      	ldr	r4, [pc, #212]	@ (801e90c <nema_set_blend+0x66c>)
 801e836:	4f36      	ldr	r7, [pc, #216]	@ (801e910 <nema_set_blend+0x670>)
 801e838:	e5e7      	b.n	801e40a <nema_set_blend+0x16a>
 801e83a:	4611      	mov	r1, r2
 801e83c:	2202      	movs	r2, #2
 801e83e:	9205      	str	r2, [sp, #20]
 801e840:	2201      	movs	r2, #1
 801e842:	e715      	b.n	801e670 <nema_set_blend+0x3d0>
 801e844:	9b01      	ldr	r3, [sp, #4]
 801e846:	2b01      	cmp	r3, #1
 801e848:	f47f ae32 	bne.w	801e4b0 <nema_set_blend+0x210>
 801e84c:	9b15      	ldr	r3, [sp, #84]	@ 0x54
 801e84e:	2b00      	cmp	r3, #0
 801e850:	f47f ae2e 	bne.w	801e4b0 <nema_set_blend+0x210>
 801e854:	a826      	add	r0, sp, #152	@ 0x98
 801e856:	eb00 01c1 	add.w	r1, r0, r1, lsl #3
 801e85a:	4b21      	ldr	r3, [pc, #132]	@ (801e8e0 <nema_set_blend+0x640>)
 801e85c:	9802      	ldr	r0, [sp, #8]
 801e85e:	f841 6c3c 	str.w	r6, [r1, #-60]
 801e862:	ea43 13c0 	orr.w	r3, r3, r0, lsl #7
 801e866:	ea43 530e 	orr.w	r3, r3, lr, lsl #20
 801e86a:	4615      	mov	r5, r2
 801e86c:	f841 3c40 	str.w	r3, [r1, #-64]
 801e870:	e6c0      	b.n	801e5f4 <nema_set_blend+0x354>
 801e872:	f44f 0680 	mov.w	r6, #4194304	@ 0x400000
 801e876:	f44f 5780 	mov.w	r7, #4096	@ 0x1000
 801e87a:	462a      	mov	r2, r5
 801e87c:	3501      	adds	r5, #1
 801e87e:	f850 0029 	ldr.w	r0, [r0, r9, lsl #2]
 801e882:	f851 1029 	ldr.w	r1, [r1, r9, lsl #2]
 801e886:	0140      	lsls	r0, r0, #5
 801e888:	4b22      	ldr	r3, [pc, #136]	@ (801e914 <nema_set_blend+0x674>)
 801e88a:	ea40 3081 	orr.w	r0, r0, r1, lsl #14
 801e88e:	4303      	orrs	r3, r0
 801e890:	4921      	ldr	r1, [pc, #132]	@ (801e918 <nema_set_blend+0x678>)
 801e892:	9802      	ldr	r0, [sp, #8]
 801e894:	433b      	orrs	r3, r7
 801e896:	ea41 11c0 	orr.w	r1, r1, r0, lsl #7
 801e89a:	a826      	add	r0, sp, #152	@ 0x98
 801e89c:	eb00 02c2 	add.w	r2, r0, r2, lsl #3
 801e8a0:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 801e8a2:	4333      	orrs	r3, r6
 801e8a4:	4301      	orrs	r1, r0
 801e8a6:	e942 1310 	strd	r1, r3, [r2, #-64]	@ 0x40
 801e8aa:	e6a3      	b.n	801e5f4 <nema_set_blend+0x354>
 801e8ac:	9b04      	ldr	r3, [sp, #16]
 801e8ae:	2b00      	cmp	r3, #0
 801e8b0:	f000 8082 	beq.w	801e9b8 <nema_set_blend+0x718>
 801e8b4:	9a05      	ldr	r2, [sp, #20]
 801e8b6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801e8b8:	9203      	str	r2, [sp, #12]
 801e8ba:	920a      	str	r2, [sp, #40]	@ 0x28
 801e8bc:	4a09      	ldr	r2, [pc, #36]	@ (801e8e4 <nema_set_blend+0x644>)
 801e8be:	f443 4330 	orr.w	r3, r3, #45056	@ 0xb000
 801e8c2:	9208      	str	r2, [sp, #32]
 801e8c4:	e6c2      	b.n	801e64c <nema_set_blend+0x3ac>
 801e8c6:	bf00      	nop
 801e8c8:	08036038 	.word	0x08036038
 801e8cc:	08036068 	.word	0x08036068
 801e8d0:	0a002007 	.word	0x0a002007
 801e8d4:	200001e8 	.word	0x200001e8
 801e8d8:	100c118b 	.word	0x100c118b
 801e8dc:	0081a042 	.word	0x0081a042
 801e8e0:	080c0002 	.word	0x080c0002
 801e8e4:	080c0000 	.word	0x080c0000
 801e8e8:	100c1183 	.word	0x100c1183
 801e8ec:	08036028 	.word	0x08036028
 801e8f0:	141f801f 	.word	0x141f801f
 801e8f4:	000761c7 	.word	0x000761c7
 801e8f8:	00076187 	.word	0x00076187
 801e8fc:	000121c7 	.word	0x000121c7
 801e900:	800121c7 	.word	0x800121c7
 801e904:	00012187 	.word	0x00012187
 801e908:	800461c7 	.word	0x800461c7
 801e90c:	00046187 	.word	0x00046187
 801e910:	80046187 	.word	0x80046187
 801e914:	80080206 	.word	0x80080206
 801e918:	004e0002 	.word	0x004e0002
 801e91c:	000461c7 	.word	0x000461c7
 801e920:	2301      	movs	r3, #1
 801e922:	2202      	movs	r2, #2
 801e924:	9304      	str	r3, [sp, #16]
 801e926:	4619      	mov	r1, r3
 801e928:	4c38      	ldr	r4, [pc, #224]	@ (801ea0c <nema_set_blend+0x76c>)
 801e92a:	e5ad      	b.n	801e488 <nema_set_blend+0x1e8>
 801e92c:	f1b9 0f00 	cmp.w	r9, #0
 801e930:	d055      	beq.n	801e9de <nema_set_blend+0x73e>
 801e932:	2301      	movs	r3, #1
 801e934:	2103      	movs	r1, #3
 801e936:	930a      	str	r3, [sp, #40]	@ 0x28
 801e938:	e9cd 1303 	strd	r1, r3, [sp, #12]
 801e93c:	4b34      	ldr	r3, [pc, #208]	@ (801ea10 <nema_set_blend+0x770>)
 801e93e:	9308      	str	r3, [sp, #32]
 801e940:	e518      	b.n	801e374 <nema_set_blend+0xd4>
 801e942:	2c00      	cmp	r4, #0
 801e944:	bfbd      	ittte	lt
 801e946:	f02b 4b00 	biclt.w	fp, fp, #2147483648	@ 0x80000000
 801e94a:	f04f 4202 	movlt.w	r2, #2181038080	@ 0x82000000
 801e94e:	f04f 4300 	movlt.w	r3, #2147483648	@ 0x80000000
 801e952:	f04f 7200 	movge.w	r2, #33554432	@ 0x2000000
 801e956:	b111      	cbz	r1, 801e95e <nema_set_blend+0x6be>
 801e958:	4613      	mov	r3, r2
 801e95a:	f02b 7b00 	bic.w	fp, fp, #33554432	@ 0x2000000
 801e95e:	9a01      	ldr	r2, [sp, #4]
 801e960:	ea42 2009 	orr.w	r0, r2, r9, lsl #8
 801e964:	4318      	orrs	r0, r3
 801e966:	f7f3 fdf7 	bl	8012558 <nema_set_rop_blend_mode>
 801e96a:	ea4f 505b 	mov.w	r0, fp, lsr #21
 801e96e:	4b29      	ldr	r3, [pc, #164]	@ (801ea14 <nema_set_blend+0x774>)
 801e970:	0540      	lsls	r0, r0, #21
 801e972:	f040 0201 	orr.w	r2, r0, #1
 801e976:	789b      	ldrb	r3, [r3, #2]
 801e978:	2a01      	cmp	r2, #1
 801e97a:	9201      	str	r2, [sp, #4]
 801e97c:	9305      	str	r3, [sp, #20]
 801e97e:	f43f adbe 	beq.w	801e4fe <nema_set_blend+0x25e>
 801e982:	f00b 4380 	and.w	r3, fp, #1073741824	@ 0x40000000
 801e986:	9315      	str	r3, [sp, #84]	@ 0x54
 801e988:	f3cb 7380 	ubfx	r3, fp, #30, #1
 801e98c:	9306      	str	r3, [sp, #24]
 801e98e:	f00b 5300 	and.w	r3, fp, #536870912	@ 0x20000000
 801e992:	9309      	str	r3, [sp, #36]	@ 0x24
 801e994:	2301      	movs	r3, #1
 801e996:	f04f 0900 	mov.w	r9, #0
 801e99a:	f00b 5280 	and.w	r2, fp, #268435456	@ 0x10000000
 801e99e:	f8dd b004 	ldr.w	fp, [sp, #4]
 801e9a2:	9301      	str	r3, [sp, #4]
 801e9a4:	4b1c      	ldr	r3, [pc, #112]	@ (801ea18 <nema_set_blend+0x778>)
 801e9a6:	46c8      	mov	r8, r9
 801e9a8:	f8cd 901c 	str.w	r9, [sp, #28]
 801e9ac:	f8cd 9028 	str.w	r9, [sp, #40]	@ 0x28
 801e9b0:	f8cd 9010 	str.w	r9, [sp, #16]
 801e9b4:	9308      	str	r3, [sp, #32]
 801e9b6:	e4dd      	b.n	801e374 <nema_set_blend+0xd4>
 801e9b8:	2201      	movs	r2, #1
 801e9ba:	9b05      	ldr	r3, [sp, #20]
 801e9bc:	9204      	str	r2, [sp, #16]
 801e9be:	930a      	str	r3, [sp, #40]	@ 0x28
 801e9c0:	e644      	b.n	801e64c <nema_set_blend+0x3ac>
 801e9c2:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801e9c4:	2b00      	cmp	r3, #0
 801e9c6:	f43f aedc 	beq.w	801e782 <nema_set_blend+0x4e2>
 801e9ca:	9e06      	ldr	r6, [sp, #24]
 801e9cc:	9f01      	ldr	r7, [sp, #4]
 801e9ce:	e5f8      	b.n	801e5c2 <nema_set_blend+0x322>
 801e9d0:	f44f 0600 	mov.w	r6, #8388608	@ 0x800000
 801e9d4:	f44f 5700 	mov.w	r7, #8192	@ 0x2000
 801e9d8:	4910      	ldr	r1, [pc, #64]	@ (801ea1c <nema_set_blend+0x77c>)
 801e9da:	4811      	ldr	r0, [pc, #68]	@ (801ea20 <nema_set_blend+0x780>)
 801e9dc:	e74f      	b.n	801e87e <nema_set_blend+0x5de>
 801e9de:	4b0e      	ldr	r3, [pc, #56]	@ (801ea18 <nema_set_blend+0x778>)
 801e9e0:	f8cd 9028 	str.w	r9, [sp, #40]	@ 0x28
 801e9e4:	9308      	str	r3, [sp, #32]
 801e9e6:	e9cd 9903 	strd	r9, r9, [sp, #12]
 801e9ea:	e4c3      	b.n	801e374 <nema_set_blend+0xd4>
 801e9ec:	2001      	movs	r0, #1
 801e9ee:	f7f3 fc99 	bl	8012324 <nema_matmul_bypass>
 801e9f2:	4a0c      	ldr	r2, [pc, #48]	@ (801ea24 <nema_set_blend+0x784>)
 801e9f4:	4b0c      	ldr	r3, [pc, #48]	@ (801ea28 <nema_set_blend+0x788>)
 801e9f6:	6810      	ldr	r0, [r2, #0]
 801e9f8:	ea43 4000 	orr.w	r0, r3, r0, lsl #16
 801e9fc:	f7f3 fda6 	bl	801254c <nema_set_frag_ptr>
 801ea00:	e6ef      	b.n	801e7e2 <nema_set_blend+0x542>
 801ea02:	4637      	mov	r7, r6
 801ea04:	4905      	ldr	r1, [pc, #20]	@ (801ea1c <nema_set_blend+0x77c>)
 801ea06:	4806      	ldr	r0, [pc, #24]	@ (801ea20 <nema_set_blend+0x780>)
 801ea08:	e739      	b.n	801e87e <nema_set_blend+0x5de>
 801ea0a:	bf00      	nop
 801ea0c:	1000fc00 	.word	0x1000fc00
 801ea10:	080c0003 	.word	0x080c0003
 801ea14:	20000064 	.word	0x20000064
 801ea18:	080c0000 	.word	0x080c0000
 801ea1c:	08036068 	.word	0x08036068
 801ea20:	08036038 	.word	0x08036038
 801ea24:	200001e8 	.word	0x200001e8
 801ea28:	141f001f 	.word	0x141f001f

0801ea2c <nema_set_const_color>:
 801ea2c:	b510      	push	{r4, lr}
 801ea2e:	4604      	mov	r4, r0
 801ea30:	2001      	movs	r0, #1
 801ea32:	4621      	mov	r1, r4
 801ea34:	f7f2 fa90 	bl	8010f58 <nema_set_const_reg>
 801ea38:	4b04      	ldr	r3, [pc, #16]	@ (801ea4c <nema_set_const_color+0x20>)
 801ea3a:	781b      	ldrb	r3, [r3, #0]
 801ea3c:	b903      	cbnz	r3, 801ea40 <nema_set_const_color+0x14>
 801ea3e:	bd10      	pop	{r4, pc}
 801ea40:	4620      	mov	r0, r4
 801ea42:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801ea46:	f7f3 bd8d 	b.w	8012564 <nema_set_rop_const_color>
 801ea4a:	bf00      	nop
 801ea4c:	20083541 	.word	0x20083541

0801ea50 <calculate_aabb_per_shape>:
 801ea50:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ea54:	ed2d 8b10 	vpush	{d8-d15}
 801ea58:	2300      	movs	r3, #0
 801ea5a:	eddf 7af0 	vldr	s15, [pc, #960]	@ 801ee1c <calculate_aabb_per_shape+0x3cc>
 801ea5e:	ed9f 7af0 	vldr	s14, [pc, #960]	@ 801ee20 <calculate_aabb_per_shape+0x3d0>
 801ea62:	f8d0 8000 	ldr.w	r8, [r0]
 801ea66:	b091      	sub	sp, #68	@ 0x44
 801ea68:	4604      	mov	r4, r0
 801ea6a:	edc0 7a04 	vstr	s15, [r0, #16]
 801ea6e:	edc0 7a05 	vstr	s15, [r0, #20]
 801ea72:	ed80 7a06 	vstr	s14, [r0, #24]
 801ea76:	ed80 7a07 	vstr	s14, [r0, #28]
 801ea7a:	62c3      	str	r3, [r0, #44]	@ 0x2c
 801ea7c:	6283      	str	r3, [r0, #40]	@ 0x28
 801ea7e:	6343      	str	r3, [r0, #52]	@ 0x34
 801ea80:	6303      	str	r3, [r0, #48]	@ 0x30
 801ea82:	63c3      	str	r3, [r0, #60]	@ 0x3c
 801ea84:	6383      	str	r3, [r0, #56]	@ 0x38
 801ea86:	6443      	str	r3, [r0, #68]	@ 0x44
 801ea88:	6403      	str	r3, [r0, #64]	@ 0x40
 801ea8a:	6483      	str	r3, [r0, #72]	@ 0x48
 801ea8c:	64c3      	str	r3, [r0, #76]	@ 0x4c
 801ea8e:	6503      	str	r3, [r0, #80]	@ 0x50
 801ea90:	6543      	str	r3, [r0, #84]	@ 0x54
 801ea92:	6583      	str	r3, [r0, #88]	@ 0x58
 801ea94:	65c3      	str	r3, [r0, #92]	@ 0x5c
 801ea96:	f1b8 0f00 	cmp.w	r8, #0
 801ea9a:	f000 86c7 	beq.w	801f82c <calculate_aabb_per_shape+0xddc>
 801ea9e:	6882      	ldr	r2, [r0, #8]
 801eaa0:	7811      	ldrb	r1, [r2, #0]
 801eaa2:	f021 0190 	bic.w	r1, r1, #144	@ 0x90
 801eaa6:	2901      	cmp	r1, #1
 801eaa8:	d003      	beq.n	801eab2 <calculate_aabb_per_shape+0x62>
 801eaaa:	6103      	str	r3, [r0, #16]
 801eaac:	6143      	str	r3, [r0, #20]
 801eaae:	6183      	str	r3, [r0, #24]
 801eab0:	61c3      	str	r3, [r0, #28]
 801eab2:	ed9f dadc 	vldr	s26, [pc, #880]	@ 801ee24 <calculate_aabb_per_shape+0x3d4>
 801eab6:	f04f 0c00 	mov.w	ip, #0
 801eaba:	eeb0 6a4d 	vmov.f32	s12, s26
 801eabe:	4667      	mov	r7, ip
 801eac0:	46e1      	mov	r9, ip
 801eac2:	4666      	mov	r6, ip
 801eac4:	eef0 5a4d 	vmov.f32	s11, s26
 801eac8:	eef0 4a4d 	vmov.f32	s9, s26
 801eacc:	eef0 6a4d 	vmov.f32	s13, s26
 801ead0:	eeb0 ea4d 	vmov.f32	s28, s26
 801ead4:	eeb0 9a4d 	vmov.f32	s18, s26
 801ead8:	eef0 8a4d 	vmov.f32	s17, s26
 801eadc:	eeb0 fa4d 	vmov.f32	s30, s26
 801eae0:	eddf ead1 	vldr	s29, [pc, #836]	@ 801ee28 <calculate_aabb_per_shape+0x3d8>
 801eae4:	eddf dad1 	vldr	s27, [pc, #836]	@ 801ee2c <calculate_aabb_per_shape+0x3dc>
 801eae8:	eddf fad1 	vldr	s31, [pc, #836]	@ 801ee30 <calculate_aabb_per_shape+0x3e0>
 801eaec:	eef0 ca4d 	vmov.f32	s25, s26
 801eaf0:	eeb0 5a4d 	vmov.f32	s10, s26
 801eaf4:	4640      	mov	r0, r8
 801eaf6:	f8cd c000 	str.w	ip, [sp]
 801eafa:	5d95      	ldrb	r5, [r2, r6]
 801eafc:	4432      	add	r2, r6
 801eafe:	f005 036f 	and.w	r3, r5, #111	@ 0x6f
 801eb02:	2b01      	cmp	r3, #1
 801eb04:	f005 0810 	and.w	r8, r5, #16
 801eb08:	f000 853e 	beq.w	801f588 <calculate_aabb_per_shape+0xb38>
 801eb0c:	f015 0f7f 	tst.w	r5, #127	@ 0x7f
 801eb10:	f000 83bf 	beq.w	801f292 <calculate_aabb_per_shape+0x842>
 801eb14:	68e1      	ldr	r1, [r4, #12]
 801eb16:	2f00      	cmp	r7, #0
 801eb18:	eb01 0e87 	add.w	lr, r1, r7, lsl #2
 801eb1c:	bf08      	it	eq
 801eb1e:	f04f 0901 	moveq.w	r9, #1
 801eb22:	2b06      	cmp	r3, #6
 801eb24:	edde 7a00 	vldr	s15, [lr]
 801eb28:	f107 0b01 	add.w	fp, r7, #1
 801eb2c:	f000 8782 	beq.w	801fa34 <calculate_aabb_per_shape+0xfe4>
 801eb30:	2b05      	cmp	r3, #5
 801eb32:	f001 8034 	beq.w	801fb9e <calculate_aabb_per_shape+0x114e>
 801eb36:	2b07      	cmp	r3, #7
 801eb38:	f00c 0a6f 	and.w	sl, ip, #111	@ 0x6f
 801eb3c:	f000 86ae 	beq.w	801f89c <calculate_aabb_per_shape+0xe4c>
 801eb40:	2b08      	cmp	r3, #8
 801eb42:	f001 806c 	beq.w	801fc1e <calculate_aabb_per_shape+0x11ce>
 801eb46:	f005 0a0f 	and.w	sl, r5, #15
 801eb4a:	f1ba 0f09 	cmp.w	sl, #9
 801eb4e:	f001 8047 	beq.w	801fbe0 <calculate_aabb_per_shape+0x1190>
 801eb52:	46ba      	mov	sl, r7
 801eb54:	465f      	mov	r7, fp
 801eb56:	2b04      	cmp	r3, #4
 801eb58:	f041 8501 	bne.w	802055e <calculate_aabb_per_shape+0x1b0e>
 801eb5c:	f1b8 0f00 	cmp.w	r8, #0
 801eb60:	f001 8059 	beq.w	801fc16 <calculate_aabb_per_shape+0x11c6>
 801eb64:	ee77 7a89 	vadd.f32	s15, s15, s18
 801eb68:	eeb0 7a68 	vmov.f32	s14, s17
 801eb6c:	462a      	mov	r2, r5
 801eb6e:	2b06      	cmp	r3, #6
 801eb70:	f000 839b 	beq.w	801f2aa <calculate_aabb_per_shape+0x85a>
 801eb74:	2b08      	cmp	r3, #8
 801eb76:	f000 8398 	beq.w	801f2aa <calculate_aabb_per_shape+0x85a>
 801eb7a:	2b01      	cmp	r3, #1
 801eb7c:	f000 847f 	beq.w	801f47e <calculate_aabb_per_shape+0xa2e>
 801eb80:	2b02      	cmp	r3, #2
 801eb82:	f000 847c 	beq.w	801f47e <calculate_aabb_per_shape+0xa2e>
 801eb86:	2b04      	cmp	r3, #4
 801eb88:	f000 8479 	beq.w	801f47e <calculate_aabb_per_shape+0xa2e>
 801eb8c:	2b03      	cmp	r3, #3
 801eb8e:	f000 8476 	beq.w	801f47e <calculate_aabb_per_shape+0xa2e>
 801eb92:	f002 036d 	and.w	r3, r2, #109	@ 0x6d
 801eb96:	2b05      	cmp	r3, #5
 801eb98:	f000 8690 	beq.w	801f8bc <calculate_aabb_per_shape+0xe6c>
 801eb9c:	f002 020f 	and.w	r2, r2, #15
 801eba0:	2a09      	cmp	r2, #9
 801eba2:	f040 8459 	bne.w	801f458 <calculate_aabb_per_shape+0xa08>
 801eba6:	eeb5 5ac0 	vcmpe.f32	s10, #0.0
 801ebaa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ebae:	f100 845e 	bmi.w	801f46e <calculate_aabb_per_shape+0xa1e>
 801ebb2:	ed9f 3aa0 	vldr	s6, [pc, #640]	@ 801ee34 <calculate_aabb_per_shape+0x3e4>
 801ebb6:	eeb4 5ac3 	vcmpe.f32	s10, s6
 801ebba:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ebbe:	f240 845e 	bls.w	801f47e <calculate_aabb_per_shape+0xa2e>
 801ebc2:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 801ebc6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ebca:	f101 8078 	bmi.w	801fcbe <calculate_aabb_per_shape+0x126e>
 801ebce:	ed9f 3a99 	vldr	s6, [pc, #612]	@ 801ee34 <calculate_aabb_per_shape+0x3e4>
 801ebd2:	eef4 6ac3 	vcmpe.f32	s13, s6
 801ebd6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ebda:	f240 8450 	bls.w	801f47e <calculate_aabb_per_shape+0xa2e>
 801ebde:	eeb5 5ac0 	vcmpe.f32	s10, #0.0
 801ebe2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ebe6:	f101 80bb 	bmi.w	801fd60 <calculate_aabb_per_shape+0x1310>
 801ebea:	eeb0 8a45 	vmov.f32	s16, s10
 801ebee:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 801ebf2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ebf6:	f101 8071 	bmi.w	801fcdc <calculate_aabb_per_shape+0x128c>
 801ebfa:	eeb0 9a66 	vmov.f32	s18, s13
 801ebfe:	edcd 7a03 	vstr	s15, [sp, #12]
 801ec02:	eddf 7a8d 	vldr	s15, [pc, #564]	@ 801ee38 <calculate_aabb_per_shape+0x3e8>
 801ec06:	ee24 aaa7 	vmul.f32	s20, s9, s15
 801ec0a:	eeb0 0a4a 	vmov.f32	s0, s20
 801ec0e:	9009      	str	r0, [sp, #36]	@ 0x24
 801ec10:	edcd 6a08 	vstr	s13, [sp, #32]
 801ec14:	ed8d 6a04 	vstr	s12, [sp, #16]
 801ec18:	edcd 5a07 	vstr	s11, [sp, #28]
 801ec1c:	ed8d 5a06 	vstr	s10, [sp, #24]
 801ec20:	ed8d 7a02 	vstr	s14, [sp, #8]
 801ec24:	edcd 4a05 	vstr	s9, [sp, #20]
 801ec28:	f012 fd34 	bl	8031694 <cosf>
 801ec2c:	eef0 8a40 	vmov.f32	s17, s0
 801ec30:	ed8d 0a01 	vstr	s0, [sp, #4]
 801ec34:	eeb0 0a4a 	vmov.f32	s0, s20
 801ec38:	f012 fd78 	bl	803172c <sinf>
 801ec3c:	eef0 6a68 	vmov.f32	s13, s17
 801ec40:	eeb0 ca40 	vmov.f32	s24, s0
 801ec44:	ed9d 6a04 	vldr	s12, [sp, #16]
 801ec48:	ed9d 7a02 	vldr	s14, [sp, #8]
 801ec4c:	eddd 7a03 	vldr	s15, [sp, #12]
 801ec50:	ee6d 9a28 	vmul.f32	s19, s26, s17
 801ec54:	ee26 3aa7 	vmul.f32	s6, s13, s15
 801ec58:	ee60 1a06 	vmul.f32	s3, s0, s12
 801ec5c:	ee68 8a87 	vmul.f32	s17, s17, s14
 801ec60:	ee26 1a86 	vmul.f32	s2, s13, s12
 801ec64:	ee27 2a4c 	vnmul.f32	s4, s14, s24
 801ec68:	ee20 0a27 	vmul.f32	s0, s0, s15
 801ec6c:	ee6d 0a4c 	vnmul.f32	s1, s26, s24
 801ec70:	ee32 5a03 	vadd.f32	s10, s4, s6
 801ec74:	ee78 6a80 	vadd.f32	s13, s17, s0
 801ec78:	ee70 5a81 	vadd.f32	s11, s1, s2
 801ec7c:	ee79 1aa1 	vadd.f32	s3, s19, s3
 801ec80:	eec6 ba88 	vdiv.f32	s23, s13, s16
 801ec84:	eec5 2a89 	vdiv.f32	s5, s11, s18
 801ec88:	ee85 ba09 	vdiv.f32	s22, s10, s18
 801ec8c:	eec1 3a88 	vdiv.f32	s7, s3, s16
 801ec90:	ee32 4acb 	vsub.f32	s8, s5, s22
 801ec94:	ee73 aaeb 	vsub.f32	s21, s7, s23
 801ec98:	ee24 3a04 	vmul.f32	s6, s8, s8
 801ec9c:	ee2a 2aaa 	vmul.f32	s4, s21, s21
 801eca0:	ee32 3a03 	vadd.f32	s6, s4, s6
 801eca4:	eeb5 3a40 	vcmp.f32	s6, #0.0
 801eca8:	eeb6 2a00 	vmov.f32	s4, #96	@ 0x3f000000  0.5
 801ecac:	ee73 8aab 	vadd.f32	s17, s7, s23
 801ecb0:	ee72 9a8b 	vadd.f32	s19, s5, s22
 801ecb4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ecb8:	edcd 6a03 	vstr	s13, [sp, #12]
 801ecbc:	edcd 5a02 	vstr	s11, [sp, #8]
 801ecc0:	ed8d 5a04 	vstr	s10, [sp, #16]
 801ecc4:	ee68 8a82 	vmul.f32	s17, s17, s4
 801ecc8:	ee69 9a82 	vmul.f32	s19, s19, s4
 801eccc:	eddd 4a05 	vldr	s9, [sp, #20]
 801ecd0:	ed9d 5a06 	vldr	s10, [sp, #24]
 801ecd4:	eddd 5a07 	vldr	s11, [sp, #28]
 801ecd8:	eddd 6a08 	vldr	s13, [sp, #32]
 801ecdc:	9809      	ldr	r0, [sp, #36]	@ 0x24
 801ecde:	f000 83bb 	beq.w	801f458 <calculate_aabb_per_shape+0xa08>
 801ece2:	eef7 0a00 	vmov.f32	s1, #112	@ 0x3f800000  1.0
 801ece6:	eeb5 1a00 	vmov.f32	s2, #80	@ 0x3e800000  0.250
 801ecea:	ee80 2a83 	vdiv.f32	s4, s1, s6
 801ecee:	ee32 0a41 	vsub.f32	s0, s4, s2
 801ecf2:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 801ecf6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ecfa:	f101 8159 	bmi.w	801ffb0 <calculate_aabb_per_shape+0x1560>
 801ecfe:	eeb5 0a40 	vcmp.f32	s0, #0.0
 801ed02:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ed06:	eef1 1ac0 	vsqrt.f32	s3, s0
 801ed0a:	f101 83f8 	bmi.w	80204fe <calculate_aabb_per_shape+0x1aae>
 801ed0e:	ee21 2aaa 	vmul.f32	s4, s3, s21
 801ed12:	ee61 1a84 	vmul.f32	s3, s3, s8
 801ed16:	ee79 aac2 	vsub.f32	s21, s19, s4
 801ed1a:	ee31 4aa8 	vadd.f32	s8, s3, s17
 801ed1e:	ee32 0aea 	vsub.f32	s0, s5, s21
 801ed22:	ee73 0ac4 	vsub.f32	s1, s7, s8
 801ed26:	edcd 6a0c 	vstr	s13, [sp, #48]	@ 0x30
 801ed2a:	edcd 4a0b 	vstr	s9, [sp, #44]	@ 0x2c
 801ed2e:	ed8d 6a0a 	vstr	s12, [sp, #40]	@ 0x28
 801ed32:	edcd 5a09 	vstr	s11, [sp, #36]	@ 0x24
 801ed36:	ed8d 5a08 	vstr	s10, [sp, #32]
 801ed3a:	edcd 7a07 	vstr	s15, [sp, #28]
 801ed3e:	ed8d 7a06 	vstr	s14, [sp, #24]
 801ed42:	ed8d 2a05 	vstr	s4, [sp, #20]
 801ed46:	edcd 1a04 	vstr	s3, [sp, #16]
 801ed4a:	ed8d 4a02 	vstr	s8, [sp, #8]
 801ed4e:	f012 fb8d 	bl	803146c <atan2f>
 801ed52:	ed9d 4a02 	vldr	s8, [sp, #8]
 801ed56:	ed8d 0a03 	vstr	s0, [sp, #12]
 801ed5a:	ee7b 0ac4 	vsub.f32	s1, s23, s8
 801ed5e:	ee3b 0a6a 	vsub.f32	s0, s22, s21
 801ed62:	f012 fb83 	bl	803146c <atan2f>
 801ed66:	eddf 7a35 	vldr	s15, [pc, #212]	@ 801ee3c <calculate_aabb_per_shape+0x3ec>
 801ed6a:	eddd 3a03 	vldr	s7, [sp, #12]
 801ed6e:	ee20 3a27 	vmul.f32	s6, s0, s15
 801ed72:	ee63 3aa7 	vmul.f32	s7, s7, s15
 801ed76:	ee33 3a63 	vsub.f32	s6, s6, s7
 801ed7a:	eeb5 3ac0 	vcmpe.f32	s6, #0.0
 801ed7e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ed82:	bf44      	itt	mi
 801ed84:	ed9f 1a2e 	vldrmi	s2, [pc, #184]	@ 801ee40 <calculate_aabb_per_shape+0x3f0>
 801ed88:	ee33 3a01 	vaddmi.f32	s6, s6, s2
 801ed8c:	ed9f 1a2d 	vldr	s2, [pc, #180]	@ 801ee44 <calculate_aabb_per_shape+0x3f4>
 801ed90:	eeb4 3ac1 	vcmpe.f32	s6, s2
 801ed94:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ed98:	9b00      	ldr	r3, [sp, #0]
 801ed9a:	ed9d 4a02 	vldr	s8, [sp, #8]
 801ed9e:	f003 0840 	and.w	r8, r3, #64	@ 0x40
 801eda2:	f3c3 1280 	ubfx	r2, r3, #6, #1
 801eda6:	eddd 1a04 	vldr	s3, [sp, #16]
 801edaa:	ed9d 2a05 	vldr	s4, [sp, #20]
 801edae:	ed9d 7a06 	vldr	s14, [sp, #24]
 801edb2:	eddd 7a07 	vldr	s15, [sp, #28]
 801edb6:	ed9d 5a08 	vldr	s10, [sp, #32]
 801edba:	eddd 5a09 	vldr	s11, [sp, #36]	@ 0x24
 801edbe:	ed9d 6a0a 	vldr	s12, [sp, #40]	@ 0x28
 801edc2:	eddd 4a0b 	vldr	s9, [sp, #44]	@ 0x2c
 801edc6:	eddd 6a0c 	vldr	s13, [sp, #48]	@ 0x30
 801edca:	f3c3 1340 	ubfx	r3, r3, #5, #1
 801edce:	f141 80e5 	bpl.w	801ff9c <calculate_aabb_per_shape+0x154c>
 801edd2:	429a      	cmp	r2, r3
 801edd4:	f001 8346 	beq.w	8020464 <calculate_aabb_per_shape+0x1a14>
 801edd8:	ee24 4a08 	vmul.f32	s8, s8, s16
 801eddc:	ee6a aa89 	vmul.f32	s21, s21, s18
 801ede0:	eddd 3a01 	vldr	s7, [sp, #4]
 801ede4:	eef5 4a40 	vcmp.f32	s9, #0.0
 801ede8:	ee63 9a84 	vmul.f32	s19, s7, s8
 801edec:	ee2c 3a2a 	vmul.f32	s6, s24, s21
 801edf0:	ee2c 4a04 	vmul.f32	s8, s24, s8
 801edf4:	ee63 aaaa 	vmul.f32	s21, s7, s21
 801edf8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801edfc:	ee79 9ac3 	vsub.f32	s19, s19, s6
 801ee00:	ee74 8a2a 	vadd.f32	s17, s8, s21
 801ee04:	f000 87b0 	beq.w	801fd68 <calculate_aabb_per_shape+0x1318>
 801ee08:	ed9f 3a0e 	vldr	s6, [pc, #56]	@ 801ee44 <calculate_aabb_per_shape+0x3f4>
 801ee0c:	eef4 4a43 	vcmp.f32	s9, s6
 801ee10:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ee14:	f000 87a8 	beq.w	801fd68 <calculate_aabb_per_shape+0x1318>
 801ee18:	e01c      	b.n	801ee54 <calculate_aabb_per_shape+0x404>
 801ee1a:	bf00      	nop
 801ee1c:	477fff00 	.word	0x477fff00
 801ee20:	c77fff00 	.word	0xc77fff00
 801ee24:	00000000 	.word	0x00000000
 801ee28:	b3d6bf95 	.word	0xb3d6bf95
 801ee2c:	33d6bf95 	.word	0x33d6bf95
 801ee30:	3f7ffffe 	.word	0x3f7ffffe
 801ee34:	3727c5ac 	.word	0x3727c5ac
 801ee38:	3c8efa35 	.word	0x3c8efa35
 801ee3c:	42652ee1 	.word	0x42652ee1
 801ee40:	43b40000 	.word	0x43b40000
 801ee44:	43340000 	.word	0x43340000
 801ee48:	42b40000 	.word	0x42b40000
 801ee4c:	43870000 	.word	0x43870000
 801ee50:	40c90fdb 	.word	0x40c90fdb
 801ee54:	ed1f 3a04 	vldr	s6, [pc, #-16]	@ 801ee48 <calculate_aabb_per_shape+0x3f8>
 801ee58:	eef4 4a43 	vcmp.f32	s9, s6
 801ee5c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ee60:	d007      	beq.n	801ee72 <calculate_aabb_per_shape+0x422>
 801ee62:	ed1f 3a06 	vldr	s6, [pc, #-24]	@ 801ee4c <calculate_aabb_per_shape+0x3fc>
 801ee66:	eef4 4a43 	vcmp.f32	s9, s6
 801ee6a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ee6e:	f041 80d3 	bne.w	8020018 <calculate_aabb_per_shape+0x15c8>
 801ee72:	ee29 aa09 	vmul.f32	s20, s18, s18
 801ee76:	ee3a aa0f 	vadd.f32	s20, s20, s30
 801ee7a:	eeb5 aa40 	vcmp.f32	s20, #0.0
 801ee7e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ee82:	ee79 bac9 	vsub.f32	s23, s19, s18
 801ee86:	eef1 aaca 	vsqrt.f32	s21, s20
 801ee8a:	eeb1 ba49 	vneg.f32	s22, s18
 801ee8e:	edcd 6a08 	vstr	s13, [sp, #32]
 801ee92:	edcd 4a07 	vstr	s9, [sp, #28]
 801ee96:	ed8d 6a06 	vstr	s12, [sp, #24]
 801ee9a:	edcd 5a05 	vstr	s11, [sp, #20]
 801ee9e:	ed8d 5a04 	vstr	s10, [sp, #16]
 801eea2:	edcd 7a03 	vstr	s15, [sp, #12]
 801eea6:	ed8d 7a01 	vstr	s14, [sp, #4]
 801eeaa:	f101 866c 	bmi.w	8020b86 <calculate_aabb_per_shape+0x2136>
 801eeae:	ee8b 0a2a 	vdiv.f32	s0, s22, s21
 801eeb2:	f012 faaf 	bl	8031414 <acosf>
 801eeb6:	ed5f 0a1a 	vldr	s1, [pc, #-104]	@ 801ee50 <calculate_aabb_per_shape+0x400>
 801eeba:	ee30 0ac0 	vsub.f32	s0, s1, s0
 801eebe:	f012 fad7 	bl	8031470 <fmodf>
 801eec2:	ee39 aa89 	vadd.f32	s20, s19, s18
 801eec6:	ed8d 0a02 	vstr	s0, [sp, #8]
 801eeca:	ed9d 7a01 	vldr	s14, [sp, #4]
 801eece:	eddd 7a03 	vldr	s15, [sp, #12]
 801eed2:	ed9d 5a04 	vldr	s10, [sp, #16]
 801eed6:	eddd 5a05 	vldr	s11, [sp, #20]
 801eeda:	ed9d 6a06 	vldr	s12, [sp, #24]
 801eede:	eddd 4a07 	vldr	s9, [sp, #28]
 801eee2:	eddd 6a08 	vldr	s13, [sp, #32]
 801eee6:	ee89 0a2a 	vdiv.f32	s0, s18, s21
 801eeea:	edcd 6a09 	vstr	s13, [sp, #36]	@ 0x24
 801eeee:	edcd 4a08 	vstr	s9, [sp, #32]
 801eef2:	ed8d 6a07 	vstr	s12, [sp, #28]
 801eef6:	edcd 5a06 	vstr	s11, [sp, #24]
 801eefa:	ed8d 5a05 	vstr	s10, [sp, #20]
 801eefe:	edcd 7a03 	vstr	s15, [sp, #12]
 801ef02:	ed8d 7a01 	vstr	s14, [sp, #4]
 801ef06:	ed1f ca2e 	vldr	s24, [pc, #-184]	@ 801ee50 <calculate_aabb_per_shape+0x400>
 801ef0a:	f012 fa83 	bl	8031414 <acosf>
 801ef0e:	eef0 0a4c 	vmov.f32	s1, s24
 801ef12:	ee3c 0a40 	vsub.f32	s0, s24, s0
 801ef16:	f012 faab 	bl	8031470 <fmodf>
 801ef1a:	ee28 2a08 	vmul.f32	s4, s16, s16
 801ef1e:	eeb5 8ac0 	vcmpe.f32	s16, #0.0
 801ef22:	ee32 2a0f 	vadd.f32	s4, s4, s30
 801ef26:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ef2a:	eeb7 3a00 	vmov.f32	s6, #112	@ 0x3f800000  1.0
 801ef2e:	eeff 1a00 	vmov.f32	s3, #240	@ 0xbf800000 -1.0
 801ef32:	eeb5 2a40 	vcmp.f32	s4, #0.0
 801ef36:	bf54      	ite	pl
 801ef38:	eef0 aa61 	vmovpl.f32	s21, s3
 801ef3c:	eef0 aa43 	vmovmi.f32	s21, s6
 801ef40:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ef44:	ed8d 0a04 	vstr	s0, [sp, #16]
 801ef48:	eeb1 4ac2 	vsqrt.f32	s8, s4
 801ef4c:	ee38 bac8 	vsub.f32	s22, s17, s16
 801ef50:	ed9d 7a01 	vldr	s14, [sp, #4]
 801ef54:	eddd 7a03 	vldr	s15, [sp, #12]
 801ef58:	ed9d 5a05 	vldr	s10, [sp, #20]
 801ef5c:	eddd 5a06 	vldr	s11, [sp, #24]
 801ef60:	ed9d 6a07 	vldr	s12, [sp, #28]
 801ef64:	eddd 4a08 	vldr	s9, [sp, #32]
 801ef68:	eddd 6a09 	vldr	s13, [sp, #36]	@ 0x24
 801ef6c:	f101 859e 	bmi.w	8020aac <calculate_aabb_per_shape+0x205c>
 801ef70:	ee8f 9a04 	vdiv.f32	s18, s30, s8
 801ef74:	eeb0 0a49 	vmov.f32	s0, s18
 801ef78:	edcd 6a0c 	vstr	s13, [sp, #48]	@ 0x30
 801ef7c:	edcd 4a0b 	vstr	s9, [sp, #44]	@ 0x2c
 801ef80:	ed8d 6a0a 	vstr	s12, [sp, #40]	@ 0x28
 801ef84:	edcd 5a09 	vstr	s11, [sp, #36]	@ 0x24
 801ef88:	ed8d 5a08 	vstr	s10, [sp, #32]
 801ef8c:	edcd 1a07 	vstr	s3, [sp, #28]
 801ef90:	ed8d 3a06 	vstr	s6, [sp, #24]
 801ef94:	edcd 7a05 	vstr	s15, [sp, #20]
 801ef98:	ed8d 7a01 	vstr	s14, [sp, #4]
 801ef9c:	f012 fa3a 	bl	8031414 <acosf>
 801efa0:	ee2a 0a80 	vmul.f32	s0, s21, s0
 801efa4:	eef0 0a4c 	vmov.f32	s1, s24
 801efa8:	ee30 0a0c 	vadd.f32	s0, s0, s24
 801efac:	f012 fa60 	bl	8031470 <fmodf>
 801efb0:	eeb5 8ac0 	vcmpe.f32	s16, #0.0
 801efb4:	ed9d 3a06 	vldr	s6, [sp, #24]
 801efb8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801efbc:	eddd 1a07 	vldr	s3, [sp, #28]
 801efc0:	ed8d 0a03 	vstr	s0, [sp, #12]
 801efc4:	ed9d 7a01 	vldr	s14, [sp, #4]
 801efc8:	eddd 7a05 	vldr	s15, [sp, #20]
 801efcc:	ed9d 5a08 	vldr	s10, [sp, #32]
 801efd0:	eddd 5a09 	vldr	s11, [sp, #36]	@ 0x24
 801efd4:	ed9d 6a0a 	vldr	s12, [sp, #40]	@ 0x28
 801efd8:	eddd 4a0b 	vldr	s9, [sp, #44]	@ 0x2c
 801efdc:	eddd 6a0c 	vldr	s13, [sp, #48]	@ 0x30
 801efe0:	ee78 aa88 	vadd.f32	s21, s17, s16
 801efe4:	fe33 8a21 	vselgt.f32	s16, s6, s3
 801efe8:	eeb0 0a49 	vmov.f32	s0, s18
 801efec:	edcd 6a0a 	vstr	s13, [sp, #40]	@ 0x28
 801eff0:	edcd 4a09 	vstr	s9, [sp, #36]	@ 0x24
 801eff4:	ed8d 6a08 	vstr	s12, [sp, #32]
 801eff8:	edcd 5a07 	vstr	s11, [sp, #28]
 801effc:	ed8d 5a06 	vstr	s10, [sp, #24]
 801f000:	edcd 7a05 	vstr	s15, [sp, #20]
 801f004:	ed8d 7a01 	vstr	s14, [sp, #4]
 801f008:	f012 fa04 	bl	8031414 <acosf>
 801f00c:	ee20 0a08 	vmul.f32	s0, s0, s16
 801f010:	ed5f 0a71 	vldr	s1, [pc, #-452]	@ 801ee50 <calculate_aabb_per_shape+0x400>
 801f014:	ee30 0a20 	vadd.f32	s0, s0, s1
 801f018:	f012 fa2a 	bl	8031470 <fmodf>
 801f01c:	ed9d 7a01 	vldr	s14, [sp, #4]
 801f020:	eeb0 8a40 	vmov.f32	s16, s0
 801f024:	eddd 7a05 	vldr	s15, [sp, #20]
 801f028:	ed9d 5a06 	vldr	s10, [sp, #24]
 801f02c:	eddd 5a07 	vldr	s11, [sp, #28]
 801f030:	ed9d 6a08 	vldr	s12, [sp, #32]
 801f034:	eddd 4a09 	vldr	s9, [sp, #36]	@ 0x24
 801f038:	eddd 6a0a 	vldr	s13, [sp, #40]	@ 0x28
 801f03c:	ee36 3a68 	vsub.f32	s6, s12, s17
 801f040:	ee3d ca69 	vsub.f32	s24, s26, s19
 801f044:	eeb5 3ac0 	vcmpe.f32	s6, #0.0
 801f048:	ee2c 2a0c 	vmul.f32	s4, s24, s24
 801f04c:	ee23 3a03 	vmul.f32	s6, s6, s6
 801f050:	ee32 0a03 	vadd.f32	s0, s4, s6
 801f054:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f058:	eebf 2a00 	vmov.f32	s4, #240	@ 0xbf800000 -1.0
 801f05c:	eeb7 9a00 	vmov.f32	s18, #112	@ 0x3f800000  1.0
 801f060:	eeb5 0a40 	vcmp.f32	s0, #0.0
 801f064:	fe39 9a02 	vselgt.f32	s18, s18, s4
 801f068:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f06c:	eeb1 2ac0 	vsqrt.f32	s4, s0
 801f070:	f101 845c 	bmi.w	802092c <calculate_aabb_per_shape+0x1edc>
 801f074:	ee8c 0a02 	vdiv.f32	s0, s24, s4
 801f078:	edcd 6a0a 	vstr	s13, [sp, #40]	@ 0x28
 801f07c:	edcd 4a09 	vstr	s9, [sp, #36]	@ 0x24
 801f080:	ed8d 6a08 	vstr	s12, [sp, #32]
 801f084:	edcd 5a07 	vstr	s11, [sp, #28]
 801f088:	ed8d 5a06 	vstr	s10, [sp, #24]
 801f08c:	edcd 7a05 	vstr	s15, [sp, #20]
 801f090:	ed8d 7a01 	vstr	s14, [sp, #4]
 801f094:	f012 f9be 	bl	8031414 <acosf>
 801f098:	ed5f 0a93 	vldr	s1, [pc, #-588]	@ 801ee50 <calculate_aabb_per_shape+0x400>
 801f09c:	ee20 0a09 	vmul.f32	s0, s0, s18
 801f0a0:	ee30 0a20 	vadd.f32	s0, s0, s1
 801f0a4:	f012 f9e4 	bl	8031470 <fmodf>
 801f0a8:	ed9d 7a01 	vldr	s14, [sp, #4]
 801f0ac:	eddd 7a05 	vldr	s15, [sp, #20]
 801f0b0:	ee77 9a69 	vsub.f32	s19, s14, s19
 801f0b4:	ee77 8ae8 	vsub.f32	s17, s15, s17
 801f0b8:	eeb0 9a40 	vmov.f32	s18, s0
 801f0bc:	eef5 8ac0 	vcmpe.f32	s17, #0.0
 801f0c0:	ee29 0aa9 	vmul.f32	s0, s19, s19
 801f0c4:	ee68 8aa8 	vmul.f32	s17, s17, s17
 801f0c8:	ee30 0a28 	vadd.f32	s0, s0, s17
 801f0cc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f0d0:	eeb7 2a00 	vmov.f32	s4, #112	@ 0x3f800000  1.0
 801f0d4:	eebf 3a00 	vmov.f32	s6, #240	@ 0xbf800000 -1.0
 801f0d8:	eeb5 0a40 	vcmp.f32	s0, #0.0
 801f0dc:	fe72 8a03 	vselgt.f32	s17, s4, s6
 801f0e0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f0e4:	eeb1 cac0 	vsqrt.f32	s24, s0
 801f0e8:	ed9d 5a06 	vldr	s10, [sp, #24]
 801f0ec:	eddd 5a07 	vldr	s11, [sp, #28]
 801f0f0:	ed9d 6a08 	vldr	s12, [sp, #32]
 801f0f4:	eddd 4a09 	vldr	s9, [sp, #36]	@ 0x24
 801f0f8:	eddd 6a0a 	vldr	s13, [sp, #40]	@ 0x28
 801f0fc:	f101 8404 	bmi.w	8020908 <calculate_aabb_per_shape+0x1eb8>
 801f100:	ee89 0a8c 	vdiv.f32	s0, s19, s24
 801f104:	edcd 6a0a 	vstr	s13, [sp, #40]	@ 0x28
 801f108:	edcd 4a09 	vstr	s9, [sp, #36]	@ 0x24
 801f10c:	ed8d 6a08 	vstr	s12, [sp, #32]
 801f110:	edcd 5a07 	vstr	s11, [sp, #28]
 801f114:	ed8d 5a06 	vstr	s10, [sp, #24]
 801f118:	edcd 7a05 	vstr	s15, [sp, #20]
 801f11c:	ed8d 7a01 	vstr	s14, [sp, #4]
 801f120:	f012 f978 	bl	8031414 <acosf>
 801f124:	ed5f 0ab6 	vldr	s1, [pc, #-728]	@ 801ee50 <calculate_aabb_per_shape+0x400>
 801f128:	ee20 0a28 	vmul.f32	s0, s0, s17
 801f12c:	ee30 0a20 	vadd.f32	s0, s0, s1
 801f130:	f012 f99e 	bl	8031470 <fmodf>
 801f134:	ed9d 7a01 	vldr	s14, [sp, #4]
 801f138:	eddd 7a05 	vldr	s15, [sp, #20]
 801f13c:	ed9d 5a06 	vldr	s10, [sp, #24]
 801f140:	eddd 5a07 	vldr	s11, [sp, #28]
 801f144:	ed9d 6a08 	vldr	s12, [sp, #32]
 801f148:	eddd 4a09 	vldr	s9, [sp, #36]	@ 0x24
 801f14c:	eddd 6a0a 	vldr	s13, [sp, #40]	@ 0x28
 801f150:	f1b8 0f00 	cmp.w	r8, #0
 801f154:	d105      	bne.n	801f162 <calculate_aabb_per_shape+0x712>
 801f156:	eeb0 3a49 	vmov.f32	s6, s18
 801f15a:	eeb0 9a40 	vmov.f32	s18, s0
 801f15e:	eeb0 0a43 	vmov.f32	s0, s6
 801f162:	eeb4 9ac0 	vcmpe.f32	s18, s0
 801f166:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f16a:	ed9d 4a02 	vldr	s8, [sp, #8]
 801f16e:	f340 86cc 	ble.w	801ff0a <calculate_aabb_per_shape+0x14ba>
 801f172:	eeb4 0ac4 	vcmpe.f32	s0, s8
 801f176:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f17a:	dc0d      	bgt.n	801f198 <calculate_aabb_per_shape+0x748>
 801f17c:	eeb4 9ac4 	vcmpe.f32	s18, s8
 801f180:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f184:	d408      	bmi.n	801f198 <calculate_aabb_per_shape+0x748>
 801f186:	eeb4 dac7 	vcmpe.f32	s26, s14
 801f18a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f18e:	bf54      	ite	pl
 801f190:	eef0 ba47 	vmovpl.f32	s23, s14
 801f194:	eef0 ba4d 	vmovmi.f32	s23, s26
 801f198:	ed9d 4a04 	vldr	s8, [sp, #16]
 801f19c:	eeb4 0ac4 	vcmpe.f32	s0, s8
 801f1a0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f1a4:	dc0a      	bgt.n	801f1bc <calculate_aabb_per_shape+0x76c>
 801f1a6:	eeb4 9ac4 	vcmpe.f32	s18, s8
 801f1aa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f1ae:	d405      	bmi.n	801f1bc <calculate_aabb_per_shape+0x76c>
 801f1b0:	eeb4 dac7 	vcmpe.f32	s26, s14
 801f1b4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f1b8:	fe3d aa07 	vselgt.f32	s20, s26, s14
 801f1bc:	ed9d 4a03 	vldr	s8, [sp, #12]
 801f1c0:	eeb4 0ac4 	vcmpe.f32	s0, s8
 801f1c4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f1c8:	dc0d      	bgt.n	801f1e6 <calculate_aabb_per_shape+0x796>
 801f1ca:	eeb4 9ac4 	vcmpe.f32	s18, s8
 801f1ce:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f1d2:	d408      	bmi.n	801f1e6 <calculate_aabb_per_shape+0x796>
 801f1d4:	eeb4 6ae7 	vcmpe.f32	s12, s15
 801f1d8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f1dc:	bf54      	ite	pl
 801f1de:	eeb0 ba67 	vmovpl.f32	s22, s15
 801f1e2:	eeb0 ba46 	vmovmi.f32	s22, s12
 801f1e6:	eeb4 0ac8 	vcmpe.f32	s0, s16
 801f1ea:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f1ee:	dc0a      	bgt.n	801f206 <calculate_aabb_per_shape+0x7b6>
 801f1f0:	eeb4 9ac8 	vcmpe.f32	s18, s16
 801f1f4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f1f8:	d405      	bmi.n	801f206 <calculate_aabb_per_shape+0x7b6>
 801f1fa:	eeb4 6ae7 	vcmpe.f32	s12, s15
 801f1fe:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f202:	fe76 aa27 	vselgt.f32	s21, s12, s15
 801f206:	ed94 1a04 	vldr	s2, [r4, #16]
 801f20a:	edd4 1a05 	vldr	s3, [r4, #20]
 801f20e:	eeb4 1a6b 	vcmp.f32	s2, s23
 801f212:	ed94 2a06 	vldr	s4, [r4, #24]
 801f216:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f21a:	eef4 1a4b 	vcmp.f32	s3, s22
 801f21e:	fe3b 1a81 	vselgt.f32	s2, s23, s2
 801f222:	ed94 3a07 	vldr	s6, [r4, #28]
 801f226:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f22a:	eeb4 2a6b 	vcmp.f32	s4, s23
 801f22e:	fe7b 1a21 	vselgt.f32	s3, s22, s3
 801f232:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f236:	eeb4 3a4b 	vcmp.f32	s6, s22
 801f23a:	bf48      	it	mi
 801f23c:	eeb0 2a6b 	vmovmi.f32	s4, s23
 801f240:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f244:	eeb4 1a4a 	vcmp.f32	s2, s20
 801f248:	bf48      	it	mi
 801f24a:	eeb0 3a4b 	vmovmi.f32	s6, s22
 801f24e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f252:	eef4 aa61 	vcmp.f32	s21, s3
 801f256:	fe3a 1a01 	vselgt.f32	s2, s20, s2
 801f25a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f25e:	eeb4 2a4a 	vcmp.f32	s4, s20
 801f262:	bf48      	it	mi
 801f264:	eef0 1a6a 	vmovmi.f32	s3, s21
 801f268:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f26c:	eef4 aa43 	vcmp.f32	s21, s6
 801f270:	bf48      	it	mi
 801f272:	eeb0 2a4a 	vmovmi.f32	s4, s20
 801f276:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f27a:	fe3a 3a83 	vselgt.f32	s6, s21, s6
 801f27e:	ed84 1a04 	vstr	s2, [r4, #16]
 801f282:	edc4 1a05 	vstr	s3, [r4, #20]
 801f286:	ed84 2a06 	vstr	s4, [r4, #24]
 801f28a:	ed84 3a07 	vstr	s6, [r4, #28]
 801f28e:	6820      	ldr	r0, [r4, #0]
 801f290:	e0e2      	b.n	801f458 <calculate_aabb_per_shape+0xa08>
 801f292:	f1b9 0f01 	cmp.w	r9, #1
 801f296:	bf0d      	iteet	eq
 801f298:	eddf 7ac7 	vldreq	s15, [pc, #796]	@ 801f5b8 <calculate_aabb_per_shape+0xb68>
 801f29c:	eef0 7a6c 	vmovne.f32	s15, s25
 801f2a0:	eeb0 7a4e 	vmovne.f32	s14, s28
 801f2a4:	eeb0 7a67 	vmoveq.f32	s14, s15
 801f2a8:	e460      	b.n	801eb6c <calculate_aabb_per_shape+0x11c>
 801f2aa:	edd4 9a04 	vldr	s19, [r4, #16]
 801f2ae:	edd4 aa05 	vldr	s21, [r4, #20]
 801f2b2:	eef4 9ac7 	vcmpe.f32	s19, s14
 801f2b6:	ed94 aa06 	vldr	s20, [r4, #24]
 801f2ba:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f2be:	eef4 aae7 	vcmpe.f32	s21, s15
 801f2c2:	bf58      	it	pl
 801f2c4:	eef0 9a47 	vmovpl.f32	s19, s14
 801f2c8:	ed94 ba07 	vldr	s22, [r4, #28]
 801f2cc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f2d0:	eeb4 aac7 	vcmpe.f32	s20, s14
 801f2d4:	bf58      	it	pl
 801f2d6:	eef0 aa67 	vmovpl.f32	s21, s15
 801f2da:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f2de:	eeb4 bae7 	vcmpe.f32	s22, s15
 801f2e2:	fe3a aa07 	vselgt.f32	s20, s20, s14
 801f2e6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f2ea:	eef4 9ac5 	vcmpe.f32	s19, s10
 801f2ee:	fe3b ba27 	vselgt.f32	s22, s22, s15
 801f2f2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f2f6:	ed8d fa0e 	vstr	s30, [sp, #56]	@ 0x38
 801f2fa:	ed8d fa0f 	vstr	s30, [sp, #60]	@ 0x3c
 801f2fe:	edc4 9a04 	vstr	s19, [r4, #16]
 801f302:	edc4 aa05 	vstr	s21, [r4, #20]
 801f306:	ed84 aa06 	vstr	s20, [r4, #24]
 801f30a:	ed84 ba07 	vstr	s22, [r4, #28]
 801f30e:	d80a      	bhi.n	801f326 <calculate_aabb_per_shape+0x8d6>
 801f310:	eeb4 aac5 	vcmpe.f32	s20, s10
 801f314:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f318:	db05      	blt.n	801f326 <calculate_aabb_per_shape+0x8d6>
 801f31a:	eef4 aae6 	vcmpe.f32	s21, s13
 801f31e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f322:	f240 829c 	bls.w	801f85e <calculate_aabb_per_shape+0xe0e>
 801f326:	eeb2 3a02 	vmov.f32	s6, #34	@ 0x41100000  9.0
 801f32a:	eeb8 8a08 	vmov.f32	s16, #136	@ 0xc0400000 -3.0
 801f32e:	ee25 2a03 	vmul.f32	s4, s10, s6
 801f332:	ee28 8a88 	vmul.f32	s16, s17, s16
 801f336:	ee64 1a83 	vmul.f32	s3, s9, s6
 801f33a:	ee38 8a02 	vadd.f32	s16, s16, s4
 801f33e:	eeb0 2a08 	vmov.f32	s4, #8	@ 0x40400000  3.0
 801f342:	ee38 8a61 	vsub.f32	s16, s16, s3
 801f346:	ee67 1a02 	vmul.f32	s3, s14, s4
 801f34a:	eeb1 3a08 	vmov.f32	s6, #24	@ 0x40c00000  6.0
 801f34e:	eef2 ba08 	vmov.f32	s23, #40	@ 0x41400000  12.0
 801f352:	ee38 8a21 	vadd.f32	s16, s16, s3
 801f356:	ee25 1a2b 	vmul.f32	s2, s10, s23
 801f35a:	eeb5 8ac0 	vcmpe.f32	s16, #0.0
 801f35e:	ee68 ba83 	vmul.f32	s23, s17, s6
 801f362:	ee64 1a83 	vmul.f32	s3, s9, s6
 801f366:	ee7b bac1 	vsub.f32	s23, s23, s2
 801f36a:	ee25 3a02 	vmul.f32	s6, s10, s4
 801f36e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f372:	ee28 2a82 	vmul.f32	s4, s17, s4
 801f376:	ee7b baa1 	vadd.f32	s23, s23, s3
 801f37a:	ee33 3a42 	vsub.f32	s6, s6, s4
 801f37e:	f100 8235 	bmi.w	801f7ec <calculate_aabb_per_shape+0xd9c>
 801f382:	eeb4 8aed 	vcmpe.f32	s16, s27
 801f386:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f38a:	bf4c      	ite	mi
 801f38c:	2301      	movmi	r3, #1
 801f38e:	2300      	movpl	r3, #0
 801f390:	2b00      	cmp	r3, #0
 801f392:	f040 8117 	bne.w	801f5c4 <calculate_aabb_per_shape+0xb74>
 801f396:	eeb1 0a00 	vmov.f32	s0, #16	@ 0x40800000  4.0
 801f39a:	ee23 3a00 	vmul.f32	s6, s6, s0
 801f39e:	ee2b 0aab 	vmul.f32	s0, s23, s23
 801f3a2:	ee23 3a08 	vmul.f32	s6, s6, s16
 801f3a6:	ee30 0a43 	vsub.f32	s0, s0, s6
 801f3aa:	eeb4 0aed 	vcmpe.f32	s0, s27
 801f3ae:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f3b2:	f300 836a 	bgt.w	801fa8a <calculate_aabb_per_shape+0x103a>
 801f3b6:	eeb2 3a02 	vmov.f32	s6, #34	@ 0x41100000  9.0
 801f3ba:	eeb8 8a08 	vmov.f32	s16, #136	@ 0xc0400000 -3.0
 801f3be:	ee26 2a83 	vmul.f32	s4, s13, s6
 801f3c2:	ee29 8a08 	vmul.f32	s16, s18, s16
 801f3c6:	ee65 1a83 	vmul.f32	s3, s11, s6
 801f3ca:	ee38 8a02 	vadd.f32	s16, s16, s4
 801f3ce:	eeb0 2a08 	vmov.f32	s4, #8	@ 0x40400000  3.0
 801f3d2:	ee38 8a61 	vsub.f32	s16, s16, s3
 801f3d6:	ee67 1a82 	vmul.f32	s3, s15, s4
 801f3da:	eeb1 3a08 	vmov.f32	s6, #24	@ 0x40c00000  6.0
 801f3de:	ee38 8a21 	vadd.f32	s16, s16, s3
 801f3e2:	eeb2 1a08 	vmov.f32	s2, #40	@ 0x41400000  12.0
 801f3e6:	ee69 8a03 	vmul.f32	s17, s18, s6
 801f3ea:	ee26 1a81 	vmul.f32	s2, s13, s2
 801f3ee:	eeb5 8ac0 	vcmpe.f32	s16, #0.0
 801f3f2:	ee65 1a83 	vmul.f32	s3, s11, s6
 801f3f6:	ee78 8ac1 	vsub.f32	s17, s17, s2
 801f3fa:	ee26 3a82 	vmul.f32	s6, s13, s4
 801f3fe:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f402:	ee29 2a02 	vmul.f32	s4, s18, s4
 801f406:	ee78 8aa1 	vadd.f32	s17, s17, s3
 801f40a:	ee33 3a42 	vsub.f32	s6, s6, s4
 801f40e:	f100 81f5 	bmi.w	801f7fc <calculate_aabb_per_shape+0xdac>
 801f412:	eeb4 8aed 	vcmpe.f32	s16, s27
 801f416:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f41a:	bf4c      	ite	mi
 801f41c:	2301      	movmi	r3, #1
 801f41e:	2300      	movpl	r3, #0
 801f420:	2b00      	cmp	r3, #0
 801f422:	f040 815a 	bne.w	801f6da <calculate_aabb_per_shape+0xc8a>
 801f426:	eeb1 0a00 	vmov.f32	s0, #16	@ 0x40800000  4.0
 801f42a:	ee23 3a00 	vmul.f32	s6, s6, s0
 801f42e:	ee28 0aa8 	vmul.f32	s0, s17, s17
 801f432:	ee23 3a08 	vmul.f32	s6, s6, s16
 801f436:	ee30 0a43 	vsub.f32	s0, s0, s6
 801f43a:	eeb4 0aed 	vcmpe.f32	s0, s27
 801f43e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f442:	f300 8367 	bgt.w	801fb14 <calculate_aabb_per_shape+0x10c4>
 801f446:	edc4 9a04 	vstr	s19, [r4, #16]
 801f44a:	edc4 aa05 	vstr	s21, [r4, #20]
 801f44e:	ed84 aa06 	vstr	s20, [r4, #24]
 801f452:	ed84 ba07 	vstr	s22, [r4, #28]
 801f456:	6820      	ldr	r0, [r4, #0]
 801f458:	3601      	adds	r6, #1
 801f45a:	42b0      	cmp	r0, r6
 801f45c:	d93c      	bls.n	801f4d8 <calculate_aabb_per_shape+0xa88>
 801f45e:	46ac      	mov	ip, r5
 801f460:	eeb0 9a67 	vmov.f32	s18, s15
 801f464:	eef0 8a47 	vmov.f32	s17, s14
 801f468:	68a2      	ldr	r2, [r4, #8]
 801f46a:	f7ff bb46 	b.w	801eafa <calculate_aabb_per_shape+0xaa>
 801f46e:	ed9f 3a53 	vldr	s6, [pc, #332]	@ 801f5bc <calculate_aabb_per_shape+0xb6c>
 801f472:	eeb4 5ac3 	vcmpe.f32	s10, s6
 801f476:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f47a:	f6ff aba2 	blt.w	801ebc2 <calculate_aabb_per_shape+0x172>
 801f47e:	ed94 1a04 	vldr	s2, [r4, #16]
 801f482:	edd4 1a05 	vldr	s3, [r4, #20]
 801f486:	eeb4 1a47 	vcmp.f32	s2, s14
 801f48a:	ed94 2a06 	vldr	s4, [r4, #24]
 801f48e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f492:	eef4 1a67 	vcmp.f32	s3, s15
 801f496:	ed94 3a07 	vldr	s6, [r4, #28]
 801f49a:	fe37 1a01 	vselgt.f32	s2, s14, s2
 801f49e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f4a2:	eeb4 2a47 	vcmp.f32	s4, s14
 801f4a6:	fe77 1aa1 	vselgt.f32	s3, s15, s3
 801f4aa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f4ae:	eeb4 3a67 	vcmp.f32	s6, s15
 801f4b2:	bf48      	it	mi
 801f4b4:	eeb0 2a47 	vmovmi.f32	s4, s14
 801f4b8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f4bc:	bf48      	it	mi
 801f4be:	eeb0 3a67 	vmovmi.f32	s6, s15
 801f4c2:	3601      	adds	r6, #1
 801f4c4:	42b0      	cmp	r0, r6
 801f4c6:	ed84 1a04 	vstr	s2, [r4, #16]
 801f4ca:	edc4 1a05 	vstr	s3, [r4, #20]
 801f4ce:	ed84 2a06 	vstr	s4, [r4, #24]
 801f4d2:	ed84 3a07 	vstr	s6, [r4, #28]
 801f4d6:	d8c2      	bhi.n	801f45e <calculate_aabb_per_shape+0xa0e>
 801f4d8:	ed94 6a04 	vldr	s12, [r4, #16]
 801f4dc:	eefd 6ac6 	vcvt.s32.f32	s13, s12
 801f4e0:	ed94 7a05 	vldr	s14, [r4, #20]
 801f4e4:	eef8 5ae6 	vcvt.f32.s32	s11, s13
 801f4e8:	eefd 7ac7 	vcvt.s32.f32	s15, s14
 801f4ec:	ed94 5a06 	vldr	s10, [r4, #24]
 801f4f0:	eeb4 6ae5 	vcmpe.f32	s12, s11
 801f4f4:	eef8 4ae7 	vcvt.f32.s32	s9, s15
 801f4f8:	eebd 6ac5 	vcvt.s32.f32	s12, s10
 801f4fc:	edd4 5a07 	vldr	s11, [r4, #28]
 801f500:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f504:	eeb4 7ae4 	vcmpe.f32	s14, s9
 801f508:	eeb8 4ac6 	vcvt.f32.s32	s8, s12
 801f50c:	eebd 7ae5 	vcvt.s32.f32	s14, s11
 801f510:	bf4c      	ite	mi
 801f512:	2001      	movmi	r0, #1
 801f514:	2000      	movpl	r0, #0
 801f516:	ee16 5a90 	vmov	r5, s13
 801f51a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f51e:	eef8 4ac7 	vcvt.f32.s32	s9, s14
 801f522:	eeb4 5ac4 	vcmpe.f32	s10, s8
 801f526:	eba5 0000 	sub.w	r0, r5, r0
 801f52a:	bf4c      	ite	mi
 801f52c:	2101      	movmi	r1, #1
 801f52e:	2100      	movpl	r1, #0
 801f530:	ee06 0a90 	vmov	s13, r0
 801f534:	ee17 0a90 	vmov	r0, s15
 801f538:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f53c:	eef4 5ae4 	vcmpe.f32	s11, s9
 801f540:	eba0 0101 	sub.w	r1, r0, r1
 801f544:	bfcc      	ite	gt
 801f546:	2201      	movgt	r2, #1
 801f548:	2200      	movle	r2, #0
 801f54a:	ee07 1a90 	vmov	s15, r1
 801f54e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f552:	ee16 1a10 	vmov	r1, s12
 801f556:	bfc8      	it	gt
 801f558:	2301      	movgt	r3, #1
 801f55a:	440a      	add	r2, r1
 801f55c:	bfd8      	it	le
 801f55e:	2300      	movle	r3, #0
 801f560:	ee17 1a10 	vmov	r1, s14
 801f564:	4419      	add	r1, r3
 801f566:	ee07 1a10 	vmov	s14, r1
 801f56a:	ee06 2a10 	vmov	s12, r2
 801f56e:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 801f572:	eeb8 6ac6 	vcvt.f32.s32	s12, s12
 801f576:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801f57a:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801f57e:	ee36 5a66 	vsub.f32	s10, s12, s13
 801f582:	ee77 5a67 	vsub.f32	s11, s14, s15
 801f586:	e159      	b.n	801f83c <calculate_aabb_per_shape+0xdec>
 801f588:	68e2      	ldr	r2, [r4, #12]
 801f58a:	00b9      	lsls	r1, r7, #2
 801f58c:	440a      	add	r2, r1
 801f58e:	3702      	adds	r7, #2
 801f590:	ed92 7a00 	vldr	s14, [r2]
 801f594:	edd2 7a01 	vldr	s15, [r2, #4]
 801f598:	f1b8 0f00 	cmp.w	r8, #0
 801f59c:	d003      	beq.n	801f5a6 <calculate_aabb_per_shape+0xb56>
 801f59e:	ee37 7a28 	vadd.f32	s14, s14, s17
 801f5a2:	ee77 7a89 	vadd.f32	s15, s15, s18
 801f5a6:	eef0 ca67 	vmov.f32	s25, s15
 801f5aa:	eeb0 ea47 	vmov.f32	s28, s14
 801f5ae:	f04f 0900 	mov.w	r9, #0
 801f5b2:	f7ff badb 	b.w	801eb6c <calculate_aabb_per_shape+0x11c>
 801f5b6:	bf00      	nop
 801f5b8:	00000000 	.word	0x00000000
 801f5bc:	b727c5ac 	.word	0xb727c5ac
 801f5c0:	c7ffff00 	.word	0xc7ffff00
 801f5c4:	eef5 bac0 	vcmpe.f32	s23, #0.0
 801f5c8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f5cc:	f100 8126 	bmi.w	801f81c <calculate_aabb_per_shape+0xdcc>
 801f5d0:	eef4 baed 	vcmpe.f32	s23, s27
 801f5d4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f5d8:	bfcc      	ite	gt
 801f5da:	2301      	movgt	r3, #1
 801f5dc:	2300      	movle	r3, #0
 801f5de:	2b00      	cmp	r3, #0
 801f5e0:	f43f aee9 	beq.w	801f3b6 <calculate_aabb_per_shape+0x966>
 801f5e4:	eeb1 3a43 	vneg.f32	s6, s6
 801f5e8:	eec3 1a2b 	vdiv.f32	s3, s6, s23
 801f5ec:	eef4 1aed 	vcmpe.f32	s3, s27
 801f5f0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f5f4:	f77f aedf 	ble.w	801f3b6 <calculate_aabb_per_shape+0x966>
 801f5f8:	eef4 1aef 	vcmpe.f32	s3, s31
 801f5fc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f600:	f57f aed9 	bpl.w	801f3b6 <calculate_aabb_per_shape+0x966>
 801f604:	edcd 1a0e 	vstr	s3, [sp, #56]	@ 0x38
 801f608:	2301      	movs	r3, #1
 801f60a:	eef7 0a00 	vmov.f32	s1, #112	@ 0x3f800000  1.0
 801f60e:	eeb0 1a08 	vmov.f32	s2, #8	@ 0x40400000  3.0
 801f612:	ee30 0ae1 	vsub.f32	s0, s1, s3
 801f616:	ee20 2a01 	vmul.f32	s4, s0, s2
 801f61a:	ee20 3a00 	vmul.f32	s6, s0, s0
 801f61e:	ee20 8a02 	vmul.f32	s16, s0, s4
 801f622:	ee23 3a00 	vmul.f32	s6, s6, s0
 801f626:	ee22 2a21 	vmul.f32	s4, s4, s3
 801f62a:	ee28 8a21 	vmul.f32	s16, s16, s3
 801f62e:	ee22 2a21 	vmul.f32	s4, s4, s3
 801f632:	ee28 8a05 	vmul.f32	s16, s16, s10
 801f636:	ee23 3a28 	vmul.f32	s6, s6, s17
 801f63a:	ee21 0aa1 	vmul.f32	s0, s3, s3
 801f63e:	ee22 2a24 	vmul.f32	s4, s4, s9
 801f642:	ee33 3a08 	vadd.f32	s6, s6, s16
 801f646:	ee60 1a21 	vmul.f32	s3, s0, s3
 801f64a:	ee33 3a02 	vadd.f32	s6, s6, s4
 801f64e:	ee61 1a87 	vmul.f32	s3, s3, s14
 801f652:	ee33 3a21 	vadd.f32	s6, s6, s3
 801f656:	eef4 9ac3 	vcmpe.f32	s19, s6
 801f65a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f65e:	eeb4 aac3 	vcmpe.f32	s20, s6
 801f662:	bf58      	it	pl
 801f664:	eef0 9a43 	vmovpl.f32	s19, s6
 801f668:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f66c:	fe3a aa03 	vselgt.f32	s20, s20, s6
 801f670:	2b02      	cmp	r3, #2
 801f672:	f47f aea0 	bne.w	801f3b6 <calculate_aabb_per_shape+0x966>
 801f676:	ed9d 2a0f 	vldr	s4, [sp, #60]	@ 0x3c
 801f67a:	ee70 0ac2 	vsub.f32	s1, s1, s4
 801f67e:	ee20 1a81 	vmul.f32	s2, s1, s2
 801f682:	ee20 3aa0 	vmul.f32	s6, s1, s1
 801f686:	ee60 1a81 	vmul.f32	s3, s1, s2
 801f68a:	ee23 3a20 	vmul.f32	s6, s6, s1
 801f68e:	ee61 1a82 	vmul.f32	s3, s3, s4
 801f692:	ee22 1a01 	vmul.f32	s2, s4, s2
 801f696:	ee61 0a85 	vmul.f32	s1, s3, s10
 801f69a:	ee21 1a02 	vmul.f32	s2, s2, s4
 801f69e:	ee63 8a28 	vmul.f32	s17, s6, s17
 801f6a2:	ee62 1a02 	vmul.f32	s3, s4, s4
 801f6a6:	ee21 1a24 	vmul.f32	s2, s2, s9
 801f6aa:	ee38 3aa0 	vadd.f32	s6, s17, s1
 801f6ae:	ee21 2a82 	vmul.f32	s4, s3, s4
 801f6b2:	ee33 3a01 	vadd.f32	s6, s6, s2
 801f6b6:	ee22 2a07 	vmul.f32	s4, s4, s14
 801f6ba:	ee33 3a02 	vadd.f32	s6, s6, s4
 801f6be:	eef4 9ac3 	vcmpe.f32	s19, s6
 801f6c2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f6c6:	eeb4 aac3 	vcmpe.f32	s20, s6
 801f6ca:	bf58      	it	pl
 801f6cc:	eef0 9a43 	vmovpl.f32	s19, s6
 801f6d0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f6d4:	fe3a aa03 	vselgt.f32	s20, s20, s6
 801f6d8:	e66d      	b.n	801f3b6 <calculate_aabb_per_shape+0x966>
 801f6da:	eef5 8ac0 	vcmpe.f32	s17, #0.0
 801f6de:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f6e2:	f100 8093 	bmi.w	801f80c <calculate_aabb_per_shape+0xdbc>
 801f6e6:	eef4 8aed 	vcmpe.f32	s17, s27
 801f6ea:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f6ee:	bfcc      	ite	gt
 801f6f0:	2301      	movgt	r3, #1
 801f6f2:	2300      	movle	r3, #0
 801f6f4:	2b00      	cmp	r3, #0
 801f6f6:	f43f aea6 	beq.w	801f446 <calculate_aabb_per_shape+0x9f6>
 801f6fa:	eeb1 3a43 	vneg.f32	s6, s6
 801f6fe:	ee83 1a28 	vdiv.f32	s2, s6, s17
 801f702:	eeb4 1aed 	vcmpe.f32	s2, s27
 801f706:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f70a:	f77f ae9c 	ble.w	801f446 <calculate_aabb_per_shape+0x9f6>
 801f70e:	eeb4 1aef 	vcmpe.f32	s2, s31
 801f712:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f716:	f57f ae96 	bpl.w	801f446 <calculate_aabb_per_shape+0x9f6>
 801f71a:	2301      	movs	r3, #1
 801f71c:	eef7 1a00 	vmov.f32	s3, #112	@ 0x3f800000  1.0
 801f720:	eef0 0a08 	vmov.f32	s1, #8	@ 0x40400000  3.0
 801f724:	ee31 0ac1 	vsub.f32	s0, s3, s2
 801f728:	ee20 2a20 	vmul.f32	s4, s0, s1
 801f72c:	ee20 3a00 	vmul.f32	s6, s0, s0
 801f730:	ee20 8a02 	vmul.f32	s16, s0, s4
 801f734:	ee23 3a00 	vmul.f32	s6, s6, s0
 801f738:	ee22 2a01 	vmul.f32	s4, s4, s2
 801f73c:	ee28 8a01 	vmul.f32	s16, s16, s2
 801f740:	ee22 2a01 	vmul.f32	s4, s4, s2
 801f744:	ee28 8a26 	vmul.f32	s16, s16, s13
 801f748:	ee23 3a09 	vmul.f32	s6, s6, s18
 801f74c:	ee21 0a01 	vmul.f32	s0, s2, s2
 801f750:	ee22 2a25 	vmul.f32	s4, s4, s11
 801f754:	ee33 3a08 	vadd.f32	s6, s6, s16
 801f758:	ee20 1a01 	vmul.f32	s2, s0, s2
 801f75c:	ee33 3a02 	vadd.f32	s6, s6, s4
 801f760:	ee21 1a27 	vmul.f32	s2, s2, s15
 801f764:	ee33 3a01 	vadd.f32	s6, s6, s2
 801f768:	eef4 aac3 	vcmpe.f32	s21, s6
 801f76c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f770:	eeb4 bac3 	vcmpe.f32	s22, s6
 801f774:	bf58      	it	pl
 801f776:	eef0 aa43 	vmovpl.f32	s21, s6
 801f77a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f77e:	fe3b ba03 	vselgt.f32	s22, s22, s6
 801f782:	2b02      	cmp	r3, #2
 801f784:	f47f ae5f 	bne.w	801f446 <calculate_aabb_per_shape+0x9f6>
 801f788:	ed9d 1a0f 	vldr	s2, [sp, #60]	@ 0x3c
 801f78c:	ee71 1ac1 	vsub.f32	s3, s3, s2
 801f790:	ee21 2aa0 	vmul.f32	s4, s3, s1
 801f794:	ee21 3aa1 	vmul.f32	s6, s3, s3
 801f798:	ee61 0a82 	vmul.f32	s1, s3, s4
 801f79c:	ee23 3a21 	vmul.f32	s6, s6, s3
 801f7a0:	ee21 2a02 	vmul.f32	s4, s2, s4
 801f7a4:	ee60 0a81 	vmul.f32	s1, s1, s2
 801f7a8:	ee22 2a01 	vmul.f32	s4, s4, s2
 801f7ac:	ee60 0aa6 	vmul.f32	s1, s1, s13
 801f7b0:	ee23 9a09 	vmul.f32	s18, s6, s18
 801f7b4:	ee61 1a01 	vmul.f32	s3, s2, s2
 801f7b8:	ee22 2a25 	vmul.f32	s4, s4, s11
 801f7bc:	ee39 3a20 	vadd.f32	s6, s18, s1
 801f7c0:	ee21 1a81 	vmul.f32	s2, s3, s2
 801f7c4:	ee33 3a02 	vadd.f32	s6, s6, s4
 801f7c8:	ee21 1a27 	vmul.f32	s2, s2, s15
 801f7cc:	ee33 3a01 	vadd.f32	s6, s6, s2
 801f7d0:	eef4 aac3 	vcmpe.f32	s21, s6
 801f7d4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f7d8:	eeb4 bac3 	vcmpe.f32	s22, s6
 801f7dc:	bf58      	it	pl
 801f7de:	eef0 aa43 	vmovpl.f32	s21, s6
 801f7e2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f7e6:	fe3b ba03 	vselgt.f32	s22, s22, s6
 801f7ea:	e62c      	b.n	801f446 <calculate_aabb_per_shape+0x9f6>
 801f7ec:	eeb4 8aee 	vcmpe.f32	s16, s29
 801f7f0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f7f4:	bfcc      	ite	gt
 801f7f6:	2301      	movgt	r3, #1
 801f7f8:	2300      	movle	r3, #0
 801f7fa:	e5c9      	b.n	801f390 <calculate_aabb_per_shape+0x940>
 801f7fc:	eeb4 8aee 	vcmpe.f32	s16, s29
 801f800:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f804:	bfcc      	ite	gt
 801f806:	2301      	movgt	r3, #1
 801f808:	2300      	movle	r3, #0
 801f80a:	e609      	b.n	801f420 <calculate_aabb_per_shape+0x9d0>
 801f80c:	eef4 8aee 	vcmpe.f32	s17, s29
 801f810:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f814:	bf4c      	ite	mi
 801f816:	2301      	movmi	r3, #1
 801f818:	2300      	movpl	r3, #0
 801f81a:	e76b      	b.n	801f6f4 <calculate_aabb_per_shape+0xca4>
 801f81c:	eef4 baee 	vcmpe.f32	s23, s29
 801f820:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f824:	bf4c      	ite	mi
 801f826:	2301      	movmi	r3, #1
 801f828:	2300      	movpl	r3, #0
 801f82a:	e6d8      	b.n	801f5de <calculate_aabb_per_shape+0xb8e>
 801f82c:	ed5f 5a9c 	vldr	s11, [pc, #-624]	@ 801f5c0 <calculate_aabb_per_shape+0xb70>
 801f830:	eeb0 6a47 	vmov.f32	s12, s14
 801f834:	eef0 6a67 	vmov.f32	s13, s15
 801f838:	eeb0 5a65 	vmov.f32	s10, s11
 801f83c:	edc4 6a04 	vstr	s13, [r4, #16]
 801f840:	edc4 7a05 	vstr	s15, [r4, #20]
 801f844:	ed84 6a06 	vstr	s12, [r4, #24]
 801f848:	ed84 7a07 	vstr	s14, [r4, #28]
 801f84c:	ed84 5a08 	vstr	s10, [r4, #32]
 801f850:	edc4 5a09 	vstr	s11, [r4, #36]	@ 0x24
 801f854:	b011      	add	sp, #68	@ 0x44
 801f856:	ecbd 8b10 	vpop	{d8-d15}
 801f85a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801f85e:	eeb4 bae6 	vcmpe.f32	s22, s13
 801f862:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f866:	f6ff ad5e 	blt.w	801f326 <calculate_aabb_per_shape+0x8d6>
 801f86a:	eef4 9ae4 	vcmpe.f32	s19, s9
 801f86e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f872:	f63f ad58 	bhi.w	801f326 <calculate_aabb_per_shape+0x8d6>
 801f876:	eeb4 aae4 	vcmpe.f32	s20, s9
 801f87a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f87e:	f6ff ad52 	blt.w	801f326 <calculate_aabb_per_shape+0x8d6>
 801f882:	eef4 aae5 	vcmpe.f32	s21, s11
 801f886:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f88a:	f63f ad4c 	bhi.w	801f326 <calculate_aabb_per_shape+0x8d6>
 801f88e:	eeb4 bae5 	vcmpe.f32	s22, s11
 801f892:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f896:	f6ff ad46 	blt.w	801f326 <calculate_aabb_per_shape+0x8d6>
 801f89a:	e5dd      	b.n	801f458 <calculate_aabb_per_shape+0xa08>
 801f89c:	f1aa 0a05 	sub.w	sl, sl, #5
 801f8a0:	f1ba 0f03 	cmp.w	sl, #3
 801f8a4:	f240 81ae 	bls.w	801fc04 <calculate_aabb_per_shape+0x11b4>
 801f8a8:	eef0 6a49 	vmov.f32	s13, s18
 801f8ac:	eeb0 5a68 	vmov.f32	s10, s17
 801f8b0:	46ba      	mov	sl, r7
 801f8b2:	eeb0 6a66 	vmov.f32	s12, s13
 801f8b6:	eeb0 da45 	vmov.f32	s26, s10
 801f8ba:	e17d      	b.n	801fbb8 <calculate_aabb_per_shape+0x1168>
 801f8bc:	ed94 2a04 	vldr	s4, [r4, #16]
 801f8c0:	edd4 0a05 	vldr	s1, [r4, #20]
 801f8c4:	eeb4 2ac7 	vcmpe.f32	s4, s14
 801f8c8:	ed94 1a06 	vldr	s2, [r4, #24]
 801f8cc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f8d0:	eef4 0ae7 	vcmpe.f32	s1, s15
 801f8d4:	bf58      	it	pl
 801f8d6:	eeb0 2a47 	vmovpl.f32	s4, s14
 801f8da:	ed94 0a07 	vldr	s0, [r4, #28]
 801f8de:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f8e2:	eeb4 1ac7 	vcmpe.f32	s2, s14
 801f8e6:	bf58      	it	pl
 801f8e8:	eef0 0a67 	vmovpl.f32	s1, s15
 801f8ec:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f8f0:	eeb4 0ae7 	vcmpe.f32	s0, s15
 801f8f4:	fe31 1a07 	vselgt.f32	s2, s2, s14
 801f8f8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f8fc:	eeb4 2ac5 	vcmpe.f32	s4, s10
 801f900:	fe30 0a27 	vselgt.f32	s0, s0, s15
 801f904:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f908:	ed84 2a04 	vstr	s4, [r4, #16]
 801f90c:	edc4 0a05 	vstr	s1, [r4, #20]
 801f910:	ed84 1a06 	vstr	s2, [r4, #24]
 801f914:	ed84 0a07 	vstr	s0, [r4, #28]
 801f918:	d80f      	bhi.n	801f93a <calculate_aabb_per_shape+0xeea>
 801f91a:	eeb4 1ac5 	vcmpe.f32	s2, s10
 801f91e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f922:	db0a      	blt.n	801f93a <calculate_aabb_per_shape+0xeea>
 801f924:	eef4 0ae6 	vcmpe.f32	s1, s13
 801f928:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f92c:	d805      	bhi.n	801f93a <calculate_aabb_per_shape+0xeea>
 801f92e:	eeb4 0ae6 	vcmpe.f32	s0, s13
 801f932:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f936:	f6bf ad8f 	bge.w	801f458 <calculate_aabb_per_shape+0xa08>
 801f93a:	ee35 8a05 	vadd.f32	s16, s10, s10
 801f93e:	ee78 1aa8 	vadd.f32	s3, s17, s17
 801f942:	ee37 3a07 	vadd.f32	s6, s14, s14
 801f946:	ee78 1a61 	vsub.f32	s3, s16, s3
 801f94a:	ee33 3a48 	vsub.f32	s6, s6, s16
 801f94e:	ee33 3a61 	vsub.f32	s6, s6, s3
 801f952:	eeb5 3ac0 	vcmpe.f32	s6, #0.0
 801f956:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f95a:	f100 8139 	bmi.w	801fbd0 <calculate_aabb_per_shape+0x1180>
 801f95e:	eeb4 3aed 	vcmpe.f32	s6, s27
 801f962:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f966:	bfcc      	ite	gt
 801f968:	2301      	movgt	r3, #1
 801f96a:	2300      	movle	r3, #0
 801f96c:	b173      	cbz	r3, 801f98c <calculate_aabb_per_shape+0xf3c>
 801f96e:	eef1 1a61 	vneg.f32	s3, s3
 801f972:	ee81 8a83 	vdiv.f32	s16, s3, s6
 801f976:	eeb4 8aed 	vcmpe.f32	s16, s27
 801f97a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f97e:	dd05      	ble.n	801f98c <calculate_aabb_per_shape+0xf3c>
 801f980:	eeb4 8aef 	vcmpe.f32	s16, s31
 801f984:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f988:	f100 8175 	bmi.w	801fc76 <calculate_aabb_per_shape+0x1226>
 801f98c:	ee36 8aa6 	vadd.f32	s16, s13, s13
 801f990:	ee79 1a09 	vadd.f32	s3, s18, s18
 801f994:	ee37 3aa7 	vadd.f32	s6, s15, s15
 801f998:	ee78 1a61 	vsub.f32	s3, s16, s3
 801f99c:	ee33 3a48 	vsub.f32	s6, s6, s16
 801f9a0:	ee33 3a61 	vsub.f32	s6, s6, s3
 801f9a4:	eeb5 3ac0 	vcmpe.f32	s6, #0.0
 801f9a8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f9ac:	f100 815b 	bmi.w	801fc66 <calculate_aabb_per_shape+0x1216>
 801f9b0:	eeb4 3aed 	vcmpe.f32	s6, s27
 801f9b4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f9b8:	bfcc      	ite	gt
 801f9ba:	2301      	movgt	r3, #1
 801f9bc:	2300      	movle	r3, #0
 801f9be:	b383      	cbz	r3, 801fa22 <calculate_aabb_per_shape+0xfd2>
 801f9c0:	eef1 1a61 	vneg.f32	s3, s3
 801f9c4:	ee81 8a83 	vdiv.f32	s16, s3, s6
 801f9c8:	eeb4 8aed 	vcmpe.f32	s16, s27
 801f9cc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f9d0:	dd27      	ble.n	801fa22 <calculate_aabb_per_shape+0xfd2>
 801f9d2:	eeb4 8aef 	vcmpe.f32	s16, s31
 801f9d6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f9da:	d522      	bpl.n	801fa22 <calculate_aabb_per_shape+0xfd2>
 801f9dc:	eef7 1a00 	vmov.f32	s3, #112	@ 0x3f800000  1.0
 801f9e0:	ee71 1ac8 	vsub.f32	s3, s3, s16
 801f9e4:	ee31 3aa1 	vadd.f32	s6, s3, s3
 801f9e8:	ee61 1aa1 	vmul.f32	s3, s3, s3
 801f9ec:	ee23 3a08 	vmul.f32	s6, s6, s16
 801f9f0:	ee61 1a89 	vmul.f32	s3, s3, s18
 801f9f4:	ee23 3a26 	vmul.f32	s6, s6, s13
 801f9f8:	ee28 8a08 	vmul.f32	s16, s16, s16
 801f9fc:	ee73 1a21 	vadd.f32	s3, s6, s3
 801fa00:	ee28 3a27 	vmul.f32	s6, s16, s15
 801fa04:	ee31 3a83 	vadd.f32	s6, s3, s6
 801fa08:	eef4 0ac3 	vcmpe.f32	s1, s6
 801fa0c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801fa10:	eeb4 0ac3 	vcmpe.f32	s0, s6
 801fa14:	bf58      	it	pl
 801fa16:	eef0 0a43 	vmovpl.f32	s1, s6
 801fa1a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801fa1e:	fe30 0a03 	vselgt.f32	s0, s0, s6
 801fa22:	ed84 2a04 	vstr	s4, [r4, #16]
 801fa26:	edc4 0a05 	vstr	s1, [r4, #20]
 801fa2a:	ed84 1a06 	vstr	s2, [r4, #24]
 801fa2e:	ed84 0a07 	vstr	s0, [r4, #28]
 801fa32:	e511      	b.n	801f458 <calculate_aabb_per_shape+0xa08>
 801fa34:	f107 0a04 	add.w	sl, r7, #4
 801fa38:	edde 6a01 	vldr	s13, [lr, #4]
 801fa3c:	ed9e da02 	vldr	s26, [lr, #8]
 801fa40:	edde 5a03 	vldr	s11, [lr, #12]
 801fa44:	f1b8 0f00 	cmp.w	r8, #0
 801fa48:	d007      	beq.n	801fa5a <calculate_aabb_per_shape+0x100a>
 801fa4a:	ee77 7aa8 	vadd.f32	s15, s15, s17
 801fa4e:	ee76 6a89 	vadd.f32	s13, s13, s18
 801fa52:	ee3d da28 	vadd.f32	s26, s26, s17
 801fa56:	ee75 5a89 	vadd.f32	s11, s11, s18
 801fa5a:	eef0 4a4d 	vmov.f32	s9, s26
 801fa5e:	eeb0 6a65 	vmov.f32	s12, s11
 801fa62:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 801fa66:	f10a 0702 	add.w	r7, sl, #2
 801fa6a:	ed91 7a00 	vldr	s14, [r1]
 801fa6e:	ed91 3a01 	vldr	s6, [r1, #4]
 801fa72:	eeb0 5a67 	vmov.f32	s10, s15
 801fa76:	f1b8 0f00 	cmp.w	r8, #0
 801fa7a:	f000 80a5 	beq.w	801fbc8 <calculate_aabb_per_shape+0x1178>
 801fa7e:	ee37 7a28 	vadd.f32	s14, s14, s17
 801fa82:	ee79 7a03 	vadd.f32	s15, s18, s6
 801fa86:	f7ff b871 	b.w	801eb6c <calculate_aabb_per_shape+0x11c>
 801fa8a:	eeb5 0a40 	vcmp.f32	s0, #0.0
 801fa8e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801fa92:	eeb1 cac0 	vsqrt.f32	s24, s0
 801fa96:	f100 8144 	bmi.w	801fd22 <calculate_aabb_per_shape+0x12d2>
 801fa9a:	ee38 8a08 	vadd.f32	s16, s16, s16
 801fa9e:	eeb1 3a6b 	vneg.f32	s6, s23
 801faa2:	ee7c ba6b 	vsub.f32	s23, s24, s23
 801faa6:	eecb 1a88 	vdiv.f32	s3, s23, s16
 801faaa:	eef4 1aed 	vcmpe.f32	s3, s27
 801faae:	ee33 3a4c 	vsub.f32	s6, s6, s24
 801fab2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801fab6:	ee83 2a08 	vdiv.f32	s4, s6, s16
 801faba:	dd15      	ble.n	801fae8 <calculate_aabb_per_shape+0x1098>
 801fabc:	eef4 1aef 	vcmpe.f32	s3, s31
 801fac0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801fac4:	d510      	bpl.n	801fae8 <calculate_aabb_per_shape+0x1098>
 801fac6:	eeb4 2aed 	vcmpe.f32	s4, s27
 801faca:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801face:	edcd 1a0e 	vstr	s3, [sp, #56]	@ 0x38
 801fad2:	f77f ad99 	ble.w	801f608 <calculate_aabb_per_shape+0xbb8>
 801fad6:	eeb4 2aef 	vcmpe.f32	s4, s31
 801fada:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801fade:	f57f ad93 	bpl.w	801f608 <calculate_aabb_per_shape+0xbb8>
 801fae2:	2302      	movs	r3, #2
 801fae4:	2201      	movs	r2, #1
 801fae6:	e00d      	b.n	801fb04 <calculate_aabb_per_shape+0x10b4>
 801fae8:	eeb4 2aed 	vcmpe.f32	s4, s27
 801faec:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801faf0:	f77f ac61 	ble.w	801f3b6 <calculate_aabb_per_shape+0x966>
 801faf4:	eeb4 2aef 	vcmpe.f32	s4, s31
 801faf8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801fafc:	f57f ac5b 	bpl.w	801f3b6 <calculate_aabb_per_shape+0x966>
 801fb00:	2301      	movs	r3, #1
 801fb02:	2200      	movs	r2, #0
 801fb04:	a910      	add	r1, sp, #64	@ 0x40
 801fb06:	eb01 0282 	add.w	r2, r1, r2, lsl #2
 801fb0a:	ed02 2a02 	vstr	s4, [r2, #-8]
 801fb0e:	eddd 1a0e 	vldr	s3, [sp, #56]	@ 0x38
 801fb12:	e57a      	b.n	801f60a <calculate_aabb_per_shape+0xbba>
 801fb14:	eeb5 0a40 	vcmp.f32	s0, #0.0
 801fb18:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801fb1c:	eef1 bac0 	vsqrt.f32	s23, s0
 801fb20:	f100 80e0 	bmi.w	801fce4 <calculate_aabb_per_shape+0x1294>
 801fb24:	ee38 8a08 	vadd.f32	s16, s16, s16
 801fb28:	eeb1 3a68 	vneg.f32	s6, s17
 801fb2c:	ee7b 8ae8 	vsub.f32	s17, s23, s17
 801fb30:	ee88 1a88 	vdiv.f32	s2, s17, s16
 801fb34:	eeb4 1aed 	vcmpe.f32	s2, s27
 801fb38:	ee33 3a6b 	vsub.f32	s6, s6, s23
 801fb3c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801fb40:	ee83 2a08 	vdiv.f32	s4, s6, s16
 801fb44:	dd15      	ble.n	801fb72 <calculate_aabb_per_shape+0x1122>
 801fb46:	eeb4 1aef 	vcmpe.f32	s2, s31
 801fb4a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801fb4e:	d510      	bpl.n	801fb72 <calculate_aabb_per_shape+0x1122>
 801fb50:	eeb4 2aed 	vcmpe.f32	s4, s27
 801fb54:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801fb58:	ed8d 1a0e 	vstr	s2, [sp, #56]	@ 0x38
 801fb5c:	f77f addd 	ble.w	801f71a <calculate_aabb_per_shape+0xcca>
 801fb60:	eeb4 2aef 	vcmpe.f32	s4, s31
 801fb64:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801fb68:	f57f add7 	bpl.w	801f71a <calculate_aabb_per_shape+0xcca>
 801fb6c:	2302      	movs	r3, #2
 801fb6e:	2201      	movs	r2, #1
 801fb70:	e00d      	b.n	801fb8e <calculate_aabb_per_shape+0x113e>
 801fb72:	eeb4 2aed 	vcmpe.f32	s4, s27
 801fb76:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801fb7a:	f77f ac64 	ble.w	801f446 <calculate_aabb_per_shape+0x9f6>
 801fb7e:	eeb4 2aef 	vcmpe.f32	s4, s31
 801fb82:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801fb86:	f57f ac5e 	bpl.w	801f446 <calculate_aabb_per_shape+0x9f6>
 801fb8a:	2301      	movs	r3, #1
 801fb8c:	2200      	movs	r2, #0
 801fb8e:	a910      	add	r1, sp, #64	@ 0x40
 801fb90:	eb01 0282 	add.w	r2, r1, r2, lsl #2
 801fb94:	ed02 2a02 	vstr	s4, [r2, #-8]
 801fb98:	ed9d 1a0e 	vldr	s2, [sp, #56]	@ 0x38
 801fb9c:	e5be      	b.n	801f71c <calculate_aabb_per_shape+0xccc>
 801fb9e:	f107 0a02 	add.w	sl, r7, #2
 801fba2:	edde 6a01 	vldr	s13, [lr, #4]
 801fba6:	f1b8 0f00 	cmp.w	r8, #0
 801fbaa:	d108      	bne.n	801fbbe <calculate_aabb_per_shape+0x116e>
 801fbac:	eeb0 da67 	vmov.f32	s26, s15
 801fbb0:	eeb0 6a66 	vmov.f32	s12, s13
 801fbb4:	eeb0 5a67 	vmov.f32	s10, s15
 801fbb8:	eef0 7a45 	vmov.f32	s15, s10
 801fbbc:	e751      	b.n	801fa62 <calculate_aabb_per_shape+0x1012>
 801fbbe:	ee77 7aa8 	vadd.f32	s15, s15, s17
 801fbc2:	ee76 6a89 	vadd.f32	s13, s13, s18
 801fbc6:	e7f1      	b.n	801fbac <calculate_aabb_per_shape+0x115c>
 801fbc8:	eef0 7a43 	vmov.f32	s15, s6
 801fbcc:	f7fe bfce 	b.w	801eb6c <calculate_aabb_per_shape+0x11c>
 801fbd0:	eeb4 3aee 	vcmpe.f32	s6, s29
 801fbd4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801fbd8:	bf4c      	ite	mi
 801fbda:	2301      	movmi	r3, #1
 801fbdc:	2300      	movpl	r3, #0
 801fbde:	e6c5      	b.n	801f96c <calculate_aabb_per_shape+0xf1c>
 801fbe0:	eeb0 5a67 	vmov.f32	s10, s15
 801fbe4:	f107 0a03 	add.w	sl, r7, #3
 801fbe8:	edde 6a01 	vldr	s13, [lr, #4]
 801fbec:	3704      	adds	r7, #4
 801fbee:	edde 4a02 	vldr	s9, [lr, #8]
 801fbf2:	eeb0 6a49 	vmov.f32	s12, s18
 801fbf6:	eeb0 da68 	vmov.f32	s26, s17
 801fbfa:	edde 7a03 	vldr	s15, [lr, #12]
 801fbfe:	9500      	str	r5, [sp, #0]
 801fc00:	f7fe bfa9 	b.w	801eb56 <calculate_aabb_per_shape+0x106>
 801fc04:	ee38 5aa8 	vadd.f32	s10, s17, s17
 801fc08:	ee79 6a09 	vadd.f32	s13, s18, s18
 801fc0c:	ee35 5a4d 	vsub.f32	s10, s10, s26
 801fc10:	ee76 6ac6 	vsub.f32	s13, s13, s12
 801fc14:	e64c      	b.n	801f8b0 <calculate_aabb_per_shape+0xe60>
 801fc16:	eeb0 7a68 	vmov.f32	s14, s17
 801fc1a:	f7fe bfa7 	b.w	801eb6c <calculate_aabb_per_shape+0x11c>
 801fc1e:	f1aa 0a05 	sub.w	sl, sl, #5
 801fc22:	f1ba 0f03 	cmp.w	sl, #3
 801fc26:	d915      	bls.n	801fc54 <calculate_aabb_per_shape+0x1204>
 801fc28:	eef0 6a49 	vmov.f32	s13, s18
 801fc2c:	eeb0 5a68 	vmov.f32	s10, s17
 801fc30:	f107 0a02 	add.w	sl, r7, #2
 801fc34:	edde 5a01 	vldr	s11, [lr, #4]
 801fc38:	f1b8 0f00 	cmp.w	r8, #0
 801fc3c:	d003      	beq.n	801fc46 <calculate_aabb_per_shape+0x11f6>
 801fc3e:	ee77 7aa8 	vadd.f32	s15, s15, s17
 801fc42:	ee75 5a89 	vadd.f32	s11, s11, s18
 801fc46:	eeb0 da67 	vmov.f32	s26, s15
 801fc4a:	eeb0 6a65 	vmov.f32	s12, s11
 801fc4e:	eef0 4a67 	vmov.f32	s9, s15
 801fc52:	e7b1      	b.n	801fbb8 <calculate_aabb_per_shape+0x1168>
 801fc54:	ee38 5aa8 	vadd.f32	s10, s17, s17
 801fc58:	ee79 6a09 	vadd.f32	s13, s18, s18
 801fc5c:	ee35 5a4d 	vsub.f32	s10, s10, s26
 801fc60:	ee76 6ac6 	vsub.f32	s13, s13, s12
 801fc64:	e7e4      	b.n	801fc30 <calculate_aabb_per_shape+0x11e0>
 801fc66:	eeb4 3aee 	vcmpe.f32	s6, s29
 801fc6a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801fc6e:	bf4c      	ite	mi
 801fc70:	2301      	movmi	r3, #1
 801fc72:	2300      	movpl	r3, #0
 801fc74:	e6a3      	b.n	801f9be <calculate_aabb_per_shape+0xf6e>
 801fc76:	eef7 1a00 	vmov.f32	s3, #112	@ 0x3f800000  1.0
 801fc7a:	ee71 1ac8 	vsub.f32	s3, s3, s16
 801fc7e:	ee31 3aa1 	vadd.f32	s6, s3, s3
 801fc82:	ee61 1aa1 	vmul.f32	s3, s3, s3
 801fc86:	ee23 3a08 	vmul.f32	s6, s6, s16
 801fc8a:	ee61 1aa8 	vmul.f32	s3, s3, s17
 801fc8e:	ee23 3a05 	vmul.f32	s6, s6, s10
 801fc92:	ee28 8a08 	vmul.f32	s16, s16, s16
 801fc96:	ee73 1a21 	vadd.f32	s3, s6, s3
 801fc9a:	ee28 3a07 	vmul.f32	s6, s16, s14
 801fc9e:	ee31 3a83 	vadd.f32	s6, s3, s6
 801fca2:	eeb4 2ac3 	vcmpe.f32	s4, s6
 801fca6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801fcaa:	eeb4 1ac3 	vcmpe.f32	s2, s6
 801fcae:	bf58      	it	pl
 801fcb0:	eeb0 2a43 	vmovpl.f32	s4, s6
 801fcb4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801fcb8:	fe31 1a03 	vselgt.f32	s2, s2, s6
 801fcbc:	e666      	b.n	801f98c <calculate_aabb_per_shape+0xf3c>
 801fcbe:	ed9f 3ad3 	vldr	s6, [pc, #844]	@ 802000c <calculate_aabb_per_shape+0x15bc>
 801fcc2:	eef4 6ac3 	vcmpe.f32	s13, s6
 801fcc6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801fcca:	f6bf abd8 	bge.w	801f47e <calculate_aabb_per_shape+0xa2e>
 801fcce:	eeb5 5ac0 	vcmpe.f32	s10, #0.0
 801fcd2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801fcd6:	d443      	bmi.n	801fd60 <calculate_aabb_per_shape+0x1310>
 801fcd8:	eeb0 8a45 	vmov.f32	s16, s10
 801fcdc:	eeb1 9a66 	vneg.f32	s18, s13
 801fce0:	f7fe bf8d 	b.w	801ebfe <calculate_aabb_per_shape+0x1ae>
 801fce4:	edcd 6a07 	vstr	s13, [sp, #28]
 801fce8:	edcd 4a06 	vstr	s9, [sp, #24]
 801fcec:	ed8d 6a05 	vstr	s12, [sp, #20]
 801fcf0:	edcd 5a04 	vstr	s11, [sp, #16]
 801fcf4:	ed8d 5a03 	vstr	s10, [sp, #12]
 801fcf8:	edcd 7a02 	vstr	s15, [sp, #8]
 801fcfc:	ed8d 7a01 	vstr	s14, [sp, #4]
 801fd00:	f011 fbd6 	bl	80314b0 <sqrtf>
 801fd04:	eddd 6a07 	vldr	s13, [sp, #28]
 801fd08:	eddd 4a06 	vldr	s9, [sp, #24]
 801fd0c:	ed9d 6a05 	vldr	s12, [sp, #20]
 801fd10:	eddd 5a04 	vldr	s11, [sp, #16]
 801fd14:	ed9d 5a03 	vldr	s10, [sp, #12]
 801fd18:	eddd 7a02 	vldr	s15, [sp, #8]
 801fd1c:	ed9d 7a01 	vldr	s14, [sp, #4]
 801fd20:	e700      	b.n	801fb24 <calculate_aabb_per_shape+0x10d4>
 801fd22:	edcd 6a07 	vstr	s13, [sp, #28]
 801fd26:	edcd 4a06 	vstr	s9, [sp, #24]
 801fd2a:	ed8d 6a05 	vstr	s12, [sp, #20]
 801fd2e:	edcd 5a04 	vstr	s11, [sp, #16]
 801fd32:	ed8d 5a03 	vstr	s10, [sp, #12]
 801fd36:	edcd 7a02 	vstr	s15, [sp, #8]
 801fd3a:	ed8d 7a01 	vstr	s14, [sp, #4]
 801fd3e:	f011 fbb7 	bl	80314b0 <sqrtf>
 801fd42:	eddd 6a07 	vldr	s13, [sp, #28]
 801fd46:	eddd 4a06 	vldr	s9, [sp, #24]
 801fd4a:	ed9d 6a05 	vldr	s12, [sp, #20]
 801fd4e:	eddd 5a04 	vldr	s11, [sp, #16]
 801fd52:	ed9d 5a03 	vldr	s10, [sp, #12]
 801fd56:	eddd 7a02 	vldr	s15, [sp, #8]
 801fd5a:	ed9d 7a01 	vldr	s14, [sp, #4]
 801fd5e:	e69c      	b.n	801fa9a <calculate_aabb_per_shape+0x104a>
 801fd60:	eeb1 8a45 	vneg.f32	s16, s10
 801fd64:	f7fe bf43 	b.w	801ebee <calculate_aabb_per_shape+0x19e>
 801fd68:	ee28 aa08 	vmul.f32	s20, s16, s16
 801fd6c:	ee3a aa0f 	vadd.f32	s20, s20, s30
 801fd70:	eeb5 aa40 	vcmp.f32	s20, #0.0
 801fd74:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801fd78:	ee79 bac8 	vsub.f32	s23, s19, s16
 801fd7c:	eef1 aaca 	vsqrt.f32	s21, s20
 801fd80:	eeb1 ba48 	vneg.f32	s22, s16
 801fd84:	edcd 6a08 	vstr	s13, [sp, #32]
 801fd88:	edcd 4a07 	vstr	s9, [sp, #28]
 801fd8c:	ed8d 6a06 	vstr	s12, [sp, #24]
 801fd90:	edcd 5a05 	vstr	s11, [sp, #20]
 801fd94:	ed8d 5a04 	vstr	s10, [sp, #16]
 801fd98:	edcd 7a03 	vstr	s15, [sp, #12]
 801fd9c:	ed8d 7a01 	vstr	s14, [sp, #4]
 801fda0:	f100 8655 	bmi.w	8020a4e <calculate_aabb_per_shape+0x1ffe>
 801fda4:	ee8b 0a2a 	vdiv.f32	s0, s22, s21
 801fda8:	f011 fb34 	bl	8031414 <acosf>
 801fdac:	eddf 0a99 	vldr	s1, [pc, #612]	@ 8020014 <calculate_aabb_per_shape+0x15c4>
 801fdb0:	ee30 0ac0 	vsub.f32	s0, s1, s0
 801fdb4:	f011 fb5c 	bl	8031470 <fmodf>
 801fdb8:	ee39 aa88 	vadd.f32	s20, s19, s16
 801fdbc:	ed8d 0a02 	vstr	s0, [sp, #8]
 801fdc0:	ed9d 7a01 	vldr	s14, [sp, #4]
 801fdc4:	eddd 7a03 	vldr	s15, [sp, #12]
 801fdc8:	ed9d 5a04 	vldr	s10, [sp, #16]
 801fdcc:	eddd 5a05 	vldr	s11, [sp, #20]
 801fdd0:	ed9d 6a06 	vldr	s12, [sp, #24]
 801fdd4:	eddd 4a07 	vldr	s9, [sp, #28]
 801fdd8:	eddd 6a08 	vldr	s13, [sp, #32]
 801fddc:	ee88 0a2a 	vdiv.f32	s0, s16, s21
 801fde0:	edcd 6a09 	vstr	s13, [sp, #36]	@ 0x24
 801fde4:	edcd 4a08 	vstr	s9, [sp, #32]
 801fde8:	ed8d 6a07 	vstr	s12, [sp, #28]
 801fdec:	edcd 5a06 	vstr	s11, [sp, #24]
 801fdf0:	ed8d 5a05 	vstr	s10, [sp, #20]
 801fdf4:	edcd 7a03 	vstr	s15, [sp, #12]
 801fdf8:	ed8d 7a01 	vstr	s14, [sp, #4]
 801fdfc:	ed9f ca85 	vldr	s24, [pc, #532]	@ 8020014 <calculate_aabb_per_shape+0x15c4>
 801fe00:	f011 fb08 	bl	8031414 <acosf>
 801fe04:	eef0 0a4c 	vmov.f32	s1, s24
 801fe08:	ee3c 0a40 	vsub.f32	s0, s24, s0
 801fe0c:	f011 fb30 	bl	8031470 <fmodf>
 801fe10:	ee29 2a09 	vmul.f32	s4, s18, s18
 801fe14:	eeb5 9ac0 	vcmpe.f32	s18, #0.0
 801fe18:	ee32 2a0f 	vadd.f32	s4, s4, s30
 801fe1c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801fe20:	eeb7 3a00 	vmov.f32	s6, #112	@ 0x3f800000  1.0
 801fe24:	eeff 1a00 	vmov.f32	s3, #240	@ 0xbf800000 -1.0
 801fe28:	eeb5 2a40 	vcmp.f32	s4, #0.0
 801fe2c:	bf54      	ite	pl
 801fe2e:	eef0 aa61 	vmovpl.f32	s21, s3
 801fe32:	eef0 aa43 	vmovmi.f32	s21, s6
 801fe36:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801fe3a:	ed8d 0a04 	vstr	s0, [sp, #16]
 801fe3e:	eeb1 4ac2 	vsqrt.f32	s8, s4
 801fe42:	ee38 bac9 	vsub.f32	s22, s17, s18
 801fe46:	ed9d 7a01 	vldr	s14, [sp, #4]
 801fe4a:	eddd 7a03 	vldr	s15, [sp, #12]
 801fe4e:	ed9d 5a05 	vldr	s10, [sp, #20]
 801fe52:	eddd 5a06 	vldr	s11, [sp, #24]
 801fe56:	ed9d 6a07 	vldr	s12, [sp, #28]
 801fe5a:	eddd 4a08 	vldr	s9, [sp, #32]
 801fe5e:	eddd 6a09 	vldr	s13, [sp, #36]	@ 0x24
 801fe62:	f100 8587 	bmi.w	8020974 <calculate_aabb_per_shape+0x1f24>
 801fe66:	ee8f 8a04 	vdiv.f32	s16, s30, s8
 801fe6a:	eeb0 0a48 	vmov.f32	s0, s16
 801fe6e:	edcd 6a0c 	vstr	s13, [sp, #48]	@ 0x30
 801fe72:	edcd 4a0b 	vstr	s9, [sp, #44]	@ 0x2c
 801fe76:	ed8d 6a0a 	vstr	s12, [sp, #40]	@ 0x28
 801fe7a:	edcd 5a09 	vstr	s11, [sp, #36]	@ 0x24
 801fe7e:	ed8d 5a08 	vstr	s10, [sp, #32]
 801fe82:	edcd 1a07 	vstr	s3, [sp, #28]
 801fe86:	ed8d 3a06 	vstr	s6, [sp, #24]
 801fe8a:	edcd 7a05 	vstr	s15, [sp, #20]
 801fe8e:	ed8d 7a01 	vstr	s14, [sp, #4]
 801fe92:	f011 fabf 	bl	8031414 <acosf>
 801fe96:	ee2a 0a80 	vmul.f32	s0, s21, s0
 801fe9a:	eef0 0a4c 	vmov.f32	s1, s24
 801fe9e:	ee30 0a0c 	vadd.f32	s0, s0, s24
 801fea2:	f011 fae5 	bl	8031470 <fmodf>
 801fea6:	eeb5 9ac0 	vcmpe.f32	s18, #0.0
 801feaa:	ed9d 3a06 	vldr	s6, [sp, #24]
 801feae:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801feb2:	eddd 1a07 	vldr	s3, [sp, #28]
 801feb6:	ed8d 0a03 	vstr	s0, [sp, #12]
 801feba:	ed9d 7a01 	vldr	s14, [sp, #4]
 801febe:	eddd 7a05 	vldr	s15, [sp, #20]
 801fec2:	ed9d 5a08 	vldr	s10, [sp, #32]
 801fec6:	eddd 5a09 	vldr	s11, [sp, #36]	@ 0x24
 801feca:	ed9d 6a0a 	vldr	s12, [sp, #40]	@ 0x28
 801fece:	eddd 4a0b 	vldr	s9, [sp, #44]	@ 0x2c
 801fed2:	eddd 6a0c 	vldr	s13, [sp, #48]	@ 0x30
 801fed6:	ee78 aa89 	vadd.f32	s21, s17, s18
 801feda:	fe33 9a21 	vselgt.f32	s18, s6, s3
 801fede:	eeb0 0a48 	vmov.f32	s0, s16
 801fee2:	edcd 6a0a 	vstr	s13, [sp, #40]	@ 0x28
 801fee6:	edcd 4a09 	vstr	s9, [sp, #36]	@ 0x24
 801feea:	ed8d 6a08 	vstr	s12, [sp, #32]
 801feee:	edcd 5a07 	vstr	s11, [sp, #28]
 801fef2:	ed8d 5a06 	vstr	s10, [sp, #24]
 801fef6:	edcd 7a05 	vstr	s15, [sp, #20]
 801fefa:	ed8d 7a01 	vstr	s14, [sp, #4]
 801fefe:	f011 fa89 	bl	8031414 <acosf>
 801ff02:	ee20 0a09 	vmul.f32	s0, s0, s18
 801ff06:	f7ff b883 	b.w	801f010 <calculate_aabb_per_shape+0x5c0>
 801ff0a:	eeb4 9ac4 	vcmpe.f32	s18, s8
 801ff0e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ff12:	dc39      	bgt.n	801ff88 <calculate_aabb_per_shape+0x1538>
 801ff14:	eeb4 0ac4 	vcmpe.f32	s0, s8
 801ff18:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ff1c:	d434      	bmi.n	801ff88 <calculate_aabb_per_shape+0x1538>
 801ff1e:	ed9d 4a04 	vldr	s8, [sp, #16]
 801ff22:	eeb4 9ac4 	vcmpe.f32	s18, s8
 801ff26:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ff2a:	dc04      	bgt.n	801ff36 <calculate_aabb_per_shape+0x14e6>
 801ff2c:	eeb4 0ac4 	vcmpe.f32	s0, s8
 801ff30:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ff34:	d505      	bpl.n	801ff42 <calculate_aabb_per_shape+0x14f2>
 801ff36:	eeb4 dac7 	vcmpe.f32	s26, s14
 801ff3a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ff3e:	fe3d aa07 	vselgt.f32	s20, s26, s14
 801ff42:	ed9d 4a03 	vldr	s8, [sp, #12]
 801ff46:	eeb4 9ac4 	vcmpe.f32	s18, s8
 801ff4a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ff4e:	dc04      	bgt.n	801ff5a <calculate_aabb_per_shape+0x150a>
 801ff50:	eeb4 0ac4 	vcmpe.f32	s0, s8
 801ff54:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ff58:	d508      	bpl.n	801ff6c <calculate_aabb_per_shape+0x151c>
 801ff5a:	eeb4 6ae7 	vcmpe.f32	s12, s15
 801ff5e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ff62:	bf54      	ite	pl
 801ff64:	eeb0 ba67 	vmovpl.f32	s22, s15
 801ff68:	eeb0 ba46 	vmovmi.f32	s22, s12
 801ff6c:	eeb4 9ac8 	vcmpe.f32	s18, s16
 801ff70:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ff74:	f73f a941 	bgt.w	801f1fa <calculate_aabb_per_shape+0x7aa>
 801ff78:	eeb4 0ac8 	vcmpe.f32	s0, s16
 801ff7c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ff80:	f53f a93b 	bmi.w	801f1fa <calculate_aabb_per_shape+0x7aa>
 801ff84:	f7ff b93f 	b.w	801f206 <calculate_aabb_per_shape+0x7b6>
 801ff88:	eeb4 dac7 	vcmpe.f32	s26, s14
 801ff8c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ff90:	bf54      	ite	pl
 801ff92:	eef0 ba47 	vmovpl.f32	s23, s14
 801ff96:	eef0 ba4d 	vmovmi.f32	s23, s26
 801ff9a:	e7c0      	b.n	801ff1e <calculate_aabb_per_shape+0x14ce>
 801ff9c:	db02      	blt.n	801ffa4 <calculate_aabb_per_shape+0x1554>
 801ff9e:	429a      	cmp	r2, r3
 801ffa0:	f43e af1a 	beq.w	801edd8 <calculate_aabb_per_shape+0x388>
 801ffa4:	ee38 4ae1 	vsub.f32	s8, s17, s3
 801ffa8:	ee72 aa29 	vadd.f32	s21, s4, s19
 801ffac:	f7fe bf14 	b.w	801edd8 <calculate_aabb_per_shape+0x388>
 801ffb0:	ee23 0a01 	vmul.f32	s0, s6, s2
 801ffb4:	eeb5 0a40 	vcmp.f32	s0, #0.0
 801ffb8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ffbc:	eef1 8ac0 	vsqrt.f32	s17, s0
 801ffc0:	f100 83c5 	bmi.w	802074e <calculate_aabb_per_shape+0x1cfe>
 801ffc4:	ee28 8a28 	vmul.f32	s16, s16, s17
 801ffc8:	ed9d 4a03 	vldr	s8, [sp, #12]
 801ffcc:	ee29 9a28 	vmul.f32	s18, s18, s17
 801ffd0:	eec4 ba08 	vdiv.f32	s23, s8, s16
 801ffd4:	ed9d 4a02 	vldr	s8, [sp, #8]
 801ffd8:	eec4 2a09 	vdiv.f32	s5, s8, s18
 801ffdc:	ed9d 4a04 	vldr	s8, [sp, #16]
 801ffe0:	eec1 3a88 	vdiv.f32	s7, s3, s16
 801ffe4:	ee84 ba09 	vdiv.f32	s22, s8, s18
 801ffe8:	eeb6 3a00 	vmov.f32	s6, #96	@ 0x3f000000  0.5
 801ffec:	ee73 8aab 	vadd.f32	s17, s7, s23
 801fff0:	ee72 9a8b 	vadd.f32	s19, s5, s22
 801fff4:	ee68 8a83 	vmul.f32	s17, s17, s6
 801fff8:	ee69 9a83 	vmul.f32	s19, s19, s6
 801fffc:	ee73 aaeb 	vsub.f32	s21, s7, s23
 8020000:	ee32 4acb 	vsub.f32	s8, s5, s22
 8020004:	eef0 1a4f 	vmov.f32	s3, s30
 8020008:	f7fe be81 	b.w	801ed0e <calculate_aabb_per_shape+0x2be>
 802000c:	b727c5ac 	.word	0xb727c5ac
 8020010:	40490fdb 	.word	0x40490fdb
 8020014:	40c90fdb 	.word	0x40c90fdb
 8020018:	eeb0 0a4a 	vmov.f32	s0, s20
 802001c:	edcd 6a0d 	vstr	s13, [sp, #52]	@ 0x34
 8020020:	edcd 4a0c 	vstr	s9, [sp, #48]	@ 0x30
 8020024:	ed8d 6a0b 	vstr	s12, [sp, #44]	@ 0x2c
 8020028:	edcd 5a0a 	vstr	s11, [sp, #40]	@ 0x28
 802002c:	ed8d 5a09 	vstr	s10, [sp, #36]	@ 0x24
 8020030:	ed8d 7a07 	vstr	s14, [sp, #28]
 8020034:	edcd 7a08 	vstr	s15, [sp, #32]
 8020038:	f011 fbbe 	bl	80317b8 <tanf>
 802003c:	ed8d 0a03 	vstr	s0, [sp, #12]
 8020040:	ee20 0a09 	vmul.f32	s0, s0, s18
 8020044:	ee80 0a08 	vdiv.f32	s0, s0, s16
 8020048:	f011 fa50 	bl	80314ec <atanf>
 802004c:	ed5f ba10 	vldr	s23, [pc, #-64]	@ 8020010 <calculate_aabb_per_shape+0x15c0>
 8020050:	eef0 aa40 	vmov.f32	s21, s0
 8020054:	ee7b bac0 	vsub.f32	s23, s23, s0
 8020058:	f011 fb1c 	bl	8031694 <cosf>
 802005c:	ee20 aa08 	vmul.f32	s20, s0, s16
 8020060:	eeb1 0a6a 	vneg.f32	s0, s21
 8020064:	f011 fb62 	bl	803172c <sinf>
 8020068:	eddd 7a01 	vldr	s15, [sp, #4]
 802006c:	ee20 ba09 	vmul.f32	s22, s0, s18
 8020070:	ee27 aa8a 	vmul.f32	s20, s15, s20
 8020074:	ee2c 3a0b 	vmul.f32	s6, s24, s22
 8020078:	ee3a aa29 	vadd.f32	s20, s20, s19
 802007c:	eeb0 0a6b 	vmov.f32	s0, s23
 8020080:	ee3a aa43 	vsub.f32	s20, s20, s6
 8020084:	f011 fb06 	bl	8031694 <cosf>
 8020088:	ed8d 0a02 	vstr	s0, [sp, #8]
 802008c:	eeb0 0a6b 	vmov.f32	s0, s23
 8020090:	f011 fb4c 	bl	803172c <sinf>
 8020094:	ed9d 7a02 	vldr	s14, [sp, #8]
 8020098:	eddd 7a01 	vldr	s15, [sp, #4]
 802009c:	ee27 4a08 	vmul.f32	s8, s14, s16
 80200a0:	ee20 2a09 	vmul.f32	s4, s0, s18
 80200a4:	ee67 ba84 	vmul.f32	s23, s15, s8
 80200a8:	ee6c 1a02 	vmul.f32	s3, s24, s4
 80200ac:	ee7b baa9 	vadd.f32	s23, s23, s19
 80200b0:	ee7b bae1 	vsub.f32	s23, s23, s3
 80200b4:	ed8d 0a06 	vstr	s0, [sp, #24]
 80200b8:	eeb0 0a6a 	vmov.f32	s0, s21
 80200bc:	ed8d 4a05 	vstr	s8, [sp, #20]
 80200c0:	ed8d 2a04 	vstr	s4, [sp, #16]
 80200c4:	f011 fae6 	bl	8031694 <cosf>
 80200c8:	eeb4 aaeb 	vcmpe.f32	s20, s23
 80200cc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80200d0:	eef0 aa40 	vmov.f32	s21, s0
 80200d4:	ed9d 2a04 	vldr	s4, [sp, #16]
 80200d8:	ed9d 4a05 	vldr	s8, [sp, #20]
 80200dc:	ed9d 7a07 	vldr	s14, [sp, #28]
 80200e0:	eddd 7a08 	vldr	s15, [sp, #32]
 80200e4:	ed9d 5a09 	vldr	s10, [sp, #36]	@ 0x24
 80200e8:	eddd 5a0a 	vldr	s11, [sp, #40]	@ 0x28
 80200ec:	ed9d 6a0b 	vldr	s12, [sp, #44]	@ 0x2c
 80200f0:	eddd 4a0c 	vldr	s9, [sp, #48]	@ 0x30
 80200f4:	eddd 6a0d 	vldr	s13, [sp, #52]	@ 0x34
 80200f8:	dc0f      	bgt.n	802011a <calculate_aabb_per_shape+0x16ca>
 80200fa:	eef0 1a6b 	vmov.f32	s3, s23
 80200fe:	ed9d 3a06 	vldr	s6, [sp, #24]
 8020102:	eeb0 2a4b 	vmov.f32	s4, s22
 8020106:	eef0 ba4a 	vmov.f32	s23, s20
 802010a:	ee20 4a08 	vmul.f32	s8, s0, s16
 802010e:	eddd aa02 	vldr	s21, [sp, #8]
 8020112:	eeb0 aa61 	vmov.f32	s20, s3
 8020116:	ee23 ba09 	vmul.f32	s22, s6, s18
 802011a:	ee2c 3a04 	vmul.f32	s6, s24, s8
 802011e:	ed9d 4a01 	vldr	s8, [sp, #4]
 8020122:	ee33 3a28 	vadd.f32	s6, s6, s17
 8020126:	ee24 2a02 	vmul.f32	s4, s8, s4
 802012a:	ee33 3a02 	vadd.f32	s6, s6, s4
 802012e:	ee3b 4ae9 	vsub.f32	s8, s23, s19
 8020132:	ee33 3a68 	vsub.f32	s6, s6, s17
 8020136:	ee24 2a04 	vmul.f32	s4, s8, s8
 802013a:	eeb5 3ac0 	vcmpe.f32	s6, #0.0
 802013e:	ee23 3a03 	vmul.f32	s6, s6, s6
 8020142:	ee32 0a03 	vadd.f32	s0, s4, s6
 8020146:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802014a:	eef7 3a00 	vmov.f32	s7, #112	@ 0x3f800000  1.0
 802014e:	eeff 1a00 	vmov.f32	s3, #240	@ 0xbf800000 -1.0
 8020152:	eeb5 0a40 	vcmp.f32	s0, #0.0
 8020156:	fe73 3aa1 	vselgt.f32	s7, s7, s3
 802015a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802015e:	edcd 3a02 	vstr	s7, [sp, #8]
 8020162:	eeb1 2ac0 	vsqrt.f32	s4, s0
 8020166:	f100 81a3 	bmi.w	80204b0 <calculate_aabb_per_shape+0x1a60>
 802016a:	ee84 0a02 	vdiv.f32	s0, s8, s4
 802016e:	edcd 6a0a 	vstr	s13, [sp, #40]	@ 0x28
 8020172:	edcd 4a09 	vstr	s9, [sp, #36]	@ 0x24
 8020176:	ed8d 6a08 	vstr	s12, [sp, #32]
 802017a:	edcd 5a07 	vstr	s11, [sp, #28]
 802017e:	ed8d 5a06 	vstr	s10, [sp, #24]
 8020182:	ed8d 7a04 	vstr	s14, [sp, #16]
 8020186:	edcd 7a05 	vstr	s15, [sp, #20]
 802018a:	f011 f943 	bl	8031414 <acosf>
 802018e:	eddd 7a02 	vldr	s15, [sp, #8]
 8020192:	ed5f 0a60 	vldr	s1, [pc, #-384]	@ 8020014 <calculate_aabb_per_shape+0x15c4>
 8020196:	ee20 0a27 	vmul.f32	s0, s0, s15
 802019a:	ee30 0a20 	vadd.f32	s0, s0, s1
 802019e:	f011 f967 	bl	8031470 <fmodf>
 80201a2:	ee28 3a2a 	vmul.f32	s6, s16, s21
 80201a6:	eddd 7a01 	vldr	s15, [sp, #4]
 80201aa:	ee2c 3a03 	vmul.f32	s6, s24, s6
 80201ae:	ee27 ba8b 	vmul.f32	s22, s15, s22
 80201b2:	ee33 3a28 	vadd.f32	s6, s6, s17
 80201b6:	ee33 3a0b 	vadd.f32	s6, s6, s22
 80201ba:	ee3a 4a69 	vsub.f32	s8, s20, s19
 80201be:	ee33 3a68 	vsub.f32	s6, s6, s17
 80201c2:	ee24 2a04 	vmul.f32	s4, s8, s8
 80201c6:	eeb5 3ac0 	vcmpe.f32	s6, #0.0
 80201ca:	ee23 3a03 	vmul.f32	s6, s6, s6
 80201ce:	ed8d 0a02 	vstr	s0, [sp, #8]
 80201d2:	ee32 0a03 	vadd.f32	s0, s4, s6
 80201d6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80201da:	eeb7 ba00 	vmov.f32	s22, #112	@ 0x3f800000  1.0
 80201de:	eeff 1a00 	vmov.f32	s3, #240	@ 0xbf800000 -1.0
 80201e2:	eeb5 0a40 	vcmp.f32	s0, #0.0
 80201e6:	fe3b ba21 	vselgt.f32	s22, s22, s3
 80201ea:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80201ee:	eef1 aac0 	vsqrt.f32	s21, s0
 80201f2:	ed9d 7a04 	vldr	s14, [sp, #16]
 80201f6:	eddd 7a05 	vldr	s15, [sp, #20]
 80201fa:	ed9d 5a06 	vldr	s10, [sp, #24]
 80201fe:	eddd 5a07 	vldr	s11, [sp, #28]
 8020202:	ed9d 6a08 	vldr	s12, [sp, #32]
 8020206:	eddd 4a09 	vldr	s9, [sp, #36]	@ 0x24
 802020a:	eddd 6a0a 	vldr	s13, [sp, #40]	@ 0x28
 802020e:	f100 8130 	bmi.w	8020472 <calculate_aabb_per_shape+0x1a22>
 8020212:	ee84 0a2a 	vdiv.f32	s0, s8, s21
 8020216:	edcd 4a0c 	vstr	s9, [sp, #48]	@ 0x30
 802021a:	ed8d 6a0b 	vstr	s12, [sp, #44]	@ 0x2c
 802021e:	edcd 5a0a 	vstr	s11, [sp, #40]	@ 0x28
 8020222:	ed8d 5a09 	vstr	s10, [sp, #36]	@ 0x24
 8020226:	edcd 6a0d 	vstr	s13, [sp, #52]	@ 0x34
 802022a:	ed8d 7a07 	vstr	s14, [sp, #28]
 802022e:	edcd 7a08 	vstr	s15, [sp, #32]
 8020232:	f011 f8ef 	bl	8031414 <acosf>
 8020236:	ed5f 0a89 	vldr	s1, [pc, #-548]	@ 8020014 <calculate_aabb_per_shape+0x15c4>
 802023a:	ee20 0a0b 	vmul.f32	s0, s0, s22
 802023e:	ee30 0a20 	vadd.f32	s0, s0, s1
 8020242:	f011 f915 	bl	8031470 <fmodf>
 8020246:	eddd 7a03 	vldr	s15, [sp, #12]
 802024a:	ed8d 0a04 	vstr	s0, [sp, #16]
 802024e:	ee27 0a88 	vmul.f32	s0, s15, s16
 8020252:	ee89 0a00 	vdiv.f32	s0, s18, s0
 8020256:	f011 f949 	bl	80314ec <atanf>
 802025a:	ed1f ba93 	vldr	s22, [pc, #-588]	@ 8020010 <calculate_aabb_per_shape+0x15c0>
 802025e:	eef0 aa40 	vmov.f32	s21, s0
 8020262:	ee30 ba0b 	vadd.f32	s22, s0, s22
 8020266:	f011 fa15 	bl	8031694 <cosf>
 802026a:	ee60 7a08 	vmul.f32	s15, s0, s16
 802026e:	eeb0 0a6a 	vmov.f32	s0, s21
 8020272:	edcd 7a05 	vstr	s15, [sp, #20]
 8020276:	f011 fa59 	bl	803172c <sinf>
 802027a:	eddd 7a05 	vldr	s15, [sp, #20]
 802027e:	ee20 7a09 	vmul.f32	s14, s0, s18
 8020282:	ee6c aa27 	vmul.f32	s21, s24, s15
 8020286:	eddd 6a01 	vldr	s13, [sp, #4]
 802028a:	ee7a aaa8 	vadd.f32	s21, s21, s17
 802028e:	ee26 3a87 	vmul.f32	s6, s13, s14
 8020292:	eeb0 0a4b 	vmov.f32	s0, s22
 8020296:	ee7a aa83 	vadd.f32	s21, s21, s6
 802029a:	ed8d 7a06 	vstr	s14, [sp, #24]
 802029e:	f011 f9f9 	bl	8031694 <cosf>
 80202a2:	ed8d 0a03 	vstr	s0, [sp, #12]
 80202a6:	eeb0 0a4b 	vmov.f32	s0, s22
 80202aa:	f011 fa3f 	bl	803172c <sinf>
 80202ae:	ed9d 4a03 	vldr	s8, [sp, #12]
 80202b2:	ee24 3a08 	vmul.f32	s6, s8, s16
 80202b6:	eddd 6a01 	vldr	s13, [sp, #4]
 80202ba:	ee20 2a09 	vmul.f32	s4, s0, s18
 80202be:	ee2c ba03 	vmul.f32	s22, s24, s6
 80202c2:	ee66 1a82 	vmul.f32	s3, s13, s4
 80202c6:	ee3b ba28 	vadd.f32	s22, s22, s17
 80202ca:	ee3b ba21 	vadd.f32	s22, s22, s3
 80202ce:	eef4 aacb 	vcmpe.f32	s21, s22
 80202d2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80202d6:	ed9d 7a07 	vldr	s14, [sp, #28]
 80202da:	eddd 7a08 	vldr	s15, [sp, #32]
 80202de:	ed9d 5a09 	vldr	s10, [sp, #36]	@ 0x24
 80202e2:	eddd 5a0a 	vldr	s11, [sp, #40]	@ 0x28
 80202e6:	ed9d 6a0b 	vldr	s12, [sp, #44]	@ 0x2c
 80202ea:	eddd 4a0c 	vldr	s9, [sp, #48]	@ 0x30
 80202ee:	eddd 6a0d 	vldr	s13, [sp, #52]	@ 0x34
 80202f2:	dc11      	bgt.n	8020318 <calculate_aabb_per_shape+0x18c8>
 80202f4:	ee24 4a08 	vmul.f32	s8, s8, s16
 80202f8:	eef0 1a4b 	vmov.f32	s3, s22
 80202fc:	ed9d 3a05 	vldr	s6, [sp, #20]
 8020300:	ed8d 4a05 	vstr	s8, [sp, #20]
 8020304:	ee20 4a09 	vmul.f32	s8, s0, s18
 8020308:	ed9d 2a06 	vldr	s4, [sp, #24]
 802030c:	eeb0 ba6a 	vmov.f32	s22, s21
 8020310:	ed8d 4a06 	vstr	s8, [sp, #24]
 8020314:	eef0 aa61 	vmov.f32	s21, s3
 8020318:	ed9d 4a01 	vldr	s8, [sp, #4]
 802031c:	ee24 9a03 	vmul.f32	s18, s8, s6
 8020320:	ee2c 2a02 	vmul.f32	s4, s24, s4
 8020324:	ee39 9a29 	vadd.f32	s18, s18, s19
 8020328:	ee39 9a42 	vsub.f32	s18, s18, s4
 802032c:	ee3b 3a68 	vsub.f32	s6, s22, s17
 8020330:	ee39 9a69 	vsub.f32	s18, s18, s19
 8020334:	eeb5 3ac0 	vcmpe.f32	s6, #0.0
 8020338:	ee29 2a09 	vmul.f32	s4, s18, s18
 802033c:	ee23 3a03 	vmul.f32	s6, s6, s6
 8020340:	ee32 0a03 	vadd.f32	s0, s4, s6
 8020344:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8020348:	eeb7 8a00 	vmov.f32	s16, #112	@ 0x3f800000  1.0
 802034c:	eebf 2a00 	vmov.f32	s4, #240	@ 0xbf800000 -1.0
 8020350:	eeb5 0a40 	vcmp.f32	s0, #0.0
 8020354:	fe38 8a02 	vselgt.f32	s16, s16, s4
 8020358:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802035c:	eeb1 4ac0 	vsqrt.f32	s8, s0
 8020360:	f100 8460 	bmi.w	8020c24 <calculate_aabb_per_shape+0x21d4>
 8020364:	ee89 0a04 	vdiv.f32	s0, s18, s8
 8020368:	edcd 6a0d 	vstr	s13, [sp, #52]	@ 0x34
 802036c:	edcd 4a0c 	vstr	s9, [sp, #48]	@ 0x30
 8020370:	ed8d 6a0b 	vstr	s12, [sp, #44]	@ 0x2c
 8020374:	edcd 5a0a 	vstr	s11, [sp, #40]	@ 0x28
 8020378:	ed8d 5a09 	vstr	s10, [sp, #36]	@ 0x24
 802037c:	edcd 7a08 	vstr	s15, [sp, #32]
 8020380:	ed8d 7a07 	vstr	s14, [sp, #28]
 8020384:	f011 f846 	bl	8031414 <acosf>
 8020388:	ed5f 0ade 	vldr	s1, [pc, #-888]	@ 8020014 <calculate_aabb_per_shape+0x15c4>
 802038c:	ee20 0a08 	vmul.f32	s0, s0, s16
 8020390:	ee30 0a20 	vadd.f32	s0, s0, s1
 8020394:	f011 f86c 	bl	8031470 <fmodf>
 8020398:	eddd 7a01 	vldr	s15, [sp, #4]
 802039c:	ed9d 7a05 	vldr	s14, [sp, #20]
 80203a0:	ee27 9a87 	vmul.f32	s18, s15, s14
 80203a4:	eddd 7a06 	vldr	s15, [sp, #24]
 80203a8:	ee39 9a29 	vadd.f32	s18, s18, s19
 80203ac:	ee2c ca27 	vmul.f32	s24, s24, s15
 80203b0:	ee39 9a4c 	vsub.f32	s18, s18, s24
 80203b4:	ee3a 3ae8 	vsub.f32	s6, s21, s17
 80203b8:	ee39 9a69 	vsub.f32	s18, s18, s19
 80203bc:	eeb5 3ac0 	vcmpe.f32	s6, #0.0
 80203c0:	ee29 2a09 	vmul.f32	s4, s18, s18
 80203c4:	ee23 3a03 	vmul.f32	s6, s6, s6
 80203c8:	ed8d 0a03 	vstr	s0, [sp, #12]
 80203cc:	ee32 0a03 	vadd.f32	s0, s4, s6
 80203d0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80203d4:	eeb7 8a00 	vmov.f32	s16, #112	@ 0x3f800000  1.0
 80203d8:	eebf 2a00 	vmov.f32	s4, #240	@ 0xbf800000 -1.0
 80203dc:	eeb5 0a40 	vcmp.f32	s0, #0.0
 80203e0:	fe38 8a02 	vselgt.f32	s16, s16, s4
 80203e4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80203e8:	eeb1 cac0 	vsqrt.f32	s24, s0
 80203ec:	ed9d 7a07 	vldr	s14, [sp, #28]
 80203f0:	eddd 7a08 	vldr	s15, [sp, #32]
 80203f4:	ed9d 5a09 	vldr	s10, [sp, #36]	@ 0x24
 80203f8:	eddd 5a0a 	vldr	s11, [sp, #40]	@ 0x28
 80203fc:	ed9d 6a0b 	vldr	s12, [sp, #44]	@ 0x2c
 8020400:	eddd 4a0c 	vldr	s9, [sp, #48]	@ 0x30
 8020404:	eddd 6a0d 	vldr	s13, [sp, #52]	@ 0x34
 8020408:	f100 83ec 	bmi.w	8020be4 <calculate_aabb_per_shape+0x2194>
 802040c:	ee89 0a0c 	vdiv.f32	s0, s18, s24
 8020410:	edcd 6a0a 	vstr	s13, [sp, #40]	@ 0x28
 8020414:	edcd 4a09 	vstr	s9, [sp, #36]	@ 0x24
 8020418:	ed8d 6a08 	vstr	s12, [sp, #32]
 802041c:	edcd 5a07 	vstr	s11, [sp, #28]
 8020420:	ed8d 5a06 	vstr	s10, [sp, #24]
 8020424:	edcd 7a05 	vstr	s15, [sp, #20]
 8020428:	ed8d 7a01 	vstr	s14, [sp, #4]
 802042c:	f010 fff2 	bl	8031414 <acosf>
 8020430:	eddf 0ad8 	vldr	s1, [pc, #864]	@ 8020794 <calculate_aabb_per_shape+0x1d44>
 8020434:	ee20 0a08 	vmul.f32	s0, s0, s16
 8020438:	ee30 0a20 	vadd.f32	s0, s0, s1
 802043c:	f011 f818 	bl	8031470 <fmodf>
 8020440:	eddd 6a0a 	vldr	s13, [sp, #40]	@ 0x28
 8020444:	eeb0 8a40 	vmov.f32	s16, s0
 8020448:	eddd 4a09 	vldr	s9, [sp, #36]	@ 0x24
 802044c:	ed9d 6a08 	vldr	s12, [sp, #32]
 8020450:	eddd 5a07 	vldr	s11, [sp, #28]
 8020454:	ed9d 5a06 	vldr	s10, [sp, #24]
 8020458:	eddd 7a05 	vldr	s15, [sp, #20]
 802045c:	ed9d 7a01 	vldr	s14, [sp, #4]
 8020460:	f7fe bdec 	b.w	801f03c <calculate_aabb_per_shape+0x5ec>
 8020464:	eeb4 3ac1 	vcmpe.f32	s6, s2
 8020468:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802046c:	f6be acb4 	bge.w	801edd8 <calculate_aabb_per_shape+0x388>
 8020470:	e598      	b.n	801ffa4 <calculate_aabb_per_shape+0x1554>
 8020472:	edcd 6a0b 	vstr	s13, [sp, #44]	@ 0x2c
 8020476:	edcd 4a0a 	vstr	s9, [sp, #40]	@ 0x28
 802047a:	ed8d 6a09 	vstr	s12, [sp, #36]	@ 0x24
 802047e:	edcd 5a08 	vstr	s11, [sp, #32]
 8020482:	ed8d 5a07 	vstr	s10, [sp, #28]
 8020486:	ed8d 4a06 	vstr	s8, [sp, #24]
 802048a:	f011 f811 	bl	80314b0 <sqrtf>
 802048e:	eddd 6a0b 	vldr	s13, [sp, #44]	@ 0x2c
 8020492:	eddd 4a0a 	vldr	s9, [sp, #40]	@ 0x28
 8020496:	ed9d 6a09 	vldr	s12, [sp, #36]	@ 0x24
 802049a:	eddd 5a08 	vldr	s11, [sp, #32]
 802049e:	ed9d 5a07 	vldr	s10, [sp, #28]
 80204a2:	ed9d 4a06 	vldr	s8, [sp, #24]
 80204a6:	eddd 7a05 	vldr	s15, [sp, #20]
 80204aa:	ed9d 7a04 	vldr	s14, [sp, #16]
 80204ae:	e6b0      	b.n	8020212 <calculate_aabb_per_shape+0x17c2>
 80204b0:	edcd 6a0c 	vstr	s13, [sp, #48]	@ 0x30
 80204b4:	edcd 4a0b 	vstr	s9, [sp, #44]	@ 0x2c
 80204b8:	ed8d 6a0a 	vstr	s12, [sp, #40]	@ 0x28
 80204bc:	edcd 5a09 	vstr	s11, [sp, #36]	@ 0x24
 80204c0:	ed8d 5a08 	vstr	s10, [sp, #32]
 80204c4:	ed8d 2a07 	vstr	s4, [sp, #28]
 80204c8:	ed8d 4a06 	vstr	s8, [sp, #24]
 80204cc:	edcd 7a05 	vstr	s15, [sp, #20]
 80204d0:	ed8d 7a04 	vstr	s14, [sp, #16]
 80204d4:	f010 ffec 	bl	80314b0 <sqrtf>
 80204d8:	eddd 6a0c 	vldr	s13, [sp, #48]	@ 0x30
 80204dc:	eddd 4a0b 	vldr	s9, [sp, #44]	@ 0x2c
 80204e0:	ed9d 6a0a 	vldr	s12, [sp, #40]	@ 0x28
 80204e4:	eddd 5a09 	vldr	s11, [sp, #36]	@ 0x24
 80204e8:	ed9d 5a08 	vldr	s10, [sp, #32]
 80204ec:	ed9d 2a07 	vldr	s4, [sp, #28]
 80204f0:	ed9d 4a06 	vldr	s8, [sp, #24]
 80204f4:	eddd 7a05 	vldr	s15, [sp, #20]
 80204f8:	ed9d 7a04 	vldr	s14, [sp, #16]
 80204fc:	e635      	b.n	802016a <calculate_aabb_per_shape+0x171a>
 80204fe:	edcd 6a0c 	vstr	s13, [sp, #48]	@ 0x30
 8020502:	edcd 4a0b 	vstr	s9, [sp, #44]	@ 0x2c
 8020506:	ed8d 6a0a 	vstr	s12, [sp, #40]	@ 0x28
 802050a:	edcd 5a09 	vstr	s11, [sp, #36]	@ 0x24
 802050e:	ed8d 5a08 	vstr	s10, [sp, #32]
 8020512:	edcd 1a07 	vstr	s3, [sp, #28]
 8020516:	ed8d 4a06 	vstr	s8, [sp, #24]
 802051a:	edcd 2a05 	vstr	s5, [sp, #20]
 802051e:	edcd 3a04 	vstr	s7, [sp, #16]
 8020522:	edcd 7a03 	vstr	s15, [sp, #12]
 8020526:	ed8d 7a02 	vstr	s14, [sp, #8]
 802052a:	f010 ffc1 	bl	80314b0 <sqrtf>
 802052e:	eddd 6a0c 	vldr	s13, [sp, #48]	@ 0x30
 8020532:	eddd 4a0b 	vldr	s9, [sp, #44]	@ 0x2c
 8020536:	ed9d 6a0a 	vldr	s12, [sp, #40]	@ 0x28
 802053a:	eddd 5a09 	vldr	s11, [sp, #36]	@ 0x24
 802053e:	ed9d 5a08 	vldr	s10, [sp, #32]
 8020542:	eddd 1a07 	vldr	s3, [sp, #28]
 8020546:	ed9d 4a06 	vldr	s8, [sp, #24]
 802054a:	eddd 2a05 	vldr	s5, [sp, #20]
 802054e:	eddd 3a04 	vldr	s7, [sp, #16]
 8020552:	eddd 7a03 	vldr	s15, [sp, #12]
 8020556:	ed9d 7a02 	vldr	s14, [sp, #8]
 802055a:	f7fe bbd8 	b.w	801ed0e <calculate_aabb_per_shape+0x2be>
 802055e:	2b03      	cmp	r3, #3
 8020560:	eeb0 7a67 	vmov.f32	s14, s15
 8020564:	f000 80d7 	beq.w	8020716 <calculate_aabb_per_shape+0x1cc6>
 8020568:	2b0a      	cmp	r3, #10
 802056a:	f040 8115 	bne.w	8020798 <calculate_aabb_per_shape+0x1d48>
 802056e:	ed94 2a04 	vldr	s4, [r4, #16]
 8020572:	ed94 3a05 	vldr	s6, [r4, #20]
 8020576:	eeb4 2a68 	vcmp.f32	s4, s17
 802057a:	ed94 7a06 	vldr	s14, [r4, #24]
 802057e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8020582:	eeb4 3a49 	vcmp.f32	s6, s18
 8020586:	edd4 1a07 	vldr	s3, [r4, #28]
 802058a:	fe38 2a82 	vselgt.f32	s4, s17, s4
 802058e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8020592:	eeb4 7a68 	vcmp.f32	s14, s17
 8020596:	fe39 3a03 	vselgt.f32	s6, s18, s6
 802059a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802059e:	eef4 1a49 	vcmp.f32	s3, s18
 80205a2:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80205a6:	bf48      	it	mi
 80205a8:	eeb0 7a68 	vmovmi.f32	s14, s17
 80205ac:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80205b0:	ee17 3a90 	vmov	r3, s15
 80205b4:	bf48      	it	mi
 80205b6:	eef0 1a49 	vmovmi.f32	s3, s18
 80205ba:	eb03 73d3 	add.w	r3, r3, r3, lsr #31
 80205be:	105b      	asrs	r3, r3, #1
 80205c0:	2b00      	cmp	r3, #0
 80205c2:	ed84 2a04 	vstr	s4, [r4, #16]
 80205c6:	ed84 3a05 	vstr	s6, [r4, #20]
 80205ca:	ed84 7a06 	vstr	s14, [r4, #24]
 80205ce:	edc4 1a07 	vstr	s3, [r4, #28]
 80205d2:	f340 80ba 	ble.w	802074a <calculate_aabb_per_shape+0x1cfa>
 80205d6:	005b      	lsls	r3, r3, #1
 80205d8:	eb03 0c07 	add.w	ip, r3, r7
 80205dc:	eb01 0c8c 	add.w	ip, r1, ip, lsl #2
 80205e0:	eb01 0187 	add.w	r1, r1, r7, lsl #2
 80205e4:	f1b8 0f00 	cmp.w	r8, #0
 80205e8:	d167      	bne.n	80206ba <calculate_aabb_per_shape+0x1c6a>
 80205ea:	edd1 8a00 	vldr	s17, [r1]
 80205ee:	ed91 9a01 	vldr	s18, [r1, #4]
 80205f2:	eeb4 2a68 	vcmp.f32	s4, s17
 80205f6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80205fa:	eeb4 3a49 	vcmp.f32	s6, s18
 80205fe:	fe38 2a82 	vselgt.f32	s4, s17, s4
 8020602:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8020606:	eeb4 7a68 	vcmp.f32	s14, s17
 802060a:	fe39 3a03 	vselgt.f32	s6, s18, s6
 802060e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8020612:	eeb4 9ae1 	vcmpe.f32	s18, s3
 8020616:	bf48      	it	mi
 8020618:	eeb0 7a68 	vmovmi.f32	s14, s17
 802061c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8020620:	ed84 2a04 	vstr	s4, [r4, #16]
 8020624:	ed84 3a05 	vstr	s6, [r4, #20]
 8020628:	ed84 7a06 	vstr	s14, [r4, #24]
 802062c:	f101 0108 	add.w	r1, r1, #8
 8020630:	dc7a      	bgt.n	8020728 <calculate_aabb_per_shape+0x1cd8>
 8020632:	4561      	cmp	r1, ip
 8020634:	edc4 1a07 	vstr	s3, [r4, #28]
 8020638:	d1d7      	bne.n	80205ea <calculate_aabb_per_shape+0x1b9a>
 802063a:	441f      	add	r7, r3
 802063c:	ee78 7ace 	vsub.f32	s15, s17, s28
 8020640:	eef5 7a40 	vcmp.f32	s15, #0.0
 8020644:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8020648:	d106      	bne.n	8020658 <calculate_aabb_per_shape+0x1c08>
 802064a:	ee79 7a6c 	vsub.f32	s15, s18, s25
 802064e:	eef5 7a40 	vcmp.f32	s15, #0.0
 8020652:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8020656:	d073      	beq.n	8020740 <calculate_aabb_per_shape+0x1cf0>
 8020658:	eeb4 ea42 	vcmp.f32	s28, s4
 802065c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8020660:	eef4 ca43 	vcmp.f32	s25, s6
 8020664:	bf48      	it	mi
 8020666:	eeb0 2a4e 	vmovmi.f32	s4, s28
 802066a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802066e:	eeb4 ea47 	vcmp.f32	s28, s14
 8020672:	bf48      	it	mi
 8020674:	eeb0 3a6c 	vmovmi.f32	s6, s25
 8020678:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802067c:	eef4 ca61 	vcmp.f32	s25, s3
 8020680:	fe3e 7a07 	vselgt.f32	s14, s28, s14
 8020684:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8020688:	fe7c 1aa1 	vselgt.f32	s3, s25, s3
 802068c:	ed84 7a06 	vstr	s14, [r4, #24]
 8020690:	ed84 2a04 	vstr	s4, [r4, #16]
 8020694:	ed84 3a05 	vstr	s6, [r4, #20]
 8020698:	edc4 1a07 	vstr	s3, [r4, #28]
 802069c:	eef0 7a6c 	vmov.f32	s15, s25
 80206a0:	eeb0 7a4e 	vmov.f32	s14, s28
 80206a4:	7812      	ldrb	r2, [r2, #0]
 80206a6:	f002 036f 	and.w	r3, r2, #111	@ 0x6f
 80206aa:	f7fe ba60 	b.w	801eb6e <calculate_aabb_per_shape+0x11e>
 80206ae:	4561      	cmp	r1, ip
 80206b0:	ed84 9a07 	vstr	s18, [r4, #28]
 80206b4:	eef0 1a49 	vmov.f32	s3, s18
 80206b8:	d0bf      	beq.n	802063a <calculate_aabb_per_shape+0x1bea>
 80206ba:	edd1 7a00 	vldr	s15, [r1]
 80206be:	ee78 8aa7 	vadd.f32	s17, s17, s15
 80206c2:	edd1 7a01 	vldr	s15, [r1, #4]
 80206c6:	eef4 8a42 	vcmp.f32	s17, s4
 80206ca:	ee39 9a27 	vadd.f32	s18, s18, s15
 80206ce:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80206d2:	eeb4 9a43 	vcmp.f32	s18, s6
 80206d6:	bf48      	it	mi
 80206d8:	eeb0 2a68 	vmovmi.f32	s4, s17
 80206dc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80206e0:	eef4 8a47 	vcmp.f32	s17, s14
 80206e4:	bf48      	it	mi
 80206e6:	eeb0 3a49 	vmovmi.f32	s6, s18
 80206ea:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80206ee:	eeb4 9ae1 	vcmpe.f32	s18, s3
 80206f2:	fe38 7a87 	vselgt.f32	s14, s17, s14
 80206f6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80206fa:	ed84 2a04 	vstr	s4, [r4, #16]
 80206fe:	ed84 3a05 	vstr	s6, [r4, #20]
 8020702:	ed84 7a06 	vstr	s14, [r4, #24]
 8020706:	f101 0108 	add.w	r1, r1, #8
 802070a:	dcd0      	bgt.n	80206ae <calculate_aabb_per_shape+0x1c5e>
 802070c:	4561      	cmp	r1, ip
 802070e:	edc4 1a07 	vstr	s3, [r4, #28]
 8020712:	d1d2      	bne.n	80206ba <calculate_aabb_per_shape+0x1c6a>
 8020714:	e791      	b.n	802063a <calculate_aabb_per_shape+0x1bea>
 8020716:	f1b8 0f00 	cmp.w	r8, #0
 802071a:	d00d      	beq.n	8020738 <calculate_aabb_per_shape+0x1ce8>
 802071c:	ee37 7aa8 	vadd.f32	s14, s15, s17
 8020720:	eef0 7a49 	vmov.f32	s15, s18
 8020724:	f7fe ba22 	b.w	801eb6c <calculate_aabb_per_shape+0x11c>
 8020728:	4561      	cmp	r1, ip
 802072a:	ed84 9a07 	vstr	s18, [r4, #28]
 802072e:	eef0 1a49 	vmov.f32	s3, s18
 8020732:	f47f af5a 	bne.w	80205ea <calculate_aabb_per_shape+0x1b9a>
 8020736:	e780      	b.n	802063a <calculate_aabb_per_shape+0x1bea>
 8020738:	eef0 7a49 	vmov.f32	s15, s18
 802073c:	f7fe ba16 	b.w	801eb6c <calculate_aabb_per_shape+0x11c>
 8020740:	eef0 7a49 	vmov.f32	s15, s18
 8020744:	eeb0 7a68 	vmov.f32	s14, s17
 8020748:	e7ac      	b.n	80206a4 <calculate_aabb_per_shape+0x1c54>
 802074a:	4665      	mov	r5, ip
 802074c:	e776      	b.n	802063c <calculate_aabb_per_shape+0x1bec>
 802074e:	edcd 6a0c 	vstr	s13, [sp, #48]	@ 0x30
 8020752:	edcd 4a0b 	vstr	s9, [sp, #44]	@ 0x2c
 8020756:	ed8d 6a0a 	vstr	s12, [sp, #40]	@ 0x28
 802075a:	edcd 5a09 	vstr	s11, [sp, #36]	@ 0x24
 802075e:	ed8d 5a08 	vstr	s10, [sp, #32]
 8020762:	edcd 1a07 	vstr	s3, [sp, #28]
 8020766:	edcd 7a06 	vstr	s15, [sp, #24]
 802076a:	ed8d 7a05 	vstr	s14, [sp, #20]
 802076e:	f010 fe9f 	bl	80314b0 <sqrtf>
 8020772:	eddd 6a0c 	vldr	s13, [sp, #48]	@ 0x30
 8020776:	eddd 4a0b 	vldr	s9, [sp, #44]	@ 0x2c
 802077a:	ed9d 6a0a 	vldr	s12, [sp, #40]	@ 0x28
 802077e:	eddd 5a09 	vldr	s11, [sp, #36]	@ 0x24
 8020782:	ed9d 5a08 	vldr	s10, [sp, #32]
 8020786:	eddd 1a07 	vldr	s3, [sp, #28]
 802078a:	eddd 7a06 	vldr	s15, [sp, #24]
 802078e:	ed9d 7a05 	vldr	s14, [sp, #20]
 8020792:	e417      	b.n	801ffc4 <calculate_aabb_per_shape+0x1574>
 8020794:	40c90fdb 	.word	0x40c90fdb
 8020798:	2b0b      	cmp	r3, #11
 802079a:	f47f aa0d 	bne.w	801fbb8 <calculate_aabb_per_shape+0x1168>
 802079e:	ed94 7a04 	vldr	s14, [r4, #16]
 80207a2:	ed94 3a05 	vldr	s6, [r4, #20]
 80207a6:	eeb4 7a68 	vcmp.f32	s14, s17
 80207aa:	ed94 2a06 	vldr	s4, [r4, #24]
 80207ae:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80207b2:	eeb4 3a49 	vcmp.f32	s6, s18
 80207b6:	edd4 1a07 	vldr	s3, [r4, #28]
 80207ba:	fe38 7a87 	vselgt.f32	s14, s17, s14
 80207be:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80207c2:	eeb4 2a68 	vcmp.f32	s4, s17
 80207c6:	fe39 3a03 	vselgt.f32	s6, s18, s6
 80207ca:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80207ce:	eef4 1a49 	vcmp.f32	s3, s18
 80207d2:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80207d6:	bf48      	it	mi
 80207d8:	eeb0 2a68 	vmovmi.f32	s4, s17
 80207dc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80207e0:	ee17 3a90 	vmov	r3, s15
 80207e4:	bf48      	it	mi
 80207e6:	eef0 1a49 	vmovmi.f32	s3, s18
 80207ea:	eb03 73d3 	add.w	r3, r3, r3, lsr #31
 80207ee:	105b      	asrs	r3, r3, #1
 80207f0:	2b00      	cmp	r3, #0
 80207f2:	ed84 7a04 	vstr	s14, [r4, #16]
 80207f6:	ed84 3a05 	vstr	s6, [r4, #20]
 80207fa:	ed84 2a06 	vstr	s4, [r4, #24]
 80207fe:	edc4 1a07 	vstr	s3, [r4, #28]
 8020802:	dd77      	ble.n	80208f4 <calculate_aabb_per_shape+0x1ea4>
 8020804:	005b      	lsls	r3, r3, #1
 8020806:	eb03 0c07 	add.w	ip, r3, r7
 802080a:	eb01 0c8c 	add.w	ip, r1, ip, lsl #2
 802080e:	eb01 0187 	add.w	r1, r1, r7, lsl #2
 8020812:	f1b8 0f00 	cmp.w	r8, #0
 8020816:	d138      	bne.n	802088a <calculate_aabb_per_shape+0x1e3a>
 8020818:	edd1 8a00 	vldr	s17, [r1]
 802081c:	ed91 9a01 	vldr	s18, [r1, #4]
 8020820:	eef4 8a47 	vcmp.f32	s17, s14
 8020824:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8020828:	eeb4 9a43 	vcmp.f32	s18, s6
 802082c:	bf48      	it	mi
 802082e:	eeb0 7a68 	vmovmi.f32	s14, s17
 8020832:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8020836:	eef4 8a42 	vcmp.f32	s17, s4
 802083a:	bf48      	it	mi
 802083c:	eeb0 3a49 	vmovmi.f32	s6, s18
 8020840:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8020844:	eeb4 9ae1 	vcmpe.f32	s18, s3
 8020848:	fe38 2a82 	vselgt.f32	s4, s17, s4
 802084c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8020850:	ed84 7a04 	vstr	s14, [r4, #16]
 8020854:	ed84 3a05 	vstr	s6, [r4, #20]
 8020858:	ed84 2a06 	vstr	s4, [r4, #24]
 802085c:	f101 0108 	add.w	r1, r1, #8
 8020860:	dc41      	bgt.n	80208e6 <calculate_aabb_per_shape+0x1e96>
 8020862:	458c      	cmp	ip, r1
 8020864:	edc4 1a07 	vstr	s3, [r4, #28]
 8020868:	d1d6      	bne.n	8020818 <calculate_aabb_per_shape+0x1dc8>
 802086a:	7812      	ldrb	r2, [r2, #0]
 802086c:	441f      	add	r7, r3
 802086e:	eef0 7a49 	vmov.f32	s15, s18
 8020872:	f002 036f 	and.w	r3, r2, #111	@ 0x6f
 8020876:	eeb0 7a68 	vmov.f32	s14, s17
 802087a:	f7fe b978 	b.w	801eb6e <calculate_aabb_per_shape+0x11e>
 802087e:	4561      	cmp	r1, ip
 8020880:	ed84 9a07 	vstr	s18, [r4, #28]
 8020884:	d0f1      	beq.n	802086a <calculate_aabb_per_shape+0x1e1a>
 8020886:	eef0 1a49 	vmov.f32	s3, s18
 802088a:	edd1 7a00 	vldr	s15, [r1]
 802088e:	ee78 8aa7 	vadd.f32	s17, s17, s15
 8020892:	edd1 7a01 	vldr	s15, [r1, #4]
 8020896:	eef4 8a47 	vcmp.f32	s17, s14
 802089a:	ee39 9a27 	vadd.f32	s18, s18, s15
 802089e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80208a2:	eeb4 9a43 	vcmp.f32	s18, s6
 80208a6:	bf48      	it	mi
 80208a8:	eeb0 7a68 	vmovmi.f32	s14, s17
 80208ac:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80208b0:	eef4 8a42 	vcmp.f32	s17, s4
 80208b4:	bf48      	it	mi
 80208b6:	eeb0 3a49 	vmovmi.f32	s6, s18
 80208ba:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80208be:	eeb4 9ae1 	vcmpe.f32	s18, s3
 80208c2:	fe38 2a82 	vselgt.f32	s4, s17, s4
 80208c6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80208ca:	ed84 7a04 	vstr	s14, [r4, #16]
 80208ce:	ed84 3a05 	vstr	s6, [r4, #20]
 80208d2:	ed84 2a06 	vstr	s4, [r4, #24]
 80208d6:	f101 0108 	add.w	r1, r1, #8
 80208da:	dcd0      	bgt.n	802087e <calculate_aabb_per_shape+0x1e2e>
 80208dc:	4561      	cmp	r1, ip
 80208de:	edc4 1a07 	vstr	s3, [r4, #28]
 80208e2:	d1d2      	bne.n	802088a <calculate_aabb_per_shape+0x1e3a>
 80208e4:	e7c1      	b.n	802086a <calculate_aabb_per_shape+0x1e1a>
 80208e6:	4561      	cmp	r1, ip
 80208e8:	ed84 9a07 	vstr	s18, [r4, #28]
 80208ec:	d0bd      	beq.n	802086a <calculate_aabb_per_shape+0x1e1a>
 80208ee:	eef0 1a49 	vmov.f32	s3, s18
 80208f2:	e791      	b.n	8020818 <calculate_aabb_per_shape+0x1dc8>
 80208f4:	7812      	ldrb	r2, [r2, #0]
 80208f6:	4665      	mov	r5, ip
 80208f8:	f002 036f 	and.w	r3, r2, #111	@ 0x6f
 80208fc:	eef0 7a49 	vmov.f32	s15, s18
 8020900:	eeb0 7a68 	vmov.f32	s14, s17
 8020904:	f7fe b933 	b.w	801eb6e <calculate_aabb_per_shape+0x11e>
 8020908:	f010 fdd2 	bl	80314b0 <sqrtf>
 802090c:	eddd 6a0a 	vldr	s13, [sp, #40]	@ 0x28
 8020910:	eddd 4a09 	vldr	s9, [sp, #36]	@ 0x24
 8020914:	ed9d 6a08 	vldr	s12, [sp, #32]
 8020918:	eddd 5a07 	vldr	s11, [sp, #28]
 802091c:	ed9d 5a06 	vldr	s10, [sp, #24]
 8020920:	eddd 7a05 	vldr	s15, [sp, #20]
 8020924:	ed9d 7a01 	vldr	s14, [sp, #4]
 8020928:	f7fe bbea 	b.w	801f100 <calculate_aabb_per_shape+0x6b0>
 802092c:	edcd 6a0b 	vstr	s13, [sp, #44]	@ 0x2c
 8020930:	edcd 4a0a 	vstr	s9, [sp, #40]	@ 0x28
 8020934:	ed8d 6a09 	vstr	s12, [sp, #36]	@ 0x24
 8020938:	edcd 5a08 	vstr	s11, [sp, #32]
 802093c:	ed8d 5a07 	vstr	s10, [sp, #28]
 8020940:	ed8d 2a06 	vstr	s4, [sp, #24]
 8020944:	edcd 7a05 	vstr	s15, [sp, #20]
 8020948:	ed8d 7a01 	vstr	s14, [sp, #4]
 802094c:	f010 fdb0 	bl	80314b0 <sqrtf>
 8020950:	eddd 6a0b 	vldr	s13, [sp, #44]	@ 0x2c
 8020954:	eddd 4a0a 	vldr	s9, [sp, #40]	@ 0x28
 8020958:	ed9d 6a09 	vldr	s12, [sp, #36]	@ 0x24
 802095c:	eddd 5a08 	vldr	s11, [sp, #32]
 8020960:	ed9d 5a07 	vldr	s10, [sp, #28]
 8020964:	ed9d 2a06 	vldr	s4, [sp, #24]
 8020968:	eddd 7a05 	vldr	s15, [sp, #20]
 802096c:	ed9d 7a01 	vldr	s14, [sp, #4]
 8020970:	f7fe bb80 	b.w	801f074 <calculate_aabb_per_shape+0x624>
 8020974:	eeb0 0a42 	vmov.f32	s0, s4
 8020978:	edcd 6a0d 	vstr	s13, [sp, #52]	@ 0x34
 802097c:	edcd 4a0c 	vstr	s9, [sp, #48]	@ 0x30
 8020980:	ed8d 6a0b 	vstr	s12, [sp, #44]	@ 0x2c
 8020984:	edcd 5a0a 	vstr	s11, [sp, #40]	@ 0x28
 8020988:	ed8d 5a09 	vstr	s10, [sp, #36]	@ 0x24
 802098c:	edcd 1a08 	vstr	s3, [sp, #32]
 8020990:	ed8d 3a07 	vstr	s6, [sp, #28]
 8020994:	ed8d 7a05 	vstr	s14, [sp, #20]
 8020998:	ed8d 2a01 	vstr	s4, [sp, #4]
 802099c:	edcd 7a06 	vstr	s15, [sp, #24]
 80209a0:	ed8d 4a03 	vstr	s8, [sp, #12]
 80209a4:	f010 fd84 	bl	80314b0 <sqrtf>
 80209a8:	ed9d 4a03 	vldr	s8, [sp, #12]
 80209ac:	ee8f 8a04 	vdiv.f32	s16, s30, s8
 80209b0:	eeb0 0a48 	vmov.f32	s0, s16
 80209b4:	f010 fd2e 	bl	8031414 <acosf>
 80209b8:	eef0 7a4c 	vmov.f32	s15, s24
 80209bc:	ee4a 7a80 	vmla.f32	s15, s21, s0
 80209c0:	eef0 0a4c 	vmov.f32	s1, s24
 80209c4:	eeb0 0a67 	vmov.f32	s0, s15
 80209c8:	f010 fd52 	bl	8031470 <fmodf>
 80209cc:	eeb5 9ac0 	vcmpe.f32	s18, #0.0
 80209d0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80209d4:	ed8d 0a03 	vstr	s0, [sp, #12]
 80209d8:	ee78 aa89 	vadd.f32	s21, s17, s18
 80209dc:	ed9d 2a01 	vldr	s4, [sp, #4]
 80209e0:	ed9d 7a05 	vldr	s14, [sp, #20]
 80209e4:	eddd 7a06 	vldr	s15, [sp, #24]
 80209e8:	ed9d 3a07 	vldr	s6, [sp, #28]
 80209ec:	eddd 1a08 	vldr	s3, [sp, #32]
 80209f0:	ed9d 5a09 	vldr	s10, [sp, #36]	@ 0x24
 80209f4:	eddd 5a0a 	vldr	s11, [sp, #40]	@ 0x28
 80209f8:	ed9d 6a0b 	vldr	s12, [sp, #44]	@ 0x2c
 80209fc:	eddd 4a0c 	vldr	s9, [sp, #48]	@ 0x30
 8020a00:	eddd 6a0d 	vldr	s13, [sp, #52]	@ 0x34
 8020a04:	dd49      	ble.n	8020a9a <calculate_aabb_per_shape+0x204a>
 8020a06:	eeb0 9a43 	vmov.f32	s18, s6
 8020a0a:	eeb0 0a42 	vmov.f32	s0, s4
 8020a0e:	edcd 6a0a 	vstr	s13, [sp, #40]	@ 0x28
 8020a12:	edcd 4a09 	vstr	s9, [sp, #36]	@ 0x24
 8020a16:	ed8d 6a08 	vstr	s12, [sp, #32]
 8020a1a:	edcd 5a07 	vstr	s11, [sp, #28]
 8020a1e:	ed8d 5a06 	vstr	s10, [sp, #24]
 8020a22:	edcd 7a05 	vstr	s15, [sp, #20]
 8020a26:	ed8d 7a01 	vstr	s14, [sp, #4]
 8020a2a:	f010 fd41 	bl	80314b0 <sqrtf>
 8020a2e:	ed9d 7a01 	vldr	s14, [sp, #4]
 8020a32:	eddd 7a05 	vldr	s15, [sp, #20]
 8020a36:	ed9d 5a06 	vldr	s10, [sp, #24]
 8020a3a:	eddd 5a07 	vldr	s11, [sp, #28]
 8020a3e:	ed9d 6a08 	vldr	s12, [sp, #32]
 8020a42:	eddd 4a09 	vldr	s9, [sp, #36]	@ 0x24
 8020a46:	eddd 6a0a 	vldr	s13, [sp, #40]	@ 0x28
 8020a4a:	f7ff ba48 	b.w	801fede <calculate_aabb_per_shape+0x148e>
 8020a4e:	eeb0 0a4a 	vmov.f32	s0, s20
 8020a52:	f010 fd2d 	bl	80314b0 <sqrtf>
 8020a56:	ee8b 0a2a 	vdiv.f32	s0, s22, s21
 8020a5a:	f010 fcdb 	bl	8031414 <acosf>
 8020a5e:	ed5f 0ab3 	vldr	s1, [pc, #-716]	@ 8020794 <calculate_aabb_per_shape+0x1d44>
 8020a62:	ee30 0ac0 	vsub.f32	s0, s1, s0
 8020a66:	f010 fd03 	bl	8031470 <fmodf>
 8020a6a:	ed8d 0a02 	vstr	s0, [sp, #8]
 8020a6e:	eeb0 0a4a 	vmov.f32	s0, s20
 8020a72:	f010 fd1d 	bl	80314b0 <sqrtf>
 8020a76:	ee39 aa88 	vadd.f32	s20, s19, s16
 8020a7a:	eddd 6a08 	vldr	s13, [sp, #32]
 8020a7e:	eddd 4a07 	vldr	s9, [sp, #28]
 8020a82:	ed9d 6a06 	vldr	s12, [sp, #24]
 8020a86:	eddd 5a05 	vldr	s11, [sp, #20]
 8020a8a:	ed9d 5a04 	vldr	s10, [sp, #16]
 8020a8e:	eddd 7a03 	vldr	s15, [sp, #12]
 8020a92:	ed9d 7a01 	vldr	s14, [sp, #4]
 8020a96:	f7ff b9a1 	b.w	801fddc <calculate_aabb_per_shape+0x138c>
 8020a9a:	eeb5 2a40 	vcmp.f32	s4, #0.0
 8020a9e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8020aa2:	eeb0 9a61 	vmov.f32	s18, s3
 8020aa6:	d4b0      	bmi.n	8020a0a <calculate_aabb_per_shape+0x1fba>
 8020aa8:	f7ff ba19 	b.w	801fede <calculate_aabb_per_shape+0x148e>
 8020aac:	eeb0 0a42 	vmov.f32	s0, s4
 8020ab0:	edcd 6a0d 	vstr	s13, [sp, #52]	@ 0x34
 8020ab4:	edcd 4a0c 	vstr	s9, [sp, #48]	@ 0x30
 8020ab8:	ed8d 6a0b 	vstr	s12, [sp, #44]	@ 0x2c
 8020abc:	edcd 5a0a 	vstr	s11, [sp, #40]	@ 0x28
 8020ac0:	ed8d 5a09 	vstr	s10, [sp, #36]	@ 0x24
 8020ac4:	edcd 1a08 	vstr	s3, [sp, #32]
 8020ac8:	ed8d 3a07 	vstr	s6, [sp, #28]
 8020acc:	ed8d 7a05 	vstr	s14, [sp, #20]
 8020ad0:	ed8d 2a01 	vstr	s4, [sp, #4]
 8020ad4:	edcd 7a06 	vstr	s15, [sp, #24]
 8020ad8:	ed8d 4a03 	vstr	s8, [sp, #12]
 8020adc:	f010 fce8 	bl	80314b0 <sqrtf>
 8020ae0:	ed9d 4a03 	vldr	s8, [sp, #12]
 8020ae4:	ee8f 9a04 	vdiv.f32	s18, s30, s8
 8020ae8:	eeb0 0a49 	vmov.f32	s0, s18
 8020aec:	f010 fc92 	bl	8031414 <acosf>
 8020af0:	eef0 7a4c 	vmov.f32	s15, s24
 8020af4:	ee4a 7a80 	vmla.f32	s15, s21, s0
 8020af8:	eef0 0a4c 	vmov.f32	s1, s24
 8020afc:	eeb0 0a67 	vmov.f32	s0, s15
 8020b00:	f010 fcb6 	bl	8031470 <fmodf>
 8020b04:	eeb5 8ac0 	vcmpe.f32	s16, #0.0
 8020b08:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8020b0c:	ed8d 0a03 	vstr	s0, [sp, #12]
 8020b10:	ee78 aa88 	vadd.f32	s21, s17, s16
 8020b14:	ed9d 2a01 	vldr	s4, [sp, #4]
 8020b18:	ed9d 7a05 	vldr	s14, [sp, #20]
 8020b1c:	eddd 7a06 	vldr	s15, [sp, #24]
 8020b20:	ed9d 3a07 	vldr	s6, [sp, #28]
 8020b24:	eddd 1a08 	vldr	s3, [sp, #32]
 8020b28:	ed9d 5a09 	vldr	s10, [sp, #36]	@ 0x24
 8020b2c:	eddd 5a0a 	vldr	s11, [sp, #40]	@ 0x28
 8020b30:	ed9d 6a0b 	vldr	s12, [sp, #44]	@ 0x2c
 8020b34:	eddd 4a0c 	vldr	s9, [sp, #48]	@ 0x30
 8020b38:	eddd 6a0d 	vldr	s13, [sp, #52]	@ 0x34
 8020b3c:	dd49      	ble.n	8020bd2 <calculate_aabb_per_shape+0x2182>
 8020b3e:	eeb0 8a43 	vmov.f32	s16, s6
 8020b42:	eeb0 0a42 	vmov.f32	s0, s4
 8020b46:	edcd 6a0a 	vstr	s13, [sp, #40]	@ 0x28
 8020b4a:	edcd 4a09 	vstr	s9, [sp, #36]	@ 0x24
 8020b4e:	ed8d 6a08 	vstr	s12, [sp, #32]
 8020b52:	edcd 5a07 	vstr	s11, [sp, #28]
 8020b56:	ed8d 5a06 	vstr	s10, [sp, #24]
 8020b5a:	edcd 7a05 	vstr	s15, [sp, #20]
 8020b5e:	ed8d 7a01 	vstr	s14, [sp, #4]
 8020b62:	f010 fca5 	bl	80314b0 <sqrtf>
 8020b66:	ed9d 7a01 	vldr	s14, [sp, #4]
 8020b6a:	eddd 7a05 	vldr	s15, [sp, #20]
 8020b6e:	ed9d 5a06 	vldr	s10, [sp, #24]
 8020b72:	eddd 5a07 	vldr	s11, [sp, #28]
 8020b76:	ed9d 6a08 	vldr	s12, [sp, #32]
 8020b7a:	eddd 4a09 	vldr	s9, [sp, #36]	@ 0x24
 8020b7e:	eddd 6a0a 	vldr	s13, [sp, #40]	@ 0x28
 8020b82:	f7fe ba31 	b.w	801efe8 <calculate_aabb_per_shape+0x598>
 8020b86:	eeb0 0a4a 	vmov.f32	s0, s20
 8020b8a:	f010 fc91 	bl	80314b0 <sqrtf>
 8020b8e:	ee8b 0a2a 	vdiv.f32	s0, s22, s21
 8020b92:	f010 fc3f 	bl	8031414 <acosf>
 8020b96:	eddf 0a35 	vldr	s1, [pc, #212]	@ 8020c6c <calculate_aabb_per_shape+0x221c>
 8020b9a:	ee30 0ac0 	vsub.f32	s0, s1, s0
 8020b9e:	f010 fc67 	bl	8031470 <fmodf>
 8020ba2:	ed8d 0a02 	vstr	s0, [sp, #8]
 8020ba6:	eeb0 0a4a 	vmov.f32	s0, s20
 8020baa:	f010 fc81 	bl	80314b0 <sqrtf>
 8020bae:	ee39 aa89 	vadd.f32	s20, s19, s18
 8020bb2:	eddd 6a08 	vldr	s13, [sp, #32]
 8020bb6:	eddd 4a07 	vldr	s9, [sp, #28]
 8020bba:	ed9d 6a06 	vldr	s12, [sp, #24]
 8020bbe:	eddd 5a05 	vldr	s11, [sp, #20]
 8020bc2:	ed9d 5a04 	vldr	s10, [sp, #16]
 8020bc6:	eddd 7a03 	vldr	s15, [sp, #12]
 8020bca:	ed9d 7a01 	vldr	s14, [sp, #4]
 8020bce:	f7fe b98a 	b.w	801eee6 <calculate_aabb_per_shape+0x496>
 8020bd2:	eeb5 2a40 	vcmp.f32	s4, #0.0
 8020bd6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8020bda:	eeb0 8a61 	vmov.f32	s16, s3
 8020bde:	f57e aa03 	bpl.w	801efe8 <calculate_aabb_per_shape+0x598>
 8020be2:	e7ae      	b.n	8020b42 <calculate_aabb_per_shape+0x20f2>
 8020be4:	edcd 6a0a 	vstr	s13, [sp, #40]	@ 0x28
 8020be8:	edcd 4a09 	vstr	s9, [sp, #36]	@ 0x24
 8020bec:	ed8d 6a08 	vstr	s12, [sp, #32]
 8020bf0:	edcd 5a07 	vstr	s11, [sp, #28]
 8020bf4:	ed8d 5a06 	vstr	s10, [sp, #24]
 8020bf8:	edcd 7a05 	vstr	s15, [sp, #20]
 8020bfc:	ed8d 7a01 	vstr	s14, [sp, #4]
 8020c00:	f010 fc56 	bl	80314b0 <sqrtf>
 8020c04:	eddd 6a0a 	vldr	s13, [sp, #40]	@ 0x28
 8020c08:	eddd 4a09 	vldr	s9, [sp, #36]	@ 0x24
 8020c0c:	ed9d 6a08 	vldr	s12, [sp, #32]
 8020c10:	eddd 5a07 	vldr	s11, [sp, #28]
 8020c14:	ed9d 5a06 	vldr	s10, [sp, #24]
 8020c18:	eddd 7a05 	vldr	s15, [sp, #20]
 8020c1c:	ed9d 7a01 	vldr	s14, [sp, #4]
 8020c20:	f7ff bbf4 	b.w	802040c <calculate_aabb_per_shape+0x19bc>
 8020c24:	edcd 6a0d 	vstr	s13, [sp, #52]	@ 0x34
 8020c28:	edcd 4a0c 	vstr	s9, [sp, #48]	@ 0x30
 8020c2c:	ed8d 6a0b 	vstr	s12, [sp, #44]	@ 0x2c
 8020c30:	edcd 5a0a 	vstr	s11, [sp, #40]	@ 0x28
 8020c34:	ed8d 5a09 	vstr	s10, [sp, #36]	@ 0x24
 8020c38:	ed8d 4a08 	vstr	s8, [sp, #32]
 8020c3c:	edcd 7a07 	vstr	s15, [sp, #28]
 8020c40:	ed8d 7a03 	vstr	s14, [sp, #12]
 8020c44:	f010 fc34 	bl	80314b0 <sqrtf>
 8020c48:	eddd 6a0d 	vldr	s13, [sp, #52]	@ 0x34
 8020c4c:	eddd 4a0c 	vldr	s9, [sp, #48]	@ 0x30
 8020c50:	ed9d 6a0b 	vldr	s12, [sp, #44]	@ 0x2c
 8020c54:	eddd 5a0a 	vldr	s11, [sp, #40]	@ 0x28
 8020c58:	ed9d 5a09 	vldr	s10, [sp, #36]	@ 0x24
 8020c5c:	ed9d 4a08 	vldr	s8, [sp, #32]
 8020c60:	eddd 7a07 	vldr	s15, [sp, #28]
 8020c64:	ed9d 7a03 	vldr	s14, [sp, #12]
 8020c68:	f7ff bb7c 	b.w	8020364 <calculate_aabb_per_shape+0x1914>
 8020c6c:	40c90fdb 	.word	0x40c90fdb

08020c70 <_ZN8touchgfx8HALGPU2D17unlockFrameBufferEv>:
 8020c70:	f7ea bb86 	b.w	800b380 <_ZN8touchgfx3HAL17unlockFrameBufferEv>

08020c74 <_ZN8touchgfx8HALGPU2D10beginFrameEv>:
 8020c74:	2200      	movs	r2, #0
 8020c76:	f880 20a5 	strb.w	r2, [r0, #165]	@ 0xa5
 8020c7a:	f7ea ba85 	b.w	800b188 <_ZN8touchgfx3HAL10beginFrameEv>
 8020c7e:	bf00      	nop

08020c80 <_ZN8touchgfx8HALGPU2D15lockFrameBufferEv>:
 8020c80:	b538      	push	{r3, r4, r5, lr}
 8020c82:	f890 30a5 	ldrb.w	r3, [r0, #165]	@ 0xa5
 8020c86:	4604      	mov	r4, r0
 8020c88:	f100 057c 	add.w	r5, r0, #124	@ 0x7c
 8020c8c:	b12b      	cbz	r3, 8020c9a <_ZN8touchgfx8HALGPU2D15lockFrameBufferEv+0x1a>
 8020c8e:	2300      	movs	r3, #0
 8020c90:	4628      	mov	r0, r5
 8020c92:	f884 30a5 	strb.w	r3, [r4, #165]	@ 0xa5
 8020c96:	f7fd fa43 	bl	801e120 <nema_cl_submit>
 8020c9a:	4628      	mov	r0, r5
 8020c9c:	f7fd faba 	bl	801e214 <nema_cl_wait>
 8020ca0:	4620      	mov	r0, r4
 8020ca2:	f7eb f827 	bl	800bcf4 <_ZN8touchgfx3HAL15lockFrameBufferEv>
 8020ca6:	2300      	movs	r3, #0
 8020ca8:	f884 30a4 	strb.w	r3, [r4, #164]	@ 0xa4
 8020cac:	bd38      	pop	{r3, r4, r5, pc}
 8020cae:	bf00      	nop

08020cb0 <_ZN8touchgfx8HALGPU2D10initializeEi.part.2>:
 8020cb0:	b508      	push	{r3, lr}
 8020cb2:	4a03      	ldr	r2, [pc, #12]	@ (8020cc0 <_ZN8touchgfx8HALGPU2D10initializeEi.part.2+0x10>)
 8020cb4:	4b03      	ldr	r3, [pc, #12]	@ (8020cc4 <_ZN8touchgfx8HALGPU2D10initializeEi.part.2+0x14>)
 8020cb6:	2118      	movs	r1, #24
 8020cb8:	4803      	ldr	r0, [pc, #12]	@ (8020cc8 <_ZN8touchgfx8HALGPU2D10initializeEi.part.2+0x18>)
 8020cba:	f011 fd5d 	bl	8032778 <__assert_func>
 8020cbe:	bf00      	nop
 8020cc0:	080361ec 	.word	0x080361ec
 8020cc4:	08036098 	.word	0x08036098
 8020cc8:	080360f0 	.word	0x080360f0

08020ccc <_ZN8touchgfx8HALGPU2D8endFrameEv>:
 8020ccc:	b538      	push	{r3, r4, r5, lr}
 8020cce:	f890 30a4 	ldrb.w	r3, [r0, #164]	@ 0xa4
 8020cd2:	4604      	mov	r4, r0
 8020cd4:	b97b      	cbnz	r3, 8020cf6 <_ZN8touchgfx8HALGPU2D8endFrameEv+0x2a>
 8020cd6:	f894 30a5 	ldrb.w	r3, [r4, #165]	@ 0xa5
 8020cda:	f104 057c 	add.w	r5, r4, #124	@ 0x7c
 8020cde:	b113      	cbz	r3, 8020ce6 <_ZN8touchgfx8HALGPU2D8endFrameEv+0x1a>
 8020ce0:	4628      	mov	r0, r5
 8020ce2:	f7fd fa1d 	bl	801e120 <nema_cl_submit>
 8020ce6:	4628      	mov	r0, r5
 8020ce8:	f7fd fa94 	bl	801e214 <nema_cl_wait>
 8020cec:	4620      	mov	r0, r4
 8020cee:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8020cf2:	f7ea ba55 	b.w	800b1a0 <_ZN8touchgfx3HAL8endFrameEv>
 8020cf6:	6840      	ldr	r0, [r0, #4]
 8020cf8:	4906      	ldr	r1, [pc, #24]	@ (8020d14 <_ZN8touchgfx8HALGPU2D8endFrameEv+0x48>)
 8020cfa:	6803      	ldr	r3, [r0, #0]
 8020cfc:	689a      	ldr	r2, [r3, #8]
 8020cfe:	428a      	cmp	r2, r1
 8020d00:	d105      	bne.n	8020d0e <_ZN8touchgfx8HALGPU2D8endFrameEv+0x42>
 8020d02:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8020d04:	4798      	blx	r3
 8020d06:	2300      	movs	r3, #0
 8020d08:	f884 30a4 	strb.w	r3, [r4, #164]	@ 0xa4
 8020d0c:	e7e3      	b.n	8020cd6 <_ZN8touchgfx8HALGPU2D8endFrameEv+0xa>
 8020d0e:	4790      	blx	r2
 8020d10:	e7f9      	b.n	8020d06 <_ZN8touchgfx8HALGPU2D8endFrameEv+0x3a>
 8020d12:	bf00      	nop
 8020d14:	0800204d 	.word	0x0800204d

08020d18 <_ZN8touchgfx8HALGPU2D10initializeEv>:
 8020d18:	b570      	push	{r4, r5, r6, lr}
 8020d1a:	4606      	mov	r6, r0
 8020d1c:	b08a      	sub	sp, #40	@ 0x28
 8020d1e:	466c      	mov	r4, sp
 8020d20:	f7ea fa4b 	bl	800b1ba <_ZN8touchgfx3HAL10initializeEv>
 8020d24:	f106 057c 	add.w	r5, r6, #124	@ 0x7c
 8020d28:	4668      	mov	r0, sp
 8020d2a:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 8020d2e:	f7fc ff59 	bl	801dbe4 <nema_cl_create_sized>
 8020d32:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8020d34:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 8020d36:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8020d38:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 8020d3a:	e894 0003 	ldmia.w	r4, {r0, r1}
 8020d3e:	e885 0003 	stmia.w	r5, {r0, r1}
 8020d42:	f8d6 3088 	ldr.w	r3, [r6, #136]	@ 0x88
 8020d46:	b10b      	cbz	r3, 8020d4c <_ZN8touchgfx8HALGPU2D10initializeEv+0x34>
 8020d48:	b00a      	add	sp, #40	@ 0x28
 8020d4a:	bd70      	pop	{r4, r5, r6, pc}
 8020d4c:	f7ff ffb0 	bl	8020cb0 <_ZN8touchgfx8HALGPU2D10initializeEi.part.2>

08020d50 <_ZN8touchgfx8HALGPU2DC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt>:
 8020d50:	b5f0      	push	{r4, r5, r6, r7, lr}
 8020d52:	f04f 0c01 	mov.w	ip, #1
 8020d56:	2500      	movs	r5, #0
 8020d58:	f8bd 7014 	ldrh.w	r7, [sp, #20]
 8020d5c:	f8bd 6018 	ldrh.w	r6, [sp, #24]
 8020d60:	60c3      	str	r3, [r0, #12]
 8020d62:	42b7      	cmp	r7, r6
 8020d64:	bf2c      	ite	cs
 8020d66:	f04f 0e00 	movcs.w	lr, #0
 8020d6a:	f04f 0e01 	movcc.w	lr, #1
 8020d6e:	4b23      	ldr	r3, [pc, #140]	@ (8020dfc <_ZN8touchgfx8HALGPU2DC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0xac>)
 8020d70:	e9c0 1201 	strd	r1, r2, [r0, #4]
 8020d74:	6683      	str	r3, [r0, #104]	@ 0x68
 8020d76:	4b22      	ldr	r3, [pc, #136]	@ (8020e00 <_ZN8touchgfx8HALGPU2DC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0xb0>)
 8020d78:	6105      	str	r5, [r0, #16]
 8020d7a:	e9c0 5505 	strd	r5, r5, [r0, #20]
 8020d7e:	61c5      	str	r5, [r0, #28]
 8020d80:	6205      	str	r5, [r0, #32]
 8020d82:	8485      	strh	r5, [r0, #36]	@ 0x24
 8020d84:	f8c0 5026 	str.w	r5, [r0, #38]	@ 0x26
 8020d88:	f880 502a 	strb.w	r5, [r0, #42]	@ 0x2a
 8020d8c:	62c5      	str	r5, [r0, #44]	@ 0x2c
 8020d8e:	8605      	strh	r5, [r0, #48]	@ 0x30
 8020d90:	e9c0 550e 	strd	r5, r5, [r0, #56]	@ 0x38
 8020d94:	e9c0 5510 	strd	r5, r5, [r0, #64]	@ 0x40
 8020d98:	f880 5048 	strb.w	r5, [r0, #72]	@ 0x48
 8020d9c:	f880 504a 	strb.w	r5, [r0, #74]	@ 0x4a
 8020da0:	f880 504b 	strb.w	r5, [r0, #75]	@ 0x4b
 8020da4:	64c5      	str	r5, [r0, #76]	@ 0x4c
 8020da6:	6505      	str	r5, [r0, #80]	@ 0x50
 8020da8:	6545      	str	r5, [r0, #84]	@ 0x54
 8020daa:	f880 5058 	strb.w	r5, [r0, #88]	@ 0x58
 8020dae:	e9c0 5517 	strd	r5, r5, [r0, #92]	@ 0x5c
 8020db2:	6645      	str	r5, [r0, #100]	@ 0x64
 8020db4:	66c5      	str	r5, [r0, #108]	@ 0x6c
 8020db6:	4a13      	ldr	r2, [pc, #76]	@ (8020e04 <_ZN8touchgfx8HALGPU2DC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0xb4>)
 8020db8:	f880 c049 	strb.w	ip, [r0, #73]	@ 0x49
 8020dbc:	6018      	str	r0, [r3, #0]
 8020dbe:	4b12      	ldr	r3, [pc, #72]	@ (8020e08 <_ZN8touchgfx8HALGPU2DC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0xb8>)
 8020dc0:	8017      	strh	r7, [r2, #0]
 8020dc2:	801f      	strh	r7, [r3, #0]
 8020dc4:	4a11      	ldr	r2, [pc, #68]	@ (8020e0c <_ZN8touchgfx8HALGPU2DC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0xbc>)
 8020dc6:	4b12      	ldr	r3, [pc, #72]	@ (8020e10 <_ZN8touchgfx8HALGPU2DC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0xc0>)
 8020dc8:	8016      	strh	r6, [r2, #0]
 8020dca:	801e      	strh	r6, [r3, #0]
 8020dcc:	4911      	ldr	r1, [pc, #68]	@ (8020e14 <_ZN8touchgfx8HALGPU2DC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0xc4>)
 8020dce:	4a12      	ldr	r2, [pc, #72]	@ (8020e18 <_ZN8touchgfx8HALGPU2DC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0xc8>)
 8020dd0:	4b12      	ldr	r3, [pc, #72]	@ (8020e1c <_ZN8touchgfx8HALGPU2DC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0xcc>)
 8020dd2:	700d      	strb	r5, [r1, #0]
 8020dd4:	6002      	str	r2, [r0, #0]
 8020dd6:	6018      	str	r0, [r3, #0]
 8020dd8:	f880 5070 	strb.w	r5, [r0, #112]	@ 0x70
 8020ddc:	6745      	str	r5, [r0, #116]	@ 0x74
 8020dde:	f880 5078 	strb.w	r5, [r0, #120]	@ 0x78
 8020de2:	f880 5079 	strb.w	r5, [r0, #121]	@ 0x79
 8020de6:	f880 c07a 	strb.w	ip, [r0, #122]	@ 0x7a
 8020dea:	f880 c07b 	strb.w	ip, [r0, #123]	@ 0x7b
 8020dee:	f880 50a4 	strb.w	r5, [r0, #164]	@ 0xa4
 8020df2:	f880 50a5 	strb.w	r5, [r0, #165]	@ 0xa5
 8020df6:	f880 e034 	strb.w	lr, [r0, #52]	@ 0x34
 8020dfa:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8020dfc:	01000001 	.word	0x01000001
 8020e00:	200830a4 	.word	0x200830a4
 8020e04:	20083098 	.word	0x20083098
 8020e08:	2008309e 	.word	0x2008309e
 8020e0c:	2008309a 	.word	0x2008309a
 8020e10:	200830a0 	.word	0x200830a0
 8020e14:	2008309c 	.word	0x2008309c
 8020e18:	0803611c 	.word	0x0803611c
 8020e1c:	20083544 	.word	0x20083544

08020e20 <_ZN8touchgfx8HALGPU2D10initializeEi>:
 8020e20:	b570      	push	{r4, r5, r6, lr}
 8020e22:	460c      	mov	r4, r1
 8020e24:	b08a      	sub	sp, #40	@ 0x28
 8020e26:	4606      	mov	r6, r0
 8020e28:	f7ea f9c7 	bl	800b1ba <_ZN8touchgfx3HAL10initializeEv>
 8020e2c:	4621      	mov	r1, r4
 8020e2e:	466c      	mov	r4, sp
 8020e30:	4668      	mov	r0, sp
 8020e32:	f106 057c 	add.w	r5, r6, #124	@ 0x7c
 8020e36:	f7fc fed5 	bl	801dbe4 <nema_cl_create_sized>
 8020e3a:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8020e3c:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 8020e3e:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8020e40:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 8020e42:	e894 0003 	ldmia.w	r4, {r0, r1}
 8020e46:	e885 0003 	stmia.w	r5, {r0, r1}
 8020e4a:	f8d6 3088 	ldr.w	r3, [r6, #136]	@ 0x88
 8020e4e:	b10b      	cbz	r3, 8020e54 <_ZN8touchgfx8HALGPU2D10initializeEi+0x34>
 8020e50:	b00a      	add	sp, #40	@ 0x28
 8020e52:	bd70      	pop	{r4, r5, r6, pc}
 8020e54:	f7ff ff2c 	bl	8020cb0 <_ZN8touchgfx8HALGPU2D10initializeEi.part.2>

08020e58 <_ZN8touchgfx8HALGPU2D14bindExecBufferEv>:
 8020e58:	b510      	push	{r4, lr}
 8020e5a:	f890 30a4 	ldrb.w	r3, [r0, #164]	@ 0xa4
 8020e5e:	4604      	mov	r4, r0
 8020e60:	b94b      	cbnz	r3, 8020e76 <_ZN8touchgfx8HALGPU2D14bindExecBufferEv+0x1e>
 8020e62:	4620      	mov	r0, r4
 8020e64:	2101      	movs	r1, #1
 8020e66:	f7ea ff33 	bl	800bcd0 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 8020e6a:	f104 007c 	add.w	r0, r4, #124	@ 0x7c
 8020e6e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8020e72:	f7fc bfcb 	b.w	801de0c <nema_cl_bind_circular>
 8020e76:	6840      	ldr	r0, [r0, #4]
 8020e78:	4906      	ldr	r1, [pc, #24]	@ (8020e94 <_ZN8touchgfx8HALGPU2D14bindExecBufferEv+0x3c>)
 8020e7a:	6803      	ldr	r3, [r0, #0]
 8020e7c:	689a      	ldr	r2, [r3, #8]
 8020e7e:	428a      	cmp	r2, r1
 8020e80:	d105      	bne.n	8020e8e <_ZN8touchgfx8HALGPU2D14bindExecBufferEv+0x36>
 8020e82:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8020e84:	4798      	blx	r3
 8020e86:	2300      	movs	r3, #0
 8020e88:	f884 30a4 	strb.w	r3, [r4, #164]	@ 0xa4
 8020e8c:	e7e9      	b.n	8020e62 <_ZN8touchgfx8HALGPU2D14bindExecBufferEv+0xa>
 8020e8e:	4790      	blx	r2
 8020e90:	e7f9      	b.n	8020e86 <_ZN8touchgfx8HALGPU2D14bindExecBufferEv+0x2e>
 8020e92:	bf00      	nop
 8020e94:	0800204d 	.word	0x0800204d

08020e98 <_ZN8touchgfx8HALGPU2D16submitExecBufferEv>:
 8020e98:	4603      	mov	r3, r0
 8020e9a:	2200      	movs	r2, #0
 8020e9c:	307c      	adds	r0, #124	@ 0x7c
 8020e9e:	f883 20a5 	strb.w	r2, [r3, #165]	@ 0xa5
 8020ea2:	f7fd b93d 	b.w	801e120 <nema_cl_submit>
 8020ea6:	bf00      	nop

08020ea8 <_ZN8touchgfx8HALGPU2D13dma2dBlitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_>:
 8020ea8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020eac:	b091      	sub	sp, #68	@ 0x44
 8020eae:	4604      	mov	r4, r0
 8020eb0:	461d      	mov	r5, r3
 8020eb2:	f8bd 3080 	ldrh.w	r3, [sp, #128]	@ 0x80
 8020eb6:	e9cd 210e 	strd	r2, r1, [sp, #56]	@ 0x38
 8020eba:	930d      	str	r3, [sp, #52]	@ 0x34
 8020ebc:	f89d 2088 	ldrb.w	r2, [sp, #136]	@ 0x88
 8020ec0:	f89d 3084 	ldrb.w	r3, [sp, #132]	@ 0x84
 8020ec4:	307c      	adds	r0, #124	@ 0x7c
 8020ec6:	f8bd 6068 	ldrh.w	r6, [sp, #104]	@ 0x68
 8020eca:	f8bd 706c 	ldrh.w	r7, [sp, #108]	@ 0x6c
 8020ece:	f8bd 8070 	ldrh.w	r8, [sp, #112]	@ 0x70
 8020ed2:	f8bd 9074 	ldrh.w	r9, [sp, #116]	@ 0x74
 8020ed6:	f89d a078 	ldrb.w	sl, [sp, #120]	@ 0x78
 8020eda:	f89d b07c 	ldrb.w	fp, [sp, #124]	@ 0x7c
 8020ede:	930b      	str	r3, [sp, #44]	@ 0x2c
 8020ee0:	920c      	str	r2, [sp, #48]	@ 0x30
 8020ee2:	f7fd f997 	bl	801e214 <nema_cl_wait>
 8020ee6:	f04f 0e01 	mov.w	lr, #1
 8020eea:	2000      	movs	r0, #0
 8020eec:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 8020eee:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8020ef0:	9208      	str	r2, [sp, #32]
 8020ef2:	f8d4 c000 	ldr.w	ip, [r4]
 8020ef6:	9307      	str	r3, [sp, #28]
 8020ef8:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8020efa:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 8020efe:	e9dd 210e 	ldrd	r2, r1, [sp, #56]	@ 0x38
 8020f02:	e9cd b305 	strd	fp, r3, [sp, #20]
 8020f06:	e9cd 7801 	strd	r7, r8, [sp, #4]
 8020f0a:	9600      	str	r6, [sp, #0]
 8020f0c:	f884 e0a4 	strb.w	lr, [r4, #164]	@ 0xa4
 8020f10:	9009      	str	r0, [sp, #36]	@ 0x24
 8020f12:	462b      	mov	r3, r5
 8020f14:	4620      	mov	r0, r4
 8020f16:	f8dc 403c 	ldr.w	r4, [ip, #60]	@ 0x3c
 8020f1a:	47a0      	blx	r4
 8020f1c:	b011      	add	sp, #68	@ 0x44
 8020f1e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8020f22:	bf00      	nop

08020f24 <_ZN8touchgfx8LCDGPU2DD1Ev>:
 8020f24:	4770      	bx	lr
 8020f26:	bf00      	nop

08020f28 <_ZNK8touchgfx8LCDGPU2D8bitDepthEv>:
 8020f28:	7b03      	ldrb	r3, [r0, #12]
 8020f2a:	2b02      	cmp	r3, #2
 8020f2c:	d004      	beq.n	8020f38 <_ZNK8touchgfx8LCDGPU2D8bitDepthEv+0x10>
 8020f2e:	2b01      	cmp	r3, #1
 8020f30:	bf0c      	ite	eq
 8020f32:	2018      	moveq	r0, #24
 8020f34:	2010      	movne	r0, #16
 8020f36:	4770      	bx	lr
 8020f38:	2020      	movs	r0, #32
 8020f3a:	4770      	bx	lr

08020f3c <_ZNK8touchgfx8LCDGPU2D17framebufferFormatEv>:
 8020f3c:	7b00      	ldrb	r0, [r0, #12]
 8020f3e:	4770      	bx	lr

08020f40 <_ZN8touchgfx8LCDGPU2D4initEv>:
 8020f40:	4770      	bx	lr
 8020f42:	bf00      	nop

08020f44 <_ZN8touchgfx8LCDGPU2D55TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8020f44:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020f48:	b087      	sub	sp, #28
 8020f4a:	f89d 5064 	ldrb.w	r5, [sp, #100]	@ 0x64
 8020f4e:	9102      	str	r1, [sp, #8]
 8020f50:	ea6f 0c05 	mvn.w	ip, r5
 8020f54:	e9dd 6713 	ldrd	r6, r7, [sp, #76]	@ 0x4c
 8020f58:	9917      	ldr	r1, [sp, #92]	@ 0x5c
 8020f5a:	9203      	str	r2, [sp, #12]
 8020f5c:	e9dd 4215 	ldrd	r4, r2, [sp, #84]	@ 0x54
 8020f60:	6860      	ldr	r0, [r4, #4]
 8020f62:	fa5f fc8c 	uxtb.w	ip, ip
 8020f66:	fb00 2e01 	mla	lr, r0, r1, r2
 8020f6a:	9a18      	ldr	r2, [sp, #96]	@ 0x60
 8020f6c:	6820      	ldr	r0, [r4, #0]
 8020f6e:	e9d2 2400 	ldrd	r2, r4, [r2]
 8020f72:	3404      	adds	r4, #4
 8020f74:	eb00 004e 	add.w	r0, r0, lr, lsl #1
 8020f78:	fa1f fb85 	uxth.w	fp, r5
 8020f7c:	9405      	str	r4, [sp, #20]
 8020f7e:	9200      	str	r2, [sp, #0]
 8020f80:	e9dd 2111 	ldrd	r2, r1, [sp, #68]	@ 0x44
 8020f84:	9c02      	ldr	r4, [sp, #8]
 8020f86:	2c00      	cmp	r4, #0
 8020f88:	dc03      	bgt.n	8020f92 <_ZN8touchgfx8LCDGPU2D55TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e>
 8020f8a:	9c03      	ldr	r4, [sp, #12]
 8020f8c:	2c00      	cmp	r4, #0
 8020f8e:	f340 80c2 	ble.w	8021116 <_ZN8touchgfx8LCDGPU2D55TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 8020f92:	9c18      	ldr	r4, [sp, #96]	@ 0x60
 8020f94:	2b00      	cmp	r3, #0
 8020f96:	e9d4 ea02 	ldrd	lr, sl, [r4, #8]
 8020f9a:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8020f9e:	f501 4100 	add.w	r1, r1, #32768	@ 0x8000
 8020fa2:	fa0f f48e 	sxth.w	r4, lr
 8020fa6:	fa0f f88a 	sxth.w	r8, sl
 8020faa:	f340 80b7 	ble.w	802111c <_ZN8touchgfx8LCDGPU2D55TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d8>
 8020fae:	1415      	asrs	r5, r2, #16
 8020fb0:	d406      	bmi.n	8020fc0 <_ZN8touchgfx8LCDGPU2D55TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8020fb2:	42a5      	cmp	r5, r4
 8020fb4:	da04      	bge.n	8020fc0 <_ZN8touchgfx8LCDGPU2D55TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8020fb6:	ea5f 4921 	movs.w	r9, r1, asr #16
 8020fba:	d401      	bmi.n	8020fc0 <_ZN8touchgfx8LCDGPU2D55TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8020fbc:	45c1      	cmp	r9, r8
 8020fbe:	db3e      	blt.n	802103e <_ZN8touchgfx8LCDGPU2D55TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfa>
 8020fc0:	3b01      	subs	r3, #1
 8020fc2:	4432      	add	r2, r6
 8020fc4:	4439      	add	r1, r7
 8020fc6:	f100 0002 	add.w	r0, r0, #2
 8020fca:	d1f0      	bne.n	8020fae <_ZN8touchgfx8LCDGPU2D55TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 8020fcc:	9b02      	ldr	r3, [sp, #8]
 8020fce:	2b00      	cmp	r3, #0
 8020fd0:	f340 80a1 	ble.w	8021116 <_ZN8touchgfx8LCDGPU2D55TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 8020fd4:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8020fd8:	ee30 0a04 	vadd.f32	s0, s0, s8
 8020fdc:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8020fe0:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8020fe4:	ee31 1a05 	vadd.f32	s2, s2, s10
 8020fe8:	ee20 6aa7 	vmul.f32	s12, s1, s15
 8020fec:	ee61 7a27 	vmul.f32	s15, s2, s15
 8020ff0:	ee76 6a62 	vsub.f32	s13, s12, s5
 8020ff4:	ee37 7ac3 	vsub.f32	s14, s15, s6
 8020ff8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8020ffc:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 8021000:	ee16 2a90 	vmov	r2, s13
 8021004:	3b01      	subs	r3, #1
 8021006:	9302      	str	r3, [sp, #8]
 8021008:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 802100a:	9c03      	ldr	r4, [sp, #12]
 802100c:	fb92 f6f3 	sdiv	r6, r2, r3
 8021010:	ee17 2a10 	vmov	r2, s14
 8021014:	eeb0 7a43 	vmov.f32	s14, s6
 8021018:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 802101c:	ee17 1a10 	vmov	r1, s14
 8021020:	eeb0 7a62 	vmov.f32	s14, s5
 8021024:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 8021028:	fb92 f7f3 	sdiv	r7, r2, r3
 802102c:	eeb0 3a67 	vmov.f32	s6, s15
 8021030:	ee17 2a10 	vmov	r2, s14
 8021034:	eef0 2a46 	vmov.f32	s5, s12
 8021038:	bf08      	it	eq
 802103a:	4623      	moveq	r3, r4
 802103c:	e7a2      	b.n	8020f84 <_ZN8touchgfx8LCDGPU2D55TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 802103e:	9501      	str	r5, [sp, #4]
 8021040:	1e5d      	subs	r5, r3, #1
 8021042:	fb05 2906 	mla	r9, r5, r6, r2
 8021046:	ea5f 4929 	movs.w	r9, r9, asr #16
 802104a:	9504      	str	r5, [sp, #16]
 802104c:	d570      	bpl.n	8021130 <_ZN8touchgfx8LCDGPU2D55TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ec>
 802104e:	4680      	mov	r8, r0
 8021050:	9d01      	ldr	r5, [sp, #4]
 8021052:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8021056:	4654      	mov	r4, sl
 8021058:	4673      	mov	r3, lr
 802105a:	f8dd 9060 	ldr.w	r9, [sp, #96]	@ 0x60
 802105e:	e002      	b.n	8021066 <_ZN8touchgfx8LCDGPU2D55TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x122>
 8021060:	1415      	asrs	r5, r2, #16
 8021062:	e9d9 3402 	ldrd	r3, r4, [r9, #8]
 8021066:	2d00      	cmp	r5, #0
 8021068:	4432      	add	r2, r6
 802106a:	db4b      	blt.n	8021104 <_ZN8touchgfx8LCDGPU2D55TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 802106c:	429d      	cmp	r5, r3
 802106e:	da49      	bge.n	8021104 <_ZN8touchgfx8LCDGPU2D55TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8021070:	ea5f 4e21 	movs.w	lr, r1, asr #16
 8021074:	d446      	bmi.n	8021104 <_ZN8touchgfx8LCDGPU2D55TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8021076:	45a6      	cmp	lr, r4
 8021078:	da44      	bge.n	8021104 <_ZN8touchgfx8LCDGPU2D55TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 802107a:	9c00      	ldr	r4, [sp, #0]
 802107c:	b21b      	sxth	r3, r3
 802107e:	fb0e 4303 	mla	r3, lr, r3, r4
 8021082:	5d5b      	ldrb	r3, [r3, r5]
 8021084:	9d05      	ldr	r5, [sp, #20]
 8021086:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 802108a:	441d      	add	r5, r3
 802108c:	f895 a002 	ldrb.w	sl, [r5, #2]
 8021090:	786d      	ldrb	r5, [r5, #1]
 8021092:	f8b8 4000 	ldrh.w	r4, [r8]
 8021096:	fb15 f50b 	smulbb	r5, r5, fp
 802109a:	ea4f 0ec4 	mov.w	lr, r4, lsl #3
 802109e:	fa5f fe8e 	uxtb.w	lr, lr
 80210a2:	9501      	str	r5, [sp, #4]
 80210a4:	fb1e fe0c 	smulbb	lr, lr, ip
 80210a8:	9d05      	ldr	r5, [sp, #20]
 80210aa:	fb1a fa0b 	smulbb	sl, sl, fp
 80210ae:	5ced      	ldrb	r5, [r5, r3]
 80210b0:	1223      	asrs	r3, r4, #8
 80210b2:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
 80210b6:	fb05 ee0b 	mla	lr, r5, fp, lr
 80210ba:	fb03 aa0c 	mla	sl, r3, ip, sl
 80210be:	9d01      	ldr	r5, [sp, #4]
 80210c0:	10e4      	asrs	r4, r4, #3
 80210c2:	f004 04fc 	and.w	r4, r4, #252	@ 0xfc
 80210c6:	fb04 540c 	mla	r4, r4, ip, r5
 80210ca:	fa1f fe8e 	uxth.w	lr, lr
 80210ce:	fa1f fa8a 	uxth.w	sl, sl
 80210d2:	f10e 0301 	add.w	r3, lr, #1
 80210d6:	f10a 0501 	add.w	r5, sl, #1
 80210da:	9301      	str	r3, [sp, #4]
 80210dc:	b2a4      	uxth	r4, r4
 80210de:	eb05 2a1a 	add.w	sl, r5, sl, lsr #8
 80210e2:	9d01      	ldr	r5, [sp, #4]
 80210e4:	1c63      	adds	r3, r4, #1
 80210e6:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 80210ea:	eb05 251e 	add.w	r5, r5, lr, lsr #8
 80210ee:	f40a 4378 	and.w	r3, sl, #63488	@ 0xf800
 80210f2:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 80210f6:	0964      	lsrs	r4, r4, #5
 80210f8:	432b      	orrs	r3, r5
 80210fa:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 80210fe:	4323      	orrs	r3, r4
 8021100:	f8a8 3000 	strh.w	r3, [r8]
 8021104:	f108 0802 	add.w	r8, r8, #2
 8021108:	4580      	cmp	r8, r0
 802110a:	4439      	add	r1, r7
 802110c:	d1a8      	bne.n	8021060 <_ZN8touchgfx8LCDGPU2D55TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 802110e:	9b02      	ldr	r3, [sp, #8]
 8021110:	2b00      	cmp	r3, #0
 8021112:	f73f af5f 	bgt.w	8020fd4 <_ZN8touchgfx8LCDGPU2D55TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8021116:	b007      	add	sp, #28
 8021118:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802111c:	f43f af56 	beq.w	8020fcc <_ZN8touchgfx8LCDGPU2D55TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8021120:	1e5d      	subs	r5, r3, #1
 8021122:	fb05 2906 	mla	r9, r5, r6, r2
 8021126:	ea5f 4929 	movs.w	r9, r9, asr #16
 802112a:	9504      	str	r5, [sp, #16]
 802112c:	f53f af4e 	bmi.w	8020fcc <_ZN8touchgfx8LCDGPU2D55TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8021130:	454c      	cmp	r4, r9
 8021132:	dd5b      	ble.n	80211ec <_ZN8touchgfx8LCDGPU2D55TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8021134:	9d04      	ldr	r5, [sp, #16]
 8021136:	fb05 1507 	mla	r5, r5, r7, r1
 802113a:	142d      	asrs	r5, r5, #16
 802113c:	d456      	bmi.n	80211ec <_ZN8touchgfx8LCDGPU2D55TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 802113e:	4545      	cmp	r5, r8
 8021140:	da54      	bge.n	80211ec <_ZN8touchgfx8LCDGPU2D55TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8021142:	2b00      	cmp	r3, #0
 8021144:	f77f af42 	ble.w	8020fcc <_ZN8touchgfx8LCDGPU2D55TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8021148:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 802114c:	f8dd 8014 	ldr.w	r8, [sp, #20]
 8021150:	9301      	str	r3, [sp, #4]
 8021152:	e002      	b.n	802115a <_ZN8touchgfx8LCDGPU2D55TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 8021154:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 8021156:	f9b3 4008 	ldrsh.w	r4, [r3, #8]
 802115a:	9d00      	ldr	r5, [sp, #0]
 802115c:	140b      	asrs	r3, r1, #16
 802115e:	fb04 5303 	mla	r3, r4, r3, r5
 8021162:	1414      	asrs	r4, r2, #16
 8021164:	5d1b      	ldrb	r3, [r3, r4]
 8021166:	8804      	ldrh	r4, [r0, #0]
 8021168:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 802116c:	eb08 0503 	add.w	r5, r8, r3
 8021170:	f895 a002 	ldrb.w	sl, [r5, #2]
 8021174:	f895 9001 	ldrb.w	r9, [r5, #1]
 8021178:	ea4f 0ec4 	mov.w	lr, r4, lsl #3
 802117c:	fa5f fe8e 	uxtb.w	lr, lr
 8021180:	fb1e fe0c 	smulbb	lr, lr, ip
 8021184:	fb19 f90b 	smulbb	r9, r9, fp
 8021188:	fb1a fa0b 	smulbb	sl, sl, fp
 802118c:	f818 5003 	ldrb.w	r5, [r8, r3]
 8021190:	1223      	asrs	r3, r4, #8
 8021192:	10e4      	asrs	r4, r4, #3
 8021194:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
 8021198:	f004 04fc 	and.w	r4, r4, #252	@ 0xfc
 802119c:	fb05 e50b 	mla	r5, r5, fp, lr
 80211a0:	fb03 aa0c 	mla	sl, r3, ip, sl
 80211a4:	fb04 940c 	mla	r4, r4, ip, r9
 80211a8:	b2ad      	uxth	r5, r5
 80211aa:	fa1f fa8a 	uxth.w	sl, sl
 80211ae:	b2a4      	uxth	r4, r4
 80211b0:	f10a 0301 	add.w	r3, sl, #1
 80211b4:	f105 0e01 	add.w	lr, r5, #1
 80211b8:	f104 0901 	add.w	r9, r4, #1
 80211bc:	eb03 231a 	add.w	r3, r3, sl, lsr #8
 80211c0:	eb0e 2e15 	add.w	lr, lr, r5, lsr #8
 80211c4:	eb09 2414 	add.w	r4, r9, r4, lsr #8
 80211c8:	f403 4378 	and.w	r3, r3, #63488	@ 0xf800
 80211cc:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 80211d0:	0964      	lsrs	r4, r4, #5
 80211d2:	ea43 030e 	orr.w	r3, r3, lr
 80211d6:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 80211da:	4323      	orrs	r3, r4
 80211dc:	f820 3b02 	strh.w	r3, [r0], #2
 80211e0:	9b01      	ldr	r3, [sp, #4]
 80211e2:	4439      	add	r1, r7
 80211e4:	4298      	cmp	r0, r3
 80211e6:	4432      	add	r2, r6
 80211e8:	d1b4      	bne.n	8021154 <_ZN8touchgfx8LCDGPU2D55TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x210>
 80211ea:	e6ef      	b.n	8020fcc <_ZN8touchgfx8LCDGPU2D55TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 80211ec:	2b00      	cmp	r3, #0
 80211ee:	f77f aeed 	ble.w	8020fcc <_ZN8touchgfx8LCDGPU2D55TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 80211f2:	1414      	asrs	r4, r2, #16
 80211f4:	4680      	mov	r8, r0
 80211f6:	9401      	str	r4, [sp, #4]
 80211f8:	4625      	mov	r5, r4
 80211fa:	e72a      	b.n	8021052 <_ZN8touchgfx8LCDGPU2D55TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>

080211fc <_ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80211fc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021200:	4689      	mov	r9, r1
 8021202:	eef7 5a00 	vmov.f32	s11, #112	@ 0x3f800000  1.0
 8021206:	46ca      	mov	sl, r9
 8021208:	b087      	sub	sp, #28
 802120a:	9203      	str	r2, [sp, #12]
 802120c:	e9dd 2115 	ldrd	r2, r1, [sp, #84]	@ 0x54
 8021210:	6854      	ldr	r4, [r2, #4]
 8021212:	e9dd 0c17 	ldrd	r0, ip, [sp, #92]	@ 0x5c
 8021216:	fb04 1000 	mla	r0, r4, r0, r1
 802121a:	e9dd 6713 	ldrd	r6, r7, [sp, #76]	@ 0x4c
 802121e:	6815      	ldr	r5, [r2, #0]
 8021220:	e9dc 2400 	ldrd	r2, r4, [ip]
 8021224:	eb05 0040 	add.w	r0, r5, r0, lsl #1
 8021228:	f104 0b04 	add.w	fp, r4, #4
 802122c:	9205      	str	r2, [sp, #20]
 802122e:	e9dd 2111 	ldrd	r2, r1, [sp, #68]	@ 0x44
 8021232:	f1ba 0f00 	cmp.w	sl, #0
 8021236:	dc03      	bgt.n	8021240 <_ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44>
 8021238:	9c03      	ldr	r4, [sp, #12]
 802123a:	2c00      	cmp	r4, #0
 802123c:	f340 8095 	ble.w	802136a <_ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 8021240:	e9dc e802 	ldrd	lr, r8, [ip, #8]
 8021244:	2b00      	cmp	r3, #0
 8021246:	fa0f f588 	sxth.w	r5, r8
 802124a:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 802124e:	f501 4100 	add.w	r1, r1, #32768	@ 0x8000
 8021252:	fa0f f48e 	sxth.w	r4, lr
 8021256:	9502      	str	r5, [sp, #8]
 8021258:	f340 808a 	ble.w	8021370 <_ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 802125c:	46f1      	mov	r9, lr
 802125e:	9401      	str	r4, [sp, #4]
 8021260:	1415      	asrs	r5, r2, #16
 8021262:	d408      	bmi.n	8021276 <_ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8021264:	9c01      	ldr	r4, [sp, #4]
 8021266:	42a5      	cmp	r5, r4
 8021268:	da05      	bge.n	8021276 <_ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 802126a:	ea5f 4e21 	movs.w	lr, r1, asr #16
 802126e:	d402      	bmi.n	8021276 <_ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8021270:	9c02      	ldr	r4, [sp, #8]
 8021272:	45a6      	cmp	lr, r4
 8021274:	db3b      	blt.n	80212ee <_ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xf2>
 8021276:	3b01      	subs	r3, #1
 8021278:	4432      	add	r2, r6
 802127a:	4439      	add	r1, r7
 802127c:	f100 0002 	add.w	r0, r0, #2
 8021280:	d1ee      	bne.n	8021260 <_ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8021282:	f1ba 0f00 	cmp.w	sl, #0
 8021286:	dd70      	ble.n	802136a <_ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 8021288:	ee30 0a04 	vadd.f32	s0, s0, s8
 802128c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8021290:	eec5 7a80 	vdiv.f32	s15, s11, s0
 8021294:	ee31 1a05 	vadd.f32	s2, s2, s10
 8021298:	ee20 6aa7 	vmul.f32	s12, s1, s15
 802129c:	ee61 7a27 	vmul.f32	s15, s2, s15
 80212a0:	ee76 6a62 	vsub.f32	s13, s12, s5
 80212a4:	ee37 7ac3 	vsub.f32	s14, s15, s6
 80212a8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80212ac:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 80212b0:	ee16 2a90 	vmov	r2, s13
 80212b4:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80212b6:	9c03      	ldr	r4, [sp, #12]
 80212b8:	fb92 f6f3 	sdiv	r6, r2, r3
 80212bc:	ee17 2a10 	vmov	r2, s14
 80212c0:	eeb0 7a43 	vmov.f32	s14, s6
 80212c4:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 80212c8:	ee17 1a10 	vmov	r1, s14
 80212cc:	eeb0 7a62 	vmov.f32	s14, s5
 80212d0:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 80212d4:	f1ba 0a01 	subs.w	sl, sl, #1
 80212d8:	fb92 f7f3 	sdiv	r7, r2, r3
 80212dc:	eeb0 3a67 	vmov.f32	s6, s15
 80212e0:	ee17 2a10 	vmov	r2, s14
 80212e4:	eef0 2a46 	vmov.f32	s5, s12
 80212e8:	bf08      	it	eq
 80212ea:	4623      	moveq	r3, r4
 80212ec:	e7a1      	b.n	8021232 <_ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36>
 80212ee:	9c01      	ldr	r4, [sp, #4]
 80212f0:	9501      	str	r5, [sp, #4]
 80212f2:	1e5d      	subs	r5, r3, #1
 80212f4:	46ce      	mov	lr, r9
 80212f6:	fb05 2906 	mla	r9, r5, r6, r2
 80212fa:	ea5f 4929 	movs.w	r9, r9, asr #16
 80212fe:	9504      	str	r5, [sp, #16]
 8021300:	d53e      	bpl.n	8021380 <_ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x184>
 8021302:	4604      	mov	r4, r0
 8021304:	9d01      	ldr	r5, [sp, #4]
 8021306:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 802130a:	4673      	mov	r3, lr
 802130c:	46b6      	mov	lr, r6
 802130e:	4646      	mov	r6, r8
 8021310:	e002      	b.n	8021318 <_ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8021312:	1415      	asrs	r5, r2, #16
 8021314:	e9dc 3602 	ldrd	r3, r6, [ip, #8]
 8021318:	2d00      	cmp	r5, #0
 802131a:	4472      	add	r2, lr
 802131c:	db1e      	blt.n	802135c <_ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x160>
 802131e:	429d      	cmp	r5, r3
 8021320:	da1c      	bge.n	802135c <_ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x160>
 8021322:	ea5f 4821 	movs.w	r8, r1, asr #16
 8021326:	d419      	bmi.n	802135c <_ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x160>
 8021328:	45b0      	cmp	r8, r6
 802132a:	da17      	bge.n	802135c <_ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x160>
 802132c:	9e05      	ldr	r6, [sp, #20]
 802132e:	b21b      	sxth	r3, r3
 8021330:	fb08 6303 	mla	r3, r8, r3, r6
 8021334:	5d5e      	ldrb	r6, [r3, r5]
 8021336:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 802133a:	eb0b 0306 	add.w	r3, fp, r6
 802133e:	785d      	ldrb	r5, [r3, #1]
 8021340:	789b      	ldrb	r3, [r3, #2]
 8021342:	00ed      	lsls	r5, r5, #3
 8021344:	f405 68fc 	and.w	r8, r5, #2016	@ 0x7e0
 8021348:	4d2d      	ldr	r5, [pc, #180]	@ (8021400 <_ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>)
 802134a:	f81b 6006 	ldrb.w	r6, [fp, r6]
 802134e:	ea05 2303 	and.w	r3, r5, r3, lsl #8
 8021352:	ea43 0308 	orr.w	r3, r3, r8
 8021356:	ea43 03d6 	orr.w	r3, r3, r6, lsr #3
 802135a:	8023      	strh	r3, [r4, #0]
 802135c:	3402      	adds	r4, #2
 802135e:	4284      	cmp	r4, r0
 8021360:	4439      	add	r1, r7
 8021362:	d1d6      	bne.n	8021312 <_ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8021364:	f1ba 0f00 	cmp.w	sl, #0
 8021368:	dc8e      	bgt.n	8021288 <_ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 802136a:	b007      	add	sp, #28
 802136c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8021370:	d087      	beq.n	8021282 <_ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8021372:	1e5d      	subs	r5, r3, #1
 8021374:	fb05 2906 	mla	r9, r5, r6, r2
 8021378:	ea5f 4929 	movs.w	r9, r9, asr #16
 802137c:	9504      	str	r5, [sp, #16]
 802137e:	d480      	bmi.n	8021282 <_ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8021380:	454c      	cmp	r4, r9
 8021382:	dd35      	ble.n	80213f0 <_ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f4>
 8021384:	9d04      	ldr	r5, [sp, #16]
 8021386:	fb05 1507 	mla	r5, r5, r7, r1
 802138a:	ea5f 4925 	movs.w	r9, r5, asr #16
 802138e:	d42f      	bmi.n	80213f0 <_ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f4>
 8021390:	9d02      	ldr	r5, [sp, #8]
 8021392:	45a9      	cmp	r9, r5
 8021394:	da2c      	bge.n	80213f0 <_ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f4>
 8021396:	2b00      	cmp	r3, #0
 8021398:	f77f af73 	ble.w	8021282 <_ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 802139c:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 80213a0:	9d05      	ldr	r5, [sp, #20]
 80213a2:	4699      	mov	r9, r3
 80213a4:	46a6      	mov	lr, r4
 80213a6:	e001      	b.n	80213ac <_ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b0>
 80213a8:	f9bc e008 	ldrsh.w	lr, [ip, #8]
 80213ac:	140c      	asrs	r4, r1, #16
 80213ae:	fb0e 5404 	mla	r4, lr, r4, r5
 80213b2:	ea4f 4e22 	mov.w	lr, r2, asr #16
 80213b6:	f814 e00e 	ldrb.w	lr, [r4, lr]
 80213ba:	4b11      	ldr	r3, [pc, #68]	@ (8021400 <_ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>)
 80213bc:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 80213c0:	eb0b 040e 	add.w	r4, fp, lr
 80213c4:	f894 8001 	ldrb.w	r8, [r4, #1]
 80213c8:	78a4      	ldrb	r4, [r4, #2]
 80213ca:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 80213ce:	f81b e00e 	ldrb.w	lr, [fp, lr]
 80213d2:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 80213d6:	ea03 2404 	and.w	r4, r3, r4, lsl #8
 80213da:	ea44 0408 	orr.w	r4, r4, r8
 80213de:	ea44 04de 	orr.w	r4, r4, lr, lsr #3
 80213e2:	f820 4b02 	strh.w	r4, [r0], #2
 80213e6:	4548      	cmp	r0, r9
 80213e8:	4439      	add	r1, r7
 80213ea:	4432      	add	r2, r6
 80213ec:	d1dc      	bne.n	80213a8 <_ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
 80213ee:	e748      	b.n	8021282 <_ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 80213f0:	2b00      	cmp	r3, #0
 80213f2:	f77f af46 	ble.w	8021282 <_ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 80213f6:	1415      	asrs	r5, r2, #16
 80213f8:	4604      	mov	r4, r0
 80213fa:	9501      	str	r5, [sp, #4]
 80213fc:	e783      	b.n	8021306 <_ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10a>
 80213fe:	bf00      	nop
 8021400:	fffff800 	.word	0xfffff800

08021404 <_ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8021404:	eef7 5a00 	vmov.f32	s11, #112	@ 0x3f800000  1.0
 8021408:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802140c:	b087      	sub	sp, #28
 802140e:	e9cd 1203 	strd	r1, r2, [sp, #12]
 8021412:	e9dd 2115 	ldrd	r2, r1, [sp, #84]	@ 0x54
 8021416:	e9dd 0b17 	ldrd	r0, fp, [sp, #92]	@ 0x5c
 802141a:	6854      	ldr	r4, [r2, #4]
 802141c:	f89d 5064 	ldrb.w	r5, [sp, #100]	@ 0x64
 8021420:	fb04 1100 	mla	r1, r4, r0, r1
 8021424:	e9dd 9a13 	ldrd	r9, sl, [sp, #76]	@ 0x4c
 8021428:	6810      	ldr	r0, [r2, #0]
 802142a:	e9db 2400 	ldrd	r2, r4, [fp]
 802142e:	eb00 0e41 	add.w	lr, r0, r1, lsl #1
 8021432:	1d21      	adds	r1, r4, #4
 8021434:	9505      	str	r5, [sp, #20]
 8021436:	9102      	str	r1, [sp, #8]
 8021438:	9201      	str	r2, [sp, #4]
 802143a:	e9dd 7211 	ldrd	r7, r2, [sp, #68]	@ 0x44
 802143e:	9903      	ldr	r1, [sp, #12]
 8021440:	2900      	cmp	r1, #0
 8021442:	dc03      	bgt.n	802144c <_ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8021444:	9904      	ldr	r1, [sp, #16]
 8021446:	2900      	cmp	r1, #0
 8021448:	f340 80b6 	ble.w	80215b8 <_ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
 802144c:	e9db 4602 	ldrd	r4, r6, [fp, #8]
 8021450:	2b00      	cmp	r3, #0
 8021452:	f507 4700 	add.w	r7, r7, #32768	@ 0x8000
 8021456:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 802145a:	b221      	sxth	r1, r4
 802145c:	b235      	sxth	r5, r6
 802145e:	f340 80ae 	ble.w	80215be <_ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
 8021462:	1438      	asrs	r0, r7, #16
 8021464:	d406      	bmi.n	8021474 <_ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8021466:	4288      	cmp	r0, r1
 8021468:	da04      	bge.n	8021474 <_ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 802146a:	ea5f 4c22 	movs.w	ip, r2, asr #16
 802146e:	d401      	bmi.n	8021474 <_ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8021470:	45ac      	cmp	ip, r5
 8021472:	db3c      	blt.n	80214ee <_ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xea>
 8021474:	3b01      	subs	r3, #1
 8021476:	444f      	add	r7, r9
 8021478:	4452      	add	r2, sl
 802147a:	f10e 0e02 	add.w	lr, lr, #2
 802147e:	d1f0      	bne.n	8021462 <_ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 8021480:	9b03      	ldr	r3, [sp, #12]
 8021482:	2b00      	cmp	r3, #0
 8021484:	f340 8098 	ble.w	80215b8 <_ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
 8021488:	ee30 0a04 	vadd.f32	s0, s0, s8
 802148c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8021490:	eec5 7a80 	vdiv.f32	s15, s11, s0
 8021494:	ee31 1a05 	vadd.f32	s2, s2, s10
 8021498:	ee20 6aa7 	vmul.f32	s12, s1, s15
 802149c:	ee61 7a27 	vmul.f32	s15, s2, s15
 80214a0:	ee76 6a62 	vsub.f32	s13, s12, s5
 80214a4:	ee37 7ac3 	vsub.f32	s14, s15, s6
 80214a8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80214ac:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 80214b0:	ee16 2a90 	vmov	r2, s13
 80214b4:	3b01      	subs	r3, #1
 80214b6:	9303      	str	r3, [sp, #12]
 80214b8:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80214ba:	9904      	ldr	r1, [sp, #16]
 80214bc:	fb92 f9f3 	sdiv	r9, r2, r3
 80214c0:	ee17 2a10 	vmov	r2, s14
 80214c4:	eeb0 7a43 	vmov.f32	s14, s6
 80214c8:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 80214cc:	fb92 faf3 	sdiv	sl, r2, r3
 80214d0:	ee17 2a10 	vmov	r2, s14
 80214d4:	eeb0 7a62 	vmov.f32	s14, s5
 80214d8:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 80214dc:	eeb0 3a67 	vmov.f32	s6, s15
 80214e0:	ee17 7a10 	vmov	r7, s14
 80214e4:	eef0 2a46 	vmov.f32	s5, s12
 80214e8:	bf08      	it	eq
 80214ea:	460b      	moveq	r3, r1
 80214ec:	e7a7      	b.n	802143e <_ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 80214ee:	f103 38ff 	add.w	r8, r3, #4294967295
 80214f2:	fb08 7c09 	mla	ip, r8, r9, r7
 80214f6:	ea5f 4c2c 	movs.w	ip, ip, asr #16
 80214fa:	d56a      	bpl.n	80215d2 <_ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ce>
 80214fc:	4675      	mov	r5, lr
 80214fe:	eb0e 0e43 	add.w	lr, lr, r3, lsl #1
 8021502:	e002      	b.n	802150a <_ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 8021504:	1438      	asrs	r0, r7, #16
 8021506:	e9db 4602 	ldrd	r4, r6, [fp, #8]
 802150a:	2800      	cmp	r0, #0
 802150c:	444f      	add	r7, r9
 802150e:	db4b      	blt.n	80215a8 <_ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8021510:	42a0      	cmp	r0, r4
 8021512:	da49      	bge.n	80215a8 <_ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8021514:	1413      	asrs	r3, r2, #16
 8021516:	d447      	bmi.n	80215a8 <_ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8021518:	42b3      	cmp	r3, r6
 802151a:	b224      	sxth	r4, r4
 802151c:	da44      	bge.n	80215a8 <_ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 802151e:	9901      	ldr	r1, [sp, #4]
 8021520:	fb03 1404 	mla	r4, r3, r4, r1
 8021524:	9902      	ldr	r1, [sp, #8]
 8021526:	5c23      	ldrb	r3, [r4, r0]
 8021528:	f851 1023 	ldr.w	r1, [r1, r3, lsl #2]
 802152c:	0e0b      	lsrs	r3, r1, #24
 802152e:	d03b      	beq.n	80215a8 <_ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8021530:	9805      	ldr	r0, [sp, #20]
 8021532:	f3c1 4807 	ubfx	r8, r1, #16, #8
 8021536:	fb00 f003 	mul.w	r0, r0, r3
 802153a:	1c43      	adds	r3, r0, #1
 802153c:	eb03 2320 	add.w	r3, r3, r0, asr #8
 8021540:	121b      	asrs	r3, r3, #8
 8021542:	43d8      	mvns	r0, r3
 8021544:	f3c1 2c07 	ubfx	ip, r1, #8, #8
 8021548:	b29b      	uxth	r3, r3
 802154a:	b2c9      	uxtb	r1, r1
 802154c:	882e      	ldrh	r6, [r5, #0]
 802154e:	fb1c fc03 	smulbb	ip, ip, r3
 8021552:	fb18 f803 	smulbb	r8, r8, r3
 8021556:	fb11 f303 	smulbb	r3, r1, r3
 802155a:	10f4      	asrs	r4, r6, #3
 802155c:	1231      	asrs	r1, r6, #8
 802155e:	00f6      	lsls	r6, r6, #3
 8021560:	b2c0      	uxtb	r0, r0
 8021562:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 8021566:	b2f6      	uxtb	r6, r6
 8021568:	f004 04fc 	and.w	r4, r4, #252	@ 0xfc
 802156c:	fb01 8800 	mla	r8, r1, r0, r8
 8021570:	fb04 c400 	mla	r4, r4, r0, ip
 8021574:	fb06 3100 	mla	r1, r6, r0, r3
 8021578:	fa1f fc88 	uxth.w	ip, r8
 802157c:	b289      	uxth	r1, r1
 802157e:	b2a4      	uxth	r4, r4
 8021580:	1c4e      	adds	r6, r1, #1
 8021582:	1c60      	adds	r0, r4, #1
 8021584:	f10c 0301 	add.w	r3, ip, #1
 8021588:	eb06 2611 	add.w	r6, r6, r1, lsr #8
 802158c:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 8021590:	eb00 2114 	add.w	r1, r0, r4, lsr #8
 8021594:	f403 4378 	and.w	r3, r3, #63488	@ 0xf800
 8021598:	f3c6 20c4 	ubfx	r0, r6, #11, #5
 802159c:	0949      	lsrs	r1, r1, #5
 802159e:	4303      	orrs	r3, r0
 80215a0:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 80215a4:	430b      	orrs	r3, r1
 80215a6:	802b      	strh	r3, [r5, #0]
 80215a8:	3502      	adds	r5, #2
 80215aa:	4575      	cmp	r5, lr
 80215ac:	4452      	add	r2, sl
 80215ae:	d1a9      	bne.n	8021504 <_ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x100>
 80215b0:	9b03      	ldr	r3, [sp, #12]
 80215b2:	2b00      	cmp	r3, #0
 80215b4:	f73f af68 	bgt.w	8021488 <_ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 80215b8:	b007      	add	sp, #28
 80215ba:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80215be:	f43f af5f 	beq.w	8021480 <_ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 80215c2:	f103 38ff 	add.w	r8, r3, #4294967295
 80215c6:	fb08 7c09 	mla	ip, r8, r9, r7
 80215ca:	ea5f 4c2c 	movs.w	ip, ip, asr #16
 80215ce:	f53f af57 	bmi.w	8021480 <_ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 80215d2:	4561      	cmp	r1, ip
 80215d4:	dd5c      	ble.n	8021690 <_ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 80215d6:	fb08 280a 	mla	r8, r8, sl, r2
 80215da:	ea5f 4828 	movs.w	r8, r8, asr #16
 80215de:	d457      	bmi.n	8021690 <_ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 80215e0:	45a8      	cmp	r8, r5
 80215e2:	da55      	bge.n	8021690 <_ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 80215e4:	2b00      	cmp	r3, #0
 80215e6:	f77f af4b 	ble.w	8021480 <_ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 80215ea:	eb0e 0843 	add.w	r8, lr, r3, lsl #1
 80215ee:	e001      	b.n	80215f4 <_ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 80215f0:	f9bb 1008 	ldrsh.w	r1, [fp, #8]
 80215f4:	9801      	ldr	r0, [sp, #4]
 80215f6:	1413      	asrs	r3, r2, #16
 80215f8:	fb01 0303 	mla	r3, r1, r3, r0
 80215fc:	1439      	asrs	r1, r7, #16
 80215fe:	5c5b      	ldrb	r3, [r3, r1]
 8021600:	9902      	ldr	r1, [sp, #8]
 8021602:	444f      	add	r7, r9
 8021604:	f851 3023 	ldr.w	r3, [r1, r3, lsl #2]
 8021608:	4452      	add	r2, sl
 802160a:	0e18      	lsrs	r0, r3, #24
 802160c:	d03b      	beq.n	8021686 <_ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x282>
 802160e:	9905      	ldr	r1, [sp, #20]
 8021610:	f3c3 4c07 	ubfx	ip, r3, #16, #8
 8021614:	fb01 f100 	mul.w	r1, r1, r0
 8021618:	1c48      	adds	r0, r1, #1
 802161a:	eb00 2021 	add.w	r0, r0, r1, asr #8
 802161e:	1200      	asrs	r0, r0, #8
 8021620:	43c1      	mvns	r1, r0
 8021622:	f3c3 2607 	ubfx	r6, r3, #8, #8
 8021626:	b280      	uxth	r0, r0
 8021628:	b2db      	uxtb	r3, r3
 802162a:	f8be 5000 	ldrh.w	r5, [lr]
 802162e:	fb16 f600 	smulbb	r6, r6, r0
 8021632:	fb1c fc00 	smulbb	ip, ip, r0
 8021636:	fb13 f300 	smulbb	r3, r3, r0
 802163a:	122c      	asrs	r4, r5, #8
 802163c:	10e8      	asrs	r0, r5, #3
 802163e:	00ed      	lsls	r5, r5, #3
 8021640:	b2c9      	uxtb	r1, r1
 8021642:	b2ed      	uxtb	r5, r5
 8021644:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 8021648:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 802164c:	fb00 6001 	mla	r0, r0, r1, r6
 8021650:	fb05 3301 	mla	r3, r5, r1, r3
 8021654:	fb04 c401 	mla	r4, r4, r1, ip
 8021658:	b280      	uxth	r0, r0
 802165a:	b2a4      	uxth	r4, r4
 802165c:	b29b      	uxth	r3, r3
 802165e:	1c65      	adds	r5, r4, #1
 8021660:	1c5e      	adds	r6, r3, #1
 8021662:	1c41      	adds	r1, r0, #1
 8021664:	eb05 2414 	add.w	r4, r5, r4, lsr #8
 8021668:	eb06 2313 	add.w	r3, r6, r3, lsr #8
 802166c:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8021670:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
 8021674:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8021678:	0949      	lsrs	r1, r1, #5
 802167a:	431c      	orrs	r4, r3
 802167c:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8021680:	430c      	orrs	r4, r1
 8021682:	f8ae 4000 	strh.w	r4, [lr]
 8021686:	f10e 0e02 	add.w	lr, lr, #2
 802168a:	45c6      	cmp	lr, r8
 802168c:	d1b0      	bne.n	80215f0 <_ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ec>
 802168e:	e6f7      	b.n	8021480 <_ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8021690:	2b00      	cmp	r3, #0
 8021692:	f77f aef5 	ble.w	8021480 <_ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8021696:	4675      	mov	r5, lr
 8021698:	1438      	asrs	r0, r7, #16
 802169a:	e730      	b.n	80214fe <_ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfa>

0802169c <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 802169c:	eef7 5a00 	vmov.f32	s11, #112	@ 0x3f800000  1.0
 80216a0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80216a4:	b085      	sub	sp, #20
 80216a6:	e9cd 1202 	strd	r1, r2, [sp, #8]
 80216aa:	e9dd 2113 	ldrd	r2, r1, [sp, #76]	@ 0x4c
 80216ae:	e9dd 0b15 	ldrd	r0, fp, [sp, #84]	@ 0x54
 80216b2:	6854      	ldr	r4, [r2, #4]
 80216b4:	e9dd 9a11 	ldrd	r9, sl, [sp, #68]	@ 0x44
 80216b8:	fb04 1000 	mla	r0, r4, r0, r1
 80216bc:	6814      	ldr	r4, [r2, #0]
 80216be:	e9db 2500 	ldrd	r2, r5, [fp]
 80216c2:	eb04 0e40 	add.w	lr, r4, r0, lsl #1
 80216c6:	1d28      	adds	r0, r5, #4
 80216c8:	9001      	str	r0, [sp, #4]
 80216ca:	9200      	str	r2, [sp, #0]
 80216cc:	e9dd 120f 	ldrd	r1, r2, [sp, #60]	@ 0x3c
 80216d0:	9802      	ldr	r0, [sp, #8]
 80216d2:	2800      	cmp	r0, #0
 80216d4:	dc03      	bgt.n	80216de <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 80216d6:	9803      	ldr	r0, [sp, #12]
 80216d8:	2800      	cmp	r0, #0
 80216da:	f340 80b8 	ble.w	802184e <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b2>
 80216de:	e9db 5602 	ldrd	r5, r6, [fp, #8]
 80216e2:	2b00      	cmp	r3, #0
 80216e4:	f501 4100 	add.w	r1, r1, #32768	@ 0x8000
 80216e8:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 80216ec:	b228      	sxth	r0, r5
 80216ee:	b237      	sxth	r7, r6
 80216f0:	f340 80b0 	ble.w	8021854 <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 80216f4:	140c      	asrs	r4, r1, #16
 80216f6:	d406      	bmi.n	8021706 <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 80216f8:	4284      	cmp	r4, r0
 80216fa:	da04      	bge.n	8021706 <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 80216fc:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8021700:	d401      	bmi.n	8021706 <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 8021702:	45bc      	cmp	ip, r7
 8021704:	db3c      	blt.n	8021780 <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xe4>
 8021706:	3b01      	subs	r3, #1
 8021708:	4449      	add	r1, r9
 802170a:	4452      	add	r2, sl
 802170c:	f10e 0e02 	add.w	lr, lr, #2
 8021710:	d1f0      	bne.n	80216f4 <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8021712:	9b02      	ldr	r3, [sp, #8]
 8021714:	2b00      	cmp	r3, #0
 8021716:	f340 809a 	ble.w	802184e <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b2>
 802171a:	ee30 0a04 	vadd.f32	s0, s0, s8
 802171e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8021722:	eec5 7a80 	vdiv.f32	s15, s11, s0
 8021726:	ee31 1a05 	vadd.f32	s2, s2, s10
 802172a:	ee20 6aa7 	vmul.f32	s12, s1, s15
 802172e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8021732:	ee76 6a62 	vsub.f32	s13, s12, s5
 8021736:	ee37 7ac3 	vsub.f32	s14, s15, s6
 802173a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802173e:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 8021742:	ee16 2a90 	vmov	r2, s13
 8021746:	3b01      	subs	r3, #1
 8021748:	9302      	str	r3, [sp, #8]
 802174a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 802174c:	9803      	ldr	r0, [sp, #12]
 802174e:	fb92 f9f3 	sdiv	r9, r2, r3
 8021752:	ee17 2a10 	vmov	r2, s14
 8021756:	eeb0 7a43 	vmov.f32	s14, s6
 802175a:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 802175e:	fb92 faf3 	sdiv	sl, r2, r3
 8021762:	ee17 2a10 	vmov	r2, s14
 8021766:	eeb0 7a62 	vmov.f32	s14, s5
 802176a:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 802176e:	eeb0 3a67 	vmov.f32	s6, s15
 8021772:	ee17 1a10 	vmov	r1, s14
 8021776:	eef0 2a46 	vmov.f32	s5, s12
 802177a:	bf08      	it	eq
 802177c:	4603      	moveq	r3, r0
 802177e:	e7a7      	b.n	80216d0 <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 8021780:	f103 38ff 	add.w	r8, r3, #4294967295
 8021784:	fb08 1c09 	mla	ip, r8, r9, r1
 8021788:	ea5f 4c2c 	movs.w	ip, ip, asr #16
 802178c:	d56c      	bpl.n	8021868 <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1cc>
 802178e:	4677      	mov	r7, lr
 8021790:	eb0e 0e43 	add.w	lr, lr, r3, lsl #1
 8021794:	e002      	b.n	802179c <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x100>
 8021796:	140c      	asrs	r4, r1, #16
 8021798:	e9db 5602 	ldrd	r5, r6, [fp, #8]
 802179c:	2c00      	cmp	r4, #0
 802179e:	db4d      	blt.n	802183c <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a0>
 80217a0:	42ac      	cmp	r4, r5
 80217a2:	da4b      	bge.n	802183c <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a0>
 80217a4:	1413      	asrs	r3, r2, #16
 80217a6:	d449      	bmi.n	802183c <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a0>
 80217a8:	42b3      	cmp	r3, r6
 80217aa:	b22d      	sxth	r5, r5
 80217ac:	da46      	bge.n	802183c <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a0>
 80217ae:	9800      	ldr	r0, [sp, #0]
 80217b0:	fb03 0505 	mla	r5, r3, r5, r0
 80217b4:	9801      	ldr	r0, [sp, #4]
 80217b6:	5d2b      	ldrb	r3, [r5, r4]
 80217b8:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 80217bc:	0e18      	lsrs	r0, r3, #24
 80217be:	28ff      	cmp	r0, #255	@ 0xff
 80217c0:	f000 80c0 	beq.w	8021944 <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 80217c4:	b2c4      	uxtb	r4, r0
 80217c6:	f3c3 4c07 	ubfx	ip, r3, #16, #8
 80217ca:	f3c3 2607 	ubfx	r6, r3, #8, #8
 80217ce:	b2a5      	uxth	r5, r4
 80217d0:	b2db      	uxtb	r3, r3
 80217d2:	b398      	cbz	r0, 802183c <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a0>
 80217d4:	43e4      	mvns	r4, r4
 80217d6:	f8b7 8000 	ldrh.w	r8, [r7]
 80217da:	fb16 f605 	smulbb	r6, r6, r5
 80217de:	fb1c fc05 	smulbb	ip, ip, r5
 80217e2:	fb13 f505 	smulbb	r5, r3, r5
 80217e6:	ea4f 2028 	mov.w	r0, r8, asr #8
 80217ea:	b2e3      	uxtb	r3, r4
 80217ec:	ea4f 04e8 	mov.w	r4, r8, asr #3
 80217f0:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 80217f4:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 80217f8:	f004 04fc 	and.w	r4, r4, #252	@ 0xfc
 80217fc:	fa5f f888 	uxtb.w	r8, r8
 8021800:	fb04 6403 	mla	r4, r4, r3, r6
 8021804:	fb00 cc03 	mla	ip, r0, r3, ip
 8021808:	fb08 5303 	mla	r3, r8, r3, r5
 802180c:	fa1f fc8c 	uxth.w	ip, ip
 8021810:	b298      	uxth	r0, r3
 8021812:	b2a5      	uxth	r5, r4
 8021814:	f10c 0301 	add.w	r3, ip, #1
 8021818:	1c44      	adds	r4, r0, #1
 802181a:	1c6e      	adds	r6, r5, #1
 802181c:	eb04 2410 	add.w	r4, r4, r0, lsr #8
 8021820:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 8021824:	eb06 2015 	add.w	r0, r6, r5, lsr #8
 8021828:	f403 4378 	and.w	r3, r3, #63488	@ 0xf800
 802182c:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 8021830:	0940      	lsrs	r0, r0, #5
 8021832:	4323      	orrs	r3, r4
 8021834:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8021838:	4303      	orrs	r3, r0
 802183a:	803b      	strh	r3, [r7, #0]
 802183c:	3702      	adds	r7, #2
 802183e:	4577      	cmp	r7, lr
 8021840:	4449      	add	r1, r9
 8021842:	4452      	add	r2, sl
 8021844:	d1a7      	bne.n	8021796 <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfa>
 8021846:	9b02      	ldr	r3, [sp, #8]
 8021848:	2b00      	cmp	r3, #0
 802184a:	f73f af66 	bgt.w	802171a <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 802184e:	b005      	add	sp, #20
 8021850:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8021854:	f43f af5d 	beq.w	8021712 <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8021858:	f103 38ff 	add.w	r8, r3, #4294967295
 802185c:	fb08 1c09 	mla	ip, r8, r9, r1
 8021860:	ea5f 4c2c 	movs.w	ip, ip, asr #16
 8021864:	f53f af55 	bmi.w	8021712 <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8021868:	4560      	cmp	r0, ip
 802186a:	dd65      	ble.n	8021938 <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29c>
 802186c:	fb08 280a 	mla	r8, r8, sl, r2
 8021870:	ea5f 4828 	movs.w	r8, r8, asr #16
 8021874:	d460      	bmi.n	8021938 <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29c>
 8021876:	45b8      	cmp	r8, r7
 8021878:	da5e      	bge.n	8021938 <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29c>
 802187a:	2b00      	cmp	r3, #0
 802187c:	f77f af49 	ble.w	8021712 <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8021880:	eb0e 0843 	add.w	r8, lr, r3, lsl #1
 8021884:	e03f      	b.n	8021906 <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26a>
 8021886:	b2f0      	uxtb	r0, r6
 8021888:	f3c3 4c07 	ubfx	ip, r3, #16, #8
 802188c:	f3c3 2707 	ubfx	r7, r3, #8, #8
 8021890:	b284      	uxth	r4, r0
 8021892:	b2db      	uxtb	r3, r3
 8021894:	b376      	cbz	r6, 80218f4 <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x258>
 8021896:	43c0      	mvns	r0, r0
 8021898:	f8be 6000 	ldrh.w	r6, [lr]
 802189c:	fb17 f704 	smulbb	r7, r7, r4
 80218a0:	fb1c fc04 	smulbb	ip, ip, r4
 80218a4:	fb13 f304 	smulbb	r3, r3, r4
 80218a8:	1235      	asrs	r5, r6, #8
 80218aa:	10f4      	asrs	r4, r6, #3
 80218ac:	00f6      	lsls	r6, r6, #3
 80218ae:	b2c0      	uxtb	r0, r0
 80218b0:	b2f6      	uxtb	r6, r6
 80218b2:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 80218b6:	f004 04fc 	and.w	r4, r4, #252	@ 0xfc
 80218ba:	fb04 7400 	mla	r4, r4, r0, r7
 80218be:	fb06 3300 	mla	r3, r6, r0, r3
 80218c2:	fb05 c500 	mla	r5, r5, r0, ip
 80218c6:	b2a4      	uxth	r4, r4
 80218c8:	b2ad      	uxth	r5, r5
 80218ca:	b29b      	uxth	r3, r3
 80218cc:	1c6e      	adds	r6, r5, #1
 80218ce:	1c5f      	adds	r7, r3, #1
 80218d0:	1c60      	adds	r0, r4, #1
 80218d2:	eb06 2515 	add.w	r5, r6, r5, lsr #8
 80218d6:	eb07 2313 	add.w	r3, r7, r3, lsr #8
 80218da:	eb00 2014 	add.w	r0, r0, r4, lsr #8
 80218de:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 80218e2:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80218e6:	0940      	lsrs	r0, r0, #5
 80218e8:	432b      	orrs	r3, r5
 80218ea:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 80218ee:	4303      	orrs	r3, r0
 80218f0:	f8ae 3000 	strh.w	r3, [lr]
 80218f4:	f10e 0e02 	add.w	lr, lr, #2
 80218f8:	45c6      	cmp	lr, r8
 80218fa:	4449      	add	r1, r9
 80218fc:	4452      	add	r2, sl
 80218fe:	f43f af08 	beq.w	8021712 <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8021902:	f9bb 0008 	ldrsh.w	r0, [fp, #8]
 8021906:	9c00      	ldr	r4, [sp, #0]
 8021908:	1413      	asrs	r3, r2, #16
 802190a:	fb00 4303 	mla	r3, r0, r3, r4
 802190e:	1408      	asrs	r0, r1, #16
 8021910:	5c1b      	ldrb	r3, [r3, r0]
 8021912:	9801      	ldr	r0, [sp, #4]
 8021914:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 8021918:	0e1e      	lsrs	r6, r3, #24
 802191a:	2eff      	cmp	r6, #255	@ 0xff
 802191c:	d1b3      	bne.n	8021886 <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
 802191e:	0958      	lsrs	r0, r3, #5
 8021920:	f400 64fc 	and.w	r4, r0, #2016	@ 0x7e0
 8021924:	480d      	ldr	r0, [pc, #52]	@ (802195c <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c0>)
 8021926:	ea00 2013 	and.w	r0, r0, r3, lsr #8
 802192a:	4320      	orrs	r0, r4
 802192c:	f3c3 03c4 	ubfx	r3, r3, #3, #5
 8021930:	4303      	orrs	r3, r0
 8021932:	f8ae 3000 	strh.w	r3, [lr]
 8021936:	e7dd      	b.n	80218f4 <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x258>
 8021938:	2b00      	cmp	r3, #0
 802193a:	f77f aeea 	ble.w	8021712 <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 802193e:	4677      	mov	r7, lr
 8021940:	140c      	asrs	r4, r1, #16
 8021942:	e725      	b.n	8021790 <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xf4>
 8021944:	0958      	lsrs	r0, r3, #5
 8021946:	f400 64fc 	and.w	r4, r0, #2016	@ 0x7e0
 802194a:	4804      	ldr	r0, [pc, #16]	@ (802195c <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c0>)
 802194c:	ea00 2013 	and.w	r0, r0, r3, lsr #8
 8021950:	4320      	orrs	r0, r4
 8021952:	f3c3 03c4 	ubfx	r3, r3, #3, #5
 8021956:	4303      	orrs	r3, r0
 8021958:	803b      	strh	r3, [r7, #0]
 802195a:	e76f      	b.n	802183c <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a0>
 802195c:	fffff800 	.word	0xfffff800

08021960 <_ZN8touchgfx8LCDGPU2D55TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8021960:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021964:	b089      	sub	sp, #36	@ 0x24
 8021966:	f89d 506c 	ldrb.w	r5, [sp, #108]	@ 0x6c
 802196a:	9104      	str	r1, [sp, #16]
 802196c:	ea6f 0c05 	mvn.w	ip, r5
 8021970:	e9dd 4117 	ldrd	r4, r1, [sp, #92]	@ 0x5c
 8021974:	e9dd 6715 	ldrd	r6, r7, [sp, #84]	@ 0x54
 8021978:	6860      	ldr	r0, [r4, #4]
 802197a:	9205      	str	r2, [sp, #20]
 802197c:	e9dd 2b19 	ldrd	r2, fp, [sp, #100]	@ 0x64
 8021980:	fb00 1102 	mla	r1, r0, r2, r1
 8021984:	6824      	ldr	r4, [r4, #0]
 8021986:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 802198a:	4421      	add	r1, r4
 802198c:	f8db 4004 	ldr.w	r4, [fp, #4]
 8021990:	f8db 2000 	ldr.w	r2, [fp]
 8021994:	3404      	adds	r4, #4
 8021996:	fa5f fc8c 	uxtb.w	ip, ip
 802199a:	fa1f f985 	uxth.w	r9, r5
 802199e:	9407      	str	r4, [sp, #28]
 80219a0:	9202      	str	r2, [sp, #8]
 80219a2:	e9dd 2013 	ldrd	r2, r0, [sp, #76]	@ 0x4c
 80219a6:	9c04      	ldr	r4, [sp, #16]
 80219a8:	2c00      	cmp	r4, #0
 80219aa:	dc03      	bgt.n	80219b4 <_ZN8touchgfx8LCDGPU2D55TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 80219ac:	9c05      	ldr	r4, [sp, #20]
 80219ae:	2c00      	cmp	r4, #0
 80219b0:	f340 80b1 	ble.w	8021b16 <_ZN8touchgfx8LCDGPU2D55TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b6>
 80219b4:	e9db e802 	ldrd	lr, r8, [fp, #8]
 80219b8:	2b00      	cmp	r3, #0
 80219ba:	fa0f f588 	sxth.w	r5, r8
 80219be:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 80219c2:	f500 4000 	add.w	r0, r0, #32768	@ 0x8000
 80219c6:	fa0f f48e 	sxth.w	r4, lr
 80219ca:	9503      	str	r5, [sp, #12]
 80219cc:	f340 80a6 	ble.w	8021b1c <_ZN8touchgfx8LCDGPU2D55TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 80219d0:	46f2      	mov	sl, lr
 80219d2:	9401      	str	r4, [sp, #4]
 80219d4:	1415      	asrs	r5, r2, #16
 80219d6:	d408      	bmi.n	80219ea <_ZN8touchgfx8LCDGPU2D55TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 80219d8:	9c01      	ldr	r4, [sp, #4]
 80219da:	42a5      	cmp	r5, r4
 80219dc:	da05      	bge.n	80219ea <_ZN8touchgfx8LCDGPU2D55TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 80219de:	ea5f 4e20 	movs.w	lr, r0, asr #16
 80219e2:	d402      	bmi.n	80219ea <_ZN8touchgfx8LCDGPU2D55TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 80219e4:	9c03      	ldr	r4, [sp, #12]
 80219e6:	45a6      	cmp	lr, r4
 80219e8:	db3e      	blt.n	8021a68 <_ZN8touchgfx8LCDGPU2D55TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x108>
 80219ea:	3b01      	subs	r3, #1
 80219ec:	4432      	add	r2, r6
 80219ee:	4438      	add	r0, r7
 80219f0:	f101 0103 	add.w	r1, r1, #3
 80219f4:	d1ee      	bne.n	80219d4 <_ZN8touchgfx8LCDGPU2D55TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 80219f6:	9b04      	ldr	r3, [sp, #16]
 80219f8:	2b00      	cmp	r3, #0
 80219fa:	f340 808c 	ble.w	8021b16 <_ZN8touchgfx8LCDGPU2D55TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b6>
 80219fe:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8021a02:	ee30 0a04 	vadd.f32	s0, s0, s8
 8021a06:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8021a0a:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8021a0e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8021a12:	ee20 6aa7 	vmul.f32	s12, s1, s15
 8021a16:	ee61 7a27 	vmul.f32	s15, s2, s15
 8021a1a:	ee76 6a62 	vsub.f32	s13, s12, s5
 8021a1e:	ee37 7ac3 	vsub.f32	s14, s15, s6
 8021a22:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8021a26:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 8021a2a:	ee16 2a90 	vmov	r2, s13
 8021a2e:	3b01      	subs	r3, #1
 8021a30:	9304      	str	r3, [sp, #16]
 8021a32:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 8021a34:	9c05      	ldr	r4, [sp, #20]
 8021a36:	fb92 f6f3 	sdiv	r6, r2, r3
 8021a3a:	ee17 2a10 	vmov	r2, s14
 8021a3e:	eeb0 7a43 	vmov.f32	s14, s6
 8021a42:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 8021a46:	ee17 0a10 	vmov	r0, s14
 8021a4a:	eeb0 7a62 	vmov.f32	s14, s5
 8021a4e:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 8021a52:	fb92 f7f3 	sdiv	r7, r2, r3
 8021a56:	eeb0 3a67 	vmov.f32	s6, s15
 8021a5a:	ee17 2a10 	vmov	r2, s14
 8021a5e:	eef0 2a46 	vmov.f32	s5, s12
 8021a62:	bf08      	it	eq
 8021a64:	4623      	moveq	r3, r4
 8021a66:	e79e      	b.n	80219a6 <_ZN8touchgfx8LCDGPU2D55TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 8021a68:	9506      	str	r5, [sp, #24]
 8021a6a:	1e5d      	subs	r5, r3, #1
 8021a6c:	46d6      	mov	lr, sl
 8021a6e:	fb05 2a06 	mla	sl, r5, r6, r2
 8021a72:	ea5f 4a2a 	movs.w	sl, sl, asr #16
 8021a76:	9c01      	ldr	r4, [sp, #4]
 8021a78:	9501      	str	r5, [sp, #4]
 8021a7a:	d559      	bpl.n	8021b30 <_ZN8touchgfx8LCDGPU2D55TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d0>
 8021a7c:	460c      	mov	r4, r1
 8021a7e:	9d06      	ldr	r5, [sp, #24]
 8021a80:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8021a84:	4419      	add	r1, r3
 8021a86:	4673      	mov	r3, lr
 8021a88:	46b6      	mov	lr, r6
 8021a8a:	4646      	mov	r6, r8
 8021a8c:	e002      	b.n	8021a94 <_ZN8touchgfx8LCDGPU2D55TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x134>
 8021a8e:	1415      	asrs	r5, r2, #16
 8021a90:	e9db 3602 	ldrd	r3, r6, [fp, #8]
 8021a94:	2d00      	cmp	r5, #0
 8021a96:	4472      	add	r2, lr
 8021a98:	db35      	blt.n	8021b06 <_ZN8touchgfx8LCDGPU2D55TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a6>
 8021a9a:	429d      	cmp	r5, r3
 8021a9c:	da33      	bge.n	8021b06 <_ZN8touchgfx8LCDGPU2D55TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a6>
 8021a9e:	ea5f 4820 	movs.w	r8, r0, asr #16
 8021aa2:	d430      	bmi.n	8021b06 <_ZN8touchgfx8LCDGPU2D55TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a6>
 8021aa4:	45b0      	cmp	r8, r6
 8021aa6:	b21b      	sxth	r3, r3
 8021aa8:	da2d      	bge.n	8021b06 <_ZN8touchgfx8LCDGPU2D55TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a6>
 8021aaa:	9e02      	ldr	r6, [sp, #8]
 8021aac:	fb08 6303 	mla	r3, r8, r3, r6
 8021ab0:	7826      	ldrb	r6, [r4, #0]
 8021ab2:	5d5b      	ldrb	r3, [r3, r5]
 8021ab4:	fb16 f80c 	smulbb	r8, r6, ip
 8021ab8:	9d07      	ldr	r5, [sp, #28]
 8021aba:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8021abe:	5cee      	ldrb	r6, [r5, r3]
 8021ac0:	442b      	add	r3, r5
 8021ac2:	fb06 8609 	mla	r6, r6, r9, r8
 8021ac6:	b2b6      	uxth	r6, r6
 8021ac8:	7865      	ldrb	r5, [r4, #1]
 8021aca:	f106 0801 	add.w	r8, r6, #1
 8021ace:	eb08 2616 	add.w	r6, r8, r6, lsr #8
 8021ad2:	1236      	asrs	r6, r6, #8
 8021ad4:	fb15 f80c 	smulbb	r8, r5, ip
 8021ad8:	7026      	strb	r6, [r4, #0]
 8021ada:	785d      	ldrb	r5, [r3, #1]
 8021adc:	78a6      	ldrb	r6, [r4, #2]
 8021ade:	fb05 8509 	mla	r5, r5, r9, r8
 8021ae2:	b2ad      	uxth	r5, r5
 8021ae4:	f105 0801 	add.w	r8, r5, #1
 8021ae8:	eb08 2515 	add.w	r5, r8, r5, lsr #8
 8021aec:	122d      	asrs	r5, r5, #8
 8021aee:	fb16 f60c 	smulbb	r6, r6, ip
 8021af2:	7065      	strb	r5, [r4, #1]
 8021af4:	789b      	ldrb	r3, [r3, #2]
 8021af6:	fb03 6309 	mla	r3, r3, r9, r6
 8021afa:	b29b      	uxth	r3, r3
 8021afc:	1c5d      	adds	r5, r3, #1
 8021afe:	eb05 2313 	add.w	r3, r5, r3, lsr #8
 8021b02:	121b      	asrs	r3, r3, #8
 8021b04:	70a3      	strb	r3, [r4, #2]
 8021b06:	3403      	adds	r4, #3
 8021b08:	428c      	cmp	r4, r1
 8021b0a:	4438      	add	r0, r7
 8021b0c:	d1bf      	bne.n	8021a8e <_ZN8touchgfx8LCDGPU2D55TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x12e>
 8021b0e:	9b04      	ldr	r3, [sp, #16]
 8021b10:	2b00      	cmp	r3, #0
 8021b12:	f73f af74 	bgt.w	80219fe <_ZN8touchgfx8LCDGPU2D55TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8021b16:	b009      	add	sp, #36	@ 0x24
 8021b18:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8021b1c:	f43f af6b 	beq.w	80219f6 <_ZN8touchgfx8LCDGPU2D55TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8021b20:	1e5d      	subs	r5, r3, #1
 8021b22:	fb05 2a06 	mla	sl, r5, r6, r2
 8021b26:	ea5f 4a2a 	movs.w	sl, sl, asr #16
 8021b2a:	9501      	str	r5, [sp, #4]
 8021b2c:	f53f af63 	bmi.w	80219f6 <_ZN8touchgfx8LCDGPU2D55TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8021b30:	4554      	cmp	r4, sl
 8021b32:	dd54      	ble.n	8021bde <_ZN8touchgfx8LCDGPU2D55TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27e>
 8021b34:	9d01      	ldr	r5, [sp, #4]
 8021b36:	fb05 0507 	mla	r5, r5, r7, r0
 8021b3a:	ea5f 4a25 	movs.w	sl, r5, asr #16
 8021b3e:	d44e      	bmi.n	8021bde <_ZN8touchgfx8LCDGPU2D55TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27e>
 8021b40:	9d03      	ldr	r5, [sp, #12]
 8021b42:	45aa      	cmp	sl, r5
 8021b44:	da4b      	bge.n	8021bde <_ZN8touchgfx8LCDGPU2D55TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27e>
 8021b46:	2b00      	cmp	r3, #0
 8021b48:	f77f af55 	ble.w	80219f6 <_ZN8touchgfx8LCDGPU2D55TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8021b4c:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8021b50:	eb01 0e03 	add.w	lr, r1, r3
 8021b54:	f8dd 801c 	ldr.w	r8, [sp, #28]
 8021b58:	3103      	adds	r1, #3
 8021b5a:	e002      	b.n	8021b62 <_ZN8touchgfx8LCDGPU2D55TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
 8021b5c:	f9bb 4008 	ldrsh.w	r4, [fp, #8]
 8021b60:	3103      	adds	r1, #3
 8021b62:	9d02      	ldr	r5, [sp, #8]
 8021b64:	1403      	asrs	r3, r0, #16
 8021b66:	fb04 5303 	mla	r3, r4, r3, r5
 8021b6a:	1415      	asrs	r5, r2, #16
 8021b6c:	f811 4c03 	ldrb.w	r4, [r1, #-3]
 8021b70:	5d5b      	ldrb	r3, [r3, r5]
 8021b72:	fb14 f40c 	smulbb	r4, r4, ip
 8021b76:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8021b7a:	f818 5003 	ldrb.w	r5, [r8, r3]
 8021b7e:	4443      	add	r3, r8
 8021b80:	fb05 4509 	mla	r5, r5, r9, r4
 8021b84:	b2ad      	uxth	r5, r5
 8021b86:	f105 0a01 	add.w	sl, r5, #1
 8021b8a:	f811 4c02 	ldrb.w	r4, [r1, #-2]
 8021b8e:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 8021b92:	122d      	asrs	r5, r5, #8
 8021b94:	fb14 f40c 	smulbb	r4, r4, ip
 8021b98:	f801 5c03 	strb.w	r5, [r1, #-3]
 8021b9c:	785d      	ldrb	r5, [r3, #1]
 8021b9e:	f811 ac01 	ldrb.w	sl, [r1, #-1]
 8021ba2:	fb05 4409 	mla	r4, r5, r9, r4
 8021ba6:	b2a4      	uxth	r4, r4
 8021ba8:	1c65      	adds	r5, r4, #1
 8021baa:	eb05 2414 	add.w	r4, r5, r4, lsr #8
 8021bae:	1224      	asrs	r4, r4, #8
 8021bb0:	fb1a fa0c 	smulbb	sl, sl, ip
 8021bb4:	f801 4c02 	strb.w	r4, [r1, #-2]
 8021bb8:	789b      	ldrb	r3, [r3, #2]
 8021bba:	458e      	cmp	lr, r1
 8021bbc:	fb03 aa09 	mla	sl, r3, r9, sl
 8021bc0:	fa1f fa8a 	uxth.w	sl, sl
 8021bc4:	f10a 0301 	add.w	r3, sl, #1
 8021bc8:	eb03 2a1a 	add.w	sl, r3, sl, lsr #8
 8021bcc:	ea4f 2a2a 	mov.w	sl, sl, asr #8
 8021bd0:	4438      	add	r0, r7
 8021bd2:	4432      	add	r2, r6
 8021bd4:	f801 ac01 	strb.w	sl, [r1, #-1]
 8021bd8:	d1c0      	bne.n	8021b5c <_ZN8touchgfx8LCDGPU2D55TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 8021bda:	4671      	mov	r1, lr
 8021bdc:	e70b      	b.n	80219f6 <_ZN8touchgfx8LCDGPU2D55TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8021bde:	2b00      	cmp	r3, #0
 8021be0:	f77f af09 	ble.w	80219f6 <_ZN8touchgfx8LCDGPU2D55TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8021be4:	1415      	asrs	r5, r2, #16
 8021be6:	460c      	mov	r4, r1
 8021be8:	9506      	str	r5, [sp, #24]
 8021bea:	e749      	b.n	8021a80 <_ZN8touchgfx8LCDGPU2D55TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x120>

08021bec <_ZN8touchgfx8LCDGPU2D57TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8021bec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021bf0:	4689      	mov	r9, r1
 8021bf2:	eef7 5a00 	vmov.f32	s11, #112	@ 0x3f800000  1.0
 8021bf6:	46c8      	mov	r8, r9
 8021bf8:	b087      	sub	sp, #28
 8021bfa:	e9dd 1015 	ldrd	r1, r0, [sp, #84]	@ 0x54
 8021bfe:	684c      	ldr	r4, [r1, #4]
 8021c00:	9203      	str	r2, [sp, #12]
 8021c02:	e9dd 2c17 	ldrd	r2, ip, [sp, #92]	@ 0x5c
 8021c06:	fb04 0202 	mla	r2, r4, r2, r0
 8021c0a:	e9dd 6713 	ldrd	r6, r7, [sp, #76]	@ 0x4c
 8021c0e:	680d      	ldr	r5, [r1, #0]
 8021c10:	f8dc 4004 	ldr.w	r4, [ip, #4]
 8021c14:	eb02 0042 	add.w	r0, r2, r2, lsl #1
 8021c18:	f8dc 2000 	ldr.w	r2, [ip]
 8021c1c:	4428      	add	r0, r5
 8021c1e:	f104 0b04 	add.w	fp, r4, #4
 8021c22:	9205      	str	r2, [sp, #20]
 8021c24:	e9dd 2111 	ldrd	r2, r1, [sp, #68]	@ 0x44
 8021c28:	f1b8 0f00 	cmp.w	r8, #0
 8021c2c:	dc03      	bgt.n	8021c36 <_ZN8touchgfx8LCDGPU2D57TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8021c2e:	9c03      	ldr	r4, [sp, #12]
 8021c30:	2c00      	cmp	r4, #0
 8021c32:	f340 808d 	ble.w	8021d50 <_ZN8touchgfx8LCDGPU2D57TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8021c36:	e9dc ea02 	ldrd	lr, sl, [ip, #8]
 8021c3a:	2b00      	cmp	r3, #0
 8021c3c:	fa0f f58a 	sxth.w	r5, sl
 8021c40:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8021c44:	f501 4100 	add.w	r1, r1, #32768	@ 0x8000
 8021c48:	fa0f f48e 	sxth.w	r4, lr
 8021c4c:	9502      	str	r5, [sp, #8]
 8021c4e:	f340 8082 	ble.w	8021d56 <_ZN8touchgfx8LCDGPU2D57TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16a>
 8021c52:	46f1      	mov	r9, lr
 8021c54:	9401      	str	r4, [sp, #4]
 8021c56:	1415      	asrs	r5, r2, #16
 8021c58:	d408      	bmi.n	8021c6c <_ZN8touchgfx8LCDGPU2D57TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8021c5a:	9c01      	ldr	r4, [sp, #4]
 8021c5c:	42a5      	cmp	r5, r4
 8021c5e:	da05      	bge.n	8021c6c <_ZN8touchgfx8LCDGPU2D57TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8021c60:	ea5f 4e21 	movs.w	lr, r1, asr #16
 8021c64:	d402      	bmi.n	8021c6c <_ZN8touchgfx8LCDGPU2D57TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8021c66:	9c02      	ldr	r4, [sp, #8]
 8021c68:	45a6      	cmp	lr, r4
 8021c6a:	db3b      	blt.n	8021ce4 <_ZN8touchgfx8LCDGPU2D57TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xf8>
 8021c6c:	3b01      	subs	r3, #1
 8021c6e:	4432      	add	r2, r6
 8021c70:	4439      	add	r1, r7
 8021c72:	f100 0003 	add.w	r0, r0, #3
 8021c76:	d1ee      	bne.n	8021c56 <_ZN8touchgfx8LCDGPU2D57TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 8021c78:	f1b8 0f00 	cmp.w	r8, #0
 8021c7c:	dd68      	ble.n	8021d50 <_ZN8touchgfx8LCDGPU2D57TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8021c7e:	ee30 0a04 	vadd.f32	s0, s0, s8
 8021c82:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8021c86:	eec5 7a80 	vdiv.f32	s15, s11, s0
 8021c8a:	ee31 1a05 	vadd.f32	s2, s2, s10
 8021c8e:	ee20 6aa7 	vmul.f32	s12, s1, s15
 8021c92:	ee61 7a27 	vmul.f32	s15, s2, s15
 8021c96:	ee76 6a62 	vsub.f32	s13, s12, s5
 8021c9a:	ee37 7ac3 	vsub.f32	s14, s15, s6
 8021c9e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8021ca2:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 8021ca6:	ee16 2a90 	vmov	r2, s13
 8021caa:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8021cac:	9c03      	ldr	r4, [sp, #12]
 8021cae:	fb92 f6f3 	sdiv	r6, r2, r3
 8021cb2:	ee17 2a10 	vmov	r2, s14
 8021cb6:	eeb0 7a43 	vmov.f32	s14, s6
 8021cba:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 8021cbe:	ee17 1a10 	vmov	r1, s14
 8021cc2:	eeb0 7a62 	vmov.f32	s14, s5
 8021cc6:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 8021cca:	f1b8 0801 	subs.w	r8, r8, #1
 8021cce:	fb92 f7f3 	sdiv	r7, r2, r3
 8021cd2:	eeb0 3a67 	vmov.f32	s6, s15
 8021cd6:	ee17 2a10 	vmov	r2, s14
 8021cda:	eef0 2a46 	vmov.f32	s5, s12
 8021cde:	bf08      	it	eq
 8021ce0:	4623      	moveq	r3, r4
 8021ce2:	e7a1      	b.n	8021c28 <_ZN8touchgfx8LCDGPU2D57TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8021ce4:	9c01      	ldr	r4, [sp, #4]
 8021ce6:	9501      	str	r5, [sp, #4]
 8021ce8:	1e5d      	subs	r5, r3, #1
 8021cea:	46ce      	mov	lr, r9
 8021cec:	fb06 2905 	mla	r9, r6, r5, r2
 8021cf0:	ea5f 4929 	movs.w	r9, r9, asr #16
 8021cf4:	9504      	str	r5, [sp, #16]
 8021cf6:	d536      	bpl.n	8021d66 <_ZN8touchgfx8LCDGPU2D57TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17a>
 8021cf8:	4604      	mov	r4, r0
 8021cfa:	9d01      	ldr	r5, [sp, #4]
 8021cfc:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8021d00:	4418      	add	r0, r3
 8021d02:	4673      	mov	r3, lr
 8021d04:	46b6      	mov	lr, r6
 8021d06:	4656      	mov	r6, sl
 8021d08:	e002      	b.n	8021d10 <_ZN8touchgfx8LCDGPU2D57TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x124>
 8021d0a:	1415      	asrs	r5, r2, #16
 8021d0c:	e9dc 3602 	ldrd	r3, r6, [ip, #8]
 8021d10:	2d00      	cmp	r5, #0
 8021d12:	4472      	add	r2, lr
 8021d14:	db15      	blt.n	8021d42 <_ZN8touchgfx8LCDGPU2D57TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 8021d16:	429d      	cmp	r5, r3
 8021d18:	da13      	bge.n	8021d42 <_ZN8touchgfx8LCDGPU2D57TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 8021d1a:	ea5f 4921 	movs.w	r9, r1, asr #16
 8021d1e:	d410      	bmi.n	8021d42 <_ZN8touchgfx8LCDGPU2D57TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 8021d20:	45b1      	cmp	r9, r6
 8021d22:	da0e      	bge.n	8021d42 <_ZN8touchgfx8LCDGPU2D57TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 8021d24:	9e05      	ldr	r6, [sp, #20]
 8021d26:	b21b      	sxth	r3, r3
 8021d28:	fb09 6303 	mla	r3, r9, r3, r6
 8021d2c:	5d5b      	ldrb	r3, [r3, r5]
 8021d2e:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8021d32:	f81b 5003 	ldrb.w	r5, [fp, r3]
 8021d36:	445b      	add	r3, fp
 8021d38:	7025      	strb	r5, [r4, #0]
 8021d3a:	785d      	ldrb	r5, [r3, #1]
 8021d3c:	7065      	strb	r5, [r4, #1]
 8021d3e:	789b      	ldrb	r3, [r3, #2]
 8021d40:	70a3      	strb	r3, [r4, #2]
 8021d42:	3403      	adds	r4, #3
 8021d44:	4284      	cmp	r4, r0
 8021d46:	4439      	add	r1, r7
 8021d48:	d1df      	bne.n	8021d0a <_ZN8touchgfx8LCDGPU2D57TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11e>
 8021d4a:	f1b8 0f00 	cmp.w	r8, #0
 8021d4e:	dc96      	bgt.n	8021c7e <_ZN8touchgfx8LCDGPU2D57TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8021d50:	b007      	add	sp, #28
 8021d52:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8021d56:	d08f      	beq.n	8021c78 <_ZN8touchgfx8LCDGPU2D57TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8021d58:	1e5d      	subs	r5, r3, #1
 8021d5a:	fb06 2905 	mla	r9, r6, r5, r2
 8021d5e:	ea5f 4929 	movs.w	r9, r9, asr #16
 8021d62:	9504      	str	r5, [sp, #16]
 8021d64:	d488      	bmi.n	8021c78 <_ZN8touchgfx8LCDGPU2D57TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8021d66:	45a1      	cmp	r9, r4
 8021d68:	da2d      	bge.n	8021dc6 <_ZN8touchgfx8LCDGPU2D57TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1da>
 8021d6a:	9d04      	ldr	r5, [sp, #16]
 8021d6c:	fb07 1505 	mla	r5, r7, r5, r1
 8021d70:	ea5f 4925 	movs.w	r9, r5, asr #16
 8021d74:	d427      	bmi.n	8021dc6 <_ZN8touchgfx8LCDGPU2D57TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1da>
 8021d76:	9d02      	ldr	r5, [sp, #8]
 8021d78:	454d      	cmp	r5, r9
 8021d7a:	dd24      	ble.n	8021dc6 <_ZN8touchgfx8LCDGPU2D57TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1da>
 8021d7c:	2b00      	cmp	r3, #0
 8021d7e:	f77f af7b 	ble.w	8021c78 <_ZN8touchgfx8LCDGPU2D57TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8021d82:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8021d86:	18c5      	adds	r5, r0, r3
 8021d88:	f8dd e014 	ldr.w	lr, [sp, #20]
 8021d8c:	3003      	adds	r0, #3
 8021d8e:	e002      	b.n	8021d96 <_ZN8touchgfx8LCDGPU2D57TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1aa>
 8021d90:	f9bc 4008 	ldrsh.w	r4, [ip, #8]
 8021d94:	3003      	adds	r0, #3
 8021d96:	140b      	asrs	r3, r1, #16
 8021d98:	fb04 e303 	mla	r3, r4, r3, lr
 8021d9c:	1414      	asrs	r4, r2, #16
 8021d9e:	5d1b      	ldrb	r3, [r3, r4]
 8021da0:	4285      	cmp	r5, r0
 8021da2:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8021da6:	f81b 4003 	ldrb.w	r4, [fp, r3]
 8021daa:	445b      	add	r3, fp
 8021dac:	f800 4c03 	strb.w	r4, [r0, #-3]
 8021db0:	785c      	ldrb	r4, [r3, #1]
 8021db2:	4439      	add	r1, r7
 8021db4:	f800 4c02 	strb.w	r4, [r0, #-2]
 8021db8:	789b      	ldrb	r3, [r3, #2]
 8021dba:	4432      	add	r2, r6
 8021dbc:	f800 3c01 	strb.w	r3, [r0, #-1]
 8021dc0:	d1e6      	bne.n	8021d90 <_ZN8touchgfx8LCDGPU2D57TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8021dc2:	4628      	mov	r0, r5
 8021dc4:	e758      	b.n	8021c78 <_ZN8touchgfx8LCDGPU2D57TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8021dc6:	2b00      	cmp	r3, #0
 8021dc8:	f77f af56 	ble.w	8021c78 <_ZN8touchgfx8LCDGPU2D57TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8021dcc:	1415      	asrs	r5, r2, #16
 8021dce:	4604      	mov	r4, r0
 8021dd0:	9501      	str	r5, [sp, #4]
 8021dd2:	e793      	b.n	8021cfc <_ZN8touchgfx8LCDGPU2D57TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>

08021dd4 <_ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8021dd4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021dd8:	b087      	sub	sp, #28
 8021dda:	e9cd 1202 	strd	r1, r2, [sp, #8]
 8021dde:	e9dd 1015 	ldrd	r1, r0, [sp, #84]	@ 0x54
 8021de2:	e9dd 2c17 	ldrd	r2, ip, [sp, #92]	@ 0x5c
 8021de6:	684c      	ldr	r4, [r1, #4]
 8021de8:	eef7 5a00 	vmov.f32	s11, #112	@ 0x3f800000  1.0
 8021dec:	e9dd 6713 	ldrd	r6, r7, [sp, #76]	@ 0x4c
 8021df0:	fb04 0202 	mla	r2, r4, r2, r0
 8021df4:	eb02 0542 	add.w	r5, r2, r2, lsl #1
 8021df8:	f8dc 2000 	ldr.w	r2, [ip]
 8021dfc:	f8dc 4004 	ldr.w	r4, [ip, #4]
 8021e00:	9201      	str	r2, [sp, #4]
 8021e02:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 8021e06:	6808      	ldr	r0, [r1, #0]
 8021e08:	9204      	str	r2, [sp, #16]
 8021e0a:	1d22      	adds	r2, r4, #4
 8021e0c:	e9dd e111 	ldrd	lr, r1, [sp, #68]	@ 0x44
 8021e10:	9205      	str	r2, [sp, #20]
 8021e12:	4672      	mov	r2, lr
 8021e14:	4428      	add	r0, r5
 8021e16:	9c02      	ldr	r4, [sp, #8]
 8021e18:	2c00      	cmp	r4, #0
 8021e1a:	dc03      	bgt.n	8021e24 <_ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
 8021e1c:	9c03      	ldr	r4, [sp, #12]
 8021e1e:	2c00      	cmp	r4, #0
 8021e20:	f340 80ba 	ble.w	8021f98 <_ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c4>
 8021e24:	e9dc e802 	ldrd	lr, r8, [ip, #8]
 8021e28:	2b00      	cmp	r3, #0
 8021e2a:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8021e2e:	f501 4100 	add.w	r1, r1, #32768	@ 0x8000
 8021e32:	fa0f f48e 	sxth.w	r4, lr
 8021e36:	fa0f f988 	sxth.w	r9, r8
 8021e3a:	f340 80b0 	ble.w	8021f9e <_ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ca>
 8021e3e:	1415      	asrs	r5, r2, #16
 8021e40:	d406      	bmi.n	8021e50 <_ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8021e42:	42a5      	cmp	r5, r4
 8021e44:	da04      	bge.n	8021e50 <_ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8021e46:	ea5f 4a21 	movs.w	sl, r1, asr #16
 8021e4a:	d401      	bmi.n	8021e50 <_ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8021e4c:	45ca      	cmp	sl, r9
 8021e4e:	db3c      	blt.n	8021eca <_ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xf6>
 8021e50:	3b01      	subs	r3, #1
 8021e52:	4432      	add	r2, r6
 8021e54:	4439      	add	r1, r7
 8021e56:	f100 0003 	add.w	r0, r0, #3
 8021e5a:	d1f0      	bne.n	8021e3e <_ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 8021e5c:	9b02      	ldr	r3, [sp, #8]
 8021e5e:	2b00      	cmp	r3, #0
 8021e60:	f340 809a 	ble.w	8021f98 <_ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c4>
 8021e64:	ee30 0a04 	vadd.f32	s0, s0, s8
 8021e68:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8021e6c:	eec5 7a80 	vdiv.f32	s15, s11, s0
 8021e70:	ee31 1a05 	vadd.f32	s2, s2, s10
 8021e74:	ee20 6aa7 	vmul.f32	s12, s1, s15
 8021e78:	ee61 7a27 	vmul.f32	s15, s2, s15
 8021e7c:	ee76 6a62 	vsub.f32	s13, s12, s5
 8021e80:	ee37 7ac3 	vsub.f32	s14, s15, s6
 8021e84:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8021e88:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 8021e8c:	ee16 2a90 	vmov	r2, s13
 8021e90:	3b01      	subs	r3, #1
 8021e92:	9302      	str	r3, [sp, #8]
 8021e94:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8021e96:	9c03      	ldr	r4, [sp, #12]
 8021e98:	fb92 f6f3 	sdiv	r6, r2, r3
 8021e9c:	ee17 2a10 	vmov	r2, s14
 8021ea0:	eeb0 7a43 	vmov.f32	s14, s6
 8021ea4:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 8021ea8:	ee17 1a10 	vmov	r1, s14
 8021eac:	eeb0 7a62 	vmov.f32	s14, s5
 8021eb0:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 8021eb4:	fb92 f7f3 	sdiv	r7, r2, r3
 8021eb8:	eeb0 3a67 	vmov.f32	s6, s15
 8021ebc:	ee17 2a10 	vmov	r2, s14
 8021ec0:	eef0 2a46 	vmov.f32	s5, s12
 8021ec4:	bf08      	it	eq
 8021ec6:	4623      	moveq	r3, r4
 8021ec8:	e7a5      	b.n	8021e16 <_ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 8021eca:	f103 3bff 	add.w	fp, r3, #4294967295
 8021ece:	fb0b 2a06 	mla	sl, fp, r6, r2
 8021ed2:	ea5f 4a2a 	movs.w	sl, sl, asr #16
 8021ed6:	d56c      	bpl.n	8021fb2 <_ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1de>
 8021ed8:	4604      	mov	r4, r0
 8021eda:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8021ede:	4418      	add	r0, r3
 8021ee0:	4673      	mov	r3, lr
 8021ee2:	46b6      	mov	lr, r6
 8021ee4:	4646      	mov	r6, r8
 8021ee6:	e002      	b.n	8021eee <_ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 8021ee8:	1415      	asrs	r5, r2, #16
 8021eea:	e9dc 3602 	ldrd	r3, r6, [ip, #8]
 8021eee:	2d00      	cmp	r5, #0
 8021ef0:	4472      	add	r2, lr
 8021ef2:	db49      	blt.n	8021f88 <_ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
 8021ef4:	429d      	cmp	r5, r3
 8021ef6:	da47      	bge.n	8021f88 <_ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
 8021ef8:	ea5f 4821 	movs.w	r8, r1, asr #16
 8021efc:	d444      	bmi.n	8021f88 <_ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
 8021efe:	45b0      	cmp	r8, r6
 8021f00:	b21b      	sxth	r3, r3
 8021f02:	da41      	bge.n	8021f88 <_ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
 8021f04:	9e01      	ldr	r6, [sp, #4]
 8021f06:	fb08 6303 	mla	r3, r8, r3, r6
 8021f0a:	5d5b      	ldrb	r3, [r3, r5]
 8021f0c:	9d05      	ldr	r5, [sp, #20]
 8021f0e:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 8021f12:	0e1d      	lsrs	r5, r3, #24
 8021f14:	d038      	beq.n	8021f88 <_ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
 8021f16:	9e04      	ldr	r6, [sp, #16]
 8021f18:	fa5f f983 	uxtb.w	r9, r3
 8021f1c:	fb06 f605 	mul.w	r6, r6, r5
 8021f20:	1c75      	adds	r5, r6, #1
 8021f22:	eb05 2526 	add.w	r5, r5, r6, asr #8
 8021f26:	122d      	asrs	r5, r5, #8
 8021f28:	43ee      	mvns	r6, r5
 8021f2a:	b2ad      	uxth	r5, r5
 8021f2c:	fb19 f905 	smulbb	r9, r9, r5
 8021f30:	f3c3 2807 	ubfx	r8, r3, #8, #8
 8021f34:	f3c3 4307 	ubfx	r3, r3, #16, #8
 8021f38:	f894 a000 	ldrb.w	sl, [r4]
 8021f3c:	fb18 f805 	smulbb	r8, r8, r5
 8021f40:	fb13 f305 	smulbb	r3, r3, r5
 8021f44:	b2f5      	uxtb	r5, r6
 8021f46:	fb0a 9605 	mla	r6, sl, r5, r9
 8021f4a:	f894 b001 	ldrb.w	fp, [r4, #1]
 8021f4e:	f894 9002 	ldrb.w	r9, [r4, #2]
 8021f52:	fb0b 8805 	mla	r8, fp, r5, r8
 8021f56:	fb09 3305 	mla	r3, r9, r5, r3
 8021f5a:	fa1f fa86 	uxth.w	sl, r6
 8021f5e:	fa1f f888 	uxth.w	r8, r8
 8021f62:	b29b      	uxth	r3, r3
 8021f64:	f10a 0601 	add.w	r6, sl, #1
 8021f68:	f108 0501 	add.w	r5, r8, #1
 8021f6c:	f103 0901 	add.w	r9, r3, #1
 8021f70:	eb06 261a 	add.w	r6, r6, sl, lsr #8
 8021f74:	eb05 2518 	add.w	r5, r5, r8, lsr #8
 8021f78:	eb09 2313 	add.w	r3, r9, r3, lsr #8
 8021f7c:	1236      	asrs	r6, r6, #8
 8021f7e:	122d      	asrs	r5, r5, #8
 8021f80:	121b      	asrs	r3, r3, #8
 8021f82:	7026      	strb	r6, [r4, #0]
 8021f84:	7065      	strb	r5, [r4, #1]
 8021f86:	70a3      	strb	r3, [r4, #2]
 8021f88:	3403      	adds	r4, #3
 8021f8a:	4284      	cmp	r4, r0
 8021f8c:	4439      	add	r1, r7
 8021f8e:	d1ab      	bne.n	8021ee8 <_ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x114>
 8021f90:	9b02      	ldr	r3, [sp, #8]
 8021f92:	2b00      	cmp	r3, #0
 8021f94:	f73f af66 	bgt.w	8021e64 <_ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8021f98:	b007      	add	sp, #28
 8021f9a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8021f9e:	f43f af5d 	beq.w	8021e5c <_ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8021fa2:	f103 3bff 	add.w	fp, r3, #4294967295
 8021fa6:	fb0b 2a06 	mla	sl, fp, r6, r2
 8021faa:	ea5f 4a2a 	movs.w	sl, sl, asr #16
 8021fae:	f53f af55 	bmi.w	8021e5c <_ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8021fb2:	4554      	cmp	r4, sl
 8021fb4:	dd64      	ble.n	8022080 <_ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ac>
 8021fb6:	fb0b 1b07 	mla	fp, fp, r7, r1
 8021fba:	ea5f 4b2b 	movs.w	fp, fp, asr #16
 8021fbe:	d45f      	bmi.n	8022080 <_ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ac>
 8021fc0:	45cb      	cmp	fp, r9
 8021fc2:	da5d      	bge.n	8022080 <_ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ac>
 8021fc4:	2b00      	cmp	r3, #0
 8021fc6:	f77f af49 	ble.w	8021e5c <_ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8021fca:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8021fce:	eb00 0e03 	add.w	lr, r0, r3
 8021fd2:	f8dd 8014 	ldr.w	r8, [sp, #20]
 8021fd6:	3003      	adds	r0, #3
 8021fd8:	e002      	b.n	8021fe0 <_ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20c>
 8021fda:	f9bc 4008 	ldrsh.w	r4, [ip, #8]
 8021fde:	3003      	adds	r0, #3
 8021fe0:	9d01      	ldr	r5, [sp, #4]
 8021fe2:	140b      	asrs	r3, r1, #16
 8021fe4:	fb04 5303 	mla	r3, r4, r3, r5
 8021fe8:	1414      	asrs	r4, r2, #16
 8021fea:	5d1b      	ldrb	r3, [r3, r4]
 8021fec:	4432      	add	r2, r6
 8021fee:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 8021ff2:	4439      	add	r1, r7
 8021ff4:	ea5f 6a13 	movs.w	sl, r3, lsr #24
 8021ff8:	d03e      	beq.n	8022078 <_ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a4>
 8021ffa:	9c04      	ldr	r4, [sp, #16]
 8021ffc:	fa5f f983 	uxtb.w	r9, r3
 8022000:	fb04 f40a 	mul.w	r4, r4, sl
 8022004:	f104 0a01 	add.w	sl, r4, #1
 8022008:	eb0a 2a24 	add.w	sl, sl, r4, asr #8
 802200c:	ea4f 2a2a 	mov.w	sl, sl, asr #8
 8022010:	ea6f 040a 	mvn.w	r4, sl
 8022014:	fa1f fa8a 	uxth.w	sl, sl
 8022018:	fb19 f90a 	smulbb	r9, r9, sl
 802201c:	f3c3 2507 	ubfx	r5, r3, #8, #8
 8022020:	f3c3 4307 	ubfx	r3, r3, #16, #8
 8022024:	fb15 fb0a 	smulbb	fp, r5, sl
 8022028:	fb13 f30a 	smulbb	r3, r3, sl
 802202c:	f810 ac03 	ldrb.w	sl, [r0, #-3]
 8022030:	b2e4      	uxtb	r4, r4
 8022032:	fb0a 9904 	mla	r9, sl, r4, r9
 8022036:	f810 5c02 	ldrb.w	r5, [r0, #-2]
 802203a:	f810 ac01 	ldrb.w	sl, [r0, #-1]
 802203e:	fb05 b504 	mla	r5, r5, r4, fp
 8022042:	fb0a 3304 	mla	r3, sl, r4, r3
 8022046:	fa1f f989 	uxth.w	r9, r9
 802204a:	b2ad      	uxth	r5, r5
 802204c:	b29b      	uxth	r3, r3
 802204e:	f109 0b01 	add.w	fp, r9, #1
 8022052:	f105 0a01 	add.w	sl, r5, #1
 8022056:	1c5c      	adds	r4, r3, #1
 8022058:	eb0b 2919 	add.w	r9, fp, r9, lsr #8
 802205c:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 8022060:	eb04 2313 	add.w	r3, r4, r3, lsr #8
 8022064:	ea4f 2929 	mov.w	r9, r9, asr #8
 8022068:	122d      	asrs	r5, r5, #8
 802206a:	121b      	asrs	r3, r3, #8
 802206c:	f800 9c03 	strb.w	r9, [r0, #-3]
 8022070:	f800 5c02 	strb.w	r5, [r0, #-2]
 8022074:	f800 3c01 	strb.w	r3, [r0, #-1]
 8022078:	4586      	cmp	lr, r0
 802207a:	d1ae      	bne.n	8021fda <_ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x206>
 802207c:	4670      	mov	r0, lr
 802207e:	e6ed      	b.n	8021e5c <_ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8022080:	2b00      	cmp	r3, #0
 8022082:	f77f aeeb 	ble.w	8021e5c <_ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8022086:	4604      	mov	r4, r0
 8022088:	1415      	asrs	r5, r2, #16
 802208a:	e726      	b.n	8021eda <_ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>

0802208c <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 802208c:	eef7 5a00 	vmov.f32	s11, #112	@ 0x3f800000  1.0
 8022090:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022094:	b087      	sub	sp, #28
 8022096:	e9cd 1203 	strd	r1, r2, [sp, #12]
 802209a:	e9dd 1015 	ldrd	r1, r0, [sp, #84]	@ 0x54
 802209e:	e9dd 2b17 	ldrd	r2, fp, [sp, #92]	@ 0x5c
 80220a2:	684c      	ldr	r4, [r1, #4]
 80220a4:	680d      	ldr	r5, [r1, #0]
 80220a6:	fb04 0202 	mla	r2, r4, r2, r0
 80220aa:	e9dd 8913 	ldrd	r8, r9, [sp, #76]	@ 0x4c
 80220ae:	f8db 4004 	ldr.w	r4, [fp, #4]
 80220b2:	eb02 0042 	add.w	r0, r2, r2, lsl #1
 80220b6:	3404      	adds	r4, #4
 80220b8:	f8db 2000 	ldr.w	r2, [fp]
 80220bc:	4428      	add	r0, r5
 80220be:	9402      	str	r4, [sp, #8]
 80220c0:	9201      	str	r2, [sp, #4]
 80220c2:	e9dd 2111 	ldrd	r2, r1, [sp, #68]	@ 0x44
 80220c6:	9c03      	ldr	r4, [sp, #12]
 80220c8:	2c00      	cmp	r4, #0
 80220ca:	dc03      	bgt.n	80220d4 <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 80220cc:	9c04      	ldr	r4, [sp, #16]
 80220ce:	2c00      	cmp	r4, #0
 80220d0:	f340 80b7 	ble.w	8022242 <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b6>
 80220d4:	e9db 6702 	ldrd	r6, r7, [fp, #8]
 80220d8:	2b00      	cmp	r3, #0
 80220da:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 80220de:	f501 4100 	add.w	r1, r1, #32768	@ 0x8000
 80220e2:	b234      	sxth	r4, r6
 80220e4:	fa0f fc87 	sxth.w	ip, r7
 80220e8:	f340 80ae 	ble.w	8022248 <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 80220ec:	1415      	asrs	r5, r2, #16
 80220ee:	d406      	bmi.n	80220fe <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80220f0:	42a5      	cmp	r5, r4
 80220f2:	da04      	bge.n	80220fe <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80220f4:	ea5f 4e21 	movs.w	lr, r1, asr #16
 80220f8:	d401      	bmi.n	80220fe <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80220fa:	45e6      	cmp	lr, ip
 80220fc:	db3c      	blt.n	8022178 <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xec>
 80220fe:	3b01      	subs	r3, #1
 8022100:	4442      	add	r2, r8
 8022102:	4449      	add	r1, r9
 8022104:	f100 0003 	add.w	r0, r0, #3
 8022108:	d1f0      	bne.n	80220ec <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 802210a:	9b03      	ldr	r3, [sp, #12]
 802210c:	2b00      	cmp	r3, #0
 802210e:	f340 8098 	ble.w	8022242 <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b6>
 8022112:	ee30 0a04 	vadd.f32	s0, s0, s8
 8022116:	ee70 0aa4 	vadd.f32	s1, s1, s9
 802211a:	eec5 7a80 	vdiv.f32	s15, s11, s0
 802211e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8022122:	ee20 6aa7 	vmul.f32	s12, s1, s15
 8022126:	ee61 7a27 	vmul.f32	s15, s2, s15
 802212a:	ee76 6a62 	vsub.f32	s13, s12, s5
 802212e:	ee37 7ac3 	vsub.f32	s14, s15, s6
 8022132:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8022136:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 802213a:	ee16 2a90 	vmov	r2, s13
 802213e:	3b01      	subs	r3, #1
 8022140:	9303      	str	r3, [sp, #12]
 8022142:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8022144:	9c04      	ldr	r4, [sp, #16]
 8022146:	fb92 f8f3 	sdiv	r8, r2, r3
 802214a:	ee17 2a10 	vmov	r2, s14
 802214e:	eeb0 7a43 	vmov.f32	s14, s6
 8022152:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 8022156:	ee17 1a10 	vmov	r1, s14
 802215a:	eeb0 7a62 	vmov.f32	s14, s5
 802215e:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 8022162:	fb92 f9f3 	sdiv	r9, r2, r3
 8022166:	eeb0 3a67 	vmov.f32	s6, s15
 802216a:	ee17 2a10 	vmov	r2, s14
 802216e:	eef0 2a46 	vmov.f32	s5, s12
 8022172:	bf08      	it	eq
 8022174:	4623      	moveq	r3, r4
 8022176:	e7a6      	b.n	80220c6 <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8022178:	f103 3aff 	add.w	sl, r3, #4294967295
 802217c:	fb0a 2e08 	mla	lr, sl, r8, r2
 8022180:	ea5f 4e2e 	movs.w	lr, lr, asr #16
 8022184:	d56a      	bpl.n	802225c <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d0>
 8022186:	4604      	mov	r4, r0
 8022188:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 802218c:	4418      	add	r0, r3
 802218e:	e002      	b.n	8022196 <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10a>
 8022190:	1415      	asrs	r5, r2, #16
 8022192:	e9db 6702 	ldrd	r6, r7, [fp, #8]
 8022196:	2d00      	cmp	r5, #0
 8022198:	db4a      	blt.n	8022230 <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 802219a:	42b5      	cmp	r5, r6
 802219c:	da48      	bge.n	8022230 <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 802219e:	140b      	asrs	r3, r1, #16
 80221a0:	d446      	bmi.n	8022230 <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 80221a2:	42bb      	cmp	r3, r7
 80221a4:	b236      	sxth	r6, r6
 80221a6:	da43      	bge.n	8022230 <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 80221a8:	9f01      	ldr	r7, [sp, #4]
 80221aa:	fb03 7606 	mla	r6, r3, r6, r7
 80221ae:	5d73      	ldrb	r3, [r6, r5]
 80221b0:	9d02      	ldr	r5, [sp, #8]
 80221b2:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 80221b6:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 80221ba:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
 80221be:	f000 80be 	beq.w	802233e <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b2>
 80221c2:	b2df      	uxtb	r7, r3
 80221c4:	f3c3 2607 	ubfx	r6, r3, #8, #8
 80221c8:	f3c3 4a07 	ubfx	sl, r3, #16, #8
 80221cc:	fa5f f38c 	uxtb.w	r3, ip
 80221d0:	b29d      	uxth	r5, r3
 80221d2:	f1bc 0f00 	cmp.w	ip, #0
 80221d6:	d02b      	beq.n	8022230 <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 80221d8:	43db      	mvns	r3, r3
 80221da:	b2db      	uxtb	r3, r3
 80221dc:	9305      	str	r3, [sp, #20]
 80221de:	f894 e001 	ldrb.w	lr, [r4, #1]
 80221e2:	fb17 f305 	smulbb	r3, r7, r5
 80221e6:	9f05      	ldr	r7, [sp, #20]
 80221e8:	f894 c002 	ldrb.w	ip, [r4, #2]
 80221ec:	fb1e fe07 	smulbb	lr, lr, r7
 80221f0:	fb1c fc07 	smulbb	ip, ip, r7
 80221f4:	fb06 ee05 	mla	lr, r6, r5, lr
 80221f8:	7827      	ldrb	r7, [r4, #0]
 80221fa:	9e05      	ldr	r6, [sp, #20]
 80221fc:	fb0a c505 	mla	r5, sl, r5, ip
 8022200:	fb07 3706 	mla	r7, r7, r6, r3
 8022204:	b2ab      	uxth	r3, r5
 8022206:	b2bf      	uxth	r7, r7
 8022208:	fa1f f68e 	uxth.w	r6, lr
 802220c:	1c7d      	adds	r5, r7, #1
 802220e:	f106 0e01 	add.w	lr, r6, #1
 8022212:	f103 0c01 	add.w	ip, r3, #1
 8022216:	eb0e 2e16 	add.w	lr, lr, r6, lsr #8
 802221a:	eb0c 2613 	add.w	r6, ip, r3, lsr #8
 802221e:	eb05 2317 	add.w	r3, r5, r7, lsr #8
 8022222:	121b      	asrs	r3, r3, #8
 8022224:	ea4f 272e 	mov.w	r7, lr, asr #8
 8022228:	1235      	asrs	r5, r6, #8
 802222a:	7067      	strb	r7, [r4, #1]
 802222c:	70a5      	strb	r5, [r4, #2]
 802222e:	7023      	strb	r3, [r4, #0]
 8022230:	3403      	adds	r4, #3
 8022232:	4284      	cmp	r4, r0
 8022234:	4442      	add	r2, r8
 8022236:	4449      	add	r1, r9
 8022238:	d1aa      	bne.n	8022190 <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x104>
 802223a:	9b03      	ldr	r3, [sp, #12]
 802223c:	2b00      	cmp	r3, #0
 802223e:	f73f af68 	bgt.w	8022112 <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8022242:	b007      	add	sp, #28
 8022244:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8022248:	f43f af5f 	beq.w	802210a <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 802224c:	f103 3aff 	add.w	sl, r3, #4294967295
 8022250:	fb0a 2e08 	mla	lr, sl, r8, r2
 8022254:	ea5f 4e2e 	movs.w	lr, lr, asr #16
 8022258:	f53f af57 	bmi.w	802210a <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 802225c:	4574      	cmp	r4, lr
 802225e:	dd68      	ble.n	8022332 <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
 8022260:	fb0a 1a09 	mla	sl, sl, r9, r1
 8022264:	ea5f 4a2a 	movs.w	sl, sl, asr #16
 8022268:	d463      	bmi.n	8022332 <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
 802226a:	45e2      	cmp	sl, ip
 802226c:	da61      	bge.n	8022332 <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
 802226e:	2b00      	cmp	r3, #0
 8022270:	f77f af4b 	ble.w	802210a <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8022274:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8022278:	eb00 0e03 	add.w	lr, r0, r3
 802227c:	f8cd 804c 	str.w	r8, [sp, #76]	@ 0x4c
 8022280:	3003      	adds	r0, #3
 8022282:	e03b      	b.n	80222fc <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x270>
 8022284:	b2fc      	uxtb	r4, r7
 8022286:	fa5f fc83 	uxtb.w	ip, r3
 802228a:	f3c3 2607 	ubfx	r6, r3, #8, #8
 802228e:	b2a5      	uxth	r5, r4
 8022290:	f3c3 4307 	ubfx	r3, r3, #16, #8
 8022294:	b357      	cbz	r7, 80222ec <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x260>
 8022296:	43e4      	mvns	r4, r4
 8022298:	f810 ac02 	ldrb.w	sl, [r0, #-2]
 802229c:	f810 8c01 	ldrb.w	r8, [r0, #-1]
 80222a0:	b2e4      	uxtb	r4, r4
 80222a2:	fb1c fc05 	smulbb	ip, ip, r5
 80222a6:	fb18 f804 	smulbb	r8, r8, r4
 80222aa:	fb1a fa04 	smulbb	sl, sl, r4
 80222ae:	f810 7c03 	ldrb.w	r7, [r0, #-3]
 80222b2:	fb03 8305 	mla	r3, r3, r5, r8
 80222b6:	fb06 a605 	mla	r6, r6, r5, sl
 80222ba:	fb07 c404 	mla	r4, r7, r4, ip
 80222be:	b2b6      	uxth	r6, r6
 80222c0:	b2a4      	uxth	r4, r4
 80222c2:	b29b      	uxth	r3, r3
 80222c4:	f106 0c01 	add.w	ip, r6, #1
 80222c8:	f103 0801 	add.w	r8, r3, #1
 80222cc:	1c65      	adds	r5, r4, #1
 80222ce:	eb0c 2616 	add.w	r6, ip, r6, lsr #8
 80222d2:	eb08 2313 	add.w	r3, r8, r3, lsr #8
 80222d6:	eb05 2514 	add.w	r5, r5, r4, lsr #8
 80222da:	1236      	asrs	r6, r6, #8
 80222dc:	121b      	asrs	r3, r3, #8
 80222de:	122d      	asrs	r5, r5, #8
 80222e0:	f800 6c02 	strb.w	r6, [r0, #-2]
 80222e4:	f800 3c01 	strb.w	r3, [r0, #-1]
 80222e8:	f800 5c03 	strb.w	r5, [r0, #-3]
 80222ec:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 80222ee:	4586      	cmp	lr, r0
 80222f0:	441a      	add	r2, r3
 80222f2:	4449      	add	r1, r9
 80222f4:	d01b      	beq.n	802232e <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 80222f6:	f9bb 4008 	ldrsh.w	r4, [fp, #8]
 80222fa:	3003      	adds	r0, #3
 80222fc:	9d01      	ldr	r5, [sp, #4]
 80222fe:	140b      	asrs	r3, r1, #16
 8022300:	fb04 5303 	mla	r3, r4, r3, r5
 8022304:	1414      	asrs	r4, r2, #16
 8022306:	5d1b      	ldrb	r3, [r3, r4]
 8022308:	9c02      	ldr	r4, [sp, #8]
 802230a:	f854 3023 	ldr.w	r3, [r4, r3, lsl #2]
 802230e:	0e1f      	lsrs	r7, r3, #24
 8022310:	2fff      	cmp	r7, #255	@ 0xff
 8022312:	d1b7      	bne.n	8022284 <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f8>
 8022314:	0a1d      	lsrs	r5, r3, #8
 8022316:	0c1c      	lsrs	r4, r3, #16
 8022318:	f800 3c03 	strb.w	r3, [r0, #-3]
 802231c:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 802231e:	4586      	cmp	lr, r0
 8022320:	f800 5c02 	strb.w	r5, [r0, #-2]
 8022324:	f800 4c01 	strb.w	r4, [r0, #-1]
 8022328:	441a      	add	r2, r3
 802232a:	4449      	add	r1, r9
 802232c:	d1e3      	bne.n	80222f6 <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26a>
 802232e:	4670      	mov	r0, lr
 8022330:	e6eb      	b.n	802210a <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8022332:	2b00      	cmp	r3, #0
 8022334:	f77f aee9 	ble.w	802210a <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8022338:	4604      	mov	r4, r0
 802233a:	1415      	asrs	r5, r2, #16
 802233c:	e724      	b.n	8022188 <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfc>
 802233e:	0a1e      	lsrs	r6, r3, #8
 8022340:	0c1d      	lsrs	r5, r3, #16
 8022342:	7023      	strb	r3, [r4, #0]
 8022344:	7066      	strb	r6, [r4, #1]
 8022346:	70a5      	strb	r5, [r4, #2]
 8022348:	e772      	b.n	8022230 <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 802234a:	bf00      	nop

0802234c <_ZN8touchgfx8LCDGPU2D55TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 802234c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022350:	b089      	sub	sp, #36	@ 0x24
 8022352:	f89d 006c 	ldrb.w	r0, [sp, #108]	@ 0x6c
 8022356:	9101      	str	r1, [sp, #4]
 8022358:	ea6f 0a00 	mvn.w	sl, r0
 802235c:	e9dd e815 	ldrd	lr, r8, [sp, #84]	@ 0x54
 8022360:	9919      	ldr	r1, [sp, #100]	@ 0x64
 8022362:	9202      	str	r2, [sp, #8]
 8022364:	e9dd 5217 	ldrd	r5, r2, [sp, #92]	@ 0x5c
 8022368:	686c      	ldr	r4, [r5, #4]
 802236a:	682f      	ldr	r7, [r5, #0]
 802236c:	fb04 2401 	mla	r4, r4, r1, r2
 8022370:	9a1a      	ldr	r2, [sp, #104]	@ 0x68
 8022372:	b280      	uxth	r0, r0
 8022374:	e9d2 2100 	ldrd	r2, r1, [r2]
 8022378:	3104      	adds	r1, #4
 802237a:	eb07 0784 	add.w	r7, r7, r4, lsl #2
 802237e:	fa5f fa8a 	uxtb.w	sl, sl
 8022382:	9007      	str	r0, [sp, #28]
 8022384:	9105      	str	r1, [sp, #20]
 8022386:	9200      	str	r2, [sp, #0]
 8022388:	e9dd 2513 	ldrd	r2, r5, [sp, #76]	@ 0x4c
 802238c:	9901      	ldr	r1, [sp, #4]
 802238e:	2900      	cmp	r1, #0
 8022390:	dc03      	bgt.n	802239a <_ZN8touchgfx8LCDGPU2D55TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e>
 8022392:	9902      	ldr	r1, [sp, #8]
 8022394:	2900      	cmp	r1, #0
 8022396:	f340 80b6 	ble.w	8022506 <_ZN8touchgfx8LCDGPU2D55TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
 802239a:	991a      	ldr	r1, [sp, #104]	@ 0x68
 802239c:	2b00      	cmp	r3, #0
 802239e:	e9d1 4602 	ldrd	r4, r6, [r1, #8]
 80223a2:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 80223a6:	f505 4500 	add.w	r5, r5, #32768	@ 0x8000
 80223aa:	b221      	sxth	r1, r4
 80223ac:	fa0f fc86 	sxth.w	ip, r6
 80223b0:	f340 80ac 	ble.w	802250c <_ZN8touchgfx8LCDGPU2D55TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 80223b4:	1410      	asrs	r0, r2, #16
 80223b6:	d406      	bmi.n	80223c6 <_ZN8touchgfx8LCDGPU2D55TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 80223b8:	4288      	cmp	r0, r1
 80223ba:	da04      	bge.n	80223c6 <_ZN8touchgfx8LCDGPU2D55TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 80223bc:	ea5f 4925 	movs.w	r9, r5, asr #16
 80223c0:	d401      	bmi.n	80223c6 <_ZN8touchgfx8LCDGPU2D55TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 80223c2:	45e1      	cmp	r9, ip
 80223c4:	db3e      	blt.n	8022444 <_ZN8touchgfx8LCDGPU2D55TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xf8>
 80223c6:	3b01      	subs	r3, #1
 80223c8:	4472      	add	r2, lr
 80223ca:	4445      	add	r5, r8
 80223cc:	f107 0704 	add.w	r7, r7, #4
 80223d0:	d1f0      	bne.n	80223b4 <_ZN8touchgfx8LCDGPU2D55TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 80223d2:	9b01      	ldr	r3, [sp, #4]
 80223d4:	2b00      	cmp	r3, #0
 80223d6:	f340 8096 	ble.w	8022506 <_ZN8touchgfx8LCDGPU2D55TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
 80223da:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 80223de:	ee30 0a04 	vadd.f32	s0, s0, s8
 80223e2:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80223e6:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80223ea:	ee31 1a05 	vadd.f32	s2, s2, s10
 80223ee:	ee20 6aa7 	vmul.f32	s12, s1, s15
 80223f2:	ee61 7a27 	vmul.f32	s15, s2, s15
 80223f6:	ee76 6a62 	vsub.f32	s13, s12, s5
 80223fa:	ee37 7ac3 	vsub.f32	s14, s15, s6
 80223fe:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8022402:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 8022406:	ee16 2a90 	vmov	r2, s13
 802240a:	3b01      	subs	r3, #1
 802240c:	9301      	str	r3, [sp, #4]
 802240e:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 8022410:	9902      	ldr	r1, [sp, #8]
 8022412:	fb92 fef3 	sdiv	lr, r2, r3
 8022416:	ee17 2a10 	vmov	r2, s14
 802241a:	eeb0 7a43 	vmov.f32	s14, s6
 802241e:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 8022422:	ee17 5a10 	vmov	r5, s14
 8022426:	eeb0 7a62 	vmov.f32	s14, s5
 802242a:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 802242e:	fb92 f8f3 	sdiv	r8, r2, r3
 8022432:	eeb0 3a67 	vmov.f32	s6, s15
 8022436:	ee17 2a10 	vmov	r2, s14
 802243a:	eef0 2a46 	vmov.f32	s5, s12
 802243e:	bf08      	it	eq
 8022440:	460b      	moveq	r3, r1
 8022442:	e7a3      	b.n	802238c <_ZN8touchgfx8LCDGPU2D55TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 8022444:	f103 39ff 	add.w	r9, r3, #4294967295
 8022448:	fb09 2b0e 	mla	fp, r9, lr, r2
 802244c:	ea5f 4b2b 	movs.w	fp, fp, asr #16
 8022450:	d566      	bpl.n	8022520 <_ZN8touchgfx8LCDGPU2D55TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8022452:	e9cd 7303 	strd	r7, r3, [sp, #12]
 8022456:	991a      	ldr	r1, [sp, #104]	@ 0x68
 8022458:	e002      	b.n	8022460 <_ZN8touchgfx8LCDGPU2D55TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x114>
 802245a:	1410      	asrs	r0, r2, #16
 802245c:	e9d1 4602 	ldrd	r4, r6, [r1, #8]
 8022460:	2800      	cmp	r0, #0
 8022462:	f109 39ff 	add.w	r9, r9, #4294967295
 8022466:	4472      	add	r2, lr
 8022468:	db3f      	blt.n	80224ea <_ZN8touchgfx8LCDGPU2D55TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19e>
 802246a:	42a0      	cmp	r0, r4
 802246c:	da3d      	bge.n	80224ea <_ZN8touchgfx8LCDGPU2D55TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19e>
 802246e:	ea5f 4c25 	movs.w	ip, r5, asr #16
 8022472:	d43a      	bmi.n	80224ea <_ZN8touchgfx8LCDGPU2D55TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19e>
 8022474:	45b4      	cmp	ip, r6
 8022476:	da38      	bge.n	80224ea <_ZN8touchgfx8LCDGPU2D55TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19e>
 8022478:	9e00      	ldr	r6, [sp, #0]
 802247a:	b224      	sxth	r4, r4
 802247c:	fb0c 6404 	mla	r4, ip, r4, r6
 8022480:	f814 b000 	ldrb.w	fp, [r4, r0]
 8022484:	7838      	ldrb	r0, [r7, #0]
 8022486:	9c05      	ldr	r4, [sp, #20]
 8022488:	fb10 f30a 	smulbb	r3, r0, sl
 802248c:	9306      	str	r3, [sp, #24]
 802248e:	9b07      	ldr	r3, [sp, #28]
 8022490:	eb0b 0b4b 	add.w	fp, fp, fp, lsl #1
 8022494:	4618      	mov	r0, r3
 8022496:	eb04 060b 	add.w	r6, r4, fp
 802249a:	78b4      	ldrb	r4, [r6, #2]
 802249c:	7876      	ldrb	r6, [r6, #1]
 802249e:	fb14 fc03 	smulbb	ip, r4, r3
 80224a2:	9c05      	ldr	r4, [sp, #20]
 80224a4:	fb16 f603 	smulbb	r6, r6, r3
 80224a8:	f814 400b 	ldrb.w	r4, [r4, fp]
 80224ac:	9b06      	ldr	r3, [sp, #24]
 80224ae:	f897 b001 	ldrb.w	fp, [r7, #1]
 80224b2:	fb04 3000 	mla	r0, r4, r0, r3
 80224b6:	78bc      	ldrb	r4, [r7, #2]
 80224b8:	fb0b 660a 	mla	r6, fp, sl, r6
 80224bc:	fb04 c40a 	mla	r4, r4, sl, ip
 80224c0:	b2b6      	uxth	r6, r6
 80224c2:	b280      	uxth	r0, r0
 80224c4:	b2a4      	uxth	r4, r4
 80224c6:	f106 0c01 	add.w	ip, r6, #1
 80224ca:	eb0c 2616 	add.w	r6, ip, r6, lsr #8
 80224ce:	f104 0b01 	add.w	fp, r4, #1
 80224d2:	f100 0c01 	add.w	ip, r0, #1
 80224d6:	eb0b 2414 	add.w	r4, fp, r4, lsr #8
 80224da:	eb0c 2010 	add.w	r0, ip, r0, lsr #8
 80224de:	1236      	asrs	r6, r6, #8
 80224e0:	1224      	asrs	r4, r4, #8
 80224e2:	1200      	asrs	r0, r0, #8
 80224e4:	707e      	strb	r6, [r7, #1]
 80224e6:	70bc      	strb	r4, [r7, #2]
 80224e8:	7038      	strb	r0, [r7, #0]
 80224ea:	f1b9 3fff 	cmp.w	r9, #4294967295
 80224ee:	f107 0704 	add.w	r7, r7, #4
 80224f2:	4445      	add	r5, r8
 80224f4:	d1b1      	bne.n	802245a <_ZN8touchgfx8LCDGPU2D55TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
 80224f6:	e9dd b303 	ldrd	fp, r3, [sp, #12]
 80224fa:	eb0b 0783 	add.w	r7, fp, r3, lsl #2
 80224fe:	9b01      	ldr	r3, [sp, #4]
 8022500:	2b00      	cmp	r3, #0
 8022502:	f73f af6a 	bgt.w	80223da <_ZN8touchgfx8LCDGPU2D55TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8022506:	b009      	add	sp, #36	@ 0x24
 8022508:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802250c:	f43f af61 	beq.w	80223d2 <_ZN8touchgfx8LCDGPU2D55TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8022510:	f103 39ff 	add.w	r9, r3, #4294967295
 8022514:	fb09 2b0e 	mla	fp, r9, lr, r2
 8022518:	ea5f 4b2b 	movs.w	fp, fp, asr #16
 802251c:	f53f af59 	bmi.w	80223d2 <_ZN8touchgfx8LCDGPU2D55TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8022520:	4559      	cmp	r1, fp
 8022522:	dd57      	ble.n	80225d4 <_ZN8touchgfx8LCDGPU2D55TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 8022524:	fb09 5008 	mla	r0, r9, r8, r5
 8022528:	1400      	asrs	r0, r0, #16
 802252a:	d453      	bmi.n	80225d4 <_ZN8touchgfx8LCDGPU2D55TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 802252c:	4560      	cmp	r0, ip
 802252e:	da51      	bge.n	80225d4 <_ZN8touchgfx8LCDGPU2D55TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 8022530:	2b00      	cmp	r3, #0
 8022532:	f77f af4e 	ble.w	80223d2 <_ZN8touchgfx8LCDGPU2D55TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8022536:	e9cd 7303 	strd	r7, r3, [sp, #12]
 802253a:	f107 0c04 	add.w	ip, r7, #4
 802253e:	f8dd b014 	ldr.w	fp, [sp, #20]
 8022542:	460b      	mov	r3, r1
 8022544:	9f07      	ldr	r7, [sp, #28]
 8022546:	e002      	b.n	802254e <_ZN8touchgfx8LCDGPU2D55TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
 8022548:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
 802254a:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 802254e:	9800      	ldr	r0, [sp, #0]
 8022550:	1429      	asrs	r1, r5, #16
 8022552:	fb03 0301 	mla	r3, r3, r1, r0
 8022556:	1411      	asrs	r1, r2, #16
 8022558:	5c5e      	ldrb	r6, [r3, r1]
 802255a:	f81c 3c04 	ldrb.w	r3, [ip, #-4]
 802255e:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8022562:	eb0b 0006 	add.w	r0, fp, r6
 8022566:	7881      	ldrb	r1, [r0, #2]
 8022568:	7840      	ldrb	r0, [r0, #1]
 802256a:	fb13 f30a 	smulbb	r3, r3, sl
 802256e:	fb10 f007 	smulbb	r0, r0, r7
 8022572:	fb11 f407 	smulbb	r4, r1, r7
 8022576:	f81b 1006 	ldrb.w	r1, [fp, r6]
 802257a:	f81c 6c03 	ldrb.w	r6, [ip, #-3]
 802257e:	fb01 3307 	mla	r3, r1, r7, r3
 8022582:	f81c 1c02 	ldrb.w	r1, [ip, #-2]
 8022586:	fb06 000a 	mla	r0, r6, sl, r0
 802258a:	fb01 410a 	mla	r1, r1, sl, r4
 802258e:	b280      	uxth	r0, r0
 8022590:	b29b      	uxth	r3, r3
 8022592:	b289      	uxth	r1, r1
 8022594:	1c44      	adds	r4, r0, #1
 8022596:	eb04 2010 	add.w	r0, r4, r0, lsr #8
 802259a:	1c4e      	adds	r6, r1, #1
 802259c:	1c5c      	adds	r4, r3, #1
 802259e:	eb06 2111 	add.w	r1, r6, r1, lsr #8
 80225a2:	eb04 2313 	add.w	r3, r4, r3, lsr #8
 80225a6:	f109 39ff 	add.w	r9, r9, #4294967295
 80225aa:	1200      	asrs	r0, r0, #8
 80225ac:	1209      	asrs	r1, r1, #8
 80225ae:	121b      	asrs	r3, r3, #8
 80225b0:	f1b9 3fff 	cmp.w	r9, #4294967295
 80225b4:	f80c 0c03 	strb.w	r0, [ip, #-3]
 80225b8:	f80c 1c02 	strb.w	r1, [ip, #-2]
 80225bc:	f80c 3c04 	strb.w	r3, [ip, #-4]
 80225c0:	4445      	add	r5, r8
 80225c2:	4472      	add	r2, lr
 80225c4:	f10c 0c04 	add.w	ip, ip, #4
 80225c8:	d1be      	bne.n	8022548 <_ZN8touchgfx8LCDGPU2D55TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 80225ca:	e9dd 7303 	ldrd	r7, r3, [sp, #12]
 80225ce:	eb07 0783 	add.w	r7, r7, r3, lsl #2
 80225d2:	e6fe      	b.n	80223d2 <_ZN8touchgfx8LCDGPU2D55TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 80225d4:	2b00      	cmp	r3, #0
 80225d6:	f77f aefc 	ble.w	80223d2 <_ZN8touchgfx8LCDGPU2D55TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 80225da:	1410      	asrs	r0, r2, #16
 80225dc:	e9cd 7303 	strd	r7, r3, [sp, #12]
 80225e0:	991a      	ldr	r1, [sp, #104]	@ 0x68
 80225e2:	e73d      	b.n	8022460 <_ZN8touchgfx8LCDGPU2D55TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x114>

080225e4 <_ZN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80225e4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80225e8:	468a      	mov	sl, r1
 80225ea:	eef7 5a00 	vmov.f32	s11, #112	@ 0x3f800000  1.0
 80225ee:	46d1      	mov	r9, sl
 80225f0:	b087      	sub	sp, #28
 80225f2:	e9dd 1415 	ldrd	r1, r4, [sp, #84]	@ 0x54
 80225f6:	684d      	ldr	r5, [r1, #4]
 80225f8:	9203      	str	r2, [sp, #12]
 80225fa:	e9dd 2e17 	ldrd	r2, lr, [sp, #92]	@ 0x5c
 80225fe:	fb05 4402 	mla	r4, r5, r2, r4
 8022602:	e9de 2000 	ldrd	r2, r0, [lr]
 8022606:	e9dd 6713 	ldrd	r6, r7, [sp, #76]	@ 0x4c
 802260a:	680d      	ldr	r5, [r1, #0]
 802260c:	f100 0b04 	add.w	fp, r0, #4
 8022610:	eb05 0584 	add.w	r5, r5, r4, lsl #2
 8022614:	9205      	str	r2, [sp, #20]
 8022616:	e9dd 2111 	ldrd	r2, r1, [sp, #68]	@ 0x44
 802261a:	f1b9 0f00 	cmp.w	r9, #0
 802261e:	dc03      	bgt.n	8022628 <_ZN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44>
 8022620:	9803      	ldr	r0, [sp, #12]
 8022622:	2800      	cmp	r0, #0
 8022624:	f340 8091 	ble.w	802274a <_ZN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x166>
 8022628:	e9de 8a02 	ldrd	r8, sl, [lr, #8]
 802262c:	2b00      	cmp	r3, #0
 802262e:	fa0f f088 	sxth.w	r0, r8
 8022632:	fa0f f48a 	sxth.w	r4, sl
 8022636:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 802263a:	f501 4100 	add.w	r1, r1, #32768	@ 0x8000
 802263e:	9001      	str	r0, [sp, #4]
 8022640:	9402      	str	r4, [sp, #8]
 8022642:	f340 8085 	ble.w	8022750 <_ZN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 8022646:	1414      	asrs	r4, r2, #16
 8022648:	d408      	bmi.n	802265c <_ZN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 802264a:	9801      	ldr	r0, [sp, #4]
 802264c:	4284      	cmp	r4, r0
 802264e:	da05      	bge.n	802265c <_ZN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8022650:	ea5f 4c21 	movs.w	ip, r1, asr #16
 8022654:	d402      	bmi.n	802265c <_ZN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8022656:	9802      	ldr	r0, [sp, #8]
 8022658:	4584      	cmp	ip, r0
 802265a:	db3b      	blt.n	80226d4 <_ZN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xf0>
 802265c:	3b01      	subs	r3, #1
 802265e:	4432      	add	r2, r6
 8022660:	4439      	add	r1, r7
 8022662:	f105 0504 	add.w	r5, r5, #4
 8022666:	d1ee      	bne.n	8022646 <_ZN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x62>
 8022668:	f1b9 0f00 	cmp.w	r9, #0
 802266c:	dd6d      	ble.n	802274a <_ZN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x166>
 802266e:	ee30 0a04 	vadd.f32	s0, s0, s8
 8022672:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8022676:	eec5 7a80 	vdiv.f32	s15, s11, s0
 802267a:	ee31 1a05 	vadd.f32	s2, s2, s10
 802267e:	ee20 6aa7 	vmul.f32	s12, s1, s15
 8022682:	ee61 7a27 	vmul.f32	s15, s2, s15
 8022686:	ee76 6a62 	vsub.f32	s13, s12, s5
 802268a:	ee37 7ac3 	vsub.f32	s14, s15, s6
 802268e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8022692:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 8022696:	ee16 2a90 	vmov	r2, s13
 802269a:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 802269c:	9803      	ldr	r0, [sp, #12]
 802269e:	fb92 f6f3 	sdiv	r6, r2, r3
 80226a2:	ee17 2a10 	vmov	r2, s14
 80226a6:	eeb0 7a43 	vmov.f32	s14, s6
 80226aa:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 80226ae:	ee17 1a10 	vmov	r1, s14
 80226b2:	eeb0 7a62 	vmov.f32	s14, s5
 80226b6:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 80226ba:	f1b9 0901 	subs.w	r9, r9, #1
 80226be:	fb92 f7f3 	sdiv	r7, r2, r3
 80226c2:	eeb0 3a67 	vmov.f32	s6, s15
 80226c6:	ee17 2a10 	vmov	r2, s14
 80226ca:	eef0 2a46 	vmov.f32	s5, s12
 80226ce:	bf08      	it	eq
 80226d0:	4603      	moveq	r3, r0
 80226d2:	e7a2      	b.n	802261a <_ZN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36>
 80226d4:	f103 3cff 	add.w	ip, r3, #4294967295
 80226d8:	9404      	str	r4, [sp, #16]
 80226da:	fb06 240c 	mla	r4, r6, ip, r2
 80226de:	1424      	asrs	r4, r4, #16
 80226e0:	d578      	bpl.n	80227d4 <_ZN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 80226e2:	9613      	str	r6, [sp, #76]	@ 0x4c
 80226e4:	2000      	movs	r0, #0
 80226e6:	4646      	mov	r6, r8
 80226e8:	46d4      	mov	ip, sl
 80226ea:	9c04      	ldr	r4, [sp, #16]
 80226ec:	f8dd 804c 	ldr.w	r8, [sp, #76]	@ 0x4c
 80226f0:	e002      	b.n	80226f8 <_ZN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x114>
 80226f2:	1414      	asrs	r4, r2, #16
 80226f4:	e9de 6c02 	ldrd	r6, ip, [lr, #8]
 80226f8:	2c00      	cmp	r4, #0
 80226fa:	4442      	add	r2, r8
 80226fc:	db1c      	blt.n	8022738 <_ZN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 80226fe:	42b4      	cmp	r4, r6
 8022700:	da1a      	bge.n	8022738 <_ZN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 8022702:	ea5f 4a21 	movs.w	sl, r1, asr #16
 8022706:	d417      	bmi.n	8022738 <_ZN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 8022708:	45e2      	cmp	sl, ip
 802270a:	da15      	bge.n	8022738 <_ZN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 802270c:	fa0f fc86 	sxth.w	ip, r6
 8022710:	9e05      	ldr	r6, [sp, #20]
 8022712:	fb0a 6c0c 	mla	ip, sl, ip, r6
 8022716:	f81c 4004 	ldrb.w	r4, [ip, r4]
 802271a:	eb05 0680 	add.w	r6, r5, r0, lsl #2
 802271e:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 8022722:	f81b c004 	ldrb.w	ip, [fp, r4]
 8022726:	445c      	add	r4, fp
 8022728:	f805 c020 	strb.w	ip, [r5, r0, lsl #2]
 802272c:	f894 c001 	ldrb.w	ip, [r4, #1]
 8022730:	f886 c001 	strb.w	ip, [r6, #1]
 8022734:	78a4      	ldrb	r4, [r4, #2]
 8022736:	70b4      	strb	r4, [r6, #2]
 8022738:	3001      	adds	r0, #1
 802273a:	4283      	cmp	r3, r0
 802273c:	4439      	add	r1, r7
 802273e:	d1d8      	bne.n	80226f2 <_ZN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
 8022740:	eb05 0583 	add.w	r5, r5, r3, lsl #2
 8022744:	f1b9 0f00 	cmp.w	r9, #0
 8022748:	dc91      	bgt.n	802266e <_ZN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 802274a:	b007      	add	sp, #28
 802274c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8022750:	d08a      	beq.n	8022668 <_ZN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8022752:	f103 3cff 	add.w	ip, r3, #4294967295
 8022756:	fb0c 2406 	mla	r4, ip, r6, r2
 802275a:	1424      	asrs	r4, r4, #16
 802275c:	d484      	bmi.n	8022668 <_ZN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 802275e:	42a0      	cmp	r0, r4
 8022760:	dd32      	ble.n	80227c8 <_ZN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 8022762:	fb07 140c 	mla	r4, r7, ip, r1
 8022766:	1420      	asrs	r0, r4, #16
 8022768:	d42e      	bmi.n	80227c8 <_ZN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 802276a:	9c02      	ldr	r4, [sp, #8]
 802276c:	4284      	cmp	r4, r0
 802276e:	dd2b      	ble.n	80227c8 <_ZN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 8022770:	2b00      	cmp	r3, #0
 8022772:	f77f af79 	ble.w	8022668 <_ZN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8022776:	1d2c      	adds	r4, r5, #4
 8022778:	f8dd a014 	ldr.w	sl, [sp, #20]
 802277c:	f8dd 8004 	ldr.w	r8, [sp, #4]
 8022780:	e001      	b.n	8022786 <_ZN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
 8022782:	f9be 8008 	ldrsh.w	r8, [lr, #8]
 8022786:	1408      	asrs	r0, r1, #16
 8022788:	fb08 a000 	mla	r0, r8, r0, sl
 802278c:	ea4f 4822 	mov.w	r8, r2, asr #16
 8022790:	f810 0008 	ldrb.w	r0, [r0, r8]
 8022794:	f10c 3cff 	add.w	ip, ip, #4294967295
 8022798:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 802279c:	f81b 8000 	ldrb.w	r8, [fp, r0]
 80227a0:	4458      	add	r0, fp
 80227a2:	f804 8c04 	strb.w	r8, [r4, #-4]
 80227a6:	f890 8001 	ldrb.w	r8, [r0, #1]
 80227aa:	f1bc 3fff 	cmp.w	ip, #4294967295
 80227ae:	f804 8c03 	strb.w	r8, [r4, #-3]
 80227b2:	7880      	ldrb	r0, [r0, #2]
 80227b4:	4439      	add	r1, r7
 80227b6:	f804 0c02 	strb.w	r0, [r4, #-2]
 80227ba:	4432      	add	r2, r6
 80227bc:	f104 0404 	add.w	r4, r4, #4
 80227c0:	d1df      	bne.n	8022782 <_ZN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19e>
 80227c2:	eb05 0583 	add.w	r5, r5, r3, lsl #2
 80227c6:	e7bd      	b.n	8022744 <_ZN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x160>
 80227c8:	2b00      	cmp	r3, #0
 80227ca:	f77f af4d 	ble.w	8022668 <_ZN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 80227ce:	1410      	asrs	r0, r2, #16
 80227d0:	9004      	str	r0, [sp, #16]
 80227d2:	e786      	b.n	80226e2 <_ZN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfe>
 80227d4:	9801      	ldr	r0, [sp, #4]
 80227d6:	e7c2      	b.n	802275e <_ZN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17a>

080227d8 <_ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80227d8:	eef7 5a00 	vmov.f32	s11, #112	@ 0x3f800000  1.0
 80227dc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80227e0:	b08b      	sub	sp, #44	@ 0x2c
 80227e2:	e9cd 1201 	strd	r1, r2, [sp, #4]
 80227e6:	e9dd 2119 	ldrd	r2, r1, [sp, #100]	@ 0x64
 80227ea:	981b      	ldr	r0, [sp, #108]	@ 0x6c
 80227ec:	6854      	ldr	r4, [r2, #4]
 80227ee:	6816      	ldr	r6, [r2, #0]
 80227f0:	fb04 1000 	mla	r0, r4, r0, r1
 80227f4:	e9dd 4b17 	ldrd	r4, fp, [sp, #92]	@ 0x5c
 80227f8:	9a1c      	ldr	r2, [sp, #112]	@ 0x70
 80227fa:	f89d 7074 	ldrb.w	r7, [sp, #116]	@ 0x74
 80227fe:	e9d2 2500 	ldrd	r2, r5, [r2]
 8022802:	3504      	adds	r5, #4
 8022804:	9703      	str	r7, [sp, #12]
 8022806:	eb06 0080 	add.w	r0, r6, r0, lsl #2
 802280a:	9507      	str	r5, [sp, #28]
 802280c:	9206      	str	r2, [sp, #24]
 802280e:	e9dd 2115 	ldrd	r2, r1, [sp, #84]	@ 0x54
 8022812:	9d01      	ldr	r5, [sp, #4]
 8022814:	2d00      	cmp	r5, #0
 8022816:	dc03      	bgt.n	8022820 <_ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8022818:	9d02      	ldr	r5, [sp, #8]
 802281a:	2d00      	cmp	r5, #0
 802281c:	f340 80d5 	ble.w	80229ca <_ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f2>
 8022820:	9d1c      	ldr	r5, [sp, #112]	@ 0x70
 8022822:	2b00      	cmp	r3, #0
 8022824:	e9d5 7c02 	ldrd	r7, ip, [r5, #8]
 8022828:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 802282c:	f501 4100 	add.w	r1, r1, #32768	@ 0x8000
 8022830:	b23d      	sxth	r5, r7
 8022832:	fa0f fe8c 	sxth.w	lr, ip
 8022836:	f340 80cb 	ble.w	80229d0 <_ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f8>
 802283a:	1416      	asrs	r6, r2, #16
 802283c:	d406      	bmi.n	802284c <_ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 802283e:	42ae      	cmp	r6, r5
 8022840:	da04      	bge.n	802284c <_ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8022842:	ea5f 4821 	movs.w	r8, r1, asr #16
 8022846:	d401      	bmi.n	802284c <_ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8022848:	45f0      	cmp	r8, lr
 802284a:	db3c      	blt.n	80228c6 <_ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xee>
 802284c:	3b01      	subs	r3, #1
 802284e:	4422      	add	r2, r4
 8022850:	4459      	add	r1, fp
 8022852:	f100 0004 	add.w	r0, r0, #4
 8022856:	d1f0      	bne.n	802283a <_ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x62>
 8022858:	9b01      	ldr	r3, [sp, #4]
 802285a:	2b00      	cmp	r3, #0
 802285c:	f340 80b5 	ble.w	80229ca <_ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f2>
 8022860:	ee30 0a04 	vadd.f32	s0, s0, s8
 8022864:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8022868:	eec5 7a80 	vdiv.f32	s15, s11, s0
 802286c:	ee31 1a05 	vadd.f32	s2, s2, s10
 8022870:	ee20 6aa7 	vmul.f32	s12, s1, s15
 8022874:	ee61 7a27 	vmul.f32	s15, s2, s15
 8022878:	ee76 6a62 	vsub.f32	s13, s12, s5
 802287c:	ee37 7ac3 	vsub.f32	s14, s15, s6
 8022880:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8022884:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 8022888:	ee16 2a90 	vmov	r2, s13
 802288c:	3b01      	subs	r3, #1
 802288e:	9301      	str	r3, [sp, #4]
 8022890:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 8022892:	9d02      	ldr	r5, [sp, #8]
 8022894:	fb92 f4f3 	sdiv	r4, r2, r3
 8022898:	ee17 2a10 	vmov	r2, s14
 802289c:	eeb0 7a43 	vmov.f32	s14, s6
 80228a0:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 80228a4:	ee17 1a10 	vmov	r1, s14
 80228a8:	eeb0 7a62 	vmov.f32	s14, s5
 80228ac:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 80228b0:	fb92 fbf3 	sdiv	fp, r2, r3
 80228b4:	eeb0 3a67 	vmov.f32	s6, s15
 80228b8:	ee17 2a10 	vmov	r2, s14
 80228bc:	eef0 2a46 	vmov.f32	s5, s12
 80228c0:	bf08      	it	eq
 80228c2:	462b      	moveq	r3, r5
 80228c4:	e7a5      	b.n	8022812 <_ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 80228c6:	f103 38ff 	add.w	r8, r3, #4294967295
 80228ca:	fb08 2904 	mla	r9, r8, r4, r2
 80228ce:	ea5f 4929 	movs.w	r9, r9, asr #16
 80228d2:	f140 8087 	bpl.w	80229e4 <_ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20c>
 80228d6:	f1c3 0900 	rsb	r9, r3, #0
 80228da:	4698      	mov	r8, r3
 80228dc:	2500      	movs	r5, #0
 80228de:	9004      	str	r0, [sp, #16]
 80228e0:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 80228e2:	e002      	b.n	80228ea <_ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x112>
 80228e4:	1416      	asrs	r6, r2, #16
 80228e6:	e9d3 7c02 	ldrd	r7, ip, [r3, #8]
 80228ea:	2e00      	cmp	r6, #0
 80228ec:	4422      	add	r2, r4
 80228ee:	db61      	blt.n	80229b4 <_ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>
 80228f0:	42be      	cmp	r6, r7
 80228f2:	da5f      	bge.n	80229b4 <_ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>
 80228f4:	ea5f 4e21 	movs.w	lr, r1, asr #16
 80228f8:	d45c      	bmi.n	80229b4 <_ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>
 80228fa:	45e6      	cmp	lr, ip
 80228fc:	b23f      	sxth	r7, r7
 80228fe:	da59      	bge.n	80229b4 <_ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>
 8022900:	9806      	ldr	r0, [sp, #24]
 8022902:	fb0e 0707 	mla	r7, lr, r7, r0
 8022906:	9807      	ldr	r0, [sp, #28]
 8022908:	5dbe      	ldrb	r6, [r7, r6]
 802290a:	ebc5 7785 	rsb	r7, r5, r5, lsl #30
 802290e:	f850 6026 	ldr.w	r6, [r0, r6, lsl #2]
 8022912:	9804      	ldr	r0, [sp, #16]
 8022914:	9705      	str	r7, [sp, #20]
 8022916:	eb00 0087 	add.w	r0, r0, r7, lsl #2
 802291a:	0e37      	lsrs	r7, r6, #24
 802291c:	9008      	str	r0, [sp, #32]
 802291e:	d049      	beq.n	80229b4 <_ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>
 8022920:	9803      	ldr	r0, [sp, #12]
 8022922:	fa5f fa86 	uxtb.w	sl, r6
 8022926:	fb00 f707 	mul.w	r7, r0, r7
 802292a:	9805      	ldr	r0, [sp, #20]
 802292c:	f107 0c01 	add.w	ip, r7, #1
 8022930:	eb0c 2c27 	add.w	ip, ip, r7, asr #8
 8022934:	ea4f 2c2c 	mov.w	ip, ip, asr #8
 8022938:	4686      	mov	lr, r0
 802293a:	ea6f 070c 	mvn.w	r7, ip
 802293e:	fa1f fc8c 	uxth.w	ip, ip
 8022942:	fb1a fa0c 	smulbb	sl, sl, ip
 8022946:	9804      	ldr	r0, [sp, #16]
 8022948:	b2ff      	uxtb	r7, r7
 802294a:	f810 e02e 	ldrb.w	lr, [r0, lr, lsl #2]
 802294e:	9805      	ldr	r0, [sp, #20]
 8022950:	fb0e ae07 	mla	lr, lr, r7, sl
 8022954:	fa1f fe8e 	uxth.w	lr, lr
 8022958:	f10e 0a01 	add.w	sl, lr, #1
 802295c:	eb0a 2e1e 	add.w	lr, sl, lr, lsr #8
 8022960:	f3c6 2a07 	ubfx	sl, r6, #8, #8
 8022964:	f3c6 4607 	ubfx	r6, r6, #16, #8
 8022968:	fb16 f60c 	smulbb	r6, r6, ip
 802296c:	9609      	str	r6, [sp, #36]	@ 0x24
 802296e:	4606      	mov	r6, r0
 8022970:	9804      	ldr	r0, [sp, #16]
 8022972:	ea4f 2e2e 	mov.w	lr, lr, asr #8
 8022976:	f800 e026 	strb.w	lr, [r0, r6, lsl #2]
 802297a:	fb1a fa0c 	smulbb	sl, sl, ip
 802297e:	9808      	ldr	r0, [sp, #32]
 8022980:	9e09      	ldr	r6, [sp, #36]	@ 0x24
 8022982:	f890 e002 	ldrb.w	lr, [r0, #2]
 8022986:	f890 c001 	ldrb.w	ip, [r0, #1]
 802298a:	fb0e 6607 	mla	r6, lr, r7, r6
 802298e:	fb0c ac07 	mla	ip, ip, r7, sl
 8022992:	b2b6      	uxth	r6, r6
 8022994:	fa1f fe8c 	uxth.w	lr, ip
 8022998:	1c77      	adds	r7, r6, #1
 802299a:	f10e 0c01 	add.w	ip, lr, #1
 802299e:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 80229a2:	eb07 2616 	add.w	r6, r7, r6, lsr #8
 80229a6:	ea4f 272c 	mov.w	r7, ip, asr #8
 80229aa:	ea4f 2c26 	mov.w	ip, r6, asr #8
 80229ae:	7047      	strb	r7, [r0, #1]
 80229b0:	f880 c002 	strb.w	ip, [r0, #2]
 80229b4:	3d01      	subs	r5, #1
 80229b6:	45a9      	cmp	r9, r5
 80229b8:	4459      	add	r1, fp
 80229ba:	d193      	bne.n	80228e4 <_ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 80229bc:	9b01      	ldr	r3, [sp, #4]
 80229be:	9804      	ldr	r0, [sp, #16]
 80229c0:	2b00      	cmp	r3, #0
 80229c2:	eb00 0088 	add.w	r0, r0, r8, lsl #2
 80229c6:	f73f af4b 	bgt.w	8022860 <_ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 80229ca:	b00b      	add	sp, #44	@ 0x2c
 80229cc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80229d0:	f43f af42 	beq.w	8022858 <_ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 80229d4:	f103 38ff 	add.w	r8, r3, #4294967295
 80229d8:	fb08 2904 	mla	r9, r8, r4, r2
 80229dc:	ea5f 4929 	movs.w	r9, r9, asr #16
 80229e0:	f53f af3a 	bmi.w	8022858 <_ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 80229e4:	454d      	cmp	r5, r9
 80229e6:	dd68      	ble.n	8022aba <_ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e2>
 80229e8:	fb08 160b 	mla	r6, r8, fp, r1
 80229ec:	1436      	asrs	r6, r6, #16
 80229ee:	d464      	bmi.n	8022aba <_ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e2>
 80229f0:	4576      	cmp	r6, lr
 80229f2:	da62      	bge.n	8022aba <_ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e2>
 80229f4:	2b00      	cmp	r3, #0
 80229f6:	f77f af2f 	ble.w	8022858 <_ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 80229fa:	e9dd 6706 	ldrd	r6, r7, [sp, #24]
 80229fe:	f100 0e04 	add.w	lr, r0, #4
 8022a02:	e9cd 0304 	strd	r0, r3, [sp, #16]
 8022a06:	e002      	b.n	8022a0e <_ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 8022a08:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8022a0a:	f9b3 5008 	ldrsh.w	r5, [r3, #8]
 8022a0e:	140b      	asrs	r3, r1, #16
 8022a10:	fb05 6303 	mla	r3, r5, r3, r6
 8022a14:	1410      	asrs	r0, r2, #16
 8022a16:	5c1b      	ldrb	r3, [r3, r0]
 8022a18:	f108 38ff 	add.w	r8, r8, #4294967295
 8022a1c:	f857 3023 	ldr.w	r3, [r7, r3, lsl #2]
 8022a20:	4422      	add	r2, r4
 8022a22:	0e18      	lsrs	r0, r3, #24
 8022a24:	4459      	add	r1, fp
 8022a26:	d03e      	beq.n	8022aa6 <_ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ce>
 8022a28:	9d03      	ldr	r5, [sp, #12]
 8022a2a:	fa5f fc83 	uxtb.w	ip, r3
 8022a2e:	fb05 f000 	mul.w	r0, r5, r0
 8022a32:	f100 0901 	add.w	r9, r0, #1
 8022a36:	eb09 2920 	add.w	r9, r9, r0, asr #8
 8022a3a:	ea4f 2929 	mov.w	r9, r9, asr #8
 8022a3e:	ea6f 0009 	mvn.w	r0, r9
 8022a42:	fa1f f989 	uxth.w	r9, r9
 8022a46:	fb1c fc09 	smulbb	ip, ip, r9
 8022a4a:	f3c3 2507 	ubfx	r5, r3, #8, #8
 8022a4e:	f3c3 4307 	ubfx	r3, r3, #16, #8
 8022a52:	fb15 fa09 	smulbb	sl, r5, r9
 8022a56:	fb13 f309 	smulbb	r3, r3, r9
 8022a5a:	f81e 9c04 	ldrb.w	r9, [lr, #-4]
 8022a5e:	b2c0      	uxtb	r0, r0
 8022a60:	fb09 cc00 	mla	ip, r9, r0, ip
 8022a64:	f81e 5c03 	ldrb.w	r5, [lr, #-3]
 8022a68:	f81e 9c02 	ldrb.w	r9, [lr, #-2]
 8022a6c:	fb05 a500 	mla	r5, r5, r0, sl
 8022a70:	fb09 3300 	mla	r3, r9, r0, r3
 8022a74:	fa1f fc8c 	uxth.w	ip, ip
 8022a78:	b2ad      	uxth	r5, r5
 8022a7a:	b29b      	uxth	r3, r3
 8022a7c:	f10c 0a01 	add.w	sl, ip, #1
 8022a80:	f105 0901 	add.w	r9, r5, #1
 8022a84:	1c58      	adds	r0, r3, #1
 8022a86:	eb0a 2c1c 	add.w	ip, sl, ip, lsr #8
 8022a8a:	eb09 2515 	add.w	r5, r9, r5, lsr #8
 8022a8e:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 8022a92:	ea4f 2c2c 	mov.w	ip, ip, asr #8
 8022a96:	122d      	asrs	r5, r5, #8
 8022a98:	121b      	asrs	r3, r3, #8
 8022a9a:	f80e cc04 	strb.w	ip, [lr, #-4]
 8022a9e:	f80e 5c03 	strb.w	r5, [lr, #-3]
 8022aa2:	f80e 3c02 	strb.w	r3, [lr, #-2]
 8022aa6:	f1b8 3fff 	cmp.w	r8, #4294967295
 8022aaa:	f10e 0e04 	add.w	lr, lr, #4
 8022aae:	d1ab      	bne.n	8022a08 <_ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x230>
 8022ab0:	e9dd 0304 	ldrd	r0, r3, [sp, #16]
 8022ab4:	eb00 0083 	add.w	r0, r0, r3, lsl #2
 8022ab8:	e6ce      	b.n	8022858 <_ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8022aba:	2b00      	cmp	r3, #0
 8022abc:	f77f aecc 	ble.w	8022858 <_ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8022ac0:	1416      	asrs	r6, r2, #16
 8022ac2:	e708      	b.n	80228d6 <_ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfe>

08022ac4 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 8022ac4:	4770      	bx	lr
 8022ac6:	bf00      	nop

08022ac8 <_ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 8022ac8:	4770      	bx	lr
 8022aca:	bf00      	nop

08022acc <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev>:
 8022acc:	4770      	bx	lr
 8022ace:	bf00      	nop

08022ad0 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev>:
 8022ad0:	4770      	bx	lr
 8022ad2:	bf00      	nop

08022ad4 <_ZN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev>:
 8022ad4:	4770      	bx	lr
 8022ad6:	bf00      	nop

08022ad8 <_ZN8touchgfx8LCDGPU2D55TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev>:
 8022ad8:	4770      	bx	lr
 8022ada:	bf00      	nop

08022adc <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 8022adc:	4770      	bx	lr
 8022ade:	bf00      	nop

08022ae0 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 8022ae0:	4770      	bx	lr
 8022ae2:	bf00      	nop

08022ae4 <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 8022ae4:	4770      	bx	lr
 8022ae6:	bf00      	nop

08022ae8 <_ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 8022ae8:	4770      	bx	lr
 8022aea:	bf00      	nop

08022aec <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev>:
 8022aec:	4770      	bx	lr
 8022aee:	bf00      	nop

08022af0 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev>:
 8022af0:	4770      	bx	lr
 8022af2:	bf00      	nop

08022af4 <_ZN8touchgfx8LCDGPU2D57TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev>:
 8022af4:	4770      	bx	lr
 8022af6:	bf00      	nop

08022af8 <_ZN8touchgfx8LCDGPU2D55TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev>:
 8022af8:	4770      	bx	lr
 8022afa:	bf00      	nop

08022afc <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 8022afc:	4770      	bx	lr
 8022afe:	bf00      	nop

08022b00 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 8022b00:	4770      	bx	lr
 8022b02:	bf00      	nop

08022b04 <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 8022b04:	4770      	bx	lr
 8022b06:	bf00      	nop

08022b08 <_ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 8022b08:	4770      	bx	lr
 8022b0a:	bf00      	nop

08022b0c <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev>:
 8022b0c:	4770      	bx	lr
 8022b0e:	bf00      	nop

08022b10 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev>:
 8022b10:	4770      	bx	lr
 8022b12:	bf00      	nop

08022b14 <_ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev>:
 8022b14:	4770      	bx	lr
 8022b16:	bf00      	nop

08022b18 <_ZN8touchgfx8LCDGPU2D55TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev>:
 8022b18:	4770      	bx	lr
 8022b1a:	bf00      	nop

08022b1c <_ZNK8touchgfx8LCDGPU2D17framebufferStrideEv>:
 8022b1c:	b508      	push	{r3, lr}
 8022b1e:	4b0d      	ldr	r3, [pc, #52]	@ (8022b54 <_ZNK8touchgfx8LCDGPU2D17framebufferStrideEv+0x38>)
 8022b20:	881b      	ldrh	r3, [r3, #0]
 8022b22:	b17b      	cbz	r3, 8022b44 <_ZNK8touchgfx8LCDGPU2D17framebufferStrideEv+0x28>
 8022b24:	7b02      	ldrb	r2, [r0, #12]
 8022b26:	2a02      	cmp	r2, #2
 8022b28:	d007      	beq.n	8022b3a <_ZNK8touchgfx8LCDGPU2D17framebufferStrideEv+0x1e>
 8022b2a:	2a01      	cmp	r2, #1
 8022b2c:	bf0c      	ite	eq
 8022b2e:	2003      	moveq	r0, #3
 8022b30:	2002      	movne	r0, #2
 8022b32:	fb13 f000 	smulbb	r0, r3, r0
 8022b36:	b280      	uxth	r0, r0
 8022b38:	bd08      	pop	{r3, pc}
 8022b3a:	2004      	movs	r0, #4
 8022b3c:	fb13 f000 	smulbb	r0, r3, r0
 8022b40:	b280      	uxth	r0, r0
 8022b42:	bd08      	pop	{r3, pc}
 8022b44:	4b04      	ldr	r3, [pc, #16]	@ (8022b58 <_ZNK8touchgfx8LCDGPU2D17framebufferStrideEv+0x3c>)
 8022b46:	4a05      	ldr	r2, [pc, #20]	@ (8022b5c <_ZNK8touchgfx8LCDGPU2D17framebufferStrideEv+0x40>)
 8022b48:	f240 110f 	movw	r1, #271	@ 0x10f
 8022b4c:	4804      	ldr	r0, [pc, #16]	@ (8022b60 <_ZNK8touchgfx8LCDGPU2D17framebufferStrideEv+0x44>)
 8022b4e:	f00f fe13 	bl	8032778 <__assert_func>
 8022b52:	bf00      	nop
 8022b54:	2008309e 	.word	0x2008309e
 8022b58:	08036a98 	.word	0x08036a98
 8022b5c:	0803825c 	.word	0x0803825c
 8022b60:	08036adc 	.word	0x08036adc

08022b64 <_ZN8touchgfx8LCDGPU2D22bindFrameBufferTextureEv>:
 8022b64:	b530      	push	{r4, r5, lr}
 8022b66:	4b26      	ldr	r3, [pc, #152]	@ (8022c00 <_ZN8touchgfx8LCDGPU2D22bindFrameBufferTextureEv+0x9c>)
 8022b68:	b083      	sub	sp, #12
 8022b6a:	681c      	ldr	r4, [r3, #0]
 8022b6c:	2c00      	cmp	r4, #0
 8022b6e:	d040      	beq.n	8022bf2 <_ZN8touchgfx8LCDGPU2D22bindFrameBufferTextureEv+0x8e>
 8022b70:	4b24      	ldr	r3, [pc, #144]	@ (8022c04 <_ZN8touchgfx8LCDGPU2D22bindFrameBufferTextureEv+0xa0>)
 8022b72:	4605      	mov	r5, r0
 8022b74:	781b      	ldrb	r3, [r3, #0]
 8022b76:	b9f3      	cbnz	r3, 8022bb6 <_ZN8touchgfx8LCDGPU2D22bindFrameBufferTextureEv+0x52>
 8022b78:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 8022b7a:	7b2a      	ldrb	r2, [r5, #12]
 8022b7c:	2a01      	cmp	r2, #1
 8022b7e:	d025      	beq.n	8022bcc <_ZN8touchgfx8LCDGPU2D22bindFrameBufferTextureEv+0x68>
 8022b80:	d30d      	bcc.n	8022b9e <_ZN8touchgfx8LCDGPU2D22bindFrameBufferTextureEv+0x3a>
 8022b82:	2a02      	cmp	r2, #2
 8022b84:	d12f      	bne.n	8022be6 <_ZN8touchgfx8LCDGPU2D22bindFrameBufferTextureEv+0x82>
 8022b86:	4920      	ldr	r1, [pc, #128]	@ (8022c08 <_ZN8touchgfx8LCDGPU2D22bindFrameBufferTextureEv+0xa4>)
 8022b88:	4a20      	ldr	r2, [pc, #128]	@ (8022c0c <_ZN8touchgfx8LCDGPU2D22bindFrameBufferTextureEv+0xa8>)
 8022b8a:	8809      	ldrh	r1, [r1, #0]
 8022b8c:	8812      	ldrh	r2, [r2, #0]
 8022b8e:	008c      	lsls	r4, r1, #2
 8022b90:	4618      	mov	r0, r3
 8022b92:	9400      	str	r4, [sp, #0]
 8022b94:	2310      	movs	r3, #16
 8022b96:	f7ee fb51 	bl	801123c <nema_bind_dst_tex>
 8022b9a:	b003      	add	sp, #12
 8022b9c:	bd30      	pop	{r4, r5, pc}
 8022b9e:	491a      	ldr	r1, [pc, #104]	@ (8022c08 <_ZN8touchgfx8LCDGPU2D22bindFrameBufferTextureEv+0xa4>)
 8022ba0:	4a1a      	ldr	r2, [pc, #104]	@ (8022c0c <_ZN8touchgfx8LCDGPU2D22bindFrameBufferTextureEv+0xa8>)
 8022ba2:	8809      	ldrh	r1, [r1, #0]
 8022ba4:	8812      	ldrh	r2, [r2, #0]
 8022ba6:	004c      	lsls	r4, r1, #1
 8022ba8:	4618      	mov	r0, r3
 8022baa:	9400      	str	r4, [sp, #0]
 8022bac:	2304      	movs	r3, #4
 8022bae:	f7ee fb45 	bl	801123c <nema_bind_dst_tex>
 8022bb2:	b003      	add	sp, #12
 8022bb4:	bd30      	pop	{r4, r5, pc}
 8022bb6:	6823      	ldr	r3, [r4, #0]
 8022bb8:	4620      	mov	r0, r4
 8022bba:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8022bbc:	4798      	blx	r3
 8022bbe:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 8022bc0:	4283      	cmp	r3, r0
 8022bc2:	d1da      	bne.n	8022b7a <_ZN8touchgfx8LCDGPU2D22bindFrameBufferTextureEv+0x16>
 8022bc4:	7b2a      	ldrb	r2, [r5, #12]
 8022bc6:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8022bc8:	2a01      	cmp	r2, #1
 8022bca:	d1d9      	bne.n	8022b80 <_ZN8touchgfx8LCDGPU2D22bindFrameBufferTextureEv+0x1c>
 8022bcc:	490e      	ldr	r1, [pc, #56]	@ (8022c08 <_ZN8touchgfx8LCDGPU2D22bindFrameBufferTextureEv+0xa4>)
 8022bce:	4a0f      	ldr	r2, [pc, #60]	@ (8022c0c <_ZN8touchgfx8LCDGPU2D22bindFrameBufferTextureEv+0xa8>)
 8022bd0:	8809      	ldrh	r1, [r1, #0]
 8022bd2:	8812      	ldrh	r2, [r2, #0]
 8022bd4:	eb01 0441 	add.w	r4, r1, r1, lsl #1
 8022bd8:	4618      	mov	r0, r3
 8022bda:	9400      	str	r4, [sp, #0]
 8022bdc:	2339      	movs	r3, #57	@ 0x39
 8022bde:	f7ee fb2d 	bl	801123c <nema_bind_dst_tex>
 8022be2:	b003      	add	sp, #12
 8022be4:	bd30      	pop	{r4, r5, pc}
 8022be6:	4b0a      	ldr	r3, [pc, #40]	@ (8022c10 <_ZN8touchgfx8LCDGPU2D22bindFrameBufferTextureEv+0xac>)
 8022be8:	4a0a      	ldr	r2, [pc, #40]	@ (8022c14 <_ZN8touchgfx8LCDGPU2D22bindFrameBufferTextureEv+0xb0>)
 8022bea:	2141      	movs	r1, #65	@ 0x41
 8022bec:	480a      	ldr	r0, [pc, #40]	@ (8022c18 <_ZN8touchgfx8LCDGPU2D22bindFrameBufferTextureEv+0xb4>)
 8022bee:	f00f fdc3 	bl	8032778 <__assert_func>
 8022bf2:	4b0a      	ldr	r3, [pc, #40]	@ (8022c1c <_ZN8touchgfx8LCDGPU2D22bindFrameBufferTextureEv+0xb8>)
 8022bf4:	4a0a      	ldr	r2, [pc, #40]	@ (8022c20 <_ZN8touchgfx8LCDGPU2D22bindFrameBufferTextureEv+0xbc>)
 8022bf6:	217c      	movs	r1, #124	@ 0x7c
 8022bf8:	480a      	ldr	r0, [pc, #40]	@ (8022c24 <_ZN8touchgfx8LCDGPU2D22bindFrameBufferTextureEv+0xc0>)
 8022bfa:	f00f fdbd 	bl	8032778 <__assert_func>
 8022bfe:	bf00      	nop
 8022c00:	20083544 	.word	0x20083544
 8022c04:	200830a2 	.word	0x200830a2
 8022c08:	2008309e 	.word	0x2008309e
 8022c0c:	200830a0 	.word	0x200830a0
 8022c10:	08036518 	.word	0x08036518
 8022c14:	08037090 	.word	0x08037090
 8022c18:	08036560 	.word	0x08036560
 8022c1c:	080364bc 	.word	0x080364bc
 8022c20:	08036d28 	.word	0x08036d28
 8022c24:	080364e4 	.word	0x080364e4

08022c28 <_ZN8touchgfx8LCDGPU2D8fillRectERKNS_4RectENS_9colortypeEh>:
 8022c28:	2b00      	cmp	r3, #0
 8022c2a:	d05b      	beq.n	8022ce4 <_ZN8touchgfx8LCDGPU2D8fillRectERKNS_4RectENS_9colortypeEh+0xbc>
 8022c2c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8022c30:	f9b1 4004 	ldrsh.w	r4, [r1, #4]
 8022c34:	b085      	sub	sp, #20
 8022c36:	2c00      	cmp	r4, #0
 8022c38:	dd51      	ble.n	8022cde <_ZN8touchgfx8LCDGPU2D8fillRectERKNS_4RectENS_9colortypeEh+0xb6>
 8022c3a:	f9b1 4006 	ldrsh.w	r4, [r1, #6]
 8022c3e:	2c00      	cmp	r4, #0
 8022c40:	dd4d      	ble.n	8022cde <_ZN8touchgfx8LCDGPU2D8fillRectERKNS_4RectENS_9colortypeEh+0xb6>
 8022c42:	4616      	mov	r6, r2
 8022c44:	4605      	mov	r5, r0
 8022c46:	6808      	ldr	r0, [r1, #0]
 8022c48:	6849      	ldr	r1, [r1, #4]
 8022c4a:	461c      	mov	r4, r3
 8022c4c:	4f29      	ldr	r7, [pc, #164]	@ (8022cf4 <_ZN8touchgfx8LCDGPU2D8fillRectERKNS_4RectENS_9colortypeEh+0xcc>)
 8022c4e:	ab02      	add	r3, sp, #8
 8022c50:	c303      	stmia	r3!, {r0, r1}
 8022c52:	a802      	add	r0, sp, #8
 8022c54:	f7ea f9b4 	bl	800cfc0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8022c58:	6838      	ldr	r0, [r7, #0]
 8022c5a:	f3c6 4807 	ubfx	r8, r6, #16, #8
 8022c5e:	f3c6 2907 	ubfx	r9, r6, #8, #8
 8022c62:	b2f6      	uxtb	r6, r6
 8022c64:	2800      	cmp	r0, #0
 8022c66:	d03e      	beq.n	8022ce6 <_ZN8touchgfx8LCDGPU2D8fillRectERKNS_4RectENS_9colortypeEh+0xbe>
 8022c68:	f7fe f8f6 	bl	8020e58 <_ZN8touchgfx8HALGPU2D14bindExecBufferEv>
 8022c6c:	682b      	ldr	r3, [r5, #0]
 8022c6e:	4628      	mov	r0, r5
 8022c70:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8022c72:	4798      	blx	r3
 8022c74:	f9bd 0008 	ldrsh.w	r0, [sp, #8]
 8022c78:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 8022c7c:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 8022c80:	f9bd 100a 	ldrsh.w	r1, [sp, #10]
 8022c84:	f7ee f970 	bl	8010f68 <nema_set_clip>
 8022c88:	f04f 33ff 	mov.w	r3, #4294967295
 8022c8c:	2cff      	cmp	r4, #255	@ 0xff
 8022c8e:	bf0c      	ite	eq
 8022c90:	2001      	moveq	r0, #1
 8022c92:	4819      	ldrne	r0, [pc, #100]	@ (8022cf8 <_ZN8touchgfx8LCDGPU2D8fillRectERKNS_4RectENS_9colortypeEh+0xd0>)
 8022c94:	461a      	mov	r2, r3
 8022c96:	2100      	movs	r1, #0
 8022c98:	f7fb fb02 	bl	801e2a0 <nema_set_blend>
 8022c9c:	2200      	movs	r2, #0
 8022c9e:	4623      	mov	r3, r4
 8022ca0:	4611      	mov	r1, r2
 8022ca2:	4610      	mov	r0, r2
 8022ca4:	f7ee fa3e 	bl	8011124 <nema_rgba>
 8022ca8:	f7fb fec0 	bl	801ea2c <nema_set_const_color>
 8022cac:	4632      	mov	r2, r6
 8022cae:	4649      	mov	r1, r9
 8022cb0:	4640      	mov	r0, r8
 8022cb2:	23ff      	movs	r3, #255	@ 0xff
 8022cb4:	f9bd 4008 	ldrsh.w	r4, [sp, #8]
 8022cb8:	f9bd 500a 	ldrsh.w	r5, [sp, #10]
 8022cbc:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 8022cc0:	f9bd 800e 	ldrsh.w	r8, [sp, #14]
 8022cc4:	f7ee fa2e 	bl	8011124 <nema_rgba>
 8022cc8:	4643      	mov	r3, r8
 8022cca:	9000      	str	r0, [sp, #0]
 8022ccc:	4632      	mov	r2, r6
 8022cce:	4620      	mov	r0, r4
 8022cd0:	4629      	mov	r1, r5
 8022cd2:	f7ee fc77 	bl	80115c4 <nema_fill_rect>
 8022cd6:	6838      	ldr	r0, [r7, #0]
 8022cd8:	b128      	cbz	r0, 8022ce6 <_ZN8touchgfx8LCDGPU2D8fillRectERKNS_4RectENS_9colortypeEh+0xbe>
 8022cda:	f7fe f8dd 	bl	8020e98 <_ZN8touchgfx8HALGPU2D16submitExecBufferEv>
 8022cde:	b005      	add	sp, #20
 8022ce0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8022ce4:	4770      	bx	lr
 8022ce6:	4b05      	ldr	r3, [pc, #20]	@ (8022cfc <_ZN8touchgfx8LCDGPU2D8fillRectERKNS_4RectENS_9colortypeEh+0xd4>)
 8022ce8:	4a05      	ldr	r2, [pc, #20]	@ (8022d00 <_ZN8touchgfx8LCDGPU2D8fillRectERKNS_4RectENS_9colortypeEh+0xd8>)
 8022cea:	217c      	movs	r1, #124	@ 0x7c
 8022cec:	4805      	ldr	r0, [pc, #20]	@ (8022d04 <_ZN8touchgfx8LCDGPU2D8fillRectERKNS_4RectENS_9colortypeEh+0xdc>)
 8022cee:	f00f fd43 	bl	8032778 <__assert_func>
 8022cf2:	bf00      	nop
 8022cf4:	20083544 	.word	0x20083544
 8022cf8:	08000504 	.word	0x08000504
 8022cfc:	080364bc 	.word	0x080364bc
 8022d00:	08036d28 	.word	0x08036d28
 8022d04:	080364e4 	.word	0x080364e4

08022d08 <_ZN8touchgfx8LCDGPU2D10fillBufferEPhtRKNS_4RectENS_9colortypeEh>:
 8022d08:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022d0c:	b085      	sub	sp, #20
 8022d0e:	f89d 403c 	ldrb.w	r4, [sp, #60]	@ 0x3c
 8022d12:	2c00      	cmp	r4, #0
 8022d14:	d063      	beq.n	8022dde <_ZN8touchgfx8LCDGPU2D10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xd6>
 8022d16:	f9b3 5004 	ldrsh.w	r5, [r3, #4]
 8022d1a:	2d00      	cmp	r5, #0
 8022d1c:	dd5f      	ble.n	8022dde <_ZN8touchgfx8LCDGPU2D10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xd6>
 8022d1e:	f9b3 5006 	ldrsh.w	r5, [r3, #6]
 8022d22:	2d00      	cmp	r5, #0
 8022d24:	dd5b      	ble.n	8022dde <_ZN8touchgfx8LCDGPU2D10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xd6>
 8022d26:	460f      	mov	r7, r1
 8022d28:	4606      	mov	r6, r0
 8022d2a:	6859      	ldr	r1, [r3, #4]
 8022d2c:	6818      	ldr	r0, [r3, #0]
 8022d2e:	f8df 9124 	ldr.w	r9, [pc, #292]	@ 8022e54 <_ZN8touchgfx8LCDGPU2D10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x14c>
 8022d32:	ab02      	add	r3, sp, #8
 8022d34:	c303      	stmia	r3!, {r0, r1}
 8022d36:	a802      	add	r0, sp, #8
 8022d38:	4690      	mov	r8, r2
 8022d3a:	f7ea f941 	bl	800cfc0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8022d3e:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8022d40:	f8d9 0000 	ldr.w	r0, [r9]
 8022d44:	f3c3 4a07 	ubfx	sl, r3, #16, #8
 8022d48:	f3c3 2b07 	ubfx	fp, r3, #8, #8
 8022d4c:	b2dd      	uxtb	r5, r3
 8022d4e:	2800      	cmp	r0, #0
 8022d50:	d060      	beq.n	8022e14 <_ZN8touchgfx8LCDGPU2D10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x10c>
 8022d52:	f7fe f881 	bl	8020e58 <_ZN8touchgfx8HALGPU2D14bindExecBufferEv>
 8022d56:	7b33      	ldrb	r3, [r6, #12]
 8022d58:	2b01      	cmp	r3, #1
 8022d5a:	d043      	beq.n	8022de4 <_ZN8touchgfx8LCDGPU2D10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xdc>
 8022d5c:	d34e      	bcc.n	8022dfc <_ZN8touchgfx8LCDGPU2D10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xf4>
 8022d5e:	2b02      	cmp	r3, #2
 8022d60:	d15e      	bne.n	8022e20 <_ZN8touchgfx8LCDGPU2D10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x118>
 8022d62:	4b33      	ldr	r3, [pc, #204]	@ (8022e30 <_ZN8touchgfx8LCDGPU2D10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x128>)
 8022d64:	4a33      	ldr	r2, [pc, #204]	@ (8022e34 <_ZN8touchgfx8LCDGPU2D10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12c>)
 8022d66:	8819      	ldrh	r1, [r3, #0]
 8022d68:	ea4f 0388 	mov.w	r3, r8, lsl #2
 8022d6c:	8812      	ldrh	r2, [r2, #0]
 8022d6e:	4638      	mov	r0, r7
 8022d70:	9300      	str	r3, [sp, #0]
 8022d72:	2310      	movs	r3, #16
 8022d74:	f7ee fa62 	bl	801123c <nema_bind_dst_tex>
 8022d78:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 8022d7c:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 8022d80:	f9bd 100a 	ldrsh.w	r1, [sp, #10]
 8022d84:	f9bd 0008 	ldrsh.w	r0, [sp, #8]
 8022d88:	f7ee f8ee 	bl	8010f68 <nema_set_clip>
 8022d8c:	f04f 33ff 	mov.w	r3, #4294967295
 8022d90:	2100      	movs	r1, #0
 8022d92:	461a      	mov	r2, r3
 8022d94:	4828      	ldr	r0, [pc, #160]	@ (8022e38 <_ZN8touchgfx8LCDGPU2D10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x130>)
 8022d96:	f7fb fa83 	bl	801e2a0 <nema_set_blend>
 8022d9a:	2200      	movs	r2, #0
 8022d9c:	4623      	mov	r3, r4
 8022d9e:	4611      	mov	r1, r2
 8022da0:	4610      	mov	r0, r2
 8022da2:	f7ee f9bf 	bl	8011124 <nema_rgba>
 8022da6:	f7fb fe41 	bl	801ea2c <nema_set_const_color>
 8022daa:	462a      	mov	r2, r5
 8022dac:	4659      	mov	r1, fp
 8022dae:	23ff      	movs	r3, #255	@ 0xff
 8022db0:	4650      	mov	r0, sl
 8022db2:	f9bd 4008 	ldrsh.w	r4, [sp, #8]
 8022db6:	f9bd 500a 	ldrsh.w	r5, [sp, #10]
 8022dba:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 8022dbe:	f9bd 700e 	ldrsh.w	r7, [sp, #14]
 8022dc2:	f7ee f9af 	bl	8011124 <nema_rgba>
 8022dc6:	463b      	mov	r3, r7
 8022dc8:	9000      	str	r0, [sp, #0]
 8022dca:	4632      	mov	r2, r6
 8022dcc:	4620      	mov	r0, r4
 8022dce:	4629      	mov	r1, r5
 8022dd0:	f7ee fbf8 	bl	80115c4 <nema_fill_rect>
 8022dd4:	f8d9 0000 	ldr.w	r0, [r9]
 8022dd8:	b1e0      	cbz	r0, 8022e14 <_ZN8touchgfx8LCDGPU2D10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x10c>
 8022dda:	f7fe f85d 	bl	8020e98 <_ZN8touchgfx8HALGPU2D16submitExecBufferEv>
 8022dde:	b005      	add	sp, #20
 8022de0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8022de4:	4b12      	ldr	r3, [pc, #72]	@ (8022e30 <_ZN8touchgfx8LCDGPU2D10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x128>)
 8022de6:	4a13      	ldr	r2, [pc, #76]	@ (8022e34 <_ZN8touchgfx8LCDGPU2D10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12c>)
 8022de8:	8819      	ldrh	r1, [r3, #0]
 8022dea:	eb08 0348 	add.w	r3, r8, r8, lsl #1
 8022dee:	8812      	ldrh	r2, [r2, #0]
 8022df0:	4638      	mov	r0, r7
 8022df2:	9300      	str	r3, [sp, #0]
 8022df4:	2339      	movs	r3, #57	@ 0x39
 8022df6:	f7ee fa21 	bl	801123c <nema_bind_dst_tex>
 8022dfa:	e7bd      	b.n	8022d78 <_ZN8touchgfx8LCDGPU2D10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x70>
 8022dfc:	4b0c      	ldr	r3, [pc, #48]	@ (8022e30 <_ZN8touchgfx8LCDGPU2D10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x128>)
 8022dfe:	4a0d      	ldr	r2, [pc, #52]	@ (8022e34 <_ZN8touchgfx8LCDGPU2D10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12c>)
 8022e00:	8819      	ldrh	r1, [r3, #0]
 8022e02:	ea4f 0348 	mov.w	r3, r8, lsl #1
 8022e06:	8812      	ldrh	r2, [r2, #0]
 8022e08:	4638      	mov	r0, r7
 8022e0a:	9300      	str	r3, [sp, #0]
 8022e0c:	2304      	movs	r3, #4
 8022e0e:	f7ee fa15 	bl	801123c <nema_bind_dst_tex>
 8022e12:	e7b1      	b.n	8022d78 <_ZN8touchgfx8LCDGPU2D10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x70>
 8022e14:	4b09      	ldr	r3, [pc, #36]	@ (8022e3c <_ZN8touchgfx8LCDGPU2D10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x134>)
 8022e16:	4a0a      	ldr	r2, [pc, #40]	@ (8022e40 <_ZN8touchgfx8LCDGPU2D10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x138>)
 8022e18:	217c      	movs	r1, #124	@ 0x7c
 8022e1a:	480a      	ldr	r0, [pc, #40]	@ (8022e44 <_ZN8touchgfx8LCDGPU2D10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x13c>)
 8022e1c:	f00f fcac 	bl	8032778 <__assert_func>
 8022e20:	4b09      	ldr	r3, [pc, #36]	@ (8022e48 <_ZN8touchgfx8LCDGPU2D10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x140>)
 8022e22:	4a0a      	ldr	r2, [pc, #40]	@ (8022e4c <_ZN8touchgfx8LCDGPU2D10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x144>)
 8022e24:	f240 11a5 	movw	r1, #421	@ 0x1a5
 8022e28:	4809      	ldr	r0, [pc, #36]	@ (8022e50 <_ZN8touchgfx8LCDGPU2D10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x148>)
 8022e2a:	f00f fca5 	bl	8032778 <__assert_func>
 8022e2e:	bf00      	nop
 8022e30:	2008309e 	.word	0x2008309e
 8022e34:	200830a0 	.word	0x200830a0
 8022e38:	08000504 	.word	0x08000504
 8022e3c:	080364bc 	.word	0x080364bc
 8022e40:	08036d28 	.word	0x08036d28
 8022e44:	080364e4 	.word	0x080364e4
 8022e48:	08036518 	.word	0x08036518
 8022e4c:	08036de4 	.word	0x08036de4
 8022e50:	08036560 	.word	0x08036560
 8022e54:	20083544 	.word	0x20083544

08022e58 <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE>:
 8022e58:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022e5c:	b091      	sub	sp, #68	@ 0x44
 8022e5e:	f89d 108c 	ldrb.w	r1, [sp, #140]	@ 0x8c
 8022e62:	ac0a      	add	r4, sp, #40	@ 0x28
 8022e64:	e884 000c 	stmia.w	r4, {r2, r3}
 8022e68:	f8bd 3070 	ldrh.w	r3, [sp, #112]	@ 0x70
 8022e6c:	1e4f      	subs	r7, r1, #1
 8022e6e:	fa5f fc87 	uxtb.w	ip, r7
 8022e72:	4682      	mov	sl, r0
 8022e74:	9303      	str	r3, [sp, #12]
 8022e76:	f89d 0090 	ldrb.w	r0, [sp, #144]	@ 0x90
 8022e7a:	f8bd 3074 	ldrh.w	r3, [sp, #116]	@ 0x74
 8022e7e:	f1bc 0f01 	cmp.w	ip, #1
 8022e82:	9304      	str	r3, [sp, #16]
 8022e84:	f9bd 8068 	ldrsh.w	r8, [sp, #104]	@ 0x68
 8022e88:	f9bd b06c 	ldrsh.w	fp, [sp, #108]	@ 0x6c
 8022e8c:	9a1f      	ldr	r2, [sp, #124]	@ 0x7c
 8022e8e:	f89d 3084 	ldrb.w	r3, [sp, #132]	@ 0x84
 8022e92:	9005      	str	r0, [sp, #20]
 8022e94:	f89d 6094 	ldrb.w	r6, [sp, #148]	@ 0x94
 8022e98:	d905      	bls.n	8022ea6 <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x4e>
 8022e9a:	2904      	cmp	r1, #4
 8022e9c:	f000 80d0 	beq.w	8023040 <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1e8>
 8022ea0:	2908      	cmp	r1, #8
 8022ea2:	f040 816f 	bne.w	8023184 <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x32c>
 8022ea6:	7b53      	ldrb	r3, [r2, #13]
 8022ea8:	7990      	ldrb	r0, [r2, #6]
 8022eaa:	0159      	lsls	r1, r3, #5
 8022eac:	f401 7180 	and.w	r1, r1, #256	@ 0x100
 8022eb0:	ea50 0901 	orrs.w	r9, r0, r1
 8022eb4:	f000 80c1 	beq.w	802303a <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1e2>
 8022eb8:	011b      	lsls	r3, r3, #4
 8022eba:	79d0      	ldrb	r0, [r2, #7]
 8022ebc:	f403 7180 	and.w	r1, r3, #256	@ 0x100
 8022ec0:	ea50 0301 	orrs.w	r3, r0, r1
 8022ec4:	9306      	str	r3, [sp, #24]
 8022ec6:	f000 80b8 	beq.w	802303a <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1e2>
 8022eca:	f992 3009 	ldrsb.w	r3, [r2, #9]
 8022ece:	9a03      	ldr	r2, [sp, #12]
 8022ed0:	b29b      	uxth	r3, r3
 8022ed2:	2a00      	cmp	r2, #0
 8022ed4:	f040 80be 	bne.w	8023054 <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1fc>
 8022ed8:	4498      	add	r8, r3
 8022eda:	fa0f f888 	sxth.w	r8, r8
 8022ede:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 8022ee0:	f9b3 3000 	ldrsh.w	r3, [r3]
 8022ee4:	4543      	cmp	r3, r8
 8022ee6:	dd06      	ble.n	8022ef6 <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x9e>
 8022ee8:	9a03      	ldr	r2, [sp, #12]
 8022eea:	441a      	add	r2, r3
 8022eec:	eba2 0508 	sub.w	r5, r2, r8
 8022ef0:	4698      	mov	r8, r3
 8022ef2:	b2ab      	uxth	r3, r5
 8022ef4:	9303      	str	r3, [sp, #12]
 8022ef6:	f8df c30c 	ldr.w	ip, [pc, #780]	@ 8023204 <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ac>
 8022efa:	465a      	mov	r2, fp
 8022efc:	f89c 5000 	ldrb.w	r5, [ip]
 8022f00:	4641      	mov	r1, r8
 8022f02:	4633      	mov	r3, r6
 8022f04:	4620      	mov	r0, r4
 8022f06:	9507      	str	r5, [sp, #28]
 8022f08:	f7e9 fece 	bl	800cca8 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>
 8022f0c:	465a      	mov	r2, fp
 8022f0e:	4641      	mov	r1, r8
 8022f10:	4633      	mov	r3, r6
 8022f12:	f8ad 0034 	strh.w	r0, [sp, #52]	@ 0x34
 8022f16:	4620      	mov	r0, r4
 8022f18:	f7e9 fee3 	bl	800cce2 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>
 8022f1c:	a910      	add	r1, sp, #64	@ 0x40
 8022f1e:	f821 0d0a 	strh.w	r0, [r1, #-10]!
 8022f22:	a80d      	add	r0, sp, #52	@ 0x34
 8022f24:	f7ea f80a 	bl	800cf3c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>
 8022f28:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 8022f2a:	f3c3 4307 	ubfx	r3, r3, #16, #8
 8022f2e:	9308      	str	r3, [sp, #32]
 8022f30:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 8022f32:	f3c3 2b07 	ubfx	fp, r3, #8, #8
 8022f36:	fa5f f883 	uxtb.w	r8, r3
 8022f3a:	2f07      	cmp	r7, #7
 8022f3c:	f200 811f 	bhi.w	802317e <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x326>
 8022f40:	e8df f017 	tbh	[pc, r7, lsl #1]
 8022f44:	009b00a1 	.word	0x009b00a1
 8022f48:	0095011d 	.word	0x0095011d
 8022f4c:	011d011d 	.word	0x011d011d
 8022f50:	0008011d 	.word	0x0008011d
 8022f54:	2708      	movs	r7, #8
 8022f56:	f8cd 9024 	str.w	r9, [sp, #36]	@ 0x24
 8022f5a:	4ca1      	ldr	r4, [pc, #644]	@ (80231e0 <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x388>)
 8022f5c:	6820      	ldr	r0, [r4, #0]
 8022f5e:	2800      	cmp	r0, #0
 8022f60:	f000 8137 	beq.w	80231d2 <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x37a>
 8022f64:	f7fd ff78 	bl	8020e58 <_ZN8touchgfx8HALGPU2D14bindExecBufferEv>
 8022f68:	f8da 3000 	ldr.w	r3, [sl]
 8022f6c:	4650      	mov	r0, sl
 8022f6e:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8022f70:	4798      	blx	r3
 8022f72:	2e02      	cmp	r6, #2
 8022f74:	f000 80e6 	beq.w	8023144 <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2ec>
 8022f78:	2e03      	cmp	r6, #3
 8022f7a:	f000 80c7 	beq.w	802310c <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2b4>
 8022f7e:	2e01      	cmp	r6, #1
 8022f80:	f000 80a8 	beq.w	80230d4 <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x27c>
 8022f84:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 8022f86:	f8bd 2028 	ldrh.w	r2, [sp, #40]	@ 0x28
 8022f8a:	8819      	ldrh	r1, [r3, #0]
 8022f8c:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
 8022f90:	440a      	add	r2, r1
 8022f92:	991e      	ldr	r1, [sp, #120]	@ 0x78
 8022f94:	f8ad 2038 	strh.w	r2, [sp, #56]	@ 0x38
 8022f98:	8848      	ldrh	r0, [r1, #2]
 8022f9a:	6849      	ldr	r1, [r1, #4]
 8022f9c:	4403      	add	r3, r0
 8022f9e:	f8ad 303a 	strh.w	r3, [sp, #58]	@ 0x3a
 8022fa2:	910f      	str	r1, [sp, #60]	@ 0x3c
 8022fa4:	a80e      	add	r0, sp, #56	@ 0x38
 8022fa6:	f7ea f80b 	bl	800cfc0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8022faa:	f9bd 303e 	ldrsh.w	r3, [sp, #62]	@ 0x3e
 8022fae:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	@ 0x3c
 8022fb2:	f9bd 103a 	ldrsh.w	r1, [sp, #58]	@ 0x3a
 8022fb6:	f9bd 0038 	ldrsh.w	r0, [sp, #56]	@ 0x38
 8022fba:	f7ed ffd5 	bl	8010f68 <nema_set_clip>
 8022fbe:	2200      	movs	r2, #0
 8022fc0:	9d05      	ldr	r5, [sp, #20]
 8022fc2:	4611      	mov	r1, r2
 8022fc4:	462b      	mov	r3, r5
 8022fc6:	4610      	mov	r0, r2
 8022fc8:	f7ee f8ac 	bl	8011124 <nema_rgba>
 8022fcc:	f7fb fd2e 	bl	801ea2c <nema_set_const_color>
 8022fd0:	462b      	mov	r3, r5
 8022fd2:	4642      	mov	r2, r8
 8022fd4:	4659      	mov	r1, fp
 8022fd6:	9808      	ldr	r0, [sp, #32]
 8022fd8:	f7ee f8a4 	bl	8011124 <nema_rgba>
 8022fdc:	f7ed ffb8 	bl	8010f50 <nema_set_tex_color>
 8022fe0:	f04f 33ff 	mov.w	r3, #4294967295
 8022fe4:	2201      	movs	r2, #1
 8022fe6:	2100      	movs	r1, #0
 8022fe8:	487e      	ldr	r0, [pc, #504]	@ (80231e4 <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x38c>)
 8022fea:	f7fb f959 	bl	801e2a0 <nema_set_blend>
 8022fee:	2200      	movs	r2, #0
 8022ff0:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8022ff2:	9201      	str	r2, [sp, #4]
 8022ff4:	9300      	str	r3, [sp, #0]
 8022ff6:	4649      	mov	r1, r9
 8022ff8:	463b      	mov	r3, r7
 8022ffa:	9820      	ldr	r0, [sp, #128]	@ 0x80
 8022ffc:	9a06      	ldr	r2, [sp, #24]
 8022ffe:	f7ee f899 	bl	8011134 <nema_bind_src_tex>
 8023002:	9b07      	ldr	r3, [sp, #28]
 8023004:	f9bd 0034 	ldrsh.w	r0, [sp, #52]	@ 0x34
 8023008:	2b01      	cmp	r3, #1
 802300a:	f9bd 1036 	ldrsh.w	r1, [sp, #54]	@ 0x36
 802300e:	d040      	beq.n	8023092 <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x23a>
 8023010:	2e02      	cmp	r6, #2
 8023012:	d051      	beq.n	80230b8 <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x260>
 8023014:	2e03      	cmp	r6, #3
 8023016:	f000 80c7 	beq.w	80231a8 <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x350>
 802301a:	2e01      	cmp	r6, #1
 802301c:	9b04      	ldr	r3, [sp, #16]
 802301e:	f000 80b8 	beq.w	8023192 <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x33a>
 8023022:	1ac9      	subs	r1, r1, r3
 8023024:	9b03      	ldr	r3, [sp, #12]
 8023026:	1ac0      	subs	r0, r0, r3
 8023028:	f7ee fade 	bl	80115e8 <nema_blit>
 802302c:	6823      	ldr	r3, [r4, #0]
 802302e:	2b00      	cmp	r3, #0
 8023030:	f000 80cf 	beq.w	80231d2 <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x37a>
 8023034:	2201      	movs	r2, #1
 8023036:	f883 20a5 	strb.w	r2, [r3, #165]	@ 0xa5
 802303a:	b011      	add	sp, #68	@ 0x44
 802303c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8023040:	2b00      	cmp	r3, #0
 8023042:	f47f af30 	bne.w	8022ea6 <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x4e>
 8023046:	4b68      	ldr	r3, [pc, #416]	@ (80231e8 <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x390>)
 8023048:	4a68      	ldr	r2, [pc, #416]	@ (80231ec <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x394>)
 802304a:	f240 11bb 	movw	r1, #443	@ 0x1bb
 802304e:	4868      	ldr	r0, [pc, #416]	@ (80231f0 <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x398>)
 8023050:	f00f fb92 	bl	8032778 <__assert_func>
 8023054:	1ad5      	subs	r5, r2, r3
 8023056:	b2ab      	uxth	r3, r5
 8023058:	041a      	lsls	r2, r3, #16
 802305a:	9303      	str	r3, [sp, #12]
 802305c:	f57f af3f 	bpl.w	8022ede <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x86>
 8023060:	eba8 0803 	sub.w	r8, r8, r3
 8023064:	2300      	movs	r3, #0
 8023066:	fa0f f888 	sxth.w	r8, r8
 802306a:	9303      	str	r3, [sp, #12]
 802306c:	e737      	b.n	8022ede <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x86>
 802306e:	f109 0301 	add.w	r3, r9, #1
 8023072:	105b      	asrs	r3, r3, #1
 8023074:	9309      	str	r3, [sp, #36]	@ 0x24
 8023076:	2729      	movs	r7, #41	@ 0x29
 8023078:	e76f      	b.n	8022f5a <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x102>
 802307a:	f109 0303 	add.w	r3, r9, #3
 802307e:	109b      	asrs	r3, r3, #2
 8023080:	9309      	str	r3, [sp, #36]	@ 0x24
 8023082:	2728      	movs	r7, #40	@ 0x28
 8023084:	e769      	b.n	8022f5a <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x102>
 8023086:	f109 0307 	add.w	r3, r9, #7
 802308a:	10db      	asrs	r3, r3, #3
 802308c:	9309      	str	r3, [sp, #36]	@ 0x24
 802308e:	2727      	movs	r7, #39	@ 0x27
 8023090:	e763      	b.n	8022f5a <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x102>
 8023092:	2e02      	cmp	r6, #2
 8023094:	f000 8093 	beq.w	80231be <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x366>
 8023098:	2e03      	cmp	r6, #3
 802309a:	d00d      	beq.n	80230b8 <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x260>
 802309c:	2e01      	cmp	r6, #1
 802309e:	f000 8091 	beq.w	80231c4 <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x36c>
 80230a2:	461a      	mov	r2, r3
 80230a4:	9b03      	ldr	r3, [sp, #12]
 80230a6:	4419      	add	r1, r3
 80230a8:	9b04      	ldr	r3, [sp, #16]
 80230aa:	eba1 0109 	sub.w	r1, r1, r9
 80230ae:	3101      	adds	r1, #1
 80230b0:	1ac0      	subs	r0, r0, r3
 80230b2:	f7ee fab3 	bl	801161c <nema_blit_rotate>
 80230b6:	e7b9      	b.n	802302c <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1d4>
 80230b8:	9b04      	ldr	r3, [sp, #16]
 80230ba:	2202      	movs	r2, #2
 80230bc:	4419      	add	r1, r3
 80230be:	9b03      	ldr	r3, [sp, #12]
 80230c0:	4418      	add	r0, r3
 80230c2:	9b06      	ldr	r3, [sp, #24]
 80230c4:	eba0 0009 	sub.w	r0, r0, r9
 80230c8:	1ac9      	subs	r1, r1, r3
 80230ca:	3101      	adds	r1, #1
 80230cc:	3001      	adds	r0, #1
 80230ce:	f7ee faa5 	bl	801161c <nema_blit_rotate>
 80230d2:	e7ab      	b.n	802302c <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1d4>
 80230d4:	f8bd 102c 	ldrh.w	r1, [sp, #44]	@ 0x2c
 80230d8:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 80230dc:	9a1e      	ldr	r2, [sp, #120]	@ 0x78
 80230de:	440b      	add	r3, r1
 80230e0:	8852      	ldrh	r2, [r2, #2]
 80230e2:	981e      	ldr	r0, [sp, #120]	@ 0x78
 80230e4:	991e      	ldr	r1, [sp, #120]	@ 0x78
 80230e6:	1a9b      	subs	r3, r3, r2
 80230e8:	f9b1 1006 	ldrsh.w	r1, [r1, #6]
 80230ec:	f8b0 c000 	ldrh.w	ip, [r0]
 80230f0:	f8bd 202a 	ldrh.w	r2, [sp, #42]	@ 0x2a
 80230f4:	8880      	ldrh	r0, [r0, #4]
 80230f6:	1a5b      	subs	r3, r3, r1
 80230f8:	4462      	add	r2, ip
 80230fa:	f8ad 3038 	strh.w	r3, [sp, #56]	@ 0x38
 80230fe:	f8ad 103c 	strh.w	r1, [sp, #60]	@ 0x3c
 8023102:	f8ad 203a 	strh.w	r2, [sp, #58]	@ 0x3a
 8023106:	f8ad 003e 	strh.w	r0, [sp, #62]	@ 0x3e
 802310a:	e74b      	b.n	8022fa4 <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x14c>
 802310c:	f8bd 102e 	ldrh.w	r1, [sp, #46]	@ 0x2e
 8023110:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
 8023114:	9a1e      	ldr	r2, [sp, #120]	@ 0x78
 8023116:	440b      	add	r3, r1
 8023118:	8812      	ldrh	r2, [r2, #0]
 802311a:	981e      	ldr	r0, [sp, #120]	@ 0x78
 802311c:	991e      	ldr	r1, [sp, #120]	@ 0x78
 802311e:	1a9b      	subs	r3, r3, r2
 8023120:	f9b1 1004 	ldrsh.w	r1, [r1, #4]
 8023124:	f8b0 c002 	ldrh.w	ip, [r0, #2]
 8023128:	f8bd 2028 	ldrh.w	r2, [sp, #40]	@ 0x28
 802312c:	88c0      	ldrh	r0, [r0, #6]
 802312e:	1a5b      	subs	r3, r3, r1
 8023130:	4462      	add	r2, ip
 8023132:	f8ad 303a 	strh.w	r3, [sp, #58]	@ 0x3a
 8023136:	f8ad 103e 	strh.w	r1, [sp, #62]	@ 0x3e
 802313a:	f8ad 2038 	strh.w	r2, [sp, #56]	@ 0x38
 802313e:	f8ad 003c 	strh.w	r0, [sp, #60]	@ 0x3c
 8023142:	e72f      	b.n	8022fa4 <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x14c>
 8023144:	f8bd 102c 	ldrh.w	r1, [sp, #44]	@ 0x2c
 8023148:	f8bd 2028 	ldrh.w	r2, [sp, #40]	@ 0x28
 802314c:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
 8023150:	440a      	add	r2, r1
 8023152:	991e      	ldr	r1, [sp, #120]	@ 0x78
 8023154:	8808      	ldrh	r0, [r1, #0]
 8023156:	f8bd 102e 	ldrh.w	r1, [sp, #46]	@ 0x2e
 802315a:	1a12      	subs	r2, r2, r0
 802315c:	440b      	add	r3, r1
 802315e:	991e      	ldr	r1, [sp, #120]	@ 0x78
 8023160:	981e      	ldr	r0, [sp, #120]	@ 0x78
 8023162:	8849      	ldrh	r1, [r1, #2]
 8023164:	8880      	ldrh	r0, [r0, #4]
 8023166:	1a5b      	subs	r3, r3, r1
 8023168:	991e      	ldr	r1, [sp, #120]	@ 0x78
 802316a:	1a12      	subs	r2, r2, r0
 802316c:	88c8      	ldrh	r0, [r1, #6]
 802316e:	6849      	ldr	r1, [r1, #4]
 8023170:	1a1b      	subs	r3, r3, r0
 8023172:	f8ad 2038 	strh.w	r2, [sp, #56]	@ 0x38
 8023176:	f8ad 303a 	strh.w	r3, [sp, #58]	@ 0x3a
 802317a:	910f      	str	r1, [sp, #60]	@ 0x3c
 802317c:	e712      	b.n	8022fa4 <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x14c>
 802317e:	f64f 77ff 	movw	r7, #65535	@ 0xffff
 8023182:	e6ea      	b.n	8022f5a <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x102>
 8023184:	4b1b      	ldr	r3, [pc, #108]	@ (80231f4 <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x39c>)
 8023186:	4a19      	ldr	r2, [pc, #100]	@ (80231ec <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x394>)
 8023188:	f44f 71dd 	mov.w	r1, #442	@ 0x1ba
 802318c:	4818      	ldr	r0, [pc, #96]	@ (80231f0 <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x398>)
 802318e:	f00f faf3 	bl	8032778 <__assert_func>
 8023192:	4403      	add	r3, r0
 8023194:	4618      	mov	r0, r3
 8023196:	9b06      	ldr	r3, [sp, #24]
 8023198:	2203      	movs	r2, #3
 802319a:	1ac0      	subs	r0, r0, r3
 802319c:	9b03      	ldr	r3, [sp, #12]
 802319e:	3001      	adds	r0, #1
 80231a0:	1ac9      	subs	r1, r1, r3
 80231a2:	f7ee fa3b 	bl	801161c <nema_blit_rotate>
 80231a6:	e741      	b.n	802302c <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1d4>
 80231a8:	9b03      	ldr	r3, [sp, #12]
 80231aa:	2201      	movs	r2, #1
 80231ac:	4419      	add	r1, r3
 80231ae:	9b04      	ldr	r3, [sp, #16]
 80231b0:	eba1 0109 	sub.w	r1, r1, r9
 80231b4:	3101      	adds	r1, #1
 80231b6:	1ac0      	subs	r0, r0, r3
 80231b8:	f7ee fa30 	bl	801161c <nema_blit_rotate>
 80231bc:	e736      	b.n	802302c <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1d4>
 80231be:	9b04      	ldr	r3, [sp, #16]
 80231c0:	4418      	add	r0, r3
 80231c2:	e7e8      	b.n	8023196 <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x33e>
 80231c4:	9b04      	ldr	r3, [sp, #16]
 80231c6:	1ac9      	subs	r1, r1, r3
 80231c8:	9b03      	ldr	r3, [sp, #12]
 80231ca:	1ac0      	subs	r0, r0, r3
 80231cc:	f7ee fa0c 	bl	80115e8 <nema_blit>
 80231d0:	e72c      	b.n	802302c <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1d4>
 80231d2:	4b09      	ldr	r3, [pc, #36]	@ (80231f8 <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>)
 80231d4:	4a09      	ldr	r2, [pc, #36]	@ (80231fc <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a4>)
 80231d6:	217c      	movs	r1, #124	@ 0x7c
 80231d8:	4809      	ldr	r0, [pc, #36]	@ (8023200 <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a8>)
 80231da:	f00f facd 	bl	8032778 <__assert_func>
 80231de:	bf00      	nop
 80231e0:	20083544 	.word	0x20083544
 80231e4:	08000504 	.word	0x08000504
 80231e8:	08036a30 	.word	0x08036a30
 80231ec:	08038164 	.word	0x08038164
 80231f0:	08036560 	.word	0x08036560
 80231f4:	080369a0 	.word	0x080369a0
 80231f8:	080364bc 	.word	0x080364bc
 80231fc:	08036d28 	.word	0x08036d28
 8023200:	080364e4 	.word	0x080364e4
 8023204:	2008309c 	.word	0x2008309c

08023208 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 8023208:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802320c:	ed2d 8b08 	vpush	{d8-d11}
 8023210:	b08b      	sub	sp, #44	@ 0x2c
 8023212:	f89d 707c 	ldrb.w	r7, [sp, #124]	@ 0x7c
 8023216:	e9dd 951c 	ldrd	r9, r5, [sp, #112]	@ 0x70
 802321a:	f8bd 8078 	ldrh.w	r8, [sp, #120]	@ 0x78
 802321e:	f8bd e080 	ldrh.w	lr, [sp, #128]	@ 0x80
 8023222:	2f00      	cmp	r7, #0
 8023224:	d067      	beq.n	80232f6 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0xee>
 8023226:	f9b5 a004 	ldrsh.w	sl, [r5, #4]
 802322a:	f1ba 0f00 	cmp.w	sl, #0
 802322e:	dd62      	ble.n	80232f6 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0xee>
 8023230:	f9b5 a006 	ldrsh.w	sl, [r5, #6]
 8023234:	f1ba 0f00 	cmp.w	sl, #0
 8023238:	dd5d      	ble.n	80232f6 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0xee>
 802323a:	f3c8 0a87 	ubfx	sl, r8, #2, #8
 802323e:	f1ba 0f0b 	cmp.w	sl, #11
 8023242:	d05d      	beq.n	8023300 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0xf8>
 8023244:	461c      	mov	r4, r3
 8023246:	4bcd      	ldr	r3, [pc, #820]	@ (802357c <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x374>)
 8023248:	4616      	mov	r6, r2
 802324a:	781b      	ldrb	r3, [r3, #0]
 802324c:	6862      	ldr	r2, [r4, #4]
 802324e:	2b01      	cmp	r3, #1
 8023250:	9205      	str	r2, [sp, #20]
 8023252:	4684      	mov	ip, r0
 8023254:	e9d4 b202 	ldrd	fp, r2, [r4, #8]
 8023258:	9202      	str	r2, [sp, #8]
 802325a:	d102      	bne.n	8023262 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x5a>
 802325c:	f8cd b008 	str.w	fp, [sp, #8]
 8023260:	4693      	mov	fp, r2
 8023262:	f1ba 0f0d 	cmp.w	sl, #13
 8023266:	d03d      	beq.n	80232e4 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0xdc>
 8023268:	4623      	mov	r3, r4
 802326a:	4cc5      	ldr	r4, [pc, #788]	@ (8023580 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x378>)
 802326c:	6820      	ldr	r0, [r4, #0]
 802326e:	2800      	cmp	r0, #0
 8023270:	f000 8243 	beq.w	80236fa <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4f2>
 8023274:	681b      	ldr	r3, [r3, #0]
 8023276:	f8cd c010 	str.w	ip, [sp, #16]
 802327a:	9303      	str	r3, [sp, #12]
 802327c:	f7fd fdec 	bl	8020e58 <_ZN8touchgfx8HALGPU2D14bindExecBufferEv>
 8023280:	9a04      	ldr	r2, [sp, #16]
 8023282:	6813      	ldr	r3, [r2, #0]
 8023284:	4610      	mov	r0, r2
 8023286:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8023288:	4798      	blx	r3
 802328a:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 802328e:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 8023292:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
 8023296:	f9b5 0000 	ldrsh.w	r0, [r5]
 802329a:	f7ed fe65 	bl	8010f68 <nema_set_clip>
 802329e:	2200      	movs	r2, #0
 80232a0:	463b      	mov	r3, r7
 80232a2:	4611      	mov	r1, r2
 80232a4:	4610      	mov	r0, r2
 80232a6:	f7ed ff3d 	bl	8011124 <nema_rgba>
 80232aa:	f7fb fbbf 	bl	801ea2c <nema_set_const_color>
 80232ae:	f04f 33ff 	mov.w	r3, #4294967295
 80232b2:	2201      	movs	r2, #1
 80232b4:	2100      	movs	r1, #0
 80232b6:	48b3      	ldr	r0, [pc, #716]	@ (8023584 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x37c>)
 80232b8:	f7fa fff2 	bl	801e2a0 <nema_set_blend>
 80232bc:	f1ba 0f0d 	cmp.w	sl, #13
 80232c0:	f200 8221 	bhi.w	8023706 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4fe>
 80232c4:	e8df f01a 	tbh	[pc, sl, lsl #1]
 80232c8:	01720027 	.word	0x01720027
 80232cc:	021f0170 	.word	0x021f0170
 80232d0:	021f021f 	.word	0x021f021f
 80232d4:	021f021f 	.word	0x021f021f
 80232d8:	021f021f 	.word	0x021f021f
 80232dc:	021f021f 	.word	0x021f021f
 80232e0:	01570162 	.word	0x01570162
 80232e4:	9b05      	ldr	r3, [sp, #20]
 80232e6:	b133      	cbz	r3, 80232f6 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0xee>
 80232e8:	781b      	ldrb	r3, [r3, #0]
 80232ea:	f1a3 0216 	sub.w	r2, r3, #22
 80232ee:	2a01      	cmp	r2, #1
 80232f0:	d9ba      	bls.n	8023268 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x60>
 80232f2:	2b12      	cmp	r3, #18
 80232f4:	d0b8      	beq.n	8023268 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x60>
 80232f6:	b00b      	add	sp, #44	@ 0x2c
 80232f8:	ecbd 8b08 	vpop	{d8-d11}
 80232fc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8023300:	e9cd 7e1f 	strd	r7, lr, [sp, #124]	@ 0x7c
 8023304:	f8cd 8078 	str.w	r8, [sp, #120]	@ 0x78
 8023308:	b00b      	add	sp, #44	@ 0x2c
 802330a:	ecbd 8b08 	vpop	{d8-d11}
 802330e:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8023312:	f7e8 bfc5 	b.w	800c2a0 <_ZN8touchgfx3LCD18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>
 8023316:	2304      	movs	r3, #4
 8023318:	f04f 31ff 	mov.w	r1, #4294967295
 802331c:	f008 0201 	and.w	r2, r8, #1
 8023320:	9201      	str	r2, [sp, #4]
 8023322:	9803      	ldr	r0, [sp, #12]
 8023324:	9a02      	ldr	r2, [sp, #8]
 8023326:	9100      	str	r1, [sp, #0]
 8023328:	4659      	mov	r1, fp
 802332a:	f7ed ff03 	bl	8011134 <nema_bind_src_tex>
 802332e:	2001      	movs	r0, #1
 8023330:	f7ee ff9c 	bl	801226c <nema_enable_tiling>
 8023334:	2301      	movs	r3, #1
 8023336:	461a      	mov	r2, r3
 8023338:	4619      	mov	r1, r3
 802333a:	4618      	mov	r0, r3
 802333c:	f7ee ffbe 	bl	80122bc <nema_enable_aa>
 8023340:	edd6 7a03 	vldr	s15, [r6, #12]
 8023344:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8023348:	ed96 7a04 	vldr	s14, [r6, #16]
 802334c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8023350:	4607      	mov	r7, r0
 8023352:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 8023356:	f240 81aa 	bls.w	80236ae <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4a6>
 802335a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802335e:	bf94      	ite	ls
 8023360:	2301      	movls	r3, #1
 8023362:	2302      	movhi	r3, #2
 8023364:	edd6 7a08 	vldr	s15, [r6, #32]
 8023368:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 802336c:	2200      	movs	r2, #0
 802336e:	ed96 7a09 	vldr	s14, [r6, #36]	@ 0x24
 8023372:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8023376:	a90a      	add	r1, sp, #40	@ 0x28
 8023378:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 802337c:	f843 2c10 	str.w	r2, [r3, #-16]
 8023380:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 8023384:	f240 818d 	bls.w	80236a2 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x49a>
 8023388:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802338c:	bf94      	ite	ls
 802338e:	2301      	movls	r3, #1
 8023390:	2302      	movhi	r3, #2
 8023392:	edd6 7a0d 	vldr	s15, [r6, #52]	@ 0x34
 8023396:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 802339a:	2201      	movs	r2, #1
 802339c:	ed96 7a0e 	vldr	s14, [r6, #56]	@ 0x38
 80233a0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80233a4:	a90a      	add	r1, sp, #40	@ 0x28
 80233a6:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 80233aa:	f843 2c10 	str.w	r2, [r3, #-16]
 80233ae:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 80233b2:	f240 8188 	bls.w	80236c6 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4be>
 80233b6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80233ba:	bf94      	ite	ls
 80233bc:	2301      	movls	r3, #1
 80233be:	2302      	movhi	r3, #2
 80233c0:	edd6 7a12 	vldr	s15, [r6, #72]	@ 0x48
 80233c4:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80233c8:	2202      	movs	r2, #2
 80233ca:	ed96 7a13 	vldr	s14, [r6, #76]	@ 0x4c
 80233ce:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80233d2:	a90a      	add	r1, sp, #40	@ 0x28
 80233d4:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 80233d8:	f843 2c10 	str.w	r2, [r3, #-16]
 80233dc:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 80233e0:	f240 816b 	bls.w	80236ba <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4b2>
 80233e4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80233e8:	bf94      	ite	ls
 80233ea:	2301      	movls	r3, #1
 80233ec:	2302      	movhi	r3, #2
 80233ee:	2203      	movs	r2, #3
 80233f0:	a90a      	add	r1, sp, #40	@ 0x28
 80233f2:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 80233f6:	f843 2c10 	str.w	r2, [r3, #-16]
 80233fa:	f1bb 0fff 	cmp.w	fp, #255	@ 0xff
 80233fe:	9907      	ldr	r1, [sp, #28]
 8023400:	f340 80d6 	ble.w	80235b0 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3a8>
 8023404:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8023406:	9808      	ldr	r0, [sp, #32]
 8023408:	9a06      	ldr	r2, [sp, #24]
 802340a:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 802340e:	ea4f 0e83 	mov.w	lr, r3, lsl #2
 8023412:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 8023416:	eb01 0181 	add.w	r1, r1, r1, lsl #2
 802341a:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 802341e:	ea4f 0c82 	mov.w	ip, r2, lsl #2
 8023422:	eb06 080e 	add.w	r8, r6, lr
 8023426:	0089      	lsls	r1, r1, #2
 8023428:	0080      	lsls	r0, r0, #2
 802342a:	1872      	adds	r2, r6, r1
 802342c:	eb06 0a00 	add.w	sl, r6, r0
 8023430:	eb06 030c 	add.w	r3, r6, ip
 8023434:	5871      	ldr	r1, [r6, r1]
 8023436:	5830      	ldr	r0, [r6, r0]
 8023438:	f856 c00c 	ldr.w	ip, [r6, ip]
 802343c:	edd8 4a01 	vldr	s9, [r8, #4]
 8023440:	f856 800e 	ldr.w	r8, [r6, lr]
 8023444:	9e02      	ldr	r6, [sp, #8]
 8023446:	6852      	ldr	r2, [r2, #4]
 8023448:	2eff      	cmp	r6, #255	@ 0xff
 802344a:	ed9a 5a01 	vldr	s10, [sl, #4]
 802344e:	685b      	ldr	r3, [r3, #4]
 8023450:	f340 80d2 	ble.w	80235f8 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3f0>
 8023454:	429a      	cmp	r2, r3
 8023456:	f000 815d 	beq.w	8023714 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x50c>
 802345a:	f9b9 6000 	ldrsh.w	r6, [r9]
 802345e:	ee07 ca90 	vmov	s15, ip
 8023462:	ee08 6a90 	vmov	s17, r6
 8023466:	f9b9 6002 	ldrsh.w	r6, [r9, #2]
 802346a:	ee04 3a10 	vmov	s8, r3
 802346e:	ee08 6a10 	vmov	s16, r6
 8023472:	eef8 8ae8 	vcvt.f32.s32	s17, s17
 8023476:	eeb8 8ac8 	vcvt.f32.s32	s16, s16
 802347a:	eef8 5ae7 	vcvt.f32.s32	s11, s15
 802347e:	eef8 3ac4 	vcvt.f32.s32	s7, s8
 8023482:	ee07 1a90 	vmov	s15, r1
 8023486:	ee07 0a10 	vmov	s14, r0
 802348a:	ee06 8a10 	vmov	s12, r8
 802348e:	ee04 2a10 	vmov	s8, r2
 8023492:	eddf 6a3d 	vldr	s13, [pc, #244]	@ 8023588 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x380>
 8023496:	eef0 ba68 	vmov.f32	s23, s17
 802349a:	eeb0 ba68 	vmov.f32	s22, s17
 802349e:	eef0 aa68 	vmov.f32	s21, s17
 80234a2:	eeb0 aa48 	vmov.f32	s20, s16
 80234a6:	eef0 9a48 	vmov.f32	s19, s16
 80234aa:	eeb0 9a48 	vmov.f32	s18, s16
 80234ae:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80234b2:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80234b6:	eeb8 6ac6 	vcvt.f32.s32	s12, s12
 80234ba:	eeb8 4ac4 	vcvt.f32.s32	s8, s8
 80234be:	eeb8 5ac5 	vcvt.f32.s32	s10, s10
 80234c2:	eef8 4ae4 	vcvt.f32.s32	s9, s9
 80234c6:	f9b5 b006 	ldrsh.w	fp, [r5, #6]
 80234ca:	eee5 baa6 	vfma.f32	s23, s11, s13
 80234ce:	f1bb 0f00 	cmp.w	fp, #0
 80234d2:	eea7 baa6 	vfma.f32	s22, s15, s13
 80234d6:	eee7 aa26 	vfma.f32	s21, s14, s13
 80234da:	eee6 8a26 	vfma.f32	s17, s12, s13
 80234de:	eea3 aaa6 	vfma.f32	s20, s7, s13
 80234e2:	eee4 9a26 	vfma.f32	s19, s8, s13
 80234e6:	eea5 9a26 	vfma.f32	s18, s10, s13
 80234ea:	eea4 8aa6 	vfma.f32	s16, s9, s13
 80234ee:	f9b5 9002 	ldrsh.w	r9, [r5, #2]
 80234f2:	dd38      	ble.n	8023566 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x35e>
 80234f4:	f9b5 6004 	ldrsh.w	r6, [r5, #4]
 80234f8:	f1bb 0f80 	cmp.w	fp, #128	@ 0x80
 80234fc:	46da      	mov	sl, fp
 80234fe:	bfa8      	it	ge
 8023500:	f04f 0a80 	movge.w	sl, #128	@ 0x80
 8023504:	2e00      	cmp	r6, #0
 8023506:	f9b5 8000 	ldrsh.w	r8, [r5]
 802350a:	dd25      	ble.n	8023558 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x350>
 802350c:	2e80      	cmp	r6, #128	@ 0x80
 802350e:	4632      	mov	r2, r6
 8023510:	4640      	mov	r0, r8
 8023512:	4653      	mov	r3, sl
 8023514:	bfa8      	it	ge
 8023516:	2280      	movge	r2, #128	@ 0x80
 8023518:	4649      	mov	r1, r9
 802351a:	f7ed fd25 	bl	8010f68 <nema_set_clip>
 802351e:	eef0 3a48 	vmov.f32	s7, s16
 8023522:	eeb0 3a68 	vmov.f32	s6, s17
 8023526:	eef0 2a49 	vmov.f32	s5, s18
 802352a:	eeb0 2a6a 	vmov.f32	s4, s21
 802352e:	eef0 1a69 	vmov.f32	s3, s19
 8023532:	eeb0 1a4b 	vmov.f32	s2, s22
 8023536:	eef0 0a4a 	vmov.f32	s1, s20
 802353a:	eeb0 0a6b 	vmov.f32	s0, s23
 802353e:	f7ee f9cd 	bl	80118dc <nema_blit_quad_fit>
 8023542:	6820      	ldr	r0, [r4, #0]
 8023544:	2800      	cmp	r0, #0
 8023546:	f000 80d8 	beq.w	80236fa <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4f2>
 802354a:	3e80      	subs	r6, #128	@ 0x80
 802354c:	f7fd fca4 	bl	8020e98 <_ZN8touchgfx8HALGPU2D16submitExecBufferEv>
 8023550:	2e00      	cmp	r6, #0
 8023552:	f108 0880 	add.w	r8, r8, #128	@ 0x80
 8023556:	dcd9      	bgt.n	802350c <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x304>
 8023558:	f1ab 0b80 	sub.w	fp, fp, #128	@ 0x80
 802355c:	f1bb 0f00 	cmp.w	fp, #0
 8023560:	f109 0980 	add.w	r9, r9, #128	@ 0x80
 8023564:	dcc6      	bgt.n	80234f4 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x2ec>
 8023566:	4638      	mov	r0, r7
 8023568:	b00b      	add	sp, #44	@ 0x2c
 802356a:	ecbd 8b08 	vpop	{d8-d11}
 802356e:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8023572:	f7ee bec5 	b.w	8012300 <nema_enable_aa_flags>
 8023576:	9b05      	ldr	r3, [sp, #20]
 8023578:	781b      	ldrb	r3, [r3, #0]
 802357a:	e6cd      	b.n	8023318 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x110>
 802357c:	2008309c 	.word	0x2008309c
 8023580:	20083544 	.word	0x20083544
 8023584:	08000504 	.word	0x08000504
 8023588:	3d800000 	.word	0x3d800000
 802358c:	4a65      	ldr	r2, [pc, #404]	@ (8023724 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x51c>)
 802358e:	23ff      	movs	r3, #255	@ 0xff
 8023590:	6810      	ldr	r0, [r2, #0]
 8023592:	b2c2      	uxtb	r2, r0
 8023594:	f3c0 2107 	ubfx	r1, r0, #8, #8
 8023598:	f3c0 4007 	ubfx	r0, r0, #16, #8
 802359c:	f7ed fdc2 	bl	8011124 <nema_rgba>
 80235a0:	f7ed fcd6 	bl	8010f50 <nema_set_tex_color>
 80235a4:	2329      	movs	r3, #41	@ 0x29
 80235a6:	e6b7      	b.n	8023318 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x110>
 80235a8:	2310      	movs	r3, #16
 80235aa:	e6b5      	b.n	8023318 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x110>
 80235ac:	2339      	movs	r3, #57	@ 0x39
 80235ae:	e6b3      	b.n	8023318 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x110>
 80235b0:	9b08      	ldr	r3, [sp, #32]
 80235b2:	9806      	ldr	r0, [sp, #24]
 80235b4:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 80235b6:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 80235ba:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 80235be:	eb01 0181 	add.w	r1, r1, r1, lsl #2
 80235c2:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 80235c6:	009b      	lsls	r3, r3, #2
 80235c8:	ea4f 0c80 	mov.w	ip, r0, lsl #2
 80235cc:	ea4f 0e82 	mov.w	lr, r2, lsl #2
 80235d0:	0089      	lsls	r1, r1, #2
 80235d2:	18f0      	adds	r0, r6, r3
 80235d4:	1872      	adds	r2, r6, r1
 80235d6:	eb06 0a0c 	add.w	sl, r6, ip
 80235da:	eb06 080e 	add.w	r8, r6, lr
 80235de:	ed90 5a01 	vldr	s10, [r0, #4]
 80235e2:	edd8 4a01 	vldr	s9, [r8, #4]
 80235e6:	58f0      	ldr	r0, [r6, r3]
 80235e8:	6852      	ldr	r2, [r2, #4]
 80235ea:	5871      	ldr	r1, [r6, r1]
 80235ec:	f8da 3004 	ldr.w	r3, [sl, #4]
 80235f0:	f856 c00c 	ldr.w	ip, [r6, ip]
 80235f4:	f856 800e 	ldr.w	r8, [r6, lr]
 80235f8:	429a      	cmp	r2, r3
 80235fa:	d06a      	beq.n	80236d2 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4ca>
 80235fc:	ee07 8a90 	vmov	s15, r8
 8023600:	f9b9 5000 	ldrsh.w	r5, [r9]
 8023604:	eeb8 6ae7 	vcvt.f32.s32	s12, s15
 8023608:	ee00 5a10 	vmov	s0, r5
 802360c:	ee07 0a90 	vmov	s15, r0
 8023610:	f9b9 5002 	ldrsh.w	r5, [r9, #2]
 8023614:	eeb8 0ac0 	vcvt.f32.s32	s0, s0
 8023618:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 802361c:	ee00 5a90 	vmov	s1, r5
 8023620:	ee07 1a90 	vmov	s15, r1
 8023624:	eddf 6a40 	vldr	s13, [pc, #256]	@ 8023728 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x520>
 8023628:	eef8 0ae0 	vcvt.f32.s32	s1, s1
 802362c:	ee04 2a10 	vmov	s8, r2
 8023630:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8023634:	eeb0 1a40 	vmov.f32	s2, s0
 8023638:	eef8 1ac4 	vcvt.f32.s32	s3, s8
 802363c:	ee05 ca90 	vmov	s11, ip
 8023640:	ee04 3a10 	vmov	s8, r3
 8023644:	eea7 1aa6 	vfma.f32	s2, s15, s13
 8023648:	eef0 7a60 	vmov.f32	s15, s1
 802364c:	eef8 5ae5 	vcvt.f32.s32	s11, s11
 8023650:	eef8 4ae4 	vcvt.f32.s32	s9, s9
 8023654:	eeb8 5ac5 	vcvt.f32.s32	s10, s10
 8023658:	eeb8 4ac4 	vcvt.f32.s32	s8, s8
 802365c:	eeb0 3a40 	vmov.f32	s6, s0
 8023660:	eeb0 2a40 	vmov.f32	s4, s0
 8023664:	eef0 3a60 	vmov.f32	s7, s1
 8023668:	eef0 2a60 	vmov.f32	s5, s1
 802366c:	eee1 7aa6 	vfma.f32	s15, s3, s13
 8023670:	eea6 3a26 	vfma.f32	s6, s12, s13
 8023674:	eea7 2a26 	vfma.f32	s4, s14, s13
 8023678:	eea5 0aa6 	vfma.f32	s0, s11, s13
 802367c:	eee4 3aa6 	vfma.f32	s7, s9, s13
 8023680:	eee5 2a26 	vfma.f32	s5, s10, s13
 8023684:	eef0 1a67 	vmov.f32	s3, s15
 8023688:	eee4 0a26 	vfma.f32	s1, s8, s13
 802368c:	f7ee f926 	bl	80118dc <nema_blit_quad_fit>
 8023690:	6820      	ldr	r0, [r4, #0]
 8023692:	b390      	cbz	r0, 80236fa <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4f2>
 8023694:	b00b      	add	sp, #44	@ 0x2c
 8023696:	ecbd 8b08 	vpop	{d8-d11}
 802369a:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802369e:	f7fd bbfb 	b.w	8020e98 <_ZN8touchgfx8HALGPU2D16submitExecBufferEv>
 80236a2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80236a6:	bf94      	ite	ls
 80236a8:	4613      	movls	r3, r2
 80236aa:	2303      	movhi	r3, #3
 80236ac:	e671      	b.n	8023392 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x18a>
 80236ae:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80236b2:	bf94      	ite	ls
 80236b4:	2300      	movls	r3, #0
 80236b6:	2303      	movhi	r3, #3
 80236b8:	e654      	b.n	8023364 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x15c>
 80236ba:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80236be:	bf94      	ite	ls
 80236c0:	2300      	movls	r3, #0
 80236c2:	2303      	movhi	r3, #3
 80236c4:	e693      	b.n	80233ee <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1e6>
 80236c6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80236ca:	bf94      	ite	ls
 80236cc:	2300      	movls	r3, #0
 80236ce:	2303      	movhi	r3, #3
 80236d0:	e676      	b.n	80233c0 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1b8>
 80236d2:	4281      	cmp	r1, r0
 80236d4:	d192      	bne.n	80235fc <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3f4>
 80236d6:	2200      	movs	r2, #0
 80236d8:	ee15 6a10 	vmov	r6, s10
 80236dc:	ee14 ea90 	vmov	lr, s9
 80236e0:	4576      	cmp	r6, lr
 80236e2:	d002      	beq.n	80236ea <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4e2>
 80236e4:	b1da      	cbz	r2, 802371e <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x516>
 80236e6:	461a      	mov	r2, r3
 80236e8:	e6b7      	b.n	802345a <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x252>
 80236ea:	45c4      	cmp	ip, r8
 80236ec:	d1fa      	bne.n	80236e4 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4dc>
 80236ee:	460d      	mov	r5, r1
 80236f0:	46e0      	mov	r8, ip
 80236f2:	4601      	mov	r1, r0
 80236f4:	461a      	mov	r2, r3
 80236f6:	4628      	mov	r0, r5
 80236f8:	e780      	b.n	80235fc <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3f4>
 80236fa:	4b0c      	ldr	r3, [pc, #48]	@ (802372c <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x524>)
 80236fc:	4a0c      	ldr	r2, [pc, #48]	@ (8023730 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x528>)
 80236fe:	217c      	movs	r1, #124	@ 0x7c
 8023700:	480c      	ldr	r0, [pc, #48]	@ (8023734 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x52c>)
 8023702:	f00f f839 	bl	8032778 <__assert_func>
 8023706:	4b0c      	ldr	r3, [pc, #48]	@ (8023738 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x530>)
 8023708:	4a0c      	ldr	r2, [pc, #48]	@ (802373c <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x534>)
 802370a:	f44f 7157 	mov.w	r1, #860	@ 0x35c
 802370e:	480c      	ldr	r0, [pc, #48]	@ (8023740 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x538>)
 8023710:	f00f f832 	bl	8032778 <__assert_func>
 8023714:	4281      	cmp	r1, r0
 8023716:	f47f aea0 	bne.w	802345a <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x252>
 802371a:	2201      	movs	r2, #1
 802371c:	e7dc      	b.n	80236d8 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d0>
 802371e:	461a      	mov	r2, r3
 8023720:	e76c      	b.n	80235fc <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3f4>
 8023722:	bf00      	nop
 8023724:	200830ac 	.word	0x200830ac
 8023728:	3d800000 	.word	0x3d800000
 802372c:	080364bc 	.word	0x080364bc
 8023730:	08036d28 	.word	0x08036d28
 8023734:	080364e4 	.word	0x080364e4
 8023738:	080363b4 	.word	0x080363b4
 802373c:	08036ee0 	.word	0x08036ee0
 8023740:	08036560 	.word	0x08036560

08023744 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
 8023744:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8023748:	4680      	mov	r8, r0
 802374a:	460f      	mov	r7, r1
 802374c:	4614      	mov	r4, r2
 802374e:	461e      	mov	r6, r3
 8023750:	4db2      	ldr	r5, [pc, #712]	@ (8023a1c <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x2d8>)
 8023752:	e8d5 3f8f 	ldab	r3, [r5]
 8023756:	07da      	lsls	r2, r3, #31
 8023758:	f140 823a 	bpl.w	8023bd0 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x48c>
 802375c:	4db0      	ldr	r5, [pc, #704]	@ (8023a20 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x2dc>)
 802375e:	e8d5 3f8f 	ldab	r3, [r5]
 8023762:	07db      	lsls	r3, r3, #31
 8023764:	f140 8225 	bpl.w	8023bb2 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x46e>
 8023768:	4dae      	ldr	r5, [pc, #696]	@ (8023a24 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x2e0>)
 802376a:	e8d5 3f8f 	ldab	r3, [r5]
 802376e:	07d8      	lsls	r0, r3, #31
 8023770:	f140 8210 	bpl.w	8023b94 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x450>
 8023774:	4dac      	ldr	r5, [pc, #688]	@ (8023a28 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x2e4>)
 8023776:	e8d5 3f8f 	ldab	r3, [r5]
 802377a:	07d9      	lsls	r1, r3, #31
 802377c:	f140 81fb 	bpl.w	8023b76 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x432>
 8023780:	4daa      	ldr	r5, [pc, #680]	@ (8023a2c <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x2e8>)
 8023782:	e8d5 3f8f 	ldab	r3, [r5]
 8023786:	07da      	lsls	r2, r3, #31
 8023788:	f140 81e6 	bpl.w	8023b58 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x414>
 802378c:	4da8      	ldr	r5, [pc, #672]	@ (8023a30 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x2ec>)
 802378e:	e8d5 3f8f 	ldab	r3, [r5]
 8023792:	07db      	lsls	r3, r3, #31
 8023794:	f140 81d1 	bpl.w	8023b3a <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x3f6>
 8023798:	4da6      	ldr	r5, [pc, #664]	@ (8023a34 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x2f0>)
 802379a:	e8d5 3f8f 	ldab	r3, [r5]
 802379e:	07d8      	lsls	r0, r3, #31
 80237a0:	f140 81bc 	bpl.w	8023b1c <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x3d8>
 80237a4:	4da4      	ldr	r5, [pc, #656]	@ (8023a38 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x2f4>)
 80237a6:	e8d5 3f8f 	ldab	r3, [r5]
 80237aa:	07d9      	lsls	r1, r3, #31
 80237ac:	f140 81a7 	bpl.w	8023afe <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x3ba>
 80237b0:	4da2      	ldr	r5, [pc, #648]	@ (8023a3c <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x2f8>)
 80237b2:	e8d5 3f8f 	ldab	r3, [r5]
 80237b6:	07da      	lsls	r2, r3, #31
 80237b8:	f140 8192 	bpl.w	8023ae0 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x39c>
 80237bc:	4da0      	ldr	r5, [pc, #640]	@ (8023a40 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x2fc>)
 80237be:	e8d5 3f8f 	ldab	r3, [r5]
 80237c2:	07db      	lsls	r3, r3, #31
 80237c4:	f140 811a 	bpl.w	80239fc <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x2b8>
 80237c8:	4d9e      	ldr	r5, [pc, #632]	@ (8023a44 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x300>)
 80237ca:	e8d5 3f8f 	ldab	r3, [r5]
 80237ce:	07d8      	lsls	r0, r3, #31
 80237d0:	f140 8105 	bpl.w	80239de <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x29a>
 80237d4:	4d9c      	ldr	r5, [pc, #624]	@ (8023a48 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x304>)
 80237d6:	e8d5 3f8f 	ldab	r3, [r5]
 80237da:	07d9      	lsls	r1, r3, #31
 80237dc:	f140 80f0 	bpl.w	80239c0 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x27c>
 80237e0:	4d9a      	ldr	r5, [pc, #616]	@ (8023a4c <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x308>)
 80237e2:	e8d5 3f8f 	ldab	r3, [r5]
 80237e6:	07da      	lsls	r2, r3, #31
 80237e8:	f140 80db 	bpl.w	80239a2 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x25e>
 80237ec:	4d98      	ldr	r5, [pc, #608]	@ (8023a50 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x30c>)
 80237ee:	e8d5 3f8f 	ldab	r3, [r5]
 80237f2:	07db      	lsls	r3, r3, #31
 80237f4:	f140 80c6 	bpl.w	8023984 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x240>
 80237f8:	4d96      	ldr	r5, [pc, #600]	@ (8023a54 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x310>)
 80237fa:	e8d5 3f8f 	ldab	r3, [r5]
 80237fe:	07d8      	lsls	r0, r3, #31
 8023800:	f140 80b1 	bpl.w	8023966 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x222>
 8023804:	4d94      	ldr	r5, [pc, #592]	@ (8023a58 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x314>)
 8023806:	e8d5 3f8f 	ldab	r3, [r5]
 802380a:	07d9      	lsls	r1, r3, #31
 802380c:	f140 809c 	bpl.w	8023948 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x204>
 8023810:	4d92      	ldr	r5, [pc, #584]	@ (8023a5c <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x318>)
 8023812:	e8d5 3f8f 	ldab	r3, [r5]
 8023816:	07da      	lsls	r2, r3, #31
 8023818:	f140 8087 	bpl.w	802392a <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1e6>
 802381c:	4d90      	ldr	r5, [pc, #576]	@ (8023a60 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x31c>)
 802381e:	e8d5 3f8f 	ldab	r3, [r5]
 8023822:	07db      	lsls	r3, r3, #31
 8023824:	d573      	bpl.n	802390e <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1ca>
 8023826:	4d8f      	ldr	r5, [pc, #572]	@ (8023a64 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x320>)
 8023828:	e8d5 3f8f 	ldab	r3, [r5]
 802382c:	07d8      	lsls	r0, r3, #31
 802382e:	d560      	bpl.n	80238f2 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1ae>
 8023830:	4d8d      	ldr	r5, [pc, #564]	@ (8023a68 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x324>)
 8023832:	e8d5 3f8f 	ldab	r3, [r5]
 8023836:	07d9      	lsls	r1, r3, #31
 8023838:	d54d      	bpl.n	80238d6 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x192>
 802383a:	4d8c      	ldr	r5, [pc, #560]	@ (8023a6c <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x328>)
 802383c:	e8d5 3f8f 	ldab	r3, [r5]
 8023840:	07da      	lsls	r2, r3, #31
 8023842:	d53a      	bpl.n	80238ba <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x176>
 8023844:	4d8a      	ldr	r5, [pc, #552]	@ (8023a70 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x32c>)
 8023846:	e8d5 3f8f 	ldab	r3, [r5]
 802384a:	07db      	lsls	r3, r3, #31
 802384c:	d517      	bpl.n	802387e <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13a>
 802384e:	f898 300c 	ldrb.w	r3, [r8, #12]
 8023852:	2b01      	cmp	r3, #1
 8023854:	d024      	beq.n	80238a0 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x15c>
 8023856:	f0c0 81ca 	bcc.w	8023bee <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x4aa>
 802385a:	2b02      	cmp	r3, #2
 802385c:	d002      	beq.n	8023864 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x120>
 802385e:	2000      	movs	r0, #0
 8023860:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8023864:	2eff      	cmp	r6, #255	@ 0xff
 8023866:	f1a4 042c 	sub.w	r4, r4, #44	@ 0x2c
 802386a:	f000 81cb 	beq.w	8023c04 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x4c0>
 802386e:	2c03      	cmp	r4, #3
 8023870:	d8f5      	bhi.n	802385e <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11a>
 8023872:	e8df f014 	tbh	[pc, r4, lsl #1]
 8023876:	01ff      	.short	0x01ff
 8023878:	01e701ee 	.word	0x01e701ee
 802387c:	01e0      	.short	0x01e0
 802387e:	4628      	mov	r0, r5
 8023880:	f00d fda3 	bl	80313ca <__cxa_guard_acquire>
 8023884:	2800      	cmp	r0, #0
 8023886:	d0e2      	beq.n	802384e <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x10a>
 8023888:	4628      	mov	r0, r5
 802388a:	f00d fdaa 	bl	80313e2 <__cxa_guard_release>
 802388e:	4a79      	ldr	r2, [pc, #484]	@ (8023a74 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x330>)
 8023890:	4979      	ldr	r1, [pc, #484]	@ (8023a78 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x334>)
 8023892:	487a      	ldr	r0, [pc, #488]	@ (8023a7c <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x338>)
 8023894:	f00d fd92 	bl	80313bc <__aeabi_atexit>
 8023898:	f898 300c 	ldrb.w	r3, [r8, #12]
 802389c:	2b01      	cmp	r3, #1
 802389e:	d1da      	bne.n	8023856 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x112>
 80238a0:	2eff      	cmp	r6, #255	@ 0xff
 80238a2:	f1a4 042c 	sub.w	r4, r4, #44	@ 0x2c
 80238a6:	f000 81b6 	beq.w	8023c16 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x4d2>
 80238aa:	2c03      	cmp	r4, #3
 80238ac:	d8d7      	bhi.n	802385e <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11a>
 80238ae:	e8df f014 	tbh	[pc, r4, lsl #1]
 80238b2:	0233      	.short	0x0233
 80238b4:	021b0222 	.word	0x021b0222
 80238b8:	0214      	.short	0x0214
 80238ba:	4628      	mov	r0, r5
 80238bc:	f00d fd85 	bl	80313ca <__cxa_guard_acquire>
 80238c0:	2800      	cmp	r0, #0
 80238c2:	d0bf      	beq.n	8023844 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x100>
 80238c4:	4628      	mov	r0, r5
 80238c6:	f00d fd8c 	bl	80313e2 <__cxa_guard_release>
 80238ca:	4a6a      	ldr	r2, [pc, #424]	@ (8023a74 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x330>)
 80238cc:	496c      	ldr	r1, [pc, #432]	@ (8023a80 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x33c>)
 80238ce:	486d      	ldr	r0, [pc, #436]	@ (8023a84 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x340>)
 80238d0:	f00d fd74 	bl	80313bc <__aeabi_atexit>
 80238d4:	e7b6      	b.n	8023844 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x100>
 80238d6:	4628      	mov	r0, r5
 80238d8:	f00d fd77 	bl	80313ca <__cxa_guard_acquire>
 80238dc:	2800      	cmp	r0, #0
 80238de:	d0ac      	beq.n	802383a <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xf6>
 80238e0:	4628      	mov	r0, r5
 80238e2:	f00d fd7e 	bl	80313e2 <__cxa_guard_release>
 80238e6:	4a63      	ldr	r2, [pc, #396]	@ (8023a74 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x330>)
 80238e8:	4967      	ldr	r1, [pc, #412]	@ (8023a88 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x344>)
 80238ea:	4868      	ldr	r0, [pc, #416]	@ (8023a8c <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x348>)
 80238ec:	f00d fd66 	bl	80313bc <__aeabi_atexit>
 80238f0:	e7a3      	b.n	802383a <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xf6>
 80238f2:	4628      	mov	r0, r5
 80238f4:	f00d fd69 	bl	80313ca <__cxa_guard_acquire>
 80238f8:	2800      	cmp	r0, #0
 80238fa:	d099      	beq.n	8023830 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xec>
 80238fc:	4628      	mov	r0, r5
 80238fe:	f00d fd70 	bl	80313e2 <__cxa_guard_release>
 8023902:	4a5c      	ldr	r2, [pc, #368]	@ (8023a74 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x330>)
 8023904:	4962      	ldr	r1, [pc, #392]	@ (8023a90 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x34c>)
 8023906:	4863      	ldr	r0, [pc, #396]	@ (8023a94 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x350>)
 8023908:	f00d fd58 	bl	80313bc <__aeabi_atexit>
 802390c:	e790      	b.n	8023830 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xec>
 802390e:	4628      	mov	r0, r5
 8023910:	f00d fd5b 	bl	80313ca <__cxa_guard_acquire>
 8023914:	2800      	cmp	r0, #0
 8023916:	d086      	beq.n	8023826 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xe2>
 8023918:	4628      	mov	r0, r5
 802391a:	f00d fd62 	bl	80313e2 <__cxa_guard_release>
 802391e:	4a55      	ldr	r2, [pc, #340]	@ (8023a74 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x330>)
 8023920:	495d      	ldr	r1, [pc, #372]	@ (8023a98 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x354>)
 8023922:	485e      	ldr	r0, [pc, #376]	@ (8023a9c <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x358>)
 8023924:	f00d fd4a 	bl	80313bc <__aeabi_atexit>
 8023928:	e77d      	b.n	8023826 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xe2>
 802392a:	4628      	mov	r0, r5
 802392c:	f00d fd4d 	bl	80313ca <__cxa_guard_acquire>
 8023930:	2800      	cmp	r0, #0
 8023932:	f43f af73 	beq.w	802381c <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xd8>
 8023936:	4628      	mov	r0, r5
 8023938:	f00d fd53 	bl	80313e2 <__cxa_guard_release>
 802393c:	4a4d      	ldr	r2, [pc, #308]	@ (8023a74 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x330>)
 802393e:	4958      	ldr	r1, [pc, #352]	@ (8023aa0 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x35c>)
 8023940:	4858      	ldr	r0, [pc, #352]	@ (8023aa4 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x360>)
 8023942:	f00d fd3b 	bl	80313bc <__aeabi_atexit>
 8023946:	e769      	b.n	802381c <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xd8>
 8023948:	4628      	mov	r0, r5
 802394a:	f00d fd3e 	bl	80313ca <__cxa_guard_acquire>
 802394e:	2800      	cmp	r0, #0
 8023950:	f43f af5e 	beq.w	8023810 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xcc>
 8023954:	4628      	mov	r0, r5
 8023956:	f00d fd44 	bl	80313e2 <__cxa_guard_release>
 802395a:	4a46      	ldr	r2, [pc, #280]	@ (8023a74 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x330>)
 802395c:	4952      	ldr	r1, [pc, #328]	@ (8023aa8 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x364>)
 802395e:	4853      	ldr	r0, [pc, #332]	@ (8023aac <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x368>)
 8023960:	f00d fd2c 	bl	80313bc <__aeabi_atexit>
 8023964:	e754      	b.n	8023810 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xcc>
 8023966:	4628      	mov	r0, r5
 8023968:	f00d fd2f 	bl	80313ca <__cxa_guard_acquire>
 802396c:	2800      	cmp	r0, #0
 802396e:	f43f af49 	beq.w	8023804 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xc0>
 8023972:	4628      	mov	r0, r5
 8023974:	f00d fd35 	bl	80313e2 <__cxa_guard_release>
 8023978:	4a3e      	ldr	r2, [pc, #248]	@ (8023a74 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x330>)
 802397a:	494d      	ldr	r1, [pc, #308]	@ (8023ab0 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x36c>)
 802397c:	484d      	ldr	r0, [pc, #308]	@ (8023ab4 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x370>)
 802397e:	f00d fd1d 	bl	80313bc <__aeabi_atexit>
 8023982:	e73f      	b.n	8023804 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xc0>
 8023984:	4628      	mov	r0, r5
 8023986:	f00d fd20 	bl	80313ca <__cxa_guard_acquire>
 802398a:	2800      	cmp	r0, #0
 802398c:	f43f af34 	beq.w	80237f8 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xb4>
 8023990:	4628      	mov	r0, r5
 8023992:	f00d fd26 	bl	80313e2 <__cxa_guard_release>
 8023996:	4a37      	ldr	r2, [pc, #220]	@ (8023a74 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x330>)
 8023998:	4947      	ldr	r1, [pc, #284]	@ (8023ab8 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x374>)
 802399a:	4848      	ldr	r0, [pc, #288]	@ (8023abc <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x378>)
 802399c:	f00d fd0e 	bl	80313bc <__aeabi_atexit>
 80239a0:	e72a      	b.n	80237f8 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xb4>
 80239a2:	4628      	mov	r0, r5
 80239a4:	f00d fd11 	bl	80313ca <__cxa_guard_acquire>
 80239a8:	2800      	cmp	r0, #0
 80239aa:	f43f af1f 	beq.w	80237ec <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa8>
 80239ae:	4628      	mov	r0, r5
 80239b0:	f00d fd17 	bl	80313e2 <__cxa_guard_release>
 80239b4:	4a2f      	ldr	r2, [pc, #188]	@ (8023a74 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x330>)
 80239b6:	4942      	ldr	r1, [pc, #264]	@ (8023ac0 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x37c>)
 80239b8:	4842      	ldr	r0, [pc, #264]	@ (8023ac4 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x380>)
 80239ba:	f00d fcff 	bl	80313bc <__aeabi_atexit>
 80239be:	e715      	b.n	80237ec <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa8>
 80239c0:	4628      	mov	r0, r5
 80239c2:	f00d fd02 	bl	80313ca <__cxa_guard_acquire>
 80239c6:	2800      	cmp	r0, #0
 80239c8:	f43f af0a 	beq.w	80237e0 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9c>
 80239cc:	4628      	mov	r0, r5
 80239ce:	f00d fd08 	bl	80313e2 <__cxa_guard_release>
 80239d2:	4a28      	ldr	r2, [pc, #160]	@ (8023a74 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x330>)
 80239d4:	493c      	ldr	r1, [pc, #240]	@ (8023ac8 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x384>)
 80239d6:	483d      	ldr	r0, [pc, #244]	@ (8023acc <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x388>)
 80239d8:	f00d fcf0 	bl	80313bc <__aeabi_atexit>
 80239dc:	e700      	b.n	80237e0 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9c>
 80239de:	4628      	mov	r0, r5
 80239e0:	f00d fcf3 	bl	80313ca <__cxa_guard_acquire>
 80239e4:	2800      	cmp	r0, #0
 80239e6:	f43f aef5 	beq.w	80237d4 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x90>
 80239ea:	4628      	mov	r0, r5
 80239ec:	f00d fcf9 	bl	80313e2 <__cxa_guard_release>
 80239f0:	4a20      	ldr	r2, [pc, #128]	@ (8023a74 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x330>)
 80239f2:	4937      	ldr	r1, [pc, #220]	@ (8023ad0 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x38c>)
 80239f4:	4837      	ldr	r0, [pc, #220]	@ (8023ad4 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x390>)
 80239f6:	f00d fce1 	bl	80313bc <__aeabi_atexit>
 80239fa:	e6eb      	b.n	80237d4 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x90>
 80239fc:	4628      	mov	r0, r5
 80239fe:	f00d fce4 	bl	80313ca <__cxa_guard_acquire>
 8023a02:	2800      	cmp	r0, #0
 8023a04:	f43f aee0 	beq.w	80237c8 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x84>
 8023a08:	4628      	mov	r0, r5
 8023a0a:	f00d fcea 	bl	80313e2 <__cxa_guard_release>
 8023a0e:	4a19      	ldr	r2, [pc, #100]	@ (8023a74 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x330>)
 8023a10:	4931      	ldr	r1, [pc, #196]	@ (8023ad8 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x394>)
 8023a12:	4832      	ldr	r0, [pc, #200]	@ (8023adc <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x398>)
 8023a14:	f00d fcd2 	bl	80313bc <__aeabi_atexit>
 8023a18:	e6d6      	b.n	80237c8 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x84>
 8023a1a:	bf00      	nop
 8023a1c:	2008356c 	.word	0x2008356c
 8023a20:	20083580 	.word	0x20083580
 8023a24:	20083548 	.word	0x20083548
 8023a28:	20083554 	.word	0x20083554
 8023a2c:	2008358c 	.word	0x2008358c
 8023a30:	20083598 	.word	0x20083598
 8023a34:	20083560 	.word	0x20083560
 8023a38:	20083578 	.word	0x20083578
 8023a3c:	20083570 	.word	0x20083570
 8023a40:	20083584 	.word	0x20083584
 8023a44:	2008354c 	.word	0x2008354c
 8023a48:	20083558 	.word	0x20083558
 8023a4c:	20083590 	.word	0x20083590
 8023a50:	2008359c 	.word	0x2008359c
 8023a54:	20083564 	.word	0x20083564
 8023a58:	2008357c 	.word	0x2008357c
 8023a5c:	20083574 	.word	0x20083574
 8023a60:	20083588 	.word	0x20083588
 8023a64:	20083550 	.word	0x20083550
 8023a68:	2008355c 	.word	0x2008355c
 8023a6c:	20083594 	.word	0x20083594
 8023a70:	20083568 	.word	0x20083568
 8023a74:	20000000 	.word	0x20000000
 8023a78:	08022ac9 	.word	0x08022ac9
 8023a7c:	2000020c 	.word	0x2000020c
 8023a80:	08022ac5 	.word	0x08022ac5
 8023a84:	20000238 	.word	0x20000238
 8023a88:	08022ad5 	.word	0x08022ad5
 8023a8c:	20000200 	.word	0x20000200
 8023a90:	08022ad9 	.word	0x08022ad9
 8023a94:	200001f4 	.word	0x200001f4
 8023a98:	08022acd 	.word	0x08022acd
 8023a9c:	2000022c 	.word	0x2000022c
 8023aa0:	08022ad1 	.word	0x08022ad1
 8023aa4:	20000218 	.word	0x20000218
 8023aa8:	08022ae5 	.word	0x08022ae5
 8023aac:	20000220 	.word	0x20000220
 8023ab0:	08022ae9 	.word	0x08022ae9
 8023ab4:	20000208 	.word	0x20000208
 8023ab8:	08022add 	.word	0x08022add
 8023abc:	20000240 	.word	0x20000240
 8023ac0:	08022ae1 	.word	0x08022ae1
 8023ac4:	20000234 	.word	0x20000234
 8023ac8:	08022af5 	.word	0x08022af5
 8023acc:	200001fc 	.word	0x200001fc
 8023ad0:	08022af9 	.word	0x08022af9
 8023ad4:	200001f0 	.word	0x200001f0
 8023ad8:	08022aed 	.word	0x08022aed
 8023adc:	20000228 	.word	0x20000228
 8023ae0:	4628      	mov	r0, r5
 8023ae2:	f00d fc72 	bl	80313ca <__cxa_guard_acquire>
 8023ae6:	2800      	cmp	r0, #0
 8023ae8:	f43f ae68 	beq.w	80237bc <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x78>
 8023aec:	4628      	mov	r0, r5
 8023aee:	f00d fc78 	bl	80313e2 <__cxa_guard_release>
 8023af2:	4aa6      	ldr	r2, [pc, #664]	@ (8023d8c <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x648>)
 8023af4:	49a6      	ldr	r1, [pc, #664]	@ (8023d90 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x64c>)
 8023af6:	48a7      	ldr	r0, [pc, #668]	@ (8023d94 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x650>)
 8023af8:	f00d fc60 	bl	80313bc <__aeabi_atexit>
 8023afc:	e65e      	b.n	80237bc <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x78>
 8023afe:	4628      	mov	r0, r5
 8023b00:	f00d fc63 	bl	80313ca <__cxa_guard_acquire>
 8023b04:	2800      	cmp	r0, #0
 8023b06:	f43f ae53 	beq.w	80237b0 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6c>
 8023b0a:	4628      	mov	r0, r5
 8023b0c:	f00d fc69 	bl	80313e2 <__cxa_guard_release>
 8023b10:	4a9e      	ldr	r2, [pc, #632]	@ (8023d8c <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x648>)
 8023b12:	49a1      	ldr	r1, [pc, #644]	@ (8023d98 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x654>)
 8023b14:	48a1      	ldr	r0, [pc, #644]	@ (8023d9c <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x658>)
 8023b16:	f00d fc51 	bl	80313bc <__aeabi_atexit>
 8023b1a:	e649      	b.n	80237b0 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6c>
 8023b1c:	4628      	mov	r0, r5
 8023b1e:	f00d fc54 	bl	80313ca <__cxa_guard_acquire>
 8023b22:	2800      	cmp	r0, #0
 8023b24:	f43f ae3e 	beq.w	80237a4 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x60>
 8023b28:	4628      	mov	r0, r5
 8023b2a:	f00d fc5a 	bl	80313e2 <__cxa_guard_release>
 8023b2e:	4a97      	ldr	r2, [pc, #604]	@ (8023d8c <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x648>)
 8023b30:	499b      	ldr	r1, [pc, #620]	@ (8023da0 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x65c>)
 8023b32:	489c      	ldr	r0, [pc, #624]	@ (8023da4 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x660>)
 8023b34:	f00d fc42 	bl	80313bc <__aeabi_atexit>
 8023b38:	e634      	b.n	80237a4 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x60>
 8023b3a:	4628      	mov	r0, r5
 8023b3c:	f00d fc45 	bl	80313ca <__cxa_guard_acquire>
 8023b40:	2800      	cmp	r0, #0
 8023b42:	f43f ae29 	beq.w	8023798 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x54>
 8023b46:	4628      	mov	r0, r5
 8023b48:	f00d fc4b 	bl	80313e2 <__cxa_guard_release>
 8023b4c:	4a8f      	ldr	r2, [pc, #572]	@ (8023d8c <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x648>)
 8023b4e:	4996      	ldr	r1, [pc, #600]	@ (8023da8 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x664>)
 8023b50:	4896      	ldr	r0, [pc, #600]	@ (8023dac <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x668>)
 8023b52:	f00d fc33 	bl	80313bc <__aeabi_atexit>
 8023b56:	e61f      	b.n	8023798 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x54>
 8023b58:	4628      	mov	r0, r5
 8023b5a:	f00d fc36 	bl	80313ca <__cxa_guard_acquire>
 8023b5e:	2800      	cmp	r0, #0
 8023b60:	f43f ae14 	beq.w	802378c <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x48>
 8023b64:	4628      	mov	r0, r5
 8023b66:	f00d fc3c 	bl	80313e2 <__cxa_guard_release>
 8023b6a:	4a88      	ldr	r2, [pc, #544]	@ (8023d8c <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x648>)
 8023b6c:	4990      	ldr	r1, [pc, #576]	@ (8023db0 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x66c>)
 8023b6e:	4891      	ldr	r0, [pc, #580]	@ (8023db4 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x670>)
 8023b70:	f00d fc24 	bl	80313bc <__aeabi_atexit>
 8023b74:	e60a      	b.n	802378c <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x48>
 8023b76:	4628      	mov	r0, r5
 8023b78:	f00d fc27 	bl	80313ca <__cxa_guard_acquire>
 8023b7c:	2800      	cmp	r0, #0
 8023b7e:	f43f adff 	beq.w	8023780 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x3c>
 8023b82:	4628      	mov	r0, r5
 8023b84:	f00d fc2d 	bl	80313e2 <__cxa_guard_release>
 8023b88:	4a80      	ldr	r2, [pc, #512]	@ (8023d8c <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x648>)
 8023b8a:	498b      	ldr	r1, [pc, #556]	@ (8023db8 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x674>)
 8023b8c:	488b      	ldr	r0, [pc, #556]	@ (8023dbc <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x678>)
 8023b8e:	f00d fc15 	bl	80313bc <__aeabi_atexit>
 8023b92:	e5f5      	b.n	8023780 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x3c>
 8023b94:	4628      	mov	r0, r5
 8023b96:	f00d fc18 	bl	80313ca <__cxa_guard_acquire>
 8023b9a:	2800      	cmp	r0, #0
 8023b9c:	f43f adea 	beq.w	8023774 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x30>
 8023ba0:	4628      	mov	r0, r5
 8023ba2:	f00d fc1e 	bl	80313e2 <__cxa_guard_release>
 8023ba6:	4a79      	ldr	r2, [pc, #484]	@ (8023d8c <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x648>)
 8023ba8:	4985      	ldr	r1, [pc, #532]	@ (8023dc0 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x67c>)
 8023baa:	4886      	ldr	r0, [pc, #536]	@ (8023dc4 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x680>)
 8023bac:	f00d fc06 	bl	80313bc <__aeabi_atexit>
 8023bb0:	e5e0      	b.n	8023774 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x30>
 8023bb2:	4628      	mov	r0, r5
 8023bb4:	f00d fc09 	bl	80313ca <__cxa_guard_acquire>
 8023bb8:	2800      	cmp	r0, #0
 8023bba:	f43f add5 	beq.w	8023768 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8023bbe:	4628      	mov	r0, r5
 8023bc0:	f00d fc0f 	bl	80313e2 <__cxa_guard_release>
 8023bc4:	4a71      	ldr	r2, [pc, #452]	@ (8023d8c <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x648>)
 8023bc6:	4980      	ldr	r1, [pc, #512]	@ (8023dc8 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x684>)
 8023bc8:	4880      	ldr	r0, [pc, #512]	@ (8023dcc <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x688>)
 8023bca:	f00d fbf7 	bl	80313bc <__aeabi_atexit>
 8023bce:	e5cb      	b.n	8023768 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8023bd0:	4628      	mov	r0, r5
 8023bd2:	f00d fbfa 	bl	80313ca <__cxa_guard_acquire>
 8023bd6:	2800      	cmp	r0, #0
 8023bd8:	f43f adc0 	beq.w	802375c <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x18>
 8023bdc:	4628      	mov	r0, r5
 8023bde:	f00d fc00 	bl	80313e2 <__cxa_guard_release>
 8023be2:	4a6a      	ldr	r2, [pc, #424]	@ (8023d8c <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x648>)
 8023be4:	497a      	ldr	r1, [pc, #488]	@ (8023dd0 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x68c>)
 8023be6:	487b      	ldr	r0, [pc, #492]	@ (8023dd4 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x690>)
 8023be8:	f00d fbe8 	bl	80313bc <__aeabi_atexit>
 8023bec:	e5b6      	b.n	802375c <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x18>
 8023bee:	2eff      	cmp	r6, #255	@ 0xff
 8023bf0:	f1a4 042c 	sub.w	r4, r4, #44	@ 0x2c
 8023bf4:	d018      	beq.n	8023c28 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x4e4>
 8023bf6:	2c03      	cmp	r4, #3
 8023bf8:	f63f ae31 	bhi.w	802385e <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11a>
 8023bfc:	e8df f004 	tbb	[pc, r4]
 8023c00:	4b525963 	.word	0x4b525963
 8023c04:	2c03      	cmp	r4, #3
 8023c06:	f63f ae2a 	bhi.w	802385e <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11a>
 8023c0a:	e8df f014 	tbh	[pc, r4, lsl #1]
 8023c0e:	012d      	.short	0x012d
 8023c10:	001b011e 	.word	0x001b011e
 8023c14:	0014      	.short	0x0014
 8023c16:	2c03      	cmp	r4, #3
 8023c18:	f63f ae21 	bhi.w	802385e <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11a>
 8023c1c:	e8df f014 	tbh	[pc, r4, lsl #1]
 8023c20:	00f000ff 	.word	0x00f000ff
 8023c24:	00af010e 	.word	0x00af010e
 8023c28:	2c03      	cmp	r4, #3
 8023c2a:	f63f ae18 	bhi.w	802385e <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11a>
 8023c2e:	e8df f004 	tbb	[pc, r4]
 8023c32:	929c      	.short	0x929c
 8023c34:	848b      	.short	0x848b
 8023c36:	687b      	ldr	r3, [r7, #4]
 8023c38:	4867      	ldr	r0, [pc, #412]	@ (8023dd8 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x694>)
 8023c3a:	781b      	ldrb	r3, [r3, #0]
 8023c3c:	2b00      	cmp	r3, #0
 8023c3e:	bf18      	it	ne
 8023c40:	2000      	movne	r0, #0
 8023c42:	e60d      	b.n	8023860 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11c>
 8023c44:	687b      	ldr	r3, [r7, #4]
 8023c46:	4865      	ldr	r0, [pc, #404]	@ (8023ddc <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x698>)
 8023c48:	781b      	ldrb	r3, [r3, #0]
 8023c4a:	2b00      	cmp	r3, #0
 8023c4c:	bf18      	it	ne
 8023c4e:	2000      	movne	r0, #0
 8023c50:	e606      	b.n	8023860 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11c>
 8023c52:	687b      	ldr	r3, [r7, #4]
 8023c54:	781b      	ldrb	r3, [r3, #0]
 8023c56:	2b01      	cmp	r3, #1
 8023c58:	f000 811b 	beq.w	8023e92 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x74e>
 8023c5c:	f0c0 8113 	bcc.w	8023e86 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x742>
 8023c60:	2b02      	cmp	r3, #2
 8023c62:	f47f adfc 	bne.w	802385e <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11a>
 8023c66:	4b5e      	ldr	r3, [pc, #376]	@ (8023de0 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x69c>)
 8023c68:	4a5e      	ldr	r2, [pc, #376]	@ (8023de4 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6a0>)
 8023c6a:	f241 3133 	movw	r1, #4915	@ 0x1333
 8023c6e:	485e      	ldr	r0, [pc, #376]	@ (8023de8 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6a4>)
 8023c70:	f00e fd82 	bl	8032778 <__assert_func>
 8023c74:	687b      	ldr	r3, [r7, #4]
 8023c76:	781b      	ldrb	r3, [r3, #0]
 8023c78:	2b01      	cmp	r3, #1
 8023c7a:	f000 8108 	beq.w	8023e8e <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x74a>
 8023c7e:	f0c0 8104 	bcc.w	8023e8a <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x746>
 8023c82:	2b02      	cmp	r3, #2
 8023c84:	f47f adeb 	bne.w	802385e <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11a>
 8023c88:	4b55      	ldr	r3, [pc, #340]	@ (8023de0 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x69c>)
 8023c8a:	4a56      	ldr	r2, [pc, #344]	@ (8023de4 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6a0>)
 8023c8c:	f241 313f 	movw	r1, #4927	@ 0x133f
 8023c90:	4855      	ldr	r0, [pc, #340]	@ (8023de8 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6a4>)
 8023c92:	f00e fd71 	bl	8032778 <__assert_func>
 8023c96:	687b      	ldr	r3, [r7, #4]
 8023c98:	4846      	ldr	r0, [pc, #280]	@ (8023db4 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x670>)
 8023c9a:	781b      	ldrb	r3, [r3, #0]
 8023c9c:	2b00      	cmp	r3, #0
 8023c9e:	bf18      	it	ne
 8023ca0:	2000      	movne	r0, #0
 8023ca2:	e5dd      	b.n	8023860 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11c>
 8023ca4:	687b      	ldr	r3, [r7, #4]
 8023ca6:	483f      	ldr	r0, [pc, #252]	@ (8023da4 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x660>)
 8023ca8:	781b      	ldrb	r3, [r3, #0]
 8023caa:	2b00      	cmp	r3, #0
 8023cac:	bf18      	it	ne
 8023cae:	2000      	movne	r0, #0
 8023cb0:	e5d6      	b.n	8023860 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11c>
 8023cb2:	687b      	ldr	r3, [r7, #4]
 8023cb4:	781b      	ldrb	r3, [r3, #0]
 8023cb6:	2b00      	cmp	r3, #0
 8023cb8:	f000 80ed 	beq.w	8023e96 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x752>
 8023cbc:	2b01      	cmp	r3, #1
 8023cbe:	4845      	ldr	r0, [pc, #276]	@ (8023dd4 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x690>)
 8023cc0:	bf18      	it	ne
 8023cc2:	2000      	movne	r0, #0
 8023cc4:	e5cc      	b.n	8023860 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11c>
 8023cc6:	687b      	ldr	r3, [r7, #4]
 8023cc8:	781b      	ldrb	r3, [r3, #0]
 8023cca:	2b00      	cmp	r3, #0
 8023ccc:	f000 80e5 	beq.w	8023e9a <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x756>
 8023cd0:	2b01      	cmp	r3, #1
 8023cd2:	483c      	ldr	r0, [pc, #240]	@ (8023dc4 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x680>)
 8023cd4:	bf18      	it	ne
 8023cd6:	2000      	movne	r0, #0
 8023cd8:	e5c2      	b.n	8023860 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11c>
 8023cda:	687b      	ldr	r3, [r7, #4]
 8023cdc:	4843      	ldr	r0, [pc, #268]	@ (8023dec <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6a8>)
 8023cde:	781b      	ldrb	r3, [r3, #0]
 8023ce0:	2b00      	cmp	r3, #0
 8023ce2:	bf18      	it	ne
 8023ce4:	2000      	movne	r0, #0
 8023ce6:	e5bb      	b.n	8023860 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11c>
 8023ce8:	687b      	ldr	r3, [r7, #4]
 8023cea:	4841      	ldr	r0, [pc, #260]	@ (8023df0 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6ac>)
 8023cec:	781b      	ldrb	r3, [r3, #0]
 8023cee:	2b00      	cmp	r3, #0
 8023cf0:	bf18      	it	ne
 8023cf2:	2000      	movne	r0, #0
 8023cf4:	e5b4      	b.n	8023860 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11c>
 8023cf6:	687b      	ldr	r3, [r7, #4]
 8023cf8:	781b      	ldrb	r3, [r3, #0]
 8023cfa:	2b01      	cmp	r3, #1
 8023cfc:	f000 80d5 	beq.w	8023eaa <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x766>
 8023d00:	f0c0 80d1 	bcc.w	8023ea6 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x762>
 8023d04:	2b02      	cmp	r3, #2
 8023d06:	f47f adaa 	bne.w	802385e <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11a>
 8023d0a:	4b3a      	ldr	r3, [pc, #232]	@ (8023df4 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6b0>)
 8023d0c:	4a35      	ldr	r2, [pc, #212]	@ (8023de4 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6a0>)
 8023d0e:	f241 21d8 	movw	r1, #4824	@ 0x12d8
 8023d12:	4835      	ldr	r0, [pc, #212]	@ (8023de8 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6a4>)
 8023d14:	f00e fd30 	bl	8032778 <__assert_func>
 8023d18:	687b      	ldr	r3, [r7, #4]
 8023d1a:	781b      	ldrb	r3, [r3, #0]
 8023d1c:	2b01      	cmp	r3, #1
 8023d1e:	f000 80c0 	beq.w	8023ea2 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x75e>
 8023d22:	f0c0 80bc 	bcc.w	8023e9e <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x75a>
 8023d26:	2b02      	cmp	r3, #2
 8023d28:	f47f ad99 	bne.w	802385e <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11a>
 8023d2c:	4b32      	ldr	r3, [pc, #200]	@ (8023df8 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6b4>)
 8023d2e:	4a2d      	ldr	r2, [pc, #180]	@ (8023de4 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6a0>)
 8023d30:	f241 21e4 	movw	r1, #4836	@ 0x12e4
 8023d34:	482c      	ldr	r0, [pc, #176]	@ (8023de8 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6a4>)
 8023d36:	f00e fd1f 	bl	8032778 <__assert_func>
 8023d3a:	687b      	ldr	r3, [r7, #4]
 8023d3c:	481b      	ldr	r0, [pc, #108]	@ (8023dac <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x668>)
 8023d3e:	781b      	ldrb	r3, [r3, #0]
 8023d40:	2b00      	cmp	r3, #0
 8023d42:	bf18      	it	ne
 8023d44:	2000      	movne	r0, #0
 8023d46:	e58b      	b.n	8023860 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11c>
 8023d48:	687b      	ldr	r3, [r7, #4]
 8023d4a:	4814      	ldr	r0, [pc, #80]	@ (8023d9c <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x658>)
 8023d4c:	781b      	ldrb	r3, [r3, #0]
 8023d4e:	2b00      	cmp	r3, #0
 8023d50:	bf18      	it	ne
 8023d52:	2000      	movne	r0, #0
 8023d54:	e584      	b.n	8023860 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11c>
 8023d56:	687b      	ldr	r3, [r7, #4]
 8023d58:	781b      	ldrb	r3, [r3, #0]
 8023d5a:	2b00      	cmp	r3, #0
 8023d5c:	f000 80af 	beq.w	8023ebe <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x77a>
 8023d60:	2b01      	cmp	r3, #1
 8023d62:	481a      	ldr	r0, [pc, #104]	@ (8023dcc <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x688>)
 8023d64:	bf18      	it	ne
 8023d66:	2000      	movne	r0, #0
 8023d68:	e57a      	b.n	8023860 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11c>
 8023d6a:	687b      	ldr	r3, [r7, #4]
 8023d6c:	781b      	ldrb	r3, [r3, #0]
 8023d6e:	2b00      	cmp	r3, #0
 8023d70:	f000 80a7 	beq.w	8023ec2 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x77e>
 8023d74:	2b01      	cmp	r3, #1
 8023d76:	4811      	ldr	r0, [pc, #68]	@ (8023dbc <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x678>)
 8023d78:	bf18      	it	ne
 8023d7a:	2000      	movne	r0, #0
 8023d7c:	e570      	b.n	8023860 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11c>
 8023d7e:	687b      	ldr	r3, [r7, #4]
 8023d80:	481e      	ldr	r0, [pc, #120]	@ (8023dfc <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6b8>)
 8023d82:	781b      	ldrb	r3, [r3, #0]
 8023d84:	2b00      	cmp	r3, #0
 8023d86:	bf18      	it	ne
 8023d88:	2000      	movne	r0, #0
 8023d8a:	e569      	b.n	8023860 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11c>
 8023d8c:	20000000 	.word	0x20000000
 8023d90:	08022af1 	.word	0x08022af1
 8023d94:	20000214 	.word	0x20000214
 8023d98:	08022b05 	.word	0x08022b05
 8023d9c:	2000021c 	.word	0x2000021c
 8023da0:	08022b09 	.word	0x08022b09
 8023da4:	20000204 	.word	0x20000204
 8023da8:	08022afd 	.word	0x08022afd
 8023dac:	2000023c 	.word	0x2000023c
 8023db0:	08022b01 	.word	0x08022b01
 8023db4:	20000230 	.word	0x20000230
 8023db8:	08022b15 	.word	0x08022b15
 8023dbc:	200001f8 	.word	0x200001f8
 8023dc0:	08022b19 	.word	0x08022b19
 8023dc4:	200001ec 	.word	0x200001ec
 8023dc8:	08022b0d 	.word	0x08022b0d
 8023dcc:	20000224 	.word	0x20000224
 8023dd0:	08022b11 	.word	0x08022b11
 8023dd4:	20000210 	.word	0x20000210
 8023dd8:	20000238 	.word	0x20000238
 8023ddc:	2000020c 	.word	0x2000020c
 8023de0:	08036718 	.word	0x08036718
 8023de4:	08037ba4 	.word	0x08037ba4
 8023de8:	08036560 	.word	0x08036560
 8023dec:	20000234 	.word	0x20000234
 8023df0:	20000208 	.word	0x20000208
 8023df4:	08036684 	.word	0x08036684
 8023df8:	080366cc 	.word	0x080366cc
 8023dfc:	20000240 	.word	0x20000240
 8023e00:	687b      	ldr	r3, [r7, #4]
 8023e02:	781b      	ldrb	r3, [r3, #0]
 8023e04:	2b01      	cmp	r3, #1
 8023e06:	d060      	beq.n	8023eca <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x786>
 8023e08:	d35d      	bcc.n	8023ec6 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x782>
 8023e0a:	2b02      	cmp	r3, #2
 8023e0c:	f47f ad27 	bne.w	802385e <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11a>
 8023e10:	4b2f      	ldr	r3, [pc, #188]	@ (8023ed0 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x78c>)
 8023e12:	4a30      	ldr	r2, [pc, #192]	@ (8023ed4 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x790>)
 8023e14:	f241 3103 	movw	r1, #4867	@ 0x1303
 8023e18:	482f      	ldr	r0, [pc, #188]	@ (8023ed8 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x794>)
 8023e1a:	f00e fcad 	bl	8032778 <__assert_func>
 8023e1e:	687b      	ldr	r3, [r7, #4]
 8023e20:	781b      	ldrb	r3, [r3, #0]
 8023e22:	2b01      	cmp	r3, #1
 8023e24:	d049      	beq.n	8023eba <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x776>
 8023e26:	d346      	bcc.n	8023eb6 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x772>
 8023e28:	2b02      	cmp	r3, #2
 8023e2a:	f47f ad18 	bne.w	802385e <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11a>
 8023e2e:	4b28      	ldr	r3, [pc, #160]	@ (8023ed0 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x78c>)
 8023e30:	4a28      	ldr	r2, [pc, #160]	@ (8023ed4 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x790>)
 8023e32:	f241 310f 	movw	r1, #4879	@ 0x130f
 8023e36:	4828      	ldr	r0, [pc, #160]	@ (8023ed8 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x794>)
 8023e38:	f00e fc9e 	bl	8032778 <__assert_func>
 8023e3c:	687b      	ldr	r3, [r7, #4]
 8023e3e:	4827      	ldr	r0, [pc, #156]	@ (8023edc <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x798>)
 8023e40:	781b      	ldrb	r3, [r3, #0]
 8023e42:	2b00      	cmp	r3, #0
 8023e44:	bf18      	it	ne
 8023e46:	2000      	movne	r0, #0
 8023e48:	e50a      	b.n	8023860 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11c>
 8023e4a:	687b      	ldr	r3, [r7, #4]
 8023e4c:	781b      	ldrb	r3, [r3, #0]
 8023e4e:	2b01      	cmp	r3, #1
 8023e50:	d02d      	beq.n	8023eae <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x76a>
 8023e52:	d318      	bcc.n	8023e86 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x742>
 8023e54:	2b02      	cmp	r3, #2
 8023e56:	f47f ad02 	bne.w	802385e <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11a>
 8023e5a:	4b1d      	ldr	r3, [pc, #116]	@ (8023ed0 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x78c>)
 8023e5c:	4a1d      	ldr	r2, [pc, #116]	@ (8023ed4 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x790>)
 8023e5e:	f44f 519b 	mov.w	r1, #4960	@ 0x1360
 8023e62:	481d      	ldr	r0, [pc, #116]	@ (8023ed8 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x794>)
 8023e64:	f00e fc88 	bl	8032778 <__assert_func>
 8023e68:	687b      	ldr	r3, [r7, #4]
 8023e6a:	781b      	ldrb	r3, [r3, #0]
 8023e6c:	2b01      	cmp	r3, #1
 8023e6e:	d020      	beq.n	8023eb2 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x76e>
 8023e70:	d30b      	bcc.n	8023e8a <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x746>
 8023e72:	2b02      	cmp	r3, #2
 8023e74:	f47f acf3 	bne.w	802385e <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11a>
 8023e78:	4b15      	ldr	r3, [pc, #84]	@ (8023ed0 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x78c>)
 8023e7a:	4a16      	ldr	r2, [pc, #88]	@ (8023ed4 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x790>)
 8023e7c:	f241 316c 	movw	r1, #4972	@ 0x136c
 8023e80:	4815      	ldr	r0, [pc, #84]	@ (8023ed8 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x794>)
 8023e82:	f00e fc79 	bl	8032778 <__assert_func>
 8023e86:	4816      	ldr	r0, [pc, #88]	@ (8023ee0 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x79c>)
 8023e88:	e4ea      	b.n	8023860 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11c>
 8023e8a:	4816      	ldr	r0, [pc, #88]	@ (8023ee4 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7a0>)
 8023e8c:	e4e8      	b.n	8023860 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11c>
 8023e8e:	4816      	ldr	r0, [pc, #88]	@ (8023ee8 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7a4>)
 8023e90:	e4e6      	b.n	8023860 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11c>
 8023e92:	4816      	ldr	r0, [pc, #88]	@ (8023eec <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7a8>)
 8023e94:	e4e4      	b.n	8023860 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11c>
 8023e96:	4816      	ldr	r0, [pc, #88]	@ (8023ef0 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7ac>)
 8023e98:	e4e2      	b.n	8023860 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11c>
 8023e9a:	4816      	ldr	r0, [pc, #88]	@ (8023ef4 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7b0>)
 8023e9c:	e4e0      	b.n	8023860 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11c>
 8023e9e:	4816      	ldr	r0, [pc, #88]	@ (8023ef8 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7b4>)
 8023ea0:	e4de      	b.n	8023860 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11c>
 8023ea2:	4816      	ldr	r0, [pc, #88]	@ (8023efc <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7b8>)
 8023ea4:	e4dc      	b.n	8023860 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11c>
 8023ea6:	4816      	ldr	r0, [pc, #88]	@ (8023f00 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7bc>)
 8023ea8:	e4da      	b.n	8023860 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11c>
 8023eaa:	4816      	ldr	r0, [pc, #88]	@ (8023f04 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7c0>)
 8023eac:	e4d8      	b.n	8023860 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11c>
 8023eae:	4816      	ldr	r0, [pc, #88]	@ (8023f08 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7c4>)
 8023eb0:	e4d6      	b.n	8023860 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11c>
 8023eb2:	4816      	ldr	r0, [pc, #88]	@ (8023f0c <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7c8>)
 8023eb4:	e4d4      	b.n	8023860 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11c>
 8023eb6:	4809      	ldr	r0, [pc, #36]	@ (8023edc <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x798>)
 8023eb8:	e4d2      	b.n	8023860 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11c>
 8023eba:	4815      	ldr	r0, [pc, #84]	@ (8023f10 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7cc>)
 8023ebc:	e4d0      	b.n	8023860 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11c>
 8023ebe:	4815      	ldr	r0, [pc, #84]	@ (8023f14 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7d0>)
 8023ec0:	e4ce      	b.n	8023860 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11c>
 8023ec2:	4815      	ldr	r0, [pc, #84]	@ (8023f18 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7d4>)
 8023ec4:	e4cc      	b.n	8023860 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11c>
 8023ec6:	4815      	ldr	r0, [pc, #84]	@ (8023f1c <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7d8>)
 8023ec8:	e4ca      	b.n	8023860 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11c>
 8023eca:	4815      	ldr	r0, [pc, #84]	@ (8023f20 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7dc>)
 8023ecc:	e4c8      	b.n	8023860 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11c>
 8023ece:	bf00      	nop
 8023ed0:	080366cc 	.word	0x080366cc
 8023ed4:	08037ba4 	.word	0x08037ba4
 8023ed8:	08036560 	.word	0x08036560
 8023edc:	20000220 	.word	0x20000220
 8023ee0:	20000238 	.word	0x20000238
 8023ee4:	2000020c 	.word	0x2000020c
 8023ee8:	200001f4 	.word	0x200001f4
 8023eec:	20000218 	.word	0x20000218
 8023ef0:	20000230 	.word	0x20000230
 8023ef4:	20000204 	.word	0x20000204
 8023ef8:	20000208 	.word	0x20000208
 8023efc:	200001f0 	.word	0x200001f0
 8023f00:	20000234 	.word	0x20000234
 8023f04:	20000214 	.word	0x20000214
 8023f08:	2000022c 	.word	0x2000022c
 8023f0c:	20000200 	.word	0x20000200
 8023f10:	200001fc 	.word	0x200001fc
 8023f14:	2000023c 	.word	0x2000023c
 8023f18:	2000021c 	.word	0x2000021c
 8023f1c:	20000240 	.word	0x20000240
 8023f20:	20000228 	.word	0x20000228

08023f24 <_ZN8touchgfx8LCDGPU2DD0Ev>:
 8023f24:	b510      	push	{r4, lr}
 8023f26:	4604      	mov	r4, r0
 8023f28:	f44f 6105 	mov.w	r1, #2128	@ 0x850
 8023f2c:	f00d fa4b 	bl	80313c6 <_ZdlPvj>
 8023f30:	4620      	mov	r0, r4
 8023f32:	bd10      	pop	{r4, pc}

08023f34 <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 8023f34:	b510      	push	{r4, lr}
 8023f36:	4604      	mov	r4, r0
 8023f38:	2104      	movs	r1, #4
 8023f3a:	f00d fa44 	bl	80313c6 <_ZdlPvj>
 8023f3e:	4620      	mov	r0, r4
 8023f40:	bd10      	pop	{r4, pc}
 8023f42:	bf00      	nop

08023f44 <_ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 8023f44:	b510      	push	{r4, lr}
 8023f46:	4604      	mov	r4, r0
 8023f48:	2104      	movs	r1, #4
 8023f4a:	f00d fa3c 	bl	80313c6 <_ZdlPvj>
 8023f4e:	4620      	mov	r0, r4
 8023f50:	bd10      	pop	{r4, pc}
 8023f52:	bf00      	nop

08023f54 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 8023f54:	b510      	push	{r4, lr}
 8023f56:	4604      	mov	r4, r0
 8023f58:	2104      	movs	r1, #4
 8023f5a:	f00d fa34 	bl	80313c6 <_ZdlPvj>
 8023f5e:	4620      	mov	r0, r4
 8023f60:	bd10      	pop	{r4, pc}
 8023f62:	bf00      	nop

08023f64 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 8023f64:	b510      	push	{r4, lr}
 8023f66:	4604      	mov	r4, r0
 8023f68:	2104      	movs	r1, #4
 8023f6a:	f00d fa2c 	bl	80313c6 <_ZdlPvj>
 8023f6e:	4620      	mov	r0, r4
 8023f70:	bd10      	pop	{r4, pc}
 8023f72:	bf00      	nop

08023f74 <_ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev>:
 8023f74:	b510      	push	{r4, lr}
 8023f76:	4604      	mov	r4, r0
 8023f78:	2104      	movs	r1, #4
 8023f7a:	f00d fa24 	bl	80313c6 <_ZdlPvj>
 8023f7e:	4620      	mov	r0, r4
 8023f80:	bd10      	pop	{r4, pc}
 8023f82:	bf00      	nop

08023f84 <_ZN8touchgfx8LCDGPU2D55TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev>:
 8023f84:	b510      	push	{r4, lr}
 8023f86:	4604      	mov	r4, r0
 8023f88:	2104      	movs	r1, #4
 8023f8a:	f00d fa1c 	bl	80313c6 <_ZdlPvj>
 8023f8e:	4620      	mov	r0, r4
 8023f90:	bd10      	pop	{r4, pc}
 8023f92:	bf00      	nop

08023f94 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev>:
 8023f94:	b510      	push	{r4, lr}
 8023f96:	4604      	mov	r4, r0
 8023f98:	2104      	movs	r1, #4
 8023f9a:	f00d fa14 	bl	80313c6 <_ZdlPvj>
 8023f9e:	4620      	mov	r0, r4
 8023fa0:	bd10      	pop	{r4, pc}
 8023fa2:	bf00      	nop

08023fa4 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev>:
 8023fa4:	b510      	push	{r4, lr}
 8023fa6:	4604      	mov	r4, r0
 8023fa8:	2104      	movs	r1, #4
 8023faa:	f00d fa0c 	bl	80313c6 <_ZdlPvj>
 8023fae:	4620      	mov	r0, r4
 8023fb0:	bd10      	pop	{r4, pc}
 8023fb2:	bf00      	nop

08023fb4 <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 8023fb4:	b510      	push	{r4, lr}
 8023fb6:	4604      	mov	r4, r0
 8023fb8:	2104      	movs	r1, #4
 8023fba:	f00d fa04 	bl	80313c6 <_ZdlPvj>
 8023fbe:	4620      	mov	r0, r4
 8023fc0:	bd10      	pop	{r4, pc}
 8023fc2:	bf00      	nop

08023fc4 <_ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 8023fc4:	b510      	push	{r4, lr}
 8023fc6:	4604      	mov	r4, r0
 8023fc8:	2104      	movs	r1, #4
 8023fca:	f00d f9fc 	bl	80313c6 <_ZdlPvj>
 8023fce:	4620      	mov	r0, r4
 8023fd0:	bd10      	pop	{r4, pc}
 8023fd2:	bf00      	nop

08023fd4 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 8023fd4:	b510      	push	{r4, lr}
 8023fd6:	4604      	mov	r4, r0
 8023fd8:	2104      	movs	r1, #4
 8023fda:	f00d f9f4 	bl	80313c6 <_ZdlPvj>
 8023fde:	4620      	mov	r0, r4
 8023fe0:	bd10      	pop	{r4, pc}
 8023fe2:	bf00      	nop

08023fe4 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 8023fe4:	b510      	push	{r4, lr}
 8023fe6:	4604      	mov	r4, r0
 8023fe8:	2104      	movs	r1, #4
 8023fea:	f00d f9ec 	bl	80313c6 <_ZdlPvj>
 8023fee:	4620      	mov	r0, r4
 8023ff0:	bd10      	pop	{r4, pc}
 8023ff2:	bf00      	nop

08023ff4 <_ZN8touchgfx8LCDGPU2D57TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev>:
 8023ff4:	b510      	push	{r4, lr}
 8023ff6:	4604      	mov	r4, r0
 8023ff8:	2104      	movs	r1, #4
 8023ffa:	f00d f9e4 	bl	80313c6 <_ZdlPvj>
 8023ffe:	4620      	mov	r0, r4
 8024000:	bd10      	pop	{r4, pc}
 8024002:	bf00      	nop

08024004 <_ZN8touchgfx8LCDGPU2D55TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev>:
 8024004:	b510      	push	{r4, lr}
 8024006:	4604      	mov	r4, r0
 8024008:	2104      	movs	r1, #4
 802400a:	f00d f9dc 	bl	80313c6 <_ZdlPvj>
 802400e:	4620      	mov	r0, r4
 8024010:	bd10      	pop	{r4, pc}
 8024012:	bf00      	nop

08024014 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev>:
 8024014:	b510      	push	{r4, lr}
 8024016:	4604      	mov	r4, r0
 8024018:	2104      	movs	r1, #4
 802401a:	f00d f9d4 	bl	80313c6 <_ZdlPvj>
 802401e:	4620      	mov	r0, r4
 8024020:	bd10      	pop	{r4, pc}
 8024022:	bf00      	nop

08024024 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev>:
 8024024:	b510      	push	{r4, lr}
 8024026:	4604      	mov	r4, r0
 8024028:	2104      	movs	r1, #4
 802402a:	f00d f9cc 	bl	80313c6 <_ZdlPvj>
 802402e:	4620      	mov	r0, r4
 8024030:	bd10      	pop	{r4, pc}
 8024032:	bf00      	nop

08024034 <_ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 8024034:	b510      	push	{r4, lr}
 8024036:	4604      	mov	r4, r0
 8024038:	2104      	movs	r1, #4
 802403a:	f00d f9c4 	bl	80313c6 <_ZdlPvj>
 802403e:	4620      	mov	r0, r4
 8024040:	bd10      	pop	{r4, pc}
 8024042:	bf00      	nop

08024044 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 8024044:	b510      	push	{r4, lr}
 8024046:	4604      	mov	r4, r0
 8024048:	2104      	movs	r1, #4
 802404a:	f00d f9bc 	bl	80313c6 <_ZdlPvj>
 802404e:	4620      	mov	r0, r4
 8024050:	bd10      	pop	{r4, pc}
 8024052:	bf00      	nop

08024054 <_ZN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev>:
 8024054:	b510      	push	{r4, lr}
 8024056:	4604      	mov	r4, r0
 8024058:	2104      	movs	r1, #4
 802405a:	f00d f9b4 	bl	80313c6 <_ZdlPvj>
 802405e:	4620      	mov	r0, r4
 8024060:	bd10      	pop	{r4, pc}
 8024062:	bf00      	nop

08024064 <_ZN8touchgfx8LCDGPU2D55TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev>:
 8024064:	b510      	push	{r4, lr}
 8024066:	4604      	mov	r4, r0
 8024068:	2104      	movs	r1, #4
 802406a:	f00d f9ac 	bl	80313c6 <_ZdlPvj>
 802406e:	4620      	mov	r0, r4
 8024070:	bd10      	pop	{r4, pc}
 8024072:	bf00      	nop

08024074 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev>:
 8024074:	b510      	push	{r4, lr}
 8024076:	4604      	mov	r4, r0
 8024078:	2104      	movs	r1, #4
 802407a:	f00d f9a4 	bl	80313c6 <_ZdlPvj>
 802407e:	4620      	mov	r0, r4
 8024080:	bd10      	pop	{r4, pc}
 8024082:	bf00      	nop

08024084 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev>:
 8024084:	b510      	push	{r4, lr}
 8024086:	4604      	mov	r4, r0
 8024088:	2104      	movs	r1, #4
 802408a:	f00d f99c 	bl	80313c6 <_ZdlPvj>
 802408e:	4620      	mov	r0, r4
 8024090:	bd10      	pop	{r4, pc}
 8024092:	bf00      	nop

08024094 <_ZN8touchgfx8LCDGPU2D8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb.part.6>:
 8024094:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8024098:	461c      	mov	r4, r3
 802409a:	4617      	mov	r7, r2
 802409c:	b086      	sub	sp, #24
 802409e:	4606      	mov	r6, r0
 80240a0:	4688      	mov	r8, r1
 80240a2:	6818      	ldr	r0, [r3, #0]
 80240a4:	6859      	ldr	r1, [r3, #4]
 80240a6:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80240a8:	ad02      	add	r5, sp, #8
 80240aa:	c503      	stmia	r5!, {r0, r1}
 80240ac:	6818      	ldr	r0, [r3, #0]
 80240ae:	6859      	ldr	r1, [r3, #4]
 80240b0:	ad04      	add	r5, sp, #16
 80240b2:	c503      	stmia	r5!, {r0, r1}
 80240b4:	a802      	add	r0, sp, #8
 80240b6:	f89d a03c 	ldrb.w	sl, [sp, #60]	@ 0x3c
 80240ba:	f7e8 ff81 	bl	800cfc0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80240be:	4621      	mov	r1, r4
 80240c0:	a804      	add	r0, sp, #16
 80240c2:	f7e8 ffa5 	bl	800d010 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80240c6:	2f01      	cmp	r7, #1
 80240c8:	d05c      	beq.n	8024184 <_ZN8touchgfx8LCDGPU2D8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb.part.6+0xf0>
 80240ca:	d357      	bcc.n	802417c <_ZN8touchgfx8LCDGPU2D8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb.part.6+0xe8>
 80240cc:	2f02      	cmp	r7, #2
 80240ce:	d163      	bne.n	8024198 <_ZN8touchgfx8LCDGPU2D8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb.part.6+0x104>
 80240d0:	f04f 0910 	mov.w	r9, #16
 80240d4:	2504      	movs	r5, #4
 80240d6:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 80240da:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 80240de:	f8bd 400c 	ldrh.w	r4, [sp, #12]
 80240e2:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 80240e6:	fb14 2403 	smlabb	r4, r4, r3, r2
 80240ea:	4f2e      	ldr	r7, [pc, #184]	@ (80241a4 <_ZN8touchgfx8LCDGPU2D8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb.part.6+0x110>)
 80240ec:	440a      	add	r2, r1
 80240ee:	f8bd 100a 	ldrh.w	r1, [sp, #10]
 80240f2:	6838      	ldr	r0, [r7, #0]
 80240f4:	440b      	add	r3, r1
 80240f6:	fb05 8404 	mla	r4, r5, r4, r8
 80240fa:	f8ad 2010 	strh.w	r2, [sp, #16]
 80240fe:	f8ad 3012 	strh.w	r3, [sp, #18]
 8024102:	2800      	cmp	r0, #0
 8024104:	d042      	beq.n	802418c <_ZN8touchgfx8LCDGPU2D8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb.part.6+0xf8>
 8024106:	f7fc fea7 	bl	8020e58 <_ZN8touchgfx8HALGPU2D14bindExecBufferEv>
 802410a:	6833      	ldr	r3, [r6, #0]
 802410c:	4630      	mov	r0, r6
 802410e:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8024110:	4798      	blx	r3
 8024112:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 8024116:	f9bd 2014 	ldrsh.w	r2, [sp, #20]
 802411a:	f9bd 1012 	ldrsh.w	r1, [sp, #18]
 802411e:	f9bd 0010 	ldrsh.w	r0, [sp, #16]
 8024122:	f7ec ff21 	bl	8010f68 <nema_set_clip>
 8024126:	2200      	movs	r2, #0
 8024128:	2600      	movs	r6, #0
 802412a:	4611      	mov	r1, r2
 802412c:	4653      	mov	r3, sl
 802412e:	4610      	mov	r0, r2
 8024130:	f7ec fff8 	bl	8011124 <nema_rgba>
 8024134:	f7fa fc7a 	bl	801ea2c <nema_set_const_color>
 8024138:	f04f 33ff 	mov.w	r3, #4294967295
 802413c:	2201      	movs	r2, #1
 802413e:	2100      	movs	r1, #0
 8024140:	4819      	ldr	r0, [pc, #100]	@ (80241a8 <_ZN8touchgfx8LCDGPU2D8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb.part.6+0x114>)
 8024142:	f7fa f8ad 	bl	801e2a0 <nema_set_blend>
 8024146:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 802414a:	f9bd 2016 	ldrsh.w	r2, [sp, #22]
 802414e:	fb05 f503 	mul.w	r5, r5, r3
 8024152:	f9bd 1014 	ldrsh.w	r1, [sp, #20]
 8024156:	464b      	mov	r3, r9
 8024158:	4620      	mov	r0, r4
 802415a:	e9cd 5600 	strd	r5, r6, [sp]
 802415e:	f7ec ffe9 	bl	8011134 <nema_bind_src_tex>
 8024162:	f9bd 0010 	ldrsh.w	r0, [sp, #16]
 8024166:	f9bd 1012 	ldrsh.w	r1, [sp, #18]
 802416a:	f7ed fa3d 	bl	80115e8 <nema_blit>
 802416e:	6838      	ldr	r0, [r7, #0]
 8024170:	b160      	cbz	r0, 802418c <_ZN8touchgfx8LCDGPU2D8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb.part.6+0xf8>
 8024172:	f7fc fe91 	bl	8020e98 <_ZN8touchgfx8HALGPU2D16submitExecBufferEv>
 8024176:	b006      	add	sp, #24
 8024178:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802417c:	f04f 0904 	mov.w	r9, #4
 8024180:	2502      	movs	r5, #2
 8024182:	e7a8      	b.n	80240d6 <_ZN8touchgfx8LCDGPU2D8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb.part.6+0x42>
 8024184:	f04f 0939 	mov.w	r9, #57	@ 0x39
 8024188:	2503      	movs	r5, #3
 802418a:	e7a4      	b.n	80240d6 <_ZN8touchgfx8LCDGPU2D8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb.part.6+0x42>
 802418c:	4b07      	ldr	r3, [pc, #28]	@ (80241ac <_ZN8touchgfx8LCDGPU2D8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb.part.6+0x118>)
 802418e:	4a08      	ldr	r2, [pc, #32]	@ (80241b0 <_ZN8touchgfx8LCDGPU2D8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb.part.6+0x11c>)
 8024190:	217c      	movs	r1, #124	@ 0x7c
 8024192:	4808      	ldr	r0, [pc, #32]	@ (80241b4 <_ZN8touchgfx8LCDGPU2D8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb.part.6+0x120>)
 8024194:	f00e faf0 	bl	8032778 <__assert_func>
 8024198:	4b07      	ldr	r3, [pc, #28]	@ (80241b8 <_ZN8touchgfx8LCDGPU2D8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb.part.6+0x124>)
 802419a:	4a08      	ldr	r2, [pc, #32]	@ (80241bc <_ZN8touchgfx8LCDGPU2D8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb.part.6+0x128>)
 802419c:	21c9      	movs	r1, #201	@ 0xc9
 802419e:	4808      	ldr	r0, [pc, #32]	@ (80241c0 <_ZN8touchgfx8LCDGPU2D8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb.part.6+0x12c>)
 80241a0:	f00e faea 	bl	8032778 <__assert_func>
 80241a4:	20083544 	.word	0x20083544
 80241a8:	08000504 	.word	0x08000504
 80241ac:	080364bc 	.word	0x080364bc
 80241b0:	08036d28 	.word	0x08036d28
 80241b4:	080364e4 	.word	0x080364e4
 80241b8:	08036968 	.word	0x08036968
 80241bc:	080380cc 	.word	0x080380cc
 80241c0:	08036560 	.word	0x08036560

080241c4 <_ZNK8touchgfx8LCDGPU2D22blendPixelRGB888_32BPPEPKhPmh.constprop.19>:
 80241c4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80241c6:	680c      	ldr	r4, [r1, #0]
 80241c8:	7805      	ldrb	r5, [r0, #0]
 80241ca:	ea5f 6c14 	movs.w	ip, r4, lsr #24
 80241ce:	7847      	ldrb	r7, [r0, #1]
 80241d0:	7883      	ldrb	r3, [r0, #2]
 80241d2:	d02e      	beq.n	8024232 <_ZNK8touchgfx8LCDGPU2D22blendPixelRGB888_32BPPEPKhPmh.constprop.19+0x6e>
 80241d4:	fb02 f60c 	mul.w	r6, r2, ip
 80241d8:	fb12 f303 	smulbb	r3, r2, r3
 80241dc:	1c70      	adds	r0, r6, #1
 80241de:	fb15 f502 	smulbb	r5, r5, r2
 80241e2:	eb00 2026 	add.w	r0, r0, r6, asr #8
 80241e6:	1200      	asrs	r0, r0, #8
 80241e8:	fb12 f707 	smulbb	r7, r2, r7
 80241ec:	ebac 0600 	sub.w	r6, ip, r0
 80241f0:	f3c4 4e07 	ubfx	lr, r4, #16, #8
 80241f4:	fb06 330e 	mla	r3, r6, lr, r3
 80241f8:	fa5f fe84 	uxtb.w	lr, r4
 80241fc:	fb06 550e 	mla	r5, r6, lr, r5
 8024200:	f3c4 2407 	ubfx	r4, r4, #8, #8
 8024204:	fb06 7404 	mla	r4, r6, r4, r7
 8024208:	4462      	add	r2, ip
 802420a:	1a12      	subs	r2, r2, r0
 802420c:	b2d0      	uxtb	r0, r2
 802420e:	fbb3 f2f0 	udiv	r2, r3, r0
 8024212:	fbb5 f5f0 	udiv	r5, r5, r0
 8024216:	fbb4 f3f0 	udiv	r3, r4, r0
 802421a:	0412      	lsls	r2, r2, #16
 802421c:	b2ec      	uxtb	r4, r5
 802421e:	f402 027f 	and.w	r2, r2, #16711680	@ 0xff0000
 8024222:	ea44 6000 	orr.w	r0, r4, r0, lsl #24
 8024226:	021b      	lsls	r3, r3, #8
 8024228:	4302      	orrs	r2, r0
 802422a:	b29b      	uxth	r3, r3
 802422c:	431a      	orrs	r2, r3
 802422e:	600a      	str	r2, [r1, #0]
 8024230:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8024232:	041b      	lsls	r3, r3, #16
 8024234:	ea43 6202 	orr.w	r2, r3, r2, lsl #24
 8024238:	432a      	orrs	r2, r5
 802423a:	ea42 2207 	orr.w	r2, r2, r7, lsl #8
 802423e:	600a      	str	r2, [r1, #0]
 8024240:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8024242:	bf00      	nop

08024244 <_ZN8touchgfx8LCDGPU2D8blitCopyEPKtRKNS_4RectES5_hb>:
 8024244:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8024248:	4c1e      	ldr	r4, [pc, #120]	@ (80242c4 <_ZN8touchgfx8LCDGPU2D8blitCopyEPKtRKNS_4RectES5_hb+0x80>)
 802424a:	6806      	ldr	r6, [r0, #0]
 802424c:	6824      	ldr	r4, [r4, #0]
 802424e:	4605      	mov	r5, r0
 8024250:	f894 0058 	ldrb.w	r0, [r4, #88]	@ 0x58
 8024254:	b087      	sub	sp, #28
 8024256:	6937      	ldr	r7, [r6, #16]
 8024258:	4690      	mov	r8, r2
 802425a:	f89d 6038 	ldrb.w	r6, [sp, #56]	@ 0x38
 802425e:	f89d 903c 	ldrb.w	r9, [sp, #60]	@ 0x3c
 8024262:	b170      	cbz	r0, 8024282 <_ZN8touchgfx8LCDGPU2D8blitCopyEPKtRKNS_4RectES5_hb+0x3e>
 8024264:	6ce0      	ldr	r0, [r4, #76]	@ 0x4c
 8024266:	b160      	cbz	r0, 8024282 <_ZN8touchgfx8LCDGPU2D8blitCopyEPKtRKNS_4RectES5_hb+0x3e>
 8024268:	6804      	ldr	r4, [r0, #0]
 802426a:	4a17      	ldr	r2, [pc, #92]	@ (80242c8 <_ZN8touchgfx8LCDGPU2D8blitCopyEPKtRKNS_4RectES5_hb+0x84>)
 802426c:	6ae4      	ldr	r4, [r4, #44]	@ 0x2c
 802426e:	4294      	cmp	r4, r2
 8024270:	d10d      	bne.n	802428e <_ZN8touchgfx8LCDGPU2D8blitCopyEPKtRKNS_4RectES5_hb+0x4a>
 8024272:	4c16      	ldr	r4, [pc, #88]	@ (80242cc <_ZN8touchgfx8LCDGPU2D8blitCopyEPKtRKNS_4RectES5_hb+0x88>)
 8024274:	7b02      	ldrb	r2, [r0, #12]
 8024276:	42a7      	cmp	r7, r4
 8024278:	d112      	bne.n	80242a0 <_ZN8touchgfx8LCDGPU2D8blitCopyEPKtRKNS_4RectES5_hb+0x5c>
 802427a:	b9d6      	cbnz	r6, 80242b2 <_ZN8touchgfx8LCDGPU2D8blitCopyEPKtRKNS_4RectES5_hb+0x6e>
 802427c:	b007      	add	sp, #28
 802427e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8024282:	68a0      	ldr	r0, [r4, #8]
 8024284:	4a10      	ldr	r2, [pc, #64]	@ (80242c8 <_ZN8touchgfx8LCDGPU2D8blitCopyEPKtRKNS_4RectES5_hb+0x84>)
 8024286:	6804      	ldr	r4, [r0, #0]
 8024288:	6ae4      	ldr	r4, [r4, #44]	@ 0x2c
 802428a:	4294      	cmp	r4, r2
 802428c:	d0f1      	beq.n	8024272 <_ZN8touchgfx8LCDGPU2D8blitCopyEPKtRKNS_4RectES5_hb+0x2e>
 802428e:	e9cd 1304 	strd	r1, r3, [sp, #16]
 8024292:	47a0      	blx	r4
 8024294:	e9dd 1304 	ldrd	r1, r3, [sp, #16]
 8024298:	4c0c      	ldr	r4, [pc, #48]	@ (80242cc <_ZN8touchgfx8LCDGPU2D8blitCopyEPKtRKNS_4RectES5_hb+0x88>)
 802429a:	4602      	mov	r2, r0
 802429c:	42a7      	cmp	r7, r4
 802429e:	d0ec      	beq.n	802427a <_ZN8touchgfx8LCDGPU2D8blitCopyEPKtRKNS_4RectES5_hb+0x36>
 80242a0:	9300      	str	r3, [sp, #0]
 80242a2:	e9cd 6901 	strd	r6, r9, [sp, #4]
 80242a6:	4643      	mov	r3, r8
 80242a8:	4628      	mov	r0, r5
 80242aa:	47b8      	blx	r7
 80242ac:	b007      	add	sp, #28
 80242ae:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80242b2:	e9cd 360e 	strd	r3, r6, [sp, #56]	@ 0x38
 80242b6:	4628      	mov	r0, r5
 80242b8:	4643      	mov	r3, r8
 80242ba:	b007      	add	sp, #28
 80242bc:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80242c0:	f7ff bee8 	b.w	8024094 <_ZN8touchgfx8LCDGPU2D8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb.part.6>
 80242c4:	200830a4 	.word	0x200830a4
 80242c8:	08020f3d 	.word	0x08020f3d
 80242cc:	080242d1 	.word	0x080242d1

080242d0 <_ZN8touchgfx8LCDGPU2D8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb>:
 80242d0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80242d4:	b087      	sub	sp, #28
 80242d6:	f89d 503c 	ldrb.w	r5, [sp, #60]	@ 0x3c
 80242da:	b915      	cbnz	r5, 80242e2 <_ZN8touchgfx8LCDGPU2D8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x12>
 80242dc:	b007      	add	sp, #28
 80242de:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80242e2:	461c      	mov	r4, r3
 80242e4:	4617      	mov	r7, r2
 80242e6:	4688      	mov	r8, r1
 80242e8:	4606      	mov	r6, r0
 80242ea:	6859      	ldr	r1, [r3, #4]
 80242ec:	6818      	ldr	r0, [r3, #0]
 80242ee:	ab02      	add	r3, sp, #8
 80242f0:	c303      	stmia	r3!, {r0, r1}
 80242f2:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80242f4:	6818      	ldr	r0, [r3, #0]
 80242f6:	6859      	ldr	r1, [r3, #4]
 80242f8:	ab04      	add	r3, sp, #16
 80242fa:	c303      	stmia	r3!, {r0, r1}
 80242fc:	a802      	add	r0, sp, #8
 80242fe:	f7e8 fe5f 	bl	800cfc0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8024302:	4621      	mov	r1, r4
 8024304:	a804      	add	r0, sp, #16
 8024306:	f7e8 fe83 	bl	800d010 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 802430a:	2f01      	cmp	r7, #1
 802430c:	d05c      	beq.n	80243c8 <_ZN8touchgfx8LCDGPU2D8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0xf8>
 802430e:	d357      	bcc.n	80243c0 <_ZN8touchgfx8LCDGPU2D8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0xf0>
 8024310:	2f02      	cmp	r7, #2
 8024312:	d163      	bne.n	80243dc <_ZN8touchgfx8LCDGPU2D8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x10c>
 8024314:	f04f 0910 	mov.w	r9, #16
 8024318:	2404      	movs	r4, #4
 802431a:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 802431e:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8024322:	f8bd 100c 	ldrh.w	r1, [sp, #12]
 8024326:	f8bd 0008 	ldrh.w	r0, [sp, #8]
 802432a:	fb11 2103 	smlabb	r1, r1, r3, r2
 802432e:	4f2e      	ldr	r7, [pc, #184]	@ (80243e8 <_ZN8touchgfx8LCDGPU2D8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x118>)
 8024330:	fb04 8801 	mla	r8, r4, r1, r8
 8024334:	f8bd 100a 	ldrh.w	r1, [sp, #10]
 8024338:	4402      	add	r2, r0
 802433a:	6838      	ldr	r0, [r7, #0]
 802433c:	440b      	add	r3, r1
 802433e:	f8ad 2010 	strh.w	r2, [sp, #16]
 8024342:	f8ad 3012 	strh.w	r3, [sp, #18]
 8024346:	2800      	cmp	r0, #0
 8024348:	d042      	beq.n	80243d0 <_ZN8touchgfx8LCDGPU2D8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x100>
 802434a:	f7fc fd85 	bl	8020e58 <_ZN8touchgfx8HALGPU2D14bindExecBufferEv>
 802434e:	6833      	ldr	r3, [r6, #0]
 8024350:	4630      	mov	r0, r6
 8024352:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8024354:	4798      	blx	r3
 8024356:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 802435a:	f9bd 2014 	ldrsh.w	r2, [sp, #20]
 802435e:	f9bd 1012 	ldrsh.w	r1, [sp, #18]
 8024362:	f9bd 0010 	ldrsh.w	r0, [sp, #16]
 8024366:	f7ec fdff 	bl	8010f68 <nema_set_clip>
 802436a:	2200      	movs	r2, #0
 802436c:	462b      	mov	r3, r5
 802436e:	2500      	movs	r5, #0
 8024370:	4611      	mov	r1, r2
 8024372:	4610      	mov	r0, r2
 8024374:	f7ec fed6 	bl	8011124 <nema_rgba>
 8024378:	f7fa fb58 	bl	801ea2c <nema_set_const_color>
 802437c:	f04f 33ff 	mov.w	r3, #4294967295
 8024380:	2201      	movs	r2, #1
 8024382:	2100      	movs	r1, #0
 8024384:	4819      	ldr	r0, [pc, #100]	@ (80243ec <_ZN8touchgfx8LCDGPU2D8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x11c>)
 8024386:	f7f9 ff8b 	bl	801e2a0 <nema_set_blend>
 802438a:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 802438e:	f9bd 2016 	ldrsh.w	r2, [sp, #22]
 8024392:	fb04 f403 	mul.w	r4, r4, r3
 8024396:	f9bd 1014 	ldrsh.w	r1, [sp, #20]
 802439a:	464b      	mov	r3, r9
 802439c:	4640      	mov	r0, r8
 802439e:	e9cd 4500 	strd	r4, r5, [sp]
 80243a2:	f7ec fec7 	bl	8011134 <nema_bind_src_tex>
 80243a6:	f9bd 0010 	ldrsh.w	r0, [sp, #16]
 80243aa:	f9bd 1012 	ldrsh.w	r1, [sp, #18]
 80243ae:	f7ed f91b 	bl	80115e8 <nema_blit>
 80243b2:	6838      	ldr	r0, [r7, #0]
 80243b4:	b160      	cbz	r0, 80243d0 <_ZN8touchgfx8LCDGPU2D8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x100>
 80243b6:	f7fc fd6f 	bl	8020e98 <_ZN8touchgfx8HALGPU2D16submitExecBufferEv>
 80243ba:	b007      	add	sp, #28
 80243bc:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80243c0:	f04f 0904 	mov.w	r9, #4
 80243c4:	2402      	movs	r4, #2
 80243c6:	e7a8      	b.n	802431a <_ZN8touchgfx8LCDGPU2D8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x4a>
 80243c8:	f04f 0939 	mov.w	r9, #57	@ 0x39
 80243cc:	2403      	movs	r4, #3
 80243ce:	e7a4      	b.n	802431a <_ZN8touchgfx8LCDGPU2D8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x4a>
 80243d0:	4b07      	ldr	r3, [pc, #28]	@ (80243f0 <_ZN8touchgfx8LCDGPU2D8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x120>)
 80243d2:	4a08      	ldr	r2, [pc, #32]	@ (80243f4 <_ZN8touchgfx8LCDGPU2D8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x124>)
 80243d4:	217c      	movs	r1, #124	@ 0x7c
 80243d6:	4808      	ldr	r0, [pc, #32]	@ (80243f8 <_ZN8touchgfx8LCDGPU2D8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x128>)
 80243d8:	f00e f9ce 	bl	8032778 <__assert_func>
 80243dc:	4b07      	ldr	r3, [pc, #28]	@ (80243fc <_ZN8touchgfx8LCDGPU2D8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x12c>)
 80243de:	4a08      	ldr	r2, [pc, #32]	@ (8024400 <_ZN8touchgfx8LCDGPU2D8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x130>)
 80243e0:	21c9      	movs	r1, #201	@ 0xc9
 80243e2:	4808      	ldr	r0, [pc, #32]	@ (8024404 <_ZN8touchgfx8LCDGPU2D8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x134>)
 80243e4:	f00e f9c8 	bl	8032778 <__assert_func>
 80243e8:	20083544 	.word	0x20083544
 80243ec:	08000504 	.word	0x08000504
 80243f0:	080364bc 	.word	0x080364bc
 80243f4:	08036d28 	.word	0x08036d28
 80243f8:	080364e4 	.word	0x080364e4
 80243fc:	08036968 	.word	0x08036968
 8024400:	080380cc 	.word	0x080380cc
 8024404:	08036560 	.word	0x08036560

08024408 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss>:
 8024408:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802440c:	4682      	mov	sl, r0
 802440e:	4851      	ldr	r0, [pc, #324]	@ (8024554 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x14c>)
 8024410:	b08f      	sub	sp, #60	@ 0x3c
 8024412:	6800      	ldr	r0, [r0, #0]
 8024414:	9104      	str	r1, [sp, #16]
 8024416:	f890 1048 	ldrb.w	r1, [r0, #72]	@ 0x48
 802441a:	f9bd 0064 	ldrsh.w	r0, [sp, #100]	@ 0x64
 802441e:	2902      	cmp	r1, #2
 8024420:	9003      	str	r0, [sp, #12]
 8024422:	f9bd 0068 	ldrsh.w	r0, [sp, #104]	@ 0x68
 8024426:	9006      	str	r0, [sp, #24]
 8024428:	f000 81cd 	beq.w	80247c6 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x3be>
 802442c:	9918      	ldr	r1, [sp, #96]	@ 0x60
 802442e:	2900      	cmp	r1, #0
 8024430:	f000 81c3 	beq.w	80247ba <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x3b2>
 8024434:	f9b3 5000 	ldrsh.w	r5, [r3]
 8024438:	8899      	ldrh	r1, [r3, #4]
 802443a:	b2ae      	uxth	r6, r5
 802443c:	4431      	add	r1, r6
 802443e:	b289      	uxth	r1, r1
 8024440:	fa0f fc81 	sxth.w	ip, r1
 8024444:	4565      	cmp	r5, ip
 8024446:	f9b3 4002 	ldrsh.w	r4, [r3, #2]
 802444a:	da28      	bge.n	802449e <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x96>
 802444c:	9803      	ldr	r0, [sp, #12]
 802444e:	1830      	adds	r0, r6, r0
 8024450:	b280      	uxth	r0, r0
 8024452:	9005      	str	r0, [sp, #20]
 8024454:	f9bd e014 	ldrsh.w	lr, [sp, #20]
 8024458:	4575      	cmp	r5, lr
 802445a:	da20      	bge.n	802449e <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x96>
 802445c:	f8b3 8006 	ldrh.w	r8, [r3, #6]
 8024460:	b2a7      	uxth	r7, r4
 8024462:	4638      	mov	r0, r7
 8024464:	4447      	add	r7, r8
 8024466:	b2bf      	uxth	r7, r7
 8024468:	fa0f f987 	sxth.w	r9, r7
 802446c:	454c      	cmp	r4, r9
 802446e:	da16      	bge.n	802449e <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x96>
 8024470:	4680      	mov	r8, r0
 8024472:	9007      	str	r0, [sp, #28]
 8024474:	9806      	ldr	r0, [sp, #24]
 8024476:	4480      	add	r8, r0
 8024478:	fa1f f888 	uxth.w	r8, r8
 802447c:	fa0f fb88 	sxth.w	fp, r8
 8024480:	455c      	cmp	r4, fp
 8024482:	da0c      	bge.n	802449e <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x96>
 8024484:	9805      	ldr	r0, [sp, #20]
 8024486:	45d9      	cmp	r9, fp
 8024488:	bfc8      	it	gt
 802448a:	4647      	movgt	r7, r8
 802448c:	45f4      	cmp	ip, lr
 802448e:	bfc8      	it	gt
 8024490:	4601      	movgt	r1, r0
 8024492:	9807      	ldr	r0, [sp, #28]
 8024494:	1b89      	subs	r1, r1, r6
 8024496:	1a3f      	subs	r7, r7, r0
 8024498:	b209      	sxth	r1, r1
 802449a:	b23f      	sxth	r7, r7
 802449c:	e005      	b.n	80244aa <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xa2>
 802449e:	2700      	movs	r7, #0
 80244a0:	463c      	mov	r4, r7
 80244a2:	4639      	mov	r1, r7
 80244a4:	463e      	mov	r6, r7
 80244a6:	463d      	mov	r5, r7
 80244a8:	9707      	str	r7, [sp, #28]
 80244aa:	f9b2 b000 	ldrsh.w	fp, [r2]
 80244ae:	8890      	ldrh	r0, [r2, #4]
 80244b0:	4458      	add	r0, fp
 80244b2:	b280      	uxth	r0, r0
 80244b4:	fa0f fc80 	sxth.w	ip, r0
 80244b8:	45ac      	cmp	ip, r5
 80244ba:	dd51      	ble.n	8024560 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x158>
 80244bc:	4431      	add	r1, r6
 80244be:	b289      	uxth	r1, r1
 80244c0:	fa0f fe81 	sxth.w	lr, r1
 80244c4:	45f3      	cmp	fp, lr
 80244c6:	da4b      	bge.n	8024560 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x158>
 80244c8:	f9b2 8002 	ldrsh.w	r8, [r2, #2]
 80244cc:	88d6      	ldrh	r6, [r2, #6]
 80244ce:	4446      	add	r6, r8
 80244d0:	b2b6      	uxth	r6, r6
 80244d2:	fa0f f986 	sxth.w	r9, r6
 80244d6:	454c      	cmp	r4, r9
 80244d8:	da42      	bge.n	8024560 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x158>
 80244da:	9a07      	ldr	r2, [sp, #28]
 80244dc:	443a      	add	r2, r7
 80244de:	b297      	uxth	r7, r2
 80244e0:	b23a      	sxth	r2, r7
 80244e2:	4590      	cmp	r8, r2
 80244e4:	9205      	str	r2, [sp, #20]
 80244e6:	da3b      	bge.n	8024560 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x158>
 80244e8:	45ab      	cmp	fp, r5
 80244ea:	bfb8      	it	lt
 80244ec:	46ab      	movlt	fp, r5
 80244ee:	4544      	cmp	r4, r8
 80244f0:	bfb8      	it	lt
 80244f2:	4644      	movlt	r4, r8
 80244f4:	45f4      	cmp	ip, lr
 80244f6:	bfc8      	it	gt
 80244f8:	4608      	movgt	r0, r1
 80244fa:	9905      	ldr	r1, [sp, #20]
 80244fc:	465a      	mov	r2, fp
 80244fe:	4589      	cmp	r9, r1
 8024500:	bfc8      	it	gt
 8024502:	463e      	movgt	r6, r7
 8024504:	f8df c054 	ldr.w	ip, [pc, #84]	@ 802455c <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x154>
 8024508:	4f13      	ldr	r7, [pc, #76]	@ (8024558 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x150>)
 802450a:	fa1f f58b 	uxth.w	r5, fp
 802450e:	1b36      	subs	r6, r6, r4
 8024510:	1b41      	subs	r1, r0, r5
 8024512:	f8bc c000 	ldrh.w	ip, [ip]
 8024516:	883f      	ldrh	r7, [r7, #0]
 8024518:	fa0f fb86 	sxth.w	fp, r6
 802451c:	fa0f f981 	sxth.w	r9, r1
 8024520:	2a00      	cmp	r2, #0
 8024522:	f8ad b026 	strh.w	fp, [sp, #38]	@ 0x26
 8024526:	f8ad 2020 	strh.w	r2, [sp, #32]
 802452a:	f8ad 4022 	strh.w	r4, [sp, #34]	@ 0x22
 802452e:	f8ad 9024 	strh.w	r9, [sp, #36]	@ 0x24
 8024532:	fa0f f68c 	sxth.w	r6, ip
 8024536:	b239      	sxth	r1, r7
 8024538:	f280 812b 	bge.w	8024792 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x38a>
 802453c:	f04f 0e00 	mov.w	lr, #0
 8024540:	fa0f f980 	sxth.w	r9, r0
 8024544:	4675      	mov	r5, lr
 8024546:	4672      	mov	r2, lr
 8024548:	4648      	mov	r0, r9
 802454a:	f8ad 9024 	strh.w	r9, [sp, #36]	@ 0x24
 802454e:	f8ad e020 	strh.w	lr, [sp, #32]
 8024552:	e015      	b.n	8024580 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x178>
 8024554:	200830a4 	.word	0x200830a4
 8024558:	2008309a 	.word	0x2008309a
 802455c:	20083098 	.word	0x20083098
 8024560:	2200      	movs	r2, #0
 8024562:	48a3      	ldr	r0, [pc, #652]	@ (80247f0 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x3e8>)
 8024564:	4615      	mov	r5, r2
 8024566:	f8b0 c000 	ldrh.w	ip, [r0]
 802456a:	4693      	mov	fp, r2
 802456c:	4614      	mov	r4, r2
 802456e:	4610      	mov	r0, r2
 8024570:	4691      	mov	r9, r2
 8024572:	49a0      	ldr	r1, [pc, #640]	@ (80247f4 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x3ec>)
 8024574:	e9cd 2208 	strd	r2, r2, [sp, #32]
 8024578:	880f      	ldrh	r7, [r1, #0]
 802457a:	fa0f f68c 	sxth.w	r6, ip
 802457e:	b239      	sxth	r1, r7
 8024580:	1ab2      	subs	r2, r6, r2
 8024582:	4282      	cmp	r2, r0
 8024584:	da05      	bge.n	8024592 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x18a>
 8024586:	ebac 0c05 	sub.w	ip, ip, r5
 802458a:	fa0f f98c 	sxth.w	r9, ip
 802458e:	f8ad 9024 	strh.w	r9, [sp, #36]	@ 0x24
 8024592:	2c00      	cmp	r4, #0
 8024594:	f2c0 80e8 	blt.w	8024768 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x360>
 8024598:	4622      	mov	r2, r4
 802459a:	1a89      	subs	r1, r1, r2
 802459c:	458b      	cmp	fp, r1
 802459e:	dd04      	ble.n	80245aa <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a2>
 80245a0:	1b3f      	subs	r7, r7, r4
 80245a2:	fa0f fb87 	sxth.w	fp, r7
 80245a6:	f8ad b026 	strh.w	fp, [sp, #38]	@ 0x26
 80245aa:	f1b9 0f00 	cmp.w	r9, #0
 80245ae:	f340 80d2 	ble.w	8024756 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x34e>
 80245b2:	f1bb 0f00 	cmp.w	fp, #0
 80245b6:	f340 80ce 	ble.w	8024756 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x34e>
 80245ba:	2200      	movs	r2, #0
 80245bc:	8819      	ldrh	r1, [r3, #0]
 80245be:	f8b3 8002 	ldrh.w	r8, [r3, #2]
 80245c2:	9b03      	ldr	r3, [sp, #12]
 80245c4:	1a6d      	subs	r5, r5, r1
 80245c6:	f8ad 3034 	strh.w	r3, [sp, #52]	@ 0x34
 80245ca:	eba4 0408 	sub.w	r4, r4, r8
 80245ce:	9b06      	ldr	r3, [sp, #24]
 80245d0:	a90c      	add	r1, sp, #48	@ 0x30
 80245d2:	a80a      	add	r0, sp, #40	@ 0x28
 80245d4:	b22d      	sxth	r5, r5
 80245d6:	b224      	sxth	r4, r4
 80245d8:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 80245dc:	920c      	str	r2, [sp, #48]	@ 0x30
 80245de:	f8ad 902c 	strh.w	r9, [sp, #44]	@ 0x2c
 80245e2:	f8ad b02e 	strh.w	fp, [sp, #46]	@ 0x2e
 80245e6:	f8ad 5028 	strh.w	r5, [sp, #40]	@ 0x28
 80245ea:	f8ad 402a 	strh.w	r4, [sp, #42]	@ 0x2a
 80245ee:	f7e8 fd0f 	bl	800d010 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80245f2:	a808      	add	r0, sp, #32
 80245f4:	f7e8 fce4 	bl	800cfc0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80245f8:	a80c      	add	r0, sp, #48	@ 0x30
 80245fa:	f7e8 fce1 	bl	800cfc0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80245fe:	4b7e      	ldr	r3, [pc, #504]	@ (80247f8 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x3f0>)
 8024600:	681b      	ldr	r3, [r3, #0]
 8024602:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
 8024606:	2a00      	cmp	r2, #0
 8024608:	f040 80ba 	bne.w	8024780 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x378>
 802460c:	6898      	ldr	r0, [r3, #8]
 802460e:	6803      	ldr	r3, [r0, #0]
 8024610:	4a7a      	ldr	r2, [pc, #488]	@ (80247fc <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x3f4>)
 8024612:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8024614:	4293      	cmp	r3, r2
 8024616:	f040 80c4 	bne.w	80247a2 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x39a>
 802461a:	7b00      	ldrb	r0, [r0, #12]
 802461c:	2801      	cmp	r0, #1
 802461e:	f000 80ba 	beq.w	8024796 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x38e>
 8024622:	f0c0 80b2 	bcc.w	802478a <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x382>
 8024626:	2802      	cmp	r0, #2
 8024628:	f040 80da 	bne.w	80247e0 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x3d8>
 802462c:	2310      	movs	r3, #16
 802462e:	2604      	movs	r6, #4
 8024630:	9305      	str	r3, [sp, #20]
 8024632:	9b04      	ldr	r3, [sp, #16]
 8024634:	f9bd 1034 	ldrsh.w	r1, [sp, #52]	@ 0x34
 8024638:	681b      	ldr	r3, [r3, #0]
 802463a:	fb06 f101 	mul.w	r1, r6, r1
 802463e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8024640:	4a6f      	ldr	r2, [pc, #444]	@ (8024800 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x3f8>)
 8024642:	9103      	str	r1, [sp, #12]
 8024644:	4293      	cmp	r3, r2
 8024646:	f040 80ae 	bne.w	80247a6 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x39e>
 802464a:	4b6e      	ldr	r3, [pc, #440]	@ (8024804 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x3fc>)
 802464c:	881f      	ldrh	r7, [r3, #0]
 802464e:	2f00      	cmp	r7, #0
 8024650:	f000 80bf 	beq.w	80247d2 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x3ca>
 8024654:	9b04      	ldr	r3, [sp, #16]
 8024656:	7b1b      	ldrb	r3, [r3, #12]
 8024658:	2b02      	cmp	r3, #2
 802465a:	f000 80a0 	beq.w	802479e <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x396>
 802465e:	2b01      	cmp	r3, #1
 8024660:	bf14      	ite	ne
 8024662:	2302      	movne	r3, #2
 8024664:	2303      	moveq	r3, #3
 8024666:	fb17 f703 	smulbb	r7, r7, r3
 802466a:	b2bf      	uxth	r7, r7
 802466c:	4a62      	ldr	r2, [pc, #392]	@ (80247f8 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x3f0>)
 802466e:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	@ 0x28
 8024672:	6810      	ldr	r0, [r2, #0]
 8024674:	f9bd 802a 	ldrsh.w	r8, [sp, #42]	@ 0x2a
 8024678:	9a03      	ldr	r2, [sp, #12]
 802467a:	fb02 3808 	mla	r8, r2, r8, r3
 802467e:	9a18      	ldr	r2, [sp, #96]	@ 0x60
 8024680:	6803      	ldr	r3, [r0, #0]
 8024682:	4442      	add	r2, r8
 8024684:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8024686:	9204      	str	r2, [sp, #16]
 8024688:	4798      	blx	r3
 802468a:	f9bd 2022 	ldrsh.w	r2, [sp, #34]	@ 0x22
 802468e:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 8024692:	fb07 f202 	mul.w	r2, r7, r2
 8024696:	fb06 2303 	mla	r3, r6, r3, r2
 802469a:	f8df 8198 	ldr.w	r8, [pc, #408]	@ 8024834 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x42c>
 802469e:	18c3      	adds	r3, r0, r3
 80246a0:	f8d8 2000 	ldr.w	r2, [r8]
 80246a4:	9306      	str	r3, [sp, #24]
 80246a6:	2a00      	cmp	r2, #0
 80246a8:	f000 8081 	beq.w	80247ae <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x3a6>
 80246ac:	2600      	movs	r6, #0
 80246ae:	4610      	mov	r0, r2
 80246b0:	f7fc fbd2 	bl	8020e58 <_ZN8touchgfx8HALGPU2D14bindExecBufferEv>
 80246b4:	9b03      	ldr	r3, [sp, #12]
 80246b6:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	@ 0x2e
 80246ba:	f9bd 102c 	ldrsh.w	r1, [sp, #44]	@ 0x2c
 80246be:	9300      	str	r3, [sp, #0]
 80246c0:	e9dd 0304 	ldrd	r0, r3, [sp, #16]
 80246c4:	f7ec fdba 	bl	801123c <nema_bind_dst_tex>
 80246c8:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	@ 0x2e
 80246cc:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
 80246d0:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	@ 0x2a
 80246d4:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	@ 0x28
 80246d8:	f7ec fc46 	bl	8010f68 <nema_set_clip>
 80246dc:	f04f 33ff 	mov.w	r3, #4294967295
 80246e0:	2201      	movs	r2, #1
 80246e2:	4631      	mov	r1, r6
 80246e4:	f240 5004 	movw	r0, #1284	@ 0x504
 80246e8:	f7f9 fdda 	bl	801e2a0 <nema_set_blend>
 80246ec:	e9dd 3005 	ldrd	r3, r0, [sp, #20]
 80246f0:	f9bd 2026 	ldrsh.w	r2, [sp, #38]	@ 0x26
 80246f4:	f9bd 1024 	ldrsh.w	r1, [sp, #36]	@ 0x24
 80246f8:	9700      	str	r7, [sp, #0]
 80246fa:	9601      	str	r6, [sp, #4]
 80246fc:	f7ec fd1a 	bl	8011134 <nema_bind_src_tex>
 8024700:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	@ 0x28
 8024704:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	@ 0x2a
 8024708:	f7ec ff6e 	bl	80115e8 <nema_blit>
 802470c:	f8d8 0000 	ldr.w	r0, [r8]
 8024710:	2800      	cmp	r0, #0
 8024712:	d04c      	beq.n	80247ae <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x3a6>
 8024714:	f7fc fbc0 	bl	8020e98 <_ZN8touchgfx8HALGPU2D16submitExecBufferEv>
 8024718:	f8d8 0000 	ldr.w	r0, [r8]
 802471c:	2800      	cmp	r0, #0
 802471e:	d046      	beq.n	80247ae <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x3a6>
 8024720:	6803      	ldr	r3, [r0, #0]
 8024722:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8024724:	4798      	blx	r3
 8024726:	f8d8 0000 	ldr.w	r0, [r8]
 802472a:	2800      	cmp	r0, #0
 802472c:	d03f      	beq.n	80247ae <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x3a6>
 802472e:	6803      	ldr	r3, [r0, #0]
 8024730:	4637      	mov	r7, r6
 8024732:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8024734:	4798      	blx	r3
 8024736:	4650      	mov	r0, sl
 8024738:	f365 060f 	bfi	r6, r5, #0, #16
 802473c:	f369 070f 	bfi	r7, r9, #0, #16
 8024740:	f364 461f 	bfi	r6, r4, #16, #16
 8024744:	f36b 471f 	bfi	r7, fp, #16, #16
 8024748:	f8ca 6000 	str.w	r6, [sl]
 802474c:	f8ca 7004 	str.w	r7, [sl, #4]
 8024750:	b00f      	add	sp, #60	@ 0x3c
 8024752:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8024756:	2300      	movs	r3, #0
 8024758:	4650      	mov	r0, sl
 802475a:	f8ca 3000 	str.w	r3, [sl]
 802475e:	f8ca 3004 	str.w	r3, [sl, #4]
 8024762:	b00f      	add	sp, #60	@ 0x3c
 8024764:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8024768:	2000      	movs	r0, #0
 802476a:	eb0b 0604 	add.w	r6, fp, r4
 802476e:	fa0f fb86 	sxth.w	fp, r6
 8024772:	4604      	mov	r4, r0
 8024774:	4602      	mov	r2, r0
 8024776:	f8ad b026 	strh.w	fp, [sp, #38]	@ 0x26
 802477a:	f8ad 0022 	strh.w	r0, [sp, #34]	@ 0x22
 802477e:	e70c      	b.n	802459a <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x192>
 8024780:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
 8024782:	2800      	cmp	r0, #0
 8024784:	f47f af43 	bne.w	802460e <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x206>
 8024788:	e740      	b.n	802460c <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x204>
 802478a:	2304      	movs	r3, #4
 802478c:	2602      	movs	r6, #2
 802478e:	9305      	str	r3, [sp, #20]
 8024790:	e74f      	b.n	8024632 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x22a>
 8024792:	4648      	mov	r0, r9
 8024794:	e6f4      	b.n	8024580 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x178>
 8024796:	2339      	movs	r3, #57	@ 0x39
 8024798:	2603      	movs	r6, #3
 802479a:	9305      	str	r3, [sp, #20]
 802479c:	e749      	b.n	8024632 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x22a>
 802479e:	2304      	movs	r3, #4
 80247a0:	e761      	b.n	8024666 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x25e>
 80247a2:	4798      	blx	r3
 80247a4:	e73a      	b.n	802461c <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x214>
 80247a6:	9804      	ldr	r0, [sp, #16]
 80247a8:	4798      	blx	r3
 80247aa:	4607      	mov	r7, r0
 80247ac:	e75e      	b.n	802466c <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x264>
 80247ae:	4b16      	ldr	r3, [pc, #88]	@ (8024808 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x400>)
 80247b0:	4a16      	ldr	r2, [pc, #88]	@ (802480c <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x404>)
 80247b2:	217c      	movs	r1, #124	@ 0x7c
 80247b4:	4816      	ldr	r0, [pc, #88]	@ (8024810 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x408>)
 80247b6:	f00d ffdf 	bl	8032778 <__assert_func>
 80247ba:	4b16      	ldr	r3, [pc, #88]	@ (8024814 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x40c>)
 80247bc:	4a16      	ldr	r2, [pc, #88]	@ (8024818 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x410>)
 80247be:	21f9      	movs	r1, #249	@ 0xf9
 80247c0:	4816      	ldr	r0, [pc, #88]	@ (802481c <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x414>)
 80247c2:	f00d ffd9 	bl	8032778 <__assert_func>
 80247c6:	4b16      	ldr	r3, [pc, #88]	@ (8024820 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x418>)
 80247c8:	4a13      	ldr	r2, [pc, #76]	@ (8024818 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x410>)
 80247ca:	21f8      	movs	r1, #248	@ 0xf8
 80247cc:	4813      	ldr	r0, [pc, #76]	@ (802481c <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x414>)
 80247ce:	f00d ffd3 	bl	8032778 <__assert_func>
 80247d2:	4b14      	ldr	r3, [pc, #80]	@ (8024824 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x41c>)
 80247d4:	4a14      	ldr	r2, [pc, #80]	@ (8024828 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x420>)
 80247d6:	f240 110f 	movw	r1, #271	@ 0x10f
 80247da:	4814      	ldr	r0, [pc, #80]	@ (802482c <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x424>)
 80247dc:	f00d ffcc 	bl	8032778 <__assert_func>
 80247e0:	4b13      	ldr	r3, [pc, #76]	@ (8024830 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x428>)
 80247e2:	4a0d      	ldr	r2, [pc, #52]	@ (8024818 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x410>)
 80247e4:	f44f 7191 	mov.w	r1, #290	@ 0x122
 80247e8:	480c      	ldr	r0, [pc, #48]	@ (802481c <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x414>)
 80247ea:	f00d ffc5 	bl	8032778 <__assert_func>
 80247ee:	bf00      	nop
 80247f0:	20083098 	.word	0x20083098
 80247f4:	2008309a 	.word	0x2008309a
 80247f8:	200830a4 	.word	0x200830a4
 80247fc:	08020f3d 	.word	0x08020f3d
 8024800:	08022b1d 	.word	0x08022b1d
 8024804:	2008309e 	.word	0x2008309e
 8024808:	080364bc 	.word	0x080364bc
 802480c:	08036d28 	.word	0x08036d28
 8024810:	080364e4 	.word	0x080364e4
 8024814:	08036818 	.word	0x08036818
 8024818:	08037e00 	.word	0x08037e00
 802481c:	08036560 	.word	0x08036560
 8024820:	08036764 	.word	0x08036764
 8024824:	08036a98 	.word	0x08036a98
 8024828:	0803825c 	.word	0x0803825c
 802482c:	08036adc 	.word	0x08036adc
 8024830:	08036868 	.word	0x08036868
 8024834:	20083544 	.word	0x20083544

08024838 <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 8024838:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802483c:	b085      	sub	sp, #20
 802483e:	f89d 6044 	ldrb.w	r6, [sp, #68]	@ 0x44
 8024842:	e9dd 950e 	ldrd	r9, r5, [sp, #56]	@ 0x38
 8024846:	f8bd 8040 	ldrh.w	r8, [sp, #64]	@ 0x40
 802484a:	f8bd a048 	ldrh.w	sl, [sp, #72]	@ 0x48
 802484e:	2e00      	cmp	r6, #0
 8024850:	d05b      	beq.n	802490a <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0xd2>
 8024852:	f9b5 e004 	ldrsh.w	lr, [r5, #4]
 8024856:	f1be 0f00 	cmp.w	lr, #0
 802485a:	dd56      	ble.n	802490a <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0xd2>
 802485c:	f9b5 e006 	ldrsh.w	lr, [r5, #6]
 8024860:	f1be 0f00 	cmp.w	lr, #0
 8024864:	dd51      	ble.n	802490a <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0xd2>
 8024866:	f3c8 0b87 	ubfx	fp, r8, #2, #8
 802486a:	f1bb 0f0b 	cmp.w	fp, #11
 802486e:	f000 815f 	beq.w	8024b30 <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x2f8>
 8024872:	f1bb 0f0d 	cmp.w	fp, #13
 8024876:	4684      	mov	ip, r0
 8024878:	4614      	mov	r4, r2
 802487a:	461f      	mov	r7, r3
 802487c:	d03c      	beq.n	80248f8 <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0xc0>
 802487e:	f8df a35c 	ldr.w	sl, [pc, #860]	@ 8024bdc <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3a4>
 8024882:	f8da 0000 	ldr.w	r0, [sl]
 8024886:	2800      	cmp	r0, #0
 8024888:	f000 8187 	beq.w	8024b9a <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x362>
 802488c:	f8cd c00c 	str.w	ip, [sp, #12]
 8024890:	f7fc fae2 	bl	8020e58 <_ZN8touchgfx8HALGPU2D14bindExecBufferEv>
 8024894:	9b03      	ldr	r3, [sp, #12]
 8024896:	681a      	ldr	r2, [r3, #0]
 8024898:	4618      	mov	r0, r3
 802489a:	6d53      	ldr	r3, [r2, #84]	@ 0x54
 802489c:	4798      	blx	r3
 802489e:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 80248a2:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 80248a6:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
 80248aa:	f9b5 0000 	ldrsh.w	r0, [r5]
 80248ae:	f7ec fb5b 	bl	8010f68 <nema_set_clip>
 80248b2:	2200      	movs	r2, #0
 80248b4:	4633      	mov	r3, r6
 80248b6:	4611      	mov	r1, r2
 80248b8:	4610      	mov	r0, r2
 80248ba:	f7ec fc33 	bl	8011124 <nema_rgba>
 80248be:	f7fa f8b5 	bl	801ea2c <nema_set_const_color>
 80248c2:	f04f 33ff 	mov.w	r3, #4294967295
 80248c6:	2201      	movs	r2, #1
 80248c8:	2100      	movs	r1, #0
 80248ca:	48ba      	ldr	r0, [pc, #744]	@ (8024bb4 <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x37c>)
 80248cc:	f7f9 fce8 	bl	801e2a0 <nema_set_blend>
 80248d0:	f1bb 0f0d 	cmp.w	fp, #13
 80248d4:	f200 8167 	bhi.w	8024ba6 <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36e>
 80248d8:	e8df f01b 	tbh	[pc, fp, lsl #1]
 80248dc:	00c100cd 	.word	0x00c100cd
 80248e0:	016500d6 	.word	0x016500d6
 80248e4:	01650165 	.word	0x01650165
 80248e8:	01650165 	.word	0x01650165
 80248ec:	01650165 	.word	0x01650165
 80248f0:	01650165 	.word	0x01650165
 80248f4:	001a00ac 	.word	0x001a00ac
 80248f8:	685b      	ldr	r3, [r3, #4]
 80248fa:	b133      	cbz	r3, 802490a <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0xd2>
 80248fc:	781b      	ldrb	r3, [r3, #0]
 80248fe:	f1a3 0216 	sub.w	r2, r3, #22
 8024902:	2a01      	cmp	r2, #1
 8024904:	d9bb      	bls.n	802487e <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x46>
 8024906:	2b12      	cmp	r3, #18
 8024908:	d0b9      	beq.n	802487e <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x46>
 802490a:	b005      	add	sp, #20
 802490c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8024910:	f04f 36ff 	mov.w	r6, #4294967295
 8024914:	e9d7 1202 	ldrd	r1, r2, [r7, #8]
 8024918:	687b      	ldr	r3, [r7, #4]
 802491a:	6838      	ldr	r0, [r7, #0]
 802491c:	781b      	ldrb	r3, [r3, #0]
 802491e:	f008 0501 	and.w	r5, r8, #1
 8024922:	e9cd 6500 	strd	r6, r5, [sp]
 8024926:	f7ec fc05 	bl	8011134 <nema_bind_src_tex>
 802492a:	2001      	movs	r0, #1
 802492c:	f7ed fc9e 	bl	801226c <nema_enable_tiling>
 8024930:	f9b9 3000 	ldrsh.w	r3, [r9]
 8024934:	edd4 7a00 	vldr	s15, [r4]
 8024938:	ee02 3a10 	vmov	s4, r3
 802493c:	f9b9 3002 	ldrsh.w	r3, [r9, #2]
 8024940:	eeb8 2ac2 	vcvt.f32.s32	s4, s4
 8024944:	ee02 3a90 	vmov	s5, r3
 8024948:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 802494c:	eddf 6a9a 	vldr	s13, [pc, #616]	@ 8024bb8 <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x380>
 8024950:	eef8 2ae2 	vcvt.f32.s32	s5, s5
 8024954:	edd4 7a01 	vldr	s15, [r4, #4]
 8024958:	eeb0 0a42 	vmov.f32	s0, s4
 802495c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8024960:	eea7 0a26 	vfma.f32	s0, s14, s13
 8024964:	eef0 0a62 	vmov.f32	s1, s5
 8024968:	ed94 7a03 	vldr	s14, [r4, #12]
 802496c:	4b93      	ldr	r3, [pc, #588]	@ (8024bbc <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x384>)
 802496e:	eee7 0aa6 	vfma.f32	s1, s15, s13
 8024972:	781b      	ldrb	r3, [r3, #0]
 8024974:	edd4 7a04 	vldr	s15, [r4, #16]
 8024978:	2b01      	cmp	r3, #1
 802497a:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 802497e:	f000 808c 	beq.w	8024a9a <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x262>
 8024982:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8024986:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 802498a:	f240 80ea 	bls.w	8024b62 <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x32a>
 802498e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8024992:	bf94      	ite	ls
 8024994:	2001      	movls	r0, #1
 8024996:	2002      	movhi	r0, #2
 8024998:	edd4 7a05 	vldr	s15, [r4, #20]
 802499c:	ed94 6a08 	vldr	s12, [r4, #32]
 80249a0:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 80249a4:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
 80249a8:	edd4 7a06 	vldr	s15, [r4, #24]
 80249ac:	eddf 6a82 	vldr	s13, [pc, #520]	@ 8024bb8 <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x380>
 80249b0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80249b4:	eeb0 1a42 	vmov.f32	s2, s4
 80249b8:	eef0 1a62 	vmov.f32	s3, s5
 80249bc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80249c0:	eee7 1aa6 	vfma.f32	s3, s15, s13
 80249c4:	eea7 1a26 	vfma.f32	s2, s14, s13
 80249c8:	edd4 7a09 	vldr	s15, [r4, #36]	@ 0x24
 80249cc:	f240 80c1 	bls.w	8024b52 <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x31a>
 80249d0:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80249d4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80249d8:	bf94      	ite	ls
 80249da:	2101      	movls	r1, #1
 80249dc:	2102      	movhi	r1, #2
 80249de:	edd4 7a0a 	vldr	s15, [r4, #40]	@ 0x28
 80249e2:	ed94 6a0d 	vldr	s12, [r4, #52]	@ 0x34
 80249e6:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 80249ea:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
 80249ee:	edd4 7a0b 	vldr	s15, [r4, #44]	@ 0x2c
 80249f2:	eddf 6a71 	vldr	s13, [pc, #452]	@ 8024bb8 <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x380>
 80249f6:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80249fa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80249fe:	eee7 2aa6 	vfma.f32	s5, s15, s13
 8024a02:	eea7 2a26 	vfma.f32	s4, s14, s13
 8024a06:	edd4 7a0e 	vldr	s15, [r4, #56]	@ 0x38
 8024a0a:	f240 809a 	bls.w	8024b42 <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x30a>
 8024a0e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8024a12:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8024a16:	bf94      	ite	ls
 8024a18:	2201      	movls	r2, #1
 8024a1a:	2202      	movhi	r2, #2
 8024a1c:	f7ec feda 	bl	80117d4 <nema_blit_tri_fit>
 8024a20:	f8da 0000 	ldr.w	r0, [sl]
 8024a24:	2800      	cmp	r0, #0
 8024a26:	f000 80b8 	beq.w	8024b9a <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x362>
 8024a2a:	b005      	add	sp, #20
 8024a2c:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8024a30:	f7fc ba32 	b.w	8020e98 <_ZN8touchgfx8HALGPU2D16submitExecBufferEv>
 8024a34:	4a62      	ldr	r2, [pc, #392]	@ (8024bc0 <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x388>)
 8024a36:	23ff      	movs	r3, #255	@ 0xff
 8024a38:	6810      	ldr	r0, [r2, #0]
 8024a3a:	f008 0501 	and.w	r5, r8, #1
 8024a3e:	b2c2      	uxtb	r2, r0
 8024a40:	f3c0 2107 	ubfx	r1, r0, #8, #8
 8024a44:	f3c0 4007 	ubfx	r0, r0, #16, #8
 8024a48:	f7ec fb6c 	bl	8011124 <nema_rgba>
 8024a4c:	f7ec fa80 	bl	8010f50 <nema_set_tex_color>
 8024a50:	e9d7 1202 	ldrd	r1, r2, [r7, #8]
 8024a54:	6838      	ldr	r0, [r7, #0]
 8024a56:	2329      	movs	r3, #41	@ 0x29
 8024a58:	f04f 36ff 	mov.w	r6, #4294967295
 8024a5c:	e761      	b.n	8024922 <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0xea>
 8024a5e:	2339      	movs	r3, #57	@ 0x39
 8024a60:	e9d7 1202 	ldrd	r1, r2, [r7, #8]
 8024a64:	f04f 0c03 	mov.w	ip, #3
 8024a68:	6838      	ldr	r0, [r7, #0]
 8024a6a:	f008 0501 	and.w	r5, r8, #1
 8024a6e:	693e      	ldr	r6, [r7, #16]
 8024a70:	fb06 f60c 	mul.w	r6, r6, ip
 8024a74:	e755      	b.n	8024922 <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0xea>
 8024a76:	f008 0501 	and.w	r5, r8, #1
 8024a7a:	6838      	ldr	r0, [r7, #0]
 8024a7c:	e9d7 1202 	ldrd	r1, r2, [r7, #8]
 8024a80:	2304      	movs	r3, #4
 8024a82:	f04f 0c02 	mov.w	ip, #2
 8024a86:	e7f2      	b.n	8024a6e <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x236>
 8024a88:	2310      	movs	r3, #16
 8024a8a:	e9d7 1202 	ldrd	r1, r2, [r7, #8]
 8024a8e:	f04f 0c04 	mov.w	ip, #4
 8024a92:	6838      	ldr	r0, [r7, #0]
 8024a94:	f008 0501 	and.w	r5, r8, #1
 8024a98:	e7e9      	b.n	8024a6e <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x236>
 8024a9a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8024a9e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8024aa2:	d974      	bls.n	8024b8e <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x356>
 8024aa4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8024aa8:	bf94      	ite	ls
 8024aaa:	2002      	movls	r0, #2
 8024aac:	2003      	movhi	r0, #3
 8024aae:	edd4 7a05 	vldr	s15, [r4, #20]
 8024ab2:	ed94 6a08 	vldr	s12, [r4, #32]
 8024ab6:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8024aba:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
 8024abe:	edd4 7a06 	vldr	s15, [r4, #24]
 8024ac2:	eddf 6a3d 	vldr	s13, [pc, #244]	@ 8024bb8 <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x380>
 8024ac6:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8024aca:	eeb0 1a42 	vmov.f32	s2, s4
 8024ace:	eef0 1a62 	vmov.f32	s3, s5
 8024ad2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8024ad6:	eee7 1aa6 	vfma.f32	s3, s15, s13
 8024ada:	eea7 1a26 	vfma.f32	s2, s14, s13
 8024ade:	edd4 7a09 	vldr	s15, [r4, #36]	@ 0x24
 8024ae2:	d94c      	bls.n	8024b7e <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x346>
 8024ae4:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8024ae8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8024aec:	bf94      	ite	ls
 8024aee:	2102      	movls	r1, #2
 8024af0:	2103      	movhi	r1, #3
 8024af2:	edd4 7a0a 	vldr	s15, [r4, #40]	@ 0x28
 8024af6:	ed94 6a0d 	vldr	s12, [r4, #52]	@ 0x34
 8024afa:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8024afe:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
 8024b02:	edd4 7a0b 	vldr	s15, [r4, #44]	@ 0x2c
 8024b06:	eddf 6a2c 	vldr	s13, [pc, #176]	@ 8024bb8 <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x380>
 8024b0a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8024b0e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8024b12:	eee7 2aa6 	vfma.f32	s5, s15, s13
 8024b16:	eea7 2a26 	vfma.f32	s4, s14, s13
 8024b1a:	edd4 7a0e 	vldr	s15, [r4, #56]	@ 0x38
 8024b1e:	d926      	bls.n	8024b6e <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x336>
 8024b20:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8024b24:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8024b28:	bf94      	ite	ls
 8024b2a:	2202      	movls	r2, #2
 8024b2c:	2203      	movhi	r2, #3
 8024b2e:	e775      	b.n	8024a1c <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1e4>
 8024b30:	e9cd 6a11 	strd	r6, sl, [sp, #68]	@ 0x44
 8024b34:	f8cd 8040 	str.w	r8, [sp, #64]	@ 0x40
 8024b38:	b005      	add	sp, #20
 8024b3a:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8024b3e:	f7e7 bcef 	b.w	800c520 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>
 8024b42:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8024b46:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8024b4a:	bf94      	ite	ls
 8024b4c:	2200      	movls	r2, #0
 8024b4e:	2203      	movhi	r2, #3
 8024b50:	e764      	b.n	8024a1c <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1e4>
 8024b52:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8024b56:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8024b5a:	bf94      	ite	ls
 8024b5c:	2100      	movls	r1, #0
 8024b5e:	2103      	movhi	r1, #3
 8024b60:	e73d      	b.n	80249de <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1a6>
 8024b62:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8024b66:	bf94      	ite	ls
 8024b68:	2000      	movls	r0, #0
 8024b6a:	2003      	movhi	r0, #3
 8024b6c:	e714      	b.n	8024998 <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x160>
 8024b6e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8024b72:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8024b76:	bf94      	ite	ls
 8024b78:	2201      	movls	r2, #1
 8024b7a:	2200      	movhi	r2, #0
 8024b7c:	e74e      	b.n	8024a1c <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1e4>
 8024b7e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8024b82:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8024b86:	bf94      	ite	ls
 8024b88:	2101      	movls	r1, #1
 8024b8a:	2100      	movhi	r1, #0
 8024b8c:	e7b1      	b.n	8024af2 <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x2ba>
 8024b8e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8024b92:	bf94      	ite	ls
 8024b94:	2001      	movls	r0, #1
 8024b96:	2000      	movhi	r0, #0
 8024b98:	e789      	b.n	8024aae <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x276>
 8024b9a:	4b0a      	ldr	r3, [pc, #40]	@ (8024bc4 <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x38c>)
 8024b9c:	4a0a      	ldr	r2, [pc, #40]	@ (8024bc8 <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x390>)
 8024b9e:	217c      	movs	r1, #124	@ 0x7c
 8024ba0:	480a      	ldr	r0, [pc, #40]	@ (8024bcc <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x394>)
 8024ba2:	f00d fde9 	bl	8032778 <__assert_func>
 8024ba6:	4b0a      	ldr	r3, [pc, #40]	@ (8024bd0 <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x398>)
 8024ba8:	4a0a      	ldr	r2, [pc, #40]	@ (8024bd4 <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x39c>)
 8024baa:	f240 21e2 	movw	r1, #738	@ 0x2e2
 8024bae:	480a      	ldr	r0, [pc, #40]	@ (8024bd8 <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3a0>)
 8024bb0:	f00d fde2 	bl	8032778 <__assert_func>
 8024bb4:	08000504 	.word	0x08000504
 8024bb8:	3d800000 	.word	0x3d800000
 8024bbc:	2008309c 	.word	0x2008309c
 8024bc0:	200830ac 	.word	0x200830ac
 8024bc4:	080364bc 	.word	0x080364bc
 8024bc8:	08036d28 	.word	0x08036d28
 8024bcc:	080364e4 	.word	0x080364e4
 8024bd0:	080363b4 	.word	0x080363b4
 8024bd4:	080370cc 	.word	0x080370cc
 8024bd8:	08036560 	.word	0x08036560
 8024bdc:	20083544 	.word	0x20083544

08024be0 <_ZN8touchgfx8LCDGPU2D29copyAreaFromTFTToClientBufferERKNS_4RectE>:
 8024be0:	e92d 42f0 	stmdb	sp!, {r4, r5, r6, r7, r9, lr}
 8024be4:	2700      	movs	r7, #0
 8024be6:	4a2b      	ldr	r2, [pc, #172]	@ (8024c94 <_ZN8touchgfx8LCDGPU2D29copyAreaFromTFTToClientBufferERKNS_4RectE+0xb4>)
 8024be8:	4b2b      	ldr	r3, [pc, #172]	@ (8024c98 <_ZN8touchgfx8LCDGPU2D29copyAreaFromTFTToClientBufferERKNS_4RectE+0xb8>)
 8024bea:	4d2c      	ldr	r5, [pc, #176]	@ (8024c9c <_ZN8touchgfx8LCDGPU2D29copyAreaFromTFTToClientBufferERKNS_4RectE+0xbc>)
 8024bec:	8812      	ldrh	r2, [r2, #0]
 8024bee:	881b      	ldrh	r3, [r3, #0]
 8024bf0:	b088      	sub	sp, #32
 8024bf2:	4604      	mov	r4, r0
 8024bf4:	6828      	ldr	r0, [r5, #0]
 8024bf6:	f8ad 201c 	strh.w	r2, [sp, #28]
 8024bfa:	f8ad 301e 	strh.w	r3, [sp, #30]
 8024bfe:	9706      	str	r7, [sp, #24]
 8024c00:	6803      	ldr	r3, [r0, #0]
 8024c02:	4689      	mov	r9, r1
 8024c04:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8024c06:	4798      	blx	r3
 8024c08:	6823      	ldr	r3, [r4, #0]
 8024c0a:	4a25      	ldr	r2, [pc, #148]	@ (8024ca0 <_ZN8touchgfx8LCDGPU2D29copyAreaFromTFTToClientBufferERKNS_4RectE+0xc0>)
 8024c0c:	68de      	ldr	r6, [r3, #12]
 8024c0e:	4601      	mov	r1, r0
 8024c10:	4296      	cmp	r6, r2
 8024c12:	d134      	bne.n	8024c7e <_ZN8touchgfx8LCDGPU2D29copyAreaFromTFTToClientBufferERKNS_4RectE+0x9e>
 8024c14:	682a      	ldr	r2, [r5, #0]
 8024c16:	691d      	ldr	r5, [r3, #16]
 8024c18:	f892 3058 	ldrb.w	r3, [r2, #88]	@ 0x58
 8024c1c:	b9a3      	cbnz	r3, 8024c48 <_ZN8touchgfx8LCDGPU2D29copyAreaFromTFTToClientBufferERKNS_4RectE+0x68>
 8024c1e:	6890      	ldr	r0, [r2, #8]
 8024c20:	4a20      	ldr	r2, [pc, #128]	@ (8024ca4 <_ZN8touchgfx8LCDGPU2D29copyAreaFromTFTToClientBufferERKNS_4RectE+0xc4>)
 8024c22:	6803      	ldr	r3, [r0, #0]
 8024c24:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8024c26:	4293      	cmp	r3, r2
 8024c28:	d116      	bne.n	8024c58 <_ZN8touchgfx8LCDGPU2D29copyAreaFromTFTToClientBufferERKNS_4RectE+0x78>
 8024c2a:	4b1f      	ldr	r3, [pc, #124]	@ (8024ca8 <_ZN8touchgfx8LCDGPU2D29copyAreaFromTFTToClientBufferERKNS_4RectE+0xc8>)
 8024c2c:	7b02      	ldrb	r2, [r0, #12]
 8024c2e:	429d      	cmp	r5, r3
 8024c30:	d119      	bne.n	8024c66 <_ZN8touchgfx8LCDGPU2D29copyAreaFromTFTToClientBufferERKNS_4RectE+0x86>
 8024c32:	23ff      	movs	r3, #255	@ 0xff
 8024c34:	f8cd 9000 	str.w	r9, [sp]
 8024c38:	9301      	str	r3, [sp, #4]
 8024c3a:	4620      	mov	r0, r4
 8024c3c:	ab06      	add	r3, sp, #24
 8024c3e:	f7ff fa29 	bl	8024094 <_ZN8touchgfx8LCDGPU2D8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb.part.6>
 8024c42:	b008      	add	sp, #32
 8024c44:	e8bd 82f0 	ldmia.w	sp!, {r4, r5, r6, r7, r9, pc}
 8024c48:	6cd0      	ldr	r0, [r2, #76]	@ 0x4c
 8024c4a:	2800      	cmp	r0, #0
 8024c4c:	d0e7      	beq.n	8024c1e <_ZN8touchgfx8LCDGPU2D29copyAreaFromTFTToClientBufferERKNS_4RectE+0x3e>
 8024c4e:	6803      	ldr	r3, [r0, #0]
 8024c50:	4a14      	ldr	r2, [pc, #80]	@ (8024ca4 <_ZN8touchgfx8LCDGPU2D29copyAreaFromTFTToClientBufferERKNS_4RectE+0xc4>)
 8024c52:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8024c54:	4293      	cmp	r3, r2
 8024c56:	d0e8      	beq.n	8024c2a <_ZN8touchgfx8LCDGPU2D29copyAreaFromTFTToClientBufferERKNS_4RectE+0x4a>
 8024c58:	9105      	str	r1, [sp, #20]
 8024c5a:	4798      	blx	r3
 8024c5c:	4b12      	ldr	r3, [pc, #72]	@ (8024ca8 <_ZN8touchgfx8LCDGPU2D29copyAreaFromTFTToClientBufferERKNS_4RectE+0xc8>)
 8024c5e:	4602      	mov	r2, r0
 8024c60:	429d      	cmp	r5, r3
 8024c62:	9905      	ldr	r1, [sp, #20]
 8024c64:	d0e5      	beq.n	8024c32 <_ZN8touchgfx8LCDGPU2D29copyAreaFromTFTToClientBufferERKNS_4RectE+0x52>
 8024c66:	2600      	movs	r6, #0
 8024c68:	23ff      	movs	r3, #255	@ 0xff
 8024c6a:	f8cd 9000 	str.w	r9, [sp]
 8024c6e:	e9cd 3601 	strd	r3, r6, [sp, #4]
 8024c72:	4620      	mov	r0, r4
 8024c74:	ab06      	add	r3, sp, #24
 8024c76:	47a8      	blx	r5
 8024c78:	b008      	add	sp, #32
 8024c7a:	e8bd 82f0 	ldmia.w	sp!, {r4, r5, r6, r7, r9, pc}
 8024c7e:	22ff      	movs	r2, #255	@ 0xff
 8024c80:	9701      	str	r7, [sp, #4]
 8024c82:	9200      	str	r2, [sp, #0]
 8024c84:	464b      	mov	r3, r9
 8024c86:	4620      	mov	r0, r4
 8024c88:	aa06      	add	r2, sp, #24
 8024c8a:	47b0      	blx	r6
 8024c8c:	b008      	add	sp, #32
 8024c8e:	e8bd 82f0 	ldmia.w	sp!, {r4, r5, r6, r7, r9, pc}
 8024c92:	bf00      	nop
 8024c94:	2008309e 	.word	0x2008309e
 8024c98:	200830a0 	.word	0x200830a0
 8024c9c:	200830a4 	.word	0x200830a4
 8024ca0:	08024245 	.word	0x08024245
 8024ca4:	08020f3d 	.word	0x08020f3d
 8024ca8:	080242d1 	.word	0x080242d1

08024cac <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t>:
 8024cac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8024cb0:	4604      	mov	r4, r0
 8024cb2:	4865      	ldr	r0, [pc, #404]	@ (8024e48 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x19c>)
 8024cb4:	460f      	mov	r7, r1
 8024cb6:	6800      	ldr	r0, [r0, #0]
 8024cb8:	b093      	sub	sp, #76	@ 0x4c
 8024cba:	f890 1048 	ldrb.w	r1, [r0, #72]	@ 0x48
 8024cbe:	2902      	cmp	r1, #2
 8024cc0:	f000 81f2 	beq.w	80250a8 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x3fc>
 8024cc4:	f10d 0948 	add.w	r9, sp, #72	@ 0x48
 8024cc8:	f829 3d1c 	strh.w	r3, [r9, #-28]!
 8024ccc:	4648      	mov	r0, r9
 8024cce:	4615      	mov	r5, r2
 8024cd0:	f7eb fbee 	bl	80104b0 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8024cd4:	6823      	ldr	r3, [r4, #0]
 8024cd6:	4a5d      	ldr	r2, [pc, #372]	@ (8024e4c <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x1a0>)
 8024cd8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8024cda:	4680      	mov	r8, r0
 8024cdc:	4293      	cmp	r3, r2
 8024cde:	f040 81b5 	bne.w	802504c <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x3a0>
 8024ce2:	7b20      	ldrb	r0, [r4, #12]
 8024ce4:	4580      	cmp	r8, r0
 8024ce6:	f040 81d9 	bne.w	802509c <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x3f0>
 8024cea:	4648      	mov	r0, r9
 8024cec:	f7eb fb5c 	bl	80103a8 <_ZNK8touchgfx6Bitmap7getDataEv>
 8024cf0:	4683      	mov	fp, r0
 8024cf2:	2800      	cmp	r0, #0
 8024cf4:	f000 81cc 	beq.w	8025090 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x3e4>
 8024cf8:	6823      	ldr	r3, [r4, #0]
 8024cfa:	4648      	mov	r0, r9
 8024cfc:	f8d3 8018 	ldr.w	r8, [r3, #24]
 8024d00:	f7eb fa98 	bl	8010234 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8024d04:	9005      	str	r0, [sp, #20]
 8024d06:	4648      	mov	r0, r9
 8024d08:	f7eb fac8 	bl	801029c <_ZNK8touchgfx6Bitmap9getHeightEv>
 8024d0c:	4b50      	ldr	r3, [pc, #320]	@ (8024e50 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x1a4>)
 8024d0e:	9006      	str	r0, [sp, #24]
 8024d10:	4598      	cmp	r8, r3
 8024d12:	f040 818e 	bne.w	8025032 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x386>
 8024d16:	4b4c      	ldr	r3, [pc, #304]	@ (8024e48 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x19c>)
 8024d18:	681b      	ldr	r3, [r3, #0]
 8024d1a:	f893 3048 	ldrb.w	r3, [r3, #72]	@ 0x48
 8024d1e:	2b02      	cmp	r3, #2
 8024d20:	f000 81c8 	beq.w	80250b4 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x408>
 8024d24:	f9b5 8000 	ldrsh.w	r8, [r5]
 8024d28:	88ab      	ldrh	r3, [r5, #4]
 8024d2a:	fa1f fe88 	uxth.w	lr, r8
 8024d2e:	4473      	add	r3, lr
 8024d30:	b29b      	uxth	r3, r3
 8024d32:	b218      	sxth	r0, r3
 8024d34:	4580      	cmp	r8, r0
 8024d36:	f9b5 a002 	ldrsh.w	sl, [r5, #2]
 8024d3a:	da2a      	bge.n	8024d92 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0xe6>
 8024d3c:	9a05      	ldr	r2, [sp, #20]
 8024d3e:	eb0e 0102 	add.w	r1, lr, r2
 8024d42:	b28a      	uxth	r2, r1
 8024d44:	9207      	str	r2, [sp, #28]
 8024d46:	f9bd c01c 	ldrsh.w	ip, [sp, #28]
 8024d4a:	45e0      	cmp	r8, ip
 8024d4c:	da21      	bge.n	8024d92 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0xe6>
 8024d4e:	88ea      	ldrh	r2, [r5, #6]
 8024d50:	fa1f f68a 	uxth.w	r6, sl
 8024d54:	4432      	add	r2, r6
 8024d56:	b292      	uxth	r2, r2
 8024d58:	b211      	sxth	r1, r2
 8024d5a:	458a      	cmp	sl, r1
 8024d5c:	9108      	str	r1, [sp, #32]
 8024d5e:	da18      	bge.n	8024d92 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0xe6>
 8024d60:	9906      	ldr	r1, [sp, #24]
 8024d62:	eb06 0901 	add.w	r9, r6, r1
 8024d66:	fa1f f989 	uxth.w	r9, r9
 8024d6a:	fa0f f189 	sxth.w	r1, r9
 8024d6e:	458a      	cmp	sl, r1
 8024d70:	9109      	str	r1, [sp, #36]	@ 0x24
 8024d72:	da0e      	bge.n	8024d92 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0xe6>
 8024d74:	9907      	ldr	r1, [sp, #28]
 8024d76:	4560      	cmp	r0, ip
 8024d78:	bfc8      	it	gt
 8024d7a:	460b      	movgt	r3, r1
 8024d7c:	e9dd 1008 	ldrd	r1, r0, [sp, #32]
 8024d80:	4281      	cmp	r1, r0
 8024d82:	bfc8      	it	gt
 8024d84:	464a      	movgt	r2, r9
 8024d86:	eba3 030e 	sub.w	r3, r3, lr
 8024d8a:	1b92      	subs	r2, r2, r6
 8024d8c:	b21b      	sxth	r3, r3
 8024d8e:	b212      	sxth	r2, r2
 8024d90:	e005      	b.n	8024d9e <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0xf2>
 8024d92:	2200      	movs	r2, #0
 8024d94:	4616      	mov	r6, r2
 8024d96:	4692      	mov	sl, r2
 8024d98:	4613      	mov	r3, r2
 8024d9a:	4696      	mov	lr, r2
 8024d9c:	4690      	mov	r8, r2
 8024d9e:	f9b7 0000 	ldrsh.w	r0, [r7]
 8024da2:	88b9      	ldrh	r1, [r7, #4]
 8024da4:	4401      	add	r1, r0
 8024da6:	b289      	uxth	r1, r1
 8024da8:	fa0f f981 	sxth.w	r9, r1
 8024dac:	45c8      	cmp	r8, r9
 8024dae:	da55      	bge.n	8024e5c <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x1b0>
 8024db0:	449e      	add	lr, r3
 8024db2:	fa1f fe8e 	uxth.w	lr, lr
 8024db6:	fa0f f38e 	sxth.w	r3, lr
 8024dba:	4298      	cmp	r0, r3
 8024dbc:	9307      	str	r3, [sp, #28]
 8024dbe:	da4d      	bge.n	8024e5c <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x1b0>
 8024dc0:	f9b7 c002 	ldrsh.w	ip, [r7, #2]
 8024dc4:	88fb      	ldrh	r3, [r7, #6]
 8024dc6:	4463      	add	r3, ip
 8024dc8:	b29b      	uxth	r3, r3
 8024dca:	b21f      	sxth	r7, r3
 8024dcc:	45ba      	cmp	sl, r7
 8024dce:	da45      	bge.n	8024e5c <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x1b0>
 8024dd0:	4416      	add	r6, r2
 8024dd2:	b2b2      	uxth	r2, r6
 8024dd4:	b216      	sxth	r6, r2
 8024dd6:	45b4      	cmp	ip, r6
 8024dd8:	9608      	str	r6, [sp, #32]
 8024dda:	da3f      	bge.n	8024e5c <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x1b0>
 8024ddc:	4540      	cmp	r0, r8
 8024dde:	9e07      	ldr	r6, [sp, #28]
 8024de0:	bfb8      	it	lt
 8024de2:	4640      	movlt	r0, r8
 8024de4:	45d4      	cmp	ip, sl
 8024de6:	bfb8      	it	lt
 8024de8:	46d4      	movlt	ip, sl
 8024dea:	45b1      	cmp	r9, r6
 8024dec:	bfc8      	it	gt
 8024dee:	4671      	movgt	r1, lr
 8024df0:	9e08      	ldr	r6, [sp, #32]
 8024df2:	f8df 8060 	ldr.w	r8, [pc, #96]	@ 8024e54 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x1a8>
 8024df6:	42b7      	cmp	r7, r6
 8024df8:	bfc8      	it	gt
 8024dfa:	4613      	movgt	r3, r2
 8024dfc:	f8df e058 	ldr.w	lr, [pc, #88]	@ 8024e58 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x1ac>
 8024e00:	b282      	uxth	r2, r0
 8024e02:	eba3 030c 	sub.w	r3, r3, ip
 8024e06:	1a8f      	subs	r7, r1, r2
 8024e08:	f8b8 a000 	ldrh.w	sl, [r8]
 8024e0c:	f8be 9000 	ldrh.w	r9, [lr]
 8024e10:	b21b      	sxth	r3, r3
 8024e12:	b23f      	sxth	r7, r7
 8024e14:	2800      	cmp	r0, #0
 8024e16:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 8024e1a:	f8ad 0030 	strh.w	r0, [sp, #48]	@ 0x30
 8024e1e:	f8ad c032 	strh.w	ip, [sp, #50]	@ 0x32
 8024e22:	f8ad 7034 	strh.w	r7, [sp, #52]	@ 0x34
 8024e26:	fa0f f88a 	sxth.w	r8, sl
 8024e2a:	fa0f fe89 	sxth.w	lr, r9
 8024e2e:	f280 8115 	bge.w	802505c <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x3b0>
 8024e32:	2200      	movs	r2, #0
 8024e34:	f04f 0600 	mov.w	r6, #0
 8024e38:	b20f      	sxth	r7, r1
 8024e3a:	4610      	mov	r0, r2
 8024e3c:	4639      	mov	r1, r7
 8024e3e:	f8ad 7034 	strh.w	r7, [sp, #52]	@ 0x34
 8024e42:	f8ad 6030 	strh.w	r6, [sp, #48]	@ 0x30
 8024e46:	e01b      	b.n	8024e80 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x1d4>
 8024e48:	200830a4 	.word	0x200830a4
 8024e4c:	08020f3d 	.word	0x08020f3d
 8024e50:	08024409 	.word	0x08024409
 8024e54:	20083098 	.word	0x20083098
 8024e58:	2008309a 	.word	0x2008309a
 8024e5c:	2300      	movs	r3, #0
 8024e5e:	489f      	ldr	r0, [pc, #636]	@ (80250dc <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x430>)
 8024e60:	499f      	ldr	r1, [pc, #636]	@ (80250e0 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x434>)
 8024e62:	f8b0 a000 	ldrh.w	sl, [r0]
 8024e66:	f8b1 9000 	ldrh.w	r9, [r1]
 8024e6a:	461a      	mov	r2, r3
 8024e6c:	469c      	mov	ip, r3
 8024e6e:	4618      	mov	r0, r3
 8024e70:	4619      	mov	r1, r3
 8024e72:	461f      	mov	r7, r3
 8024e74:	e9cd 330c 	strd	r3, r3, [sp, #48]	@ 0x30
 8024e78:	fa0f f88a 	sxth.w	r8, sl
 8024e7c:	fa0f fe89 	sxth.w	lr, r9
 8024e80:	eba8 0000 	sub.w	r0, r8, r0
 8024e84:	4288      	cmp	r0, r1
 8024e86:	da04      	bge.n	8024e92 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x1e6>
 8024e88:	ebaa 0702 	sub.w	r7, sl, r2
 8024e8c:	b23f      	sxth	r7, r7
 8024e8e:	f8ad 7034 	strh.w	r7, [sp, #52]	@ 0x34
 8024e92:	f1bc 0f00 	cmp.w	ip, #0
 8024e96:	f2c0 80c2 	blt.w	802501e <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x372>
 8024e9a:	4661      	mov	r1, ip
 8024e9c:	ebae 0e01 	sub.w	lr, lr, r1
 8024ea0:	4573      	cmp	r3, lr
 8024ea2:	dd04      	ble.n	8024eae <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x202>
 8024ea4:	eba9 030c 	sub.w	r3, r9, ip
 8024ea8:	b21b      	sxth	r3, r3
 8024eaa:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 8024eae:	2f00      	cmp	r7, #0
 8024eb0:	f340 80b1 	ble.w	8025016 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x36a>
 8024eb4:	2b00      	cmp	r3, #0
 8024eb6:	f340 80ae 	ble.w	8025016 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x36a>
 8024eba:	f04f 0e00 	mov.w	lr, #0
 8024ebe:	f8ad 303e 	strh.w	r3, [sp, #62]	@ 0x3e
 8024ec2:	9b05      	ldr	r3, [sp, #20]
 8024ec4:	8868      	ldrh	r0, [r5, #2]
 8024ec6:	8829      	ldrh	r1, [r5, #0]
 8024ec8:	f8ad 3044 	strh.w	r3, [sp, #68]	@ 0x44
 8024ecc:	9b06      	ldr	r3, [sp, #24]
 8024ece:	1a52      	subs	r2, r2, r1
 8024ed0:	ebac 0c00 	sub.w	ip, ip, r0
 8024ed4:	a910      	add	r1, sp, #64	@ 0x40
 8024ed6:	a80e      	add	r0, sp, #56	@ 0x38
 8024ed8:	f8ad 3046 	strh.w	r3, [sp, #70]	@ 0x46
 8024edc:	f8ad 2038 	strh.w	r2, [sp, #56]	@ 0x38
 8024ee0:	f8ad c03a 	strh.w	ip, [sp, #58]	@ 0x3a
 8024ee4:	f8cd e040 	str.w	lr, [sp, #64]	@ 0x40
 8024ee8:	f8ad 703c 	strh.w	r7, [sp, #60]	@ 0x3c
 8024eec:	f7e8 f890 	bl	800d010 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8024ef0:	a80c      	add	r0, sp, #48	@ 0x30
 8024ef2:	f7e8 f865 	bl	800cfc0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8024ef6:	a810      	add	r0, sp, #64	@ 0x40
 8024ef8:	f7e8 f862 	bl	800cfc0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8024efc:	4b79      	ldr	r3, [pc, #484]	@ (80250e4 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x438>)
 8024efe:	681b      	ldr	r3, [r3, #0]
 8024f00:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
 8024f04:	2a00      	cmp	r2, #0
 8024f06:	f040 80a4 	bne.w	8025052 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x3a6>
 8024f0a:	6898      	ldr	r0, [r3, #8]
 8024f0c:	6803      	ldr	r3, [r0, #0]
 8024f0e:	4a76      	ldr	r2, [pc, #472]	@ (80250e8 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x43c>)
 8024f10:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8024f12:	4293      	cmp	r3, r2
 8024f14:	f040 80b0 	bne.w	8025078 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x3cc>
 8024f18:	7b00      	ldrb	r0, [r0, #12]
 8024f1a:	2801      	cmp	r0, #1
 8024f1c:	f000 80a5 	beq.w	802506a <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x3be>
 8024f20:	f0c0 809e 	bcc.w	8025060 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x3b4>
 8024f24:	2802      	cmp	r0, #2
 8024f26:	f040 80d2 	bne.w	80250ce <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x422>
 8024f2a:	f04f 0810 	mov.w	r8, #16
 8024f2e:	f04f 0a04 	mov.w	sl, #4
 8024f32:	6823      	ldr	r3, [r4, #0]
 8024f34:	4a6d      	ldr	r2, [pc, #436]	@ (80250ec <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x440>)
 8024f36:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8024f38:	f9bd 7044 	ldrsh.w	r7, [sp, #68]	@ 0x44
 8024f3c:	4293      	cmp	r3, r2
 8024f3e:	fb0a f707 	mul.w	r7, sl, r7
 8024f42:	f040 809b 	bne.w	802507c <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x3d0>
 8024f46:	4b6a      	ldr	r3, [pc, #424]	@ (80250f0 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x444>)
 8024f48:	881b      	ldrh	r3, [r3, #0]
 8024f4a:	2b00      	cmp	r3, #0
 8024f4c:	f000 80b8 	beq.w	80250c0 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x414>
 8024f50:	7b22      	ldrb	r2, [r4, #12]
 8024f52:	2a02      	cmp	r2, #2
 8024f54:	f000 808e 	beq.w	8025074 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x3c8>
 8024f58:	2a01      	cmp	r2, #1
 8024f5a:	bf14      	ite	ne
 8024f5c:	2402      	movne	r4, #2
 8024f5e:	2403      	moveq	r4, #3
 8024f60:	fb13 f404 	smulbb	r4, r3, r4
 8024f64:	b2a4      	uxth	r4, r4
 8024f66:	4a5f      	ldr	r2, [pc, #380]	@ (80250e4 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x438>)
 8024f68:	f9bd 3038 	ldrsh.w	r3, [sp, #56]	@ 0x38
 8024f6c:	f9bd 903a 	ldrsh.w	r9, [sp, #58]	@ 0x3a
 8024f70:	6810      	ldr	r0, [r2, #0]
 8024f72:	fb07 3909 	mla	r9, r7, r9, r3
 8024f76:	6803      	ldr	r3, [r0, #0]
 8024f78:	4e5e      	ldr	r6, [pc, #376]	@ (80250f4 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x448>)
 8024f7a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8024f7c:	4798      	blx	r3
 8024f7e:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 8024f82:	f9bd 5030 	ldrsh.w	r5, [sp, #48]	@ 0x30
 8024f86:	fb04 f303 	mul.w	r3, r4, r3
 8024f8a:	fb0a 3505 	mla	r5, sl, r5, r3
 8024f8e:	4405      	add	r5, r0
 8024f90:	6830      	ldr	r0, [r6, #0]
 8024f92:	44d9      	add	r9, fp
 8024f94:	2800      	cmp	r0, #0
 8024f96:	d075      	beq.n	8025084 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x3d8>
 8024f98:	f7fb ff5e 	bl	8020e58 <_ZN8touchgfx8HALGPU2D14bindExecBufferEv>
 8024f9c:	9700      	str	r7, [sp, #0]
 8024f9e:	2700      	movs	r7, #0
 8024fa0:	f9bd 203e 	ldrsh.w	r2, [sp, #62]	@ 0x3e
 8024fa4:	f9bd 103c 	ldrsh.w	r1, [sp, #60]	@ 0x3c
 8024fa8:	4648      	mov	r0, r9
 8024faa:	4643      	mov	r3, r8
 8024fac:	f7ec f946 	bl	801123c <nema_bind_dst_tex>
 8024fb0:	f9bd 303e 	ldrsh.w	r3, [sp, #62]	@ 0x3e
 8024fb4:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	@ 0x3c
 8024fb8:	f9bd 103a 	ldrsh.w	r1, [sp, #58]	@ 0x3a
 8024fbc:	f9bd 0038 	ldrsh.w	r0, [sp, #56]	@ 0x38
 8024fc0:	f7eb ffd2 	bl	8010f68 <nema_set_clip>
 8024fc4:	f04f 33ff 	mov.w	r3, #4294967295
 8024fc8:	2201      	movs	r2, #1
 8024fca:	2100      	movs	r1, #0
 8024fcc:	f240 5004 	movw	r0, #1284	@ 0x504
 8024fd0:	f7f9 f966 	bl	801e2a0 <nema_set_blend>
 8024fd4:	f9bd 2036 	ldrsh.w	r2, [sp, #54]	@ 0x36
 8024fd8:	f9bd 1034 	ldrsh.w	r1, [sp, #52]	@ 0x34
 8024fdc:	4643      	mov	r3, r8
 8024fde:	4628      	mov	r0, r5
 8024fe0:	9400      	str	r4, [sp, #0]
 8024fe2:	9701      	str	r7, [sp, #4]
 8024fe4:	f7ec f8a6 	bl	8011134 <nema_bind_src_tex>
 8024fe8:	f9bd 0038 	ldrsh.w	r0, [sp, #56]	@ 0x38
 8024fec:	f9bd 103a 	ldrsh.w	r1, [sp, #58]	@ 0x3a
 8024ff0:	f7ec fafa 	bl	80115e8 <nema_blit>
 8024ff4:	6830      	ldr	r0, [r6, #0]
 8024ff6:	2800      	cmp	r0, #0
 8024ff8:	d044      	beq.n	8025084 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x3d8>
 8024ffa:	f7fb ff4d 	bl	8020e98 <_ZN8touchgfx8HALGPU2D16submitExecBufferEv>
 8024ffe:	6830      	ldr	r0, [r6, #0]
 8025000:	2800      	cmp	r0, #0
 8025002:	d03f      	beq.n	8025084 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x3d8>
 8025004:	6803      	ldr	r3, [r0, #0]
 8025006:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8025008:	4798      	blx	r3
 802500a:	6830      	ldr	r0, [r6, #0]
 802500c:	2800      	cmp	r0, #0
 802500e:	d039      	beq.n	8025084 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x3d8>
 8025010:	6803      	ldr	r3, [r0, #0]
 8025012:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8025014:	4798      	blx	r3
 8025016:	4658      	mov	r0, fp
 8025018:	b013      	add	sp, #76	@ 0x4c
 802501a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802501e:	2000      	movs	r0, #0
 8025020:	4463      	add	r3, ip
 8025022:	b21b      	sxth	r3, r3
 8025024:	4684      	mov	ip, r0
 8025026:	4601      	mov	r1, r0
 8025028:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 802502c:	f8ad 0032 	strh.w	r0, [sp, #50]	@ 0x32
 8025030:	e734      	b.n	8024e9c <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x1f0>
 8025032:	9b05      	ldr	r3, [sp, #20]
 8025034:	9002      	str	r0, [sp, #8]
 8025036:	e9cd b300 	strd	fp, r3, [sp]
 802503a:	a810      	add	r0, sp, #64	@ 0x40
 802503c:	462b      	mov	r3, r5
 802503e:	463a      	mov	r2, r7
 8025040:	4621      	mov	r1, r4
 8025042:	47c0      	blx	r8
 8025044:	4658      	mov	r0, fp
 8025046:	b013      	add	sp, #76	@ 0x4c
 8025048:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802504c:	4620      	mov	r0, r4
 802504e:	4798      	blx	r3
 8025050:	e648      	b.n	8024ce4 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x38>
 8025052:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
 8025054:	2800      	cmp	r0, #0
 8025056:	f47f af59 	bne.w	8024f0c <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x260>
 802505a:	e756      	b.n	8024f0a <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x25e>
 802505c:	4639      	mov	r1, r7
 802505e:	e70f      	b.n	8024e80 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x1d4>
 8025060:	f04f 0804 	mov.w	r8, #4
 8025064:	f04f 0a02 	mov.w	sl, #2
 8025068:	e763      	b.n	8024f32 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x286>
 802506a:	f04f 0839 	mov.w	r8, #57	@ 0x39
 802506e:	f04f 0a03 	mov.w	sl, #3
 8025072:	e75e      	b.n	8024f32 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x286>
 8025074:	2404      	movs	r4, #4
 8025076:	e773      	b.n	8024f60 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x2b4>
 8025078:	4798      	blx	r3
 802507a:	e74e      	b.n	8024f1a <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x26e>
 802507c:	4620      	mov	r0, r4
 802507e:	4798      	blx	r3
 8025080:	4604      	mov	r4, r0
 8025082:	e770      	b.n	8024f66 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x2ba>
 8025084:	4b1c      	ldr	r3, [pc, #112]	@ (80250f8 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x44c>)
 8025086:	4a1d      	ldr	r2, [pc, #116]	@ (80250fc <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x450>)
 8025088:	217c      	movs	r1, #124	@ 0x7c
 802508a:	481d      	ldr	r0, [pc, #116]	@ (8025100 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x454>)
 802508c:	f00d fb74 	bl	8032778 <__assert_func>
 8025090:	4b1c      	ldr	r3, [pc, #112]	@ (8025104 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x458>)
 8025092:	4a1d      	ldr	r2, [pc, #116]	@ (8025108 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x45c>)
 8025094:	21f1      	movs	r1, #241	@ 0xf1
 8025096:	481d      	ldr	r0, [pc, #116]	@ (802510c <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x460>)
 8025098:	f00d fb6e 	bl	8032778 <__assert_func>
 802509c:	4b1c      	ldr	r3, [pc, #112]	@ (8025110 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x464>)
 802509e:	4a1a      	ldr	r2, [pc, #104]	@ (8025108 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x45c>)
 80250a0:	21ef      	movs	r1, #239	@ 0xef
 80250a2:	481a      	ldr	r0, [pc, #104]	@ (802510c <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x460>)
 80250a4:	f00d fb68 	bl	8032778 <__assert_func>
 80250a8:	4b1a      	ldr	r3, [pc, #104]	@ (8025114 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x468>)
 80250aa:	4a17      	ldr	r2, [pc, #92]	@ (8025108 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x45c>)
 80250ac:	21ed      	movs	r1, #237	@ 0xed
 80250ae:	4817      	ldr	r0, [pc, #92]	@ (802510c <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x460>)
 80250b0:	f00d fb62 	bl	8032778 <__assert_func>
 80250b4:	4b17      	ldr	r3, [pc, #92]	@ (8025114 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x468>)
 80250b6:	4a18      	ldr	r2, [pc, #96]	@ (8025118 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x46c>)
 80250b8:	21f8      	movs	r1, #248	@ 0xf8
 80250ba:	4814      	ldr	r0, [pc, #80]	@ (802510c <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x460>)
 80250bc:	f00d fb5c 	bl	8032778 <__assert_func>
 80250c0:	4b16      	ldr	r3, [pc, #88]	@ (802511c <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x470>)
 80250c2:	4a17      	ldr	r2, [pc, #92]	@ (8025120 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x474>)
 80250c4:	f240 110f 	movw	r1, #271	@ 0x10f
 80250c8:	4816      	ldr	r0, [pc, #88]	@ (8025124 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x478>)
 80250ca:	f00d fb55 	bl	8032778 <__assert_func>
 80250ce:	4b16      	ldr	r3, [pc, #88]	@ (8025128 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x47c>)
 80250d0:	4a11      	ldr	r2, [pc, #68]	@ (8025118 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x46c>)
 80250d2:	f44f 7191 	mov.w	r1, #290	@ 0x122
 80250d6:	480d      	ldr	r0, [pc, #52]	@ (802510c <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x460>)
 80250d8:	f00d fb4e 	bl	8032778 <__assert_func>
 80250dc:	20083098 	.word	0x20083098
 80250e0:	2008309a 	.word	0x2008309a
 80250e4:	200830a4 	.word	0x200830a4
 80250e8:	08020f3d 	.word	0x08020f3d
 80250ec:	08022b1d 	.word	0x08022b1d
 80250f0:	2008309e 	.word	0x2008309e
 80250f4:	20083544 	.word	0x20083544
 80250f8:	080364bc 	.word	0x080364bc
 80250fc:	08036d28 	.word	0x08036d28
 8025100:	080364e4 	.word	0x080364e4
 8025104:	08036914 	.word	0x08036914
 8025108:	08037e94 	.word	0x08037e94
 802510c:	08036560 	.word	0x08036560
 8025110:	080368bc 	.word	0x080368bc
 8025114:	08036764 	.word	0x08036764
 8025118:	08037e00 	.word	0x08037e00
 802511c:	08036a98 	.word	0x08036a98
 8025120:	0803825c 	.word	0x0803825c
 8025124:	08036adc 	.word	0x08036adc
 8025128:	08036868 	.word	0x08036868

0802512c <_ZN8touchgfx8LCDGPU2DC1Ev>:
 802512c:	b410      	push	{r4}
 802512e:	240d      	movs	r4, #13
 8025130:	2200      	movs	r2, #0
 8025132:	4904      	ldr	r1, [pc, #16]	@ (8025144 <_ZN8touchgfx8LCDGPU2DC1Ev+0x18>)
 8025134:	7304      	strb	r4, [r0, #12]
 8025136:	e9c0 1200 	strd	r1, r2, [r0]
 802513a:	6082      	str	r2, [r0, #8]
 802513c:	f85d 4b04 	ldr.w	r4, [sp], #4
 8025140:	4770      	bx	lr
 8025142:	bf00      	nop
 8025144:	08036cd0 	.word	0x08036cd0

08025148 <_ZN8touchgfx8LCDGPU2D20setFrameBufferFormatENS_6Bitmap12BitmapFormatE>:
 8025148:	2902      	cmp	r1, #2
 802514a:	d906      	bls.n	802515a <_ZN8touchgfx8LCDGPU2D20setFrameBufferFormatENS_6Bitmap12BitmapFormatE+0x12>
 802514c:	b508      	push	{r3, lr}
 802514e:	4a04      	ldr	r2, [pc, #16]	@ (8025160 <_ZN8touchgfx8LCDGPU2D20setFrameBufferFormatENS_6Bitmap12BitmapFormatE+0x18>)
 8025150:	4b04      	ldr	r3, [pc, #16]	@ (8025164 <_ZN8touchgfx8LCDGPU2D20setFrameBufferFormatENS_6Bitmap12BitmapFormatE+0x1c>)
 8025152:	212b      	movs	r1, #43	@ 0x2b
 8025154:	4804      	ldr	r0, [pc, #16]	@ (8025168 <_ZN8touchgfx8LCDGPU2D20setFrameBufferFormatENS_6Bitmap12BitmapFormatE+0x20>)
 8025156:	f00d fb0f 	bl	8032778 <__assert_func>
 802515a:	7301      	strb	r1, [r0, #12]
 802515c:	4770      	bx	lr
 802515e:	bf00      	nop
 8025160:	08037040 	.word	0x08037040
 8025164:	080363f4 	.word	0x080363f4
 8025168:	08036560 	.word	0x08036560

0802516c <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h>:
 802516c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8025170:	b093      	sub	sp, #76	@ 0x4c
 8025172:	4691      	mov	r9, r2
 8025174:	468a      	mov	sl, r1
 8025176:	8812      	ldrh	r2, [r2, #0]
 8025178:	f89d 1074 	ldrb.w	r1, [sp, #116]	@ 0x74
 802517c:	461c      	mov	r4, r3
 802517e:	910a      	str	r1, [sp, #40]	@ 0x28
 8025180:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8025182:	2a00      	cmp	r2, #0
 8025184:	f040 8109 	bne.w	802539a <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x22e>
 8025188:	6820      	ldr	r0, [r4, #0]
 802518a:	6861      	ldr	r1, [r4, #4]
 802518c:	aa0e      	add	r2, sp, #56	@ 0x38
 802518e:	c203      	stmia	r2!, {r0, r1}
 8025190:	6818      	ldr	r0, [r3, #0]
 8025192:	6859      	ldr	r1, [r3, #4]
 8025194:	aa10      	add	r2, sp, #64	@ 0x40
 8025196:	c203      	stmia	r2!, {r0, r1}
 8025198:	a80e      	add	r0, sp, #56	@ 0x38
 802519a:	f7e7 ff11 	bl	800cfc0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 802519e:	4621      	mov	r1, r4
 80251a0:	a810      	add	r0, sp, #64	@ 0x40
 80251a2:	f7e7 ff35 	bl	800d010 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80251a6:	f9bd 4040 	ldrsh.w	r4, [sp, #64]	@ 0x40
 80251aa:	f9bd 5042 	ldrsh.w	r5, [sp, #66]	@ 0x42
 80251ae:	f8bd 2038 	ldrh.w	r2, [sp, #56]	@ 0x38
 80251b2:	f8bd 303a 	ldrh.w	r3, [sp, #58]	@ 0x3a
 80251b6:	487c      	ldr	r0, [pc, #496]	@ (80253a8 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x23c>)
 80251b8:	f8bd 103c 	ldrh.w	r1, [sp, #60]	@ 0x3c
 80251bc:	4422      	add	r2, r4
 80251be:	442b      	add	r3, r5
 80251c0:	6800      	ldr	r0, [r0, #0]
 80251c2:	fb11 4105 	smlabb	r1, r1, r5, r4
 80251c6:	f8ad 3042 	strh.w	r3, [sp, #66]	@ 0x42
 80251ca:	f8ad 2040 	strh.w	r2, [sp, #64]	@ 0x40
 80251ce:	6802      	ldr	r2, [r0, #0]
 80251d0:	4d76      	ldr	r5, [pc, #472]	@ (80253ac <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x240>)
 80251d2:	f8d2 30a0 	ldr.w	r3, [r2, #160]	@ 0xa0
 80251d6:	448a      	add	sl, r1
 80251d8:	f9bd 1044 	ldrsh.w	r1, [sp, #68]	@ 0x44
 80251dc:	42ab      	cmp	r3, r5
 80251de:	910b      	str	r1, [sp, #44]	@ 0x2c
 80251e0:	f9bd 4046 	ldrsh.w	r4, [sp, #70]	@ 0x46
 80251e4:	f040 80a6 	bne.w	8025334 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x1c8>
 80251e8:	6841      	ldr	r1, [r0, #4]
 80251ea:	4d71      	ldr	r5, [pc, #452]	@ (80253b0 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x244>)
 80251ec:	680b      	ldr	r3, [r1, #0]
 80251ee:	699b      	ldr	r3, [r3, #24]
 80251f0:	42ab      	cmp	r3, r5
 80251f2:	f040 80c4 	bne.w	802537e <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x212>
 80251f6:	6a93      	ldr	r3, [r2, #40]	@ 0x28
 80251f8:	4798      	blx	r3
 80251fa:	4b6e      	ldr	r3, [pc, #440]	@ (80253b4 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x248>)
 80251fc:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	@ 0x42
 8025200:	881b      	ldrh	r3, [r3, #0]
 8025202:	f9bd 1040 	ldrsh.w	r1, [sp, #64]	@ 0x40
 8025206:	fb03 f404 	mul.w	r4, r3, r4
 802520a:	fb03 1202 	mla	r2, r3, r2, r1
 802520e:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8025212:	eb00 0244 	add.w	r2, r0, r4, lsl #1
 8025216:	4290      	cmp	r0, r2
 8025218:	920c      	str	r2, [sp, #48]	@ 0x30
 802521a:	f080 8083 	bcs.w	8025324 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x1b8>
 802521e:	f04f 0b04 	mov.w	fp, #4
 8025222:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8025224:	0052      	lsls	r2, r2, #1
 8025226:	920d      	str	r2, [sp, #52]	@ 0x34
 8025228:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 802522a:	eb00 0802 	add.w	r8, r0, r2
 802522e:	4580      	cmp	r8, r0
 8025230:	d96d      	bls.n	802530e <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x1a2>
 8025232:	4684      	mov	ip, r0
 8025234:	f10a 3eff 	add.w	lr, sl, #4294967295
 8025238:	e03e      	b.n	80252b8 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x14c>
 802523a:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 802523c:	f3c5 4707 	ubfx	r7, r5, #16, #8
 8025240:	fb02 f303 	mul.w	r3, r2, r3
 8025244:	1c59      	adds	r1, r3, #1
 8025246:	eb01 2323 	add.w	r3, r1, r3, asr #8
 802524a:	121b      	asrs	r3, r3, #8
 802524c:	43da      	mvns	r2, r3
 802524e:	b299      	uxth	r1, r3
 8025250:	b2f6      	uxtb	r6, r6
 8025252:	b2eb      	uxtb	r3, r5
 8025254:	fb17 f701 	smulbb	r7, r7, r1
 8025258:	f8bc 5000 	ldrh.w	r5, [ip]
 802525c:	fb13 f301 	smulbb	r3, r3, r1
 8025260:	fb16 f601 	smulbb	r6, r6, r1
 8025264:	122c      	asrs	r4, r5, #8
 8025266:	10e9      	asrs	r1, r5, #3
 8025268:	00ed      	lsls	r5, r5, #3
 802526a:	b2d2      	uxtb	r2, r2
 802526c:	b2ed      	uxtb	r5, r5
 802526e:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 8025272:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 8025276:	fb04 7402 	mla	r4, r4, r2, r7
 802527a:	fb01 6102 	mla	r1, r1, r2, r6
 802527e:	fb05 3202 	mla	r2, r5, r2, r3
 8025282:	b2a4      	uxth	r4, r4
 8025284:	b292      	uxth	r2, r2
 8025286:	b289      	uxth	r1, r1
 8025288:	1c55      	adds	r5, r2, #1
 802528a:	1c67      	adds	r7, r4, #1
 802528c:	1c4b      	adds	r3, r1, #1
 802528e:	eb05 2512 	add.w	r5, r5, r2, lsr #8
 8025292:	eb07 2414 	add.w	r4, r7, r4, lsr #8
 8025296:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 802529a:	f404 4278 	and.w	r2, r4, #63488	@ 0xf800
 802529e:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 80252a2:	095b      	lsrs	r3, r3, #5
 80252a4:	432a      	orrs	r2, r5
 80252a6:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 80252aa:	431a      	orrs	r2, r3
 80252ac:	f8ac 2000 	strh.w	r2, [ip]
 80252b0:	f10c 0c02 	add.w	ip, ip, #2
 80252b4:	45e0      	cmp	r8, ip
 80252b6:	d91f      	bls.n	80252f8 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x18c>
 80252b8:	f81e 3f01 	ldrb.w	r3, [lr, #1]!
 80252bc:	fb1b b303 	smlabb	r3, fp, r3, fp
 80252c0:	f859 5003 	ldr.w	r5, [r9, r3]
 80252c4:	0e2b      	lsrs	r3, r5, #24
 80252c6:	d0f3      	beq.n	80252b0 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x144>
 80252c8:	2bff      	cmp	r3, #255	@ 0xff
 80252ca:	ea4f 2615 	mov.w	r6, r5, lsr #8
 80252ce:	d1b4      	bne.n	802523a <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0xce>
 80252d0:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 80252d2:	2aff      	cmp	r2, #255	@ 0xff
 80252d4:	d1b1      	bne.n	802523a <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0xce>
 80252d6:	096b      	lsrs	r3, r5, #5
 80252d8:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
 80252dc:	f026 0607 	bic.w	r6, r6, #7
 80252e0:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 80252e4:	431e      	orrs	r6, r3
 80252e6:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 80252ea:	4335      	orrs	r5, r6
 80252ec:	f8ac 5000 	strh.w	r5, [ip]
 80252f0:	f10c 0c02 	add.w	ip, ip, #2
 80252f4:	45e0      	cmp	r8, ip
 80252f6:	d8df      	bhi.n	80252b8 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x14c>
 80252f8:	43c3      	mvns	r3, r0
 80252fa:	4498      	add	r8, r3
 80252fc:	4b2d      	ldr	r3, [pc, #180]	@ (80253b4 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x248>)
 80252fe:	ea4f 0858 	mov.w	r8, r8, lsr #1
 8025302:	f108 0801 	add.w	r8, r8, #1
 8025306:	881b      	ldrh	r3, [r3, #0]
 8025308:	eb00 0048 	add.w	r0, r0, r8, lsl #1
 802530c:	44c2      	add	sl, r8
 802530e:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 8025310:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	@ 0x3c
 8025314:	1b19      	subs	r1, r3, r4
 8025316:	1b12      	subs	r2, r2, r4
 8025318:	4492      	add	sl, r2
 802531a:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 802531c:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 8025320:	4282      	cmp	r2, r0
 8025322:	d881      	bhi.n	8025228 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0xbc>
 8025324:	4b20      	ldr	r3, [pc, #128]	@ (80253a8 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x23c>)
 8025326:	6818      	ldr	r0, [r3, #0]
 8025328:	6803      	ldr	r3, [r0, #0]
 802532a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 802532c:	4798      	blx	r3
 802532e:	b013      	add	sp, #76	@ 0x4c
 8025330:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8025334:	4798      	blx	r3
 8025336:	4603      	mov	r3, r0
 8025338:	2b01      	cmp	r3, #1
 802533a:	d124      	bne.n	8025386 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x21a>
 802533c:	4a1e      	ldr	r2, [pc, #120]	@ (80253b8 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x24c>)
 802533e:	6810      	ldr	r0, [r2, #0]
 8025340:	b328      	cbz	r0, 802538e <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x222>
 8025342:	2700      	movs	r7, #0
 8025344:	260b      	movs	r6, #11
 8025346:	4a1b      	ldr	r2, [pc, #108]	@ (80253b4 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x248>)
 8025348:	b2a1      	uxth	r1, r4
 802534a:	8814      	ldrh	r4, [r2, #0]
 802534c:	f8bd 202c 	ldrh.w	r2, [sp, #44]	@ 0x2c
 8025350:	f8bd 503c 	ldrh.w	r5, [sp, #60]	@ 0x3c
 8025354:	e9cd 2101 	strd	r2, r1, [sp, #4]
 8025358:	9406      	str	r4, [sp, #24]
 802535a:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 802535c:	f8bd 4042 	ldrh.w	r4, [sp, #66]	@ 0x42
 8025360:	9305      	str	r3, [sp, #20]
 8025362:	9204      	str	r2, [sp, #16]
 8025364:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
 8025368:	464a      	mov	r2, r9
 802536a:	4651      	mov	r1, sl
 802536c:	e9cd 6707 	strd	r6, r7, [sp, #28]
 8025370:	9503      	str	r5, [sp, #12]
 8025372:	9400      	str	r4, [sp, #0]
 8025374:	f7fb fd98 	bl	8020ea8 <_ZN8touchgfx8HALGPU2D13dma2dBlitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_>
 8025378:	b013      	add	sp, #76	@ 0x4c
 802537a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802537e:	4608      	mov	r0, r1
 8025380:	4798      	blx	r3
 8025382:	4603      	mov	r3, r0
 8025384:	e7d8      	b.n	8025338 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x1cc>
 8025386:	4b08      	ldr	r3, [pc, #32]	@ (80253a8 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x23c>)
 8025388:	6818      	ldr	r0, [r3, #0]
 802538a:	6802      	ldr	r2, [r0, #0]
 802538c:	e733      	b.n	80251f6 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x8a>
 802538e:	4b0b      	ldr	r3, [pc, #44]	@ (80253bc <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x250>)
 8025390:	4a0b      	ldr	r2, [pc, #44]	@ (80253c0 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x254>)
 8025392:	217c      	movs	r1, #124	@ 0x7c
 8025394:	480b      	ldr	r0, [pc, #44]	@ (80253c4 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x258>)
 8025396:	f00d f9ef 	bl	8032778 <__assert_func>
 802539a:	4b0b      	ldr	r3, [pc, #44]	@ (80253c8 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x25c>)
 802539c:	4a0b      	ldr	r2, [pc, #44]	@ (80253cc <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x260>)
 802539e:	f240 4182 	movw	r1, #1154	@ 0x482
 80253a2:	480b      	ldr	r0, [pc, #44]	@ (80253d0 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x264>)
 80253a4:	f00d f9e8 	bl	8032778 <__assert_func>
 80253a8:	200830a4 	.word	0x200830a4
 80253ac:	0800121d 	.word	0x0800121d
 80253b0:	0800bd65 	.word	0x0800bd65
 80253b4:	2008309e 	.word	0x2008309e
 80253b8:	20083544 	.word	0x20083544
 80253bc:	080364bc 	.word	0x080364bc
 80253c0:	08036d28 	.word	0x08036d28
 80253c4:	080364e4 	.word	0x080364e4
 80253c8:	080365d4 	.word	0x080365d4
 80253cc:	08037358 	.word	0x08037358
 80253d0:	08036560 	.word	0x08036560

080253d4 <_ZN8touchgfx8LCDGPU2D24blendPixelARGB8888_16BPPEmtih>:
 80253d4:	b4f0      	push	{r4, r5, r6, r7}
 80253d6:	7b05      	ldrb	r5, [r0, #12]
 80253d8:	f89d 6010 	ldrb.w	r6, [sp, #16]
 80253dc:	3d01      	subs	r5, #1
 80253de:	2eff      	cmp	r6, #255	@ 0xff
 80253e0:	fa5f fc81 	uxtb.w	ip, r1
 80253e4:	ea4f 2711 	mov.w	r7, r1, lsr #8
 80253e8:	b2ed      	uxtb	r5, r5
 80253ea:	ea4f 4111 	mov.w	r1, r1, lsr #16
 80253ee:	d041      	beq.n	8025474 <_ZN8touchgfx8LCDGPU2D24blendPixelARGB8888_16BPPEmtih+0xa0>
 80253f0:	fb16 f603 	smulbb	r6, r6, r3
 80253f4:	b2b6      	uxth	r6, r6
 80253f6:	1c74      	adds	r4, r6, #1
 80253f8:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 80253fc:	f3c4 2407 	ubfx	r4, r4, #8, #8
 8025400:	43e6      	mvns	r6, r4
 8025402:	b2a4      	uxth	r4, r4
 8025404:	fb1c fc04 	smulbb	ip, ip, r4
 8025408:	b2ff      	uxtb	r7, r7
 802540a:	fb17 f704 	smulbb	r7, r7, r4
 802540e:	00d0      	lsls	r0, r2, #3
 8025410:	b2c0      	uxtb	r0, r0
 8025412:	10d3      	asrs	r3, r2, #3
 8025414:	b2f6      	uxtb	r6, r6
 8025416:	ea40 1050 	orr.w	r0, r0, r0, lsr #5
 802541a:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 802541e:	fb00 c006 	mla	r0, r0, r6, ip
 8025422:	ea43 1393 	orr.w	r3, r3, r3, lsr #6
 8025426:	fb03 7306 	mla	r3, r3, r6, r7
 802542a:	b280      	uxth	r0, r0
 802542c:	b29b      	uxth	r3, r3
 802542e:	1c47      	adds	r7, r0, #1
 8025430:	eb07 2010 	add.w	r0, r7, r0, lsr #8
 8025434:	f103 0c01 	add.w	ip, r3, #1
 8025438:	2d01      	cmp	r5, #1
 802543a:	f3c0 2707 	ubfx	r7, r0, #8, #8
 802543e:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 8025442:	d926      	bls.n	8025492 <_ZN8touchgfx8LCDGPU2D24blendPixelARGB8888_16BPPEmtih+0xbe>
 8025444:	b2c9      	uxtb	r1, r1
 8025446:	fb11 f404 	smulbb	r4, r1, r4
 802544a:	1212      	asrs	r2, r2, #8
 802544c:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 8025450:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8025454:	fb02 4206 	mla	r2, r2, r6, r4
 8025458:	b292      	uxth	r2, r2
 802545a:	1c50      	adds	r0, r2, #1
 802545c:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 8025460:	095b      	lsrs	r3, r3, #5
 8025462:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
 8025466:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 802546a:	ea40 00d7 	orr.w	r0, r0, r7, lsr #3
 802546e:	4318      	orrs	r0, r3
 8025470:	bcf0      	pop	{r4, r5, r6, r7}
 8025472:	4770      	bx	lr
 8025474:	2bff      	cmp	r3, #255	@ 0xff
 8025476:	d1bb      	bne.n	80253f0 <_ZN8touchgfx8LCDGPU2D24blendPixelARGB8888_16BPPEmtih+0x1c>
 8025478:	2d01      	cmp	r5, #1
 802547a:	d910      	bls.n	802549e <_ZN8touchgfx8LCDGPU2D24blendPixelARGB8888_16BPPEmtih+0xca>
 802547c:	4a0a      	ldr	r2, [pc, #40]	@ (80254a8 <_ZN8touchgfx8LCDGPU2D24blendPixelARGB8888_16BPPEmtih+0xd4>)
 802547e:	00f8      	lsls	r0, r7, #3
 8025480:	ea02 2101 	and.w	r1, r2, r1, lsl #8
 8025484:	f400 67fc 	and.w	r7, r0, #2016	@ 0x7e0
 8025488:	ea41 00dc 	orr.w	r0, r1, ip, lsr #3
 802548c:	4338      	orrs	r0, r7
 802548e:	b280      	uxth	r0, r0
 8025490:	e7ee      	b.n	8025470 <_ZN8touchgfx8LCDGPU2D24blendPixelARGB8888_16BPPEmtih+0x9c>
 8025492:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 8025496:	ea43 0007 	orr.w	r0, r3, r7
 802549a:	bcf0      	pop	{r4, r5, r6, r7}
 802549c:	4770      	bx	lr
 802549e:	ea4c 2007 	orr.w	r0, ip, r7, lsl #8
 80254a2:	b280      	uxth	r0, r0
 80254a4:	e7e4      	b.n	8025470 <_ZN8touchgfx8LCDGPU2D24blendPixelARGB8888_16BPPEmtih+0x9c>
 80254a6:	bf00      	nop
 80254a8:	fffff800 	.word	0xfffff800

080254ac <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h>:
 80254ac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80254b0:	b093      	sub	sp, #76	@ 0x4c
 80254b2:	4614      	mov	r4, r2
 80254b4:	460d      	mov	r5, r1
 80254b6:	7812      	ldrb	r2, [r2, #0]
 80254b8:	f89d 1074 	ldrb.w	r1, [sp, #116]	@ 0x74
 80254bc:	461e      	mov	r6, r3
 80254be:	9002      	str	r0, [sp, #8]
 80254c0:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 80254c2:	9109      	str	r1, [sp, #36]	@ 0x24
 80254c4:	2a00      	cmp	r2, #0
 80254c6:	f040 81c9 	bne.w	802585c <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x3b0>
 80254ca:	6830      	ldr	r0, [r6, #0]
 80254cc:	6871      	ldr	r1, [r6, #4]
 80254ce:	aa0e      	add	r2, sp, #56	@ 0x38
 80254d0:	c203      	stmia	r2!, {r0, r1}
 80254d2:	6818      	ldr	r0, [r3, #0]
 80254d4:	6859      	ldr	r1, [r3, #4]
 80254d6:	aa10      	add	r2, sp, #64	@ 0x40
 80254d8:	c203      	stmia	r2!, {r0, r1}
 80254da:	a80e      	add	r0, sp, #56	@ 0x38
 80254dc:	f7e7 fd70 	bl	800cfc0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80254e0:	4631      	mov	r1, r6
 80254e2:	a810      	add	r0, sp, #64	@ 0x40
 80254e4:	f7e7 fd94 	bl	800d010 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80254e8:	f9bd 303c 	ldrsh.w	r3, [sp, #60]	@ 0x3c
 80254ec:	f9bd 1040 	ldrsh.w	r1, [sp, #64]	@ 0x40
 80254f0:	f003 0201 	and.w	r2, r3, #1
 80254f4:	4617      	mov	r7, r2
 80254f6:	920a      	str	r2, [sp, #40]	@ 0x28
 80254f8:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	@ 0x42
 80254fc:	f8bd 003a 	ldrh.w	r0, [sp, #58]	@ 0x3a
 8025500:	443b      	add	r3, r7
 8025502:	fb02 1303 	mla	r3, r2, r3, r1
 8025506:	f8bd 6038 	ldrh.w	r6, [sp, #56]	@ 0x38
 802550a:	4402      	add	r2, r0
 802550c:	48d0      	ldr	r0, [pc, #832]	@ (8025850 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x3a4>)
 802550e:	440e      	add	r6, r1
 8025510:	6800      	ldr	r0, [r0, #0]
 8025512:	f8ad 6040 	strh.w	r6, [sp, #64]	@ 0x40
 8025516:	f8ad 2042 	strh.w	r2, [sp, #66]	@ 0x42
 802551a:	eb03 73d3 	add.w	r3, r3, r3, lsr #31
 802551e:	eb05 0363 	add.w	r3, r5, r3, asr #1
 8025522:	6802      	ldr	r2, [r0, #0]
 8025524:	f9bd 6044 	ldrsh.w	r6, [sp, #68]	@ 0x44
 8025528:	9304      	str	r3, [sp, #16]
 802552a:	f001 0301 	and.w	r3, r1, #1
 802552e:	6a92      	ldr	r2, [r2, #40]	@ 0x28
 8025530:	930b      	str	r3, [sp, #44]	@ 0x2c
 8025532:	9608      	str	r6, [sp, #32]
 8025534:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	@ 0x46
 8025538:	4790      	blx	r2
 802553a:	4ac6      	ldr	r2, [pc, #792]	@ (8025854 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x3a8>)
 802553c:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	@ 0x42
 8025540:	8812      	ldrh	r2, [r2, #0]
 8025542:	f9bd 1040 	ldrsh.w	r1, [sp, #64]	@ 0x40
 8025546:	fb05 f502 	mul.w	r5, r5, r2
 802554a:	fb02 1303 	mla	r3, r2, r3, r1
 802554e:	eb00 0843 	add.w	r8, r0, r3, lsl #1
 8025552:	eb08 0345 	add.w	r3, r8, r5, lsl #1
 8025556:	4598      	cmp	r8, r3
 8025558:	930c      	str	r3, [sp, #48]	@ 0x30
 802555a:	f104 0404 	add.w	r4, r4, #4
 802555e:	f080 8144 	bcs.w	80257ea <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x33e>
 8025562:	1e73      	subs	r3, r6, #1
 8025564:	930d      	str	r3, [sp, #52]	@ 0x34
 8025566:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8025568:	2b00      	cmp	r3, #0
 802556a:	f000 8164 	beq.w	8025836 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x38a>
 802556e:	9a04      	ldr	r2, [sp, #16]
 8025570:	7813      	ldrb	r3, [r2, #0]
 8025572:	3201      	adds	r2, #1
 8025574:	f003 030f 	and.w	r3, r3, #15
 8025578:	f854 1023 	ldr.w	r1, [r4, r3, lsl #2]
 802557c:	9203      	str	r2, [sp, #12]
 802557e:	0e0b      	lsrs	r3, r1, #24
 8025580:	d008      	beq.n	8025594 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0xe8>
 8025582:	f8b8 2000 	ldrh.w	r2, [r8]
 8025586:	9802      	ldr	r0, [sp, #8]
 8025588:	9300      	str	r3, [sp, #0]
 802558a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 802558c:	f7ff ff22 	bl	80253d4 <_ZN8touchgfx8LCDGPU2D24blendPixelARGB8888_16BPPEmtih>
 8025590:	f8a8 0000 	strh.w	r0, [r8]
 8025594:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8025596:	f108 0802 	add.w	r8, r8, #2
 802559a:	2b01      	cmp	r3, #1
 802559c:	f340 80fd 	ble.w	802579a <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x2ee>
 80255a0:	3b02      	subs	r3, #2
 80255a2:	9a03      	ldr	r2, [sp, #12]
 80255a4:	9306      	str	r3, [sp, #24]
 80255a6:	085b      	lsrs	r3, r3, #1
 80255a8:	9305      	str	r3, [sp, #20]
 80255aa:	eb02 0e03 	add.w	lr, r2, r3
 80255ae:	f108 0704 	add.w	r7, r8, #4
 80255b2:	f102 3cff 	add.w	ip, r2, #4294967295
 80255b6:	f8cd 801c 	str.w	r8, [sp, #28]
 80255ba:	f8dd a024 	ldr.w	sl, [sp, #36]	@ 0x24
 80255be:	e0b2      	b.n	8025726 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x27a>
 80255c0:	fb05 f50a 	mul.w	r5, r5, sl
 80255c4:	1c6a      	adds	r2, r5, #1
 80255c6:	eb02 2525 	add.w	r5, r2, r5, asr #8
 80255ca:	122d      	asrs	r5, r5, #8
 80255cc:	43ee      	mvns	r6, r5
 80255ce:	b2ad      	uxth	r5, r5
 80255d0:	fa5f fb8b 	uxtb.w	fp, fp
 80255d4:	fb13 f305 	smulbb	r3, r3, r5
 80255d8:	fb1b fb05 	smulbb	fp, fp, r5
 80255dc:	ea4f 00c8 	mov.w	r0, r8, lsl #3
 80255e0:	b2c0      	uxtb	r0, r0
 80255e2:	ea4f 02e8 	mov.w	r2, r8, asr #3
 80255e6:	b2f6      	uxtb	r6, r6
 80255e8:	ea40 1050 	orr.w	r0, r0, r0, lsr #5
 80255ec:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 80255f0:	fb00 3306 	mla	r3, r0, r6, r3
 80255f4:	ea42 1292 	orr.w	r2, r2, r2, lsr #6
 80255f8:	fb02 bb06 	mla	fp, r2, r6, fp
 80255fc:	b29b      	uxth	r3, r3
 80255fe:	fa1f fb8b 	uxth.w	fp, fp
 8025602:	1c58      	adds	r0, r3, #1
 8025604:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 8025608:	f10b 0201 	add.w	r2, fp, #1
 802560c:	f1b9 0f01 	cmp.w	r9, #1
 8025610:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8025614:	eb02 2b1b 	add.w	fp, r2, fp, lsr #8
 8025618:	f240 8108 	bls.w	802582c <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x380>
 802561c:	b2c9      	uxtb	r1, r1
 802561e:	fb11 f505 	smulbb	r5, r1, r5
 8025622:	ea4f 2828 	mov.w	r8, r8, asr #8
 8025626:	f008 08f8 	and.w	r8, r8, #248	@ 0xf8
 802562a:	ea48 1858 	orr.w	r8, r8, r8, lsr #5
 802562e:	fb08 5806 	mla	r8, r8, r6, r5
 8025632:	fa1f f888 	uxth.w	r8, r8
 8025636:	f108 0101 	add.w	r1, r8, #1
 802563a:	eb01 2118 	add.w	r1, r1, r8, lsr #8
 802563e:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 8025642:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
 8025646:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
 802564a:	ea41 03d3 	orr.w	r3, r1, r3, lsr #3
 802564e:	ea43 030b 	orr.w	r3, r3, fp
 8025652:	f827 3c04 	strh.w	r3, [r7, #-4]
 8025656:	f89c 2000 	ldrb.w	r2, [ip]
 802565a:	f002 020f 	and.w	r2, r2, #15
 802565e:	f854 3022 	ldr.w	r3, [r4, r2, lsl #2]
 8025662:	0e1d      	lsrs	r5, r3, #24
 8025664:	d05b      	beq.n	802571e <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x272>
 8025666:	9a02      	ldr	r2, [sp, #8]
 8025668:	2dff      	cmp	r5, #255	@ 0xff
 802566a:	f892 900c 	ldrb.w	r9, [r2, #12]
 802566e:	ea4f 4113 	mov.w	r1, r3, lsr #16
 8025672:	f109 39ff 	add.w	r9, r9, #4294967295
 8025676:	ea4f 2b13 	mov.w	fp, r3, lsr #8
 802567a:	f837 8c02 	ldrh.w	r8, [r7, #-2]
 802567e:	fa5f f989 	uxtb.w	r9, r9
 8025682:	b2db      	uxtb	r3, r3
 8025684:	f000 80b9 	beq.w	80257fa <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x34e>
 8025688:	fb05 f50a 	mul.w	r5, r5, sl
 802568c:	1c6a      	adds	r2, r5, #1
 802568e:	eb02 2525 	add.w	r5, r2, r5, asr #8
 8025692:	122d      	asrs	r5, r5, #8
 8025694:	43ee      	mvns	r6, r5
 8025696:	b2ad      	uxth	r5, r5
 8025698:	fa5f fb8b 	uxtb.w	fp, fp
 802569c:	fb13 f305 	smulbb	r3, r3, r5
 80256a0:	fb1b fb05 	smulbb	fp, fp, r5
 80256a4:	ea4f 00c8 	mov.w	r0, r8, lsl #3
 80256a8:	b2c0      	uxtb	r0, r0
 80256aa:	ea4f 02e8 	mov.w	r2, r8, asr #3
 80256ae:	b2f6      	uxtb	r6, r6
 80256b0:	ea40 1050 	orr.w	r0, r0, r0, lsr #5
 80256b4:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 80256b8:	fb00 3306 	mla	r3, r0, r6, r3
 80256bc:	ea42 1292 	orr.w	r2, r2, r2, lsr #6
 80256c0:	fb02 bb06 	mla	fp, r2, r6, fp
 80256c4:	b29b      	uxth	r3, r3
 80256c6:	fa1f fb8b 	uxth.w	fp, fp
 80256ca:	1c58      	adds	r0, r3, #1
 80256cc:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 80256d0:	f10b 0201 	add.w	r2, fp, #1
 80256d4:	f1b9 0f01 	cmp.w	r9, #1
 80256d8:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80256dc:	eb02 2b1b 	add.w	fp, r2, fp, lsr #8
 80256e0:	f240 809f 	bls.w	8025822 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x376>
 80256e4:	b2c9      	uxtb	r1, r1
 80256e6:	fb11 f505 	smulbb	r5, r1, r5
 80256ea:	ea4f 2828 	mov.w	r8, r8, asr #8
 80256ee:	f008 08f8 	and.w	r8, r8, #248	@ 0xf8
 80256f2:	ea48 1858 	orr.w	r8, r8, r8, lsr #5
 80256f6:	fb08 5806 	mla	r8, r8, r6, r5
 80256fa:	fa1f f888 	uxth.w	r8, r8
 80256fe:	f108 0101 	add.w	r1, r8, #1
 8025702:	eb01 2118 	add.w	r1, r1, r8, lsr #8
 8025706:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 802570a:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
 802570e:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
 8025712:	ea41 03d3 	orr.w	r3, r1, r3, lsr #3
 8025716:	ea43 030b 	orr.w	r3, r3, fp
 802571a:	f827 3c02 	strh.w	r3, [r7, #-2]
 802571e:	45e6      	cmp	lr, ip
 8025720:	f107 0704 	add.w	r7, r7, #4
 8025724:	d02b      	beq.n	802577e <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x2d2>
 8025726:	f81c 2f01 	ldrb.w	r2, [ip, #1]!
 802572a:	0913      	lsrs	r3, r2, #4
 802572c:	f854 3023 	ldr.w	r3, [r4, r3, lsl #2]
 8025730:	0e1d      	lsrs	r5, r3, #24
 8025732:	d092      	beq.n	802565a <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x1ae>
 8025734:	9a02      	ldr	r2, [sp, #8]
 8025736:	2dff      	cmp	r5, #255	@ 0xff
 8025738:	f892 900c 	ldrb.w	r9, [r2, #12]
 802573c:	ea4f 4113 	mov.w	r1, r3, lsr #16
 8025740:	f109 39ff 	add.w	r9, r9, #4294967295
 8025744:	ea4f 2b13 	mov.w	fp, r3, lsr #8
 8025748:	f837 8c04 	ldrh.w	r8, [r7, #-4]
 802574c:	fa5f f989 	uxtb.w	r9, r9
 8025750:	b2db      	uxtb	r3, r3
 8025752:	f47f af35 	bne.w	80255c0 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x114>
 8025756:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 802575a:	f47f af31 	bne.w	80255c0 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x114>
 802575e:	f1b9 0f01 	cmp.w	r9, #1
 8025762:	d970      	bls.n	8025846 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x39a>
 8025764:	4a3c      	ldr	r2, [pc, #240]	@ (8025858 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x3ac>)
 8025766:	ea4f 0bcb 	mov.w	fp, fp, lsl #3
 802576a:	ea02 2101 	and.w	r1, r2, r1, lsl #8
 802576e:	ea41 03d3 	orr.w	r3, r1, r3, lsr #3
 8025772:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
 8025776:	ea43 030b 	orr.w	r3, r3, fp
 802577a:	b29b      	uxth	r3, r3
 802577c:	e769      	b.n	8025652 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x1a6>
 802577e:	9b05      	ldr	r3, [sp, #20]
 8025780:	9903      	ldr	r1, [sp, #12]
 8025782:	f8dd 801c 	ldr.w	r8, [sp, #28]
 8025786:	1c5a      	adds	r2, r3, #1
 8025788:	4411      	add	r1, r2
 802578a:	eb08 0882 	add.w	r8, r8, r2, lsl #2
 802578e:	9a06      	ldr	r2, [sp, #24]
 8025790:	ebc3 73c3 	rsb	r3, r3, r3, lsl #31
 8025794:	9103      	str	r1, [sp, #12]
 8025796:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 802579a:	2b01      	cmp	r3, #1
 802579c:	d111      	bne.n	80257c2 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x316>
 802579e:	9b03      	ldr	r3, [sp, #12]
 80257a0:	781b      	ldrb	r3, [r3, #0]
 80257a2:	091b      	lsrs	r3, r3, #4
 80257a4:	f854 1023 	ldr.w	r1, [r4, r3, lsl #2]
 80257a8:	0e0b      	lsrs	r3, r1, #24
 80257aa:	d008      	beq.n	80257be <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x312>
 80257ac:	f8b8 2000 	ldrh.w	r2, [r8]
 80257b0:	9802      	ldr	r0, [sp, #8]
 80257b2:	9300      	str	r3, [sp, #0]
 80257b4:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80257b6:	f7ff fe0d 	bl	80253d4 <_ZN8touchgfx8LCDGPU2D24blendPixelARGB8888_16BPPEmtih>
 80257ba:	f8a8 0000 	strh.w	r0, [r8]
 80257be:	f108 0802 	add.w	r8, r8, #2
 80257c2:	990a      	ldr	r1, [sp, #40]	@ 0x28
 80257c4:	f9bd 303c 	ldrsh.w	r3, [sp, #60]	@ 0x3c
 80257c8:	4a22      	ldr	r2, [pc, #136]	@ (8025854 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x3a8>)
 80257ca:	440b      	add	r3, r1
 80257cc:	8812      	ldrh	r2, [r2, #0]
 80257ce:	9908      	ldr	r1, [sp, #32]
 80257d0:	eb03 73d3 	add.w	r3, r3, r3, lsr #31
 80257d4:	1a52      	subs	r2, r2, r1
 80257d6:	eb08 0842 	add.w	r8, r8, r2, lsl #1
 80257da:	9a04      	ldr	r2, [sp, #16]
 80257dc:	eb02 0363 	add.w	r3, r2, r3, asr #1
 80257e0:	9304      	str	r3, [sp, #16]
 80257e2:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80257e4:	4543      	cmp	r3, r8
 80257e6:	f63f aebe 	bhi.w	8025566 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0xba>
 80257ea:	4b19      	ldr	r3, [pc, #100]	@ (8025850 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x3a4>)
 80257ec:	6818      	ldr	r0, [r3, #0]
 80257ee:	6803      	ldr	r3, [r0, #0]
 80257f0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80257f2:	4798      	blx	r3
 80257f4:	b013      	add	sp, #76	@ 0x4c
 80257f6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80257fa:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 80257fe:	f47f af43 	bne.w	8025688 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x1dc>
 8025802:	f1b9 0f01 	cmp.w	r9, #1
 8025806:	d91a      	bls.n	802583e <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x392>
 8025808:	4a13      	ldr	r2, [pc, #76]	@ (8025858 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x3ac>)
 802580a:	ea4f 0bcb 	mov.w	fp, fp, lsl #3
 802580e:	ea02 2101 	and.w	r1, r2, r1, lsl #8
 8025812:	ea41 03d3 	orr.w	r3, r1, r3, lsr #3
 8025816:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
 802581a:	ea43 030b 	orr.w	r3, r3, fp
 802581e:	b29b      	uxth	r3, r3
 8025820:	e77b      	b.n	802571a <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x26e>
 8025822:	f40b 4b7f 	and.w	fp, fp, #65280	@ 0xff00
 8025826:	ea4b 0303 	orr.w	r3, fp, r3
 802582a:	e776      	b.n	802571a <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x26e>
 802582c:	f40b 4b7f 	and.w	fp, fp, #65280	@ 0xff00
 8025830:	ea4b 0303 	orr.w	r3, fp, r3
 8025834:	e70d      	b.n	8025652 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x1a6>
 8025836:	9b04      	ldr	r3, [sp, #16]
 8025838:	9303      	str	r3, [sp, #12]
 802583a:	9b08      	ldr	r3, [sp, #32]
 802583c:	e6ad      	b.n	802559a <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0xee>
 802583e:	ea43 230b 	orr.w	r3, r3, fp, lsl #8
 8025842:	b29b      	uxth	r3, r3
 8025844:	e769      	b.n	802571a <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x26e>
 8025846:	ea43 230b 	orr.w	r3, r3, fp, lsl #8
 802584a:	b29b      	uxth	r3, r3
 802584c:	e701      	b.n	8025652 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x1a6>
 802584e:	bf00      	nop
 8025850:	200830a4 	.word	0x200830a4
 8025854:	2008309e 	.word	0x2008309e
 8025858:	fffff800 	.word	0xfffff800
 802585c:	4b03      	ldr	r3, [pc, #12]	@ (802586c <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x3c0>)
 802585e:	4a04      	ldr	r2, [pc, #16]	@ (8025870 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x3c4>)
 8025860:	f240 41f5 	movw	r1, #1269	@ 0x4f5
 8025864:	4803      	ldr	r0, [pc, #12]	@ (8025874 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x3c8>)
 8025866:	f00c ff87 	bl	8032778 <__assert_func>
 802586a:	bf00      	nop
 802586c:	08036654 	.word	0x08036654
 8025870:	08037844 	.word	0x08037844
 8025874:	08036560 	.word	0x08036560

08025878 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h>:
 8025878:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802587c:	b08f      	sub	sp, #60	@ 0x3c
 802587e:	9206      	str	r2, [sp, #24]
 8025880:	461c      	mov	r4, r3
 8025882:	7812      	ldrb	r2, [r2, #0]
 8025884:	f89d 3064 	ldrb.w	r3, [sp, #100]	@ 0x64
 8025888:	e9cd 1000 	strd	r1, r0, [sp]
 802588c:	9305      	str	r3, [sp, #20]
 802588e:	2a00      	cmp	r2, #0
 8025890:	f040 81ad 	bne.w	8025bee <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x376>
 8025894:	b913      	cbnz	r3, 802589c <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x24>
 8025896:	b00f      	add	sp, #60	@ 0x3c
 8025898:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802589c:	6820      	ldr	r0, [r4, #0]
 802589e:	6861      	ldr	r1, [r4, #4]
 80258a0:	ab0a      	add	r3, sp, #40	@ 0x28
 80258a2:	c303      	stmia	r3!, {r0, r1}
 80258a4:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 80258a6:	6818      	ldr	r0, [r3, #0]
 80258a8:	6859      	ldr	r1, [r3, #4]
 80258aa:	ab0c      	add	r3, sp, #48	@ 0x30
 80258ac:	c303      	stmia	r3!, {r0, r1}
 80258ae:	a80a      	add	r0, sp, #40	@ 0x28
 80258b0:	f7e7 fb86 	bl	800cfc0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80258b4:	4621      	mov	r1, r4
 80258b6:	a80c      	add	r0, sp, #48	@ 0x30
 80258b8:	f7e7 fbaa 	bl	800d010 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80258bc:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 80258c0:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 80258c4:	dd71      	ble.n	80259aa <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x132>
 80258c6:	2201      	movs	r2, #1
 80258c8:	b299      	uxth	r1, r3
 80258ca:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 80258ce:	f8bd 0030 	ldrh.w	r0, [sp, #48]	@ 0x30
 80258d2:	fb93 f6f2 	sdiv	r6, r3, r2
 80258d6:	b2b5      	uxth	r5, r6
 80258d8:	fb02 3415 	mls	r4, r2, r5, r3
 80258dc:	fb14 0101 	smlabb	r1, r4, r1, r0
 80258e0:	f9bd 402e 	ldrsh.w	r4, [sp, #46]	@ 0x2e
 80258e4:	fa1f fb81 	uxth.w	fp, r1
 80258e8:	4414      	add	r4, r2
 80258ea:	3c01      	subs	r4, #1
 80258ec:	fb94 f4f2 	sdiv	r4, r4, r2
 80258f0:	b135      	cbz	r5, 8025900 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x88>
 80258f2:	9a06      	ldr	r2, [sp, #24]
 80258f4:	9900      	ldr	r1, [sp, #0]
 80258f6:	f852 2025 	ldr.w	r2, [r2, r5, lsl #2]
 80258fa:	ba12      	rev	r2, r2
 80258fc:	4411      	add	r1, r2
 80258fe:	9100      	str	r1, [sp, #0]
 8025900:	f8bd 2028 	ldrh.w	r2, [sp, #40]	@ 0x28
 8025904:	f8bd 102a 	ldrh.w	r1, [sp, #42]	@ 0x2a
 8025908:	4402      	add	r2, r0
 802590a:	f8ad 2030 	strh.w	r2, [sp, #48]	@ 0x30
 802590e:	f9bd 2034 	ldrsh.w	r2, [sp, #52]	@ 0x34
 8025912:	440b      	add	r3, r1
 8025914:	4616      	mov	r6, r2
 8025916:	49b9      	ldr	r1, [pc, #740]	@ (8025bfc <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x384>)
 8025918:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 802591c:	6808      	ldr	r0, [r1, #0]
 802591e:	9209      	str	r2, [sp, #36]	@ 0x24
 8025920:	6803      	ldr	r3, [r0, #0]
 8025922:	f9bd 5036 	ldrsh.w	r5, [sp, #54]	@ 0x36
 8025926:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8025928:	4798      	blx	r3
 802592a:	f1bb 0f00 	cmp.w	fp, #0
 802592e:	bf0c      	ite	eq
 8025930:	4633      	moveq	r3, r6
 8025932:	2300      	movne	r3, #0
 8025934:	49b2      	ldr	r1, [pc, #712]	@ (8025c00 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x388>)
 8025936:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
 802593a:	8809      	ldrh	r1, [r1, #0]
 802593c:	f9bd 6030 	ldrsh.w	r6, [sp, #48]	@ 0x30
 8025940:	fb01 f505 	mul.w	r5, r1, r5
 8025944:	fb01 6202 	mla	r2, r1, r2, r6
 8025948:	b2a4      	uxth	r4, r4
 802594a:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 802594e:	eb00 0245 	add.w	r2, r0, r5, lsl #1
 8025952:	00a4      	lsls	r4, r4, #2
 8025954:	1d21      	adds	r1, r4, #4
 8025956:	4290      	cmp	r0, r2
 8025958:	9202      	str	r2, [sp, #8]
 802595a:	9108      	str	r1, [sp, #32]
 802595c:	fa1f fa83 	uxth.w	sl, r3
 8025960:	d21b      	bcs.n	802599a <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x122>
 8025962:	2300      	movs	r3, #0
 8025964:	465e      	mov	r6, fp
 8025966:	461d      	mov	r5, r3
 8025968:	9303      	str	r3, [sp, #12]
 802596a:	b965      	cbnz	r5, 8025986 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x10e>
 802596c:	9900      	ldr	r1, [sp, #0]
 802596e:	780b      	ldrb	r3, [r1, #0]
 8025970:	099d      	lsrs	r5, r3, #6
 8025972:	1e6a      	subs	r2, r5, #1
 8025974:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 8025978:	2a02      	cmp	r2, #2
 802597a:	9303      	str	r3, [sp, #12]
 802597c:	f200 80ce 	bhi.w	8025b1c <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x2a4>
 8025980:	3101      	adds	r1, #1
 8025982:	9100      	str	r1, [sp, #0]
 8025984:	b2ad      	uxth	r5, r5
 8025986:	b1b6      	cbz	r6, 80259b6 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x13e>
 8025988:	42b5      	cmp	r5, r6
 802598a:	f080 80c1 	bcs.w	8025b10 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x298>
 802598e:	1b75      	subs	r5, r6, r5
 8025990:	b2ae      	uxth	r6, r5
 8025992:	2500      	movs	r5, #0
 8025994:	9b02      	ldr	r3, [sp, #8]
 8025996:	4283      	cmp	r3, r0
 8025998:	d8e7      	bhi.n	802596a <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0xf2>
 802599a:	4b98      	ldr	r3, [pc, #608]	@ (8025bfc <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x384>)
 802599c:	6818      	ldr	r0, [r3, #0]
 802599e:	6803      	ldr	r3, [r0, #0]
 80259a0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80259a2:	4798      	blx	r3
 80259a4:	b00f      	add	sp, #60	@ 0x3c
 80259a6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80259aa:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 80259ae:	b299      	uxth	r1, r3
 80259b0:	fb94 f2f1 	sdiv	r2, r4, r1
 80259b4:	e789      	b.n	80258ca <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x52>
 80259b6:	2304      	movs	r3, #4
 80259b8:	4619      	mov	r1, r3
 80259ba:	9a08      	ldr	r2, [sp, #32]
 80259bc:	9b03      	ldr	r3, [sp, #12]
 80259be:	4555      	cmp	r5, sl
 80259c0:	fb11 2303 	smlabb	r3, r1, r3, r2
 80259c4:	9a06      	ldr	r2, [sp, #24]
 80259c6:	58d1      	ldr	r1, [r2, r3]
 80259c8:	ea4f 6211 	mov.w	r2, r1, lsr #24
 80259cc:	f0c0 8099 	bcc.w	8025b02 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x28a>
 80259d0:	eba5 030a 	sub.w	r3, r5, sl
 80259d4:	b29b      	uxth	r3, r3
 80259d6:	9304      	str	r3, [sp, #16]
 80259d8:	4653      	mov	r3, sl
 80259da:	9607      	str	r6, [sp, #28]
 80259dc:	2a00      	cmp	r2, #0
 80259de:	f000 808d 	beq.w	8025afc <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x284>
 80259e2:	2aff      	cmp	r2, #255	@ 0xff
 80259e4:	ea4f 4b11 	mov.w	fp, r1, lsr #16
 80259e8:	ea4f 2911 	mov.w	r9, r1, lsr #8
 80259ec:	fa5f f881 	uxtb.w	r8, r1
 80259f0:	d103      	bne.n	80259fa <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x182>
 80259f2:	9905      	ldr	r1, [sp, #20]
 80259f4:	29ff      	cmp	r1, #255	@ 0xff
 80259f6:	f000 8096 	beq.w	8025b26 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x2ae>
 80259fa:	9905      	ldr	r1, [sp, #20]
 80259fc:	fa5f fb8b 	uxtb.w	fp, fp
 8025a00:	fb01 f202 	mul.w	r2, r1, r2
 8025a04:	1c51      	adds	r1, r2, #1
 8025a06:	eb01 2222 	add.w	r2, r1, r2, asr #8
 8025a0a:	1212      	asrs	r2, r2, #8
 8025a0c:	ea6f 0c02 	mvn.w	ip, r2
 8025a10:	fa5f f989 	uxtb.w	r9, r9
 8025a14:	fa5f fc8c 	uxtb.w	ip, ip
 8025a18:	2b00      	cmp	r3, #0
 8025a1a:	d04d      	beq.n	8025ab8 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x240>
 8025a1c:	b292      	uxth	r2, r2
 8025a1e:	fb1b fb02 	smulbb	fp, fp, r2
 8025a22:	fb19 f902 	smulbb	r9, r9, r2
 8025a26:	fb18 f802 	smulbb	r8, r8, r2
 8025a2a:	f103 3eff 	add.w	lr, r3, #4294967295
 8025a2e:	fa1f fe8e 	uxth.w	lr, lr
 8025a32:	f10e 0e01 	add.w	lr, lr, #1
 8025a36:	eb00 0e4e 	add.w	lr, r0, lr, lsl #1
 8025a3a:	fa1f fb8b 	uxth.w	fp, fp
 8025a3e:	fa1f f989 	uxth.w	r9, r9
 8025a42:	fa1f f888 	uxth.w	r8, r8
 8025a46:	fa1f fc8c 	uxth.w	ip, ip
 8025a4a:	f830 1b02 	ldrh.w	r1, [r0], #2
 8025a4e:	9b01      	ldr	r3, [sp, #4]
 8025a50:	00ca      	lsls	r2, r1, #3
 8025a52:	7b1f      	ldrb	r7, [r3, #12]
 8025a54:	b2d2      	uxtb	r2, r2
 8025a56:	10cb      	asrs	r3, r1, #3
 8025a58:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8025a5c:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 8025a60:	fb02 820c 	mla	r2, r2, ip, r8
 8025a64:	ea43 1393 	orr.w	r3, r3, r3, lsr #6
 8025a68:	fb03 930c 	mla	r3, r3, ip, r9
 8025a6c:	b292      	uxth	r2, r2
 8025a6e:	1c54      	adds	r4, r2, #1
 8025a70:	b29b      	uxth	r3, r3
 8025a72:	3f01      	subs	r7, #1
 8025a74:	eb04 2212 	add.w	r2, r4, r2, lsr #8
 8025a78:	2f01      	cmp	r7, #1
 8025a7a:	f103 0401 	add.w	r4, r3, #1
 8025a7e:	f3c2 2207 	ubfx	r2, r2, #8, #8
 8025a82:	eb04 2313 	add.w	r3, r4, r3, lsr #8
 8025a86:	d92d      	bls.n	8025ae4 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x26c>
 8025a88:	1209      	asrs	r1, r1, #8
 8025a8a:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 8025a8e:	ea41 1151 	orr.w	r1, r1, r1, lsr #5
 8025a92:	fb01 b10c 	mla	r1, r1, ip, fp
 8025a96:	b289      	uxth	r1, r1
 8025a98:	1c4c      	adds	r4, r1, #1
 8025a9a:	eb04 2111 	add.w	r1, r4, r1, lsr #8
 8025a9e:	095b      	lsrs	r3, r3, #5
 8025aa0:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
 8025aa4:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8025aa8:	ea41 02d2 	orr.w	r2, r1, r2, lsr #3
 8025aac:	431a      	orrs	r2, r3
 8025aae:	4586      	cmp	lr, r0
 8025ab0:	f820 2c02 	strh.w	r2, [r0, #-2]
 8025ab4:	d1c9      	bne.n	8025a4a <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x1d2>
 8025ab6:	4670      	mov	r0, lr
 8025ab8:	4555      	cmp	r5, sl
 8025aba:	d31b      	bcc.n	8025af4 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x27c>
 8025abc:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8025abe:	f8bd 602c 	ldrh.w	r6, [sp, #44]	@ 0x2c
 8025ac2:	4b4f      	ldr	r3, [pc, #316]	@ (8025c00 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x388>)
 8025ac4:	fa1f fa82 	uxth.w	sl, r2
 8025ac8:	eba6 060a 	sub.w	r6, r6, sl
 8025acc:	881b      	ldrh	r3, [r3, #0]
 8025ace:	b2b6      	uxth	r6, r6
 8025ad0:	2e00      	cmp	r6, #0
 8025ad2:	eba3 0302 	sub.w	r3, r3, r2
 8025ad6:	9d04      	ldr	r5, [sp, #16]
 8025ad8:	bf18      	it	ne
 8025ada:	f04f 0a00 	movne.w	sl, #0
 8025ade:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8025ae2:	e757      	b.n	8025994 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x11c>
 8025ae4:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 8025ae8:	431a      	orrs	r2, r3
 8025aea:	4586      	cmp	lr, r0
 8025aec:	f820 2c02 	strh.w	r2, [r0, #-2]
 8025af0:	d1ab      	bne.n	8025a4a <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x1d2>
 8025af2:	e7e0      	b.n	8025ab6 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x23e>
 8025af4:	9d04      	ldr	r5, [sp, #16]
 8025af6:	f8dd a01c 	ldr.w	sl, [sp, #28]
 8025afa:	e74b      	b.n	8025994 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x11c>
 8025afc:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8025b00:	e7da      	b.n	8025ab8 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x240>
 8025b02:	ebaa 0405 	sub.w	r4, sl, r5
 8025b06:	b2a4      	uxth	r4, r4
 8025b08:	462b      	mov	r3, r5
 8025b0a:	9604      	str	r6, [sp, #16]
 8025b0c:	9407      	str	r4, [sp, #28]
 8025b0e:	e765      	b.n	80259dc <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x164>
 8025b10:	1bad      	subs	r5, r5, r6
 8025b12:	b2ad      	uxth	r5, r5
 8025b14:	f8bd a024 	ldrh.w	sl, [sp, #36]	@ 0x24
 8025b18:	2600      	movs	r6, #0
 8025b1a:	e73b      	b.n	8025994 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x11c>
 8025b1c:	460b      	mov	r3, r1
 8025b1e:	3302      	adds	r3, #2
 8025b20:	784d      	ldrb	r5, [r1, #1]
 8025b22:	9300      	str	r3, [sp, #0]
 8025b24:	e72f      	b.n	8025986 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x10e>
 8025b26:	9a01      	ldr	r2, [sp, #4]
 8025b28:	7b12      	ldrb	r2, [r2, #12]
 8025b2a:	3a01      	subs	r2, #1
 8025b2c:	2a01      	cmp	r2, #1
 8025b2e:	d954      	bls.n	8025bda <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x362>
 8025b30:	4a34      	ldr	r2, [pc, #208]	@ (8025c04 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x38c>)
 8025b32:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 8025b36:	ea02 2b0b 	and.w	fp, r2, fp, lsl #8
 8025b3a:	ea4b 08d8 	orr.w	r8, fp, r8, lsr #3
 8025b3e:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 8025b42:	ea48 0809 	orr.w	r8, r8, r9
 8025b46:	fa1f fe88 	uxth.w	lr, r8
 8025b4a:	2b00      	cmp	r3, #0
 8025b4c:	d0b4      	beq.n	8025ab8 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x240>
 8025b4e:	1e5a      	subs	r2, r3, #1
 8025b50:	fa1f fb82 	uxth.w	fp, r2
 8025b54:	f1bb 0f04 	cmp.w	fp, #4
 8025b58:	f3c0 0140 	ubfx	r1, r0, #1, #1
 8025b5c:	d945      	bls.n	8025bea <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x372>
 8025b5e:	2900      	cmp	r1, #0
 8025b60:	d040      	beq.n	8025be4 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x36c>
 8025b62:	46d8      	mov	r8, fp
 8025b64:	f8a0 e000 	strh.w	lr, [r0]
 8025b68:	f100 0902 	add.w	r9, r0, #2
 8025b6c:	2700      	movs	r7, #0
 8025b6e:	1a5b      	subs	r3, r3, r1
 8025b70:	463a      	mov	r2, r7
 8025b72:	fa1f fc83 	uxth.w	ip, r3
 8025b76:	f36e 070f 	bfi	r7, lr, #0, #16
 8025b7a:	eb00 0141 	add.w	r1, r0, r1, lsl #1
 8025b7e:	ea4f 035c 	mov.w	r3, ip, lsr #1
 8025b82:	f36e 471f 	bfi	r7, lr, #16, #16
 8025b86:	3201      	adds	r2, #1
 8025b88:	b294      	uxth	r4, r2
 8025b8a:	42a3      	cmp	r3, r4
 8025b8c:	f841 7b04 	str.w	r7, [r1], #4
 8025b90:	d8f9      	bhi.n	8025b86 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x30e>
 8025b92:	f02c 0201 	bic.w	r2, ip, #1
 8025b96:	b292      	uxth	r2, r2
 8025b98:	eba8 0302 	sub.w	r3, r8, r2
 8025b9c:	4562      	cmp	r2, ip
 8025b9e:	b29b      	uxth	r3, r3
 8025ba0:	eb09 0142 	add.w	r1, r9, r2, lsl #1
 8025ba4:	d014      	beq.n	8025bd0 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x358>
 8025ba6:	1e5a      	subs	r2, r3, #1
 8025ba8:	b292      	uxth	r2, r2
 8025baa:	f8a1 e000 	strh.w	lr, [r1]
 8025bae:	b17a      	cbz	r2, 8025bd0 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x358>
 8025bb0:	1e9a      	subs	r2, r3, #2
 8025bb2:	b292      	uxth	r2, r2
 8025bb4:	f8a1 e002 	strh.w	lr, [r1, #2]
 8025bb8:	b152      	cbz	r2, 8025bd0 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x358>
 8025bba:	1eda      	subs	r2, r3, #3
 8025bbc:	b292      	uxth	r2, r2
 8025bbe:	f8a1 e004 	strh.w	lr, [r1, #4]
 8025bc2:	b12a      	cbz	r2, 8025bd0 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x358>
 8025bc4:	2b04      	cmp	r3, #4
 8025bc6:	f8a1 e006 	strh.w	lr, [r1, #6]
 8025bca:	d001      	beq.n	8025bd0 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x358>
 8025bcc:	f8a1 e008 	strh.w	lr, [r1, #8]
 8025bd0:	f10b 0b01 	add.w	fp, fp, #1
 8025bd4:	eb00 004b 	add.w	r0, r0, fp, lsl #1
 8025bd8:	e76e      	b.n	8025ab8 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x240>
 8025bda:	ea48 2809 	orr.w	r8, r8, r9, lsl #8
 8025bde:	fa1f fe88 	uxth.w	lr, r8
 8025be2:	e7b2      	b.n	8025b4a <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x2d2>
 8025be4:	4681      	mov	r9, r0
 8025be6:	4698      	mov	r8, r3
 8025be8:	e7c0      	b.n	8025b6c <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x2f4>
 8025bea:	4601      	mov	r1, r0
 8025bec:	e7dc      	b.n	8025ba8 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x330>
 8025bee:	4b06      	ldr	r3, [pc, #24]	@ (8025c08 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x390>)
 8025bf0:	4a06      	ldr	r2, [pc, #24]	@ (8025c0c <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x394>)
 8025bf2:	f44f 61aa 	mov.w	r1, #1360	@ 0x550
 8025bf6:	4806      	ldr	r0, [pc, #24]	@ (8025c10 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x398>)
 8025bf8:	f00c fdbe 	bl	8032778 <__assert_func>
 8025bfc:	200830a4 	.word	0x200830a4
 8025c00:	2008309e 	.word	0x2008309e
 8025c04:	fffff800 	.word	0xfffff800
 8025c08:	08036654 	.word	0x08036654
 8025c0c:	08037c50 	.word	0x08037c50
 8025c10:	08036560 	.word	0x08036560

08025c14 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h>:
 8025c14:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8025c18:	b09f      	sub	sp, #124	@ 0x7c
 8025c1a:	9201      	str	r2, [sp, #4]
 8025c1c:	461c      	mov	r4, r3
 8025c1e:	7812      	ldrb	r2, [r2, #0]
 8025c20:	f89d 30a4 	ldrb.w	r3, [sp, #164]	@ 0xa4
 8025c24:	9116      	str	r1, [sp, #88]	@ 0x58
 8025c26:	9305      	str	r3, [sp, #20]
 8025c28:	2a00      	cmp	r2, #0
 8025c2a:	f040 823c 	bne.w	80260a6 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x492>
 8025c2e:	b913      	cbnz	r3, 8025c36 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x22>
 8025c30:	b01f      	add	sp, #124	@ 0x7c
 8025c32:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8025c36:	6861      	ldr	r1, [r4, #4]
 8025c38:	4683      	mov	fp, r0
 8025c3a:	6820      	ldr	r0, [r4, #0]
 8025c3c:	ab1a      	add	r3, sp, #104	@ 0x68
 8025c3e:	c303      	stmia	r3!, {r0, r1}
 8025c40:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8025c42:	6818      	ldr	r0, [r3, #0]
 8025c44:	6859      	ldr	r1, [r3, #4]
 8025c46:	ab1c      	add	r3, sp, #112	@ 0x70
 8025c48:	c303      	stmia	r3!, {r0, r1}
 8025c4a:	a81a      	add	r0, sp, #104	@ 0x68
 8025c4c:	f7e7 f9b8 	bl	800cfc0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8025c50:	4621      	mov	r1, r4
 8025c52:	a81c      	add	r0, sp, #112	@ 0x70
 8025c54:	f7e7 f9dc 	bl	800d010 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8025c58:	f9bd 106c 	ldrsh.w	r1, [sp, #108]	@ 0x6c
 8025c5c:	f5b1 6f80 	cmp.w	r1, #1024	@ 0x400
 8025c60:	f340 8152 	ble.w	8025f08 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x2f4>
 8025c64:	2301      	movs	r3, #1
 8025c66:	b289      	uxth	r1, r1
 8025c68:	9318      	str	r3, [sp, #96]	@ 0x60
 8025c6a:	f9bd 0072 	ldrsh.w	r0, [sp, #114]	@ 0x72
 8025c6e:	f9bd 206e 	ldrsh.w	r2, [sp, #110]	@ 0x6e
 8025c72:	fb90 f4f3 	sdiv	r4, r0, r3
 8025c76:	441a      	add	r2, r3
 8025c78:	3a01      	subs	r2, #1
 8025c7a:	fb92 f2f3 	sdiv	r2, r2, r3
 8025c7e:	b2a4      	uxth	r4, r4
 8025c80:	fb03 0314 	mls	r3, r3, r4, r0
 8025c84:	9417      	str	r4, [sp, #92]	@ 0x5c
 8025c86:	f8bd 4070 	ldrh.w	r4, [sp, #112]	@ 0x70
 8025c8a:	f8bd 6068 	ldrh.w	r6, [sp, #104]	@ 0x68
 8025c8e:	fb13 4101 	smlabb	r1, r3, r1, r4
 8025c92:	f8bd 506a 	ldrh.w	r5, [sp, #106]	@ 0x6a
 8025c96:	4bbb      	ldr	r3, [pc, #748]	@ (8025f84 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x370>)
 8025c98:	4434      	add	r4, r6
 8025c9a:	4405      	add	r5, r0
 8025c9c:	6818      	ldr	r0, [r3, #0]
 8025c9e:	f8ad 4070 	strh.w	r4, [sp, #112]	@ 0x70
 8025ca2:	f8ad 5072 	strh.w	r5, [sp, #114]	@ 0x72
 8025ca6:	f9bd 6074 	ldrsh.w	r6, [sp, #116]	@ 0x74
 8025caa:	6803      	ldr	r3, [r0, #0]
 8025cac:	3201      	adds	r2, #1
 8025cae:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8025cb0:	960b      	str	r6, [sp, #44]	@ 0x2c
 8025cb2:	fa1f fa81 	uxth.w	sl, r1
 8025cb6:	b294      	uxth	r4, r2
 8025cb8:	f9bd 5076 	ldrsh.w	r5, [sp, #118]	@ 0x76
 8025cbc:	4798      	blx	r3
 8025cbe:	2300      	movs	r3, #0
 8025cc0:	f1ba 0f00 	cmp.w	sl, #0
 8025cc4:	bf0c      	ite	eq
 8025cc6:	4632      	moveq	r2, r6
 8025cc8:	2200      	movne	r2, #0
 8025cca:	49af      	ldr	r1, [pc, #700]	@ (8025f88 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x374>)
 8025ccc:	9315      	str	r3, [sp, #84]	@ 0x54
 8025cce:	8809      	ldrh	r1, [r1, #0]
 8025cd0:	f9bd 3072 	ldrsh.w	r3, [sp, #114]	@ 0x72
 8025cd4:	f9bd 6070 	ldrsh.w	r6, [sp, #112]	@ 0x70
 8025cd8:	fb01 f505 	mul.w	r5, r1, r5
 8025cdc:	fb01 6303 	mla	r3, r1, r3, r6
 8025ce0:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8025ce4:	9300      	str	r3, [sp, #0]
 8025ce6:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 8025cea:	9307      	str	r3, [sp, #28]
 8025cec:	b293      	uxth	r3, r2
 8025cee:	9302      	str	r3, [sp, #8]
 8025cf0:	f10b 030e 	add.w	r3, fp, #14
 8025cf4:	9319      	str	r3, [sp, #100]	@ 0x64
 8025cf6:	465b      	mov	r3, fp
 8025cf8:	46d3      	mov	fp, sl
 8025cfa:	469a      	mov	sl, r3
 8025cfc:	00a4      	lsls	r4, r4, #2
 8025cfe:	1d21      	adds	r1, r4, #4
 8025d00:	9113      	str	r1, [sp, #76]	@ 0x4c
 8025d02:	9b07      	ldr	r3, [sp, #28]
 8025d04:	9a00      	ldr	r2, [sp, #0]
 8025d06:	4293      	cmp	r3, r2
 8025d08:	f240 8134 	bls.w	8025f74 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x360>
 8025d0c:	2601      	movs	r6, #1
 8025d0e:	2700      	movs	r7, #0
 8025d10:	9a15      	ldr	r2, [sp, #84]	@ 0x54
 8025d12:	9917      	ldr	r1, [sp, #92]	@ 0x5c
 8025d14:	f8bd 306c 	ldrh.w	r3, [sp, #108]	@ 0x6c
 8025d18:	fa11 f482 	uxtah	r4, r1, r2
 8025d1c:	00a4      	lsls	r4, r4, #2
 8025d1e:	9a01      	ldr	r2, [sp, #4]
 8025d20:	3404      	adds	r4, #4
 8025d22:	1911      	adds	r1, r2, r4
 8025d24:	788a      	ldrb	r2, [r1, #2]
 8025d26:	784d      	ldrb	r5, [r1, #1]
 8025d28:	0212      	lsls	r2, r2, #8
 8025d2a:	78c9      	ldrb	r1, [r1, #3]
 8025d2c:	ea42 4005 	orr.w	r0, r2, r5, lsl #16
 8025d30:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 8025d32:	4308      	orrs	r0, r1
 8025d34:	4629      	mov	r1, r5
 8025d36:	fbbb f3f3 	udiv	r3, fp, r3
 8025d3a:	46bc      	mov	ip, r7
 8025d3c:	46b1      	mov	r9, r6
 8025d3e:	4401      	add	r1, r0
 8025d40:	784a      	ldrb	r2, [r1, #1]
 8025d42:	5c28      	ldrb	r0, [r5, r0]
 8025d44:	0212      	lsls	r2, r2, #8
 8025d46:	9d01      	ldr	r5, [sp, #4]
 8025d48:	f402 72ff 	and.w	r2, r2, #510	@ 0x1fe
 8025d4c:	4302      	orrs	r2, r0
 8025d4e:	9818      	ldr	r0, [sp, #96]	@ 0x60
 8025d50:	5d2c      	ldrb	r4, [r5, r4]
 8025d52:	f88a 200d 	strb.w	r2, [sl, #13]
 8025d56:	b292      	uxth	r2, r2
 8025d58:	1ac3      	subs	r3, r0, r3
 8025d5a:	9209      	str	r2, [sp, #36]	@ 0x24
 8025d5c:	198a      	adds	r2, r1, r6
 8025d5e:	9203      	str	r2, [sp, #12]
 8025d60:	b29b      	uxth	r3, r3
 8025d62:	19a2      	adds	r2, r4, r6
 8025d64:	9712      	str	r7, [sp, #72]	@ 0x48
 8025d66:	960a      	str	r6, [sp, #40]	@ 0x28
 8025d68:	940e      	str	r4, [sp, #56]	@ 0x38
 8025d6a:	9206      	str	r2, [sp, #24]
 8025d6c:	9314      	str	r3, [sp, #80]	@ 0x50
 8025d6e:	9604      	str	r6, [sp, #16]
 8025d70:	f1bb 0f00 	cmp.w	fp, #0
 8025d74:	d037      	beq.n	8025de6 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x1d2>
 8025d76:	45d9      	cmp	r9, fp
 8025d78:	f080 80ce 	bcs.w	8025f18 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x304>
 8025d7c:	ebab 0b09 	sub.w	fp, fp, r9
 8025d80:	fa1f fb8b 	uxth.w	fp, fp
 8025d84:	9b07      	ldr	r3, [sp, #28]
 8025d86:	9a00      	ldr	r2, [sp, #0]
 8025d88:	4293      	cmp	r3, r2
 8025d8a:	f240 80f3 	bls.w	8025f74 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x360>
 8025d8e:	9803      	ldr	r0, [sp, #12]
 8025d90:	9c04      	ldr	r4, [sp, #16]
 8025d92:	7842      	ldrb	r2, [r0, #1]
 8025d94:	f1c4 0107 	rsb	r1, r4, #7
 8025d98:	7803      	ldrb	r3, [r0, #0]
 8025d9a:	408a      	lsls	r2, r1
 8025d9c:	0052      	lsls	r2, r2, #1
 8025d9e:	4123      	asrs	r3, r4
 8025da0:	f402 72ff 	and.w	r2, r2, #510	@ 0x1fe
 8025da4:	1c61      	adds	r1, r4, #1
 8025da6:	b2db      	uxtb	r3, r3
 8025da8:	4313      	orrs	r3, r2
 8025daa:	b2ca      	uxtb	r2, r1
 8025dac:	4611      	mov	r1, r2
 8025dae:	2908      	cmp	r1, #8
 8025db0:	9204      	str	r2, [sp, #16]
 8025db2:	b29a      	uxth	r2, r3
 8025db4:	f000 811a 	beq.w	8025fec <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x3d8>
 8025db8:	3001      	adds	r0, #1
 8025dba:	9003      	str	r0, [sp, #12]
 8025dbc:	990e      	ldr	r1, [sp, #56]	@ 0x38
 8025dbe:	4291      	cmp	r1, r2
 8025dc0:	f0c0 80e6 	bcc.w	8025f90 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x37c>
 8025dc4:	f04f 0901 	mov.w	r9, #1
 8025dc8:	b2db      	uxtb	r3, r3
 8025dca:	f88a 300d 	strb.w	r3, [sl, #13]
 8025dce:	9906      	ldr	r1, [sp, #24]
 8025dd0:	f5b1 7f00 	cmp.w	r1, #512	@ 0x200
 8025dd4:	f0c0 8132 	bcc.w	802603c <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x428>
 8025dd8:	e9cd 2909 	strd	r2, r9, [sp, #36]	@ 0x24
 8025ddc:	f04f 0c00 	mov.w	ip, #0
 8025de0:	f1bb 0f00 	cmp.w	fp, #0
 8025de4:	d1c7      	bne.n	8025d76 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x162>
 8025de6:	9b02      	ldr	r3, [sp, #8]
 8025de8:	4599      	cmp	r9, r3
 8025dea:	461a      	mov	r2, r3
 8025dec:	f0c0 80f0 	bcc.w	8025fd0 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x3bc>
 8025df0:	eba9 0303 	sub.w	r3, r9, r3
 8025df4:	b29b      	uxth	r3, r3
 8025df6:	930c      	str	r3, [sp, #48]	@ 0x30
 8025df8:	2a00      	cmp	r2, #0
 8025dfa:	f000 80fd 	beq.w	8025ff8 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x3e4>
 8025dfe:	4613      	mov	r3, r2
 8025e00:	f8cd b044 	str.w	fp, [sp, #68]	@ 0x44
 8025e04:	9208      	str	r2, [sp, #32]
 8025e06:	4463      	add	r3, ip
 8025e08:	b29b      	uxth	r3, r3
 8025e0a:	f8cd 903c 	str.w	r9, [sp, #60]	@ 0x3c
 8025e0e:	f8cd b040 	str.w	fp, [sp, #64]	@ 0x40
 8025e12:	f8dd e000 	ldr.w	lr, [sp]
 8025e16:	930d      	str	r3, [sp, #52]	@ 0x34
 8025e18:	f8dd 904c 	ldr.w	r9, [sp, #76]	@ 0x4c
 8025e1c:	469b      	mov	fp, r3
 8025e1e:	e048      	b.n	8025eb2 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x29e>
 8025e20:	9905      	ldr	r1, [sp, #20]
 8025e22:	f8be 5000 	ldrh.w	r5, [lr]
 8025e26:	fb01 f202 	mul.w	r2, r1, r2
 8025e2a:	1c50      	adds	r0, r2, #1
 8025e2c:	eb00 2022 	add.w	r0, r0, r2, asr #8
 8025e30:	1200      	asrs	r0, r0, #8
 8025e32:	43c4      	mvns	r4, r0
 8025e34:	b280      	uxth	r0, r0
 8025e36:	b2ff      	uxtb	r7, r7
 8025e38:	fb13 f300 	smulbb	r3, r3, r0
 8025e3c:	fb17 f700 	smulbb	r7, r7, r0
 8025e40:	00e9      	lsls	r1, r5, #3
 8025e42:	b2c9      	uxtb	r1, r1
 8025e44:	10ea      	asrs	r2, r5, #3
 8025e46:	b2e4      	uxtb	r4, r4
 8025e48:	ea41 1151 	orr.w	r1, r1, r1, lsr #5
 8025e4c:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 8025e50:	fb01 3304 	mla	r3, r1, r4, r3
 8025e54:	ea42 1292 	orr.w	r2, r2, r2, lsr #6
 8025e58:	fb02 7704 	mla	r7, r2, r4, r7
 8025e5c:	b29b      	uxth	r3, r3
 8025e5e:	b2bf      	uxth	r7, r7
 8025e60:	1c59      	adds	r1, r3, #1
 8025e62:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8025e66:	1c7a      	adds	r2, r7, #1
 8025e68:	2e01      	cmp	r6, #1
 8025e6a:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8025e6e:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8025e72:	d966      	bls.n	8025f42 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x32e>
 8025e74:	fa5f f888 	uxtb.w	r8, r8
 8025e78:	fb18 f800 	smulbb	r8, r8, r0
 8025e7c:	122d      	asrs	r5, r5, #8
 8025e7e:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 8025e82:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 8025e86:	fb05 8804 	mla	r8, r5, r4, r8
 8025e8a:	fa1f f888 	uxth.w	r8, r8
 8025e8e:	f108 0101 	add.w	r1, r8, #1
 8025e92:	eb01 2118 	add.w	r1, r1, r8, lsr #8
 8025e96:	097f      	lsrs	r7, r7, #5
 8025e98:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
 8025e9c:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 8025ea0:	ea41 03d3 	orr.w	r3, r1, r3, lsr #3
 8025ea4:	433b      	orrs	r3, r7
 8025ea6:	f8ae 3000 	strh.w	r3, [lr]
 8025eaa:	45dc      	cmp	ip, fp
 8025eac:	f10e 0e02 	add.w	lr, lr, #2
 8025eb0:	d04b      	beq.n	8025f4a <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x336>
 8025eb2:	2204      	movs	r2, #4
 8025eb4:	eb0a 030c 	add.w	r3, sl, ip
 8025eb8:	7b5b      	ldrb	r3, [r3, #13]
 8025eba:	f10c 0c01 	add.w	ip, ip, #1
 8025ebe:	fb12 9303 	smlabb	r3, r2, r3, r9
 8025ec2:	9a01      	ldr	r2, [sp, #4]
 8025ec4:	fa1f fc8c 	uxth.w	ip, ip
 8025ec8:	58d3      	ldr	r3, [r2, r3]
 8025eca:	0e1a      	lsrs	r2, r3, #24
 8025ecc:	d0ed      	beq.n	8025eaa <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x296>
 8025ece:	f89a 600c 	ldrb.w	r6, [sl, #12]
 8025ed2:	2aff      	cmp	r2, #255	@ 0xff
 8025ed4:	f106 36ff 	add.w	r6, r6, #4294967295
 8025ed8:	ea4f 4813 	mov.w	r8, r3, lsr #16
 8025edc:	ea4f 2713 	mov.w	r7, r3, lsr #8
 8025ee0:	b2f6      	uxtb	r6, r6
 8025ee2:	b2db      	uxtb	r3, r3
 8025ee4:	d19c      	bne.n	8025e20 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x20c>
 8025ee6:	9905      	ldr	r1, [sp, #20]
 8025ee8:	29ff      	cmp	r1, #255	@ 0xff
 8025eea:	d199      	bne.n	8025e20 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x20c>
 8025eec:	2e01      	cmp	r6, #1
 8025eee:	f240 80c4 	bls.w	802607a <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x466>
 8025ef2:	4a26      	ldr	r2, [pc, #152]	@ (8025f8c <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x378>)
 8025ef4:	00ff      	lsls	r7, r7, #3
 8025ef6:	ea02 2808 	and.w	r8, r2, r8, lsl #8
 8025efa:	ea48 03d3 	orr.w	r3, r8, r3, lsr #3
 8025efe:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 8025f02:	433b      	orrs	r3, r7
 8025f04:	b29b      	uxth	r3, r3
 8025f06:	e7ce      	b.n	8025ea6 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x292>
 8025f08:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 8025f0c:	b289      	uxth	r1, r1
 8025f0e:	fb93 f3f1 	sdiv	r3, r3, r1
 8025f12:	b29a      	uxth	r2, r3
 8025f14:	9218      	str	r2, [sp, #96]	@ 0x60
 8025f16:	e6a8      	b.n	8025c6a <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x56>
 8025f18:	eba9 090b 	sub.w	r9, r9, fp
 8025f1c:	44dc      	add	ip, fp
 8025f1e:	f04f 0b00 	mov.w	fp, #0
 8025f22:	f8bd 302c 	ldrh.w	r3, [sp, #44]	@ 0x2c
 8025f26:	fa1f f989 	uxth.w	r9, r9
 8025f2a:	fa1f fc8c 	uxth.w	ip, ip
 8025f2e:	9302      	str	r3, [sp, #8]
 8025f30:	9b07      	ldr	r3, [sp, #28]
 8025f32:	9a00      	ldr	r2, [sp, #0]
 8025f34:	4293      	cmp	r3, r2
 8025f36:	d91d      	bls.n	8025f74 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x360>
 8025f38:	f1b9 0f00 	cmp.w	r9, #0
 8025f3c:	f47f af18 	bne.w	8025d70 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x15c>
 8025f40:	e725      	b.n	8025d8e <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x17a>
 8025f42:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 8025f46:	433b      	orrs	r3, r7
 8025f48:	e7ad      	b.n	8025ea6 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x292>
 8025f4a:	9b08      	ldr	r3, [sp, #32]
 8025f4c:	9a00      	ldr	r2, [sp, #0]
 8025f4e:	3b01      	subs	r3, #1
 8025f50:	b29b      	uxth	r3, r3
 8025f52:	3301      	adds	r3, #1
 8025f54:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8025f58:	9300      	str	r3, [sp, #0]
 8025f5a:	9b02      	ldr	r3, [sp, #8]
 8025f5c:	e9dd 9b0f 	ldrd	r9, fp, [sp, #60]	@ 0x3c
 8025f60:	4599      	cmp	r9, r3
 8025f62:	d24b      	bcs.n	8025ffc <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x3e8>
 8025f64:	e9dd 9c0c 	ldrd	r9, ip, [sp, #48]	@ 0x30
 8025f68:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 8025f6a:	9a00      	ldr	r2, [sp, #0]
 8025f6c:	9302      	str	r3, [sp, #8]
 8025f6e:	9b07      	ldr	r3, [sp, #28]
 8025f70:	4293      	cmp	r3, r2
 8025f72:	d8e1      	bhi.n	8025f38 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x324>
 8025f74:	4b03      	ldr	r3, [pc, #12]	@ (8025f84 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x370>)
 8025f76:	6818      	ldr	r0, [r3, #0]
 8025f78:	6803      	ldr	r3, [r0, #0]
 8025f7a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8025f7c:	4798      	blx	r3
 8025f7e:	b01f      	add	sp, #124	@ 0x7c
 8025f80:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8025f84:	200830a4 	.word	0x200830a4
 8025f88:	2008309e 	.word	0x2008309e
 8025f8c:	fffff800 	.word	0xfffff800
 8025f90:	9b06      	ldr	r3, [sp, #24]
 8025f92:	429a      	cmp	r2, r3
 8025f94:	d355      	bcc.n	8026042 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x42e>
 8025f96:	980a      	ldr	r0, [sp, #40]	@ 0x28
 8025f98:	f89a 100d 	ldrb.w	r1, [sl, #13]
 8025f9c:	eb0a 0300 	add.w	r3, sl, r0
 8025fa0:	7359      	strb	r1, [r3, #13]
 8025fa2:	f89a 300d 	ldrb.w	r3, [sl, #13]
 8025fa6:	1c41      	adds	r1, r0, #1
 8025fa8:	fa1f f981 	uxth.w	r9, r1
 8025fac:	9c06      	ldr	r4, [sp, #24]
 8025fae:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 8025fb0:	eb0a 0084 	add.w	r0, sl, r4, lsl #2
 8025fb4:	3401      	adds	r4, #1
 8025fb6:	f880 304e 	strb.w	r3, [r0, #78]	@ 0x4e
 8025fba:	b2a3      	uxth	r3, r4
 8025fbc:	f8a0 5050 	strh.w	r5, [r0, #80]	@ 0x50
 8025fc0:	f880 104f 	strb.w	r1, [r0, #79]	@ 0x4f
 8025fc4:	9306      	str	r3, [sp, #24]
 8025fc6:	e9cd 2909 	strd	r2, r9, [sp, #36]	@ 0x24
 8025fca:	f04f 0c00 	mov.w	ip, #0
 8025fce:	e6cf      	b.n	8025d70 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x15c>
 8025fd0:	eba3 0309 	sub.w	r3, r3, r9
 8025fd4:	b29b      	uxth	r3, r3
 8025fd6:	9311      	str	r3, [sp, #68]	@ 0x44
 8025fd8:	f1b9 0f00 	cmp.w	r9, #0
 8025fdc:	f43f aed2 	beq.w	8025d84 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x170>
 8025fe0:	f8cd b030 	str.w	fp, [sp, #48]	@ 0x30
 8025fe4:	f8cd 9020 	str.w	r9, [sp, #32]
 8025fe8:	464b      	mov	r3, r9
 8025fea:	e70c      	b.n	8025e06 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x1f2>
 8025fec:	2100      	movs	r1, #0
 8025fee:	9104      	str	r1, [sp, #16]
 8025ff0:	9903      	ldr	r1, [sp, #12]
 8025ff2:	3102      	adds	r1, #2
 8025ff4:	9103      	str	r1, [sp, #12]
 8025ff6:	e6e1      	b.n	8025dbc <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x1a8>
 8025ff8:	f8cd c034 	str.w	ip, [sp, #52]	@ 0x34
 8025ffc:	4b2d      	ldr	r3, [pc, #180]	@ (80260b4 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x4a0>)
 8025ffe:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 8026000:	881b      	ldrh	r3, [r3, #0]
 8026002:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8026004:	1a5b      	subs	r3, r3, r1
 8026006:	9900      	ldr	r1, [sp, #0]
 8026008:	3201      	adds	r2, #1
 802600a:	eb01 0343 	add.w	r3, r1, r3, lsl #1
 802600e:	9300      	str	r3, [sp, #0]
 8026010:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 8026012:	9212      	str	r2, [sp, #72]	@ 0x48
 8026014:	429a      	cmp	r2, r3
 8026016:	d034      	beq.n	8026082 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x46e>
 8026018:	e9dd 9c0c 	ldrd	r9, ip, [sp, #48]	@ 0x30
 802601c:	f8bd 302c 	ldrh.w	r3, [sp, #44]	@ 0x2c
 8026020:	f8bd b06c 	ldrh.w	fp, [sp, #108]	@ 0x6c
 8026024:	ebab 0b03 	sub.w	fp, fp, r3
 8026028:	fa1f fb8b 	uxth.w	fp, fp
 802602c:	f1bb 0f00 	cmp.w	fp, #0
 8026030:	bf14      	ite	ne
 8026032:	2300      	movne	r3, #0
 8026034:	f04f 0b00 	moveq.w	fp, #0
 8026038:	9302      	str	r3, [sp, #8]
 802603a:	e779      	b.n	8025f30 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x31c>
 802603c:	990a      	ldr	r1, [sp, #40]	@ 0x28
 802603e:	3101      	adds	r1, #1
 8026040:	e7b4      	b.n	8025fac <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x398>
 8026042:	eb0a 0382 	add.w	r3, sl, r2, lsl #2
 8026046:	f893 904f 	ldrb.w	r9, [r3, #79]	@ 0x4f
 802604a:	4613      	mov	r3, r2
 802604c:	f1b9 0f01 	cmp.w	r9, #1
 8026050:	d90d      	bls.n	802606e <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x45a>
 8026052:	f109 010d 	add.w	r1, r9, #13
 8026056:	9c19      	ldr	r4, [sp, #100]	@ 0x64
 8026058:	4451      	add	r1, sl
 802605a:	eb0a 0383 	add.w	r3, sl, r3, lsl #2
 802605e:	f893 004e 	ldrb.w	r0, [r3, #78]	@ 0x4e
 8026062:	f801 0d01 	strb.w	r0, [r1, #-1]!
 8026066:	428c      	cmp	r4, r1
 8026068:	f8b3 3050 	ldrh.w	r3, [r3, #80]	@ 0x50
 802606c:	d1f5      	bne.n	802605a <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x446>
 802606e:	b2db      	uxtb	r3, r3
 8026070:	f88a 300d 	strb.w	r3, [sl, #13]
 8026074:	fa1f f989 	uxth.w	r9, r9
 8026078:	e6a9      	b.n	8025dce <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x1ba>
 802607a:	ea43 2307 	orr.w	r3, r3, r7, lsl #8
 802607e:	b29b      	uxth	r3, r3
 8026080:	e711      	b.n	8025ea6 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x292>
 8026082:	f8bd 3070 	ldrh.w	r3, [sp, #112]	@ 0x70
 8026086:	f8bd 2068 	ldrh.w	r2, [sp, #104]	@ 0x68
 802608a:	9915      	ldr	r1, [sp, #84]	@ 0x54
 802608c:	1a9b      	subs	r3, r3, r2
 802608e:	fa1f fb83 	uxth.w	fp, r3
 8026092:	f1bb 0f00 	cmp.w	fp, #0
 8026096:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8026098:	bf18      	it	ne
 802609a:	2300      	movne	r3, #0
 802609c:	3101      	adds	r1, #1
 802609e:	b29b      	uxth	r3, r3
 80260a0:	9115      	str	r1, [sp, #84]	@ 0x54
 80260a2:	9302      	str	r3, [sp, #8]
 80260a4:	e62d      	b.n	8025d02 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0xee>
 80260a6:	4b04      	ldr	r3, [pc, #16]	@ (80260b8 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x4a4>)
 80260a8:	4a04      	ldr	r2, [pc, #16]	@ (80260bc <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x4a8>)
 80260aa:	f240 51f3 	movw	r1, #1523	@ 0x5f3
 80260ae:	4804      	ldr	r0, [pc, #16]	@ (80260c0 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x4ac>)
 80260b0:	f00c fb62 	bl	8032778 <__assert_func>
 80260b4:	2008309e 	.word	0x2008309e
 80260b8:	08036654 	.word	0x08036654
 80260bc:	08037f1c 	.word	0x08037f1c
 80260c0:	08036560 	.word	0x08036560

080260c4 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h>:
 80260c4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80260c8:	4691      	mov	r9, r2
 80260ca:	8812      	ldrh	r2, [r2, #0]
 80260cc:	b093      	sub	sp, #76	@ 0x4c
 80260ce:	2a01      	cmp	r2, #1
 80260d0:	f89d 4074 	ldrb.w	r4, [sp, #116]	@ 0x74
 80260d4:	f040 8129 	bne.w	802632a <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x266>
 80260d8:	b914      	cbnz	r4, 80260e0 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x1c>
 80260da:	b013      	add	sp, #76	@ 0x4c
 80260dc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80260e0:	461d      	mov	r5, r3
 80260e2:	468a      	mov	sl, r1
 80260e4:	6818      	ldr	r0, [r3, #0]
 80260e6:	6859      	ldr	r1, [r3, #4]
 80260e8:	ab0e      	add	r3, sp, #56	@ 0x38
 80260ea:	c303      	stmia	r3!, {r0, r1}
 80260ec:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 80260ee:	6818      	ldr	r0, [r3, #0]
 80260f0:	6859      	ldr	r1, [r3, #4]
 80260f2:	ab10      	add	r3, sp, #64	@ 0x40
 80260f4:	c303      	stmia	r3!, {r0, r1}
 80260f6:	a80e      	add	r0, sp, #56	@ 0x38
 80260f8:	f7e6 ff62 	bl	800cfc0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80260fc:	4629      	mov	r1, r5
 80260fe:	a810      	add	r0, sp, #64	@ 0x40
 8026100:	f7e6 ff86 	bl	800d010 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8026104:	f9bd 5040 	ldrsh.w	r5, [sp, #64]	@ 0x40
 8026108:	f9bd 6042 	ldrsh.w	r6, [sp, #66]	@ 0x42
 802610c:	f8bd 2038 	ldrh.w	r2, [sp, #56]	@ 0x38
 8026110:	f8bd 303a 	ldrh.w	r3, [sp, #58]	@ 0x3a
 8026114:	488b      	ldr	r0, [pc, #556]	@ (8026344 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x280>)
 8026116:	f8bd 103c 	ldrh.w	r1, [sp, #60]	@ 0x3c
 802611a:	442a      	add	r2, r5
 802611c:	4433      	add	r3, r6
 802611e:	6800      	ldr	r0, [r0, #0]
 8026120:	fb11 5106 	smlabb	r1, r1, r6, r5
 8026124:	f8ad 3042 	strh.w	r3, [sp, #66]	@ 0x42
 8026128:	f8ad 2040 	strh.w	r2, [sp, #64]	@ 0x40
 802612c:	6802      	ldr	r2, [r0, #0]
 802612e:	4e86      	ldr	r6, [pc, #536]	@ (8026348 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x284>)
 8026130:	f8d2 30a0 	ldr.w	r3, [r2, #160]	@ 0xa0
 8026134:	448a      	add	sl, r1
 8026136:	f9bd 1044 	ldrsh.w	r1, [sp, #68]	@ 0x44
 802613a:	42b3      	cmp	r3, r6
 802613c:	910b      	str	r1, [sp, #44]	@ 0x2c
 802613e:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	@ 0x46
 8026142:	f040 80c8 	bne.w	80262d6 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x212>
 8026146:	6841      	ldr	r1, [r0, #4]
 8026148:	4e80      	ldr	r6, [pc, #512]	@ (802634c <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x288>)
 802614a:	680b      	ldr	r3, [r1, #0]
 802614c:	699b      	ldr	r3, [r3, #24]
 802614e:	42b3      	cmp	r3, r6
 8026150:	f040 80e4 	bne.w	802631c <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x258>
 8026154:	6a93      	ldr	r3, [r2, #40]	@ 0x28
 8026156:	4798      	blx	r3
 8026158:	4b7d      	ldr	r3, [pc, #500]	@ (8026350 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x28c>)
 802615a:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	@ 0x42
 802615e:	881b      	ldrh	r3, [r3, #0]
 8026160:	f9bd 1040 	ldrsh.w	r1, [sp, #64]	@ 0x40
 8026164:	2cff      	cmp	r4, #255	@ 0xff
 8026166:	fb03 1202 	mla	r2, r3, r2, r1
 802616a:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 802616e:	d06f      	beq.n	8026250 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x18c>
 8026170:	43e2      	mvns	r2, r4
 8026172:	fb05 f503 	mul.w	r5, r5, r3
 8026176:	eb00 0145 	add.w	r1, r0, r5, lsl #1
 802617a:	4288      	cmp	r0, r1
 802617c:	910c      	str	r1, [sp, #48]	@ 0x30
 802617e:	b2d2      	uxtb	r2, r2
 8026180:	d25e      	bcs.n	8026240 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x17c>
 8026182:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 8026184:	fa1f f884 	uxth.w	r8, r4
 8026188:	0049      	lsls	r1, r1, #1
 802618a:	b292      	uxth	r2, r2
 802618c:	910d      	str	r1, [sp, #52]	@ 0x34
 802618e:	990d      	ldr	r1, [sp, #52]	@ 0x34
 8026190:	eb00 0b01 	add.w	fp, r0, r1
 8026194:	4583      	cmp	fp, r0
 8026196:	d948      	bls.n	802622a <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x166>
 8026198:	4684      	mov	ip, r0
 802619a:	f10a 3eff 	add.w	lr, sl, #4294967295
 802619e:	2103      	movs	r1, #3
 80261a0:	2404      	movs	r4, #4
 80261a2:	f81e 6f01 	ldrb.w	r6, [lr, #1]!
 80261a6:	f8bc 3000 	ldrh.w	r3, [ip]
 80261aa:	fb11 4606 	smlabb	r6, r1, r6, r4
 80261ae:	eb09 0106 	add.w	r1, r9, r6
 80261b2:	788d      	ldrb	r5, [r1, #2]
 80261b4:	784f      	ldrb	r7, [r1, #1]
 80261b6:	00dc      	lsls	r4, r3, #3
 80261b8:	b2e4      	uxtb	r4, r4
 80261ba:	fb14 f402 	smulbb	r4, r4, r2
 80261be:	fb15 f508 	smulbb	r5, r5, r8
 80261c2:	fb17 f708 	smulbb	r7, r7, r8
 80261c6:	f819 6006 	ldrb.w	r6, [r9, r6]
 80261ca:	1219      	asrs	r1, r3, #8
 80261cc:	10db      	asrs	r3, r3, #3
 80261ce:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 80261d2:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 80261d6:	fb06 4608 	mla	r6, r6, r8, r4
 80261da:	fb01 5102 	mla	r1, r1, r2, r5
 80261de:	fb03 7302 	mla	r3, r3, r2, r7
 80261e2:	b2b6      	uxth	r6, r6
 80261e4:	b29b      	uxth	r3, r3
 80261e6:	b28d      	uxth	r5, r1
 80261e8:	1c5c      	adds	r4, r3, #1
 80261ea:	1c69      	adds	r1, r5, #1
 80261ec:	1c77      	adds	r7, r6, #1
 80261ee:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 80261f2:	eb04 2413 	add.w	r4, r4, r3, lsr #8
 80261f6:	eb07 2616 	add.w	r6, r7, r6, lsr #8
 80261fa:	f401 4378 	and.w	r3, r1, #63488	@ 0xf800
 80261fe:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8026202:	0961      	lsrs	r1, r4, #5
 8026204:	4333      	orrs	r3, r6
 8026206:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 802620a:	430b      	orrs	r3, r1
 802620c:	f82c 3b02 	strh.w	r3, [ip], #2
 8026210:	45e3      	cmp	fp, ip
 8026212:	d8c4      	bhi.n	802619e <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0xda>
 8026214:	43c3      	mvns	r3, r0
 8026216:	449b      	add	fp, r3
 8026218:	4b4d      	ldr	r3, [pc, #308]	@ (8026350 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x28c>)
 802621a:	ea4f 0b5b 	mov.w	fp, fp, lsr #1
 802621e:	f10b 0b01 	add.w	fp, fp, #1
 8026222:	881b      	ldrh	r3, [r3, #0]
 8026224:	eb00 004b 	add.w	r0, r0, fp, lsl #1
 8026228:	44da      	add	sl, fp
 802622a:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 802622c:	f9bd 103c 	ldrsh.w	r1, [sp, #60]	@ 0x3c
 8026230:	1b5c      	subs	r4, r3, r5
 8026232:	1b49      	subs	r1, r1, r5
 8026234:	448a      	add	sl, r1
 8026236:	990c      	ldr	r1, [sp, #48]	@ 0x30
 8026238:	eb00 0044 	add.w	r0, r0, r4, lsl #1
 802623c:	4281      	cmp	r1, r0
 802623e:	d8a6      	bhi.n	802618e <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0xca>
 8026240:	4b40      	ldr	r3, [pc, #256]	@ (8026344 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x280>)
 8026242:	6818      	ldr	r0, [r3, #0]
 8026244:	6803      	ldr	r3, [r0, #0]
 8026246:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8026248:	4798      	blx	r3
 802624a:	b013      	add	sp, #76	@ 0x4c
 802624c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8026250:	fb05 f503 	mul.w	r5, r5, r3
 8026254:	eb00 0e45 	add.w	lr, r0, r5, lsl #1
 8026258:	4570      	cmp	r0, lr
 802625a:	d2f1      	bcs.n	8026240 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x17c>
 802625c:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 802625e:	f04f 0c03 	mov.w	ip, #3
 8026262:	2704      	movs	r7, #4
 8026264:	4693      	mov	fp, r2
 8026266:	0051      	lsls	r1, r2, #1
 8026268:	4e3a      	ldr	r6, [pc, #232]	@ (8026354 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x290>)
 802626a:	910b      	str	r1, [sp, #44]	@ 0x2c
 802626c:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 802626e:	eb00 0802 	add.w	r8, r0, r2
 8026272:	4580      	cmp	r8, r0
 8026274:	d923      	bls.n	80262be <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x1fa>
 8026276:	4604      	mov	r4, r0
 8026278:	f10a 35ff 	add.w	r5, sl, #4294967295
 802627c:	f815 2f01 	ldrb.w	r2, [r5, #1]!
 8026280:	fb1c 7202 	smlabb	r2, ip, r2, r7
 8026284:	eb09 0302 	add.w	r3, r9, r2
 8026288:	7859      	ldrb	r1, [r3, #1]
 802628a:	789b      	ldrb	r3, [r3, #2]
 802628c:	00c9      	lsls	r1, r1, #3
 802628e:	f819 2002 	ldrb.w	r2, [r9, r2]
 8026292:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8026296:	ea06 2303 	and.w	r3, r6, r3, lsl #8
 802629a:	430b      	orrs	r3, r1
 802629c:	ea43 03d2 	orr.w	r3, r3, r2, lsr #3
 80262a0:	f824 3b02 	strh.w	r3, [r4], #2
 80262a4:	45a0      	cmp	r8, r4
 80262a6:	d8e9      	bhi.n	802627c <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x1b8>
 80262a8:	43c3      	mvns	r3, r0
 80262aa:	4498      	add	r8, r3
 80262ac:	4b28      	ldr	r3, [pc, #160]	@ (8026350 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x28c>)
 80262ae:	ea4f 0858 	mov.w	r8, r8, lsr #1
 80262b2:	f108 0801 	add.w	r8, r8, #1
 80262b6:	881b      	ldrh	r3, [r3, #0]
 80262b8:	eb00 0048 	add.w	r0, r0, r8, lsl #1
 80262bc:	44c2      	add	sl, r8
 80262be:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	@ 0x3c
 80262c2:	eba3 010b 	sub.w	r1, r3, fp
 80262c6:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 80262ca:	eba2 020b 	sub.w	r2, r2, fp
 80262ce:	4586      	cmp	lr, r0
 80262d0:	4492      	add	sl, r2
 80262d2:	d8cb      	bhi.n	802626c <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x1a8>
 80262d4:	e7b4      	b.n	8026240 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x17c>
 80262d6:	4798      	blx	r3
 80262d8:	2801      	cmp	r0, #1
 80262da:	d122      	bne.n	8026322 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x25e>
 80262dc:	4b1e      	ldr	r3, [pc, #120]	@ (8026358 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x294>)
 80262de:	6818      	ldr	r0, [r3, #0]
 80262e0:	b350      	cbz	r0, 8026338 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x274>
 80262e2:	2600      	movs	r6, #0
 80262e4:	270b      	movs	r7, #11
 80262e6:	4b1a      	ldr	r3, [pc, #104]	@ (8026350 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x28c>)
 80262e8:	b2aa      	uxth	r2, r5
 80262ea:	881d      	ldrh	r5, [r3, #0]
 80262ec:	f8bd 302c 	ldrh.w	r3, [sp, #44]	@ 0x2c
 80262f0:	9404      	str	r4, [sp, #16]
 80262f2:	9506      	str	r5, [sp, #24]
 80262f4:	f8bd 4042 	ldrh.w	r4, [sp, #66]	@ 0x42
 80262f8:	f8bd 503c 	ldrh.w	r5, [sp, #60]	@ 0x3c
 80262fc:	e9cd 3201 	strd	r3, r2, [sp, #4]
 8026300:	4651      	mov	r1, sl
 8026302:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
 8026306:	464a      	mov	r2, r9
 8026308:	9608      	str	r6, [sp, #32]
 802630a:	9605      	str	r6, [sp, #20]
 802630c:	9707      	str	r7, [sp, #28]
 802630e:	9503      	str	r5, [sp, #12]
 8026310:	9400      	str	r4, [sp, #0]
 8026312:	f7fa fdc9 	bl	8020ea8 <_ZN8touchgfx8HALGPU2D13dma2dBlitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_>
 8026316:	b013      	add	sp, #76	@ 0x4c
 8026318:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802631c:	4608      	mov	r0, r1
 802631e:	4798      	blx	r3
 8026320:	e7da      	b.n	80262d8 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x214>
 8026322:	4b08      	ldr	r3, [pc, #32]	@ (8026344 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x280>)
 8026324:	6818      	ldr	r0, [r3, #0]
 8026326:	6802      	ldr	r2, [r0, #0]
 8026328:	e714      	b.n	8026154 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x90>
 802632a:	4b0c      	ldr	r3, [pc, #48]	@ (802635c <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x298>)
 802632c:	4a0c      	ldr	r2, [pc, #48]	@ (8026360 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x29c>)
 802632e:	f240 61d9 	movw	r1, #1753	@ 0x6d9
 8026332:	480c      	ldr	r0, [pc, #48]	@ (8026364 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x2a0>)
 8026334:	f00c fa20 	bl	8032778 <__assert_func>
 8026338:	4b0b      	ldr	r3, [pc, #44]	@ (8026368 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x2a4>)
 802633a:	4a0c      	ldr	r2, [pc, #48]	@ (802636c <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x2a8>)
 802633c:	217c      	movs	r1, #124	@ 0x7c
 802633e:	480c      	ldr	r0, [pc, #48]	@ (8026370 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x2ac>)
 8026340:	f00c fa1a 	bl	8032778 <__assert_func>
 8026344:	200830a4 	.word	0x200830a4
 8026348:	0800121d 	.word	0x0800121d
 802634c:	0800bd65 	.word	0x0800bd65
 8026350:	2008309e 	.word	0x2008309e
 8026354:	fffff800 	.word	0xfffff800
 8026358:	20083544 	.word	0x20083544
 802635c:	08036584 	.word	0x08036584
 8026360:	080371c0 	.word	0x080371c0
 8026364:	08036560 	.word	0x08036560
 8026368:	080364bc 	.word	0x080364bc
 802636c:	08036d28 	.word	0x08036d28
 8026370:	080364e4 	.word	0x080364e4

08026374 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_16BPPEPKhS2_RKNS_4RectES5_h>:
 8026374:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8026378:	4693      	mov	fp, r2
 802637a:	7812      	ldrb	r2, [r2, #0]
 802637c:	b08d      	sub	sp, #52	@ 0x34
 802637e:	2a01      	cmp	r2, #1
 8026380:	f89d 705c 	ldrb.w	r7, [sp, #92]	@ 0x5c
 8026384:	f040 8252 	bne.w	802682c <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x4b8>
 8026388:	b917      	cbnz	r7, 8026390 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x1c>
 802638a:	b00d      	add	sp, #52	@ 0x34
 802638c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8026390:	461e      	mov	r6, r3
 8026392:	6818      	ldr	r0, [r3, #0]
 8026394:	460c      	mov	r4, r1
 8026396:	6859      	ldr	r1, [r3, #4]
 8026398:	ab08      	add	r3, sp, #32
 802639a:	c303      	stmia	r3!, {r0, r1}
 802639c:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 802639e:	f10b 0b04 	add.w	fp, fp, #4
 80263a2:	6818      	ldr	r0, [r3, #0]
 80263a4:	6859      	ldr	r1, [r3, #4]
 80263a6:	ab0a      	add	r3, sp, #40	@ 0x28
 80263a8:	c303      	stmia	r3!, {r0, r1}
 80263aa:	a808      	add	r0, sp, #32
 80263ac:	f7e6 fe08 	bl	800cfc0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80263b0:	4631      	mov	r1, r6
 80263b2:	a80a      	add	r0, sp, #40	@ 0x28
 80263b4:	f7e6 fe2c 	bl	800d010 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80263b8:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	@ 0x24
 80263bc:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	@ 0x28
 80263c0:	f003 0201 	and.w	r2, r3, #1
 80263c4:	4615      	mov	r5, r2
 80263c6:	9204      	str	r2, [sp, #16]
 80263c8:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
 80263cc:	f8bd 0022 	ldrh.w	r0, [sp, #34]	@ 0x22
 80263d0:	442b      	add	r3, r5
 80263d2:	fb02 1303 	mla	r3, r2, r3, r1
 80263d6:	f8bd 6020 	ldrh.w	r6, [sp, #32]
 80263da:	4402      	add	r2, r0
 80263dc:	48b9      	ldr	r0, [pc, #740]	@ (80266c4 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x350>)
 80263de:	440e      	add	r6, r1
 80263e0:	6800      	ldr	r0, [r0, #0]
 80263e2:	f8ad 202a 	strh.w	r2, [sp, #42]	@ 0x2a
 80263e6:	f8ad 6028 	strh.w	r6, [sp, #40]	@ 0x28
 80263ea:	eb03 73d3 	add.w	r3, r3, r3, lsr #31
 80263ee:	eb04 0363 	add.w	r3, r4, r3, asr #1
 80263f2:	6802      	ldr	r2, [r0, #0]
 80263f4:	f9bd 502c 	ldrsh.w	r5, [sp, #44]	@ 0x2c
 80263f8:	9301      	str	r3, [sp, #4]
 80263fa:	f001 0301 	and.w	r3, r1, #1
 80263fe:	6a92      	ldr	r2, [r2, #40]	@ 0x28
 8026400:	9303      	str	r3, [sp, #12]
 8026402:	9502      	str	r5, [sp, #8]
 8026404:	f9bd 402e 	ldrsh.w	r4, [sp, #46]	@ 0x2e
 8026408:	4790      	blx	r2
 802640a:	4baf      	ldr	r3, [pc, #700]	@ (80266c8 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x354>)
 802640c:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
 8026410:	881b      	ldrh	r3, [r3, #0]
 8026412:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	@ 0x28
 8026416:	2fff      	cmp	r7, #255	@ 0xff
 8026418:	fb03 1202 	mla	r2, r3, r2, r1
 802641c:	eb00 0a42 	add.w	sl, r0, r2, lsl #1
 8026420:	f000 8154 	beq.w	80266cc <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x358>
 8026424:	ea6f 0c07 	mvn.w	ip, r7
 8026428:	fb03 f404 	mul.w	r4, r3, r4
 802642c:	eb0a 0344 	add.w	r3, sl, r4, lsl #1
 8026430:	459a      	cmp	sl, r3
 8026432:	9306      	str	r3, [sp, #24]
 8026434:	fa5f fc8c 	uxtb.w	ip, ip
 8026438:	f080 80b6 	bcs.w	80265a8 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x234>
 802643c:	1e6b      	subs	r3, r5, #1
 802643e:	b2bf      	uxth	r7, r7
 8026440:	fa1f fc8c 	uxth.w	ip, ip
 8026444:	9307      	str	r3, [sp, #28]
 8026446:	9b03      	ldr	r3, [sp, #12]
 8026448:	2b00      	cmp	r3, #0
 802644a:	f040 80fc 	bne.w	8026646 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x2d2>
 802644e:	9b01      	ldr	r3, [sp, #4]
 8026450:	f8dd 9008 	ldr.w	r9, [sp, #8]
 8026454:	9300      	str	r3, [sp, #0]
 8026456:	f1b9 0f01 	cmp.w	r9, #1
 802645a:	f340 808e 	ble.w	802657a <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x206>
 802645e:	f1a9 0302 	sub.w	r3, r9, #2
 8026462:	ea4f 0953 	mov.w	r9, r3, lsr #1
 8026466:	9305      	str	r3, [sp, #20]
 8026468:	9b00      	ldr	r3, [sp, #0]
 802646a:	f10a 0808 	add.w	r8, sl, #8
 802646e:	eb08 0889 	add.w	r8, r8, r9, lsl #2
 8026472:	f10a 0604 	add.w	r6, sl, #4
 8026476:	f103 3eff 	add.w	lr, r3, #4294967295
 802647a:	f81e 1f01 	ldrb.w	r1, [lr, #1]!
 802647e:	f836 3c04 	ldrh.w	r3, [r6, #-4]
 8026482:	0909      	lsrs	r1, r1, #4
 8026484:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8026488:	eb0b 0001 	add.w	r0, fp, r1
 802648c:	7882      	ldrb	r2, [r0, #2]
 802648e:	7844      	ldrb	r4, [r0, #1]
 8026490:	00dd      	lsls	r5, r3, #3
 8026492:	b2ed      	uxtb	r5, r5
 8026494:	fb12 f207 	smulbb	r2, r2, r7
 8026498:	fb15 f50c 	smulbb	r5, r5, ip
 802649c:	fb14 f407 	smulbb	r4, r4, r7
 80264a0:	f81b 1001 	ldrb.w	r1, [fp, r1]
 80264a4:	1218      	asrs	r0, r3, #8
 80264a6:	10db      	asrs	r3, r3, #3
 80264a8:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 80264ac:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 80264b0:	fb00 200c 	mla	r0, r0, ip, r2
 80264b4:	fb01 5507 	mla	r5, r1, r7, r5
 80264b8:	fb03 440c 	mla	r4, r3, ip, r4
 80264bc:	b281      	uxth	r1, r0
 80264be:	b2ad      	uxth	r5, r5
 80264c0:	b2a4      	uxth	r4, r4
 80264c2:	1c68      	adds	r0, r5, #1
 80264c4:	1c4b      	adds	r3, r1, #1
 80264c6:	1c62      	adds	r2, r4, #1
 80264c8:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 80264cc:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 80264d0:	eb00 2115 	add.w	r1, r0, r5, lsr #8
 80264d4:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 80264d8:	f403 4378 	and.w	r3, r3, #63488	@ 0xf800
 80264dc:	0952      	lsrs	r2, r2, #5
 80264de:	430b      	orrs	r3, r1
 80264e0:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 80264e4:	4313      	orrs	r3, r2
 80264e6:	f826 3c04 	strh.w	r3, [r6, #-4]
 80264ea:	f89e 1000 	ldrb.w	r1, [lr]
 80264ee:	f836 3c02 	ldrh.w	r3, [r6, #-2]
 80264f2:	f001 010f 	and.w	r1, r1, #15
 80264f6:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 80264fa:	eb0b 0001 	add.w	r0, fp, r1
 80264fe:	7882      	ldrb	r2, [r0, #2]
 8026500:	00dd      	lsls	r5, r3, #3
 8026502:	7840      	ldrb	r0, [r0, #1]
 8026504:	b2ed      	uxtb	r5, r5
 8026506:	fb12 f207 	smulbb	r2, r2, r7
 802650a:	fb10 f007 	smulbb	r0, r0, r7
 802650e:	fb15 f50c 	smulbb	r5, r5, ip
 8026512:	f81b 1001 	ldrb.w	r1, [fp, r1]
 8026516:	121c      	asrs	r4, r3, #8
 8026518:	10db      	asrs	r3, r3, #3
 802651a:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 802651e:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 8026522:	fb04 240c 	mla	r4, r4, ip, r2
 8026526:	fb01 5507 	mla	r5, r1, r7, r5
 802652a:	fb03 020c 	mla	r2, r3, ip, r0
 802652e:	b2a1      	uxth	r1, r4
 8026530:	b2ad      	uxth	r5, r5
 8026532:	b290      	uxth	r0, r2
 8026534:	1c4b      	adds	r3, r1, #1
 8026536:	1c6c      	adds	r4, r5, #1
 8026538:	1c42      	adds	r2, r0, #1
 802653a:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 802653e:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 8026542:	eb04 2115 	add.w	r1, r4, r5, lsr #8
 8026546:	f403 4378 	and.w	r3, r3, #63488	@ 0xf800
 802654a:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 802654e:	0952      	lsrs	r2, r2, #5
 8026550:	430b      	orrs	r3, r1
 8026552:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8026556:	4313      	orrs	r3, r2
 8026558:	f826 3c02 	strh.w	r3, [r6, #-2]
 802655c:	3604      	adds	r6, #4
 802655e:	45b0      	cmp	r8, r6
 8026560:	d18b      	bne.n	802647a <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x106>
 8026562:	9a00      	ldr	r2, [sp, #0]
 8026564:	f109 0301 	add.w	r3, r9, #1
 8026568:	441a      	add	r2, r3
 802656a:	eb0a 0a83 	add.w	sl, sl, r3, lsl #2
 802656e:	9b05      	ldr	r3, [sp, #20]
 8026570:	ebc9 79c9 	rsb	r9, r9, r9, lsl #31
 8026574:	9200      	str	r2, [sp, #0]
 8026576:	eb03 0949 	add.w	r9, r3, r9, lsl #1
 802657a:	f1b9 0f01 	cmp.w	r9, #1
 802657e:	d01b      	beq.n	80265b8 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x244>
 8026580:	9904      	ldr	r1, [sp, #16]
 8026582:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	@ 0x24
 8026586:	4a50      	ldr	r2, [pc, #320]	@ (80266c8 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x354>)
 8026588:	440b      	add	r3, r1
 802658a:	8812      	ldrh	r2, [r2, #0]
 802658c:	9902      	ldr	r1, [sp, #8]
 802658e:	eb03 73d3 	add.w	r3, r3, r3, lsr #31
 8026592:	1a52      	subs	r2, r2, r1
 8026594:	eb0a 0a42 	add.w	sl, sl, r2, lsl #1
 8026598:	9a01      	ldr	r2, [sp, #4]
 802659a:	eb02 0363 	add.w	r3, r2, r3, asr #1
 802659e:	9301      	str	r3, [sp, #4]
 80265a0:	9b06      	ldr	r3, [sp, #24]
 80265a2:	4553      	cmp	r3, sl
 80265a4:	f63f af4f 	bhi.w	8026446 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0xd2>
 80265a8:	4b46      	ldr	r3, [pc, #280]	@ (80266c4 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x350>)
 80265aa:	6818      	ldr	r0, [r3, #0]
 80265ac:	6803      	ldr	r3, [r0, #0]
 80265ae:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80265b0:	4798      	blx	r3
 80265b2:	b00d      	add	sp, #52	@ 0x34
 80265b4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80265b8:	9b00      	ldr	r3, [sp, #0]
 80265ba:	781e      	ldrb	r6, [r3, #0]
 80265bc:	f8ba 3000 	ldrh.w	r3, [sl]
 80265c0:	0936      	lsrs	r6, r6, #4
 80265c2:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 80265c6:	eb0b 0006 	add.w	r0, fp, r6
 80265ca:	7881      	ldrb	r1, [r0, #2]
 80265cc:	7845      	ldrb	r5, [r0, #1]
 80265ce:	00dc      	lsls	r4, r3, #3
 80265d0:	b2e4      	uxtb	r4, r4
 80265d2:	fb14 f40c 	smulbb	r4, r4, ip
 80265d6:	fb11 f107 	smulbb	r1, r1, r7
 80265da:	fb15 f507 	smulbb	r5, r5, r7
 80265de:	f81b 0006 	ldrb.w	r0, [fp, r6]
 80265e2:	121a      	asrs	r2, r3, #8
 80265e4:	10db      	asrs	r3, r3, #3
 80265e6:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 80265ea:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 80265ee:	fb00 4007 	mla	r0, r0, r7, r4
 80265f2:	fb02 120c 	mla	r2, r2, ip, r1
 80265f6:	fb03 530c 	mla	r3, r3, ip, r5
 80265fa:	b291      	uxth	r1, r2
 80265fc:	b29b      	uxth	r3, r3
 80265fe:	b280      	uxth	r0, r0
 8026600:	1c4a      	adds	r2, r1, #1
 8026602:	1c5d      	adds	r5, r3, #1
 8026604:	1c44      	adds	r4, r0, #1
 8026606:	eb02 2211 	add.w	r2, r2, r1, lsr #8
 802660a:	eb04 2010 	add.w	r0, r4, r0, lsr #8
 802660e:	eb05 2113 	add.w	r1, r5, r3, lsr #8
 8026612:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8026616:	f402 4378 	and.w	r3, r2, #63488	@ 0xf800
 802661a:	094a      	lsrs	r2, r1, #5
 802661c:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8026620:	4303      	orrs	r3, r0
 8026622:	4313      	orrs	r3, r2
 8026624:	f8aa 3000 	strh.w	r3, [sl]
 8026628:	4b27      	ldr	r3, [pc, #156]	@ (80266c8 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x354>)
 802662a:	9902      	ldr	r1, [sp, #8]
 802662c:	881a      	ldrh	r2, [r3, #0]
 802662e:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	@ 0x24
 8026632:	1a52      	subs	r2, r2, r1
 8026634:	eb0a 0a42 	add.w	sl, sl, r2, lsl #1
 8026638:	9a04      	ldr	r2, [sp, #16]
 802663a:	f10a 0a02 	add.w	sl, sl, #2
 802663e:	4413      	add	r3, r2
 8026640:	eb03 73d3 	add.w	r3, r3, r3, lsr #31
 8026644:	e7a8      	b.n	8026598 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x224>
 8026646:	9b01      	ldr	r3, [sp, #4]
 8026648:	f8dd 901c 	ldr.w	r9, [sp, #28]
 802664c:	781e      	ldrb	r6, [r3, #0]
 802664e:	f8ba 3000 	ldrh.w	r3, [sl]
 8026652:	f006 060f 	and.w	r6, r6, #15
 8026656:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 802665a:	eb0b 0006 	add.w	r0, fp, r6
 802665e:	7881      	ldrb	r1, [r0, #2]
 8026660:	7845      	ldrb	r5, [r0, #1]
 8026662:	00dc      	lsls	r4, r3, #3
 8026664:	b2e4      	uxtb	r4, r4
 8026666:	fb14 f40c 	smulbb	r4, r4, ip
 802666a:	fb11 f107 	smulbb	r1, r1, r7
 802666e:	fb15 f507 	smulbb	r5, r5, r7
 8026672:	f81b 0006 	ldrb.w	r0, [fp, r6]
 8026676:	121a      	asrs	r2, r3, #8
 8026678:	10db      	asrs	r3, r3, #3
 802667a:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 802667e:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 8026682:	fb00 4007 	mla	r0, r0, r7, r4
 8026686:	fb02 120c 	mla	r2, r2, ip, r1
 802668a:	fb03 530c 	mla	r3, r3, ip, r5
 802668e:	b291      	uxth	r1, r2
 8026690:	b29b      	uxth	r3, r3
 8026692:	b280      	uxth	r0, r0
 8026694:	1c4a      	adds	r2, r1, #1
 8026696:	1c5d      	adds	r5, r3, #1
 8026698:	1c44      	adds	r4, r0, #1
 802669a:	eb02 2211 	add.w	r2, r2, r1, lsr #8
 802669e:	eb04 2010 	add.w	r0, r4, r0, lsr #8
 80266a2:	eb05 2113 	add.w	r1, r5, r3, lsr #8
 80266a6:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 80266aa:	f402 4378 	and.w	r3, r2, #63488	@ 0xf800
 80266ae:	094a      	lsrs	r2, r1, #5
 80266b0:	4303      	orrs	r3, r0
 80266b2:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 80266b6:	4313      	orrs	r3, r2
 80266b8:	f82a 3b02 	strh.w	r3, [sl], #2
 80266bc:	9b01      	ldr	r3, [sp, #4]
 80266be:	3301      	adds	r3, #1
 80266c0:	9300      	str	r3, [sp, #0]
 80266c2:	e6c8      	b.n	8026456 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0xe2>
 80266c4:	200830a4 	.word	0x200830a4
 80266c8:	2008309e 	.word	0x2008309e
 80266cc:	fb03 f304 	mul.w	r3, r3, r4
 80266d0:	eb0a 0843 	add.w	r8, sl, r3, lsl #1
 80266d4:	45c2      	cmp	sl, r8
 80266d6:	f4bf af67 	bcs.w	80265a8 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x234>
 80266da:	9b02      	ldr	r3, [sp, #8]
 80266dc:	4f57      	ldr	r7, [pc, #348]	@ (802683c <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x4c8>)
 80266de:	3b01      	subs	r3, #1
 80266e0:	f8dd 9004 	ldr.w	r9, [sp, #4]
 80266e4:	9300      	str	r3, [sp, #0]
 80266e6:	9b03      	ldr	r3, [sp, #12]
 80266e8:	2b00      	cmp	r3, #0
 80266ea:	f000 808a 	beq.w	8026802 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x48e>
 80266ee:	f899 2000 	ldrb.w	r2, [r9]
 80266f2:	9e00      	ldr	r6, [sp, #0]
 80266f4:	f002 020f 	and.w	r2, r2, #15
 80266f8:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80266fc:	eb0b 0302 	add.w	r3, fp, r2
 8026700:	7859      	ldrb	r1, [r3, #1]
 8026702:	789b      	ldrb	r3, [r3, #2]
 8026704:	00c9      	lsls	r1, r1, #3
 8026706:	f81b 0002 	ldrb.w	r0, [fp, r2]
 802670a:	ea07 2303 	and.w	r3, r7, r3, lsl #8
 802670e:	f401 62fc 	and.w	r2, r1, #2016	@ 0x7e0
 8026712:	4313      	orrs	r3, r2
 8026714:	ea43 03d0 	orr.w	r3, r3, r0, lsr #3
 8026718:	f109 0e01 	add.w	lr, r9, #1
 802671c:	f82a 3b02 	strh.w	r3, [sl], #2
 8026720:	2e01      	cmp	r6, #1
 8026722:	dd40      	ble.n	80267a6 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x432>
 8026724:	3e02      	subs	r6, #2
 8026726:	ea4f 0c56 	mov.w	ip, r6, lsr #1
 802672a:	f10a 0508 	add.w	r5, sl, #8
 802672e:	eb05 058c 	add.w	r5, r5, ip, lsl #2
 8026732:	f10a 0004 	add.w	r0, sl, #4
 8026736:	f10e 34ff 	add.w	r4, lr, #4294967295
 802673a:	f814 2f01 	ldrb.w	r2, [r4, #1]!
 802673e:	3004      	adds	r0, #4
 8026740:	0912      	lsrs	r2, r2, #4
 8026742:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8026746:	eb0b 0302 	add.w	r3, fp, r2
 802674a:	7859      	ldrb	r1, [r3, #1]
 802674c:	789b      	ldrb	r3, [r3, #2]
 802674e:	00c9      	lsls	r1, r1, #3
 8026750:	f81b 2002 	ldrb.w	r2, [fp, r2]
 8026754:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8026758:	ea07 2303 	and.w	r3, r7, r3, lsl #8
 802675c:	430b      	orrs	r3, r1
 802675e:	ea43 03d2 	orr.w	r3, r3, r2, lsr #3
 8026762:	f820 3c08 	strh.w	r3, [r0, #-8]
 8026766:	7822      	ldrb	r2, [r4, #0]
 8026768:	f002 020f 	and.w	r2, r2, #15
 802676c:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8026770:	eb0b 0302 	add.w	r3, fp, r2
 8026774:	7859      	ldrb	r1, [r3, #1]
 8026776:	789b      	ldrb	r3, [r3, #2]
 8026778:	00c9      	lsls	r1, r1, #3
 802677a:	f81b 2002 	ldrb.w	r2, [fp, r2]
 802677e:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8026782:	ea07 2303 	and.w	r3, r7, r3, lsl #8
 8026786:	430b      	orrs	r3, r1
 8026788:	ea43 03d2 	orr.w	r3, r3, r2, lsr #3
 802678c:	f820 3c06 	strh.w	r3, [r0, #-6]
 8026790:	4285      	cmp	r5, r0
 8026792:	d1d2      	bne.n	802673a <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x3c6>
 8026794:	f10c 0301 	add.w	r3, ip, #1
 8026798:	ebcc 7ccc 	rsb	ip, ip, ip, lsl #31
 802679c:	449e      	add	lr, r3
 802679e:	eb0a 0a83 	add.w	sl, sl, r3, lsl #2
 80267a2:	eb06 064c 	add.w	r6, r6, ip, lsl #1
 80267a6:	2e01      	cmp	r6, #1
 80267a8:	d12e      	bne.n	8026808 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x494>
 80267aa:	f89e 2000 	ldrb.w	r2, [lr]
 80267ae:	0912      	lsrs	r2, r2, #4
 80267b0:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80267b4:	eb0b 0302 	add.w	r3, fp, r2
 80267b8:	7859      	ldrb	r1, [r3, #1]
 80267ba:	789b      	ldrb	r3, [r3, #2]
 80267bc:	00c9      	lsls	r1, r1, #3
 80267be:	f81b 0002 	ldrb.w	r0, [fp, r2]
 80267c2:	ea07 2303 	and.w	r3, r7, r3, lsl #8
 80267c6:	f401 62fc 	and.w	r2, r1, #2016	@ 0x7e0
 80267ca:	4313      	orrs	r3, r2
 80267cc:	ea43 03d0 	orr.w	r3, r3, r0, lsr #3
 80267d0:	f8aa 3000 	strh.w	r3, [sl]
 80267d4:	4b1a      	ldr	r3, [pc, #104]	@ (8026840 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x4cc>)
 80267d6:	9902      	ldr	r1, [sp, #8]
 80267d8:	881a      	ldrh	r2, [r3, #0]
 80267da:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	@ 0x24
 80267de:	1a52      	subs	r2, r2, r1
 80267e0:	eb0a 0a42 	add.w	sl, sl, r2, lsl #1
 80267e4:	9a04      	ldr	r2, [sp, #16]
 80267e6:	f10a 0a02 	add.w	sl, sl, #2
 80267ea:	4413      	add	r3, r2
 80267ec:	eb03 73d3 	add.w	r3, r3, r3, lsr #31
 80267f0:	45d0      	cmp	r8, sl
 80267f2:	eb09 0963 	add.w	r9, r9, r3, asr #1
 80267f6:	f67f aed7 	bls.w	80265a8 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x234>
 80267fa:	9b03      	ldr	r3, [sp, #12]
 80267fc:	2b00      	cmp	r3, #0
 80267fe:	f47f af76 	bne.w	80266ee <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x37a>
 8026802:	46ce      	mov	lr, r9
 8026804:	9e02      	ldr	r6, [sp, #8]
 8026806:	e78b      	b.n	8026720 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x3ac>
 8026808:	9904      	ldr	r1, [sp, #16]
 802680a:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	@ 0x24
 802680e:	4a0c      	ldr	r2, [pc, #48]	@ (8026840 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x4cc>)
 8026810:	440b      	add	r3, r1
 8026812:	8812      	ldrh	r2, [r2, #0]
 8026814:	9902      	ldr	r1, [sp, #8]
 8026816:	eb03 73d3 	add.w	r3, r3, r3, lsr #31
 802681a:	1a52      	subs	r2, r2, r1
 802681c:	eb0a 0a42 	add.w	sl, sl, r2, lsl #1
 8026820:	45d0      	cmp	r8, sl
 8026822:	eb09 0963 	add.w	r9, r9, r3, asr #1
 8026826:	f63f af5e 	bhi.w	80266e6 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x372>
 802682a:	e6bd      	b.n	80265a8 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x234>
 802682c:	4b05      	ldr	r3, [pc, #20]	@ (8026844 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x4d0>)
 802682e:	4a06      	ldr	r2, [pc, #24]	@ (8026848 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x4d4>)
 8026830:	f44f 61e9 	mov.w	r1, #1864	@ 0x748
 8026834:	4805      	ldr	r0, [pc, #20]	@ (802684c <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x4d8>)
 8026836:	f00b ff9f 	bl	8032778 <__assert_func>
 802683a:	bf00      	nop
 802683c:	fffff800 	.word	0xfffff800
 8026840:	2008309e 	.word	0x2008309e
 8026844:	08036624 	.word	0x08036624
 8026848:	080374fc 	.word	0x080374fc
 802684c:	08036560 	.word	0x08036560

08026850 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_16BPPEPKhS2_RKNS_4RectES5_h>:
 8026850:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8026854:	b08f      	sub	sp, #60	@ 0x3c
 8026856:	7814      	ldrb	r4, [r2, #0]
 8026858:	461d      	mov	r5, r3
 802685a:	f89d 3064 	ldrb.w	r3, [sp, #100]	@ 0x64
 802685e:	2c01      	cmp	r4, #1
 8026860:	9206      	str	r2, [sp, #24]
 8026862:	9101      	str	r1, [sp, #4]
 8026864:	9304      	str	r3, [sp, #16]
 8026866:	f040 8142 	bne.w	8026aee <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x29e>
 802686a:	b913      	cbnz	r3, 8026872 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x22>
 802686c:	b00f      	add	sp, #60	@ 0x3c
 802686e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8026872:	6828      	ldr	r0, [r5, #0]
 8026874:	6869      	ldr	r1, [r5, #4]
 8026876:	ab0a      	add	r3, sp, #40	@ 0x28
 8026878:	c303      	stmia	r3!, {r0, r1}
 802687a:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 802687c:	6818      	ldr	r0, [r3, #0]
 802687e:	6859      	ldr	r1, [r3, #4]
 8026880:	ab0c      	add	r3, sp, #48	@ 0x30
 8026882:	c303      	stmia	r3!, {r0, r1}
 8026884:	a80a      	add	r0, sp, #40	@ 0x28
 8026886:	f7e6 fb9b 	bl	800cfc0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 802688a:	4629      	mov	r1, r5
 802688c:	a80c      	add	r0, sp, #48	@ 0x30
 802688e:	f7e6 fbbf 	bl	800d010 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8026892:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 8026896:	f8bd 1030 	ldrh.w	r1, [sp, #48]	@ 0x30
 802689a:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 802689e:	bfdd      	ittte	le
 80268a0:	f44f 6480 	movle.w	r4, #1024	@ 0x400
 80268a4:	b29a      	uxthle	r2, r3
 80268a6:	fb94 f4f2 	sdivle	r4, r4, r2
 80268aa:	b29a      	uxthgt	r2, r3
 80268ac:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 80268b0:	fb93 f0f4 	sdiv	r0, r3, r4
 80268b4:	b285      	uxth	r5, r0
 80268b6:	fb04 3c15 	mls	ip, r4, r5, r3
 80268ba:	fb1c 1c02 	smlabb	ip, ip, r2, r1
 80268be:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	@ 0x2e
 80268c2:	fa1f fb8c 	uxth.w	fp, ip
 80268c6:	4422      	add	r2, r4
 80268c8:	3a01      	subs	r2, #1
 80268ca:	fb92 f4f4 	sdiv	r4, r2, r4
 80268ce:	2d00      	cmp	r5, #0
 80268d0:	f040 8105 	bne.w	8026ade <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x28e>
 80268d4:	f8bd 202a 	ldrh.w	r2, [sp, #42]	@ 0x2a
 80268d8:	f8bd 0028 	ldrh.w	r0, [sp, #40]	@ 0x28
 80268dc:	4413      	add	r3, r2
 80268de:	4a87      	ldr	r2, [pc, #540]	@ (8026afc <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x2ac>)
 80268e0:	4401      	add	r1, r0
 80268e2:	6810      	ldr	r0, [r2, #0]
 80268e4:	f9bd 2034 	ldrsh.w	r2, [sp, #52]	@ 0x34
 80268e8:	f8ad 1030 	strh.w	r1, [sp, #48]	@ 0x30
 80268ec:	4616      	mov	r6, r2
 80268ee:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 80268f2:	6803      	ldr	r3, [r0, #0]
 80268f4:	9209      	str	r2, [sp, #36]	@ 0x24
 80268f6:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80268f8:	f9bd 5036 	ldrsh.w	r5, [sp, #54]	@ 0x36
 80268fc:	4798      	blx	r3
 80268fe:	9f04      	ldr	r7, [sp, #16]
 8026900:	f1bb 0f00 	cmp.w	fp, #0
 8026904:	bf0c      	ite	eq
 8026906:	4633      	moveq	r3, r6
 8026908:	2300      	movne	r3, #0
 802690a:	ea6f 0807 	mvn.w	r8, r7
 802690e:	497c      	ldr	r1, [pc, #496]	@ (8026b00 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x2b0>)
 8026910:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
 8026914:	8809      	ldrh	r1, [r1, #0]
 8026916:	f9bd 6030 	ldrsh.w	r6, [sp, #48]	@ 0x30
 802691a:	fb01 f505 	mul.w	r5, r1, r5
 802691e:	fb01 6202 	mla	r2, r1, r2, r6
 8026922:	b2a4      	uxth	r4, r4
 8026924:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8026928:	eb00 0245 	add.w	r2, r0, r5, lsl #1
 802692c:	00a4      	lsls	r4, r4, #2
 802692e:	1d21      	adds	r1, r4, #4
 8026930:	4290      	cmp	r0, r2
 8026932:	9202      	str	r2, [sp, #8]
 8026934:	9108      	str	r1, [sp, #32]
 8026936:	fa1f fa83 	uxth.w	sl, r3
 802693a:	fa5f f888 	uxtb.w	r8, r8
 802693e:	d228      	bcs.n	8026992 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x142>
 8026940:	2300      	movs	r3, #0
 8026942:	469c      	mov	ip, r3
 8026944:	9303      	str	r3, [sp, #12]
 8026946:	fa1f f888 	uxth.w	r8, r8
 802694a:	fa1f f987 	uxth.w	r9, r7
 802694e:	f1bc 0f00 	cmp.w	ip, #0
 8026952:	d10f      	bne.n	8026974 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x124>
 8026954:	9901      	ldr	r1, [sp, #4]
 8026956:	780a      	ldrb	r2, [r1, #0]
 8026958:	ea4f 1c92 	mov.w	ip, r2, lsr #6
 802695c:	f10c 33ff 	add.w	r3, ip, #4294967295
 8026960:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 8026964:	2b02      	cmp	r3, #2
 8026966:	9203      	str	r2, [sp, #12]
 8026968:	f200 80b3 	bhi.w	8026ad2 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x282>
 802696c:	3101      	adds	r1, #1
 802696e:	9101      	str	r1, [sp, #4]
 8026970:	fa1f fc8c 	uxth.w	ip, ip
 8026974:	f1bb 0f00 	cmp.w	fp, #0
 8026978:	d013      	beq.n	80269a2 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x152>
 802697a:	45dc      	cmp	ip, fp
 802697c:	f080 80a0 	bcs.w	8026ac0 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x270>
 8026980:	ebab 0c0c 	sub.w	ip, fp, ip
 8026984:	fa1f fb8c 	uxth.w	fp, ip
 8026988:	f04f 0c00 	mov.w	ip, #0
 802698c:	9b02      	ldr	r3, [sp, #8]
 802698e:	4283      	cmp	r3, r0
 8026990:	d8dd      	bhi.n	802694e <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0xfe>
 8026992:	4b5a      	ldr	r3, [pc, #360]	@ (8026afc <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x2ac>)
 8026994:	6818      	ldr	r0, [r3, #0]
 8026996:	6803      	ldr	r3, [r0, #0]
 8026998:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 802699a:	4798      	blx	r3
 802699c:	b00f      	add	sp, #60	@ 0x3c
 802699e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80269a2:	2303      	movs	r3, #3
 80269a4:	4619      	mov	r1, r3
 80269a6:	9a08      	ldr	r2, [sp, #32]
 80269a8:	9b03      	ldr	r3, [sp, #12]
 80269aa:	45d4      	cmp	ip, sl
 80269ac:	fb11 2703 	smlabb	r7, r1, r3, r2
 80269b0:	9b06      	ldr	r3, [sp, #24]
 80269b2:	441f      	add	r7, r3
 80269b4:	d362      	bcc.n	8026a7c <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x22c>
 80269b6:	ebac 030a 	sub.w	r3, ip, sl
 80269ba:	b29b      	uxth	r3, r3
 80269bc:	9305      	str	r3, [sp, #20]
 80269be:	9b04      	ldr	r3, [sp, #16]
 80269c0:	4654      	mov	r4, sl
 80269c2:	2bff      	cmp	r3, #255	@ 0xff
 80269c4:	f8cd b01c 	str.w	fp, [sp, #28]
 80269c8:	d062      	beq.n	8026a90 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x240>
 80269ca:	2c00      	cmp	r4, #0
 80269cc:	d038      	beq.n	8026a40 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x1f0>
 80269ce:	f104 3eff 	add.w	lr, r4, #4294967295
 80269d2:	fa1f fe8e 	uxth.w	lr, lr
 80269d6:	f10e 0e01 	add.w	lr, lr, #1
 80269da:	eb00 0e4e 	add.w	lr, r0, lr, lsl #1
 80269de:	8802      	ldrh	r2, [r0, #0]
 80269e0:	78bd      	ldrb	r5, [r7, #2]
 80269e2:	00d4      	lsls	r4, r2, #3
 80269e4:	7879      	ldrb	r1, [r7, #1]
 80269e6:	b2e4      	uxtb	r4, r4
 80269e8:	fb14 f408 	smulbb	r4, r4, r8
 80269ec:	fb15 f509 	smulbb	r5, r5, r9
 80269f0:	fb11 f109 	smulbb	r1, r1, r9
 80269f4:	783e      	ldrb	r6, [r7, #0]
 80269f6:	1213      	asrs	r3, r2, #8
 80269f8:	10d2      	asrs	r2, r2, #3
 80269fa:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
 80269fe:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 8026a02:	fb06 4409 	mla	r4, r6, r9, r4
 8026a06:	fb03 5308 	mla	r3, r3, r8, r5
 8026a0a:	fb02 1208 	mla	r2, r2, r8, r1
 8026a0e:	b2a4      	uxth	r4, r4
 8026a10:	b291      	uxth	r1, r2
 8026a12:	b29d      	uxth	r5, r3
 8026a14:	1c62      	adds	r2, r4, #1
 8026a16:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 8026a1a:	1c6b      	adds	r3, r5, #1
 8026a1c:	1c4a      	adds	r2, r1, #1
 8026a1e:	eb02 2211 	add.w	r2, r2, r1, lsr #8
 8026a22:	eb03 2315 	add.w	r3, r3, r5, lsr #8
 8026a26:	f3c4 21c4 	ubfx	r1, r4, #11, #5
 8026a2a:	f403 4378 	and.w	r3, r3, #63488	@ 0xf800
 8026a2e:	0952      	lsrs	r2, r2, #5
 8026a30:	430b      	orrs	r3, r1
 8026a32:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8026a36:	4313      	orrs	r3, r2
 8026a38:	f820 3b02 	strh.w	r3, [r0], #2
 8026a3c:	4570      	cmp	r0, lr
 8026a3e:	d1ce      	bne.n	80269de <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x18e>
 8026a40:	45d4      	cmp	ip, sl
 8026a42:	d316      	bcc.n	8026a72 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x222>
 8026a44:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8026a46:	f8bd b02c 	ldrh.w	fp, [sp, #44]	@ 0x2c
 8026a4a:	4b2d      	ldr	r3, [pc, #180]	@ (8026b00 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x2b0>)
 8026a4c:	fa1f fa82 	uxth.w	sl, r2
 8026a50:	ebab 0b0a 	sub.w	fp, fp, sl
 8026a54:	881b      	ldrh	r3, [r3, #0]
 8026a56:	fa1f fb8b 	uxth.w	fp, fp
 8026a5a:	f1bb 0f00 	cmp.w	fp, #0
 8026a5e:	eba3 0302 	sub.w	r3, r3, r2
 8026a62:	f8dd c014 	ldr.w	ip, [sp, #20]
 8026a66:	bf18      	it	ne
 8026a68:	f04f 0a00 	movne.w	sl, #0
 8026a6c:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8026a70:	e78c      	b.n	802698c <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x13c>
 8026a72:	f8dd c014 	ldr.w	ip, [sp, #20]
 8026a76:	f8dd a01c 	ldr.w	sl, [sp, #28]
 8026a7a:	e787      	b.n	802698c <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x13c>
 8026a7c:	ebaa 020c 	sub.w	r2, sl, ip
 8026a80:	b293      	uxth	r3, r2
 8026a82:	9307      	str	r3, [sp, #28]
 8026a84:	9b04      	ldr	r3, [sp, #16]
 8026a86:	4664      	mov	r4, ip
 8026a88:	2bff      	cmp	r3, #255	@ 0xff
 8026a8a:	f8cd b014 	str.w	fp, [sp, #20]
 8026a8e:	d19c      	bne.n	80269ca <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x17a>
 8026a90:	2c00      	cmp	r4, #0
 8026a92:	d0d5      	beq.n	8026a40 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x1f0>
 8026a94:	3c01      	subs	r4, #1
 8026a96:	b2a4      	uxth	r4, r4
 8026a98:	3401      	adds	r4, #1
 8026a9a:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8026a9e:	787a      	ldrb	r2, [r7, #1]
 8026aa0:	78bb      	ldrb	r3, [r7, #2]
 8026aa2:	4918      	ldr	r1, [pc, #96]	@ (8026b04 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x2b4>)
 8026aa4:	00d2      	lsls	r2, r2, #3
 8026aa6:	ea01 2303 	and.w	r3, r1, r3, lsl #8
 8026aaa:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8026aae:	7839      	ldrb	r1, [r7, #0]
 8026ab0:	4313      	orrs	r3, r2
 8026ab2:	ea43 03d1 	orr.w	r3, r3, r1, lsr #3
 8026ab6:	f820 3b02 	strh.w	r3, [r0], #2
 8026aba:	42a0      	cmp	r0, r4
 8026abc:	d1ef      	bne.n	8026a9e <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x24e>
 8026abe:	e7bf      	b.n	8026a40 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x1f0>
 8026ac0:	ebac 0c0b 	sub.w	ip, ip, fp
 8026ac4:	fa1f fc8c 	uxth.w	ip, ip
 8026ac8:	f8bd a024 	ldrh.w	sl, [sp, #36]	@ 0x24
 8026acc:	f04f 0b00 	mov.w	fp, #0
 8026ad0:	e75c      	b.n	802698c <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x13c>
 8026ad2:	460b      	mov	r3, r1
 8026ad4:	3302      	adds	r3, #2
 8026ad6:	f891 c001 	ldrb.w	ip, [r1, #1]
 8026ada:	9301      	str	r3, [sp, #4]
 8026adc:	e74a      	b.n	8026974 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x124>
 8026ade:	9a06      	ldr	r2, [sp, #24]
 8026ae0:	9801      	ldr	r0, [sp, #4]
 8026ae2:	f852 2025 	ldr.w	r2, [r2, r5, lsl #2]
 8026ae6:	ba12      	rev	r2, r2
 8026ae8:	4410      	add	r0, r2
 8026aea:	9001      	str	r0, [sp, #4]
 8026aec:	e6f2      	b.n	80268d4 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x84>
 8026aee:	4b06      	ldr	r3, [pc, #24]	@ (8026b08 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x2b8>)
 8026af0:	4a06      	ldr	r2, [pc, #24]	@ (8026b0c <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x2bc>)
 8026af2:	f240 71c2 	movw	r1, #1986	@ 0x7c2
 8026af6:	4806      	ldr	r0, [pc, #24]	@ (8026b10 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x2c0>)
 8026af8:	f00b fe3e 	bl	8032778 <__assert_func>
 8026afc:	200830a4 	.word	0x200830a4
 8026b00:	2008309e 	.word	0x2008309e
 8026b04:	fffff800 	.word	0xfffff800
 8026b08:	08036624 	.word	0x08036624
 8026b0c:	080376a0 	.word	0x080376a0
 8026b10:	08036560 	.word	0x08036560

08026b14 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h>:
 8026b14:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8026b18:	b09d      	sub	sp, #116	@ 0x74
 8026b1a:	7814      	ldrb	r4, [r2, #0]
 8026b1c:	461d      	mov	r5, r3
 8026b1e:	f89d 309c 	ldrb.w	r3, [sp, #156]	@ 0x9c
 8026b22:	2c01      	cmp	r4, #1
 8026b24:	9211      	str	r2, [sp, #68]	@ 0x44
 8026b26:	9113      	str	r1, [sp, #76]	@ 0x4c
 8026b28:	930f      	str	r3, [sp, #60]	@ 0x3c
 8026b2a:	f040 820a 	bne.w	8026f42 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x42e>
 8026b2e:	b913      	cbnz	r3, 8026b36 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x22>
 8026b30:	b01d      	add	sp, #116	@ 0x74
 8026b32:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8026b36:	6869      	ldr	r1, [r5, #4]
 8026b38:	4683      	mov	fp, r0
 8026b3a:	6828      	ldr	r0, [r5, #0]
 8026b3c:	ab18      	add	r3, sp, #96	@ 0x60
 8026b3e:	c303      	stmia	r3!, {r0, r1}
 8026b40:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 8026b42:	6818      	ldr	r0, [r3, #0]
 8026b44:	6859      	ldr	r1, [r3, #4]
 8026b46:	ab1a      	add	r3, sp, #104	@ 0x68
 8026b48:	c303      	stmia	r3!, {r0, r1}
 8026b4a:	a818      	add	r0, sp, #96	@ 0x60
 8026b4c:	f7e6 fa38 	bl	800cfc0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8026b50:	4629      	mov	r1, r5
 8026b52:	a81a      	add	r0, sp, #104	@ 0x68
 8026b54:	f7e6 fa5c 	bl	800d010 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8026b58:	f9bd 6064 	ldrsh.w	r6, [sp, #100]	@ 0x64
 8026b5c:	f5b6 6f80 	cmp.w	r6, #1024	@ 0x400
 8026b60:	f340 814b 	ble.w	8026dfa <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x2e6>
 8026b64:	b2b0      	uxth	r0, r6
 8026b66:	9416      	str	r4, [sp, #88]	@ 0x58
 8026b68:	f9bd 306a 	ldrsh.w	r3, [sp, #106]	@ 0x6a
 8026b6c:	f9bd 2066 	ldrsh.w	r2, [sp, #102]	@ 0x66
 8026b70:	fb93 f1f4 	sdiv	r1, r3, r4
 8026b74:	4422      	add	r2, r4
 8026b76:	3a01      	subs	r2, #1
 8026b78:	fb92 f2f4 	sdiv	r2, r2, r4
 8026b7c:	b289      	uxth	r1, r1
 8026b7e:	fb04 3411 	mls	r4, r4, r1, r3
 8026b82:	9114      	str	r1, [sp, #80]	@ 0x50
 8026b84:	f8bd 1068 	ldrh.w	r1, [sp, #104]	@ 0x68
 8026b88:	f8bd 7060 	ldrh.w	r7, [sp, #96]	@ 0x60
 8026b8c:	fb14 1600 	smlabb	r6, r4, r0, r1
 8026b90:	f8bd 5062 	ldrh.w	r5, [sp, #98]	@ 0x62
 8026b94:	48a4      	ldr	r0, [pc, #656]	@ (8026e28 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x314>)
 8026b96:	4439      	add	r1, r7
 8026b98:	442b      	add	r3, r5
 8026b9a:	6800      	ldr	r0, [r0, #0]
 8026b9c:	f8ad 1068 	strh.w	r1, [sp, #104]	@ 0x68
 8026ba0:	f8ad 306a 	strh.w	r3, [sp, #106]	@ 0x6a
 8026ba4:	f9bd 706c 	ldrsh.w	r7, [sp, #108]	@ 0x6c
 8026ba8:	6803      	ldr	r3, [r0, #0]
 8026baa:	b2b5      	uxth	r5, r6
 8026bac:	3201      	adds	r2, #1
 8026bae:	9501      	str	r5, [sp, #4]
 8026bb0:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8026bb2:	970b      	str	r7, [sp, #44]	@ 0x2c
 8026bb4:	b294      	uxth	r4, r2
 8026bb6:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	@ 0x6e
 8026bba:	4798      	blx	r3
 8026bbc:	2100      	movs	r1, #0
 8026bbe:	2d00      	cmp	r5, #0
 8026bc0:	4d9a      	ldr	r5, [pc, #616]	@ (8026e2c <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x318>)
 8026bc2:	bf08      	it	eq
 8026bc4:	463a      	moveq	r2, r7
 8026bc6:	882d      	ldrh	r5, [r5, #0]
 8026bc8:	9112      	str	r1, [sp, #72]	@ 0x48
 8026bca:	f9bd 7068 	ldrsh.w	r7, [sp, #104]	@ 0x68
 8026bce:	f9bd 106a 	ldrsh.w	r1, [sp, #106]	@ 0x6a
 8026bd2:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8026bd4:	fb05 7101 	mla	r1, r5, r1, r7
 8026bd8:	ea6f 0c03 	mvn.w	ip, r3
 8026bdc:	fb05 f306 	mul.w	r3, r5, r6
 8026be0:	eb00 0141 	add.w	r1, r0, r1, lsl #1
 8026be4:	9100      	str	r1, [sp, #0]
 8026be6:	eb01 0143 	add.w	r1, r1, r3, lsl #1
 8026bea:	f10b 030e 	add.w	r3, fp, #14
 8026bee:	9317      	str	r3, [sp, #92]	@ 0x5c
 8026bf0:	465b      	mov	r3, fp
 8026bf2:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 8026bf4:	bf18      	it	ne
 8026bf6:	2200      	movne	r2, #0
 8026bf8:	eb05 0484 	add.w	r4, r5, r4, lsl #2
 8026bfc:	f104 0904 	add.w	r9, r4, #4
 8026c00:	46cb      	mov	fp, r9
 8026c02:	4699      	mov	r9, r3
 8026c04:	460b      	mov	r3, r1
 8026c06:	b292      	uxth	r2, r2
 8026c08:	9202      	str	r2, [sp, #8]
 8026c0a:	f8bd a03c 	ldrh.w	sl, [sp, #60]	@ 0x3c
 8026c0e:	fa5f f28c 	uxtb.w	r2, ip
 8026c12:	9107      	str	r1, [sp, #28]
 8026c14:	9215      	str	r2, [sp, #84]	@ 0x54
 8026c16:	9a00      	ldr	r2, [sp, #0]
 8026c18:	4293      	cmp	r3, r2
 8026c1a:	f240 80fd 	bls.w	8026e18 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x304>
 8026c1e:	9a01      	ldr	r2, [sp, #4]
 8026c20:	f8bd 3064 	ldrh.w	r3, [sp, #100]	@ 0x64
 8026c24:	9914      	ldr	r1, [sp, #80]	@ 0x50
 8026c26:	fbb2 f3f3 	udiv	r3, r2, r3
 8026c2a:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8026c2c:	2701      	movs	r7, #1
 8026c2e:	fa11 f482 	uxtah	r4, r1, r2
 8026c32:	00a4      	lsls	r4, r4, #2
 8026c34:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8026c36:	3404      	adds	r4, #4
 8026c38:	1911      	adds	r1, r2, r4
 8026c3a:	788a      	ldrb	r2, [r1, #2]
 8026c3c:	784d      	ldrb	r5, [r1, #1]
 8026c3e:	0212      	lsls	r2, r2, #8
 8026c40:	78c9      	ldrb	r1, [r1, #3]
 8026c42:	ea42 4005 	orr.w	r0, r2, r5, lsl #16
 8026c46:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 8026c48:	4308      	orrs	r0, r1
 8026c4a:	4629      	mov	r1, r5
 8026c4c:	2600      	movs	r6, #0
 8026c4e:	4401      	add	r1, r0
 8026c50:	784a      	ldrb	r2, [r1, #1]
 8026c52:	5c28      	ldrb	r0, [r5, r0]
 8026c54:	0212      	lsls	r2, r2, #8
 8026c56:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 8026c58:	f402 72ff 	and.w	r2, r2, #510	@ 0x1fe
 8026c5c:	4302      	orrs	r2, r0
 8026c5e:	9816      	ldr	r0, [sp, #88]	@ 0x58
 8026c60:	5d2c      	ldrb	r4, [r5, r4]
 8026c62:	f889 200d 	strb.w	r2, [r9, #13]
 8026c66:	b292      	uxth	r2, r2
 8026c68:	1ac3      	subs	r3, r0, r3
 8026c6a:	9209      	str	r2, [sp, #36]	@ 0x24
 8026c6c:	19ca      	adds	r2, r1, r7
 8026c6e:	9205      	str	r2, [sp, #20]
 8026c70:	b29b      	uxth	r3, r3
 8026c72:	19e2      	adds	r2, r4, r7
 8026c74:	f8bd e054 	ldrh.w	lr, [sp, #84]	@ 0x54
 8026c78:	960e      	str	r6, [sp, #56]	@ 0x38
 8026c7a:	970a      	str	r7, [sp, #40]	@ 0x28
 8026c7c:	940d      	str	r4, [sp, #52]	@ 0x34
 8026c7e:	9206      	str	r2, [sp, #24]
 8026c80:	9310      	str	r3, [sp, #64]	@ 0x40
 8026c82:	9704      	str	r7, [sp, #16]
 8026c84:	9b01      	ldr	r3, [sp, #4]
 8026c86:	2b00      	cmp	r3, #0
 8026c88:	d034      	beq.n	8026cf4 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x1e0>
 8026c8a:	42bb      	cmp	r3, r7
 8026c8c:	f240 811a 	bls.w	8026ec4 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x3b0>
 8026c90:	1bdf      	subs	r7, r3, r7
 8026c92:	b2bb      	uxth	r3, r7
 8026c94:	9301      	str	r3, [sp, #4]
 8026c96:	9a00      	ldr	r2, [sp, #0]
 8026c98:	9b07      	ldr	r3, [sp, #28]
 8026c9a:	4293      	cmp	r3, r2
 8026c9c:	f240 80bc 	bls.w	8026e18 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x304>
 8026ca0:	9805      	ldr	r0, [sp, #20]
 8026ca2:	9c04      	ldr	r4, [sp, #16]
 8026ca4:	7842      	ldrb	r2, [r0, #1]
 8026ca6:	f1c4 0107 	rsb	r1, r4, #7
 8026caa:	7803      	ldrb	r3, [r0, #0]
 8026cac:	408a      	lsls	r2, r1
 8026cae:	0052      	lsls	r2, r2, #1
 8026cb0:	4123      	asrs	r3, r4
 8026cb2:	f402 72ff 	and.w	r2, r2, #510	@ 0x1fe
 8026cb6:	1c61      	adds	r1, r4, #1
 8026cb8:	b2db      	uxtb	r3, r3
 8026cba:	4313      	orrs	r3, r2
 8026cbc:	b2ca      	uxtb	r2, r1
 8026cbe:	4611      	mov	r1, r2
 8026cc0:	2908      	cmp	r1, #8
 8026cc2:	9204      	str	r2, [sp, #16]
 8026cc4:	b29a      	uxth	r2, r3
 8026cc6:	f000 8107 	beq.w	8026ed8 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x3c4>
 8026cca:	3001      	adds	r0, #1
 8026ccc:	9005      	str	r0, [sp, #20]
 8026cce:	990d      	ldr	r1, [sp, #52]	@ 0x34
 8026cd0:	4291      	cmp	r1, r2
 8026cd2:	f0c0 80d9 	bcc.w	8026e88 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x374>
 8026cd6:	2701      	movs	r7, #1
 8026cd8:	b2db      	uxtb	r3, r3
 8026cda:	f889 300d 	strb.w	r3, [r9, #13]
 8026cde:	9906      	ldr	r1, [sp, #24]
 8026ce0:	f5b1 7f00 	cmp.w	r1, #512	@ 0x200
 8026ce4:	f0c0 80fe 	bcc.w	8026ee4 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x3d0>
 8026ce8:	9b01      	ldr	r3, [sp, #4]
 8026cea:	e9cd 2709 	strd	r2, r7, [sp, #36]	@ 0x24
 8026cee:	2600      	movs	r6, #0
 8026cf0:	2b00      	cmp	r3, #0
 8026cf2:	d1ca      	bne.n	8026c8a <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x176>
 8026cf4:	9b02      	ldr	r3, [sp, #8]
 8026cf6:	429f      	cmp	r7, r3
 8026cf8:	461a      	mov	r2, r3
 8026cfa:	f0c0 8099 	bcc.w	8026e30 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x31c>
 8026cfe:	1afb      	subs	r3, r7, r3
 8026d00:	b29b      	uxth	r3, r3
 8026d02:	9308      	str	r3, [sp, #32]
 8026d04:	9b01      	ldr	r3, [sp, #4]
 8026d06:	9203      	str	r2, [sp, #12]
 8026d08:	930c      	str	r3, [sp, #48]	@ 0x30
 8026d0a:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8026d0c:	2bff      	cmp	r3, #255	@ 0xff
 8026d0e:	9b03      	ldr	r3, [sp, #12]
 8026d10:	f000 809a 	beq.w	8026e48 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x334>
 8026d14:	2b00      	cmp	r3, #0
 8026d16:	d049      	beq.n	8026dac <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x298>
 8026d18:	eb06 0803 	add.w	r8, r6, r3
 8026d1c:	f8dd c000 	ldr.w	ip, [sp]
 8026d20:	fa1f f888 	uxth.w	r8, r8
 8026d24:	eb09 0306 	add.w	r3, r9, r6
 8026d28:	7b5c      	ldrb	r4, [r3, #13]
 8026d2a:	f8bc 3000 	ldrh.w	r3, [ip]
 8026d2e:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 8026d32:	eb0b 0204 	add.w	r2, fp, r4
 8026d36:	7890      	ldrb	r0, [r2, #2]
 8026d38:	7855      	ldrb	r5, [r2, #1]
 8026d3a:	00d9      	lsls	r1, r3, #3
 8026d3c:	b2c9      	uxtb	r1, r1
 8026d3e:	fb11 f10e 	smulbb	r1, r1, lr
 8026d42:	fb10 f00a 	smulbb	r0, r0, sl
 8026d46:	fb15 f50a 	smulbb	r5, r5, sl
 8026d4a:	f81b 4004 	ldrb.w	r4, [fp, r4]
 8026d4e:	121a      	asrs	r2, r3, #8
 8026d50:	10db      	asrs	r3, r3, #3
 8026d52:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 8026d56:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 8026d5a:	fb04 140a 	mla	r4, r4, sl, r1
 8026d5e:	fb02 020e 	mla	r2, r2, lr, r0
 8026d62:	fb03 530e 	mla	r3, r3, lr, r5
 8026d66:	b2a4      	uxth	r4, r4
 8026d68:	b29b      	uxth	r3, r3
 8026d6a:	b290      	uxth	r0, r2
 8026d6c:	1c59      	adds	r1, r3, #1
 8026d6e:	1c42      	adds	r2, r0, #1
 8026d70:	1c65      	adds	r5, r4, #1
 8026d72:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 8026d76:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 8026d7a:	eb05 2414 	add.w	r4, r5, r4, lsr #8
 8026d7e:	f402 4378 	and.w	r3, r2, #63488	@ 0xf800
 8026d82:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 8026d86:	094a      	lsrs	r2, r1, #5
 8026d88:	3601      	adds	r6, #1
 8026d8a:	4323      	orrs	r3, r4
 8026d8c:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8026d90:	b2b6      	uxth	r6, r6
 8026d92:	4313      	orrs	r3, r2
 8026d94:	4546      	cmp	r6, r8
 8026d96:	f82c 3b02 	strh.w	r3, [ip], #2
 8026d9a:	d1c3      	bne.n	8026d24 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x210>
 8026d9c:	9b03      	ldr	r3, [sp, #12]
 8026d9e:	9a00      	ldr	r2, [sp, #0]
 8026da0:	3b01      	subs	r3, #1
 8026da2:	b29b      	uxth	r3, r3
 8026da4:	3301      	adds	r3, #1
 8026da6:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8026daa:	9300      	str	r3, [sp, #0]
 8026dac:	9b02      	ldr	r3, [sp, #8]
 8026dae:	429f      	cmp	r7, r3
 8026db0:	d32b      	bcc.n	8026e0a <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x2f6>
 8026db2:	4b1e      	ldr	r3, [pc, #120]	@ (8026e2c <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x318>)
 8026db4:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 8026db6:	881b      	ldrh	r3, [r3, #0]
 8026db8:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8026dba:	1a5b      	subs	r3, r3, r1
 8026dbc:	9900      	ldr	r1, [sp, #0]
 8026dbe:	3201      	adds	r2, #1
 8026dc0:	eb01 0343 	add.w	r3, r1, r3, lsl #1
 8026dc4:	9300      	str	r3, [sp, #0]
 8026dc6:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8026dc8:	920e      	str	r2, [sp, #56]	@ 0x38
 8026dca:	429a      	cmp	r2, r3
 8026dcc:	f000 80a7 	beq.w	8026f1e <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x40a>
 8026dd0:	f8bd 202c 	ldrh.w	r2, [sp, #44]	@ 0x2c
 8026dd4:	f8bd 3064 	ldrh.w	r3, [sp, #100]	@ 0x64
 8026dd8:	9f08      	ldr	r7, [sp, #32]
 8026dda:	1a9b      	subs	r3, r3, r2
 8026ddc:	b29b      	uxth	r3, r3
 8026dde:	2b00      	cmp	r3, #0
 8026de0:	bf14      	ite	ne
 8026de2:	2200      	movne	r2, #0
 8026de4:	2300      	moveq	r3, #0
 8026de6:	9202      	str	r2, [sp, #8]
 8026de8:	9301      	str	r3, [sp, #4]
 8026dea:	9b07      	ldr	r3, [sp, #28]
 8026dec:	9a00      	ldr	r2, [sp, #0]
 8026dee:	4293      	cmp	r3, r2
 8026df0:	d912      	bls.n	8026e18 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x304>
 8026df2:	2f00      	cmp	r7, #0
 8026df4:	f47f af46 	bne.w	8026c84 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x170>
 8026df8:	e752      	b.n	8026ca0 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x18c>
 8026dfa:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 8026dfe:	b2b0      	uxth	r0, r6
 8026e00:	fb94 f4f0 	sdiv	r4, r4, r0
 8026e04:	b2a3      	uxth	r3, r4
 8026e06:	9316      	str	r3, [sp, #88]	@ 0x58
 8026e08:	e6ae      	b.n	8026b68 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x54>
 8026e0a:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8026e0c:	9a00      	ldr	r2, [sp, #0]
 8026e0e:	9302      	str	r3, [sp, #8]
 8026e10:	9b07      	ldr	r3, [sp, #28]
 8026e12:	9f08      	ldr	r7, [sp, #32]
 8026e14:	4293      	cmp	r3, r2
 8026e16:	d8ec      	bhi.n	8026df2 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x2de>
 8026e18:	4b03      	ldr	r3, [pc, #12]	@ (8026e28 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x314>)
 8026e1a:	6818      	ldr	r0, [r3, #0]
 8026e1c:	6803      	ldr	r3, [r0, #0]
 8026e1e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8026e20:	4798      	blx	r3
 8026e22:	b01d      	add	sp, #116	@ 0x74
 8026e24:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8026e28:	200830a4 	.word	0x200830a4
 8026e2c:	2008309e 	.word	0x2008309e
 8026e30:	9b01      	ldr	r3, [sp, #4]
 8026e32:	9703      	str	r7, [sp, #12]
 8026e34:	9308      	str	r3, [sp, #32]
 8026e36:	9b02      	ldr	r3, [sp, #8]
 8026e38:	1bdb      	subs	r3, r3, r7
 8026e3a:	b29b      	uxth	r3, r3
 8026e3c:	930c      	str	r3, [sp, #48]	@ 0x30
 8026e3e:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8026e40:	2bff      	cmp	r3, #255	@ 0xff
 8026e42:	9b03      	ldr	r3, [sp, #12]
 8026e44:	f47f af66 	bne.w	8026d14 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x200>
 8026e48:	2b00      	cmp	r3, #0
 8026e4a:	d0af      	beq.n	8026dac <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x298>
 8026e4c:	18f4      	adds	r4, r6, r3
 8026e4e:	9800      	ldr	r0, [sp, #0]
 8026e50:	b2a4      	uxth	r4, r4
 8026e52:	eb09 0306 	add.w	r3, r9, r6
 8026e56:	7b59      	ldrb	r1, [r3, #13]
 8026e58:	4d3d      	ldr	r5, [pc, #244]	@ (8026f50 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x43c>)
 8026e5a:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8026e5e:	eb0b 0301 	add.w	r3, fp, r1
 8026e62:	785a      	ldrb	r2, [r3, #1]
 8026e64:	789b      	ldrb	r3, [r3, #2]
 8026e66:	00d2      	lsls	r2, r2, #3
 8026e68:	f81b 1001 	ldrb.w	r1, [fp, r1]
 8026e6c:	3601      	adds	r6, #1
 8026e6e:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8026e72:	ea05 2303 	and.w	r3, r5, r3, lsl #8
 8026e76:	4313      	orrs	r3, r2
 8026e78:	b2b6      	uxth	r6, r6
 8026e7a:	ea43 03d1 	orr.w	r3, r3, r1, lsr #3
 8026e7e:	42a6      	cmp	r6, r4
 8026e80:	f820 3b02 	strh.w	r3, [r0], #2
 8026e84:	d1e5      	bne.n	8026e52 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x33e>
 8026e86:	e789      	b.n	8026d9c <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x288>
 8026e88:	9b06      	ldr	r3, [sp, #24]
 8026e8a:	429a      	cmp	r2, r3
 8026e8c:	d32d      	bcc.n	8026eea <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x3d6>
 8026e8e:	980a      	ldr	r0, [sp, #40]	@ 0x28
 8026e90:	f899 100d 	ldrb.w	r1, [r9, #13]
 8026e94:	eb09 0300 	add.w	r3, r9, r0
 8026e98:	7359      	strb	r1, [r3, #13]
 8026e9a:	f899 300d 	ldrb.w	r3, [r9, #13]
 8026e9e:	1c41      	adds	r1, r0, #1
 8026ea0:	b28f      	uxth	r7, r1
 8026ea2:	9c06      	ldr	r4, [sp, #24]
 8026ea4:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 8026ea6:	eb09 0084 	add.w	r0, r9, r4, lsl #2
 8026eaa:	3401      	adds	r4, #1
 8026eac:	f880 304e 	strb.w	r3, [r0, #78]	@ 0x4e
 8026eb0:	b2a3      	uxth	r3, r4
 8026eb2:	f8a0 5050 	strh.w	r5, [r0, #80]	@ 0x50
 8026eb6:	f880 104f 	strb.w	r1, [r0, #79]	@ 0x4f
 8026eba:	9306      	str	r3, [sp, #24]
 8026ebc:	e9cd 2709 	strd	r2, r7, [sp, #36]	@ 0x24
 8026ec0:	2600      	movs	r6, #0
 8026ec2:	e6df      	b.n	8026c84 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x170>
 8026ec4:	1aff      	subs	r7, r7, r3
 8026ec6:	441e      	add	r6, r3
 8026ec8:	f8bd 302c 	ldrh.w	r3, [sp, #44]	@ 0x2c
 8026ecc:	b2bf      	uxth	r7, r7
 8026ece:	9302      	str	r3, [sp, #8]
 8026ed0:	2300      	movs	r3, #0
 8026ed2:	b2b6      	uxth	r6, r6
 8026ed4:	9301      	str	r3, [sp, #4]
 8026ed6:	e788      	b.n	8026dea <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x2d6>
 8026ed8:	2100      	movs	r1, #0
 8026eda:	9104      	str	r1, [sp, #16]
 8026edc:	9905      	ldr	r1, [sp, #20]
 8026ede:	3102      	adds	r1, #2
 8026ee0:	9105      	str	r1, [sp, #20]
 8026ee2:	e6f4      	b.n	8026cce <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x1ba>
 8026ee4:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8026ee6:	3101      	adds	r1, #1
 8026ee8:	e7db      	b.n	8026ea2 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x38e>
 8026eea:	eb09 0382 	add.w	r3, r9, r2, lsl #2
 8026eee:	f893 704f 	ldrb.w	r7, [r3, #79]	@ 0x4f
 8026ef2:	4613      	mov	r3, r2
 8026ef4:	2f01      	cmp	r7, #1
 8026ef6:	d90d      	bls.n	8026f14 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x400>
 8026ef8:	f107 010d 	add.w	r1, r7, #13
 8026efc:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
 8026efe:	4449      	add	r1, r9
 8026f00:	eb09 0383 	add.w	r3, r9, r3, lsl #2
 8026f04:	f893 004e 	ldrb.w	r0, [r3, #78]	@ 0x4e
 8026f08:	f801 0d01 	strb.w	r0, [r1, #-1]!
 8026f0c:	428c      	cmp	r4, r1
 8026f0e:	f8b3 3050 	ldrh.w	r3, [r3, #80]	@ 0x50
 8026f12:	d1f5      	bne.n	8026f00 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x3ec>
 8026f14:	b2db      	uxtb	r3, r3
 8026f16:	f889 300d 	strb.w	r3, [r9, #13]
 8026f1a:	b2bf      	uxth	r7, r7
 8026f1c:	e6df      	b.n	8026cde <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x1ca>
 8026f1e:	f8bd 3068 	ldrh.w	r3, [sp, #104]	@ 0x68
 8026f22:	f8bd 2060 	ldrh.w	r2, [sp, #96]	@ 0x60
 8026f26:	9912      	ldr	r1, [sp, #72]	@ 0x48
 8026f28:	1a9b      	subs	r3, r3, r2
 8026f2a:	b29b      	uxth	r3, r3
 8026f2c:	2b00      	cmp	r3, #0
 8026f2e:	9301      	str	r3, [sp, #4]
 8026f30:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8026f32:	bf18      	it	ne
 8026f34:	2300      	movne	r3, #0
 8026f36:	3101      	adds	r1, #1
 8026f38:	b29b      	uxth	r3, r3
 8026f3a:	9302      	str	r3, [sp, #8]
 8026f3c:	9112      	str	r1, [sp, #72]	@ 0x48
 8026f3e:	9b07      	ldr	r3, [sp, #28]
 8026f40:	e669      	b.n	8026c16 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x102>
 8026f42:	4b04      	ldr	r3, [pc, #16]	@ (8026f54 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x440>)
 8026f44:	4a04      	ldr	r2, [pc, #16]	@ (8026f58 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x444>)
 8026f46:	f640 0167 	movw	r1, #2151	@ 0x867
 8026f4a:	4804      	ldr	r0, [pc, #16]	@ (8026f5c <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x448>)
 8026f4c:	f00b fc14 	bl	8032778 <__assert_func>
 8026f50:	fffff800 	.word	0xfffff800
 8026f54:	08036624 	.word	0x08036624
 8026f58:	080379f4 	.word	0x080379f4
 8026f5c:	08036560 	.word	0x08036560

08026f60 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h>:
 8026f60:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8026f64:	4690      	mov	r8, r2
 8026f66:	8812      	ldrh	r2, [r2, #0]
 8026f68:	b093      	sub	sp, #76	@ 0x4c
 8026f6a:	461c      	mov	r4, r3
 8026f6c:	f89d a074 	ldrb.w	sl, [sp, #116]	@ 0x74
 8026f70:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8026f72:	2a00      	cmp	r2, #0
 8026f74:	f040 80fb 	bne.w	802716e <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x20e>
 8026f78:	4689      	mov	r9, r1
 8026f7a:	6820      	ldr	r0, [r4, #0]
 8026f7c:	6861      	ldr	r1, [r4, #4]
 8026f7e:	aa0e      	add	r2, sp, #56	@ 0x38
 8026f80:	c203      	stmia	r2!, {r0, r1}
 8026f82:	6818      	ldr	r0, [r3, #0]
 8026f84:	6859      	ldr	r1, [r3, #4]
 8026f86:	aa10      	add	r2, sp, #64	@ 0x40
 8026f88:	c203      	stmia	r2!, {r0, r1}
 8026f8a:	a80e      	add	r0, sp, #56	@ 0x38
 8026f8c:	f7e6 f818 	bl	800cfc0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8026f90:	4621      	mov	r1, r4
 8026f92:	a810      	add	r0, sp, #64	@ 0x40
 8026f94:	f7e6 f83c 	bl	800d010 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8026f98:	f9bd 4040 	ldrsh.w	r4, [sp, #64]	@ 0x40
 8026f9c:	f9bd 5042 	ldrsh.w	r5, [sp, #66]	@ 0x42
 8026fa0:	f8bd 103c 	ldrh.w	r1, [sp, #60]	@ 0x3c
 8026fa4:	f8bd 2038 	ldrh.w	r2, [sp, #56]	@ 0x38
 8026fa8:	f8bd 303a 	ldrh.w	r3, [sp, #58]	@ 0x3a
 8026fac:	4873      	ldr	r0, [pc, #460]	@ (802717c <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x21c>)
 8026fae:	fb11 4105 	smlabb	r1, r1, r5, r4
 8026fb2:	4422      	add	r2, r4
 8026fb4:	442b      	add	r3, r5
 8026fb6:	6800      	ldr	r0, [r0, #0]
 8026fb8:	f8ad 3042 	strh.w	r3, [sp, #66]	@ 0x42
 8026fbc:	f8ad 2040 	strh.w	r2, [sp, #64]	@ 0x40
 8026fc0:	6802      	ldr	r2, [r0, #0]
 8026fc2:	4489      	add	r9, r1
 8026fc4:	f9bd 1044 	ldrsh.w	r1, [sp, #68]	@ 0x44
 8026fc8:	4c6d      	ldr	r4, [pc, #436]	@ (8027180 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x220>)
 8026fca:	f8d2 30a0 	ldr.w	r3, [r2, #160]	@ 0xa0
 8026fce:	910a      	str	r1, [sp, #40]	@ 0x28
 8026fd0:	f9bd 1046 	ldrsh.w	r1, [sp, #70]	@ 0x46
 8026fd4:	42a3      	cmp	r3, r4
 8026fd6:	910c      	str	r1, [sp, #48]	@ 0x30
 8026fd8:	f040 8096 	bne.w	8027108 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x1a8>
 8026fdc:	6841      	ldr	r1, [r0, #4]
 8026fde:	4c69      	ldr	r4, [pc, #420]	@ (8027184 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x224>)
 8026fe0:	680b      	ldr	r3, [r1, #0]
 8026fe2:	699b      	ldr	r3, [r3, #24]
 8026fe4:	42a3      	cmp	r3, r4
 8026fe6:	f040 80b4 	bne.w	8027152 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x1f2>
 8026fea:	6a93      	ldr	r3, [r2, #40]	@ 0x28
 8026fec:	4798      	blx	r3
 8026fee:	4b66      	ldr	r3, [pc, #408]	@ (8027188 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x228>)
 8026ff0:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	@ 0x42
 8026ff4:	881b      	ldrh	r3, [r3, #0]
 8026ff6:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	@ 0x40
 8026ffa:	fb01 2303 	mla	r3, r1, r3, r2
 8026ffe:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8027002:	4418      	add	r0, r3
 8027004:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8027006:	2b00      	cmp	r3, #0
 8027008:	dd76      	ble.n	80270f8 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x198>
 802700a:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 802700c:	2b00      	cmp	r3, #0
 802700e:	dd73      	ble.n	80270f8 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x198>
 8027010:	2200      	movs	r2, #0
 8027012:	2104      	movs	r1, #4
 8027014:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8027018:	920b      	str	r2, [sp, #44]	@ 0x2c
 802701a:	930d      	str	r3, [sp, #52]	@ 0x34
 802701c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 802701e:	464e      	mov	r6, r9
 8027020:	1cc5      	adds	r5, r0, #3
 8027022:	eb09 0c03 	add.w	ip, r9, r3
 8027026:	e039      	b.n	802709c <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x13c>
 8027028:	fb0a f303 	mul.w	r3, sl, r3
 802702c:	1c5a      	adds	r2, r3, #1
 802702e:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8027032:	121b      	asrs	r3, r3, #8
 8027034:	43df      	mvns	r7, r3
 8027036:	b29b      	uxth	r3, r3
 8027038:	fb1e f203 	smulbb	r2, lr, r3
 802703c:	f815 ec03 	ldrb.w	lr, [r5, #-3]
 8027040:	b2ff      	uxtb	r7, r7
 8027042:	fb0e 2e07 	mla	lr, lr, r7, r2
 8027046:	fa1f fe8e 	uxth.w	lr, lr
 802704a:	f815 2c02 	ldrb.w	r2, [r5, #-2]
 802704e:	f10e 0b01 	add.w	fp, lr, #1
 8027052:	eb0b 2e1e 	add.w	lr, fp, lr, lsr #8
 8027056:	ea4f 2e2e 	mov.w	lr, lr, asr #8
 802705a:	fb12 fb07 	smulbb	fp, r2, r7
 802705e:	f805 ec03 	strb.w	lr, [r5, #-3]
 8027062:	7862      	ldrb	r2, [r4, #1]
 8027064:	f815 ec01 	ldrb.w	lr, [r5, #-1]
 8027068:	fb02 b203 	mla	r2, r2, r3, fp
 802706c:	b292      	uxth	r2, r2
 802706e:	f102 0b01 	add.w	fp, r2, #1
 8027072:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 8027076:	1212      	asrs	r2, r2, #8
 8027078:	fb1e f707 	smulbb	r7, lr, r7
 802707c:	f805 2c02 	strb.w	r2, [r5, #-2]
 8027080:	78a2      	ldrb	r2, [r4, #2]
 8027082:	fb02 7303 	mla	r3, r2, r3, r7
 8027086:	b29b      	uxth	r3, r3
 8027088:	1c5a      	adds	r2, r3, #1
 802708a:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 802708e:	121b      	asrs	r3, r3, #8
 8027090:	f805 3c01 	strb.w	r3, [r5, #-1]
 8027094:	45b4      	cmp	ip, r6
 8027096:	f105 0503 	add.w	r5, r5, #3
 802709a:	d01b      	beq.n	80270d4 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x174>
 802709c:	f816 2b01 	ldrb.w	r2, [r6], #1
 80270a0:	fb11 1202 	smlabb	r2, r1, r2, r1
 80270a4:	eb08 0402 	add.w	r4, r8, r2
 80270a8:	78e3      	ldrb	r3, [r4, #3]
 80270aa:	2b00      	cmp	r3, #0
 80270ac:	d0f2      	beq.n	8027094 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x134>
 80270ae:	2bff      	cmp	r3, #255	@ 0xff
 80270b0:	f818 e002 	ldrb.w	lr, [r8, r2]
 80270b4:	d1b8      	bne.n	8027028 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0xc8>
 80270b6:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 80270ba:	d1b5      	bne.n	8027028 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0xc8>
 80270bc:	f805 ec03 	strb.w	lr, [r5, #-3]
 80270c0:	7863      	ldrb	r3, [r4, #1]
 80270c2:	45b4      	cmp	ip, r6
 80270c4:	f805 3c02 	strb.w	r3, [r5, #-2]
 80270c8:	78a3      	ldrb	r3, [r4, #2]
 80270ca:	f105 0503 	add.w	r5, r5, #3
 80270ce:	f805 3c04 	strb.w	r3, [r5, #-4]
 80270d2:	d1e3      	bne.n	802709c <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x13c>
 80270d4:	4b2c      	ldr	r3, [pc, #176]	@ (8027188 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x228>)
 80270d6:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 80270d8:	881b      	ldrh	r3, [r3, #0]
 80270da:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 80270dc:	1a9b      	subs	r3, r3, r2
 80270de:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 80270e2:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 80270e4:	442b      	add	r3, r5
 80270e6:	4418      	add	r0, r3
 80270e8:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80270ea:	3401      	adds	r4, #1
 80270ec:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	@ 0x3c
 80270f0:	42a3      	cmp	r3, r4
 80270f2:	940b      	str	r4, [sp, #44]	@ 0x2c
 80270f4:	4491      	add	r9, r2
 80270f6:	d191      	bne.n	802701c <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0xbc>
 80270f8:	4b20      	ldr	r3, [pc, #128]	@ (802717c <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x21c>)
 80270fa:	6818      	ldr	r0, [r3, #0]
 80270fc:	6803      	ldr	r3, [r0, #0]
 80270fe:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8027100:	4798      	blx	r3
 8027102:	b013      	add	sp, #76	@ 0x4c
 8027104:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8027108:	4798      	blx	r3
 802710a:	4602      	mov	r2, r0
 802710c:	2a01      	cmp	r2, #1
 802710e:	d124      	bne.n	802715a <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x1fa>
 8027110:	4b1e      	ldr	r3, [pc, #120]	@ (802718c <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x22c>)
 8027112:	6818      	ldr	r0, [r3, #0]
 8027114:	b328      	cbz	r0, 8027162 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x202>
 8027116:	260b      	movs	r6, #11
 8027118:	4b1b      	ldr	r3, [pc, #108]	@ (8027188 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x228>)
 802711a:	f8bd 1030 	ldrh.w	r1, [sp, #48]	@ 0x30
 802711e:	881f      	ldrh	r7, [r3, #0]
 8027120:	f8bd 503c 	ldrh.w	r5, [sp, #60]	@ 0x3c
 8027124:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 8027128:	f8bd 4042 	ldrh.w	r4, [sp, #66]	@ 0x42
 802712c:	e9cd 3101 	strd	r3, r1, [sp, #4]
 8027130:	9208      	str	r2, [sp, #32]
 8027132:	9205      	str	r2, [sp, #20]
 8027134:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
 8027138:	f8cd a010 	str.w	sl, [sp, #16]
 802713c:	4642      	mov	r2, r8
 802713e:	4649      	mov	r1, r9
 8027140:	e9cd 7606 	strd	r7, r6, [sp, #24]
 8027144:	9503      	str	r5, [sp, #12]
 8027146:	9400      	str	r4, [sp, #0]
 8027148:	f7f9 feae 	bl	8020ea8 <_ZN8touchgfx8HALGPU2D13dma2dBlitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_>
 802714c:	b013      	add	sp, #76	@ 0x4c
 802714e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8027152:	4608      	mov	r0, r1
 8027154:	4798      	blx	r3
 8027156:	4602      	mov	r2, r0
 8027158:	e7d8      	b.n	802710c <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x1ac>
 802715a:	4b08      	ldr	r3, [pc, #32]	@ (802717c <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x21c>)
 802715c:	6818      	ldr	r0, [r3, #0]
 802715e:	6802      	ldr	r2, [r0, #0]
 8027160:	e743      	b.n	8026fea <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x8a>
 8027162:	4b0b      	ldr	r3, [pc, #44]	@ (8027190 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x230>)
 8027164:	4a0b      	ldr	r2, [pc, #44]	@ (8027194 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x234>)
 8027166:	217c      	movs	r1, #124	@ 0x7c
 8027168:	480b      	ldr	r0, [pc, #44]	@ (8027198 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x238>)
 802716a:	f00b fb05 	bl	8032778 <__assert_func>
 802716e:	4b0b      	ldr	r3, [pc, #44]	@ (802719c <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x23c>)
 8027170:	4a0b      	ldr	r2, [pc, #44]	@ (80271a0 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x240>)
 8027172:	f640 1155 	movw	r1, #2389	@ 0x955
 8027176:	480b      	ldr	r0, [pc, #44]	@ (80271a4 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x244>)
 8027178:	f00b fafe 	bl	8032778 <__assert_func>
 802717c:	200830a4 	.word	0x200830a4
 8027180:	0800121d 	.word	0x0800121d
 8027184:	0800bd65 	.word	0x0800bd65
 8027188:	2008309e 	.word	0x2008309e
 802718c:	20083544 	.word	0x20083544
 8027190:	080364bc 	.word	0x080364bc
 8027194:	08036d28 	.word	0x08036d28
 8027198:	080364e4 	.word	0x080364e4
 802719c:	080365d4 	.word	0x080365d4
 80271a0:	080373e4 	.word	0x080373e4
 80271a4:	08036560 	.word	0x08036560

080271a8 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h>:
 80271a8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80271ac:	4614      	mov	r4, r2
 80271ae:	7812      	ldrb	r2, [r2, #0]
 80271b0:	b08d      	sub	sp, #52	@ 0x34
 80271b2:	461e      	mov	r6, r3
 80271b4:	f89d 805c 	ldrb.w	r8, [sp, #92]	@ 0x5c
 80271b8:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 80271ba:	2a00      	cmp	r2, #0
 80271bc:	f040 81e0 	bne.w	8027580 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x3d8>
 80271c0:	6830      	ldr	r0, [r6, #0]
 80271c2:	460d      	mov	r5, r1
 80271c4:	6871      	ldr	r1, [r6, #4]
 80271c6:	aa08      	add	r2, sp, #32
 80271c8:	c203      	stmia	r2!, {r0, r1}
 80271ca:	6818      	ldr	r0, [r3, #0]
 80271cc:	6859      	ldr	r1, [r3, #4]
 80271ce:	aa0a      	add	r2, sp, #40	@ 0x28
 80271d0:	c203      	stmia	r2!, {r0, r1}
 80271d2:	a808      	add	r0, sp, #32
 80271d4:	f7e5 fef4 	bl	800cfc0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80271d8:	4631      	mov	r1, r6
 80271da:	a80a      	add	r0, sp, #40	@ 0x28
 80271dc:	f7e5 ff18 	bl	800d010 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80271e0:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	@ 0x24
 80271e4:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	@ 0x28
 80271e8:	f003 0201 	and.w	r2, r3, #1
 80271ec:	4617      	mov	r7, r2
 80271ee:	9204      	str	r2, [sp, #16]
 80271f0:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
 80271f4:	f8bd 0022 	ldrh.w	r0, [sp, #34]	@ 0x22
 80271f8:	443b      	add	r3, r7
 80271fa:	fb02 1303 	mla	r3, r2, r3, r1
 80271fe:	f8bd 6020 	ldrh.w	r6, [sp, #32]
 8027202:	4402      	add	r2, r0
 8027204:	48d6      	ldr	r0, [pc, #856]	@ (8027560 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x3b8>)
 8027206:	440e      	add	r6, r1
 8027208:	6800      	ldr	r0, [r0, #0]
 802720a:	f8ad 6028 	strh.w	r6, [sp, #40]	@ 0x28
 802720e:	f8ad 202a 	strh.w	r2, [sp, #42]	@ 0x2a
 8027212:	eb03 73d3 	add.w	r3, r3, r3, lsr #31
 8027216:	eb05 0363 	add.w	r3, r5, r3, asr #1
 802721a:	6802      	ldr	r2, [r0, #0]
 802721c:	f9bd 702c 	ldrsh.w	r7, [sp, #44]	@ 0x2c
 8027220:	9301      	str	r3, [sp, #4]
 8027222:	f001 0301 	and.w	r3, r1, #1
 8027226:	6a92      	ldr	r2, [r2, #40]	@ 0x28
 8027228:	9305      	str	r3, [sp, #20]
 802722a:	9703      	str	r7, [sp, #12]
 802722c:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	@ 0x2e
 8027230:	4790      	blx	r2
 8027232:	4acc      	ldr	r2, [pc, #816]	@ (8027564 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x3bc>)
 8027234:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	@ 0x2a
 8027238:	8811      	ldrh	r1, [r2, #0]
 802723a:	f9bd 6028 	ldrsh.w	r6, [sp, #40]	@ 0x28
 802723e:	fb05 f201 	mul.w	r2, r5, r1
 8027242:	fb01 6303 	mla	r3, r1, r3, r6
 8027246:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 802724a:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 802724e:	4418      	add	r0, r3
 8027250:	1883      	adds	r3, r0, r2
 8027252:	4298      	cmp	r0, r3
 8027254:	9306      	str	r3, [sp, #24]
 8027256:	f104 0204 	add.w	r2, r4, #4
 802725a:	f080 80f1 	bcs.w	8027440 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x298>
 802725e:	1e7b      	subs	r3, r7, #1
 8027260:	4647      	mov	r7, r8
 8027262:	9307      	str	r3, [sp, #28]
 8027264:	9b05      	ldr	r3, [sp, #20]
 8027266:	2b00      	cmp	r3, #0
 8027268:	f000 8106 	beq.w	8027478 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x2d0>
 802726c:	9901      	ldr	r1, [sp, #4]
 802726e:	780b      	ldrb	r3, [r1, #0]
 8027270:	1c4d      	adds	r5, r1, #1
 8027272:	f003 030f 	and.w	r3, r3, #15
 8027276:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 802727a:	0e19      	lsrs	r1, r3, #24
 802727c:	f040 8136 	bne.w	80274ec <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x344>
 8027280:	f8dd c01c 	ldr.w	ip, [sp, #28]
 8027284:	3003      	adds	r0, #3
 8027286:	f1bc 0f01 	cmp.w	ip, #1
 802728a:	f340 80ba 	ble.w	8027402 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x25a>
 802728e:	f1ac 0302 	sub.w	r3, ip, #2
 8027292:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8027296:	f10c 0e01 	add.w	lr, ip, #1
 802729a:	9302      	str	r3, [sp, #8]
 802729c:	eb05 060e 	add.w	r6, r5, lr
 80272a0:	1d84      	adds	r4, r0, #6
 80272a2:	e00b      	b.n	80272bc <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x114>
 80272a4:	f003 030f 	and.w	r3, r3, #15
 80272a8:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80272ac:	3501      	adds	r5, #1
 80272ae:	0e19      	lsrs	r1, r3, #24
 80272b0:	d155      	bne.n	802735e <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x1b6>
 80272b2:	42b5      	cmp	r5, r6
 80272b4:	f104 0406 	add.w	r4, r4, #6
 80272b8:	f000 809a 	beq.w	80273f0 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x248>
 80272bc:	782b      	ldrb	r3, [r5, #0]
 80272be:	0919      	lsrs	r1, r3, #4
 80272c0:	f852 1021 	ldr.w	r1, [r2, r1, lsl #2]
 80272c4:	ea5f 6811 	movs.w	r8, r1, lsr #24
 80272c8:	d0ec      	beq.n	80272a4 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0xfc>
 80272ca:	f3c1 2a07 	ubfx	sl, r1, #8, #8
 80272ce:	f3c1 4907 	ubfx	r9, r1, #16, #8
 80272d2:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
 80272d6:	fa5f f38a 	uxtb.w	r3, sl
 80272da:	b2c9      	uxtb	r1, r1
 80272dc:	fa5f fb89 	uxtb.w	fp, r9
 80272e0:	f000 80bf 	beq.w	8027462 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x2ba>
 80272e4:	fb08 f807 	mul.w	r8, r8, r7
 80272e8:	f108 0901 	add.w	r9, r8, #1
 80272ec:	eb09 2828 	add.w	r8, r9, r8, asr #8
 80272f0:	ea4f 2828 	mov.w	r8, r8, asr #8
 80272f4:	ea6f 0908 	mvn.w	r9, r8
 80272f8:	fa1f f888 	uxth.w	r8, r8
 80272fc:	fb11 f108 	smulbb	r1, r1, r8
 8027300:	fb13 f308 	smulbb	r3, r3, r8
 8027304:	fb1b f808 	smulbb	r8, fp, r8
 8027308:	f814 bc06 	ldrb.w	fp, [r4, #-6]
 802730c:	fa5f f989 	uxtb.w	r9, r9
 8027310:	f814 ac05 	ldrb.w	sl, [r4, #-5]
 8027314:	fb0b 1109 	mla	r1, fp, r9, r1
 8027318:	f814 bc04 	ldrb.w	fp, [r4, #-4]
 802731c:	fb0a 3309 	mla	r3, sl, r9, r3
 8027320:	fb0b 8809 	mla	r8, fp, r9, r8
 8027324:	b289      	uxth	r1, r1
 8027326:	fa1f fa83 	uxth.w	sl, r3
 802732a:	fa1f f888 	uxth.w	r8, r8
 802732e:	f101 0b01 	add.w	fp, r1, #1
 8027332:	f10a 0301 	add.w	r3, sl, #1
 8027336:	f108 0901 	add.w	r9, r8, #1
 802733a:	eb0b 2111 	add.w	r1, fp, r1, lsr #8
 802733e:	eb03 231a 	add.w	r3, r3, sl, lsr #8
 8027342:	eb09 2818 	add.w	r8, r9, r8, lsr #8
 8027346:	121b      	asrs	r3, r3, #8
 8027348:	1209      	asrs	r1, r1, #8
 802734a:	ea4f 2828 	mov.w	r8, r8, asr #8
 802734e:	f804 1c06 	strb.w	r1, [r4, #-6]
 8027352:	f804 3c05 	strb.w	r3, [r4, #-5]
 8027356:	f804 8c04 	strb.w	r8, [r4, #-4]
 802735a:	782b      	ldrb	r3, [r5, #0]
 802735c:	e7a2      	b.n	80272a4 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0xfc>
 802735e:	f3c3 2a07 	ubfx	sl, r3, #8, #8
 8027362:	f3c3 4907 	ubfx	r9, r3, #16, #8
 8027366:	29ff      	cmp	r1, #255	@ 0xff
 8027368:	fa5f f88a 	uxtb.w	r8, sl
 802736c:	b2db      	uxtb	r3, r3
 802736e:	fa5f fb89 	uxtb.w	fp, r9
 8027372:	d06d      	beq.n	8027450 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x2a8>
 8027374:	fb01 f107 	mul.w	r1, r1, r7
 8027378:	f101 0901 	add.w	r9, r1, #1
 802737c:	eb09 2121 	add.w	r1, r9, r1, asr #8
 8027380:	1209      	asrs	r1, r1, #8
 8027382:	ea6f 0901 	mvn.w	r9, r1
 8027386:	b289      	uxth	r1, r1
 8027388:	fb13 f301 	smulbb	r3, r3, r1
 802738c:	fb18 f801 	smulbb	r8, r8, r1
 8027390:	fb1b f101 	smulbb	r1, fp, r1
 8027394:	f814 bc03 	ldrb.w	fp, [r4, #-3]
 8027398:	fa5f f989 	uxtb.w	r9, r9
 802739c:	f814 ac02 	ldrb.w	sl, [r4, #-2]
 80273a0:	fb0b 3309 	mla	r3, fp, r9, r3
 80273a4:	f814 bc01 	ldrb.w	fp, [r4, #-1]
 80273a8:	fb0a 8809 	mla	r8, sl, r9, r8
 80273ac:	fb0b 1109 	mla	r1, fp, r9, r1
 80273b0:	fa1f fa88 	uxth.w	sl, r8
 80273b4:	fa1f fb83 	uxth.w	fp, r3
 80273b8:	b289      	uxth	r1, r1
 80273ba:	f10b 0801 	add.w	r8, fp, #1
 80273be:	f10a 0301 	add.w	r3, sl, #1
 80273c2:	f101 0901 	add.w	r9, r1, #1
 80273c6:	eb08 2b1b 	add.w	fp, r8, fp, lsr #8
 80273ca:	eb03 231a 	add.w	r3, r3, sl, lsr #8
 80273ce:	eb09 2111 	add.w	r1, r9, r1, lsr #8
 80273d2:	ea4f 2b2b 	mov.w	fp, fp, asr #8
 80273d6:	121b      	asrs	r3, r3, #8
 80273d8:	1209      	asrs	r1, r1, #8
 80273da:	42b5      	cmp	r5, r6
 80273dc:	f804 bc03 	strb.w	fp, [r4, #-3]
 80273e0:	f804 3c02 	strb.w	r3, [r4, #-2]
 80273e4:	f804 1c01 	strb.w	r1, [r4, #-1]
 80273e8:	f104 0406 	add.w	r4, r4, #6
 80273ec:	f47f af66 	bne.w	80272bc <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x114>
 80273f0:	9b02      	ldr	r3, [sp, #8]
 80273f2:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 80273f6:	ebcc 7ccc 	rsb	ip, ip, ip, lsl #31
 80273fa:	eb00 004e 	add.w	r0, r0, lr, lsl #1
 80273fe:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 8027402:	f1bc 0f01 	cmp.w	ip, #1
 8027406:	d106      	bne.n	8027416 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x26e>
 8027408:	782b      	ldrb	r3, [r5, #0]
 802740a:	091b      	lsrs	r3, r3, #4
 802740c:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8027410:	0e19      	lsrs	r1, r3, #24
 8027412:	d135      	bne.n	8027480 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x2d8>
 8027414:	3003      	adds	r0, #3
 8027416:	4b53      	ldr	r3, [pc, #332]	@ (8027564 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x3bc>)
 8027418:	9c03      	ldr	r4, [sp, #12]
 802741a:	8819      	ldrh	r1, [r3, #0]
 802741c:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	@ 0x24
 8027420:	1b09      	subs	r1, r1, r4
 8027422:	9c04      	ldr	r4, [sp, #16]
 8027424:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8027428:	4408      	add	r0, r1
 802742a:	4423      	add	r3, r4
 802742c:	9901      	ldr	r1, [sp, #4]
 802742e:	eb03 73d3 	add.w	r3, r3, r3, lsr #31
 8027432:	eb01 0363 	add.w	r3, r1, r3, asr #1
 8027436:	9301      	str	r3, [sp, #4]
 8027438:	9b06      	ldr	r3, [sp, #24]
 802743a:	4283      	cmp	r3, r0
 802743c:	f63f af12 	bhi.w	8027264 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0xbc>
 8027440:	4b47      	ldr	r3, [pc, #284]	@ (8027560 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x3b8>)
 8027442:	6818      	ldr	r0, [r3, #0]
 8027444:	6803      	ldr	r3, [r0, #0]
 8027446:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8027448:	4798      	blx	r3
 802744a:	b00d      	add	sp, #52	@ 0x34
 802744c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8027450:	2fff      	cmp	r7, #255	@ 0xff
 8027452:	d18f      	bne.n	8027374 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x1cc>
 8027454:	f804 3c03 	strb.w	r3, [r4, #-3]
 8027458:	f804 ac02 	strb.w	sl, [r4, #-2]
 802745c:	f804 9c01 	strb.w	r9, [r4, #-1]
 8027460:	e727      	b.n	80272b2 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x10a>
 8027462:	2fff      	cmp	r7, #255	@ 0xff
 8027464:	f47f af3e 	bne.w	80272e4 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x13c>
 8027468:	f804 1c06 	strb.w	r1, [r4, #-6]
 802746c:	f804 ac05 	strb.w	sl, [r4, #-5]
 8027470:	f804 9c04 	strb.w	r9, [r4, #-4]
 8027474:	782b      	ldrb	r3, [r5, #0]
 8027476:	e715      	b.n	80272a4 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0xfc>
 8027478:	9d01      	ldr	r5, [sp, #4]
 802747a:	f8dd c00c 	ldr.w	ip, [sp, #12]
 802747e:	e702      	b.n	8027286 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0xde>
 8027480:	f3c3 2507 	ubfx	r5, r3, #8, #8
 8027484:	f3c3 4407 	ubfx	r4, r3, #16, #8
 8027488:	29ff      	cmp	r1, #255	@ 0xff
 802748a:	fa5f fc85 	uxtb.w	ip, r5
 802748e:	b2db      	uxtb	r3, r3
 8027490:	b2e6      	uxtb	r6, r4
 8027492:	d069      	beq.n	8027568 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x3c0>
 8027494:	fb01 f107 	mul.w	r1, r1, r7
 8027498:	1c4c      	adds	r4, r1, #1
 802749a:	eb04 2121 	add.w	r1, r4, r1, asr #8
 802749e:	120c      	asrs	r4, r1, #8
 80274a0:	43e1      	mvns	r1, r4
 80274a2:	b2a4      	uxth	r4, r4
 80274a4:	fb13 f304 	smulbb	r3, r3, r4
 80274a8:	fb1c fc04 	smulbb	ip, ip, r4
 80274ac:	fb16 f404 	smulbb	r4, r6, r4
 80274b0:	7806      	ldrb	r6, [r0, #0]
 80274b2:	b2c9      	uxtb	r1, r1
 80274b4:	fb06 3301 	mla	r3, r6, r1, r3
 80274b8:	7845      	ldrb	r5, [r0, #1]
 80274ba:	7886      	ldrb	r6, [r0, #2]
 80274bc:	fb05 c501 	mla	r5, r5, r1, ip
 80274c0:	fb06 4401 	mla	r4, r6, r1, r4
 80274c4:	b29b      	uxth	r3, r3
 80274c6:	b2ad      	uxth	r5, r5
 80274c8:	b2a4      	uxth	r4, r4
 80274ca:	1c5e      	adds	r6, r3, #1
 80274cc:	f105 0c01 	add.w	ip, r5, #1
 80274d0:	1c61      	adds	r1, r4, #1
 80274d2:	eb06 2313 	add.w	r3, r6, r3, lsr #8
 80274d6:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 80274da:	eb01 2114 	add.w	r1, r1, r4, lsr #8
 80274de:	121b      	asrs	r3, r3, #8
 80274e0:	122d      	asrs	r5, r5, #8
 80274e2:	1209      	asrs	r1, r1, #8
 80274e4:	7003      	strb	r3, [r0, #0]
 80274e6:	7045      	strb	r5, [r0, #1]
 80274e8:	7081      	strb	r1, [r0, #2]
 80274ea:	e793      	b.n	8027414 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x26c>
 80274ec:	f3c3 2607 	ubfx	r6, r3, #8, #8
 80274f0:	f3c3 4407 	ubfx	r4, r3, #16, #8
 80274f4:	29ff      	cmp	r1, #255	@ 0xff
 80274f6:	fa5f fe86 	uxtb.w	lr, r6
 80274fa:	b2db      	uxtb	r3, r3
 80274fc:	fa5f fc84 	uxtb.w	ip, r4
 8027500:	d038      	beq.n	8027574 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x3cc>
 8027502:	fb01 f107 	mul.w	r1, r1, r7
 8027506:	1c4c      	adds	r4, r1, #1
 8027508:	eb04 2421 	add.w	r4, r4, r1, asr #8
 802750c:	1224      	asrs	r4, r4, #8
 802750e:	43e1      	mvns	r1, r4
 8027510:	b2a4      	uxth	r4, r4
 8027512:	fb13 f304 	smulbb	r3, r3, r4
 8027516:	fb1e fe04 	smulbb	lr, lr, r4
 802751a:	fb1c f404 	smulbb	r4, ip, r4
 802751e:	f890 c000 	ldrb.w	ip, [r0]
 8027522:	b2c9      	uxtb	r1, r1
 8027524:	fb0c 3301 	mla	r3, ip, r1, r3
 8027528:	7846      	ldrb	r6, [r0, #1]
 802752a:	f890 c002 	ldrb.w	ip, [r0, #2]
 802752e:	fb06 e601 	mla	r6, r6, r1, lr
 8027532:	fb0c 4401 	mla	r4, ip, r1, r4
 8027536:	b29b      	uxth	r3, r3
 8027538:	b2b6      	uxth	r6, r6
 802753a:	b2a4      	uxth	r4, r4
 802753c:	f103 0c01 	add.w	ip, r3, #1
 8027540:	f106 0e01 	add.w	lr, r6, #1
 8027544:	1c61      	adds	r1, r4, #1
 8027546:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 802754a:	eb0e 2616 	add.w	r6, lr, r6, lsr #8
 802754e:	eb01 2114 	add.w	r1, r1, r4, lsr #8
 8027552:	121b      	asrs	r3, r3, #8
 8027554:	1236      	asrs	r6, r6, #8
 8027556:	1209      	asrs	r1, r1, #8
 8027558:	7003      	strb	r3, [r0, #0]
 802755a:	7046      	strb	r6, [r0, #1]
 802755c:	7081      	strb	r1, [r0, #2]
 802755e:	e68f      	b.n	8027280 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0xd8>
 8027560:	200830a4 	.word	0x200830a4
 8027564:	2008309e 	.word	0x2008309e
 8027568:	2fff      	cmp	r7, #255	@ 0xff
 802756a:	d193      	bne.n	8027494 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x2ec>
 802756c:	7003      	strb	r3, [r0, #0]
 802756e:	7045      	strb	r5, [r0, #1]
 8027570:	7084      	strb	r4, [r0, #2]
 8027572:	e74f      	b.n	8027414 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x26c>
 8027574:	2fff      	cmp	r7, #255	@ 0xff
 8027576:	d1c4      	bne.n	8027502 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x35a>
 8027578:	7003      	strb	r3, [r0, #0]
 802757a:	7046      	strb	r6, [r0, #1]
 802757c:	7084      	strb	r4, [r0, #2]
 802757e:	e67f      	b.n	8027280 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0xd8>
 8027580:	4b03      	ldr	r3, [pc, #12]	@ (8027590 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x3e8>)
 8027582:	4a04      	ldr	r2, [pc, #16]	@ (8027594 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x3ec>)
 8027584:	f640 11b5 	movw	r1, #2485	@ 0x9b5
 8027588:	4803      	ldr	r0, [pc, #12]	@ (8027598 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x3f0>)
 802758a:	f00b f8f5 	bl	8032778 <__assert_func>
 802758e:	bf00      	nop
 8027590:	08036654 	.word	0x08036654
 8027594:	080378d4 	.word	0x080378d4
 8027598:	08036560 	.word	0x08036560

0802759c <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h>:
 802759c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80275a0:	b091      	sub	sp, #68	@ 0x44
 80275a2:	9208      	str	r2, [sp, #32]
 80275a4:	9100      	str	r1, [sp, #0]
 80275a6:	7812      	ldrb	r2, [r2, #0]
 80275a8:	f89d 106c 	ldrb.w	r1, [sp, #108]	@ 0x6c
 80275ac:	461c      	mov	r4, r3
 80275ae:	9106      	str	r1, [sp, #24]
 80275b0:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
 80275b2:	2a00      	cmp	r2, #0
 80275b4:	f040 8211 	bne.w	80279da <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x43e>
 80275b8:	6820      	ldr	r0, [r4, #0]
 80275ba:	6861      	ldr	r1, [r4, #4]
 80275bc:	aa0c      	add	r2, sp, #48	@ 0x30
 80275be:	c203      	stmia	r2!, {r0, r1}
 80275c0:	6818      	ldr	r0, [r3, #0]
 80275c2:	6859      	ldr	r1, [r3, #4]
 80275c4:	aa0e      	add	r2, sp, #56	@ 0x38
 80275c6:	c203      	stmia	r2!, {r0, r1}
 80275c8:	a80c      	add	r0, sp, #48	@ 0x30
 80275ca:	f7e5 fcf9 	bl	800cfc0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80275ce:	4621      	mov	r1, r4
 80275d0:	a80e      	add	r0, sp, #56	@ 0x38
 80275d2:	f7e5 fd1d 	bl	800d010 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80275d6:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
 80275da:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 80275de:	f340 815b 	ble.w	8027898 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x2fc>
 80275e2:	2201      	movs	r2, #1
 80275e4:	b299      	uxth	r1, r3
 80275e6:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	@ 0x3a
 80275ea:	f8bd 0038 	ldrh.w	r0, [sp, #56]	@ 0x38
 80275ee:	fb93 f5f2 	sdiv	r5, r3, r2
 80275f2:	b2ae      	uxth	r6, r5
 80275f4:	fb02 3416 	mls	r4, r2, r6, r3
 80275f8:	fb14 0101 	smlabb	r1, r4, r1, r0
 80275fc:	f9bd 4036 	ldrsh.w	r4, [sp, #54]	@ 0x36
 8027600:	fa1f f881 	uxth.w	r8, r1
 8027604:	4414      	add	r4, r2
 8027606:	3c01      	subs	r4, #1
 8027608:	fb94 f4f2 	sdiv	r4, r4, r2
 802760c:	b136      	cbz	r6, 802761c <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x80>
 802760e:	9a08      	ldr	r2, [sp, #32]
 8027610:	9900      	ldr	r1, [sp, #0]
 8027612:	f852 2026 	ldr.w	r2, [r2, r6, lsl #2]
 8027616:	ba12      	rev	r2, r2
 8027618:	4411      	add	r1, r2
 802761a:	9100      	str	r1, [sp, #0]
 802761c:	f8bd 2030 	ldrh.w	r2, [sp, #48]	@ 0x30
 8027620:	f8bd 1032 	ldrh.w	r1, [sp, #50]	@ 0x32
 8027624:	4402      	add	r2, r0
 8027626:	f8ad 2038 	strh.w	r2, [sp, #56]	@ 0x38
 802762a:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	@ 0x3c
 802762e:	440b      	add	r3, r1
 8027630:	4616      	mov	r6, r2
 8027632:	499c      	ldr	r1, [pc, #624]	@ (80278a4 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x308>)
 8027634:	f8ad 303a 	strh.w	r3, [sp, #58]	@ 0x3a
 8027638:	6808      	ldr	r0, [r1, #0]
 802763a:	9205      	str	r2, [sp, #20]
 802763c:	6803      	ldr	r3, [r0, #0]
 802763e:	f9bd 503e 	ldrsh.w	r5, [sp, #62]	@ 0x3e
 8027642:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8027644:	4798      	blx	r3
 8027646:	f1b8 0f00 	cmp.w	r8, #0
 802764a:	bf0c      	ite	eq
 802764c:	4633      	moveq	r3, r6
 802764e:	2300      	movne	r3, #0
 8027650:	4995      	ldr	r1, [pc, #596]	@ (80278a8 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x30c>)
 8027652:	f9bd 203a 	ldrsh.w	r2, [sp, #58]	@ 0x3a
 8027656:	8809      	ldrh	r1, [r1, #0]
 8027658:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	@ 0x38
 802765c:	fb05 f501 	mul.w	r5, r5, r1
 8027660:	fb01 6202 	mla	r2, r1, r2, r6
 8027664:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8027668:	4410      	add	r0, r2
 802766a:	b2a4      	uxth	r4, r4
 802766c:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8027670:	1942      	adds	r2, r0, r5
 8027672:	00a4      	lsls	r4, r4, #2
 8027674:	1d21      	adds	r1, r4, #4
 8027676:	4290      	cmp	r0, r2
 8027678:	9201      	str	r2, [sp, #4]
 802767a:	9109      	str	r1, [sp, #36]	@ 0x24
 802767c:	b29f      	uxth	r7, r3
 802767e:	d21a      	bcs.n	80276b6 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x11a>
 8027680:	2300      	movs	r3, #0
 8027682:	4641      	mov	r1, r8
 8027684:	9302      	str	r3, [sp, #8]
 8027686:	b963      	cbnz	r3, 80276a2 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x106>
 8027688:	9d00      	ldr	r5, [sp, #0]
 802768a:	782a      	ldrb	r2, [r5, #0]
 802768c:	0993      	lsrs	r3, r2, #6
 802768e:	1e5c      	subs	r4, r3, #1
 8027690:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 8027694:	2c02      	cmp	r4, #2
 8027696:	9202      	str	r2, [sp, #8]
 8027698:	f200 8099 	bhi.w	80277ce <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x232>
 802769c:	3501      	adds	r5, #1
 802769e:	9500      	str	r5, [sp, #0]
 80276a0:	b29b      	uxth	r3, r3
 80276a2:	b181      	cbz	r1, 80276c6 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x12a>
 80276a4:	428b      	cmp	r3, r1
 80276a6:	f080 808c 	bcs.w	80277c2 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x226>
 80276aa:	1acb      	subs	r3, r1, r3
 80276ac:	b299      	uxth	r1, r3
 80276ae:	2300      	movs	r3, #0
 80276b0:	9a01      	ldr	r2, [sp, #4]
 80276b2:	4290      	cmp	r0, r2
 80276b4:	d3e7      	bcc.n	8027686 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0xea>
 80276b6:	4b7b      	ldr	r3, [pc, #492]	@ (80278a4 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x308>)
 80276b8:	6818      	ldr	r0, [r3, #0]
 80276ba:	6803      	ldr	r3, [r0, #0]
 80276bc:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80276be:	4798      	blx	r3
 80276c0:	b011      	add	sp, #68	@ 0x44
 80276c2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80276c6:	2204      	movs	r2, #4
 80276c8:	4615      	mov	r5, r2
 80276ca:	9c09      	ldr	r4, [sp, #36]	@ 0x24
 80276cc:	9a02      	ldr	r2, [sp, #8]
 80276ce:	42bb      	cmp	r3, r7
 80276d0:	fb15 4202 	smlabb	r2, r5, r2, r4
 80276d4:	9c08      	ldr	r4, [sp, #32]
 80276d6:	58a5      	ldr	r5, [r4, r2]
 80276d8:	ea4f 6815 	mov.w	r8, r5, lsr #24
 80276dc:	f0c0 808d 	bcc.w	80277fa <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x25e>
 80276e0:	1bda      	subs	r2, r3, r7
 80276e2:	b292      	uxth	r2, r2
 80276e4:	9203      	str	r2, [sp, #12]
 80276e6:	2f00      	cmp	r7, #0
 80276e8:	d076      	beq.n	80277d8 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x23c>
 80276ea:	9704      	str	r7, [sp, #16]
 80276ec:	9107      	str	r1, [sp, #28]
 80276ee:	9a06      	ldr	r2, [sp, #24]
 80276f0:	f3c5 4607 	ubfx	r6, r5, #16, #8
 80276f4:	fb02 f408 	mul.w	r4, r2, r8
 80276f8:	1c62      	adds	r2, r4, #1
 80276fa:	eb02 2224 	add.w	r2, r2, r4, asr #8
 80276fe:	1212      	asrs	r2, r2, #8
 8027700:	43d4      	mvns	r4, r2
 8027702:	f3c5 2b07 	ubfx	fp, r5, #8, #8
 8027706:	b292      	uxth	r2, r2
 8027708:	b2ed      	uxtb	r5, r5
 802770a:	fa5f f98b 	uxtb.w	r9, fp
 802770e:	fa5f fa86 	uxtb.w	sl, r6
 8027712:	fb15 fc02 	smulbb	ip, r5, r2
 8027716:	fb19 fe02 	smulbb	lr, r9, r2
 802771a:	fb1a f202 	smulbb	r2, sl, r2
 802771e:	f88d 602b 	strb.w	r6, [sp, #43]	@ 0x2b
 8027722:	b2e4      	uxtb	r4, r4
 8027724:	fa1f fc8c 	uxth.w	ip, ip
 8027728:	fa1f fe8e 	uxth.w	lr, lr
 802772c:	b292      	uxth	r2, r2
 802772e:	f1b8 0f00 	cmp.w	r8, #0
 8027732:	d06b      	beq.n	802780c <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x270>
 8027734:	9e06      	ldr	r6, [sp, #24]
 8027736:	2eff      	cmp	r6, #255	@ 0xff
 8027738:	d070      	beq.n	802781c <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x280>
 802773a:	9d04      	ldr	r5, [sp, #16]
 802773c:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
 8027740:	f105 36ff 	add.w	r6, r5, #4294967295
 8027744:	b2b5      	uxth	r5, r6
 8027746:	9504      	str	r5, [sp, #16]
 8027748:	f000 810e 	beq.w	8027968 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x3cc>
 802774c:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8027750:	f100 0a06 	add.w	sl, r0, #6
 8027754:	44aa      	add	sl, r5
 8027756:	f100 0903 	add.w	r9, r0, #3
 802775a:	f819 8c03 	ldrb.w	r8, [r9, #-3]
 802775e:	f819 6c02 	ldrb.w	r6, [r9, #-2]
 8027762:	f819 5c01 	ldrb.w	r5, [r9, #-1]
 8027766:	fb08 c804 	mla	r8, r8, r4, ip
 802776a:	fb06 e604 	mla	r6, r6, r4, lr
 802776e:	fb05 2504 	mla	r5, r5, r4, r2
 8027772:	fa1f f888 	uxth.w	r8, r8
 8027776:	b2b6      	uxth	r6, r6
 8027778:	f108 0b01 	add.w	fp, r8, #1
 802777c:	b2ad      	uxth	r5, r5
 802777e:	eb0b 2818 	add.w	r8, fp, r8, lsr #8
 8027782:	f106 0b01 	add.w	fp, r6, #1
 8027786:	eb0b 2616 	add.w	r6, fp, r6, lsr #8
 802778a:	f105 0b01 	add.w	fp, r5, #1
 802778e:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 8027792:	ea4f 2828 	mov.w	r8, r8, asr #8
 8027796:	1236      	asrs	r6, r6, #8
 8027798:	122d      	asrs	r5, r5, #8
 802779a:	f809 8c03 	strb.w	r8, [r9, #-3]
 802779e:	f809 6c02 	strb.w	r6, [r9, #-2]
 80277a2:	f809 5c01 	strb.w	r5, [r9, #-1]
 80277a6:	f109 0903 	add.w	r9, r9, #3
 80277aa:	45ca      	cmp	sl, r9
 80277ac:	d1d5      	bne.n	802775a <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x1be>
 80277ae:	9e04      	ldr	r6, [sp, #16]
 80277b0:	3601      	adds	r6, #1
 80277b2:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 80277b6:	4430      	add	r0, r6
 80277b8:	42bb      	cmp	r3, r7
 80277ba:	d20d      	bcs.n	80277d8 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x23c>
 80277bc:	9b03      	ldr	r3, [sp, #12]
 80277be:	9f07      	ldr	r7, [sp, #28]
 80277c0:	e776      	b.n	80276b0 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x114>
 80277c2:	1a5b      	subs	r3, r3, r1
 80277c4:	b29b      	uxth	r3, r3
 80277c6:	f8bd 7014 	ldrh.w	r7, [sp, #20]
 80277ca:	2100      	movs	r1, #0
 80277cc:	e770      	b.n	80276b0 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x114>
 80277ce:	462a      	mov	r2, r5
 80277d0:	3202      	adds	r2, #2
 80277d2:	786b      	ldrb	r3, [r5, #1]
 80277d4:	9200      	str	r2, [sp, #0]
 80277d6:	e764      	b.n	80276a2 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x106>
 80277d8:	9c05      	ldr	r4, [sp, #20]
 80277da:	4b33      	ldr	r3, [pc, #204]	@ (80278a8 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x30c>)
 80277dc:	f8bd 1034 	ldrh.w	r1, [sp, #52]	@ 0x34
 80277e0:	b2a7      	uxth	r7, r4
 80277e2:	881a      	ldrh	r2, [r3, #0]
 80277e4:	1bc9      	subs	r1, r1, r7
 80277e6:	b289      	uxth	r1, r1
 80277e8:	1b12      	subs	r2, r2, r4
 80277ea:	2900      	cmp	r1, #0
 80277ec:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80277f0:	9b03      	ldr	r3, [sp, #12]
 80277f2:	bf18      	it	ne
 80277f4:	2700      	movne	r7, #0
 80277f6:	4410      	add	r0, r2
 80277f8:	e75a      	b.n	80276b0 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x114>
 80277fa:	1afa      	subs	r2, r7, r3
 80277fc:	b292      	uxth	r2, r2
 80277fe:	9207      	str	r2, [sp, #28]
 8027800:	2b00      	cmp	r3, #0
 8027802:	f000 80f1 	beq.w	80279e8 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x44c>
 8027806:	e9cd 1303 	strd	r1, r3, [sp, #12]
 802780a:	e770      	b.n	80276ee <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x152>
 802780c:	9a04      	ldr	r2, [sp, #16]
 802780e:	3a01      	subs	r2, #1
 8027810:	b292      	uxth	r2, r2
 8027812:	3201      	adds	r2, #1
 8027814:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8027818:	4410      	add	r0, r2
 802781a:	e7cd      	b.n	80277b8 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x21c>
 802781c:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
 8027820:	d044      	beq.n	80278ac <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x310>
 8027822:	9d04      	ldr	r5, [sp, #16]
 8027824:	f100 0a06 	add.w	sl, r0, #6
 8027828:	1e6e      	subs	r6, r5, #1
 802782a:	b2b5      	uxth	r5, r6
 802782c:	9504      	str	r5, [sp, #16]
 802782e:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8027832:	44aa      	add	sl, r5
 8027834:	f100 0903 	add.w	r9, r0, #3
 8027838:	f819 8c03 	ldrb.w	r8, [r9, #-3]
 802783c:	f819 6c02 	ldrb.w	r6, [r9, #-2]
 8027840:	f819 5c01 	ldrb.w	r5, [r9, #-1]
 8027844:	fb08 c804 	mla	r8, r8, r4, ip
 8027848:	fb06 e604 	mla	r6, r6, r4, lr
 802784c:	fb05 2504 	mla	r5, r5, r4, r2
 8027850:	fa1f f888 	uxth.w	r8, r8
 8027854:	b2b6      	uxth	r6, r6
 8027856:	f108 0b01 	add.w	fp, r8, #1
 802785a:	b2ad      	uxth	r5, r5
 802785c:	eb0b 2818 	add.w	r8, fp, r8, lsr #8
 8027860:	f106 0b01 	add.w	fp, r6, #1
 8027864:	eb0b 2616 	add.w	r6, fp, r6, lsr #8
 8027868:	f105 0b01 	add.w	fp, r5, #1
 802786c:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 8027870:	ea4f 2828 	mov.w	r8, r8, asr #8
 8027874:	1236      	asrs	r6, r6, #8
 8027876:	122d      	asrs	r5, r5, #8
 8027878:	f809 8c03 	strb.w	r8, [r9, #-3]
 802787c:	f809 6c02 	strb.w	r6, [r9, #-2]
 8027880:	f809 5c01 	strb.w	r5, [r9, #-1]
 8027884:	f109 0903 	add.w	r9, r9, #3
 8027888:	45ca      	cmp	sl, r9
 802788a:	d1d5      	bne.n	8027838 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x29c>
 802788c:	9a04      	ldr	r2, [sp, #16]
 802788e:	3201      	adds	r2, #1
 8027890:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8027894:	4410      	add	r0, r2
 8027896:	e78f      	b.n	80277b8 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x21c>
 8027898:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 802789c:	b299      	uxth	r1, r3
 802789e:	fb94 f2f1 	sdiv	r2, r4, r1
 80278a2:	e6a0      	b.n	80275e6 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x4a>
 80278a4:	200830a4 	.word	0x200830a4
 80278a8:	2008309e 	.word	0x2008309e
 80278ac:	9e04      	ldr	r6, [sp, #16]
 80278ae:	1e72      	subs	r2, r6, #1
 80278b0:	b292      	uxth	r2, r2
 80278b2:	2a02      	cmp	r2, #2
 80278b4:	920b      	str	r2, [sp, #44]	@ 0x2c
 80278b6:	f240 808d 	bls.w	80279d4 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x438>
 80278ba:	f04f 0800 	mov.w	r8, #0
 80278be:	46c6      	mov	lr, r8
 80278c0:	46c4      	mov	ip, r8
 80278c2:	4602      	mov	r2, r0
 80278c4:	4644      	mov	r4, r8
 80278c6:	f369 0e07 	bfi	lr, r9, #0, #8
 80278ca:	f36a 0807 	bfi	r8, sl, #0, #8
 80278ce:	f365 0c07 	bfi	ip, r5, #0, #8
 80278d2:	f36a 2e0f 	bfi	lr, sl, #8, #8
 80278d6:	f365 280f 	bfi	r8, r5, #8, #8
 80278da:	f369 2c0f 	bfi	ip, r9, #8, #8
 80278de:	f36a 4c17 	bfi	ip, sl, #16, #8
 80278e2:	f369 4817 	bfi	r8, r9, #16, #8
 80278e6:	f365 4e17 	bfi	lr, r5, #16, #8
 80278ea:	f36a 681f 	bfi	r8, sl, #24, #8
 80278ee:	9004      	str	r0, [sp, #16]
 80278f0:	f369 6e1f 	bfi	lr, r9, #24, #8
 80278f4:	f365 6c1f 	bfi	ip, r5, #24, #8
 80278f8:	f3c6 0a8f 	ubfx	sl, r6, #2, #16
 80278fc:	3401      	adds	r4, #1
 80278fe:	fa1f f984 	uxth.w	r9, r4
 8027902:	45d1      	cmp	r9, sl
 8027904:	f8c2 c000 	str.w	ip, [r2]
 8027908:	f8c2 e004 	str.w	lr, [r2, #4]
 802790c:	f8c2 8008 	str.w	r8, [r2, #8]
 8027910:	f102 020c 	add.w	r2, r2, #12
 8027914:	d3f2      	bcc.n	80278fc <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x360>
 8027916:	f026 0403 	bic.w	r4, r6, #3
 802791a:	b2a4      	uxth	r4, r4
 802791c:	eb04 0e44 	add.w	lr, r4, r4, lsl #1
 8027920:	eba6 0c04 	sub.w	ip, r6, r4
 8027924:	42a6      	cmp	r6, r4
 8027926:	9604      	str	r6, [sp, #16]
 8027928:	eb0e 0200 	add.w	r2, lr, r0
 802792c:	fa1f fc8c 	uxth.w	ip, ip
 8027930:	d014      	beq.n	802795c <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x3c0>
 8027932:	f10c 34ff 	add.w	r4, ip, #4294967295
 8027936:	f89d 602b 	ldrb.w	r6, [sp, #43]	@ 0x2b
 802793a:	b2a4      	uxth	r4, r4
 802793c:	7015      	strb	r5, [r2, #0]
 802793e:	f882 b001 	strb.w	fp, [r2, #1]
 8027942:	7096      	strb	r6, [r2, #2]
 8027944:	b154      	cbz	r4, 802795c <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x3c0>
 8027946:	f1bc 0f02 	cmp.w	ip, #2
 802794a:	70d5      	strb	r5, [r2, #3]
 802794c:	f882 b004 	strb.w	fp, [r2, #4]
 8027950:	7156      	strb	r6, [r2, #5]
 8027952:	d003      	beq.n	802795c <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x3c0>
 8027954:	7195      	strb	r5, [r2, #6]
 8027956:	f882 b007 	strb.w	fp, [r2, #7]
 802795a:	7216      	strb	r6, [r2, #8]
 802795c:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 802795e:	3201      	adds	r2, #1
 8027960:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8027964:	4410      	add	r0, r2
 8027966:	e727      	b.n	80277b8 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x21c>
 8027968:	eb05 0a45 	add.w	sl, r5, r5, lsl #1
 802796c:	1d85      	adds	r5, r0, #6
 802796e:	44aa      	add	sl, r5
 8027970:	f100 0903 	add.w	r9, r0, #3
 8027974:	f819 8c03 	ldrb.w	r8, [r9, #-3]
 8027978:	f819 6c02 	ldrb.w	r6, [r9, #-2]
 802797c:	f819 5c01 	ldrb.w	r5, [r9, #-1]
 8027980:	fb08 c804 	mla	r8, r8, r4, ip
 8027984:	fb06 e604 	mla	r6, r6, r4, lr
 8027988:	fb05 2504 	mla	r5, r5, r4, r2
 802798c:	fa1f f888 	uxth.w	r8, r8
 8027990:	b2b6      	uxth	r6, r6
 8027992:	f108 0b01 	add.w	fp, r8, #1
 8027996:	b2ad      	uxth	r5, r5
 8027998:	eb0b 2818 	add.w	r8, fp, r8, lsr #8
 802799c:	f106 0b01 	add.w	fp, r6, #1
 80279a0:	eb0b 2616 	add.w	r6, fp, r6, lsr #8
 80279a4:	f105 0b01 	add.w	fp, r5, #1
 80279a8:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 80279ac:	ea4f 2828 	mov.w	r8, r8, asr #8
 80279b0:	1236      	asrs	r6, r6, #8
 80279b2:	122d      	asrs	r5, r5, #8
 80279b4:	f809 8c03 	strb.w	r8, [r9, #-3]
 80279b8:	f809 6c02 	strb.w	r6, [r9, #-2]
 80279bc:	f809 5c01 	strb.w	r5, [r9, #-1]
 80279c0:	f109 0903 	add.w	r9, r9, #3
 80279c4:	45d1      	cmp	r9, sl
 80279c6:	d1d5      	bne.n	8027974 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x3d8>
 80279c8:	9a04      	ldr	r2, [sp, #16]
 80279ca:	3201      	adds	r2, #1
 80279cc:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80279d0:	4410      	add	r0, r2
 80279d2:	e6f1      	b.n	80277b8 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x21c>
 80279d4:	46b4      	mov	ip, r6
 80279d6:	4602      	mov	r2, r0
 80279d8:	e7ab      	b.n	8027932 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x396>
 80279da:	4b05      	ldr	r3, [pc, #20]	@ (80279f0 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x454>)
 80279dc:	4a05      	ldr	r2, [pc, #20]	@ (80279f4 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x458>)
 80279de:	f640 2118 	movw	r1, #2584	@ 0xa18
 80279e2:	4805      	ldr	r0, [pc, #20]	@ (80279f8 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x45c>)
 80279e4:	f00a fec8 	bl	8032778 <__assert_func>
 80279e8:	9f07      	ldr	r7, [sp, #28]
 80279ea:	4619      	mov	r1, r3
 80279ec:	e660      	b.n	80276b0 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x114>
 80279ee:	bf00      	nop
 80279f0:	08036654 	.word	0x08036654
 80279f4:	08037ce0 	.word	0x08037ce0
 80279f8:	08036560 	.word	0x08036560

080279fc <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h>:
 80279fc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8027a00:	b09d      	sub	sp, #116	@ 0x74
 8027a02:	920e      	str	r2, [sp, #56]	@ 0x38
 8027a04:	461c      	mov	r4, r3
 8027a06:	7812      	ldrb	r2, [r2, #0]
 8027a08:	f89d 309c 	ldrb.w	r3, [sp, #156]	@ 0x9c
 8027a0c:	9114      	str	r1, [sp, #80]	@ 0x50
 8027a0e:	9304      	str	r3, [sp, #16]
 8027a10:	2a00      	cmp	r2, #0
 8027a12:	f040 8207 	bne.w	8027e24 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x428>
 8027a16:	b913      	cbnz	r3, 8027a1e <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x22>
 8027a18:	b01d      	add	sp, #116	@ 0x74
 8027a1a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8027a1e:	6861      	ldr	r1, [r4, #4]
 8027a20:	4681      	mov	r9, r0
 8027a22:	6820      	ldr	r0, [r4, #0]
 8027a24:	ab18      	add	r3, sp, #96	@ 0x60
 8027a26:	c303      	stmia	r3!, {r0, r1}
 8027a28:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 8027a2a:	6818      	ldr	r0, [r3, #0]
 8027a2c:	6859      	ldr	r1, [r3, #4]
 8027a2e:	ab1a      	add	r3, sp, #104	@ 0x68
 8027a30:	c303      	stmia	r3!, {r0, r1}
 8027a32:	a818      	add	r0, sp, #96	@ 0x60
 8027a34:	f7e5 fac4 	bl	800cfc0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8027a38:	4621      	mov	r1, r4
 8027a3a:	a81a      	add	r0, sp, #104	@ 0x68
 8027a3c:	f7e5 fae8 	bl	800d010 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8027a40:	f9bd 1064 	ldrsh.w	r1, [sp, #100]	@ 0x64
 8027a44:	f5b1 6f80 	cmp.w	r1, #1024	@ 0x400
 8027a48:	f340 8151 	ble.w	8027cee <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x2f2>
 8027a4c:	2301      	movs	r3, #1
 8027a4e:	b289      	uxth	r1, r1
 8027a50:	9316      	str	r3, [sp, #88]	@ 0x58
 8027a52:	f9bd 006a 	ldrsh.w	r0, [sp, #106]	@ 0x6a
 8027a56:	f9bd 2066 	ldrsh.w	r2, [sp, #102]	@ 0x66
 8027a5a:	fb90 f4f3 	sdiv	r4, r0, r3
 8027a5e:	441a      	add	r2, r3
 8027a60:	3a01      	subs	r2, #1
 8027a62:	fb92 f2f3 	sdiv	r2, r2, r3
 8027a66:	b2a4      	uxth	r4, r4
 8027a68:	fb03 0314 	mls	r3, r3, r4, r0
 8027a6c:	9415      	str	r4, [sp, #84]	@ 0x54
 8027a6e:	f8bd 4068 	ldrh.w	r4, [sp, #104]	@ 0x68
 8027a72:	f8bd 6060 	ldrh.w	r6, [sp, #96]	@ 0x60
 8027a76:	fb13 4101 	smlabb	r1, r3, r1, r4
 8027a7a:	f8bd 5062 	ldrh.w	r5, [sp, #98]	@ 0x62
 8027a7e:	4bba      	ldr	r3, [pc, #744]	@ (8027d68 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x36c>)
 8027a80:	4434      	add	r4, r6
 8027a82:	4405      	add	r5, r0
 8027a84:	6818      	ldr	r0, [r3, #0]
 8027a86:	f8ad 4068 	strh.w	r4, [sp, #104]	@ 0x68
 8027a8a:	f8ad 506a 	strh.w	r5, [sp, #106]	@ 0x6a
 8027a8e:	f9bd 606c 	ldrsh.w	r6, [sp, #108]	@ 0x6c
 8027a92:	6803      	ldr	r3, [r0, #0]
 8027a94:	3201      	adds	r2, #1
 8027a96:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8027a98:	9609      	str	r6, [sp, #36]	@ 0x24
 8027a9a:	fa1f f881 	uxth.w	r8, r1
 8027a9e:	b294      	uxth	r4, r2
 8027aa0:	f9bd 506e 	ldrsh.w	r5, [sp, #110]	@ 0x6e
 8027aa4:	4798      	blx	r3
 8027aa6:	2200      	movs	r2, #0
 8027aa8:	f1b8 0f00 	cmp.w	r8, #0
 8027aac:	bf0c      	ite	eq
 8027aae:	4633      	moveq	r3, r6
 8027ab0:	2300      	movne	r3, #0
 8027ab2:	49ae      	ldr	r1, [pc, #696]	@ (8027d6c <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x370>)
 8027ab4:	9213      	str	r2, [sp, #76]	@ 0x4c
 8027ab6:	8809      	ldrh	r1, [r1, #0]
 8027ab8:	f9bd 206a 	ldrsh.w	r2, [sp, #106]	@ 0x6a
 8027abc:	f9bd 6068 	ldrsh.w	r6, [sp, #104]	@ 0x68
 8027ac0:	fb01 f505 	mul.w	r5, r1, r5
 8027ac4:	fb01 6202 	mla	r2, r1, r2, r6
 8027ac8:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8027acc:	1882      	adds	r2, r0, r2
 8027ace:	b29b      	uxth	r3, r3
 8027ad0:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8027ad4:	9200      	str	r2, [sp, #0]
 8027ad6:	9302      	str	r3, [sp, #8]
 8027ad8:	442a      	add	r2, r5
 8027ada:	f109 030e 	add.w	r3, r9, #14
 8027ade:	9317      	str	r3, [sp, #92]	@ 0x5c
 8027ae0:	4647      	mov	r7, r8
 8027ae2:	4613      	mov	r3, r2
 8027ae4:	00a4      	lsls	r4, r4, #2
 8027ae6:	1d21      	adds	r1, r4, #4
 8027ae8:	9111      	str	r1, [sp, #68]	@ 0x44
 8027aea:	9206      	str	r2, [sp, #24]
 8027aec:	9a00      	ldr	r2, [sp, #0]
 8027aee:	4293      	cmp	r3, r2
 8027af0:	f240 80f5 	bls.w	8027cde <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x2e2>
 8027af4:	2301      	movs	r3, #1
 8027af6:	2600      	movs	r6, #0
 8027af8:	9815      	ldr	r0, [sp, #84]	@ 0x54
 8027afa:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8027afc:	9307      	str	r3, [sp, #28]
 8027afe:	fa10 f282 	uxtah	r2, r0, r2
 8027b02:	0092      	lsls	r2, r2, #2
 8027b04:	980e      	ldr	r0, [sp, #56]	@ 0x38
 8027b06:	3204      	adds	r2, #4
 8027b08:	4410      	add	r0, r2
 8027b0a:	7883      	ldrb	r3, [r0, #2]
 8027b0c:	7845      	ldrb	r5, [r0, #1]
 8027b0e:	021b      	lsls	r3, r3, #8
 8027b10:	78c0      	ldrb	r0, [r0, #3]
 8027b12:	ea43 4405 	orr.w	r4, r3, r5, lsl #16
 8027b16:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 8027b18:	4304      	orrs	r4, r0
 8027b1a:	1928      	adds	r0, r5, r4
 8027b1c:	7843      	ldrb	r3, [r0, #1]
 8027b1e:	3001      	adds	r0, #1
 8027b20:	9610      	str	r6, [sp, #64]	@ 0x40
 8027b22:	9003      	str	r0, [sp, #12]
 8027b24:	4630      	mov	r0, r6
 8027b26:	2601      	movs	r6, #1
 8027b28:	f8bd 1064 	ldrh.w	r1, [sp, #100]	@ 0x64
 8027b2c:	46b0      	mov	r8, r6
 8027b2e:	fbb7 f1f1 	udiv	r1, r7, r1
 8027b32:	5d2c      	ldrb	r4, [r5, r4]
 8027b34:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 8027b36:	021b      	lsls	r3, r3, #8
 8027b38:	5caa      	ldrb	r2, [r5, r2]
 8027b3a:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 8027b3c:	f403 73ff 	and.w	r3, r3, #510	@ 0x1fe
 8027b40:	431c      	orrs	r4, r3
 8027b42:	920b      	str	r2, [sp, #44]	@ 0x2c
 8027b44:	1a69      	subs	r1, r5, r1
 8027b46:	3201      	adds	r2, #1
 8027b48:	f889 400d 	strb.w	r4, [r9, #13]
 8027b4c:	9205      	str	r2, [sp, #20]
 8027b4e:	b2a4      	uxth	r4, r4
 8027b50:	b28a      	uxth	r2, r1
 8027b52:	9408      	str	r4, [sp, #32]
 8027b54:	9212      	str	r2, [sp, #72]	@ 0x48
 8027b56:	2f00      	cmp	r7, #0
 8027b58:	d034      	beq.n	8027bc4 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x1c8>
 8027b5a:	42be      	cmp	r6, r7
 8027b5c:	f080 80cf 	bcs.w	8027cfe <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x302>
 8027b60:	1bbf      	subs	r7, r7, r6
 8027b62:	b2bf      	uxth	r7, r7
 8027b64:	9b06      	ldr	r3, [sp, #24]
 8027b66:	9a00      	ldr	r2, [sp, #0]
 8027b68:	4293      	cmp	r3, r2
 8027b6a:	f240 80b8 	bls.w	8027cde <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x2e2>
 8027b6e:	9803      	ldr	r0, [sp, #12]
 8027b70:	f1c8 0107 	rsb	r1, r8, #7
 8027b74:	7842      	ldrb	r2, [r0, #1]
 8027b76:	7803      	ldrb	r3, [r0, #0]
 8027b78:	408a      	lsls	r2, r1
 8027b7a:	fa43 f308 	asr.w	r3, r3, r8
 8027b7e:	0052      	lsls	r2, r2, #1
 8027b80:	f108 0801 	add.w	r8, r8, #1
 8027b84:	f402 72ff 	and.w	r2, r2, #510	@ 0x1fe
 8027b88:	b2db      	uxtb	r3, r3
 8027b8a:	fa5f f888 	uxtb.w	r8, r8
 8027b8e:	4313      	orrs	r3, r2
 8027b90:	f1b8 0f08 	cmp.w	r8, #8
 8027b94:	b29a      	uxth	r2, r3
 8027b96:	f000 80e0 	beq.w	8027d5a <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x35e>
 8027b9a:	3001      	adds	r0, #1
 8027b9c:	9003      	str	r0, [sp, #12]
 8027b9e:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 8027ba0:	4291      	cmp	r1, r2
 8027ba2:	f0c0 80bc 	bcc.w	8027d1e <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x322>
 8027ba6:	9905      	ldr	r1, [sp, #20]
 8027ba8:	b2db      	uxtb	r3, r3
 8027baa:	f5b1 7f00 	cmp.w	r1, #512	@ 0x200
 8027bae:	f889 300d 	strb.w	r3, [r9, #13]
 8027bb2:	f04f 0601 	mov.w	r6, #1
 8027bb6:	f0c0 8121 	bcc.w	8027dfc <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x400>
 8027bba:	e9cd 6207 	strd	r6, r2, [sp, #28]
 8027bbe:	2000      	movs	r0, #0
 8027bc0:	2f00      	cmp	r7, #0
 8027bc2:	d1ca      	bne.n	8027b5a <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x15e>
 8027bc4:	9b02      	ldr	r3, [sp, #8]
 8027bc6:	429e      	cmp	r6, r3
 8027bc8:	461a      	mov	r2, r3
 8027bca:	f0c0 80f0 	bcc.w	8027dae <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x3b2>
 8027bce:	1af3      	subs	r3, r6, r3
 8027bd0:	b29b      	uxth	r3, r3
 8027bd2:	930a      	str	r3, [sp, #40]	@ 0x28
 8027bd4:	2a00      	cmp	r2, #0
 8027bd6:	f000 80cb 	beq.w	8027d70 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x374>
 8027bda:	4694      	mov	ip, r2
 8027bdc:	970f      	str	r7, [sp, #60]	@ 0x3c
 8027bde:	9b00      	ldr	r3, [sp, #0]
 8027be0:	eb00 0e0c 	add.w	lr, r0, ip
 8027be4:	960c      	str	r6, [sp, #48]	@ 0x30
 8027be6:	970d      	str	r7, [sp, #52]	@ 0x34
 8027be8:	fa1f fe8e 	uxth.w	lr, lr
 8027bec:	1cdd      	adds	r5, r3, #3
 8027bee:	9e11      	ldr	r6, [sp, #68]	@ 0x44
 8027bf0:	9f0e      	ldr	r7, [sp, #56]	@ 0x38
 8027bf2:	e037      	b.n	8027c64 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x268>
 8027bf4:	9a04      	ldr	r2, [sp, #16]
 8027bf6:	9b01      	ldr	r3, [sp, #4]
 8027bf8:	fb02 f101 	mul.w	r1, r2, r1
 8027bfc:	1c4a      	adds	r2, r1, #1
 8027bfe:	eb02 2121 	add.w	r1, r2, r1, asr #8
 8027c02:	1209      	asrs	r1, r1, #8
 8027c04:	43ca      	mvns	r2, r1
 8027c06:	b289      	uxth	r1, r1
 8027c08:	fb13 f301 	smulbb	r3, r3, r1
 8027c0c:	fb1b fb01 	smulbb	fp, fp, r1
 8027c10:	fb1a f101 	smulbb	r1, sl, r1
 8027c14:	f815 ac03 	ldrb.w	sl, [r5, #-3]
 8027c18:	b2d2      	uxtb	r2, r2
 8027c1a:	fb0a 3302 	mla	r3, sl, r2, r3
 8027c1e:	f815 4c02 	ldrb.w	r4, [r5, #-2]
 8027c22:	f815 ac01 	ldrb.w	sl, [r5, #-1]
 8027c26:	fb04 b402 	mla	r4, r4, r2, fp
 8027c2a:	fb0a 1102 	mla	r1, sl, r2, r1
 8027c2e:	b29b      	uxth	r3, r3
 8027c30:	b2a4      	uxth	r4, r4
 8027c32:	b289      	uxth	r1, r1
 8027c34:	f103 0a01 	add.w	sl, r3, #1
 8027c38:	f104 0b01 	add.w	fp, r4, #1
 8027c3c:	1c4a      	adds	r2, r1, #1
 8027c3e:	eb0a 2313 	add.w	r3, sl, r3, lsr #8
 8027c42:	eb0b 2414 	add.w	r4, fp, r4, lsr #8
 8027c46:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8027c4a:	121b      	asrs	r3, r3, #8
 8027c4c:	1224      	asrs	r4, r4, #8
 8027c4e:	1209      	asrs	r1, r1, #8
 8027c50:	f805 3c03 	strb.w	r3, [r5, #-3]
 8027c54:	f805 4c02 	strb.w	r4, [r5, #-2]
 8027c58:	f805 1c01 	strb.w	r1, [r5, #-1]
 8027c5c:	4570      	cmp	r0, lr
 8027c5e:	f105 0503 	add.w	r5, r5, #3
 8027c62:	d024      	beq.n	8027cae <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x2b2>
 8027c64:	2204      	movs	r2, #4
 8027c66:	eb09 0300 	add.w	r3, r9, r0
 8027c6a:	7b5b      	ldrb	r3, [r3, #13]
 8027c6c:	3001      	adds	r0, #1
 8027c6e:	fb12 6303 	smlabb	r3, r2, r3, r6
 8027c72:	58fb      	ldr	r3, [r7, r3]
 8027c74:	b280      	uxth	r0, r0
 8027c76:	0e19      	lsrs	r1, r3, #24
 8027c78:	d0f0      	beq.n	8027c5c <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x260>
 8027c7a:	f3c3 2407 	ubfx	r4, r3, #8, #8
 8027c7e:	f3c3 4207 	ubfx	r2, r3, #16, #8
 8027c82:	29ff      	cmp	r1, #255	@ 0xff
 8027c84:	b2db      	uxtb	r3, r3
 8027c86:	fa5f fb84 	uxtb.w	fp, r4
 8027c8a:	9301      	str	r3, [sp, #4]
 8027c8c:	fa5f fa82 	uxtb.w	sl, r2
 8027c90:	d1b0      	bne.n	8027bf4 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x1f8>
 8027c92:	9b04      	ldr	r3, [sp, #16]
 8027c94:	2bff      	cmp	r3, #255	@ 0xff
 8027c96:	d1ad      	bne.n	8027bf4 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x1f8>
 8027c98:	9b01      	ldr	r3, [sp, #4]
 8027c9a:	4570      	cmp	r0, lr
 8027c9c:	f805 3c03 	strb.w	r3, [r5, #-3]
 8027ca0:	f805 4c02 	strb.w	r4, [r5, #-2]
 8027ca4:	f805 2c01 	strb.w	r2, [r5, #-1]
 8027ca8:	f105 0503 	add.w	r5, r5, #3
 8027cac:	d1da      	bne.n	8027c64 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x268>
 8027cae:	e9dd 670c 	ldrd	r6, r7, [sp, #48]	@ 0x30
 8027cb2:	f10c 3cff 	add.w	ip, ip, #4294967295
 8027cb6:	fa1f fc8c 	uxth.w	ip, ip
 8027cba:	9b00      	ldr	r3, [sp, #0]
 8027cbc:	f10c 0c01 	add.w	ip, ip, #1
 8027cc0:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 8027cc4:	4463      	add	r3, ip
 8027cc6:	9300      	str	r3, [sp, #0]
 8027cc8:	9b02      	ldr	r3, [sp, #8]
 8027cca:	429e      	cmp	r6, r3
 8027ccc:	d251      	bcs.n	8027d72 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x376>
 8027cce:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8027cd0:	9a00      	ldr	r2, [sp, #0]
 8027cd2:	9302      	str	r3, [sp, #8]
 8027cd4:	9b06      	ldr	r3, [sp, #24]
 8027cd6:	4670      	mov	r0, lr
 8027cd8:	4293      	cmp	r3, r2
 8027cda:	9e0a      	ldr	r6, [sp, #40]	@ 0x28
 8027cdc:	d81b      	bhi.n	8027d16 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x31a>
 8027cde:	4b22      	ldr	r3, [pc, #136]	@ (8027d68 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x36c>)
 8027ce0:	6818      	ldr	r0, [r3, #0]
 8027ce2:	6803      	ldr	r3, [r0, #0]
 8027ce4:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8027ce6:	4798      	blx	r3
 8027ce8:	b01d      	add	sp, #116	@ 0x74
 8027cea:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8027cee:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 8027cf2:	b289      	uxth	r1, r1
 8027cf4:	fb93 f3f1 	sdiv	r3, r3, r1
 8027cf8:	b29a      	uxth	r2, r3
 8027cfa:	9216      	str	r2, [sp, #88]	@ 0x58
 8027cfc:	e6a9      	b.n	8027a52 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x56>
 8027cfe:	1bf6      	subs	r6, r6, r7
 8027d00:	4438      	add	r0, r7
 8027d02:	2700      	movs	r7, #0
 8027d04:	f8bd 3024 	ldrh.w	r3, [sp, #36]	@ 0x24
 8027d08:	b2b6      	uxth	r6, r6
 8027d0a:	b280      	uxth	r0, r0
 8027d0c:	9302      	str	r3, [sp, #8]
 8027d0e:	9b06      	ldr	r3, [sp, #24]
 8027d10:	9a00      	ldr	r2, [sp, #0]
 8027d12:	4293      	cmp	r3, r2
 8027d14:	d9e3      	bls.n	8027cde <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x2e2>
 8027d16:	2e00      	cmp	r6, #0
 8027d18:	f47f af1d 	bne.w	8027b56 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x15a>
 8027d1c:	e727      	b.n	8027b6e <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x172>
 8027d1e:	9b05      	ldr	r3, [sp, #20]
 8027d20:	429a      	cmp	r2, r3
 8027d22:	d34d      	bcc.n	8027dc0 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x3c4>
 8027d24:	9807      	ldr	r0, [sp, #28]
 8027d26:	f899 100d 	ldrb.w	r1, [r9, #13]
 8027d2a:	eb09 0300 	add.w	r3, r9, r0
 8027d2e:	7359      	strb	r1, [r3, #13]
 8027d30:	f899 300d 	ldrb.w	r3, [r9, #13]
 8027d34:	1c41      	adds	r1, r0, #1
 8027d36:	b28e      	uxth	r6, r1
 8027d38:	9c05      	ldr	r4, [sp, #20]
 8027d3a:	9d08      	ldr	r5, [sp, #32]
 8027d3c:	eb09 0084 	add.w	r0, r9, r4, lsl #2
 8027d40:	3401      	adds	r4, #1
 8027d42:	f880 304e 	strb.w	r3, [r0, #78]	@ 0x4e
 8027d46:	b2a3      	uxth	r3, r4
 8027d48:	f8a0 5050 	strh.w	r5, [r0, #80]	@ 0x50
 8027d4c:	f880 104f 	strb.w	r1, [r0, #79]	@ 0x4f
 8027d50:	9305      	str	r3, [sp, #20]
 8027d52:	e9cd 6207 	strd	r6, r2, [sp, #28]
 8027d56:	2000      	movs	r0, #0
 8027d58:	e6fd      	b.n	8027b56 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x15a>
 8027d5a:	4601      	mov	r1, r0
 8027d5c:	3102      	adds	r1, #2
 8027d5e:	f04f 0800 	mov.w	r8, #0
 8027d62:	9103      	str	r1, [sp, #12]
 8027d64:	e71b      	b.n	8027b9e <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x1a2>
 8027d66:	bf00      	nop
 8027d68:	200830a4 	.word	0x200830a4
 8027d6c:	2008309e 	.word	0x2008309e
 8027d70:	4686      	mov	lr, r0
 8027d72:	4b30      	ldr	r3, [pc, #192]	@ (8027e34 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x438>)
 8027d74:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8027d76:	881b      	ldrh	r3, [r3, #0]
 8027d78:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8027d7a:	1a5b      	subs	r3, r3, r1
 8027d7c:	9900      	ldr	r1, [sp, #0]
 8027d7e:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8027d82:	4419      	add	r1, r3
 8027d84:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 8027d86:	3201      	adds	r2, #1
 8027d88:	429a      	cmp	r2, r3
 8027d8a:	9210      	str	r2, [sp, #64]	@ 0x40
 8027d8c:	9100      	str	r1, [sp, #0]
 8027d8e:	d038      	beq.n	8027e02 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x406>
 8027d90:	f8bd 3024 	ldrh.w	r3, [sp, #36]	@ 0x24
 8027d94:	f8bd 7064 	ldrh.w	r7, [sp, #100]	@ 0x64
 8027d98:	4670      	mov	r0, lr
 8027d9a:	1aff      	subs	r7, r7, r3
 8027d9c:	b2bf      	uxth	r7, r7
 8027d9e:	2f00      	cmp	r7, #0
 8027da0:	bf18      	it	ne
 8027da2:	2300      	movne	r3, #0
 8027da4:	9e0a      	ldr	r6, [sp, #40]	@ 0x28
 8027da6:	9302      	str	r3, [sp, #8]
 8027da8:	bf08      	it	eq
 8027daa:	2700      	moveq	r7, #0
 8027dac:	e7af      	b.n	8027d0e <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x312>
 8027dae:	1b9b      	subs	r3, r3, r6
 8027db0:	b29b      	uxth	r3, r3
 8027db2:	930f      	str	r3, [sp, #60]	@ 0x3c
 8027db4:	2e00      	cmp	r6, #0
 8027db6:	f43f aed5 	beq.w	8027b64 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x168>
 8027dba:	970a      	str	r7, [sp, #40]	@ 0x28
 8027dbc:	46b4      	mov	ip, r6
 8027dbe:	e70e      	b.n	8027bde <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x1e2>
 8027dc0:	eb09 0382 	add.w	r3, r9, r2, lsl #2
 8027dc4:	f893 604f 	ldrb.w	r6, [r3, #79]	@ 0x4f
 8027dc8:	4613      	mov	r3, r2
 8027dca:	2e01      	cmp	r6, #1
 8027dcc:	d90d      	bls.n	8027dea <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x3ee>
 8027dce:	f106 010d 	add.w	r1, r6, #13
 8027dd2:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
 8027dd4:	4449      	add	r1, r9
 8027dd6:	eb09 0383 	add.w	r3, r9, r3, lsl #2
 8027dda:	f893 004e 	ldrb.w	r0, [r3, #78]	@ 0x4e
 8027dde:	f801 0d01 	strb.w	r0, [r1, #-1]!
 8027de2:	428c      	cmp	r4, r1
 8027de4:	f8b3 3050 	ldrh.w	r3, [r3, #80]	@ 0x50
 8027de8:	d1f5      	bne.n	8027dd6 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x3da>
 8027dea:	9905      	ldr	r1, [sp, #20]
 8027dec:	b2db      	uxtb	r3, r3
 8027dee:	f5b1 7f00 	cmp.w	r1, #512	@ 0x200
 8027df2:	f889 300d 	strb.w	r3, [r9, #13]
 8027df6:	b2b6      	uxth	r6, r6
 8027df8:	f4bf aedf 	bcs.w	8027bba <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x1be>
 8027dfc:	9907      	ldr	r1, [sp, #28]
 8027dfe:	3101      	adds	r1, #1
 8027e00:	e79a      	b.n	8027d38 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x33c>
 8027e02:	f8bd 3060 	ldrh.w	r3, [sp, #96]	@ 0x60
 8027e06:	f8bd 7068 	ldrh.w	r7, [sp, #104]	@ 0x68
 8027e0a:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8027e0c:	1aff      	subs	r7, r7, r3
 8027e0e:	b2bf      	uxth	r7, r7
 8027e10:	2f00      	cmp	r7, #0
 8027e12:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8027e14:	bf18      	it	ne
 8027e16:	2300      	movne	r3, #0
 8027e18:	3201      	adds	r2, #1
 8027e1a:	b29b      	uxth	r3, r3
 8027e1c:	9302      	str	r3, [sp, #8]
 8027e1e:	9213      	str	r2, [sp, #76]	@ 0x4c
 8027e20:	9b06      	ldr	r3, [sp, #24]
 8027e22:	e663      	b.n	8027aec <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0xf0>
 8027e24:	4b04      	ldr	r3, [pc, #16]	@ (8027e38 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x43c>)
 8027e26:	4a05      	ldr	r2, [pc, #20]	@ (8027e3c <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x440>)
 8027e28:	f640 21ae 	movw	r1, #2734	@ 0xaae
 8027e2c:	4804      	ldr	r0, [pc, #16]	@ (8027e40 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x444>)
 8027e2e:	f00a fca3 	bl	8032778 <__assert_func>
 8027e32:	bf00      	nop
 8027e34:	2008309e 	.word	0x2008309e
 8027e38:	08036654 	.word	0x08036654
 8027e3c:	08037fac 	.word	0x08037fac
 8027e40:	08036560 	.word	0x08036560

08027e44 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_24BPPEPKhS2_RKNS_4RectES5_h>:
 8027e44:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8027e48:	4617      	mov	r7, r2
 8027e4a:	b095      	sub	sp, #84	@ 0x54
 8027e4c:	8812      	ldrh	r2, [r2, #0]
 8027e4e:	4688      	mov	r8, r1
 8027e50:	f89d 107c 	ldrb.w	r1, [sp, #124]	@ 0x7c
 8027e54:	2a01      	cmp	r2, #1
 8027e56:	461c      	mov	r4, r3
 8027e58:	910d      	str	r1, [sp, #52]	@ 0x34
 8027e5a:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 8027e5c:	f040 8105 	bne.w	802806a <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x226>
 8027e60:	6820      	ldr	r0, [r4, #0]
 8027e62:	6861      	ldr	r1, [r4, #4]
 8027e64:	aa10      	add	r2, sp, #64	@ 0x40
 8027e66:	c203      	stmia	r2!, {r0, r1}
 8027e68:	6818      	ldr	r0, [r3, #0]
 8027e6a:	6859      	ldr	r1, [r3, #4]
 8027e6c:	aa12      	add	r2, sp, #72	@ 0x48
 8027e6e:	c203      	stmia	r2!, {r0, r1}
 8027e70:	a810      	add	r0, sp, #64	@ 0x40
 8027e72:	f7e5 f8a5 	bl	800cfc0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8027e76:	4621      	mov	r1, r4
 8027e78:	a812      	add	r0, sp, #72	@ 0x48
 8027e7a:	f7e5 f8c9 	bl	800d010 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8027e7e:	f9bd 4048 	ldrsh.w	r4, [sp, #72]	@ 0x48
 8027e82:	f9bd 504a 	ldrsh.w	r5, [sp, #74]	@ 0x4a
 8027e86:	f8bd 2040 	ldrh.w	r2, [sp, #64]	@ 0x40
 8027e8a:	f8bd 3042 	ldrh.w	r3, [sp, #66]	@ 0x42
 8027e8e:	487a      	ldr	r0, [pc, #488]	@ (8028078 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x234>)
 8027e90:	f8bd 1044 	ldrh.w	r1, [sp, #68]	@ 0x44
 8027e94:	4422      	add	r2, r4
 8027e96:	442b      	add	r3, r5
 8027e98:	6800      	ldr	r0, [r0, #0]
 8027e9a:	fb11 4105 	smlabb	r1, r1, r5, r4
 8027e9e:	f8ad 304a 	strh.w	r3, [sp, #74]	@ 0x4a
 8027ea2:	f8ad 2048 	strh.w	r2, [sp, #72]	@ 0x48
 8027ea6:	6802      	ldr	r2, [r0, #0]
 8027ea8:	4c74      	ldr	r4, [pc, #464]	@ (802807c <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x238>)
 8027eaa:	f8d2 30a0 	ldr.w	r3, [r2, #160]	@ 0xa0
 8027eae:	4488      	add	r8, r1
 8027eb0:	f9bd 104e 	ldrsh.w	r1, [sp, #78]	@ 0x4e
 8027eb4:	42a3      	cmp	r3, r4
 8027eb6:	f9bd a04c 	ldrsh.w	sl, [sp, #76]	@ 0x4c
 8027eba:	910c      	str	r1, [sp, #48]	@ 0x30
 8027ebc:	f040 809f 	bne.w	8027ffe <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x1ba>
 8027ec0:	6841      	ldr	r1, [r0, #4]
 8027ec2:	4c6f      	ldr	r4, [pc, #444]	@ (8028080 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x23c>)
 8027ec4:	680b      	ldr	r3, [r1, #0]
 8027ec6:	699b      	ldr	r3, [r3, #24]
 8027ec8:	42a3      	cmp	r3, r4
 8027eca:	f040 80c0 	bne.w	802804e <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x20a>
 8027ece:	6a93      	ldr	r3, [r2, #40]	@ 0x28
 8027ed0:	4798      	blx	r3
 8027ed2:	4a6c      	ldr	r2, [pc, #432]	@ (8028084 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x240>)
 8027ed4:	f9bd 304a 	ldrsh.w	r3, [sp, #74]	@ 0x4a
 8027ed8:	8814      	ldrh	r4, [r2, #0]
 8027eda:	f9bd 2048 	ldrsh.w	r2, [sp, #72]	@ 0x48
 8027ede:	fb04 2303 	mla	r3, r4, r3, r2
 8027ee2:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8027ee6:	4418      	add	r0, r3
 8027ee8:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8027eea:	2b00      	cmp	r3, #0
 8027eec:	dd67      	ble.n	8027fbe <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x17a>
 8027eee:	2300      	movs	r3, #0
 8027ef0:	f04f 0903 	mov.w	r9, #3
 8027ef4:	2104      	movs	r1, #4
 8027ef6:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 8027ef8:	930b      	str	r3, [sp, #44]	@ 0x2c
 8027efa:	eb0a 034a 	add.w	r3, sl, sl, lsl #1
 8027efe:	930e      	str	r3, [sp, #56]	@ 0x38
 8027f00:	f1c5 02ff 	rsb	r2, r5, #255	@ 0xff
 8027f04:	444b      	add	r3, r9
 8027f06:	930f      	str	r3, [sp, #60]	@ 0x3c
 8027f08:	b292      	uxth	r2, r2
 8027f0a:	fa1f fc85 	uxth.w	ip, r5
 8027f0e:	f8cd a028 	str.w	sl, [sp, #40]	@ 0x28
 8027f12:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8027f14:	2b00      	cmp	r3, #0
 8027f16:	dd43      	ble.n	8027fa0 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x15c>
 8027f18:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8027f1a:	2bff      	cmp	r3, #255	@ 0xff
 8027f1c:	d057      	beq.n	8027fce <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x18a>
 8027f1e:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8027f20:	1cc5      	adds	r5, r0, #3
 8027f22:	f108 3eff 	add.w	lr, r8, #4294967295
 8027f26:	eb00 0a03 	add.w	sl, r0, r3
 8027f2a:	f81e 3f01 	ldrb.w	r3, [lr, #1]!
 8027f2e:	f815 6c03 	ldrb.w	r6, [r5, #-3]
 8027f32:	fb19 1303 	smlabb	r3, r9, r3, r1
 8027f36:	fb16 f402 	smulbb	r4, r6, r2
 8027f3a:	5cfe      	ldrb	r6, [r7, r3]
 8027f3c:	443b      	add	r3, r7
 8027f3e:	fb06 460c 	mla	r6, r6, ip, r4
 8027f42:	b2b6      	uxth	r6, r6
 8027f44:	f815 4c02 	ldrb.w	r4, [r5, #-2]
 8027f48:	f106 0b01 	add.w	fp, r6, #1
 8027f4c:	eb0b 2616 	add.w	r6, fp, r6, lsr #8
 8027f50:	1236      	asrs	r6, r6, #8
 8027f52:	fb14 fb02 	smulbb	fp, r4, r2
 8027f56:	f805 6c03 	strb.w	r6, [r5, #-3]
 8027f5a:	785c      	ldrb	r4, [r3, #1]
 8027f5c:	f815 6c01 	ldrb.w	r6, [r5, #-1]
 8027f60:	fb04 b40c 	mla	r4, r4, ip, fp
 8027f64:	b2a4      	uxth	r4, r4
 8027f66:	f104 0b01 	add.w	fp, r4, #1
 8027f6a:	eb0b 2414 	add.w	r4, fp, r4, lsr #8
 8027f6e:	1224      	asrs	r4, r4, #8
 8027f70:	fb16 f602 	smulbb	r6, r6, r2
 8027f74:	f805 4c02 	strb.w	r4, [r5, #-2]
 8027f78:	789b      	ldrb	r3, [r3, #2]
 8027f7a:	3503      	adds	r5, #3
 8027f7c:	fb03 630c 	mla	r3, r3, ip, r6
 8027f80:	b29b      	uxth	r3, r3
 8027f82:	1c5c      	adds	r4, r3, #1
 8027f84:	eb04 2313 	add.w	r3, r4, r3, lsr #8
 8027f88:	121b      	asrs	r3, r3, #8
 8027f8a:	f805 3c04 	strb.w	r3, [r5, #-4]
 8027f8e:	45aa      	cmp	sl, r5
 8027f90:	d1cb      	bne.n	8027f2a <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0xe6>
 8027f92:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8027f94:	4418      	add	r0, r3
 8027f96:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8027f98:	4498      	add	r8, r3
 8027f9a:	4b3a      	ldr	r3, [pc, #232]	@ (8028084 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x240>)
 8027f9c:	881c      	ldrh	r4, [r3, #0]
 8027f9e:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8027fa0:	f9bd 5044 	ldrsh.w	r5, [sp, #68]	@ 0x44
 8027fa4:	eba4 0e03 	sub.w	lr, r4, r3
 8027fa8:	9e0b      	ldr	r6, [sp, #44]	@ 0x2c
 8027faa:	1aed      	subs	r5, r5, r3
 8027fac:	eb0e 034e 	add.w	r3, lr, lr, lsl #1
 8027fb0:	4418      	add	r0, r3
 8027fb2:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8027fb4:	3601      	adds	r6, #1
 8027fb6:	42b3      	cmp	r3, r6
 8027fb8:	960b      	str	r6, [sp, #44]	@ 0x2c
 8027fba:	44a8      	add	r8, r5
 8027fbc:	d1a9      	bne.n	8027f12 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0xce>
 8027fbe:	4b2e      	ldr	r3, [pc, #184]	@ (8028078 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x234>)
 8027fc0:	6818      	ldr	r0, [r3, #0]
 8027fc2:	6803      	ldr	r3, [r0, #0]
 8027fc4:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8027fc6:	4798      	blx	r3
 8027fc8:	b015      	add	sp, #84	@ 0x54
 8027fca:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8027fce:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8027fd0:	1cc4      	adds	r4, r0, #3
 8027fd2:	f108 35ff 	add.w	r5, r8, #4294967295
 8027fd6:	eb00 0e03 	add.w	lr, r0, r3
 8027fda:	f815 3f01 	ldrb.w	r3, [r5, #1]!
 8027fde:	3403      	adds	r4, #3
 8027fe0:	fb19 1303 	smlabb	r3, r9, r3, r1
 8027fe4:	5cfe      	ldrb	r6, [r7, r3]
 8027fe6:	443b      	add	r3, r7
 8027fe8:	f804 6c06 	strb.w	r6, [r4, #-6]
 8027fec:	785e      	ldrb	r6, [r3, #1]
 8027fee:	f804 6c05 	strb.w	r6, [r4, #-5]
 8027ff2:	789b      	ldrb	r3, [r3, #2]
 8027ff4:	f804 3c04 	strb.w	r3, [r4, #-4]
 8027ff8:	45a6      	cmp	lr, r4
 8027ffa:	d1ee      	bne.n	8027fda <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x196>
 8027ffc:	e7c9      	b.n	8027f92 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x14e>
 8027ffe:	4798      	blx	r3
 8028000:	4603      	mov	r3, r0
 8028002:	2b01      	cmp	r3, #1
 8028004:	d127      	bne.n	8028056 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x212>
 8028006:	4a20      	ldr	r2, [pc, #128]	@ (8028088 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x244>)
 8028008:	6810      	ldr	r0, [r2, #0]
 802800a:	b340      	cbz	r0, 802805e <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x21a>
 802800c:	f04f 0c0b 	mov.w	ip, #11
 8028010:	2600      	movs	r6, #0
 8028012:	4a1c      	ldr	r2, [pc, #112]	@ (8028084 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x240>)
 8028014:	f8bd 1030 	ldrh.w	r1, [sp, #48]	@ 0x30
 8028018:	8814      	ldrh	r4, [r2, #0]
 802801a:	fa1f f28a 	uxth.w	r2, sl
 802801e:	e9cd 2101 	strd	r2, r1, [sp, #4]
 8028022:	f8bd 5044 	ldrh.w	r5, [sp, #68]	@ 0x44
 8028026:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 8028028:	9406      	str	r4, [sp, #24]
 802802a:	f8bd 404a 	ldrh.w	r4, [sp, #74]	@ 0x4a
 802802e:	9308      	str	r3, [sp, #32]
 8028030:	9204      	str	r2, [sp, #16]
 8028032:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 8028036:	463a      	mov	r2, r7
 8028038:	4641      	mov	r1, r8
 802803a:	f8cd c01c 	str.w	ip, [sp, #28]
 802803e:	9605      	str	r6, [sp, #20]
 8028040:	9503      	str	r5, [sp, #12]
 8028042:	9400      	str	r4, [sp, #0]
 8028044:	f7f8 ff30 	bl	8020ea8 <_ZN8touchgfx8HALGPU2D13dma2dBlitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_>
 8028048:	b015      	add	sp, #84	@ 0x54
 802804a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802804e:	4608      	mov	r0, r1
 8028050:	4798      	blx	r3
 8028052:	4603      	mov	r3, r0
 8028054:	e7d5      	b.n	8028002 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x1be>
 8028056:	4b08      	ldr	r3, [pc, #32]	@ (8028078 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x234>)
 8028058:	6818      	ldr	r0, [r3, #0]
 802805a:	6802      	ldr	r2, [r0, #0]
 802805c:	e737      	b.n	8027ece <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x8a>
 802805e:	4b0b      	ldr	r3, [pc, #44]	@ (802808c <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x248>)
 8028060:	4a0b      	ldr	r2, [pc, #44]	@ (8028090 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x24c>)
 8028062:	217c      	movs	r1, #124	@ 0x7c
 8028064:	480b      	ldr	r0, [pc, #44]	@ (8028094 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x250>)
 8028066:	f00a fb87 	bl	8032778 <__assert_func>
 802806a:	4b0b      	ldr	r3, [pc, #44]	@ (8028098 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x254>)
 802806c:	4a0b      	ldr	r2, [pc, #44]	@ (802809c <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x258>)
 802806e:	f640 3191 	movw	r1, #2961	@ 0xb91
 8028072:	480b      	ldr	r0, [pc, #44]	@ (80280a0 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x25c>)
 8028074:	f00a fb80 	bl	8032778 <__assert_func>
 8028078:	200830a4 	.word	0x200830a4
 802807c:	0800121d 	.word	0x0800121d
 8028080:	0800bd65 	.word	0x0800bd65
 8028084:	2008309e 	.word	0x2008309e
 8028088:	20083544 	.word	0x20083544
 802808c:	080364bc 	.word	0x080364bc
 8028090:	08036d28 	.word	0x08036d28
 8028094:	080364e4 	.word	0x080364e4
 8028098:	08036584 	.word	0x08036584
 802809c:	08037248 	.word	0x08037248
 80280a0:	08036560 	.word	0x08036560

080280a4 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_24BPPEPKhS2_RKNS_4RectES5_h>:
 80280a4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80280a8:	4615      	mov	r5, r2
 80280aa:	7812      	ldrb	r2, [r2, #0]
 80280ac:	b08b      	sub	sp, #44	@ 0x2c
 80280ae:	2a01      	cmp	r2, #1
 80280b0:	461f      	mov	r7, r3
 80280b2:	f89d 6054 	ldrb.w	r6, [sp, #84]	@ 0x54
 80280b6:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 80280b8:	f040 8213 	bne.w	80284e2 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x43e>
 80280bc:	6838      	ldr	r0, [r7, #0]
 80280be:	468a      	mov	sl, r1
 80280c0:	6879      	ldr	r1, [r7, #4]
 80280c2:	aa06      	add	r2, sp, #24
 80280c4:	c203      	stmia	r2!, {r0, r1}
 80280c6:	6818      	ldr	r0, [r3, #0]
 80280c8:	6859      	ldr	r1, [r3, #4]
 80280ca:	aa08      	add	r2, sp, #32
 80280cc:	c203      	stmia	r2!, {r0, r1}
 80280ce:	a806      	add	r0, sp, #24
 80280d0:	f7e4 ff76 	bl	800cfc0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80280d4:	4639      	mov	r1, r7
 80280d6:	a808      	add	r0, sp, #32
 80280d8:	f7e4 ff9a 	bl	800d010 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80280dc:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 80280e0:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
 80280e4:	f003 0201 	and.w	r2, r3, #1
 80280e8:	4614      	mov	r4, r2
 80280ea:	9202      	str	r2, [sp, #8]
 80280ec:	f9bd 2022 	ldrsh.w	r2, [sp, #34]	@ 0x22
 80280f0:	4423      	add	r3, r4
 80280f2:	fb02 1303 	mla	r3, r2, r3, r1
 80280f6:	f8bd 001a 	ldrh.w	r0, [sp, #26]
 80280fa:	f8bd 7018 	ldrh.w	r7, [sp, #24]
 80280fe:	4402      	add	r2, r0
 8028100:	48a9      	ldr	r0, [pc, #676]	@ (80283a8 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x304>)
 8028102:	440f      	add	r7, r1
 8028104:	6800      	ldr	r0, [r0, #0]
 8028106:	eb03 73d3 	add.w	r3, r3, r3, lsr #31
 802810a:	f8ad 7020 	strh.w	r7, [sp, #32]
 802810e:	f8ad 2022 	strh.w	r2, [sp, #34]	@ 0x22
 8028112:	eb0a 0a63 	add.w	sl, sl, r3, asr #1
 8028116:	f001 0301 	and.w	r3, r1, #1
 802811a:	6802      	ldr	r2, [r0, #0]
 802811c:	9301      	str	r3, [sp, #4]
 802811e:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	@ 0x24
 8028122:	6a92      	ldr	r2, [r2, #40]	@ 0x28
 8028124:	9300      	str	r3, [sp, #0]
 8028126:	f9bd 4026 	ldrsh.w	r4, [sp, #38]	@ 0x26
 802812a:	4790      	blx	r2
 802812c:	4a9f      	ldr	r2, [pc, #636]	@ (80283ac <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x308>)
 802812e:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	@ 0x22
 8028132:	8811      	ldrh	r1, [r2, #0]
 8028134:	f9bd 7020 	ldrsh.w	r7, [sp, #32]
 8028138:	2eff      	cmp	r6, #255	@ 0xff
 802813a:	fb01 7303 	mla	r3, r1, r3, r7
 802813e:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8028142:	f105 0204 	add.w	r2, r5, #4
 8028146:	4418      	add	r0, r3
 8028148:	f000 8132 	beq.w	80283b0 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x30c>
 802814c:	fb04 f401 	mul.w	r4, r4, r1
 8028150:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 8028154:	1901      	adds	r1, r0, r4
 8028156:	4288      	cmp	r0, r1
 8028158:	9104      	str	r1, [sp, #16]
 802815a:	f080 80aa 	bcs.w	80282b2 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x20e>
 802815e:	9b00      	ldr	r3, [sp, #0]
 8028160:	f1c6 07ff 	rsb	r7, r6, #255	@ 0xff
 8028164:	3b01      	subs	r3, #1
 8028166:	b2bf      	uxth	r7, r7
 8028168:	b2b6      	uxth	r6, r6
 802816a:	9305      	str	r3, [sp, #20]
 802816c:	9b01      	ldr	r3, [sp, #4]
 802816e:	2b00      	cmp	r3, #0
 8028170:	f040 80e8 	bne.w	8028344 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x2a0>
 8028174:	46d1      	mov	r9, sl
 8028176:	f8dd 8000 	ldr.w	r8, [sp]
 802817a:	f1b8 0f01 	cmp.w	r8, #1
 802817e:	f340 8082 	ble.w	8028286 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x1e2>
 8028182:	f1a8 0302 	sub.w	r3, r8, #2
 8028186:	ea4f 0853 	mov.w	r8, r3, lsr #1
 802818a:	9303      	str	r3, [sp, #12]
 802818c:	f100 0e0c 	add.w	lr, r0, #12
 8028190:	eb08 0348 	add.w	r3, r8, r8, lsl #1
 8028194:	eb0e 0e43 	add.w	lr, lr, r3, lsl #1
 8028198:	1d84      	adds	r4, r0, #6
 802819a:	f109 3cff 	add.w	ip, r9, #4294967295
 802819e:	f81c 3f01 	ldrb.w	r3, [ip, #1]!
 80281a2:	f814 5c06 	ldrb.w	r5, [r4, #-6]
 80281a6:	091b      	lsrs	r3, r3, #4
 80281a8:	fb15 f507 	smulbb	r5, r5, r7
 80281ac:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 80281b0:	5cd1      	ldrb	r1, [r2, r3]
 80281b2:	4413      	add	r3, r2
 80281b4:	fb01 5506 	mla	r5, r1, r6, r5
 80281b8:	b2ad      	uxth	r5, r5
 80281ba:	f814 1c05 	ldrb.w	r1, [r4, #-5]
 80281be:	f105 0b01 	add.w	fp, r5, #1
 80281c2:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 80281c6:	122d      	asrs	r5, r5, #8
 80281c8:	fb11 fb07 	smulbb	fp, r1, r7
 80281cc:	f804 5c06 	strb.w	r5, [r4, #-6]
 80281d0:	7859      	ldrb	r1, [r3, #1]
 80281d2:	f814 5c04 	ldrb.w	r5, [r4, #-4]
 80281d6:	fb01 b106 	mla	r1, r1, r6, fp
 80281da:	b289      	uxth	r1, r1
 80281dc:	f101 0b01 	add.w	fp, r1, #1
 80281e0:	eb0b 2111 	add.w	r1, fp, r1, lsr #8
 80281e4:	1209      	asrs	r1, r1, #8
 80281e6:	fb15 f507 	smulbb	r5, r5, r7
 80281ea:	f804 1c05 	strb.w	r1, [r4, #-5]
 80281ee:	789b      	ldrb	r3, [r3, #2]
 80281f0:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 80281f4:	fb03 5306 	mla	r3, r3, r6, r5
 80281f8:	b29b      	uxth	r3, r3
 80281fa:	1c5d      	adds	r5, r3, #1
 80281fc:	eb05 2313 	add.w	r3, r5, r3, lsr #8
 8028200:	121b      	asrs	r3, r3, #8
 8028202:	f804 3c04 	strb.w	r3, [r4, #-4]
 8028206:	f89c 3000 	ldrb.w	r3, [ip]
 802820a:	fb11 f107 	smulbb	r1, r1, r7
 802820e:	f003 030f 	and.w	r3, r3, #15
 8028212:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8028216:	5cd5      	ldrb	r5, [r2, r3]
 8028218:	4413      	add	r3, r2
 802821a:	fb05 1106 	mla	r1, r5, r6, r1
 802821e:	b28d      	uxth	r5, r1
 8028220:	f105 0b01 	add.w	fp, r5, #1
 8028224:	f814 1c02 	ldrb.w	r1, [r4, #-2]
 8028228:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 802822c:	122d      	asrs	r5, r5, #8
 802822e:	fb11 fb07 	smulbb	fp, r1, r7
 8028232:	f804 5c03 	strb.w	r5, [r4, #-3]
 8028236:	7859      	ldrb	r1, [r3, #1]
 8028238:	f814 5c01 	ldrb.w	r5, [r4, #-1]
 802823c:	fb01 b106 	mla	r1, r1, r6, fp
 8028240:	b289      	uxth	r1, r1
 8028242:	f101 0b01 	add.w	fp, r1, #1
 8028246:	eb0b 2111 	add.w	r1, fp, r1, lsr #8
 802824a:	1209      	asrs	r1, r1, #8
 802824c:	fb15 f507 	smulbb	r5, r5, r7
 8028250:	f804 1c02 	strb.w	r1, [r4, #-2]
 8028254:	789b      	ldrb	r3, [r3, #2]
 8028256:	3406      	adds	r4, #6
 8028258:	fb03 5306 	mla	r3, r3, r6, r5
 802825c:	b29b      	uxth	r3, r3
 802825e:	1c59      	adds	r1, r3, #1
 8028260:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8028264:	121b      	asrs	r3, r3, #8
 8028266:	f804 3c07 	strb.w	r3, [r4, #-7]
 802826a:	45a6      	cmp	lr, r4
 802826c:	d197      	bne.n	802819e <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0xfa>
 802826e:	f108 0301 	add.w	r3, r8, #1
 8028272:	eb03 0143 	add.w	r1, r3, r3, lsl #1
 8028276:	4499      	add	r9, r3
 8028278:	9b03      	ldr	r3, [sp, #12]
 802827a:	ebc8 78c8 	rsb	r8, r8, r8, lsl #31
 802827e:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 8028282:	eb03 0848 	add.w	r8, r3, r8, lsl #1
 8028286:	f1b8 0f01 	cmp.w	r8, #1
 802828a:	d01a      	beq.n	80282c2 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x21e>
 802828c:	4b47      	ldr	r3, [pc, #284]	@ (80283ac <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x308>)
 802828e:	9c00      	ldr	r4, [sp, #0]
 8028290:	8819      	ldrh	r1, [r3, #0]
 8028292:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 8028296:	1b09      	subs	r1, r1, r4
 8028298:	9c02      	ldr	r4, [sp, #8]
 802829a:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 802829e:	4423      	add	r3, r4
 80282a0:	eb03 73d3 	add.w	r3, r3, r3, lsr #31
 80282a4:	eb0a 0a63 	add.w	sl, sl, r3, asr #1
 80282a8:	9b04      	ldr	r3, [sp, #16]
 80282aa:	4408      	add	r0, r1
 80282ac:	4283      	cmp	r3, r0
 80282ae:	f63f af5d 	bhi.w	802816c <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0xc8>
 80282b2:	4b3d      	ldr	r3, [pc, #244]	@ (80283a8 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x304>)
 80282b4:	6818      	ldr	r0, [r3, #0]
 80282b6:	6803      	ldr	r3, [r0, #0]
 80282b8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80282ba:	4798      	blx	r3
 80282bc:	b00b      	add	sp, #44	@ 0x2c
 80282be:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80282c2:	f899 3000 	ldrb.w	r3, [r9]
 80282c6:	7801      	ldrb	r1, [r0, #0]
 80282c8:	091b      	lsrs	r3, r3, #4
 80282ca:	fb11 f407 	smulbb	r4, r1, r7
 80282ce:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 80282d2:	5cd1      	ldrb	r1, [r2, r3]
 80282d4:	4413      	add	r3, r2
 80282d6:	fb01 4106 	mla	r1, r1, r6, r4
 80282da:	b289      	uxth	r1, r1
 80282dc:	7844      	ldrb	r4, [r0, #1]
 80282de:	1c4d      	adds	r5, r1, #1
 80282e0:	eb05 2111 	add.w	r1, r5, r1, lsr #8
 80282e4:	1209      	asrs	r1, r1, #8
 80282e6:	fb14 f507 	smulbb	r5, r4, r7
 80282ea:	7001      	strb	r1, [r0, #0]
 80282ec:	785c      	ldrb	r4, [r3, #1]
 80282ee:	7881      	ldrb	r1, [r0, #2]
 80282f0:	fb04 5406 	mla	r4, r4, r6, r5
 80282f4:	b2a4      	uxth	r4, r4
 80282f6:	1c65      	adds	r5, r4, #1
 80282f8:	eb05 2414 	add.w	r4, r5, r4, lsr #8
 80282fc:	1224      	asrs	r4, r4, #8
 80282fe:	fb11 f507 	smulbb	r5, r1, r7
 8028302:	7044      	strb	r4, [r0, #1]
 8028304:	7899      	ldrb	r1, [r3, #2]
 8028306:	4b29      	ldr	r3, [pc, #164]	@ (80283ac <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x308>)
 8028308:	fb01 5106 	mla	r1, r1, r6, r5
 802830c:	b289      	uxth	r1, r1
 802830e:	1c4c      	adds	r4, r1, #1
 8028310:	eb04 2111 	add.w	r1, r4, r1, lsr #8
 8028314:	881b      	ldrh	r3, [r3, #0]
 8028316:	9c00      	ldr	r4, [sp, #0]
 8028318:	1209      	asrs	r1, r1, #8
 802831a:	1b1b      	subs	r3, r3, r4
 802831c:	7081      	strb	r1, [r0, #2]
 802831e:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8028322:	3303      	adds	r3, #3
 8028324:	f9bd 101c 	ldrsh.w	r1, [sp, #28]
 8028328:	9c02      	ldr	r4, [sp, #8]
 802832a:	4418      	add	r0, r3
 802832c:	9b04      	ldr	r3, [sp, #16]
 802832e:	4421      	add	r1, r4
 8028330:	eb01 71d1 	add.w	r1, r1, r1, lsr #31
 8028334:	4283      	cmp	r3, r0
 8028336:	eb0a 0a61 	add.w	sl, sl, r1, asr #1
 802833a:	d9ba      	bls.n	80282b2 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x20e>
 802833c:	9b01      	ldr	r3, [sp, #4]
 802833e:	2b00      	cmp	r3, #0
 8028340:	f43f af18 	beq.w	8028174 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0xd0>
 8028344:	f89a 3000 	ldrb.w	r3, [sl]
 8028348:	7804      	ldrb	r4, [r0, #0]
 802834a:	f003 030f 	and.w	r3, r3, #15
 802834e:	fb14 f107 	smulbb	r1, r4, r7
 8028352:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8028356:	5cd4      	ldrb	r4, [r2, r3]
 8028358:	4413      	add	r3, r2
 802835a:	fb04 1406 	mla	r4, r4, r6, r1
 802835e:	b2a4      	uxth	r4, r4
 8028360:	7841      	ldrb	r1, [r0, #1]
 8028362:	1c65      	adds	r5, r4, #1
 8028364:	eb05 2414 	add.w	r4, r5, r4, lsr #8
 8028368:	1224      	asrs	r4, r4, #8
 802836a:	fb11 fc07 	smulbb	ip, r1, r7
 802836e:	7004      	strb	r4, [r0, #0]
 8028370:	7859      	ldrb	r1, [r3, #1]
 8028372:	7885      	ldrb	r5, [r0, #2]
 8028374:	fb01 c106 	mla	r1, r1, r6, ip
 8028378:	b289      	uxth	r1, r1
 802837a:	1c4c      	adds	r4, r1, #1
 802837c:	eb04 2111 	add.w	r1, r4, r1, lsr #8
 8028380:	1209      	asrs	r1, r1, #8
 8028382:	fb15 f407 	smulbb	r4, r5, r7
 8028386:	7041      	strb	r1, [r0, #1]
 8028388:	789b      	ldrb	r3, [r3, #2]
 802838a:	f10a 0901 	add.w	r9, sl, #1
 802838e:	fb03 4306 	mla	r3, r3, r6, r4
 8028392:	b29b      	uxth	r3, r3
 8028394:	1c59      	adds	r1, r3, #1
 8028396:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 802839a:	121b      	asrs	r3, r3, #8
 802839c:	7083      	strb	r3, [r0, #2]
 802839e:	f8dd 8014 	ldr.w	r8, [sp, #20]
 80283a2:	3003      	adds	r0, #3
 80283a4:	e6e9      	b.n	802817a <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0xd6>
 80283a6:	bf00      	nop
 80283a8:	200830a4 	.word	0x200830a4
 80283ac:	2008309e 	.word	0x2008309e
 80283b0:	fb04 f101 	mul.w	r1, r4, r1
 80283b4:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 80283b8:	eb00 0e01 	add.w	lr, r0, r1
 80283bc:	4570      	cmp	r0, lr
 80283be:	f4bf af78 	bcs.w	80282b2 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x20e>
 80283c2:	9b00      	ldr	r3, [sp, #0]
 80283c4:	4698      	mov	r8, r3
 80283c6:	f103 39ff 	add.w	r9, r3, #4294967295
 80283ca:	9b01      	ldr	r3, [sp, #4]
 80283cc:	2b00      	cmp	r3, #0
 80283ce:	d072      	beq.n	80284b6 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x412>
 80283d0:	464e      	mov	r6, r9
 80283d2:	f89a 3000 	ldrb.w	r3, [sl]
 80283d6:	f10a 0c01 	add.w	ip, sl, #1
 80283da:	f003 030f 	and.w	r3, r3, #15
 80283de:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 80283e2:	5cd1      	ldrb	r1, [r2, r3]
 80283e4:	4413      	add	r3, r2
 80283e6:	7001      	strb	r1, [r0, #0]
 80283e8:	7859      	ldrb	r1, [r3, #1]
 80283ea:	3003      	adds	r0, #3
 80283ec:	f800 1c02 	strb.w	r1, [r0, #-2]
 80283f0:	789b      	ldrb	r3, [r3, #2]
 80283f2:	f800 3c01 	strb.w	r3, [r0, #-1]
 80283f6:	2e01      	cmp	r6, #1
 80283f8:	dd39      	ble.n	802846e <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x3ca>
 80283fa:	3e02      	subs	r6, #2
 80283fc:	0877      	lsrs	r7, r6, #1
 80283fe:	eb07 0347 	add.w	r3, r7, r7, lsl #1
 8028402:	f100 050c 	add.w	r5, r0, #12
 8028406:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 802840a:	1d81      	adds	r1, r0, #6
 802840c:	f10c 34ff 	add.w	r4, ip, #4294967295
 8028410:	f814 3f01 	ldrb.w	r3, [r4, #1]!
 8028414:	3106      	adds	r1, #6
 8028416:	091b      	lsrs	r3, r3, #4
 8028418:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 802841c:	f812 b003 	ldrb.w	fp, [r2, r3]
 8028420:	4413      	add	r3, r2
 8028422:	f801 bc0c 	strb.w	fp, [r1, #-12]
 8028426:	f893 b001 	ldrb.w	fp, [r3, #1]
 802842a:	f801 bc0b 	strb.w	fp, [r1, #-11]
 802842e:	789b      	ldrb	r3, [r3, #2]
 8028430:	f801 3c0a 	strb.w	r3, [r1, #-10]
 8028434:	7823      	ldrb	r3, [r4, #0]
 8028436:	f003 030f 	and.w	r3, r3, #15
 802843a:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 802843e:	f812 b003 	ldrb.w	fp, [r2, r3]
 8028442:	4413      	add	r3, r2
 8028444:	f801 bc09 	strb.w	fp, [r1, #-9]
 8028448:	f893 b001 	ldrb.w	fp, [r3, #1]
 802844c:	f801 bc08 	strb.w	fp, [r1, #-8]
 8028450:	789b      	ldrb	r3, [r3, #2]
 8028452:	f801 3c07 	strb.w	r3, [r1, #-7]
 8028456:	428d      	cmp	r5, r1
 8028458:	d1da      	bne.n	8028410 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x36c>
 802845a:	1c7b      	adds	r3, r7, #1
 802845c:	eb03 0143 	add.w	r1, r3, r3, lsl #1
 8028460:	ebc7 77c7 	rsb	r7, r7, r7, lsl #31
 8028464:	449c      	add	ip, r3
 8028466:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 802846a:	eb06 0647 	add.w	r6, r6, r7, lsl #1
 802846e:	2e01      	cmp	r6, #1
 8028470:	d124      	bne.n	80284bc <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x418>
 8028472:	f89c 3000 	ldrb.w	r3, [ip]
 8028476:	9c02      	ldr	r4, [sp, #8]
 8028478:	091b      	lsrs	r3, r3, #4
 802847a:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 802847e:	5cd1      	ldrb	r1, [r2, r3]
 8028480:	4413      	add	r3, r2
 8028482:	7001      	strb	r1, [r0, #0]
 8028484:	7859      	ldrb	r1, [r3, #1]
 8028486:	7041      	strb	r1, [r0, #1]
 8028488:	7899      	ldrb	r1, [r3, #2]
 802848a:	4b19      	ldr	r3, [pc, #100]	@ (80284f0 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x44c>)
 802848c:	7081      	strb	r1, [r0, #2]
 802848e:	881b      	ldrh	r3, [r3, #0]
 8028490:	f9bd 101c 	ldrsh.w	r1, [sp, #28]
 8028494:	eba3 0308 	sub.w	r3, r3, r8
 8028498:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 802849c:	3303      	adds	r3, #3
 802849e:	4421      	add	r1, r4
 80284a0:	4418      	add	r0, r3
 80284a2:	eb01 71d1 	add.w	r1, r1, r1, lsr #31
 80284a6:	4586      	cmp	lr, r0
 80284a8:	eb0a 0a61 	add.w	sl, sl, r1, asr #1
 80284ac:	f67f af01 	bls.w	80282b2 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x20e>
 80284b0:	9b01      	ldr	r3, [sp, #4]
 80284b2:	2b00      	cmp	r3, #0
 80284b4:	d18c      	bne.n	80283d0 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x32c>
 80284b6:	46d4      	mov	ip, sl
 80284b8:	4646      	mov	r6, r8
 80284ba:	e79c      	b.n	80283f6 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x352>
 80284bc:	4b0c      	ldr	r3, [pc, #48]	@ (80284f0 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x44c>)
 80284be:	9c02      	ldr	r4, [sp, #8]
 80284c0:	8819      	ldrh	r1, [r3, #0]
 80284c2:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 80284c6:	eba1 0108 	sub.w	r1, r1, r8
 80284ca:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 80284ce:	4423      	add	r3, r4
 80284d0:	4408      	add	r0, r1
 80284d2:	eb03 73d3 	add.w	r3, r3, r3, lsr #31
 80284d6:	4586      	cmp	lr, r0
 80284d8:	eb0a 0a63 	add.w	sl, sl, r3, asr #1
 80284dc:	f63f af75 	bhi.w	80283ca <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x326>
 80284e0:	e6e7      	b.n	80282b2 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x20e>
 80284e2:	4b04      	ldr	r3, [pc, #16]	@ (80284f4 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x450>)
 80284e4:	4a04      	ldr	r2, [pc, #16]	@ (80284f8 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x454>)
 80284e6:	f640 31da 	movw	r1, #3034	@ 0xbda
 80284ea:	4804      	ldr	r0, [pc, #16]	@ (80284fc <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x458>)
 80284ec:	f00a f944 	bl	8032778 <__assert_func>
 80284f0:	2008309e 	.word	0x2008309e
 80284f4:	08036624 	.word	0x08036624
 80284f8:	08037588 	.word	0x08037588
 80284fc:	08036560 	.word	0x08036560

08028500 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_24BPPEPKhS2_RKNS_4RectES5_h>:
 8028500:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8028504:	b08d      	sub	sp, #52	@ 0x34
 8028506:	7814      	ldrb	r4, [r2, #0]
 8028508:	461d      	mov	r5, r3
 802850a:	f89d 305c 	ldrb.w	r3, [sp, #92]	@ 0x5c
 802850e:	2c01      	cmp	r4, #1
 8028510:	9204      	str	r2, [sp, #16]
 8028512:	9302      	str	r3, [sp, #8]
 8028514:	f040 8133 	bne.w	802877e <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x27e>
 8028518:	b913      	cbnz	r3, 8028520 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x20>
 802851a:	b00d      	add	sp, #52	@ 0x34
 802851c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8028520:	6828      	ldr	r0, [r5, #0]
 8028522:	4689      	mov	r9, r1
 8028524:	6869      	ldr	r1, [r5, #4]
 8028526:	ab08      	add	r3, sp, #32
 8028528:	c303      	stmia	r3!, {r0, r1}
 802852a:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 802852c:	6818      	ldr	r0, [r3, #0]
 802852e:	6859      	ldr	r1, [r3, #4]
 8028530:	ab0a      	add	r3, sp, #40	@ 0x28
 8028532:	c303      	stmia	r3!, {r0, r1}
 8028534:	a808      	add	r0, sp, #32
 8028536:	f7e4 fd43 	bl	800cfc0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 802853a:	4629      	mov	r1, r5
 802853c:	a80a      	add	r0, sp, #40	@ 0x28
 802853e:	f7e4 fd67 	bl	800d010 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8028542:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	@ 0x24
 8028546:	f8bd 1028 	ldrh.w	r1, [sp, #40]	@ 0x28
 802854a:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 802854e:	bfdd      	ittte	le
 8028550:	f44f 6480 	movle.w	r4, #1024	@ 0x400
 8028554:	b29a      	uxthle	r2, r3
 8028556:	fb94 f4f2 	sdivle	r4, r4, r2
 802855a:	b29a      	uxthgt	r2, r3
 802855c:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	@ 0x2a
 8028560:	fb93 f0f4 	sdiv	r0, r3, r4
 8028564:	b286      	uxth	r6, r0
 8028566:	fb04 3816 	mls	r8, r4, r6, r3
 802856a:	fb18 1802 	smlabb	r8, r8, r2, r1
 802856e:	f9bd 2026 	ldrsh.w	r2, [sp, #38]	@ 0x26
 8028572:	fa1f f888 	uxth.w	r8, r8
 8028576:	4422      	add	r2, r4
 8028578:	3a01      	subs	r2, #1
 802857a:	fb92 f4f4 	sdiv	r4, r2, r4
 802857e:	2e00      	cmp	r6, #0
 8028580:	f040 80f7 	bne.w	8028772 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x272>
 8028584:	f8bd 2022 	ldrh.w	r2, [sp, #34]	@ 0x22
 8028588:	f8bd 0020 	ldrh.w	r0, [sp, #32]
 802858c:	4413      	add	r3, r2
 802858e:	4a7f      	ldr	r2, [pc, #508]	@ (802878c <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x28c>)
 8028590:	4401      	add	r1, r0
 8028592:	6810      	ldr	r0, [r2, #0]
 8028594:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
 8028598:	f8ad 1028 	strh.w	r1, [sp, #40]	@ 0x28
 802859c:	4616      	mov	r6, r2
 802859e:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
 80285a2:	6803      	ldr	r3, [r0, #0]
 80285a4:	9207      	str	r2, [sp, #28]
 80285a6:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80285a8:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	@ 0x2e
 80285ac:	4798      	blx	r3
 80285ae:	f1b8 0f00 	cmp.w	r8, #0
 80285b2:	bf0c      	ite	eq
 80285b4:	4633      	moveq	r3, r6
 80285b6:	2300      	movne	r3, #0
 80285b8:	4975      	ldr	r1, [pc, #468]	@ (8028790 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x290>)
 80285ba:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
 80285be:	8809      	ldrh	r1, [r1, #0]
 80285c0:	f9bd 6028 	ldrsh.w	r6, [sp, #40]	@ 0x28
 80285c4:	fb01 f505 	mul.w	r5, r1, r5
 80285c8:	fb01 6202 	mla	r2, r1, r2, r6
 80285cc:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80285d0:	4410      	add	r0, r2
 80285d2:	b2a4      	uxth	r4, r4
 80285d4:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 80285d8:	1942      	adds	r2, r0, r5
 80285da:	00a4      	lsls	r4, r4, #2
 80285dc:	1d21      	adds	r1, r4, #4
 80285de:	4290      	cmp	r0, r2
 80285e0:	9200      	str	r2, [sp, #0]
 80285e2:	9106      	str	r1, [sp, #24]
 80285e4:	fa1f fa83 	uxth.w	sl, r3
 80285e8:	d225      	bcs.n	8028636 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x136>
 80285ea:	2500      	movs	r5, #0
 80285ec:	4686      	mov	lr, r0
 80285ee:	4640      	mov	r0, r8
 80285f0:	9b02      	ldr	r3, [sp, #8]
 80285f2:	9501      	str	r5, [sp, #4]
 80285f4:	f1c3 07ff 	rsb	r7, r3, #255	@ 0xff
 80285f8:	b2bf      	uxth	r7, r7
 80285fa:	fa1f fc83 	uxth.w	ip, r3
 80285fe:	b985      	cbnz	r5, 8028622 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x122>
 8028600:	f899 2000 	ldrb.w	r2, [r9]
 8028604:	0995      	lsrs	r5, r2, #6
 8028606:	1e6b      	subs	r3, r5, #1
 8028608:	2b02      	cmp	r3, #2
 802860a:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 802860e:	bf88      	it	hi
 8028610:	f899 5001 	ldrbhi.w	r5, [r9, #1]
 8028614:	9201      	str	r2, [sp, #4]
 8028616:	bf9a      	itte	ls
 8028618:	f109 0901 	addls.w	r9, r9, #1
 802861c:	b2ad      	uxthls	r5, r5
 802861e:	f109 0902 	addhi.w	r9, r9, #2
 8028622:	b180      	cbz	r0, 8028646 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x146>
 8028624:	4285      	cmp	r5, r0
 8028626:	f080 809e 	bcs.w	8028766 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x266>
 802862a:	1b40      	subs	r0, r0, r5
 802862c:	2500      	movs	r5, #0
 802862e:	b280      	uxth	r0, r0
 8028630:	9b00      	ldr	r3, [sp, #0]
 8028632:	4573      	cmp	r3, lr
 8028634:	d8e3      	bhi.n	80285fe <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0xfe>
 8028636:	4b55      	ldr	r3, [pc, #340]	@ (802878c <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x28c>)
 8028638:	6818      	ldr	r0, [r3, #0]
 802863a:	6803      	ldr	r3, [r0, #0]
 802863c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 802863e:	4798      	blx	r3
 8028640:	b00d      	add	sp, #52	@ 0x34
 8028642:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8028646:	2303      	movs	r3, #3
 8028648:	4619      	mov	r1, r3
 802864a:	9a06      	ldr	r2, [sp, #24]
 802864c:	9b01      	ldr	r3, [sp, #4]
 802864e:	4555      	cmp	r5, sl
 8028650:	fb11 2403 	smlabb	r4, r1, r3, r2
 8028654:	9b04      	ldr	r3, [sp, #16]
 8028656:	441c      	add	r4, r3
 8028658:	d360      	bcc.n	802871c <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x21c>
 802865a:	eba5 030a 	sub.w	r3, r5, sl
 802865e:	b29b      	uxth	r3, r3
 8028660:	9303      	str	r3, [sp, #12]
 8028662:	9b02      	ldr	r3, [sp, #8]
 8028664:	4656      	mov	r6, sl
 8028666:	2bff      	cmp	r3, #255	@ 0xff
 8028668:	9005      	str	r0, [sp, #20]
 802866a:	d060      	beq.n	802872e <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x22e>
 802866c:	2e00      	cmp	r6, #0
 802866e:	d03b      	beq.n	80286e8 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x1e8>
 8028670:	3e01      	subs	r6, #1
 8028672:	b2b6      	uxth	r6, r6
 8028674:	eb06 0346 	add.w	r3, r6, r6, lsl #1
 8028678:	f10e 0806 	add.w	r8, lr, #6
 802867c:	4498      	add	r8, r3
 802867e:	f10e 0103 	add.w	r1, lr, #3
 8028682:	f811 2c03 	ldrb.w	r2, [r1, #-3]
 8028686:	7823      	ldrb	r3, [r4, #0]
 8028688:	fb12 f207 	smulbb	r2, r2, r7
 802868c:	fb03 230c 	mla	r3, r3, ip, r2
 8028690:	b29b      	uxth	r3, r3
 8028692:	f811 2c02 	ldrb.w	r2, [r1, #-2]
 8028696:	f103 0b01 	add.w	fp, r3, #1
 802869a:	eb0b 2313 	add.w	r3, fp, r3, lsr #8
 802869e:	121b      	asrs	r3, r3, #8
 80286a0:	fb12 fb07 	smulbb	fp, r2, r7
 80286a4:	f801 3c03 	strb.w	r3, [r1, #-3]
 80286a8:	7862      	ldrb	r2, [r4, #1]
 80286aa:	f811 3c01 	ldrb.w	r3, [r1, #-1]
 80286ae:	fb02 b20c 	mla	r2, r2, ip, fp
 80286b2:	b292      	uxth	r2, r2
 80286b4:	f102 0b01 	add.w	fp, r2, #1
 80286b8:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 80286bc:	1212      	asrs	r2, r2, #8
 80286be:	fb13 fb07 	smulbb	fp, r3, r7
 80286c2:	f801 2c02 	strb.w	r2, [r1, #-2]
 80286c6:	78a3      	ldrb	r3, [r4, #2]
 80286c8:	3103      	adds	r1, #3
 80286ca:	fb03 b30c 	mla	r3, r3, ip, fp
 80286ce:	b29b      	uxth	r3, r3
 80286d0:	1c5a      	adds	r2, r3, #1
 80286d2:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 80286d6:	121b      	asrs	r3, r3, #8
 80286d8:	f801 3c04 	strb.w	r3, [r1, #-4]
 80286dc:	4541      	cmp	r1, r8
 80286de:	d1d0      	bne.n	8028682 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x182>
 80286e0:	3601      	adds	r6, #1
 80286e2:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 80286e6:	44b6      	add	lr, r6
 80286e8:	4555      	cmp	r5, sl
 80286ea:	d313      	bcc.n	8028714 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x214>
 80286ec:	9a07      	ldr	r2, [sp, #28]
 80286ee:	4b28      	ldr	r3, [pc, #160]	@ (8028790 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x290>)
 80286f0:	f8bd 0024 	ldrh.w	r0, [sp, #36]	@ 0x24
 80286f4:	fa1f fa82 	uxth.w	sl, r2
 80286f8:	881b      	ldrh	r3, [r3, #0]
 80286fa:	eba0 000a 	sub.w	r0, r0, sl
 80286fe:	b280      	uxth	r0, r0
 8028700:	1a9b      	subs	r3, r3, r2
 8028702:	2800      	cmp	r0, #0
 8028704:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8028708:	9d03      	ldr	r5, [sp, #12]
 802870a:	bf18      	it	ne
 802870c:	f04f 0a00 	movne.w	sl, #0
 8028710:	449e      	add	lr, r3
 8028712:	e78d      	b.n	8028630 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x130>
 8028714:	9d03      	ldr	r5, [sp, #12]
 8028716:	f8dd a014 	ldr.w	sl, [sp, #20]
 802871a:	e789      	b.n	8028630 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x130>
 802871c:	ebaa 0305 	sub.w	r3, sl, r5
 8028720:	b29b      	uxth	r3, r3
 8028722:	9305      	str	r3, [sp, #20]
 8028724:	9b02      	ldr	r3, [sp, #8]
 8028726:	462e      	mov	r6, r5
 8028728:	2bff      	cmp	r3, #255	@ 0xff
 802872a:	9003      	str	r0, [sp, #12]
 802872c:	d19e      	bne.n	802866c <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x16c>
 802872e:	2e00      	cmp	r6, #0
 8028730:	d0da      	beq.n	80286e8 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x1e8>
 8028732:	3e01      	subs	r6, #1
 8028734:	b2b2      	uxth	r2, r6
 8028736:	eb02 0342 	add.w	r3, r2, r2, lsl #1
 802873a:	f10e 0606 	add.w	r6, lr, #6
 802873e:	441e      	add	r6, r3
 8028740:	f10e 0303 	add.w	r3, lr, #3
 8028744:	7821      	ldrb	r1, [r4, #0]
 8028746:	3303      	adds	r3, #3
 8028748:	f803 1c06 	strb.w	r1, [r3, #-6]
 802874c:	7861      	ldrb	r1, [r4, #1]
 802874e:	f803 1c05 	strb.w	r1, [r3, #-5]
 8028752:	78a1      	ldrb	r1, [r4, #2]
 8028754:	f803 1c04 	strb.w	r1, [r3, #-4]
 8028758:	429e      	cmp	r6, r3
 802875a:	d1f3      	bne.n	8028744 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x244>
 802875c:	3201      	adds	r2, #1
 802875e:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8028762:	4496      	add	lr, r2
 8028764:	e7c0      	b.n	80286e8 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x1e8>
 8028766:	1a2d      	subs	r5, r5, r0
 8028768:	b2ad      	uxth	r5, r5
 802876a:	f8bd a01c 	ldrh.w	sl, [sp, #28]
 802876e:	2000      	movs	r0, #0
 8028770:	e75e      	b.n	8028630 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x130>
 8028772:	9a04      	ldr	r2, [sp, #16]
 8028774:	f852 2026 	ldr.w	r2, [r2, r6, lsl #2]
 8028778:	ba12      	rev	r2, r2
 802877a:	4491      	add	r9, r2
 802877c:	e702      	b.n	8028584 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x84>
 802877e:	4b05      	ldr	r3, [pc, #20]	@ (8028794 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x294>)
 8028780:	4a05      	ldr	r2, [pc, #20]	@ (8028798 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x298>)
 8028782:	f44f 6146 	mov.w	r1, #3168	@ 0xc60
 8028786:	4805      	ldr	r0, [pc, #20]	@ (802879c <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x29c>)
 8028788:	f009 fff6 	bl	8032778 <__assert_func>
 802878c:	200830a4 	.word	0x200830a4
 8028790:	2008309e 	.word	0x2008309e
 8028794:	08036624 	.word	0x08036624
 8028798:	0803772c 	.word	0x0803772c
 802879c:	08036560 	.word	0x08036560

080287a0 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h>:
 80287a0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80287a4:	b09b      	sub	sp, #108	@ 0x6c
 80287a6:	7814      	ldrb	r4, [r2, #0]
 80287a8:	461d      	mov	r5, r3
 80287aa:	f89d 3094 	ldrb.w	r3, [sp, #148]	@ 0x94
 80287ae:	2c01      	cmp	r4, #1
 80287b0:	9210      	str	r2, [sp, #64]	@ 0x40
 80287b2:	9112      	str	r1, [sp, #72]	@ 0x48
 80287b4:	930d      	str	r3, [sp, #52]	@ 0x34
 80287b6:	f040 820f 	bne.w	8028bd8 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x438>
 80287ba:	b913      	cbnz	r3, 80287c2 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x22>
 80287bc:	b01b      	add	sp, #108	@ 0x6c
 80287be:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80287c2:	6869      	ldr	r1, [r5, #4]
 80287c4:	4681      	mov	r9, r0
 80287c6:	6828      	ldr	r0, [r5, #0]
 80287c8:	ab16      	add	r3, sp, #88	@ 0x58
 80287ca:	c303      	stmia	r3!, {r0, r1}
 80287cc:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 80287ce:	6818      	ldr	r0, [r3, #0]
 80287d0:	6859      	ldr	r1, [r3, #4]
 80287d2:	ab18      	add	r3, sp, #96	@ 0x60
 80287d4:	c303      	stmia	r3!, {r0, r1}
 80287d6:	a816      	add	r0, sp, #88	@ 0x58
 80287d8:	f7e4 fbf2 	bl	800cfc0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80287dc:	4629      	mov	r1, r5
 80287de:	a818      	add	r0, sp, #96	@ 0x60
 80287e0:	f7e4 fc16 	bl	800d010 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80287e4:	f9bd a05c 	ldrsh.w	sl, [sp, #92]	@ 0x5c
 80287e8:	f5ba 6f80 	cmp.w	sl, #1024	@ 0x400
 80287ec:	f340 814e 	ble.w	8028a8c <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x2ec>
 80287f0:	fa1f f08a 	uxth.w	r0, sl
 80287f4:	9414      	str	r4, [sp, #80]	@ 0x50
 80287f6:	f9bd 3062 	ldrsh.w	r3, [sp, #98]	@ 0x62
 80287fa:	f9bd 205e 	ldrsh.w	r2, [sp, #94]	@ 0x5e
 80287fe:	fb93 f1f4 	sdiv	r1, r3, r4
 8028802:	4422      	add	r2, r4
 8028804:	3a01      	subs	r2, #1
 8028806:	fb92 f2f4 	sdiv	r2, r2, r4
 802880a:	b289      	uxth	r1, r1
 802880c:	fb04 3411 	mls	r4, r4, r1, r3
 8028810:	9113      	str	r1, [sp, #76]	@ 0x4c
 8028812:	f8bd 1060 	ldrh.w	r1, [sp, #96]	@ 0x60
 8028816:	f8bd 6058 	ldrh.w	r6, [sp, #88]	@ 0x58
 802881a:	fb14 1a00 	smlabb	sl, r4, r0, r1
 802881e:	f8bd 505a 	ldrh.w	r5, [sp, #90]	@ 0x5a
 8028822:	48bc      	ldr	r0, [pc, #752]	@ (8028b14 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x374>)
 8028824:	4431      	add	r1, r6
 8028826:	442b      	add	r3, r5
 8028828:	6800      	ldr	r0, [r0, #0]
 802882a:	f8ad 1060 	strh.w	r1, [sp, #96]	@ 0x60
 802882e:	f8ad 3062 	strh.w	r3, [sp, #98]	@ 0x62
 8028832:	f9bd 7064 	ldrsh.w	r7, [sp, #100]	@ 0x64
 8028836:	6803      	ldr	r3, [r0, #0]
 8028838:	3201      	adds	r2, #1
 802883a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 802883c:	970a      	str	r7, [sp, #40]	@ 0x28
 802883e:	b294      	uxth	r4, r2
 8028840:	f9bd 5066 	ldrsh.w	r5, [sp, #102]	@ 0x66
 8028844:	4798      	blx	r3
 8028846:	2200      	movs	r2, #0
 8028848:	fa1f f68a 	uxth.w	r6, sl
 802884c:	2e00      	cmp	r6, #0
 802884e:	bf0c      	ite	eq
 8028850:	463b      	moveq	r3, r7
 8028852:	2300      	movne	r3, #0
 8028854:	49b0      	ldr	r1, [pc, #704]	@ (8028b18 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x378>)
 8028856:	9602      	str	r6, [sp, #8]
 8028858:	8809      	ldrh	r1, [r1, #0]
 802885a:	9211      	str	r2, [sp, #68]	@ 0x44
 802885c:	f9bd 6060 	ldrsh.w	r6, [sp, #96]	@ 0x60
 8028860:	f9bd 2062 	ldrsh.w	r2, [sp, #98]	@ 0x62
 8028864:	fb01 f505 	mul.w	r5, r1, r5
 8028868:	fb01 6202 	mla	r2, r1, r2, r6
 802886c:	9910      	ldr	r1, [sp, #64]	@ 0x40
 802886e:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8028872:	eb01 0484 	add.w	r4, r1, r4, lsl #2
 8028876:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 802887a:	1881      	adds	r1, r0, r2
 802887c:	9101      	str	r1, [sp, #4]
 802887e:	fa1f fe83 	uxth.w	lr, r3
 8028882:	4429      	add	r1, r5
 8028884:	f109 030e 	add.w	r3, r9, #14
 8028888:	9315      	str	r3, [sp, #84]	@ 0x54
 802888a:	460b      	mov	r3, r1
 802888c:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 802888e:	464f      	mov	r7, r9
 8028890:	f1c2 02ff 	rsb	r2, r2, #255	@ 0xff
 8028894:	f8dd 9008 	ldr.w	r9, [sp, #8]
 8028898:	f104 0c04 	add.w	ip, r4, #4
 802889c:	9106      	str	r1, [sp, #24]
 802889e:	fa1f f882 	uxth.w	r8, r2
 80288a2:	9a01      	ldr	r2, [sp, #4]
 80288a4:	4293      	cmp	r3, r2
 80288a6:	f240 8101 	bls.w	8028aac <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x30c>
 80288aa:	2200      	movs	r2, #0
 80288ac:	2601      	movs	r6, #1
 80288ae:	9911      	ldr	r1, [sp, #68]	@ 0x44
 80288b0:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 80288b2:	920c      	str	r2, [sp, #48]	@ 0x30
 80288b4:	fa10 f481 	uxtah	r4, r0, r1
 80288b8:	00a4      	lsls	r4, r4, #2
 80288ba:	9910      	ldr	r1, [sp, #64]	@ 0x40
 80288bc:	3404      	adds	r4, #4
 80288be:	4421      	add	r1, r4
 80288c0:	788a      	ldrb	r2, [r1, #2]
 80288c2:	784d      	ldrb	r5, [r1, #1]
 80288c4:	0212      	lsls	r2, r2, #8
 80288c6:	78c9      	ldrb	r1, [r1, #3]
 80288c8:	ea42 4005 	orr.w	r0, r2, r5, lsl #16
 80288cc:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 80288ce:	4308      	orrs	r0, r1
 80288d0:	f8bd 305c 	ldrh.w	r3, [sp, #92]	@ 0x5c
 80288d4:	1829      	adds	r1, r5, r0
 80288d6:	5c28      	ldrb	r0, [r5, r0]
 80288d8:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 80288da:	fbb9 f3f3 	udiv	r3, r9, r3
 80288de:	5d2c      	ldrb	r4, [r5, r4]
 80288e0:	784a      	ldrb	r2, [r1, #1]
 80288e2:	4431      	add	r1, r6
 80288e4:	940e      	str	r4, [sp, #56]	@ 0x38
 80288e6:	9104      	str	r1, [sp, #16]
 80288e8:	f04f 0a00 	mov.w	sl, #0
 80288ec:	19a1      	adds	r1, r4, r6
 80288ee:	4634      	mov	r4, r6
 80288f0:	0212      	lsls	r2, r2, #8
 80288f2:	f402 72ff 	and.w	r2, r2, #510	@ 0x1fe
 80288f6:	4302      	orrs	r2, r0
 80288f8:	9814      	ldr	r0, [sp, #80]	@ 0x50
 80288fa:	f8bd 5034 	ldrh.w	r5, [sp, #52]	@ 0x34
 80288fe:	1ac3      	subs	r3, r0, r3
 8028900:	b29b      	uxth	r3, r3
 8028902:	b290      	uxth	r0, r2
 8028904:	9609      	str	r6, [sp, #36]	@ 0x24
 8028906:	737a      	strb	r2, [r7, #13]
 8028908:	9008      	str	r0, [sp, #32]
 802890a:	9105      	str	r1, [sp, #20]
 802890c:	930f      	str	r3, [sp, #60]	@ 0x3c
 802890e:	9603      	str	r6, [sp, #12]
 8028910:	f1b9 0f00 	cmp.w	r9, #0
 8028914:	d035      	beq.n	8028982 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x1e2>
 8028916:	45a1      	cmp	r9, r4
 8028918:	f240 8100 	bls.w	8028b1c <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x37c>
 802891c:	9b06      	ldr	r3, [sp, #24]
 802891e:	9a01      	ldr	r2, [sp, #4]
 8028920:	eba9 0904 	sub.w	r9, r9, r4
 8028924:	4293      	cmp	r3, r2
 8028926:	fa1f f989 	uxth.w	r9, r9
 802892a:	f240 80bf 	bls.w	8028aac <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x30c>
 802892e:	9804      	ldr	r0, [sp, #16]
 8028930:	9c03      	ldr	r4, [sp, #12]
 8028932:	7842      	ldrb	r2, [r0, #1]
 8028934:	f1c4 0107 	rsb	r1, r4, #7
 8028938:	7803      	ldrb	r3, [r0, #0]
 802893a:	408a      	lsls	r2, r1
 802893c:	0052      	lsls	r2, r2, #1
 802893e:	4123      	asrs	r3, r4
 8028940:	f402 72ff 	and.w	r2, r2, #510	@ 0x1fe
 8028944:	1c61      	adds	r1, r4, #1
 8028946:	b2db      	uxtb	r3, r3
 8028948:	4313      	orrs	r3, r2
 802894a:	b2ca      	uxtb	r2, r1
 802894c:	4611      	mov	r1, r2
 802894e:	2908      	cmp	r1, #8
 8028950:	9203      	str	r2, [sp, #12]
 8028952:	b29a      	uxth	r2, r3
 8028954:	f000 810b 	beq.w	8028b6e <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x3ce>
 8028958:	3001      	adds	r0, #1
 802895a:	9004      	str	r0, [sp, #16]
 802895c:	990e      	ldr	r1, [sp, #56]	@ 0x38
 802895e:	4291      	cmp	r1, r2
 8028960:	f0c0 80e7 	bcc.w	8028b32 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x392>
 8028964:	2401      	movs	r4, #1
 8028966:	b2db      	uxtb	r3, r3
 8028968:	737b      	strb	r3, [r7, #13]
 802896a:	9905      	ldr	r1, [sp, #20]
 802896c:	f5b1 7f00 	cmp.w	r1, #512	@ 0x200
 8028970:	f0c0 8103 	bcc.w	8028b7a <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x3da>
 8028974:	e9cd 2408 	strd	r2, r4, [sp, #32]
 8028978:	f04f 0a00 	mov.w	sl, #0
 802897c:	f1b9 0f00 	cmp.w	r9, #0
 8028980:	d1c9      	bne.n	8028916 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x176>
 8028982:	4574      	cmp	r4, lr
 8028984:	f0c0 809a 	bcc.w	8028abc <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x31c>
 8028988:	eba4 030e 	sub.w	r3, r4, lr
 802898c:	b29b      	uxth	r3, r3
 802898e:	9307      	str	r3, [sp, #28]
 8028990:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8028992:	f8cd e008 	str.w	lr, [sp, #8]
 8028996:	2bff      	cmp	r3, #255	@ 0xff
 8028998:	f8cd 902c 	str.w	r9, [sp, #44]	@ 0x2c
 802899c:	9b02      	ldr	r3, [sp, #8]
 802899e:	f000 8099 	beq.w	8028ad4 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x334>
 80289a2:	2b00      	cmp	r3, #0
 80289a4:	d048      	beq.n	8028a38 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x298>
 80289a6:	eb0a 0603 	add.w	r6, sl, r3
 80289aa:	9b01      	ldr	r3, [sp, #4]
 80289ac:	b2b6      	uxth	r6, r6
 80289ae:	1cd8      	adds	r0, r3, #3
 80289b0:	f810 1c03 	ldrb.w	r1, [r0, #-3]
 80289b4:	eb07 030a 	add.w	r3, r7, sl
 80289b8:	7b5b      	ldrb	r3, [r3, #13]
 80289ba:	fb11 f208 	smulbb	r2, r1, r8
 80289be:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 80289c2:	f81c 1003 	ldrb.w	r1, [ip, r3]
 80289c6:	4463      	add	r3, ip
 80289c8:	fb01 2105 	mla	r1, r1, r5, r2
 80289cc:	b289      	uxth	r1, r1
 80289ce:	f810 2c02 	ldrb.w	r2, [r0, #-2]
 80289d2:	f101 0b01 	add.w	fp, r1, #1
 80289d6:	eb0b 2111 	add.w	r1, fp, r1, lsr #8
 80289da:	1209      	asrs	r1, r1, #8
 80289dc:	fb12 fb08 	smulbb	fp, r2, r8
 80289e0:	f800 1c03 	strb.w	r1, [r0, #-3]
 80289e4:	785a      	ldrb	r2, [r3, #1]
 80289e6:	f810 1c01 	ldrb.w	r1, [r0, #-1]
 80289ea:	fb02 b205 	mla	r2, r2, r5, fp
 80289ee:	b292      	uxth	r2, r2
 80289f0:	f102 0b01 	add.w	fp, r2, #1
 80289f4:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 80289f8:	1212      	asrs	r2, r2, #8
 80289fa:	fb11 f108 	smulbb	r1, r1, r8
 80289fe:	f800 2c02 	strb.w	r2, [r0, #-2]
 8028a02:	789b      	ldrb	r3, [r3, #2]
 8028a04:	f10a 0a01 	add.w	sl, sl, #1
 8028a08:	fb03 1305 	mla	r3, r3, r5, r1
 8028a0c:	b29b      	uxth	r3, r3
 8028a0e:	1c5a      	adds	r2, r3, #1
 8028a10:	fa1f fa8a 	uxth.w	sl, sl
 8028a14:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8028a18:	121b      	asrs	r3, r3, #8
 8028a1a:	45b2      	cmp	sl, r6
 8028a1c:	f800 3c01 	strb.w	r3, [r0, #-1]
 8028a20:	f100 0003 	add.w	r0, r0, #3
 8028a24:	d1c4      	bne.n	80289b0 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x210>
 8028a26:	9b02      	ldr	r3, [sp, #8]
 8028a28:	9a01      	ldr	r2, [sp, #4]
 8028a2a:	3b01      	subs	r3, #1
 8028a2c:	b29b      	uxth	r3, r3
 8028a2e:	3301      	adds	r3, #1
 8028a30:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8028a34:	441a      	add	r2, r3
 8028a36:	9201      	str	r2, [sp, #4]
 8028a38:	4574      	cmp	r4, lr
 8028a3a:	d330      	bcc.n	8028a9e <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x2fe>
 8028a3c:	4b36      	ldr	r3, [pc, #216]	@ (8028b18 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x378>)
 8028a3e:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8028a40:	881b      	ldrh	r3, [r3, #0]
 8028a42:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 8028a44:	1a5b      	subs	r3, r3, r1
 8028a46:	9901      	ldr	r1, [sp, #4]
 8028a48:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8028a4c:	4419      	add	r1, r3
 8028a4e:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8028a50:	3201      	adds	r2, #1
 8028a52:	429a      	cmp	r2, r3
 8028a54:	920c      	str	r2, [sp, #48]	@ 0x30
 8028a56:	9101      	str	r1, [sp, #4]
 8028a58:	f000 80ab 	beq.w	8028bb2 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x412>
 8028a5c:	f8bd e028 	ldrh.w	lr, [sp, #40]	@ 0x28
 8028a60:	f8bd 905c 	ldrh.w	r9, [sp, #92]	@ 0x5c
 8028a64:	9c07      	ldr	r4, [sp, #28]
 8028a66:	eba9 090e 	sub.w	r9, r9, lr
 8028a6a:	fa1f f989 	uxth.w	r9, r9
 8028a6e:	f1b9 0f00 	cmp.w	r9, #0
 8028a72:	bf14      	ite	ne
 8028a74:	f04f 0e00 	movne.w	lr, #0
 8028a78:	f04f 0900 	moveq.w	r9, #0
 8028a7c:	9b06      	ldr	r3, [sp, #24]
 8028a7e:	9a01      	ldr	r2, [sp, #4]
 8028a80:	4293      	cmp	r3, r2
 8028a82:	d913      	bls.n	8028aac <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x30c>
 8028a84:	2c00      	cmp	r4, #0
 8028a86:	f47f af43 	bne.w	8028910 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x170>
 8028a8a:	e750      	b.n	802892e <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x18e>
 8028a8c:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 8028a90:	fa1f f08a 	uxth.w	r0, sl
 8028a94:	fb94 f4f0 	sdiv	r4, r4, r0
 8028a98:	b2a3      	uxth	r3, r4
 8028a9a:	9314      	str	r3, [sp, #80]	@ 0x50
 8028a9c:	e6ab      	b.n	80287f6 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x56>
 8028a9e:	9b06      	ldr	r3, [sp, #24]
 8028aa0:	9a01      	ldr	r2, [sp, #4]
 8028aa2:	9c07      	ldr	r4, [sp, #28]
 8028aa4:	4293      	cmp	r3, r2
 8028aa6:	f8dd e02c 	ldr.w	lr, [sp, #44]	@ 0x2c
 8028aaa:	d8eb      	bhi.n	8028a84 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x2e4>
 8028aac:	4b19      	ldr	r3, [pc, #100]	@ (8028b14 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x374>)
 8028aae:	6818      	ldr	r0, [r3, #0]
 8028ab0:	6803      	ldr	r3, [r0, #0]
 8028ab2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8028ab4:	4798      	blx	r3
 8028ab6:	b01b      	add	sp, #108	@ 0x6c
 8028ab8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8028abc:	ebae 0304 	sub.w	r3, lr, r4
 8028ac0:	b29b      	uxth	r3, r3
 8028ac2:	930b      	str	r3, [sp, #44]	@ 0x2c
 8028ac4:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8028ac6:	9402      	str	r4, [sp, #8]
 8028ac8:	2bff      	cmp	r3, #255	@ 0xff
 8028aca:	f8cd 901c 	str.w	r9, [sp, #28]
 8028ace:	9b02      	ldr	r3, [sp, #8]
 8028ad0:	f47f af67 	bne.w	80289a2 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x202>
 8028ad4:	2b00      	cmp	r3, #0
 8028ad6:	d0af      	beq.n	8028a38 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x298>
 8028ad8:	eb0a 0003 	add.w	r0, sl, r3
 8028adc:	9b01      	ldr	r3, [sp, #4]
 8028ade:	b280      	uxth	r0, r0
 8028ae0:	1cda      	adds	r2, r3, #3
 8028ae2:	eb07 030a 	add.w	r3, r7, sl
 8028ae6:	7b5b      	ldrb	r3, [r3, #13]
 8028ae8:	f10a 0a01 	add.w	sl, sl, #1
 8028aec:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8028af0:	f81c 1003 	ldrb.w	r1, [ip, r3]
 8028af4:	4463      	add	r3, ip
 8028af6:	f802 1c03 	strb.w	r1, [r2, #-3]
 8028afa:	7859      	ldrb	r1, [r3, #1]
 8028afc:	fa1f fa8a 	uxth.w	sl, sl
 8028b00:	f802 1c02 	strb.w	r1, [r2, #-2]
 8028b04:	789b      	ldrb	r3, [r3, #2]
 8028b06:	4582      	cmp	sl, r0
 8028b08:	f802 3c01 	strb.w	r3, [r2, #-1]
 8028b0c:	f102 0203 	add.w	r2, r2, #3
 8028b10:	d1e7      	bne.n	8028ae2 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x342>
 8028b12:	e788      	b.n	8028a26 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x286>
 8028b14:	200830a4 	.word	0x200830a4
 8028b18:	2008309e 	.word	0x2008309e
 8028b1c:	eba4 0409 	sub.w	r4, r4, r9
 8028b20:	44ca      	add	sl, r9
 8028b22:	b2a4      	uxth	r4, r4
 8028b24:	fa1f fa8a 	uxth.w	sl, sl
 8028b28:	f8bd e028 	ldrh.w	lr, [sp, #40]	@ 0x28
 8028b2c:	f04f 0900 	mov.w	r9, #0
 8028b30:	e7a4      	b.n	8028a7c <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x2dc>
 8028b32:	9b05      	ldr	r3, [sp, #20]
 8028b34:	429a      	cmp	r2, r3
 8028b36:	d323      	bcc.n	8028b80 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x3e0>
 8028b38:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8028b3a:	7b79      	ldrb	r1, [r7, #13]
 8028b3c:	183b      	adds	r3, r7, r0
 8028b3e:	7359      	strb	r1, [r3, #13]
 8028b40:	7b7b      	ldrb	r3, [r7, #13]
 8028b42:	1c41      	adds	r1, r0, #1
 8028b44:	b28c      	uxth	r4, r1
 8028b46:	9e05      	ldr	r6, [sp, #20]
 8028b48:	eb07 0086 	add.w	r0, r7, r6, lsl #2
 8028b4c:	f106 0a01 	add.w	sl, r6, #1
 8028b50:	9e08      	ldr	r6, [sp, #32]
 8028b52:	f880 304e 	strb.w	r3, [r0, #78]	@ 0x4e
 8028b56:	fa1f f38a 	uxth.w	r3, sl
 8028b5a:	f8a0 6050 	strh.w	r6, [r0, #80]	@ 0x50
 8028b5e:	f880 104f 	strb.w	r1, [r0, #79]	@ 0x4f
 8028b62:	9305      	str	r3, [sp, #20]
 8028b64:	e9cd 2408 	strd	r2, r4, [sp, #32]
 8028b68:	f04f 0a00 	mov.w	sl, #0
 8028b6c:	e6d0      	b.n	8028910 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x170>
 8028b6e:	2100      	movs	r1, #0
 8028b70:	9103      	str	r1, [sp, #12]
 8028b72:	9904      	ldr	r1, [sp, #16]
 8028b74:	3102      	adds	r1, #2
 8028b76:	9104      	str	r1, [sp, #16]
 8028b78:	e6f0      	b.n	802895c <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x1bc>
 8028b7a:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8028b7c:	3101      	adds	r1, #1
 8028b7e:	e7e2      	b.n	8028b46 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x3a6>
 8028b80:	eb07 0382 	add.w	r3, r7, r2, lsl #2
 8028b84:	f893 404f 	ldrb.w	r4, [r3, #79]	@ 0x4f
 8028b88:	4613      	mov	r3, r2
 8028b8a:	2c01      	cmp	r4, #1
 8028b8c:	d90d      	bls.n	8028baa <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x40a>
 8028b8e:	f104 010d 	add.w	r1, r4, #13
 8028b92:	9e15      	ldr	r6, [sp, #84]	@ 0x54
 8028b94:	4439      	add	r1, r7
 8028b96:	eb07 0383 	add.w	r3, r7, r3, lsl #2
 8028b9a:	f893 004e 	ldrb.w	r0, [r3, #78]	@ 0x4e
 8028b9e:	f801 0d01 	strb.w	r0, [r1, #-1]!
 8028ba2:	428e      	cmp	r6, r1
 8028ba4:	f8b3 3050 	ldrh.w	r3, [r3, #80]	@ 0x50
 8028ba8:	d1f5      	bne.n	8028b96 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x3f6>
 8028baa:	b2db      	uxtb	r3, r3
 8028bac:	737b      	strb	r3, [r7, #13]
 8028bae:	b2a4      	uxth	r4, r4
 8028bb0:	e6db      	b.n	802896a <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x1ca>
 8028bb2:	f8bd 3060 	ldrh.w	r3, [sp, #96]	@ 0x60
 8028bb6:	f8bd 2058 	ldrh.w	r2, [sp, #88]	@ 0x58
 8028bba:	9911      	ldr	r1, [sp, #68]	@ 0x44
 8028bbc:	1a9b      	subs	r3, r3, r2
 8028bbe:	fa1f f983 	uxth.w	r9, r3
 8028bc2:	f1b9 0f00 	cmp.w	r9, #0
 8028bc6:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8028bc8:	bf18      	it	ne
 8028bca:	2300      	movne	r3, #0
 8028bcc:	3101      	adds	r1, #1
 8028bce:	fa1f fe83 	uxth.w	lr, r3
 8028bd2:	9111      	str	r1, [sp, #68]	@ 0x44
 8028bd4:	9b06      	ldr	r3, [sp, #24]
 8028bd6:	e664      	b.n	80288a2 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x102>
 8028bd8:	4b03      	ldr	r3, [pc, #12]	@ (8028be8 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x448>)
 8028bda:	4a04      	ldr	r2, [pc, #16]	@ (8028bec <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x44c>)
 8028bdc:	f640 41f6 	movw	r1, #3318	@ 0xcf6
 8028be0:	4803      	ldr	r0, [pc, #12]	@ (8028bf0 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x450>)
 8028be2:	f009 fdc9 	bl	8032778 <__assert_func>
 8028be6:	bf00      	nop
 8028be8:	08036624 	.word	0x08036624
 8028bec:	08037a84 	.word	0x08037a84
 8028bf0:	08036560 	.word	0x08036560

08028bf4 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_32BPPEPKhS2_RKNS_4RectES5_h>:
 8028bf4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8028bf8:	4690      	mov	r8, r2
 8028bfa:	8812      	ldrh	r2, [r2, #0]
 8028bfc:	b095      	sub	sp, #84	@ 0x54
 8028bfe:	2a01      	cmp	r2, #1
 8028c00:	461c      	mov	r4, r3
 8028c02:	f89d 907c 	ldrb.w	r9, [sp, #124]	@ 0x7c
 8028c06:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 8028c08:	f040 8107 	bne.w	8028e1a <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x226>
 8028c0c:	468a      	mov	sl, r1
 8028c0e:	6820      	ldr	r0, [r4, #0]
 8028c10:	6861      	ldr	r1, [r4, #4]
 8028c12:	aa10      	add	r2, sp, #64	@ 0x40
 8028c14:	c203      	stmia	r2!, {r0, r1}
 8028c16:	6818      	ldr	r0, [r3, #0]
 8028c18:	6859      	ldr	r1, [r3, #4]
 8028c1a:	aa12      	add	r2, sp, #72	@ 0x48
 8028c1c:	c203      	stmia	r2!, {r0, r1}
 8028c1e:	a810      	add	r0, sp, #64	@ 0x40
 8028c20:	f7e4 f9ce 	bl	800cfc0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8028c24:	4621      	mov	r1, r4
 8028c26:	a812      	add	r0, sp, #72	@ 0x48
 8028c28:	f7e4 f9f2 	bl	800d010 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8028c2c:	f9bd 4048 	ldrsh.w	r4, [sp, #72]	@ 0x48
 8028c30:	f9bd 504a 	ldrsh.w	r5, [sp, #74]	@ 0x4a
 8028c34:	f8bd 1044 	ldrh.w	r1, [sp, #68]	@ 0x44
 8028c38:	f8bd 2040 	ldrh.w	r2, [sp, #64]	@ 0x40
 8028c3c:	f8bd 3042 	ldrh.w	r3, [sp, #66]	@ 0x42
 8028c40:	4879      	ldr	r0, [pc, #484]	@ (8028e28 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x234>)
 8028c42:	fb11 4105 	smlabb	r1, r1, r5, r4
 8028c46:	4422      	add	r2, r4
 8028c48:	442b      	add	r3, r5
 8028c4a:	6800      	ldr	r0, [r0, #0]
 8028c4c:	f8ad 304a 	strh.w	r3, [sp, #74]	@ 0x4a
 8028c50:	f8ad 2048 	strh.w	r2, [sp, #72]	@ 0x48
 8028c54:	6802      	ldr	r2, [r0, #0]
 8028c56:	448a      	add	sl, r1
 8028c58:	f9bd 104c 	ldrsh.w	r1, [sp, #76]	@ 0x4c
 8028c5c:	4c73      	ldr	r4, [pc, #460]	@ (8028e2c <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x238>)
 8028c5e:	f8d2 30a0 	ldr.w	r3, [r2, #160]	@ 0xa0
 8028c62:	910c      	str	r1, [sp, #48]	@ 0x30
 8028c64:	f9bd 104e 	ldrsh.w	r1, [sp, #78]	@ 0x4e
 8028c68:	42a3      	cmp	r3, r4
 8028c6a:	910e      	str	r1, [sp, #56]	@ 0x38
 8028c6c:	f040 80a2 	bne.w	8028db4 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x1c0>
 8028c70:	6841      	ldr	r1, [r0, #4]
 8028c72:	4c6f      	ldr	r4, [pc, #444]	@ (8028e30 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x23c>)
 8028c74:	680b      	ldr	r3, [r1, #0]
 8028c76:	699b      	ldr	r3, [r3, #24]
 8028c78:	42a3      	cmp	r3, r4
 8028c7a:	f040 80c1 	bne.w	8028e00 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x20c>
 8028c7e:	6a93      	ldr	r3, [r2, #40]	@ 0x28
 8028c80:	4798      	blx	r3
 8028c82:	4b6c      	ldr	r3, [pc, #432]	@ (8028e34 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x240>)
 8028c84:	f9bd 104a 	ldrsh.w	r1, [sp, #74]	@ 0x4a
 8028c88:	881b      	ldrh	r3, [r3, #0]
 8028c8a:	f9bd 2048 	ldrsh.w	r2, [sp, #72]	@ 0x48
 8028c8e:	fb01 2303 	mla	r3, r1, r3, r2
 8028c92:	eb00 0383 	add.w	r3, r0, r3, lsl #2
 8028c96:	930b      	str	r3, [sp, #44]	@ 0x2c
 8028c98:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8028c9a:	2b00      	cmp	r3, #0
 8028c9c:	f340 8082 	ble.w	8028da4 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x1b0>
 8028ca0:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8028ca2:	2b00      	cmp	r3, #0
 8028ca4:	dd7e      	ble.n	8028da4 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x1b0>
 8028ca6:	2200      	movs	r2, #0
 8028ca8:	f04f 0e03 	mov.w	lr, #3
 8028cac:	f04f 0c04 	mov.w	ip, #4
 8028cb0:	f1c9 07ff 	rsb	r7, r9, #255	@ 0xff
 8028cb4:	009b      	lsls	r3, r3, #2
 8028cb6:	920d      	str	r2, [sp, #52]	@ 0x34
 8028cb8:	b2bf      	uxth	r7, r7
 8028cba:	930f      	str	r3, [sp, #60]	@ 0x3c
 8028cbc:	fa1f f289 	uxth.w	r2, r9
 8028cc0:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8028cc2:	4655      	mov	r5, sl
 8028cc4:	1d18      	adds	r0, r3, #4
 8028cc6:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8028cc8:	eb0a 0603 	add.w	r6, sl, r3
 8028ccc:	e03e      	b.n	8028d4c <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x158>
 8028cce:	f810 3c04 	ldrb.w	r3, [r0, #-4]
 8028cd2:	f810 4c03 	ldrb.w	r4, [r0, #-3]
 8028cd6:	fb13 f307 	smulbb	r3, r3, r7
 8028cda:	fb0b 3302 	mla	r3, fp, r2, r3
 8028cde:	b29b      	uxth	r3, r3
 8028ce0:	f103 0b01 	add.w	fp, r3, #1
 8028ce4:	eb0b 2313 	add.w	r3, fp, r3, lsr #8
 8028ce8:	121b      	asrs	r3, r3, #8
 8028cea:	fb14 f407 	smulbb	r4, r4, r7
 8028cee:	f800 3c04 	strb.w	r3, [r0, #-4]
 8028cf2:	784b      	ldrb	r3, [r1, #1]
 8028cf4:	f810 bc02 	ldrb.w	fp, [r0, #-2]
 8028cf8:	fb03 4302 	mla	r3, r3, r2, r4
 8028cfc:	b29b      	uxth	r3, r3
 8028cfe:	1c5c      	adds	r4, r3, #1
 8028d00:	eb04 2313 	add.w	r3, r4, r3, lsr #8
 8028d04:	121b      	asrs	r3, r3, #8
 8028d06:	fb1b fb07 	smulbb	fp, fp, r7
 8028d0a:	f800 3c03 	strb.w	r3, [r0, #-3]
 8028d0e:	788c      	ldrb	r4, [r1, #2]
 8028d10:	f810 3c01 	ldrb.w	r3, [r0, #-1]
 8028d14:	fb04 b402 	mla	r4, r4, r2, fp
 8028d18:	b2a4      	uxth	r4, r4
 8028d1a:	f104 0b01 	add.w	fp, r4, #1
 8028d1e:	eb0b 2414 	add.w	r4, fp, r4, lsr #8
 8028d22:	1224      	asrs	r4, r4, #8
 8028d24:	fb13 fb07 	smulbb	fp, r3, r7
 8028d28:	f800 4c02 	strb.w	r4, [r0, #-2]
 8028d2c:	78cb      	ldrb	r3, [r1, #3]
 8028d2e:	42ae      	cmp	r6, r5
 8028d30:	fb03 b302 	mla	r3, r3, r2, fp
 8028d34:	b29b      	uxth	r3, r3
 8028d36:	f103 0101 	add.w	r1, r3, #1
 8028d3a:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8028d3e:	ea4f 2323 	mov.w	r3, r3, asr #8
 8028d42:	f800 3c01 	strb.w	r3, [r0, #-1]
 8028d46:	f100 0004 	add.w	r0, r0, #4
 8028d4a:	d018      	beq.n	8028d7e <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x18a>
 8028d4c:	f815 3b01 	ldrb.w	r3, [r5], #1
 8028d50:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 8028d54:	fb1e c303 	smlabb	r3, lr, r3, ip
 8028d58:	eb08 0103 	add.w	r1, r8, r3
 8028d5c:	f818 b003 	ldrb.w	fp, [r8, r3]
 8028d60:	d1b5      	bne.n	8028cce <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0xda>
 8028d62:	f800 bc04 	strb.w	fp, [r0, #-4]
 8028d66:	784b      	ldrb	r3, [r1, #1]
 8028d68:	42ae      	cmp	r6, r5
 8028d6a:	f800 3c03 	strb.w	r3, [r0, #-3]
 8028d6e:	788b      	ldrb	r3, [r1, #2]
 8028d70:	f100 0004 	add.w	r0, r0, #4
 8028d74:	f800 9c05 	strb.w	r9, [r0, #-5]
 8028d78:	f800 3c06 	strb.w	r3, [r0, #-6]
 8028d7c:	d1e6      	bne.n	8028d4c <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x158>
 8028d7e:	4b2d      	ldr	r3, [pc, #180]	@ (8028e34 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x240>)
 8028d80:	980c      	ldr	r0, [sp, #48]	@ 0x30
 8028d82:	881b      	ldrh	r3, [r3, #0]
 8028d84:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 8028d86:	1a1b      	subs	r3, r3, r0
 8028d88:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 8028d8c:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 8028d8e:	980d      	ldr	r0, [sp, #52]	@ 0x34
 8028d90:	441c      	add	r4, r3
 8028d92:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8028d94:	3001      	adds	r0, #1
 8028d96:	f9bd 1044 	ldrsh.w	r1, [sp, #68]	@ 0x44
 8028d9a:	4283      	cmp	r3, r0
 8028d9c:	900d      	str	r0, [sp, #52]	@ 0x34
 8028d9e:	940b      	str	r4, [sp, #44]	@ 0x2c
 8028da0:	448a      	add	sl, r1
 8028da2:	d18d      	bne.n	8028cc0 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0xcc>
 8028da4:	4b20      	ldr	r3, [pc, #128]	@ (8028e28 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x234>)
 8028da6:	6818      	ldr	r0, [r3, #0]
 8028da8:	6803      	ldr	r3, [r0, #0]
 8028daa:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8028dac:	4798      	blx	r3
 8028dae:	b015      	add	sp, #84	@ 0x54
 8028db0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8028db4:	4798      	blx	r3
 8028db6:	2801      	cmp	r0, #1
 8028db8:	d125      	bne.n	8028e06 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x212>
 8028dba:	4b1f      	ldr	r3, [pc, #124]	@ (8028e38 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x244>)
 8028dbc:	6818      	ldr	r0, [r3, #0]
 8028dbe:	b330      	cbz	r0, 8028e0e <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x21a>
 8028dc0:	2502      	movs	r5, #2
 8028dc2:	240b      	movs	r4, #11
 8028dc4:	2600      	movs	r6, #0
 8028dc6:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
 8028dca:	f8bd 2030 	ldrh.w	r2, [sp, #48]	@ 0x30
 8028dce:	9302      	str	r3, [sp, #8]
 8028dd0:	4b18      	ldr	r3, [pc, #96]	@ (8028e34 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x240>)
 8028dd2:	9201      	str	r2, [sp, #4]
 8028dd4:	881b      	ldrh	r3, [r3, #0]
 8028dd6:	9508      	str	r5, [sp, #32]
 8028dd8:	9407      	str	r4, [sp, #28]
 8028dda:	f8bd 5044 	ldrh.w	r5, [sp, #68]	@ 0x44
 8028dde:	f8bd 404a 	ldrh.w	r4, [sp, #74]	@ 0x4a
 8028de2:	9306      	str	r3, [sp, #24]
 8028de4:	f8cd 9010 	str.w	r9, [sp, #16]
 8028de8:	4642      	mov	r2, r8
 8028dea:	4651      	mov	r1, sl
 8028dec:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 8028df0:	9605      	str	r6, [sp, #20]
 8028df2:	9503      	str	r5, [sp, #12]
 8028df4:	9400      	str	r4, [sp, #0]
 8028df6:	f7f8 f857 	bl	8020ea8 <_ZN8touchgfx8HALGPU2D13dma2dBlitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_>
 8028dfa:	b015      	add	sp, #84	@ 0x54
 8028dfc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8028e00:	4608      	mov	r0, r1
 8028e02:	4798      	blx	r3
 8028e04:	e7d7      	b.n	8028db6 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x1c2>
 8028e06:	4b08      	ldr	r3, [pc, #32]	@ (8028e28 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x234>)
 8028e08:	6818      	ldr	r0, [r3, #0]
 8028e0a:	6802      	ldr	r2, [r0, #0]
 8028e0c:	e737      	b.n	8028c7e <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x8a>
 8028e0e:	4b0b      	ldr	r3, [pc, #44]	@ (8028e3c <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x248>)
 8028e10:	4a0b      	ldr	r2, [pc, #44]	@ (8028e40 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x24c>)
 8028e12:	217c      	movs	r1, #124	@ 0x7c
 8028e14:	480b      	ldr	r0, [pc, #44]	@ (8028e44 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x250>)
 8028e16:	f009 fcaf 	bl	8032778 <__assert_func>
 8028e1a:	4b0b      	ldr	r3, [pc, #44]	@ (8028e48 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x254>)
 8028e1c:	4a0b      	ldr	r2, [pc, #44]	@ (8028e4c <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x258>)
 8028e1e:	f640 51d3 	movw	r1, #3539	@ 0xdd3
 8028e22:	480b      	ldr	r0, [pc, #44]	@ (8028e50 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x25c>)
 8028e24:	f009 fca8 	bl	8032778 <__assert_func>
 8028e28:	200830a4 	.word	0x200830a4
 8028e2c:	0800121d 	.word	0x0800121d
 8028e30:	0800bd65 	.word	0x0800bd65
 8028e34:	2008309e 	.word	0x2008309e
 8028e38:	20083544 	.word	0x20083544
 8028e3c:	080364bc 	.word	0x080364bc
 8028e40:	08036d28 	.word	0x08036d28
 8028e44:	080364e4 	.word	0x080364e4
 8028e48:	08036584 	.word	0x08036584
 8028e4c:	080372d0 	.word	0x080372d0
 8028e50:	08036560 	.word	0x08036560

08028e54 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h>:
 8028e54:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8028e58:	4617      	mov	r7, r2
 8028e5a:	7812      	ldrb	r2, [r2, #0]
 8028e5c:	b08f      	sub	sp, #60	@ 0x3c
 8028e5e:	2a01      	cmp	r2, #1
 8028e60:	461e      	mov	r6, r3
 8028e62:	f89d 8064 	ldrb.w	r8, [sp, #100]	@ 0x64
 8028e66:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 8028e68:	f040 8203 	bne.w	8029272 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x41e>
 8028e6c:	6830      	ldr	r0, [r6, #0]
 8028e6e:	460d      	mov	r5, r1
 8028e70:	6871      	ldr	r1, [r6, #4]
 8028e72:	aa0a      	add	r2, sp, #40	@ 0x28
 8028e74:	c203      	stmia	r2!, {r0, r1}
 8028e76:	6818      	ldr	r0, [r3, #0]
 8028e78:	6859      	ldr	r1, [r3, #4]
 8028e7a:	aa0c      	add	r2, sp, #48	@ 0x30
 8028e7c:	c203      	stmia	r2!, {r0, r1}
 8028e7e:	a80a      	add	r0, sp, #40	@ 0x28
 8028e80:	f7e4 f89e 	bl	800cfc0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8028e84:	4631      	mov	r1, r6
 8028e86:	a80c      	add	r0, sp, #48	@ 0x30
 8028e88:	f7e4 f8c2 	bl	800d010 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8028e8c:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 8028e90:	f9bd 1030 	ldrsh.w	r1, [sp, #48]	@ 0x30
 8028e94:	f003 0201 	and.w	r2, r3, #1
 8028e98:	4614      	mov	r4, r2
 8028e9a:	9206      	str	r2, [sp, #24]
 8028e9c:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
 8028ea0:	4423      	add	r3, r4
 8028ea2:	fb02 1303 	mla	r3, r2, r3, r1
 8028ea6:	f8bd 002a 	ldrh.w	r0, [sp, #42]	@ 0x2a
 8028eaa:	f8bd 6028 	ldrh.w	r6, [sp, #40]	@ 0x28
 8028eae:	4402      	add	r2, r0
 8028eb0:	489d      	ldr	r0, [pc, #628]	@ (8029128 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x2d4>)
 8028eb2:	eb03 73d3 	add.w	r3, r3, r3, lsr #31
 8028eb6:	440e      	add	r6, r1
 8028eb8:	eb05 0363 	add.w	r3, r5, r3, asr #1
 8028ebc:	6800      	ldr	r0, [r0, #0]
 8028ebe:	f8ad 2032 	strh.w	r2, [sp, #50]	@ 0x32
 8028ec2:	f8ad 6030 	strh.w	r6, [sp, #48]	@ 0x30
 8028ec6:	9302      	str	r3, [sp, #8]
 8028ec8:	f001 0301 	and.w	r3, r1, #1
 8028ecc:	6802      	ldr	r2, [r0, #0]
 8028ece:	9305      	str	r3, [sp, #20]
 8028ed0:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
 8028ed4:	6a92      	ldr	r2, [r2, #40]	@ 0x28
 8028ed6:	9303      	str	r3, [sp, #12]
 8028ed8:	f9bd 5036 	ldrsh.w	r5, [sp, #54]	@ 0x36
 8028edc:	4790      	blx	r2
 8028ede:	4a93      	ldr	r2, [pc, #588]	@ (802912c <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x2d8>)
 8028ee0:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 8028ee4:	8812      	ldrh	r2, [r2, #0]
 8028ee6:	f9bd 1030 	ldrsh.w	r1, [sp, #48]	@ 0x30
 8028eea:	fb05 f502 	mul.w	r5, r5, r2
 8028eee:	fb02 1303 	mla	r3, r2, r3, r1
 8028ef2:	eb00 0383 	add.w	r3, r0, r3, lsl #2
 8028ef6:	461a      	mov	r2, r3
 8028ef8:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
 8028efc:	eb03 0385 	add.w	r3, r3, r5, lsl #2
 8028f00:	f107 0704 	add.w	r7, r7, #4
 8028f04:	9304      	str	r3, [sp, #16]
 8028f06:	f000 8113 	beq.w	8029130 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x2dc>
 8028f0a:	4614      	mov	r4, r2
 8028f0c:	9a04      	ldr	r2, [sp, #16]
 8028f0e:	4294      	cmp	r4, r2
 8028f10:	f080 80c2 	bcs.w	8029098 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x244>
 8028f14:	ea4f 6308 	mov.w	r3, r8, lsl #24
 8028f18:	9300      	str	r3, [sp, #0]
 8028f1a:	9b03      	ldr	r3, [sp, #12]
 8028f1c:	3b01      	subs	r3, #1
 8028f1e:	9309      	str	r3, [sp, #36]	@ 0x24
 8028f20:	9b05      	ldr	r3, [sp, #20]
 8028f22:	2b00      	cmp	r3, #0
 8028f24:	f040 80ef 	bne.w	8029106 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x2b2>
 8028f28:	9b02      	ldr	r3, [sp, #8]
 8028f2a:	9301      	str	r3, [sp, #4]
 8028f2c:	9b03      	ldr	r3, [sp, #12]
 8028f2e:	2b01      	cmp	r3, #1
 8028f30:	f340 809c 	ble.w	802906c <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x218>
 8028f34:	3b02      	subs	r3, #2
 8028f36:	9308      	str	r3, [sp, #32]
 8028f38:	f104 0e10 	add.w	lr, r4, #16
 8028f3c:	085b      	lsrs	r3, r3, #1
 8028f3e:	9307      	str	r3, [sp, #28]
 8028f40:	eb0e 0ec3 	add.w	lr, lr, r3, lsl #3
 8028f44:	9b01      	ldr	r3, [sp, #4]
 8028f46:	f104 0608 	add.w	r6, r4, #8
 8028f4a:	f103 3cff 	add.w	ip, r3, #4294967295
 8028f4e:	f81c 3f01 	ldrb.w	r3, [ip, #1]!
 8028f52:	f856 1c08 	ldr.w	r1, [r6, #-8]
 8028f56:	091b      	lsrs	r3, r3, #4
 8028f58:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8028f5c:	18f8      	adds	r0, r7, r3
 8028f5e:	5cfa      	ldrb	r2, [r7, r3]
 8028f60:	f890 9001 	ldrb.w	r9, [r0, #1]
 8028f64:	7883      	ldrb	r3, [r0, #2]
 8028f66:	0e08      	lsrs	r0, r1, #24
 8028f68:	f000 80ae 	beq.w	80290c8 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x274>
 8028f6c:	fb08 f500 	mul.w	r5, r8, r0
 8028f70:	fb18 fb03 	smulbb	fp, r8, r3
 8028f74:	1c6b      	adds	r3, r5, #1
 8028f76:	eb03 2525 	add.w	r5, r3, r5, asr #8
 8028f7a:	fb18 f202 	smulbb	r2, r8, r2
 8028f7e:	122d      	asrs	r5, r5, #8
 8028f80:	fb18 f909 	smulbb	r9, r8, r9
 8028f84:	eba0 0a05 	sub.w	sl, r0, r5
 8028f88:	f3c1 4307 	ubfx	r3, r1, #16, #8
 8028f8c:	fb0a b303 	mla	r3, sl, r3, fp
 8028f90:	fa5f fb81 	uxtb.w	fp, r1
 8028f94:	fb0a 220b 	mla	r2, sl, fp, r2
 8028f98:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8028f9c:	4440      	add	r0, r8
 8028f9e:	fb0a 9101 	mla	r1, sl, r1, r9
 8028fa2:	1b40      	subs	r0, r0, r5
 8028fa4:	b2c0      	uxtb	r0, r0
 8028fa6:	fbb3 f3f0 	udiv	r3, r3, r0
 8028faa:	fbb2 f2f0 	udiv	r2, r2, r0
 8028fae:	fbb1 f1f0 	udiv	r1, r1, r0
 8028fb2:	041b      	lsls	r3, r3, #16
 8028fb4:	b2d2      	uxtb	r2, r2
 8028fb6:	f403 037f 	and.w	r3, r3, #16711680	@ 0xff0000
 8028fba:	ea42 6000 	orr.w	r0, r2, r0, lsl #24
 8028fbe:	0209      	lsls	r1, r1, #8
 8028fc0:	4303      	orrs	r3, r0
 8028fc2:	b289      	uxth	r1, r1
 8028fc4:	430b      	orrs	r3, r1
 8028fc6:	f846 3c08 	str.w	r3, [r6, #-8]
 8028fca:	f89c 2000 	ldrb.w	r2, [ip]
 8028fce:	f856 3c04 	ldr.w	r3, [r6, #-4]
 8028fd2:	f002 020f 	and.w	r2, r2, #15
 8028fd6:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8028fda:	0e18      	lsrs	r0, r3, #24
 8028fdc:	eb07 0102 	add.w	r1, r7, r2
 8028fe0:	d062      	beq.n	80290a8 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x254>
 8028fe2:	fb08 f500 	mul.w	r5, r8, r0
 8028fe6:	f105 0901 	add.w	r9, r5, #1
 8028fea:	eb09 2925 	add.w	r9, r9, r5, asr #8
 8028fee:	ea4f 2929 	mov.w	r9, r9, asr #8
 8028ff2:	eba0 0b09 	sub.w	fp, r0, r9
 8028ff6:	788d      	ldrb	r5, [r1, #2]
 8028ff8:	f891 a001 	ldrb.w	sl, [r1, #1]
 8028ffc:	b2d9      	uxtb	r1, r3
 8028ffe:	fb0b f101 	mul.w	r1, fp, r1
 8029002:	fb15 f508 	smulbb	r5, r5, r8
 8029006:	5cba      	ldrb	r2, [r7, r2]
 8029008:	fb1a fa08 	smulbb	sl, sl, r8
 802900c:	fb02 1108 	mla	r1, r2, r8, r1
 8029010:	f3c3 4207 	ubfx	r2, r3, #16, #8
 8029014:	fb0b 5502 	mla	r5, fp, r2, r5
 8029018:	f3c3 2207 	ubfx	r2, r3, #8, #8
 802901c:	4440      	add	r0, r8
 802901e:	fb0b a202 	mla	r2, fp, r2, sl
 8029022:	eba0 0009 	sub.w	r0, r0, r9
 8029026:	b2c0      	uxtb	r0, r0
 8029028:	fbb1 f3f0 	udiv	r3, r1, r0
 802902c:	fbb5 f5f0 	udiv	r5, r5, r0
 8029030:	fbb2 f2f0 	udiv	r2, r2, r0
 8029034:	b2db      	uxtb	r3, r3
 8029036:	042d      	lsls	r5, r5, #16
 8029038:	ea43 6300 	orr.w	r3, r3, r0, lsl #24
 802903c:	f405 057f 	and.w	r5, r5, #16711680	@ 0xff0000
 8029040:	0212      	lsls	r2, r2, #8
 8029042:	432b      	orrs	r3, r5
 8029044:	b292      	uxth	r2, r2
 8029046:	4313      	orrs	r3, r2
 8029048:	f846 3c04 	str.w	r3, [r6, #-4]
 802904c:	3608      	adds	r6, #8
 802904e:	4576      	cmp	r6, lr
 8029050:	f47f af7d 	bne.w	8028f4e <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0xfa>
 8029054:	9b07      	ldr	r3, [sp, #28]
 8029056:	9901      	ldr	r1, [sp, #4]
 8029058:	1c5a      	adds	r2, r3, #1
 802905a:	4411      	add	r1, r2
 802905c:	eb04 04c2 	add.w	r4, r4, r2, lsl #3
 8029060:	9a08      	ldr	r2, [sp, #32]
 8029062:	ebc3 73c3 	rsb	r3, r3, r3, lsl #31
 8029066:	9101      	str	r1, [sp, #4]
 8029068:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 802906c:	2b01      	cmp	r3, #1
 802906e:	d032      	beq.n	80290d6 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x282>
 8029070:	9906      	ldr	r1, [sp, #24]
 8029072:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 8029076:	4a2d      	ldr	r2, [pc, #180]	@ (802912c <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x2d8>)
 8029078:	440b      	add	r3, r1
 802907a:	8812      	ldrh	r2, [r2, #0]
 802907c:	9903      	ldr	r1, [sp, #12]
 802907e:	eb03 73d3 	add.w	r3, r3, r3, lsr #31
 8029082:	1a52      	subs	r2, r2, r1
 8029084:	eb04 0482 	add.w	r4, r4, r2, lsl #2
 8029088:	9a02      	ldr	r2, [sp, #8]
 802908a:	eb02 0363 	add.w	r3, r2, r3, asr #1
 802908e:	9302      	str	r3, [sp, #8]
 8029090:	9b04      	ldr	r3, [sp, #16]
 8029092:	42a3      	cmp	r3, r4
 8029094:	f63f af44 	bhi.w	8028f20 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0xcc>
 8029098:	4b23      	ldr	r3, [pc, #140]	@ (8029128 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x2d4>)
 802909a:	6818      	ldr	r0, [r3, #0]
 802909c:	6803      	ldr	r3, [r0, #0]
 802909e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80290a0:	4798      	blx	r3
 80290a2:	b00f      	add	sp, #60	@ 0x3c
 80290a4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80290a8:	5cbb      	ldrb	r3, [r7, r2]
 80290aa:	9a00      	ldr	r2, [sp, #0]
 80290ac:	7888      	ldrb	r0, [r1, #2]
 80290ae:	4313      	orrs	r3, r2
 80290b0:	784a      	ldrb	r2, [r1, #1]
 80290b2:	ea43 4300 	orr.w	r3, r3, r0, lsl #16
 80290b6:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 80290ba:	f846 3c04 	str.w	r3, [r6, #-4]
 80290be:	3608      	adds	r6, #8
 80290c0:	45b6      	cmp	lr, r6
 80290c2:	f47f af44 	bne.w	8028f4e <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0xfa>
 80290c6:	e7c5      	b.n	8029054 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x200>
 80290c8:	9900      	ldr	r1, [sp, #0]
 80290ca:	430a      	orrs	r2, r1
 80290cc:	ea42 4303 	orr.w	r3, r2, r3, lsl #16
 80290d0:	ea43 2309 	orr.w	r3, r3, r9, lsl #8
 80290d4:	e777      	b.n	8028fc6 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x172>
 80290d6:	9b01      	ldr	r3, [sp, #4]
 80290d8:	4621      	mov	r1, r4
 80290da:	7818      	ldrb	r0, [r3, #0]
 80290dc:	4642      	mov	r2, r8
 80290de:	0900      	lsrs	r0, r0, #4
 80290e0:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 80290e4:	4438      	add	r0, r7
 80290e6:	f7fb f86d 	bl	80241c4 <_ZNK8touchgfx8LCDGPU2D22blendPixelRGB888_32BPPEPKhPmh.constprop.19>
 80290ea:	4b10      	ldr	r3, [pc, #64]	@ (802912c <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x2d8>)
 80290ec:	9903      	ldr	r1, [sp, #12]
 80290ee:	881a      	ldrh	r2, [r3, #0]
 80290f0:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 80290f4:	1a52      	subs	r2, r2, r1
 80290f6:	eb04 0482 	add.w	r4, r4, r2, lsl #2
 80290fa:	9a06      	ldr	r2, [sp, #24]
 80290fc:	3404      	adds	r4, #4
 80290fe:	4413      	add	r3, r2
 8029100:	eb03 73d3 	add.w	r3, r3, r3, lsr #31
 8029104:	e7c0      	b.n	8029088 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x234>
 8029106:	9d02      	ldr	r5, [sp, #8]
 8029108:	4621      	mov	r1, r4
 802910a:	7828      	ldrb	r0, [r5, #0]
 802910c:	4642      	mov	r2, r8
 802910e:	f000 000f 	and.w	r0, r0, #15
 8029112:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8029116:	4438      	add	r0, r7
 8029118:	f7fb f854 	bl	80241c4 <_ZNK8touchgfx8LCDGPU2D22blendPixelRGB888_32BPPEPKhPmh.constprop.19>
 802911c:	1c6b      	adds	r3, r5, #1
 802911e:	9301      	str	r3, [sp, #4]
 8029120:	3404      	adds	r4, #4
 8029122:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8029124:	e703      	b.n	8028f2e <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0xda>
 8029126:	bf00      	nop
 8029128:	200830a4 	.word	0x200830a4
 802912c:	2008309e 	.word	0x2008309e
 8029130:	4615      	mov	r5, r2
 8029132:	9a04      	ldr	r2, [sp, #16]
 8029134:	4295      	cmp	r5, r2
 8029136:	d2af      	bcs.n	8029098 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x244>
 8029138:	9b03      	ldr	r3, [sp, #12]
 802913a:	f8dd 9008 	ldr.w	r9, [sp, #8]
 802913e:	469a      	mov	sl, r3
 8029140:	f103 38ff 	add.w	r8, r3, #4294967295
 8029144:	9b05      	ldr	r3, [sp, #20]
 8029146:	2b00      	cmp	r3, #0
 8029148:	d07d      	beq.n	8029246 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x3f2>
 802914a:	4646      	mov	r6, r8
 802914c:	f899 3000 	ldrb.w	r3, [r9]
 8029150:	f109 0e01 	add.w	lr, r9, #1
 8029154:	f003 030f 	and.w	r3, r3, #15
 8029158:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 802915c:	18fa      	adds	r2, r7, r3
 802915e:	5cfb      	ldrb	r3, [r7, r3]
 8029160:	7891      	ldrb	r1, [r2, #2]
 8029162:	f043 437f 	orr.w	r3, r3, #4278190080	@ 0xff000000
 8029166:	7852      	ldrb	r2, [r2, #1]
 8029168:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 802916c:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8029170:	f845 3b04 	str.w	r3, [r5], #4
 8029174:	2e01      	cmp	r6, #1
 8029176:	dd3e      	ble.n	80291f6 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x3a2>
 8029178:	3e02      	subs	r6, #2
 802917a:	ea4f 0c56 	mov.w	ip, r6, lsr #1
 802917e:	f105 0410 	add.w	r4, r5, #16
 8029182:	eb04 04cc 	add.w	r4, r4, ip, lsl #3
 8029186:	f105 0108 	add.w	r1, r5, #8
 802918a:	f10e 30ff 	add.w	r0, lr, #4294967295
 802918e:	f810 3f01 	ldrb.w	r3, [r0, #1]!
 8029192:	3108      	adds	r1, #8
 8029194:	091b      	lsrs	r3, r3, #4
 8029196:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 802919a:	5cfa      	ldrb	r2, [r7, r3]
 802919c:	eb07 0b03 	add.w	fp, r7, r3
 80291a0:	f89b 3002 	ldrb.w	r3, [fp, #2]
 80291a4:	f042 427f 	orr.w	r2, r2, #4278190080	@ 0xff000000
 80291a8:	f89b b001 	ldrb.w	fp, [fp, #1]
 80291ac:	ea42 4303 	orr.w	r3, r2, r3, lsl #16
 80291b0:	ea43 230b 	orr.w	r3, r3, fp, lsl #8
 80291b4:	f841 3c10 	str.w	r3, [r1, #-16]
 80291b8:	7803      	ldrb	r3, [r0, #0]
 80291ba:	f003 030f 	and.w	r3, r3, #15
 80291be:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 80291c2:	5cfa      	ldrb	r2, [r7, r3]
 80291c4:	eb07 0b03 	add.w	fp, r7, r3
 80291c8:	f89b 3002 	ldrb.w	r3, [fp, #2]
 80291cc:	f042 427f 	orr.w	r2, r2, #4278190080	@ 0xff000000
 80291d0:	f89b b001 	ldrb.w	fp, [fp, #1]
 80291d4:	ea42 4303 	orr.w	r3, r2, r3, lsl #16
 80291d8:	ea43 230b 	orr.w	r3, r3, fp, lsl #8
 80291dc:	f841 3c0c 	str.w	r3, [r1, #-12]
 80291e0:	428c      	cmp	r4, r1
 80291e2:	d1d4      	bne.n	802918e <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x33a>
 80291e4:	f10c 0301 	add.w	r3, ip, #1
 80291e8:	ebcc 7ccc 	rsb	ip, ip, ip, lsl #31
 80291ec:	449e      	add	lr, r3
 80291ee:	eb05 05c3 	add.w	r5, r5, r3, lsl #3
 80291f2:	eb06 064c 	add.w	r6, r6, ip, lsl #1
 80291f6:	2e01      	cmp	r6, #1
 80291f8:	d128      	bne.n	802924c <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x3f8>
 80291fa:	f89e 3000 	ldrb.w	r3, [lr]
 80291fe:	091b      	lsrs	r3, r3, #4
 8029200:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8029204:	18fa      	adds	r2, r7, r3
 8029206:	5cfb      	ldrb	r3, [r7, r3]
 8029208:	7891      	ldrb	r1, [r2, #2]
 802920a:	f043 437f 	orr.w	r3, r3, #4278190080	@ 0xff000000
 802920e:	7852      	ldrb	r2, [r2, #1]
 8029210:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8029214:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8029218:	602b      	str	r3, [r5, #0]
 802921a:	4b19      	ldr	r3, [pc, #100]	@ (8029280 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x42c>)
 802921c:	881a      	ldrh	r2, [r3, #0]
 802921e:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 8029222:	eba2 020a 	sub.w	r2, r2, sl
 8029226:	eb05 0582 	add.w	r5, r5, r2, lsl #2
 802922a:	9a06      	ldr	r2, [sp, #24]
 802922c:	3504      	adds	r5, #4
 802922e:	4413      	add	r3, r2
 8029230:	eb03 73d3 	add.w	r3, r3, r3, lsr #31
 8029234:	eb09 0963 	add.w	r9, r9, r3, asr #1
 8029238:	9b04      	ldr	r3, [sp, #16]
 802923a:	42ab      	cmp	r3, r5
 802923c:	f67f af2c 	bls.w	8029098 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x244>
 8029240:	9b05      	ldr	r3, [sp, #20]
 8029242:	2b00      	cmp	r3, #0
 8029244:	d181      	bne.n	802914a <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x2f6>
 8029246:	46ce      	mov	lr, r9
 8029248:	4656      	mov	r6, sl
 802924a:	e793      	b.n	8029174 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x320>
 802924c:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 8029250:	4a0b      	ldr	r2, [pc, #44]	@ (8029280 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x42c>)
 8029252:	9906      	ldr	r1, [sp, #24]
 8029254:	8812      	ldrh	r2, [r2, #0]
 8029256:	440b      	add	r3, r1
 8029258:	eb03 73d3 	add.w	r3, r3, r3, lsr #31
 802925c:	eba2 020a 	sub.w	r2, r2, sl
 8029260:	eb09 0963 	add.w	r9, r9, r3, asr #1
 8029264:	9b04      	ldr	r3, [sp, #16]
 8029266:	eb05 0582 	add.w	r5, r5, r2, lsl #2
 802926a:	42ab      	cmp	r3, r5
 802926c:	f63f af6a 	bhi.w	8029144 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x2f0>
 8029270:	e712      	b.n	8029098 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x244>
 8029272:	4b04      	ldr	r3, [pc, #16]	@ (8029284 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x430>)
 8029274:	4a04      	ldr	r2, [pc, #16]	@ (8029288 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x434>)
 8029276:	f640 612c 	movw	r1, #3628	@ 0xe2c
 802927a:	4804      	ldr	r0, [pc, #16]	@ (802928c <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x438>)
 802927c:	f009 fa7c 	bl	8032778 <__assert_func>
 8029280:	2008309e 	.word	0x2008309e
 8029284:	08036624 	.word	0x08036624
 8029288:	08037614 	.word	0x08037614
 802928c:	08036560 	.word	0x08036560

08029290 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h>:
 8029290:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8029294:	7814      	ldrb	r4, [r2, #0]
 8029296:	b091      	sub	sp, #68	@ 0x44
 8029298:	2c01      	cmp	r4, #1
 802929a:	461d      	mov	r5, r3
 802929c:	9208      	str	r2, [sp, #32]
 802929e:	9102      	str	r1, [sp, #8]
 80292a0:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
 80292a2:	f89d a06c 	ldrb.w	sl, [sp, #108]	@ 0x6c
 80292a6:	f040 814b 	bne.w	8029540 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x2b0>
 80292aa:	6828      	ldr	r0, [r5, #0]
 80292ac:	6869      	ldr	r1, [r5, #4]
 80292ae:	aa0c      	add	r2, sp, #48	@ 0x30
 80292b0:	c203      	stmia	r2!, {r0, r1}
 80292b2:	6818      	ldr	r0, [r3, #0]
 80292b4:	6859      	ldr	r1, [r3, #4]
 80292b6:	aa0e      	add	r2, sp, #56	@ 0x38
 80292b8:	c203      	stmia	r2!, {r0, r1}
 80292ba:	a80c      	add	r0, sp, #48	@ 0x30
 80292bc:	f7e3 fe80 	bl	800cfc0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80292c0:	4629      	mov	r1, r5
 80292c2:	a80e      	add	r0, sp, #56	@ 0x38
 80292c4:	f7e3 fea4 	bl	800d010 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80292c8:	f9bd 2034 	ldrsh.w	r2, [sp, #52]	@ 0x34
 80292cc:	f5b2 6f80 	cmp.w	r2, #1024	@ 0x400
 80292d0:	f340 8130 	ble.w	8029534 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x2a4>
 80292d4:	4623      	mov	r3, r4
 80292d6:	b291      	uxth	r1, r2
 80292d8:	f9bd 203a 	ldrsh.w	r2, [sp, #58]	@ 0x3a
 80292dc:	f8bd 0038 	ldrh.w	r0, [sp, #56]	@ 0x38
 80292e0:	fb92 f5f3 	sdiv	r5, r2, r3
 80292e4:	b2ae      	uxth	r6, r5
 80292e6:	fb03 2416 	mls	r4, r3, r6, r2
 80292ea:	fb14 0101 	smlabb	r1, r4, r1, r0
 80292ee:	f9bd 4036 	ldrsh.w	r4, [sp, #54]	@ 0x36
 80292f2:	b289      	uxth	r1, r1
 80292f4:	441c      	add	r4, r3
 80292f6:	3c01      	subs	r4, #1
 80292f8:	9100      	str	r1, [sp, #0]
 80292fa:	fb94 f4f3 	sdiv	r4, r4, r3
 80292fe:	b136      	cbz	r6, 802930e <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x7e>
 8029300:	9b08      	ldr	r3, [sp, #32]
 8029302:	9902      	ldr	r1, [sp, #8]
 8029304:	f853 3026 	ldr.w	r3, [r3, r6, lsl #2]
 8029308:	ba1b      	rev	r3, r3
 802930a:	4419      	add	r1, r3
 802930c:	9102      	str	r1, [sp, #8]
 802930e:	f8bd 1032 	ldrh.w	r1, [sp, #50]	@ 0x32
 8029312:	f8bd 3030 	ldrh.w	r3, [sp, #48]	@ 0x30
 8029316:	440a      	add	r2, r1
 8029318:	498d      	ldr	r1, [pc, #564]	@ (8029550 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x2c0>)
 802931a:	4403      	add	r3, r0
 802931c:	6808      	ldr	r0, [r1, #0]
 802931e:	f8ad 203a 	strh.w	r2, [sp, #58]	@ 0x3a
 8029322:	f8ad 3038 	strh.w	r3, [sp, #56]	@ 0x38
 8029326:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	@ 0x3c
 802932a:	6803      	ldr	r3, [r0, #0]
 802932c:	960a      	str	r6, [sp, #40]	@ 0x28
 802932e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8029330:	f9bd 503e 	ldrsh.w	r5, [sp, #62]	@ 0x3e
 8029334:	4798      	blx	r3
 8029336:	9b00      	ldr	r3, [sp, #0]
 8029338:	4986      	ldr	r1, [pc, #536]	@ (8029554 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x2c4>)
 802933a:	2b00      	cmp	r3, #0
 802933c:	bf0c      	ite	eq
 802933e:	4633      	moveq	r3, r6
 8029340:	2300      	movne	r3, #0
 8029342:	8809      	ldrh	r1, [r1, #0]
 8029344:	f9bd 203a 	ldrsh.w	r2, [sp, #58]	@ 0x3a
 8029348:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	@ 0x38
 802934c:	fb05 f501 	mul.w	r5, r5, r1
 8029350:	fb01 6202 	mla	r2, r1, r2, r6
 8029354:	b2a4      	uxth	r4, r4
 8029356:	eb00 0882 	add.w	r8, r0, r2, lsl #2
 802935a:	eb08 0285 	add.w	r2, r8, r5, lsl #2
 802935e:	00a4      	lsls	r4, r4, #2
 8029360:	1d21      	adds	r1, r4, #4
 8029362:	4590      	cmp	r8, r2
 8029364:	9203      	str	r2, [sp, #12]
 8029366:	9109      	str	r1, [sp, #36]	@ 0x24
 8029368:	fa1f f983 	uxth.w	r9, r3
 802936c:	d227      	bcs.n	80293be <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x12e>
 802936e:	2300      	movs	r3, #0
 8029370:	469b      	mov	fp, r3
 8029372:	ea4f 620a 	mov.w	r2, sl, lsl #24
 8029376:	9304      	str	r3, [sp, #16]
 8029378:	9205      	str	r2, [sp, #20]
 802937a:	f1bb 0f00 	cmp.w	fp, #0
 802937e:	d10f      	bne.n	80293a0 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x110>
 8029380:	9902      	ldr	r1, [sp, #8]
 8029382:	780b      	ldrb	r3, [r1, #0]
 8029384:	ea4f 1b93 	mov.w	fp, r3, lsr #6
 8029388:	f10b 32ff 	add.w	r2, fp, #4294967295
 802938c:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 8029390:	2a02      	cmp	r2, #2
 8029392:	9304      	str	r3, [sp, #16]
 8029394:	f200 80c8 	bhi.w	8029528 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x298>
 8029398:	3101      	adds	r1, #1
 802939a:	9102      	str	r1, [sp, #8]
 802939c:	fa1f fb8b 	uxth.w	fp, fp
 80293a0:	9b00      	ldr	r3, [sp, #0]
 80293a2:	b1a3      	cbz	r3, 80293ce <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x13e>
 80293a4:	459b      	cmp	fp, r3
 80293a6:	f080 80b6 	bcs.w	8029516 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x286>
 80293aa:	eba3 0b0b 	sub.w	fp, r3, fp
 80293ae:	fa1f f38b 	uxth.w	r3, fp
 80293b2:	f04f 0b00 	mov.w	fp, #0
 80293b6:	9300      	str	r3, [sp, #0]
 80293b8:	9b03      	ldr	r3, [sp, #12]
 80293ba:	4543      	cmp	r3, r8
 80293bc:	d8dd      	bhi.n	802937a <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0xea>
 80293be:	4b64      	ldr	r3, [pc, #400]	@ (8029550 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x2c0>)
 80293c0:	6818      	ldr	r0, [r3, #0]
 80293c2:	6803      	ldr	r3, [r0, #0]
 80293c4:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80293c6:	4798      	blx	r3
 80293c8:	b011      	add	sp, #68	@ 0x44
 80293ca:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80293ce:	2303      	movs	r3, #3
 80293d0:	4619      	mov	r1, r3
 80293d2:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 80293d4:	9b04      	ldr	r3, [sp, #16]
 80293d6:	45cb      	cmp	fp, r9
 80293d8:	fb11 2c03 	smlabb	ip, r1, r3, r2
 80293dc:	9b08      	ldr	r3, [sp, #32]
 80293de:	449c      	add	ip, r3
 80293e0:	d377      	bcc.n	80294d2 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x242>
 80293e2:	ebab 0309 	sub.w	r3, fp, r9
 80293e6:	9a00      	ldr	r2, [sp, #0]
 80293e8:	b29b      	uxth	r3, r3
 80293ea:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 80293ee:	9306      	str	r3, [sp, #24]
 80293f0:	9207      	str	r2, [sp, #28]
 80293f2:	464b      	mov	r3, r9
 80293f4:	d077      	beq.n	80294e6 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x256>
 80293f6:	b303      	cbz	r3, 802943a <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x1aa>
 80293f8:	3b01      	subs	r3, #1
 80293fa:	b29b      	uxth	r3, r3
 80293fc:	930b      	str	r3, [sp, #44]	@ 0x2c
 80293fe:	eb08 0383 	add.w	r3, r8, r3, lsl #2
 8029402:	9301      	str	r3, [sp, #4]
 8029404:	f1a8 0e04 	sub.w	lr, r8, #4
 8029408:	f85e 3f04 	ldr.w	r3, [lr, #4]!
 802940c:	f89c 4000 	ldrb.w	r4, [ip]
 8029410:	0e18      	lsrs	r0, r3, #24
 8029412:	f89c 6001 	ldrb.w	r6, [ip, #1]
 8029416:	f89c 1002 	ldrb.w	r1, [ip, #2]
 802941a:	d126      	bne.n	802946a <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x1da>
 802941c:	9b05      	ldr	r3, [sp, #20]
 802941e:	431c      	orrs	r4, r3
 8029420:	9b01      	ldr	r3, [sp, #4]
 8029422:	ea44 4401 	orr.w	r4, r4, r1, lsl #16
 8029426:	ea44 2606 	orr.w	r6, r4, r6, lsl #8
 802942a:	459e      	cmp	lr, r3
 802942c:	f8ce 6000 	str.w	r6, [lr]
 8029430:	d1ea      	bne.n	8029408 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x178>
 8029432:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8029434:	3301      	adds	r3, #1
 8029436:	eb08 0883 	add.w	r8, r8, r3, lsl #2
 802943a:	45cb      	cmp	fp, r9
 802943c:	d346      	bcc.n	80294cc <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x23c>
 802943e:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8029440:	f8bd 2034 	ldrh.w	r2, [sp, #52]	@ 0x34
 8029444:	4b43      	ldr	r3, [pc, #268]	@ (8029554 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x2c4>)
 8029446:	fa1f f981 	uxth.w	r9, r1
 802944a:	eba2 0209 	sub.w	r2, r2, r9
 802944e:	881b      	ldrh	r3, [r3, #0]
 8029450:	b292      	uxth	r2, r2
 8029452:	2a00      	cmp	r2, #0
 8029454:	eba3 0301 	sub.w	r3, r3, r1
 8029458:	f8dd b018 	ldr.w	fp, [sp, #24]
 802945c:	bf18      	it	ne
 802945e:	f04f 0900 	movne.w	r9, #0
 8029462:	9200      	str	r2, [sp, #0]
 8029464:	eb08 0883 	add.w	r8, r8, r3, lsl #2
 8029468:	e7a6      	b.n	80293b8 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x128>
 802946a:	fb0a f200 	mul.w	r2, sl, r0
 802946e:	fb1a f101 	smulbb	r1, sl, r1
 8029472:	1c55      	adds	r5, r2, #1
 8029474:	eb05 2522 	add.w	r5, r5, r2, asr #8
 8029478:	fb1a f404 	smulbb	r4, sl, r4
 802947c:	122d      	asrs	r5, r5, #8
 802947e:	fb1a f606 	smulbb	r6, sl, r6
 8029482:	1b47      	subs	r7, r0, r5
 8029484:	f3c3 4207 	ubfx	r2, r3, #16, #8
 8029488:	fb07 1102 	mla	r1, r7, r2, r1
 802948c:	b2da      	uxtb	r2, r3
 802948e:	fb07 4402 	mla	r4, r7, r2, r4
 8029492:	f3c3 2207 	ubfx	r2, r3, #8, #8
 8029496:	4450      	add	r0, sl
 8029498:	fb07 6202 	mla	r2, r7, r2, r6
 802949c:	1b45      	subs	r5, r0, r5
 802949e:	b2ed      	uxtb	r5, r5
 80294a0:	fbb1 f3f5 	udiv	r3, r1, r5
 80294a4:	fbb4 f4f5 	udiv	r4, r4, r5
 80294a8:	fbb2 f2f5 	udiv	r2, r2, r5
 80294ac:	041b      	lsls	r3, r3, #16
 80294ae:	b2e4      	uxtb	r4, r4
 80294b0:	f403 037f 	and.w	r3, r3, #16711680	@ 0xff0000
 80294b4:	ea44 6505 	orr.w	r5, r4, r5, lsl #24
 80294b8:	0212      	lsls	r2, r2, #8
 80294ba:	432b      	orrs	r3, r5
 80294bc:	b292      	uxth	r2, r2
 80294be:	4313      	orrs	r3, r2
 80294c0:	f8ce 3000 	str.w	r3, [lr]
 80294c4:	9b01      	ldr	r3, [sp, #4]
 80294c6:	459e      	cmp	lr, r3
 80294c8:	d19e      	bne.n	8029408 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x178>
 80294ca:	e7b2      	b.n	8029432 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x1a2>
 80294cc:	e9dd b906 	ldrd	fp, r9, [sp, #24]
 80294d0:	e772      	b.n	80293b8 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x128>
 80294d2:	9a00      	ldr	r2, [sp, #0]
 80294d4:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 80294d8:	9206      	str	r2, [sp, #24]
 80294da:	eba9 020b 	sub.w	r2, r9, fp
 80294de:	b292      	uxth	r2, r2
 80294e0:	465b      	mov	r3, fp
 80294e2:	9207      	str	r2, [sp, #28]
 80294e4:	d187      	bne.n	80293f6 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x166>
 80294e6:	2b00      	cmp	r3, #0
 80294e8:	d0a7      	beq.n	802943a <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x1aa>
 80294ea:	1e58      	subs	r0, r3, #1
 80294ec:	b280      	uxth	r0, r0
 80294ee:	3001      	adds	r0, #1
 80294f0:	eb08 0080 	add.w	r0, r8, r0, lsl #2
 80294f4:	f89c 3000 	ldrb.w	r3, [ip]
 80294f8:	f89c 1002 	ldrb.w	r1, [ip, #2]
 80294fc:	f89c 2001 	ldrb.w	r2, [ip, #1]
 8029500:	f043 437f 	orr.w	r3, r3, #4278190080	@ 0xff000000
 8029504:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8029508:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 802950c:	f848 3b04 	str.w	r3, [r8], #4
 8029510:	4540      	cmp	r0, r8
 8029512:	d1ef      	bne.n	80294f4 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x264>
 8029514:	e791      	b.n	802943a <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x1aa>
 8029516:	ebab 0b03 	sub.w	fp, fp, r3
 802951a:	2300      	movs	r3, #0
 802951c:	fa1f fb8b 	uxth.w	fp, fp
 8029520:	f8bd 9028 	ldrh.w	r9, [sp, #40]	@ 0x28
 8029524:	9300      	str	r3, [sp, #0]
 8029526:	e747      	b.n	80293b8 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x128>
 8029528:	460b      	mov	r3, r1
 802952a:	3302      	adds	r3, #2
 802952c:	f891 b001 	ldrb.w	fp, [r1, #1]
 8029530:	9302      	str	r3, [sp, #8]
 8029532:	e735      	b.n	80293a0 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x110>
 8029534:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 8029538:	b291      	uxth	r1, r2
 802953a:	fb94 f3f1 	sdiv	r3, r4, r1
 802953e:	e6cb      	b.n	80292d8 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x48>
 8029540:	4b05      	ldr	r3, [pc, #20]	@ (8029558 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x2c8>)
 8029542:	4a06      	ldr	r2, [pc, #24]	@ (802955c <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x2cc>)
 8029544:	f640 61a3 	movw	r1, #3747	@ 0xea3
 8029548:	4805      	ldr	r0, [pc, #20]	@ (8029560 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x2d0>)
 802954a:	f009 f915 	bl	8032778 <__assert_func>
 802954e:	bf00      	nop
 8029550:	200830a4 	.word	0x200830a4
 8029554:	2008309e 	.word	0x2008309e
 8029558:	08036624 	.word	0x08036624
 802955c:	080377b8 	.word	0x080377b8
 8029560:	08036560 	.word	0x08036560

08029564 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h>:
 8029564:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8029568:	7814      	ldrb	r4, [r2, #0]
 802956a:	b09f      	sub	sp, #124	@ 0x7c
 802956c:	2c01      	cmp	r4, #1
 802956e:	461d      	mov	r5, r3
 8029570:	9214      	str	r2, [sp, #80]	@ 0x50
 8029572:	9117      	str	r1, [sp, #92]	@ 0x5c
 8029574:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8029576:	f89d a0a4 	ldrb.w	sl, [sp, #164]	@ 0xa4
 802957a:	f040 8232 	bne.w	80299e2 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x47e>
 802957e:	6869      	ldr	r1, [r5, #4]
 8029580:	4683      	mov	fp, r0
 8029582:	6828      	ldr	r0, [r5, #0]
 8029584:	aa1a      	add	r2, sp, #104	@ 0x68
 8029586:	c203      	stmia	r2!, {r0, r1}
 8029588:	6818      	ldr	r0, [r3, #0]
 802958a:	6859      	ldr	r1, [r3, #4]
 802958c:	aa1c      	add	r2, sp, #112	@ 0x70
 802958e:	c203      	stmia	r2!, {r0, r1}
 8029590:	a81a      	add	r0, sp, #104	@ 0x68
 8029592:	f7e3 fd15 	bl	800cfc0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8029596:	4629      	mov	r1, r5
 8029598:	a81c      	add	r0, sp, #112	@ 0x70
 802959a:	f7e3 fd39 	bl	800d010 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 802959e:	f9bd 206c 	ldrsh.w	r2, [sp, #108]	@ 0x6c
 80295a2:	f5b2 6f80 	cmp.w	r2, #1024	@ 0x400
 80295a6:	f340 8214 	ble.w	80299d2 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x46e>
 80295aa:	4623      	mov	r3, r4
 80295ac:	b292      	uxth	r2, r2
 80295ae:	9418      	str	r4, [sp, #96]	@ 0x60
 80295b0:	f9bd 0072 	ldrsh.w	r0, [sp, #114]	@ 0x72
 80295b4:	f9bd 106e 	ldrsh.w	r1, [sp, #110]	@ 0x6e
 80295b8:	fb90 f4f3 	sdiv	r4, r0, r3
 80295bc:	4419      	add	r1, r3
 80295be:	3901      	subs	r1, #1
 80295c0:	fb91 f1f3 	sdiv	r1, r1, r3
 80295c4:	b2a4      	uxth	r4, r4
 80295c6:	fb03 0314 	mls	r3, r3, r4, r0
 80295ca:	9416      	str	r4, [sp, #88]	@ 0x58
 80295cc:	f8bd 4070 	ldrh.w	r4, [sp, #112]	@ 0x70
 80295d0:	f8bd 6068 	ldrh.w	r6, [sp, #104]	@ 0x68
 80295d4:	fb13 4202 	smlabb	r2, r3, r2, r4
 80295d8:	f8bd 506a 	ldrh.w	r5, [sp, #106]	@ 0x6a
 80295dc:	4bae      	ldr	r3, [pc, #696]	@ (8029898 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x334>)
 80295de:	4434      	add	r4, r6
 80295e0:	4405      	add	r5, r0
 80295e2:	6818      	ldr	r0, [r3, #0]
 80295e4:	f8ad 4070 	strh.w	r4, [sp, #112]	@ 0x70
 80295e8:	f8ad 5072 	strh.w	r5, [sp, #114]	@ 0x72
 80295ec:	f9bd 7074 	ldrsh.w	r7, [sp, #116]	@ 0x74
 80295f0:	6803      	ldr	r3, [r0, #0]
 80295f2:	b296      	uxth	r6, r2
 80295f4:	3101      	adds	r1, #1
 80295f6:	9602      	str	r6, [sp, #8]
 80295f8:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80295fa:	970d      	str	r7, [sp, #52]	@ 0x34
 80295fc:	b28c      	uxth	r4, r1
 80295fe:	f9bd 5076 	ldrsh.w	r5, [sp, #118]	@ 0x76
 8029602:	4798      	blx	r3
 8029604:	2300      	movs	r3, #0
 8029606:	2e00      	cmp	r6, #0
 8029608:	bf0c      	ite	eq
 802960a:	463a      	moveq	r2, r7
 802960c:	2200      	movne	r2, #0
 802960e:	49a3      	ldr	r1, [pc, #652]	@ (802989c <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x338>)
 8029610:	9315      	str	r3, [sp, #84]	@ 0x54
 8029612:	8809      	ldrh	r1, [r1, #0]
 8029614:	f9bd 3072 	ldrsh.w	r3, [sp, #114]	@ 0x72
 8029618:	f9bd 6070 	ldrsh.w	r6, [sp, #112]	@ 0x70
 802961c:	fb05 f501 	mul.w	r5, r5, r1
 8029620:	fb01 6303 	mla	r3, r1, r3, r6
 8029624:	eb00 0383 	add.w	r3, r0, r3, lsl #2
 8029628:	9301      	str	r3, [sp, #4]
 802962a:	eb03 0385 	add.w	r3, r3, r5, lsl #2
 802962e:	9308      	str	r3, [sp, #32]
 8029630:	b293      	uxth	r3, r2
 8029632:	9303      	str	r3, [sp, #12]
 8029634:	ea4f 630a 	mov.w	r3, sl, lsl #24
 8029638:	930a      	str	r3, [sp, #40]	@ 0x28
 802963a:	f10b 030e 	add.w	r3, fp, #14
 802963e:	9319      	str	r3, [sp, #100]	@ 0x64
 8029640:	4653      	mov	r3, sl
 8029642:	9914      	ldr	r1, [sp, #80]	@ 0x50
 8029644:	46da      	mov	sl, fp
 8029646:	eb01 0484 	add.w	r4, r1, r4, lsl #2
 802964a:	f104 0904 	add.w	r9, r4, #4
 802964e:	46cb      	mov	fp, r9
 8029650:	4699      	mov	r9, r3
 8029652:	9b01      	ldr	r3, [sp, #4]
 8029654:	9a08      	ldr	r2, [sp, #32]
 8029656:	4293      	cmp	r3, r2
 8029658:	f080 8116 	bcs.w	8029888 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x324>
 802965c:	2601      	movs	r6, #1
 802965e:	2700      	movs	r7, #0
 8029660:	9b02      	ldr	r3, [sp, #8]
 8029662:	f8bd 106c 	ldrh.w	r1, [sp, #108]	@ 0x6c
 8029666:	46bc      	mov	ip, r7
 8029668:	fbb3 f1f1 	udiv	r1, r3, r1
 802966c:	e9dd 3215 	ldrd	r3, r2, [sp, #84]	@ 0x54
 8029670:	fa12 f283 	uxtah	r2, r2, r3
 8029674:	0092      	lsls	r2, r2, #2
 8029676:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 8029678:	3204      	adds	r2, #4
 802967a:	1898      	adds	r0, r3, r2
 802967c:	7883      	ldrb	r3, [r0, #2]
 802967e:	7845      	ldrb	r5, [r0, #1]
 8029680:	021b      	lsls	r3, r3, #8
 8029682:	78c0      	ldrb	r0, [r0, #3]
 8029684:	ea43 4405 	orr.w	r4, r3, r5, lsl #16
 8029688:	9d17      	ldr	r5, [sp, #92]	@ 0x5c
 802968a:	4304      	orrs	r4, r0
 802968c:	4628      	mov	r0, r5
 802968e:	46b0      	mov	r8, r6
 8029690:	4420      	add	r0, r4
 8029692:	7843      	ldrb	r3, [r0, #1]
 8029694:	5d2c      	ldrb	r4, [r5, r4]
 8029696:	021b      	lsls	r3, r3, #8
 8029698:	f403 73ff 	and.w	r3, r3, #510	@ 0x1fe
 802969c:	431c      	orrs	r4, r3
 802969e:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 80296a0:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 80296a2:	5caa      	ldrb	r2, [r5, r2]
 80296a4:	1a59      	subs	r1, r3, r1
 80296a6:	b2a3      	uxth	r3, r4
 80296a8:	930b      	str	r3, [sp, #44]	@ 0x2c
 80296aa:	1983      	adds	r3, r0, r6
 80296ac:	9306      	str	r3, [sp, #24]
 80296ae:	1993      	adds	r3, r2, r6
 80296b0:	9307      	str	r3, [sp, #28]
 80296b2:	b28b      	uxth	r3, r1
 80296b4:	9710      	str	r7, [sp, #64]	@ 0x40
 80296b6:	960c      	str	r6, [sp, #48]	@ 0x30
 80296b8:	920f      	str	r2, [sp, #60]	@ 0x3c
 80296ba:	f88a 400d 	strb.w	r4, [sl, #13]
 80296be:	9313      	str	r3, [sp, #76]	@ 0x4c
 80296c0:	9605      	str	r6, [sp, #20]
 80296c2:	9b02      	ldr	r3, [sp, #8]
 80296c4:	2b00      	cmp	r3, #0
 80296c6:	d038      	beq.n	802973a <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x1d6>
 80296c8:	4598      	cmp	r8, r3
 80296ca:	f080 813f 	bcs.w	802994c <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x3e8>
 80296ce:	eba3 0808 	sub.w	r8, r3, r8
 80296d2:	fa1f f388 	uxth.w	r3, r8
 80296d6:	9302      	str	r3, [sp, #8]
 80296d8:	9a08      	ldr	r2, [sp, #32]
 80296da:	9b01      	ldr	r3, [sp, #4]
 80296dc:	4293      	cmp	r3, r2
 80296de:	f080 80d3 	bcs.w	8029888 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x324>
 80296e2:	9806      	ldr	r0, [sp, #24]
 80296e4:	9c05      	ldr	r4, [sp, #20]
 80296e6:	7842      	ldrb	r2, [r0, #1]
 80296e8:	f1c4 0107 	rsb	r1, r4, #7
 80296ec:	7803      	ldrb	r3, [r0, #0]
 80296ee:	408a      	lsls	r2, r1
 80296f0:	0052      	lsls	r2, r2, #1
 80296f2:	4123      	asrs	r3, r4
 80296f4:	f402 72ff 	and.w	r2, r2, #510	@ 0x1fe
 80296f8:	1c61      	adds	r1, r4, #1
 80296fa:	b2db      	uxtb	r3, r3
 80296fc:	4313      	orrs	r3, r2
 80296fe:	b2ca      	uxtb	r2, r1
 8029700:	4611      	mov	r1, r2
 8029702:	2908      	cmp	r1, #8
 8029704:	9205      	str	r2, [sp, #20]
 8029706:	b29a      	uxth	r2, r3
 8029708:	f000 812d 	beq.w	8029966 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x402>
 802970c:	3001      	adds	r0, #1
 802970e:	9006      	str	r0, [sp, #24]
 8029710:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 8029712:	4291      	cmp	r1, r2
 8029714:	f0c0 80fa 	bcc.w	802990c <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x3a8>
 8029718:	f04f 0801 	mov.w	r8, #1
 802971c:	b2db      	uxtb	r3, r3
 802971e:	f88a 300d 	strb.w	r3, [sl, #13]
 8029722:	9907      	ldr	r1, [sp, #28]
 8029724:	f5b1 7f00 	cmp.w	r1, #512	@ 0x200
 8029728:	f0c0 8123 	bcc.w	8029972 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x40e>
 802972c:	9b02      	ldr	r3, [sp, #8]
 802972e:	e9cd 280b 	strd	r2, r8, [sp, #44]	@ 0x2c
 8029732:	f04f 0c00 	mov.w	ip, #0
 8029736:	2b00      	cmp	r3, #0
 8029738:	d1c6      	bne.n	80296c8 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x164>
 802973a:	9b03      	ldr	r3, [sp, #12]
 802973c:	4598      	cmp	r8, r3
 802973e:	461a      	mov	r2, r3
 8029740:	f0c0 80ae 	bcc.w	80298a0 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x33c>
 8029744:	eba8 0303 	sub.w	r3, r8, r3
 8029748:	b29b      	uxth	r3, r3
 802974a:	9309      	str	r3, [sp, #36]	@ 0x24
 802974c:	9b02      	ldr	r3, [sp, #8]
 802974e:	9204      	str	r2, [sp, #16]
 8029750:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 8029754:	930e      	str	r3, [sp, #56]	@ 0x38
 8029756:	9b04      	ldr	r3, [sp, #16]
 8029758:	f000 80b0 	beq.w	80298bc <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x358>
 802975c:	b393      	cbz	r3, 80297c4 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x260>
 802975e:	4463      	add	r3, ip
 8029760:	b29b      	uxth	r3, r3
 8029762:	f8cd 8048 	str.w	r8, [sp, #72]	@ 0x48
 8029766:	4698      	mov	r8, r3
 8029768:	9a01      	ldr	r2, [sp, #4]
 802976a:	9311      	str	r3, [sp, #68]	@ 0x44
 802976c:	f1a2 0e04 	sub.w	lr, r2, #4
 8029770:	eb0a 030c 	add.w	r3, sl, ip
 8029774:	7b5a      	ldrb	r2, [r3, #13]
 8029776:	f85e 3f04 	ldr.w	r3, [lr, #4]!
 802977a:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 802977e:	eb0b 0102 	add.w	r1, fp, r2
 8029782:	f10c 0c01 	add.w	ip, ip, #1
 8029786:	f81b 0002 	ldrb.w	r0, [fp, r2]
 802978a:	784d      	ldrb	r5, [r1, #1]
 802978c:	788a      	ldrb	r2, [r1, #2]
 802978e:	0e19      	lsrs	r1, r3, #24
 8029790:	fa1f fc8c 	uxth.w	ip, ip
 8029794:	d13f      	bne.n	8029816 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x2b2>
 8029796:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8029798:	45c4      	cmp	ip, r8
 802979a:	ea40 0003 	orr.w	r0, r0, r3
 802979e:	ea40 4002 	orr.w	r0, r0, r2, lsl #16
 80297a2:	ea40 2505 	orr.w	r5, r0, r5, lsl #8
 80297a6:	f8ce 5000 	str.w	r5, [lr]
 80297aa:	d1e1      	bne.n	8029770 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x20c>
 80297ac:	9b04      	ldr	r3, [sp, #16]
 80297ae:	9a01      	ldr	r2, [sp, #4]
 80297b0:	3b01      	subs	r3, #1
 80297b2:	b29b      	uxth	r3, r3
 80297b4:	3301      	adds	r3, #1
 80297b6:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 80297ba:	f8dd 8048 	ldr.w	r8, [sp, #72]	@ 0x48
 80297be:	f8dd c044 	ldr.w	ip, [sp, #68]	@ 0x44
 80297c2:	9301      	str	r3, [sp, #4]
 80297c4:	9b03      	ldr	r3, [sp, #12]
 80297c6:	4598      	cmp	r8, r3
 80297c8:	d356      	bcc.n	8029878 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x314>
 80297ca:	4b34      	ldr	r3, [pc, #208]	@ (802989c <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x338>)
 80297cc:	990d      	ldr	r1, [sp, #52]	@ 0x34
 80297ce:	881b      	ldrh	r3, [r3, #0]
 80297d0:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 80297d2:	1a5b      	subs	r3, r3, r1
 80297d4:	9901      	ldr	r1, [sp, #4]
 80297d6:	3201      	adds	r2, #1
 80297d8:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 80297dc:	9301      	str	r3, [sp, #4]
 80297de:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 80297e0:	9210      	str	r2, [sp, #64]	@ 0x40
 80297e2:	4293      	cmp	r3, r2
 80297e4:	f000 80e4 	beq.w	80299b0 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x44c>
 80297e8:	f8bd 2034 	ldrh.w	r2, [sp, #52]	@ 0x34
 80297ec:	f8bd 306c 	ldrh.w	r3, [sp, #108]	@ 0x6c
 80297f0:	f8dd 8024 	ldr.w	r8, [sp, #36]	@ 0x24
 80297f4:	1a9b      	subs	r3, r3, r2
 80297f6:	b29b      	uxth	r3, r3
 80297f8:	2b00      	cmp	r3, #0
 80297fa:	bf14      	ite	ne
 80297fc:	2200      	movne	r2, #0
 80297fe:	2300      	moveq	r3, #0
 8029800:	9203      	str	r2, [sp, #12]
 8029802:	9302      	str	r3, [sp, #8]
 8029804:	9b01      	ldr	r3, [sp, #4]
 8029806:	9a08      	ldr	r2, [sp, #32]
 8029808:	4293      	cmp	r3, r2
 802980a:	d23d      	bcs.n	8029888 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x324>
 802980c:	f1b8 0f00 	cmp.w	r8, #0
 8029810:	f47f af57 	bne.w	80296c2 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x15e>
 8029814:	e765      	b.n	80296e2 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x17e>
 8029816:	fb09 f601 	mul.w	r6, r9, r1
 802981a:	fb19 f702 	smulbb	r7, r9, r2
 802981e:	1c74      	adds	r4, r6, #1
 8029820:	eb04 2426 	add.w	r4, r4, r6, asr #8
 8029824:	fb19 f000 	smulbb	r0, r9, r0
 8029828:	1224      	asrs	r4, r4, #8
 802982a:	fb19 f505 	smulbb	r5, r9, r5
 802982e:	1b0e      	subs	r6, r1, r4
 8029830:	f3c3 4207 	ubfx	r2, r3, #16, #8
 8029834:	fb06 7202 	mla	r2, r6, r2, r7
 8029838:	b2df      	uxtb	r7, r3
 802983a:	fb06 0007 	mla	r0, r6, r7, r0
 802983e:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8029842:	fb06 5503 	mla	r5, r6, r3, r5
 8029846:	4449      	add	r1, r9
 8029848:	1b09      	subs	r1, r1, r4
 802984a:	b2c9      	uxtb	r1, r1
 802984c:	fbb2 f2f1 	udiv	r2, r2, r1
 8029850:	fbb0 f0f1 	udiv	r0, r0, r1
 8029854:	fbb5 f5f1 	udiv	r5, r5, r1
 8029858:	0413      	lsls	r3, r2, #16
 802985a:	b2c0      	uxtb	r0, r0
 802985c:	f403 037f 	and.w	r3, r3, #16711680	@ 0xff0000
 8029860:	ea40 6101 	orr.w	r1, r0, r1, lsl #24
 8029864:	022d      	lsls	r5, r5, #8
 8029866:	430b      	orrs	r3, r1
 8029868:	b2ad      	uxth	r5, r5
 802986a:	432b      	orrs	r3, r5
 802986c:	45c4      	cmp	ip, r8
 802986e:	f8ce 3000 	str.w	r3, [lr]
 8029872:	f47f af7d 	bne.w	8029770 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x20c>
 8029876:	e799      	b.n	80297ac <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x248>
 8029878:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 802987a:	9a08      	ldr	r2, [sp, #32]
 802987c:	9303      	str	r3, [sp, #12]
 802987e:	9b01      	ldr	r3, [sp, #4]
 8029880:	f8dd 8024 	ldr.w	r8, [sp, #36]	@ 0x24
 8029884:	4293      	cmp	r3, r2
 8029886:	d3c1      	bcc.n	802980c <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x2a8>
 8029888:	4b03      	ldr	r3, [pc, #12]	@ (8029898 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x334>)
 802988a:	6818      	ldr	r0, [r3, #0]
 802988c:	6803      	ldr	r3, [r0, #0]
 802988e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8029890:	4798      	blx	r3
 8029892:	b01f      	add	sp, #124	@ 0x7c
 8029894:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8029898:	200830a4 	.word	0x200830a4
 802989c:	2008309e 	.word	0x2008309e
 80298a0:	9b02      	ldr	r3, [sp, #8]
 80298a2:	f8cd 8010 	str.w	r8, [sp, #16]
 80298a6:	9309      	str	r3, [sp, #36]	@ 0x24
 80298a8:	9b03      	ldr	r3, [sp, #12]
 80298aa:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 80298ae:	eba3 0308 	sub.w	r3, r3, r8
 80298b2:	b29b      	uxth	r3, r3
 80298b4:	930e      	str	r3, [sp, #56]	@ 0x38
 80298b6:	9b04      	ldr	r3, [sp, #16]
 80298b8:	f47f af50 	bne.w	802975c <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x1f8>
 80298bc:	2b00      	cmp	r3, #0
 80298be:	d081      	beq.n	80297c4 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x260>
 80298c0:	eb0c 0003 	add.w	r0, ip, r3
 80298c4:	9901      	ldr	r1, [sp, #4]
 80298c6:	b280      	uxth	r0, r0
 80298c8:	eb0a 030c 	add.w	r3, sl, ip
 80298cc:	7b5b      	ldrb	r3, [r3, #13]
 80298ce:	f10c 0c01 	add.w	ip, ip, #1
 80298d2:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 80298d6:	eb0b 0203 	add.w	r2, fp, r3
 80298da:	f81b 3003 	ldrb.w	r3, [fp, r3]
 80298de:	7894      	ldrb	r4, [r2, #2]
 80298e0:	f043 437f 	orr.w	r3, r3, #4278190080	@ 0xff000000
 80298e4:	7852      	ldrb	r2, [r2, #1]
 80298e6:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
 80298ea:	fa1f fc8c 	uxth.w	ip, ip
 80298ee:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 80298f2:	4584      	cmp	ip, r0
 80298f4:	f841 3b04 	str.w	r3, [r1], #4
 80298f8:	d1e6      	bne.n	80298c8 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x364>
 80298fa:	9b04      	ldr	r3, [sp, #16]
 80298fc:	9a01      	ldr	r2, [sp, #4]
 80298fe:	3b01      	subs	r3, #1
 8029900:	b29b      	uxth	r3, r3
 8029902:	3301      	adds	r3, #1
 8029904:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 8029908:	9301      	str	r3, [sp, #4]
 802990a:	e75b      	b.n	80297c4 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x260>
 802990c:	9b07      	ldr	r3, [sp, #28]
 802990e:	4293      	cmp	r3, r2
 8029910:	d832      	bhi.n	8029978 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x414>
 8029912:	980c      	ldr	r0, [sp, #48]	@ 0x30
 8029914:	f89a 100d 	ldrb.w	r1, [sl, #13]
 8029918:	eb0a 0300 	add.w	r3, sl, r0
 802991c:	7359      	strb	r1, [r3, #13]
 802991e:	f89a 300d 	ldrb.w	r3, [sl, #13]
 8029922:	1c41      	adds	r1, r0, #1
 8029924:	fa1f f881 	uxth.w	r8, r1
 8029928:	9c07      	ldr	r4, [sp, #28]
 802992a:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 802992c:	eb0a 0084 	add.w	r0, sl, r4, lsl #2
 8029930:	3401      	adds	r4, #1
 8029932:	f880 304e 	strb.w	r3, [r0, #78]	@ 0x4e
 8029936:	b2a3      	uxth	r3, r4
 8029938:	f8a0 5050 	strh.w	r5, [r0, #80]	@ 0x50
 802993c:	f880 104f 	strb.w	r1, [r0, #79]	@ 0x4f
 8029940:	9307      	str	r3, [sp, #28]
 8029942:	e9cd 280b 	strd	r2, r8, [sp, #44]	@ 0x2c
 8029946:	f04f 0c00 	mov.w	ip, #0
 802994a:	e6ba      	b.n	80296c2 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x15e>
 802994c:	eba8 0803 	sub.w	r8, r8, r3
 8029950:	449c      	add	ip, r3
 8029952:	f8bd 3034 	ldrh.w	r3, [sp, #52]	@ 0x34
 8029956:	fa1f f888 	uxth.w	r8, r8
 802995a:	9303      	str	r3, [sp, #12]
 802995c:	2300      	movs	r3, #0
 802995e:	fa1f fc8c 	uxth.w	ip, ip
 8029962:	9302      	str	r3, [sp, #8]
 8029964:	e74e      	b.n	8029804 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x2a0>
 8029966:	2100      	movs	r1, #0
 8029968:	9105      	str	r1, [sp, #20]
 802996a:	9906      	ldr	r1, [sp, #24]
 802996c:	3102      	adds	r1, #2
 802996e:	9106      	str	r1, [sp, #24]
 8029970:	e6ce      	b.n	8029710 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x1ac>
 8029972:	990c      	ldr	r1, [sp, #48]	@ 0x30
 8029974:	3101      	adds	r1, #1
 8029976:	e7d7      	b.n	8029928 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x3c4>
 8029978:	eb0a 0382 	add.w	r3, sl, r2, lsl #2
 802997c:	f893 804f 	ldrb.w	r8, [r3, #79]	@ 0x4f
 8029980:	4613      	mov	r3, r2
 8029982:	f1b8 0f01 	cmp.w	r8, #1
 8029986:	d90d      	bls.n	80299a4 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x440>
 8029988:	f108 010d 	add.w	r1, r8, #13
 802998c:	9c19      	ldr	r4, [sp, #100]	@ 0x64
 802998e:	4451      	add	r1, sl
 8029990:	eb0a 0383 	add.w	r3, sl, r3, lsl #2
 8029994:	f893 004e 	ldrb.w	r0, [r3, #78]	@ 0x4e
 8029998:	f801 0d01 	strb.w	r0, [r1, #-1]!
 802999c:	428c      	cmp	r4, r1
 802999e:	f8b3 3050 	ldrh.w	r3, [r3, #80]	@ 0x50
 80299a2:	d1f5      	bne.n	8029990 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x42c>
 80299a4:	b2db      	uxtb	r3, r3
 80299a6:	f88a 300d 	strb.w	r3, [sl, #13]
 80299aa:	fa1f f888 	uxth.w	r8, r8
 80299ae:	e6b8      	b.n	8029722 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x1be>
 80299b0:	f8bd 3070 	ldrh.w	r3, [sp, #112]	@ 0x70
 80299b4:	f8bd 2068 	ldrh.w	r2, [sp, #104]	@ 0x68
 80299b8:	9915      	ldr	r1, [sp, #84]	@ 0x54
 80299ba:	1a9b      	subs	r3, r3, r2
 80299bc:	b29b      	uxth	r3, r3
 80299be:	2b00      	cmp	r3, #0
 80299c0:	9302      	str	r3, [sp, #8]
 80299c2:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80299c4:	bf18      	it	ne
 80299c6:	2300      	movne	r3, #0
 80299c8:	3101      	adds	r1, #1
 80299ca:	b29b      	uxth	r3, r3
 80299cc:	9115      	str	r1, [sp, #84]	@ 0x54
 80299ce:	9303      	str	r3, [sp, #12]
 80299d0:	e63f      	b.n	8029652 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0xee>
 80299d2:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 80299d6:	b292      	uxth	r2, r2
 80299d8:	fb93 f3f2 	sdiv	r3, r3, r2
 80299dc:	b299      	uxth	r1, r3
 80299de:	9118      	str	r1, [sp, #96]	@ 0x60
 80299e0:	e5e6      	b.n	80295b0 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x4c>
 80299e2:	4b03      	ldr	r3, [pc, #12]	@ (80299f0 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x48c>)
 80299e4:	4a03      	ldr	r2, [pc, #12]	@ (80299f4 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x490>)
 80299e6:	f640 7142 	movw	r1, #3906	@ 0xf42
 80299ea:	4803      	ldr	r0, [pc, #12]	@ (80299f8 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x494>)
 80299ec:	f008 fec4 	bl	8032778 <__assert_func>
 80299f0:	08036624 	.word	0x08036624
 80299f4:	08037b14 	.word	0x08037b14
 80299f8:	08036560 	.word	0x08036560

080299fc <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h>:
 80299fc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8029a00:	4617      	mov	r7, r2
 8029a02:	8812      	ldrh	r2, [r2, #0]
 8029a04:	b095      	sub	sp, #84	@ 0x54
 8029a06:	461c      	mov	r4, r3
 8029a08:	f89d 907c 	ldrb.w	r9, [sp, #124]	@ 0x7c
 8029a0c:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 8029a0e:	2a00      	cmp	r2, #0
 8029a10:	f040 8112 	bne.w	8029c38 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x23c>
 8029a14:	4688      	mov	r8, r1
 8029a16:	6820      	ldr	r0, [r4, #0]
 8029a18:	6861      	ldr	r1, [r4, #4]
 8029a1a:	aa10      	add	r2, sp, #64	@ 0x40
 8029a1c:	c203      	stmia	r2!, {r0, r1}
 8029a1e:	6818      	ldr	r0, [r3, #0]
 8029a20:	6859      	ldr	r1, [r3, #4]
 8029a22:	aa12      	add	r2, sp, #72	@ 0x48
 8029a24:	c203      	stmia	r2!, {r0, r1}
 8029a26:	a810      	add	r0, sp, #64	@ 0x40
 8029a28:	f7e3 faca 	bl	800cfc0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8029a2c:	4621      	mov	r1, r4
 8029a2e:	a812      	add	r0, sp, #72	@ 0x48
 8029a30:	f7e3 faee 	bl	800d010 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8029a34:	f9bd 4048 	ldrsh.w	r4, [sp, #72]	@ 0x48
 8029a38:	f9bd 504a 	ldrsh.w	r5, [sp, #74]	@ 0x4a
 8029a3c:	f8bd 1044 	ldrh.w	r1, [sp, #68]	@ 0x44
 8029a40:	f8bd 2040 	ldrh.w	r2, [sp, #64]	@ 0x40
 8029a44:	f8bd 3042 	ldrh.w	r3, [sp, #66]	@ 0x42
 8029a48:	487f      	ldr	r0, [pc, #508]	@ (8029c48 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x24c>)
 8029a4a:	fb11 4105 	smlabb	r1, r1, r5, r4
 8029a4e:	4422      	add	r2, r4
 8029a50:	442b      	add	r3, r5
 8029a52:	6800      	ldr	r0, [r0, #0]
 8029a54:	f8ad 304a 	strh.w	r3, [sp, #74]	@ 0x4a
 8029a58:	f8ad 2048 	strh.w	r2, [sp, #72]	@ 0x48
 8029a5c:	6802      	ldr	r2, [r0, #0]
 8029a5e:	4488      	add	r8, r1
 8029a60:	f9bd 104c 	ldrsh.w	r1, [sp, #76]	@ 0x4c
 8029a64:	4c79      	ldr	r4, [pc, #484]	@ (8029c4c <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x250>)
 8029a66:	f8d2 30a0 	ldr.w	r3, [r2, #160]	@ 0xa0
 8029a6a:	910c      	str	r1, [sp, #48]	@ 0x30
 8029a6c:	f9bd 104e 	ldrsh.w	r1, [sp, #78]	@ 0x4e
 8029a70:	42a3      	cmp	r3, r4
 8029a72:	910e      	str	r1, [sp, #56]	@ 0x38
 8029a74:	f040 80ab 	bne.w	8029bce <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x1d2>
 8029a78:	6841      	ldr	r1, [r0, #4]
 8029a7a:	4c75      	ldr	r4, [pc, #468]	@ (8029c50 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x254>)
 8029a7c:	680b      	ldr	r3, [r1, #0]
 8029a7e:	699b      	ldr	r3, [r3, #24]
 8029a80:	42a3      	cmp	r3, r4
 8029a82:	f040 80cb 	bne.w	8029c1c <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x220>
 8029a86:	6a93      	ldr	r3, [r2, #40]	@ 0x28
 8029a88:	4798      	blx	r3
 8029a8a:	4b72      	ldr	r3, [pc, #456]	@ (8029c54 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x258>)
 8029a8c:	f9bd 104a 	ldrsh.w	r1, [sp, #74]	@ 0x4a
 8029a90:	881b      	ldrh	r3, [r3, #0]
 8029a92:	f9bd 2048 	ldrsh.w	r2, [sp, #72]	@ 0x48
 8029a96:	fb01 2303 	mla	r3, r1, r3, r2
 8029a9a:	eb00 0383 	add.w	r3, r0, r3, lsl #2
 8029a9e:	930b      	str	r3, [sp, #44]	@ 0x2c
 8029aa0:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8029aa2:	2b00      	cmp	r3, #0
 8029aa4:	f340 808b 	ble.w	8029bbe <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x1c2>
 8029aa8:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8029aaa:	2b00      	cmp	r3, #0
 8029aac:	f340 8087 	ble.w	8029bbe <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x1c2>
 8029ab0:	2200      	movs	r2, #0
 8029ab2:	f04f 0c04 	mov.w	ip, #4
 8029ab6:	009b      	lsls	r3, r3, #2
 8029ab8:	920d      	str	r2, [sp, #52]	@ 0x34
 8029aba:	930f      	str	r3, [sp, #60]	@ 0x3c
 8029abc:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8029abe:	4645      	mov	r5, r8
 8029ac0:	1d1c      	adds	r4, r3, #4
 8029ac2:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8029ac4:	eb08 0e03 	add.w	lr, r8, r3
 8029ac8:	e048      	b.n	8029b5c <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x160>
 8029aca:	fb09 f303 	mul.w	r3, r9, r3
 8029ace:	1c5a      	adds	r2, r3, #1
 8029ad0:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8029ad4:	121b      	asrs	r3, r3, #8
 8029ad6:	b2d8      	uxtb	r0, r3
 8029ad8:	43c1      	mvns	r1, r0
 8029ada:	b29b      	uxth	r3, r3
 8029adc:	fb1a f203 	smulbb	r2, sl, r3
 8029ae0:	f814 ac04 	ldrb.w	sl, [r4, #-4]
 8029ae4:	b2c9      	uxtb	r1, r1
 8029ae6:	fb0a 2a01 	mla	sl, sl, r1, r2
 8029aea:	fa1f fa8a 	uxth.w	sl, sl
 8029aee:	f814 2c03 	ldrb.w	r2, [r4, #-3]
 8029af2:	f10a 0b01 	add.w	fp, sl, #1
 8029af6:	eb0b 2a1a 	add.w	sl, fp, sl, lsr #8
 8029afa:	ea4f 2a2a 	mov.w	sl, sl, asr #8
 8029afe:	fb12 fb01 	smulbb	fp, r2, r1
 8029b02:	f804 ac04 	strb.w	sl, [r4, #-4]
 8029b06:	7872      	ldrb	r2, [r6, #1]
 8029b08:	f814 ac02 	ldrb.w	sl, [r4, #-2]
 8029b0c:	fb02 b203 	mla	r2, r2, r3, fp
 8029b10:	b292      	uxth	r2, r2
 8029b12:	f102 0b01 	add.w	fp, r2, #1
 8029b16:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 8029b1a:	fb1a fa01 	smulbb	sl, sl, r1
 8029b1e:	1212      	asrs	r2, r2, #8
 8029b20:	f804 2c03 	strb.w	r2, [r4, #-3]
 8029b24:	78b1      	ldrb	r1, [r6, #2]
 8029b26:	f814 2c01 	ldrb.w	r2, [r4, #-1]
 8029b2a:	fb01 a103 	mla	r1, r1, r3, sl
 8029b2e:	fb12 f303 	smulbb	r3, r2, r3
 8029b32:	b289      	uxth	r1, r1
 8029b34:	b29b      	uxth	r3, r3
 8029b36:	f101 0a01 	add.w	sl, r1, #1
 8029b3a:	1c5e      	adds	r6, r3, #1
 8029b3c:	eb0a 2111 	add.w	r1, sl, r1, lsr #8
 8029b40:	4402      	add	r2, r0
 8029b42:	eb06 2313 	add.w	r3, r6, r3, lsr #8
 8029b46:	1209      	asrs	r1, r1, #8
 8029b48:	eba2 2313 	sub.w	r3, r2, r3, lsr #8
 8029b4c:	f804 1c02 	strb.w	r1, [r4, #-2]
 8029b50:	f804 3c01 	strb.w	r3, [r4, #-1]
 8029b54:	45ae      	cmp	lr, r5
 8029b56:	f104 0404 	add.w	r4, r4, #4
 8029b5a:	d01c      	beq.n	8029b96 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x19a>
 8029b5c:	f815 2b01 	ldrb.w	r2, [r5], #1
 8029b60:	fb1c c202 	smlabb	r2, ip, r2, ip
 8029b64:	18be      	adds	r6, r7, r2
 8029b66:	78f3      	ldrb	r3, [r6, #3]
 8029b68:	2b00      	cmp	r3, #0
 8029b6a:	d0f3      	beq.n	8029b54 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x158>
 8029b6c:	2bff      	cmp	r3, #255	@ 0xff
 8029b6e:	f817 a002 	ldrb.w	sl, [r7, r2]
 8029b72:	d1aa      	bne.n	8029aca <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0xce>
 8029b74:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 8029b78:	d1a7      	bne.n	8029aca <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0xce>
 8029b7a:	f804 ac04 	strb.w	sl, [r4, #-4]
 8029b7e:	7873      	ldrb	r3, [r6, #1]
 8029b80:	45ae      	cmp	lr, r5
 8029b82:	f804 3c03 	strb.w	r3, [r4, #-3]
 8029b86:	78b3      	ldrb	r3, [r6, #2]
 8029b88:	f104 0404 	add.w	r4, r4, #4
 8029b8c:	f804 9c05 	strb.w	r9, [r4, #-5]
 8029b90:	f804 3c06 	strb.w	r3, [r4, #-6]
 8029b94:	d1e2      	bne.n	8029b5c <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x160>
 8029b96:	4b2f      	ldr	r3, [pc, #188]	@ (8029c54 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x258>)
 8029b98:	990c      	ldr	r1, [sp, #48]	@ 0x30
 8029b9a:	881b      	ldrh	r3, [r3, #0]
 8029b9c:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 8029b9e:	1a5b      	subs	r3, r3, r1
 8029ba0:	eb00 0383 	add.w	r3, r0, r3, lsl #2
 8029ba4:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 8029ba6:	990d      	ldr	r1, [sp, #52]	@ 0x34
 8029ba8:	4418      	add	r0, r3
 8029baa:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8029bac:	3101      	adds	r1, #1
 8029bae:	f9bd 2044 	ldrsh.w	r2, [sp, #68]	@ 0x44
 8029bb2:	428b      	cmp	r3, r1
 8029bb4:	910d      	str	r1, [sp, #52]	@ 0x34
 8029bb6:	900b      	str	r0, [sp, #44]	@ 0x2c
 8029bb8:	4490      	add	r8, r2
 8029bba:	f47f af7f 	bne.w	8029abc <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0xc0>
 8029bbe:	4b22      	ldr	r3, [pc, #136]	@ (8029c48 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x24c>)
 8029bc0:	6818      	ldr	r0, [r3, #0]
 8029bc2:	6803      	ldr	r3, [r0, #0]
 8029bc4:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8029bc6:	4798      	blx	r3
 8029bc8:	b015      	add	sp, #84	@ 0x54
 8029bca:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8029bce:	4798      	blx	r3
 8029bd0:	4603      	mov	r3, r0
 8029bd2:	2b01      	cmp	r3, #1
 8029bd4:	d126      	bne.n	8029c24 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x228>
 8029bd6:	4a20      	ldr	r2, [pc, #128]	@ (8029c58 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x25c>)
 8029bd8:	6810      	ldr	r0, [r2, #0]
 8029bda:	b338      	cbz	r0, 8029c2c <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x230>
 8029bdc:	f04f 0c02 	mov.w	ip, #2
 8029be0:	260b      	movs	r6, #11
 8029be2:	4a1c      	ldr	r2, [pc, #112]	@ (8029c54 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x258>)
 8029be4:	f8bd 1038 	ldrh.w	r1, [sp, #56]	@ 0x38
 8029be8:	8814      	ldrh	r4, [r2, #0]
 8029bea:	f8bd 5044 	ldrh.w	r5, [sp, #68]	@ 0x44
 8029bee:	f8bd 2030 	ldrh.w	r2, [sp, #48]	@ 0x30
 8029bf2:	9406      	str	r4, [sp, #24]
 8029bf4:	f8bd 404a 	ldrh.w	r4, [sp, #74]	@ 0x4a
 8029bf8:	e9cd 2101 	strd	r2, r1, [sp, #4]
 8029bfc:	9305      	str	r3, [sp, #20]
 8029bfe:	f8cd 9010 	str.w	r9, [sp, #16]
 8029c02:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 8029c06:	463a      	mov	r2, r7
 8029c08:	4641      	mov	r1, r8
 8029c0a:	e9cd 6c07 	strd	r6, ip, [sp, #28]
 8029c0e:	9503      	str	r5, [sp, #12]
 8029c10:	9400      	str	r4, [sp, #0]
 8029c12:	f7f7 f949 	bl	8020ea8 <_ZN8touchgfx8HALGPU2D13dma2dBlitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_>
 8029c16:	b015      	add	sp, #84	@ 0x54
 8029c18:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8029c1c:	4608      	mov	r0, r1
 8029c1e:	4798      	blx	r3
 8029c20:	4603      	mov	r3, r0
 8029c22:	e7d6      	b.n	8029bd2 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x1d6>
 8029c24:	4b08      	ldr	r3, [pc, #32]	@ (8029c48 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x24c>)
 8029c26:	6818      	ldr	r0, [r3, #0]
 8029c28:	6802      	ldr	r2, [r0, #0]
 8029c2a:	e72c      	b.n	8029a86 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x8a>
 8029c2c:	4b0b      	ldr	r3, [pc, #44]	@ (8029c5c <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x260>)
 8029c2e:	4a0c      	ldr	r2, [pc, #48]	@ (8029c60 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x264>)
 8029c30:	217c      	movs	r1, #124	@ 0x7c
 8029c32:	480c      	ldr	r0, [pc, #48]	@ (8029c64 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x268>)
 8029c34:	f008 fda0 	bl	8032778 <__assert_func>
 8029c38:	4b0b      	ldr	r3, [pc, #44]	@ (8029c68 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x26c>)
 8029c3a:	4a0c      	ldr	r2, [pc, #48]	@ (8029c6c <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x270>)
 8029c3c:	f241 012a 	movw	r1, #4138	@ 0x102a
 8029c40:	480b      	ldr	r0, [pc, #44]	@ (8029c70 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x274>)
 8029c42:	f008 fd99 	bl	8032778 <__assert_func>
 8029c46:	bf00      	nop
 8029c48:	200830a4 	.word	0x200830a4
 8029c4c:	0800121d 	.word	0x0800121d
 8029c50:	0800bd65 	.word	0x0800bd65
 8029c54:	2008309e 	.word	0x2008309e
 8029c58:	20083544 	.word	0x20083544
 8029c5c:	080364bc 	.word	0x080364bc
 8029c60:	08036d28 	.word	0x08036d28
 8029c64:	080364e4 	.word	0x080364e4
 8029c68:	080365d4 	.word	0x080365d4
 8029c6c:	08037470 	.word	0x08037470
 8029c70:	08036560 	.word	0x08036560

08029c74 <_ZNK8touchgfx8LCDGPU2D24blendPixelARGB8888_32BPPEPKhPmhh>:
 8029c74:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8029c78:	f89d 0018 	ldrb.w	r0, [sp, #24]
 8029c7c:	fb03 f300 	mul.w	r3, r3, r0
 8029c80:	1c58      	adds	r0, r3, #1
 8029c82:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 8029c86:	121b      	asrs	r3, r3, #8
 8029c88:	2bff      	cmp	r3, #255	@ 0xff
 8029c8a:	d039      	beq.n	8029d00 <_ZNK8touchgfx8LCDGPU2D24blendPixelARGB8888_32BPPEPKhPmhh+0x8c>
 8029c8c:	6810      	ldr	r0, [r2, #0]
 8029c8e:	0e07      	lsrs	r7, r0, #24
 8029c90:	d036      	beq.n	8029d00 <_ZNK8touchgfx8LCDGPU2D24blendPixelARGB8888_32BPPEPKhPmhh+0x8c>
 8029c92:	b2dc      	uxtb	r4, r3
 8029c94:	2b00      	cmp	r3, #0
 8029c96:	d03d      	beq.n	8029d14 <_ZNK8touchgfx8LCDGPU2D24blendPixelARGB8888_32BPPEPKhPmhh+0xa0>
 8029c98:	fb04 f507 	mul.w	r5, r4, r7
 8029c9c:	1c6e      	adds	r6, r5, #1
 8029c9e:	eb06 2625 	add.w	r6, r6, r5, asr #8
 8029ca2:	1236      	asrs	r6, r6, #8
 8029ca4:	f891 8002 	ldrb.w	r8, [r1, #2]
 8029ca8:	eba7 0e06 	sub.w	lr, r7, r6
 8029cac:	b2c5      	uxtb	r5, r0
 8029cae:	f891 c001 	ldrb.w	ip, [r1, #1]
 8029cb2:	fb0e f505 	mul.w	r5, lr, r5
 8029cb6:	fb03 f808 	mul.w	r8, r3, r8
 8029cba:	7809      	ldrb	r1, [r1, #0]
 8029cbc:	fb03 fc0c 	mul.w	ip, r3, ip
 8029cc0:	fb03 5501 	mla	r5, r3, r1, r5
 8029cc4:	f3c0 4107 	ubfx	r1, r0, #16, #8
 8029cc8:	f3c0 2307 	ubfx	r3, r0, #8, #8
 8029ccc:	fb0e 8101 	mla	r1, lr, r1, r8
 8029cd0:	19e0      	adds	r0, r4, r7
 8029cd2:	fb0e c303 	mla	r3, lr, r3, ip
 8029cd6:	1b80      	subs	r0, r0, r6
 8029cd8:	b2c0      	uxtb	r0, r0
 8029cda:	fbb1 f1f0 	udiv	r1, r1, r0
 8029cde:	fbb5 f4f0 	udiv	r4, r5, r0
 8029ce2:	fbb3 f3f0 	udiv	r3, r3, r0
 8029ce6:	0409      	lsls	r1, r1, #16
 8029ce8:	b2e4      	uxtb	r4, r4
 8029cea:	f401 017f 	and.w	r1, r1, #16711680	@ 0xff0000
 8029cee:	ea44 6000 	orr.w	r0, r4, r0, lsl #24
 8029cf2:	021b      	lsls	r3, r3, #8
 8029cf4:	4301      	orrs	r1, r0
 8029cf6:	b29b      	uxth	r3, r3
 8029cf8:	430b      	orrs	r3, r1
 8029cfa:	6013      	str	r3, [r2, #0]
 8029cfc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8029d00:	7848      	ldrb	r0, [r1, #1]
 8029d02:	788d      	ldrb	r5, [r1, #2]
 8029d04:	780c      	ldrb	r4, [r1, #0]
 8029d06:	0200      	lsls	r0, r0, #8
 8029d08:	ea40 4105 	orr.w	r1, r0, r5, lsl #16
 8029d0c:	4321      	orrs	r1, r4
 8029d0e:	ea41 6303 	orr.w	r3, r1, r3, lsl #24
 8029d12:	6013      	str	r3, [r2, #0]
 8029d14:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08029d18 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h>:
 8029d18:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8029d1c:	4692      	mov	sl, r2
 8029d1e:	7812      	ldrb	r2, [r2, #0]
 8029d20:	b095      	sub	sp, #84	@ 0x54
 8029d22:	460d      	mov	r5, r1
 8029d24:	461e      	mov	r6, r3
 8029d26:	900d      	str	r0, [sp, #52]	@ 0x34
 8029d28:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 8029d2a:	f89d 107c 	ldrb.w	r1, [sp, #124]	@ 0x7c
 8029d2e:	2a00      	cmp	r2, #0
 8029d30:	f040 816b 	bne.w	802a00a <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x2f2>
 8029d34:	6830      	ldr	r0, [r6, #0]
 8029d36:	460f      	mov	r7, r1
 8029d38:	6871      	ldr	r1, [r6, #4]
 8029d3a:	aa10      	add	r2, sp, #64	@ 0x40
 8029d3c:	c203      	stmia	r2!, {r0, r1}
 8029d3e:	6818      	ldr	r0, [r3, #0]
 8029d40:	6859      	ldr	r1, [r3, #4]
 8029d42:	aa12      	add	r2, sp, #72	@ 0x48
 8029d44:	c203      	stmia	r2!, {r0, r1}
 8029d46:	a810      	add	r0, sp, #64	@ 0x40
 8029d48:	f7e3 f93a 	bl	800cfc0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8029d4c:	4631      	mov	r1, r6
 8029d4e:	a812      	add	r0, sp, #72	@ 0x48
 8029d50:	f7e3 f95e 	bl	800d010 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8029d54:	f9bd 3044 	ldrsh.w	r3, [sp, #68]	@ 0x44
 8029d58:	f9bd 1048 	ldrsh.w	r1, [sp, #72]	@ 0x48
 8029d5c:	f003 0201 	and.w	r2, r3, #1
 8029d60:	4614      	mov	r4, r2
 8029d62:	9208      	str	r2, [sp, #32]
 8029d64:	f9bd 204a 	ldrsh.w	r2, [sp, #74]	@ 0x4a
 8029d68:	f8bd 0042 	ldrh.w	r0, [sp, #66]	@ 0x42
 8029d6c:	4423      	add	r3, r4
 8029d6e:	fb02 1303 	mla	r3, r2, r3, r1
 8029d72:	f8bd 6040 	ldrh.w	r6, [sp, #64]	@ 0x40
 8029d76:	4402      	add	r2, r0
 8029d78:	48a7      	ldr	r0, [pc, #668]	@ (802a018 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x300>)
 8029d7a:	440e      	add	r6, r1
 8029d7c:	6800      	ldr	r0, [r0, #0]
 8029d7e:	f8ad 6048 	strh.w	r6, [sp, #72]	@ 0x48
 8029d82:	f8ad 204a 	strh.w	r2, [sp, #74]	@ 0x4a
 8029d86:	eb03 73d3 	add.w	r3, r3, r3, lsr #31
 8029d8a:	eb05 0363 	add.w	r3, r5, r3, asr #1
 8029d8e:	6802      	ldr	r2, [r0, #0]
 8029d90:	f9bd 604c 	ldrsh.w	r6, [sp, #76]	@ 0x4c
 8029d94:	9302      	str	r3, [sp, #8]
 8029d96:	f001 0301 	and.w	r3, r1, #1
 8029d9a:	6a92      	ldr	r2, [r2, #40]	@ 0x28
 8029d9c:	9309      	str	r3, [sp, #36]	@ 0x24
 8029d9e:	9607      	str	r6, [sp, #28]
 8029da0:	f9bd 404e 	ldrsh.w	r4, [sp, #78]	@ 0x4e
 8029da4:	4790      	blx	r2
 8029da6:	4a9d      	ldr	r2, [pc, #628]	@ (802a01c <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x304>)
 8029da8:	f9bd 304a 	ldrsh.w	r3, [sp, #74]	@ 0x4a
 8029dac:	8812      	ldrh	r2, [r2, #0]
 8029dae:	f9bd 1048 	ldrsh.w	r1, [sp, #72]	@ 0x48
 8029db2:	fb04 f402 	mul.w	r4, r4, r2
 8029db6:	fb02 1303 	mla	r3, r2, r3, r1
 8029dba:	eb00 0583 	add.w	r5, r0, r3, lsl #2
 8029dbe:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 8029dc2:	429d      	cmp	r5, r3
 8029dc4:	930a      	str	r3, [sp, #40]	@ 0x28
 8029dc6:	f10a 0a04 	add.w	sl, sl, #4
 8029dca:	f080 80f4 	bcs.w	8029fb6 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x29e>
 8029dce:	46bb      	mov	fp, r7
 8029dd0:	1e73      	subs	r3, r6, #1
 8029dd2:	930c      	str	r3, [sp, #48]	@ 0x30
 8029dd4:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8029dd6:	2b00      	cmp	r3, #0
 8029dd8:	f000 8104 	beq.w	8029fe4 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x2cc>
 8029ddc:	9a02      	ldr	r2, [sp, #8]
 8029dde:	7813      	ldrb	r3, [r2, #0]
 8029de0:	1c54      	adds	r4, r2, #1
 8029de2:	f003 030f 	and.w	r3, r3, #15
 8029de6:	f85a 3023 	ldr.w	r3, [sl, r3, lsl #2]
 8029dea:	930f      	str	r3, [sp, #60]	@ 0x3c
 8029dec:	0e1b      	lsrs	r3, r3, #24
 8029dee:	f040 8104 	bne.w	8029ffa <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x2e2>
 8029df2:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8029df4:	3504      	adds	r5, #4
 8029df6:	2b01      	cmp	r3, #1
 8029df8:	f340 80bf 	ble.w	8029f7a <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x262>
 8029dfc:	3b02      	subs	r3, #2
 8029dfe:	ea4f 0e53 	mov.w	lr, r3, lsr #1
 8029e02:	9304      	str	r3, [sp, #16]
 8029e04:	f10e 0301 	add.w	r3, lr, #1
 8029e08:	e9cd 5e05 	strd	r5, lr, [sp, #20]
 8029e0c:	9303      	str	r3, [sp, #12]
 8029e0e:	18e7      	adds	r7, r4, r3
 8029e10:	f105 0808 	add.w	r8, r5, #8
 8029e14:	46de      	mov	lr, fp
 8029e16:	e00b      	b.n	8029e30 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x118>
 8029e18:	f005 050f 	and.w	r5, r5, #15
 8029e1c:	f85a 3025 	ldr.w	r3, [sl, r5, lsl #2]
 8029e20:	3401      	adds	r4, #1
 8029e22:	0e1a      	lsrs	r2, r3, #24
 8029e24:	d153      	bne.n	8029ece <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x1b6>
 8029e26:	42bc      	cmp	r4, r7
 8029e28:	f108 0808 	add.w	r8, r8, #8
 8029e2c:	f000 8099 	beq.w	8029f62 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x24a>
 8029e30:	7825      	ldrb	r5, [r4, #0]
 8029e32:	092b      	lsrs	r3, r5, #4
 8029e34:	f85a 3023 	ldr.w	r3, [sl, r3, lsl #2]
 8029e38:	0e1a      	lsrs	r2, r3, #24
 8029e3a:	d0ed      	beq.n	8029e18 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x100>
 8029e3c:	fb0e f202 	mul.w	r2, lr, r2
 8029e40:	1c51      	adds	r1, r2, #1
 8029e42:	eb01 2222 	add.w	r2, r1, r2, asr #8
 8029e46:	1212      	asrs	r2, r2, #8
 8029e48:	2aff      	cmp	r2, #255	@ 0xff
 8029e4a:	f000 80bc 	beq.w	8029fc6 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x2ae>
 8029e4e:	f858 1c08 	ldr.w	r1, [r8, #-8]
 8029e52:	0e0e      	lsrs	r6, r1, #24
 8029e54:	f000 80b7 	beq.w	8029fc6 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x2ae>
 8029e58:	b2d0      	uxtb	r0, r2
 8029e5a:	2a00      	cmp	r2, #0
 8029e5c:	d0dc      	beq.n	8029e18 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x100>
 8029e5e:	fb00 fc06 	mul.w	ip, r0, r6
 8029e62:	f10c 0501 	add.w	r5, ip, #1
 8029e66:	eb05 252c 	add.w	r5, r5, ip, asr #8
 8029e6a:	122d      	asrs	r5, r5, #8
 8029e6c:	950b      	str	r5, [sp, #44]	@ 0x2c
 8029e6e:	fa5f fb81 	uxtb.w	fp, r1
 8029e72:	1b75      	subs	r5, r6, r5
 8029e74:	f3c3 4907 	ubfx	r9, r3, #16, #8
 8029e78:	fb05 fb0b 	mul.w	fp, r5, fp
 8029e7c:	f3c3 2c07 	ubfx	ip, r3, #8, #8
 8029e80:	fb02 f909 	mul.w	r9, r2, r9
 8029e84:	fb02 fc0c 	mul.w	ip, r2, ip
 8029e88:	b2db      	uxtb	r3, r3
 8029e8a:	fb02 b303 	mla	r3, r2, r3, fp
 8029e8e:	f3c1 4207 	ubfx	r2, r1, #16, #8
 8029e92:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8029e96:	fb05 9902 	mla	r9, r5, r2, r9
 8029e9a:	fb05 c101 	mla	r1, r5, r1, ip
 8029e9e:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 8029ea0:	4430      	add	r0, r6
 8029ea2:	1b45      	subs	r5, r0, r5
 8029ea4:	b2ed      	uxtb	r5, r5
 8029ea6:	fbb9 f2f5 	udiv	r2, r9, r5
 8029eaa:	fbb3 f3f5 	udiv	r3, r3, r5
 8029eae:	fbb1 f1f5 	udiv	r1, r1, r5
 8029eb2:	0412      	lsls	r2, r2, #16
 8029eb4:	b2db      	uxtb	r3, r3
 8029eb6:	ea43 6305 	orr.w	r3, r3, r5, lsl #24
 8029eba:	f402 027f 	and.w	r2, r2, #16711680	@ 0xff0000
 8029ebe:	0209      	lsls	r1, r1, #8
 8029ec0:	4313      	orrs	r3, r2
 8029ec2:	b289      	uxth	r1, r1
 8029ec4:	430b      	orrs	r3, r1
 8029ec6:	f848 3c08 	str.w	r3, [r8, #-8]
 8029eca:	7825      	ldrb	r5, [r4, #0]
 8029ecc:	e7a4      	b.n	8029e18 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x100>
 8029ece:	fb0e f202 	mul.w	r2, lr, r2
 8029ed2:	1c51      	adds	r1, r2, #1
 8029ed4:	eb01 2222 	add.w	r2, r1, r2, asr #8
 8029ed8:	1212      	asrs	r2, r2, #8
 8029eda:	2aff      	cmp	r2, #255	@ 0xff
 8029edc:	d07b      	beq.n	8029fd6 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x2be>
 8029ede:	f858 1c04 	ldr.w	r1, [r8, #-4]
 8029ee2:	0e0e      	lsrs	r6, r1, #24
 8029ee4:	d077      	beq.n	8029fd6 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x2be>
 8029ee6:	b2d0      	uxtb	r0, r2
 8029ee8:	2a00      	cmp	r2, #0
 8029eea:	d09c      	beq.n	8029e26 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x10e>
 8029eec:	fb00 fc06 	mul.w	ip, r0, r6
 8029ef0:	f10c 0501 	add.w	r5, ip, #1
 8029ef4:	eb05 252c 	add.w	r5, r5, ip, asr #8
 8029ef8:	122d      	asrs	r5, r5, #8
 8029efa:	950b      	str	r5, [sp, #44]	@ 0x2c
 8029efc:	fa5f fb81 	uxtb.w	fp, r1
 8029f00:	1b75      	subs	r5, r6, r5
 8029f02:	f3c3 4907 	ubfx	r9, r3, #16, #8
 8029f06:	fb05 fb0b 	mul.w	fp, r5, fp
 8029f0a:	f3c3 2c07 	ubfx	ip, r3, #8, #8
 8029f0e:	fb02 f909 	mul.w	r9, r2, r9
 8029f12:	fb02 fc0c 	mul.w	ip, r2, ip
 8029f16:	b2db      	uxtb	r3, r3
 8029f18:	fb02 b303 	mla	r3, r2, r3, fp
 8029f1c:	f3c1 4207 	ubfx	r2, r1, #16, #8
 8029f20:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8029f24:	fb05 9902 	mla	r9, r5, r2, r9
 8029f28:	fb05 c101 	mla	r1, r5, r1, ip
 8029f2c:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 8029f2e:	4430      	add	r0, r6
 8029f30:	1b45      	subs	r5, r0, r5
 8029f32:	b2ed      	uxtb	r5, r5
 8029f34:	fbb9 f2f5 	udiv	r2, r9, r5
 8029f38:	fbb3 f3f5 	udiv	r3, r3, r5
 8029f3c:	fbb1 f1f5 	udiv	r1, r1, r5
 8029f40:	0412      	lsls	r2, r2, #16
 8029f42:	b2db      	uxtb	r3, r3
 8029f44:	f402 027f 	and.w	r2, r2, #16711680	@ 0xff0000
 8029f48:	ea43 6305 	orr.w	r3, r3, r5, lsl #24
 8029f4c:	0209      	lsls	r1, r1, #8
 8029f4e:	4313      	orrs	r3, r2
 8029f50:	b289      	uxth	r1, r1
 8029f52:	430b      	orrs	r3, r1
 8029f54:	42bc      	cmp	r4, r7
 8029f56:	f848 3c04 	str.w	r3, [r8, #-4]
 8029f5a:	f108 0808 	add.w	r8, r8, #8
 8029f5e:	f47f af67 	bne.w	8029e30 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x118>
 8029f62:	46f3      	mov	fp, lr
 8029f64:	f8dd e018 	ldr.w	lr, [sp, #24]
 8029f68:	9a04      	ldr	r2, [sp, #16]
 8029f6a:	ebce 73ce 	rsb	r3, lr, lr, lsl #31
 8029f6e:	9d05      	ldr	r5, [sp, #20]
 8029f70:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8029f74:	9a03      	ldr	r2, [sp, #12]
 8029f76:	eb05 05c2 	add.w	r5, r5, r2, lsl #3
 8029f7a:	2b01      	cmp	r3, #1
 8029f7c:	d107      	bne.n	8029f8e <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x276>
 8029f7e:	7823      	ldrb	r3, [r4, #0]
 8029f80:	091b      	lsrs	r3, r3, #4
 8029f82:	f85a 3023 	ldr.w	r3, [sl, r3, lsl #2]
 8029f86:	930f      	str	r3, [sp, #60]	@ 0x3c
 8029f88:	0e1b      	lsrs	r3, r3, #24
 8029f8a:	d12e      	bne.n	8029fea <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x2d2>
 8029f8c:	3504      	adds	r5, #4
 8029f8e:	9908      	ldr	r1, [sp, #32]
 8029f90:	f9bd 3044 	ldrsh.w	r3, [sp, #68]	@ 0x44
 8029f94:	4a21      	ldr	r2, [pc, #132]	@ (802a01c <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x304>)
 8029f96:	440b      	add	r3, r1
 8029f98:	8812      	ldrh	r2, [r2, #0]
 8029f9a:	9907      	ldr	r1, [sp, #28]
 8029f9c:	eb03 73d3 	add.w	r3, r3, r3, lsr #31
 8029fa0:	1a52      	subs	r2, r2, r1
 8029fa2:	eb05 0582 	add.w	r5, r5, r2, lsl #2
 8029fa6:	9a02      	ldr	r2, [sp, #8]
 8029fa8:	eb02 0363 	add.w	r3, r2, r3, asr #1
 8029fac:	9302      	str	r3, [sp, #8]
 8029fae:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8029fb0:	42ab      	cmp	r3, r5
 8029fb2:	f63f af0f 	bhi.w	8029dd4 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0xbc>
 8029fb6:	4b18      	ldr	r3, [pc, #96]	@ (802a018 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x300>)
 8029fb8:	6818      	ldr	r0, [r3, #0]
 8029fba:	6803      	ldr	r3, [r0, #0]
 8029fbc:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8029fbe:	4798      	blx	r3
 8029fc0:	b015      	add	sp, #84	@ 0x54
 8029fc2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8029fc6:	f023 437f 	bic.w	r3, r3, #4278190080	@ 0xff000000
 8029fca:	ea43 6202 	orr.w	r2, r3, r2, lsl #24
 8029fce:	f848 2c08 	str.w	r2, [r8, #-8]
 8029fd2:	7825      	ldrb	r5, [r4, #0]
 8029fd4:	e720      	b.n	8029e18 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x100>
 8029fd6:	f023 437f 	bic.w	r3, r3, #4278190080	@ 0xff000000
 8029fda:	ea43 6202 	orr.w	r2, r3, r2, lsl #24
 8029fde:	f848 2c04 	str.w	r2, [r8, #-4]
 8029fe2:	e720      	b.n	8029e26 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x10e>
 8029fe4:	9c02      	ldr	r4, [sp, #8]
 8029fe6:	9b07      	ldr	r3, [sp, #28]
 8029fe8:	e705      	b.n	8029df6 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0xde>
 8029fea:	9300      	str	r3, [sp, #0]
 8029fec:	462a      	mov	r2, r5
 8029fee:	465b      	mov	r3, fp
 8029ff0:	a90f      	add	r1, sp, #60	@ 0x3c
 8029ff2:	980d      	ldr	r0, [sp, #52]	@ 0x34
 8029ff4:	f7ff fe3e 	bl	8029c74 <_ZNK8touchgfx8LCDGPU2D24blendPixelARGB8888_32BPPEPKhPmhh>
 8029ff8:	e7c8      	b.n	8029f8c <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x274>
 8029ffa:	9300      	str	r3, [sp, #0]
 8029ffc:	462a      	mov	r2, r5
 8029ffe:	465b      	mov	r3, fp
 802a000:	a90f      	add	r1, sp, #60	@ 0x3c
 802a002:	980d      	ldr	r0, [sp, #52]	@ 0x34
 802a004:	f7ff fe36 	bl	8029c74 <_ZNK8touchgfx8LCDGPU2D24blendPixelARGB8888_32BPPEPKhPmhh>
 802a008:	e6f3      	b.n	8029df2 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0xda>
 802a00a:	4b05      	ldr	r3, [pc, #20]	@ (802a020 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x308>)
 802a00c:	4a05      	ldr	r2, [pc, #20]	@ (802a024 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x30c>)
 802a00e:	f241 018c 	movw	r1, #4236	@ 0x108c
 802a012:	4805      	ldr	r0, [pc, #20]	@ (802a028 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x310>)
 802a014:	f008 fbb0 	bl	8032778 <__assert_func>
 802a018:	200830a4 	.word	0x200830a4
 802a01c:	2008309e 	.word	0x2008309e
 802a020:	08036654 	.word	0x08036654
 802a024:	08037964 	.word	0x08037964
 802a028:	08036560 	.word	0x08036560

0802a02c <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h>:
 802a02c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802a030:	b093      	sub	sp, #76	@ 0x4c
 802a032:	9206      	str	r2, [sp, #24]
 802a034:	468b      	mov	fp, r1
 802a036:	7812      	ldrb	r2, [r2, #0]
 802a038:	f89d 1074 	ldrb.w	r1, [sp, #116]	@ 0x74
 802a03c:	461c      	mov	r4, r3
 802a03e:	9108      	str	r1, [sp, #32]
 802a040:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 802a042:	2a00      	cmp	r2, #0
 802a044:	f040 815f 	bne.w	802a306 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x2da>
 802a048:	6820      	ldr	r0, [r4, #0]
 802a04a:	6861      	ldr	r1, [r4, #4]
 802a04c:	aa0e      	add	r2, sp, #56	@ 0x38
 802a04e:	c203      	stmia	r2!, {r0, r1}
 802a050:	6818      	ldr	r0, [r3, #0]
 802a052:	6859      	ldr	r1, [r3, #4]
 802a054:	aa10      	add	r2, sp, #64	@ 0x40
 802a056:	c203      	stmia	r2!, {r0, r1}
 802a058:	a80e      	add	r0, sp, #56	@ 0x38
 802a05a:	f7e2 ffb1 	bl	800cfc0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 802a05e:	4621      	mov	r1, r4
 802a060:	a810      	add	r0, sp, #64	@ 0x40
 802a062:	f7e2 ffd5 	bl	800d010 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 802a066:	f9bd 303c 	ldrsh.w	r3, [sp, #60]	@ 0x3c
 802a06a:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 802a06e:	f340 8137 	ble.w	802a2e0 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x2b4>
 802a072:	2201      	movs	r2, #1
 802a074:	b299      	uxth	r1, r3
 802a076:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	@ 0x42
 802a07a:	f8bd 0040 	ldrh.w	r0, [sp, #64]	@ 0x40
 802a07e:	fb93 f5f2 	sdiv	r5, r3, r2
 802a082:	b2ae      	uxth	r6, r5
 802a084:	fb02 3416 	mls	r4, r2, r6, r3
 802a088:	fb14 0101 	smlabb	r1, r4, r1, r0
 802a08c:	f9bd 403e 	ldrsh.w	r4, [sp, #62]	@ 0x3e
 802a090:	fa1f fa81 	uxth.w	sl, r1
 802a094:	4414      	add	r4, r2
 802a096:	3c01      	subs	r4, #1
 802a098:	fb94 f4f2 	sdiv	r4, r4, r2
 802a09c:	b126      	cbz	r6, 802a0a8 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x7c>
 802a09e:	9a06      	ldr	r2, [sp, #24]
 802a0a0:	f852 2026 	ldr.w	r2, [r2, r6, lsl #2]
 802a0a4:	ba12      	rev	r2, r2
 802a0a6:	4493      	add	fp, r2
 802a0a8:	f8bd 2038 	ldrh.w	r2, [sp, #56]	@ 0x38
 802a0ac:	f8bd 103a 	ldrh.w	r1, [sp, #58]	@ 0x3a
 802a0b0:	4402      	add	r2, r0
 802a0b2:	f8ad 2040 	strh.w	r2, [sp, #64]	@ 0x40
 802a0b6:	f9bd 2044 	ldrsh.w	r2, [sp, #68]	@ 0x44
 802a0ba:	440b      	add	r3, r1
 802a0bc:	4616      	mov	r6, r2
 802a0be:	4995      	ldr	r1, [pc, #596]	@ (802a314 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x2e8>)
 802a0c0:	f8ad 3042 	strh.w	r3, [sp, #66]	@ 0x42
 802a0c4:	6808      	ldr	r0, [r1, #0]
 802a0c6:	9203      	str	r2, [sp, #12]
 802a0c8:	6803      	ldr	r3, [r0, #0]
 802a0ca:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	@ 0x46
 802a0ce:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 802a0d0:	4798      	blx	r3
 802a0d2:	f1ba 0f00 	cmp.w	sl, #0
 802a0d6:	bf0c      	ite	eq
 802a0d8:	4633      	moveq	r3, r6
 802a0da:	2300      	movne	r3, #0
 802a0dc:	498e      	ldr	r1, [pc, #568]	@ (802a318 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x2ec>)
 802a0de:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	@ 0x42
 802a0e2:	8809      	ldrh	r1, [r1, #0]
 802a0e4:	f9bd 6040 	ldrsh.w	r6, [sp, #64]	@ 0x40
 802a0e8:	fb05 f501 	mul.w	r5, r5, r1
 802a0ec:	fb01 6202 	mla	r2, r1, r2, r6
 802a0f0:	b2a4      	uxth	r4, r4
 802a0f2:	eb00 0882 	add.w	r8, r0, r2, lsl #2
 802a0f6:	00a2      	lsls	r2, r4, #2
 802a0f8:	eb08 0485 	add.w	r4, r8, r5, lsl #2
 802a0fc:	3204      	adds	r2, #4
 802a0fe:	45a0      	cmp	r8, r4
 802a100:	9207      	str	r2, [sp, #28]
 802a102:	fa1f f983 	uxth.w	r9, r3
 802a106:	d21e      	bcs.n	802a146 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x11a>
 802a108:	2300      	movs	r3, #0
 802a10a:	4648      	mov	r0, r9
 802a10c:	9301      	str	r3, [sp, #4]
 802a10e:	461d      	mov	r5, r3
 802a110:	4653      	mov	r3, sl
 802a112:	b985      	cbnz	r5, 802a136 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x10a>
 802a114:	f89b 2000 	ldrb.w	r2, [fp]
 802a118:	0995      	lsrs	r5, r2, #6
 802a11a:	1e69      	subs	r1, r5, #1
 802a11c:	2902      	cmp	r1, #2
 802a11e:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 802a122:	bf88      	it	hi
 802a124:	f89b 5001 	ldrbhi.w	r5, [fp, #1]
 802a128:	9201      	str	r2, [sp, #4]
 802a12a:	bf9a      	itte	ls
 802a12c:	f10b 0b01 	addls.w	fp, fp, #1
 802a130:	b2ad      	uxthls	r5, r5
 802a132:	f10b 0b02 	addhi.w	fp, fp, #2
 802a136:	b173      	cbz	r3, 802a156 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x12a>
 802a138:	429d      	cmp	r5, r3
 802a13a:	d259      	bcs.n	802a1f0 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x1c4>
 802a13c:	1b5b      	subs	r3, r3, r5
 802a13e:	2500      	movs	r5, #0
 802a140:	b29b      	uxth	r3, r3
 802a142:	45a0      	cmp	r8, r4
 802a144:	d3e5      	bcc.n	802a112 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0xe6>
 802a146:	4b73      	ldr	r3, [pc, #460]	@ (802a314 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x2e8>)
 802a148:	6818      	ldr	r0, [r3, #0]
 802a14a:	6803      	ldr	r3, [r0, #0]
 802a14c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 802a14e:	4798      	blx	r3
 802a150:	b013      	add	sp, #76	@ 0x4c
 802a152:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802a156:	2204      	movs	r2, #4
 802a158:	4616      	mov	r6, r2
 802a15a:	9907      	ldr	r1, [sp, #28]
 802a15c:	9a01      	ldr	r2, [sp, #4]
 802a15e:	4285      	cmp	r5, r0
 802a160:	fb16 1202 	smlabb	r2, r6, r2, r1
 802a164:	9906      	ldr	r1, [sp, #24]
 802a166:	588e      	ldr	r6, [r1, r2]
 802a168:	ea4f 6c16 	mov.w	ip, r6, lsr #24
 802a16c:	d357      	bcc.n	802a21e <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x1f2>
 802a16e:	1a2a      	subs	r2, r5, r0
 802a170:	b292      	uxth	r2, r2
 802a172:	9202      	str	r2, [sp, #8]
 802a174:	2800      	cmp	r0, #0
 802a176:	d041      	beq.n	802a1fc <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x1d0>
 802a178:	e9cd 0304 	strd	r0, r3, [sp, #16]
 802a17c:	9a08      	ldr	r2, [sp, #32]
 802a17e:	f3c6 2907 	ubfx	r9, r6, #8, #8
 802a182:	fb02 f20c 	mul.w	r2, r2, ip
 802a186:	f102 0a01 	add.w	sl, r2, #1
 802a18a:	eb0a 2222 	add.w	r2, sl, r2, asr #8
 802a18e:	1212      	asrs	r2, r2, #8
 802a190:	b2d1      	uxtb	r1, r2
 802a192:	910a      	str	r1, [sp, #40]	@ 0x28
 802a194:	b291      	uxth	r1, r2
 802a196:	9109      	str	r1, [sp, #36]	@ 0x24
 802a198:	fb02 f109 	mul.w	r1, r2, r9
 802a19c:	f3c6 4e07 	ubfx	lr, r6, #16, #8
 802a1a0:	ea4f 2709 	mov.w	r7, r9, lsl #8
 802a1a4:	b2f6      	uxtb	r6, r6
 802a1a6:	ea47 470e 	orr.w	r7, r7, lr, lsl #16
 802a1aa:	4337      	orrs	r7, r6
 802a1ac:	910b      	str	r1, [sp, #44]	@ 0x2c
 802a1ae:	fb06 f602 	mul.w	r6, r6, r2
 802a1b2:	fb02 fe0e 	mul.w	lr, r2, lr
 802a1b6:	ea47 6702 	orr.w	r7, r7, r2, lsl #24
 802a1ba:	f1bc 0f00 	cmp.w	ip, #0
 802a1be:	d036      	beq.n	802a22e <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x202>
 802a1c0:	2a00      	cmp	r2, #0
 802a1c2:	d13b      	bne.n	802a23c <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x210>
 802a1c4:	9a04      	ldr	r2, [sp, #16]
 802a1c6:	1e51      	subs	r1, r2, #1
 802a1c8:	b289      	uxth	r1, r1
 802a1ca:	eb08 0c81 	add.w	ip, r8, r1, lsl #2
 802a1ce:	f1a8 0204 	sub.w	r2, r8, #4
 802a1d2:	f852 6f04 	ldr.w	r6, [r2, #4]!
 802a1d6:	0e36      	lsrs	r6, r6, #24
 802a1d8:	bf08      	it	eq
 802a1da:	6017      	streq	r7, [r2, #0]
 802a1dc:	4594      	cmp	ip, r2
 802a1de:	d1f8      	bne.n	802a1d2 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x1a6>
 802a1e0:	3101      	adds	r1, #1
 802a1e2:	eb08 0881 	add.w	r8, r8, r1, lsl #2
 802a1e6:	4285      	cmp	r5, r0
 802a1e8:	d208      	bcs.n	802a1fc <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x1d0>
 802a1ea:	9d02      	ldr	r5, [sp, #8]
 802a1ec:	9805      	ldr	r0, [sp, #20]
 802a1ee:	e7a8      	b.n	802a142 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x116>
 802a1f0:	1aed      	subs	r5, r5, r3
 802a1f2:	b2ad      	uxth	r5, r5
 802a1f4:	f8bd 000c 	ldrh.w	r0, [sp, #12]
 802a1f8:	2300      	movs	r3, #0
 802a1fa:	e7a2      	b.n	802a142 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x116>
 802a1fc:	9903      	ldr	r1, [sp, #12]
 802a1fe:	f8bd 303c 	ldrh.w	r3, [sp, #60]	@ 0x3c
 802a202:	4a45      	ldr	r2, [pc, #276]	@ (802a318 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x2ec>)
 802a204:	b288      	uxth	r0, r1
 802a206:	1a1b      	subs	r3, r3, r0
 802a208:	8812      	ldrh	r2, [r2, #0]
 802a20a:	b29b      	uxth	r3, r3
 802a20c:	2b00      	cmp	r3, #0
 802a20e:	eba2 0201 	sub.w	r2, r2, r1
 802a212:	9d02      	ldr	r5, [sp, #8]
 802a214:	bf18      	it	ne
 802a216:	2000      	movne	r0, #0
 802a218:	eb08 0882 	add.w	r8, r8, r2, lsl #2
 802a21c:	e791      	b.n	802a142 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x116>
 802a21e:	1b42      	subs	r2, r0, r5
 802a220:	b292      	uxth	r2, r2
 802a222:	9205      	str	r2, [sp, #20]
 802a224:	2d00      	cmp	r5, #0
 802a226:	d06b      	beq.n	802a300 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x2d4>
 802a228:	9504      	str	r5, [sp, #16]
 802a22a:	9302      	str	r3, [sp, #8]
 802a22c:	e7a6      	b.n	802a17c <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x150>
 802a22e:	9a04      	ldr	r2, [sp, #16]
 802a230:	3a01      	subs	r2, #1
 802a232:	b292      	uxth	r2, r2
 802a234:	3201      	adds	r2, #1
 802a236:	eb08 0882 	add.w	r8, r8, r2, lsl #2
 802a23a:	e7d4      	b.n	802a1e6 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x1ba>
 802a23c:	2aff      	cmp	r2, #255	@ 0xff
 802a23e:	9a04      	ldr	r2, [sp, #16]
 802a240:	d054      	beq.n	802a2ec <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x2c0>
 802a242:	f102 3aff 	add.w	sl, r2, #4294967295
 802a246:	fa1f fa8a 	uxth.w	sl, sl
 802a24a:	e9cd 6e0c 	strd	r6, lr, [sp, #48]	@ 0x30
 802a24e:	f10a 0a01 	add.w	sl, sl, #1
 802a252:	eb08 0a8a 	add.w	sl, r8, sl, lsl #2
 802a256:	9304      	str	r3, [sp, #16]
 802a258:	f8d8 2000 	ldr.w	r2, [r8]
 802a25c:	0e11      	lsrs	r1, r2, #24
 802a25e:	d038      	beq.n	802a2d2 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x2a6>
 802a260:	9e09      	ldr	r6, [sp, #36]	@ 0x24
 802a262:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 802a264:	fb11 f606 	smulbb	r6, r1, r6
 802a268:	b2b6      	uxth	r6, r6
 802a26a:	f106 0e01 	add.w	lr, r6, #1
 802a26e:	eb0e 2616 	add.w	r6, lr, r6, lsr #8
 802a272:	ea4f 2e26 	mov.w	lr, r6, asr #8
 802a276:	eba1 090e 	sub.w	r9, r1, lr
 802a27a:	b2d6      	uxtb	r6, r2
 802a27c:	fb09 3606 	mla	r6, r9, r6, r3
 802a280:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 802a282:	f3c2 4c07 	ubfx	ip, r2, #16, #8
 802a286:	fb09 3c0c 	mla	ip, r9, ip, r3
 802a28a:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 802a28c:	f3c2 2207 	ubfx	r2, r2, #8, #8
 802a290:	4419      	add	r1, r3
 802a292:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 802a294:	eba1 010e 	sub.w	r1, r1, lr
 802a298:	fb09 3202 	mla	r2, r9, r2, r3
 802a29c:	b2c9      	uxtb	r1, r1
 802a29e:	fbb6 f6f1 	udiv	r6, r6, r1
 802a2a2:	fbbc fcf1 	udiv	ip, ip, r1
 802a2a6:	fbb2 f9f1 	udiv	r9, r2, r1
 802a2aa:	b2f6      	uxtb	r6, r6
 802a2ac:	ea4f 4c0c 	mov.w	ip, ip, lsl #16
 802a2b0:	ea46 6601 	orr.w	r6, r6, r1, lsl #24
 802a2b4:	f40c 027f 	and.w	r2, ip, #16711680	@ 0xff0000
 802a2b8:	ea4f 2109 	mov.w	r1, r9, lsl #8
 802a2bc:	4332      	orrs	r2, r6
 802a2be:	b289      	uxth	r1, r1
 802a2c0:	430a      	orrs	r2, r1
 802a2c2:	f8c8 2000 	str.w	r2, [r8]
 802a2c6:	f108 0804 	add.w	r8, r8, #4
 802a2ca:	45d0      	cmp	r8, sl
 802a2cc:	d1c4      	bne.n	802a258 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x22c>
 802a2ce:	9b04      	ldr	r3, [sp, #16]
 802a2d0:	e789      	b.n	802a1e6 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x1ba>
 802a2d2:	f8c8 7000 	str.w	r7, [r8]
 802a2d6:	f108 0804 	add.w	r8, r8, #4
 802a2da:	45d0      	cmp	r8, sl
 802a2dc:	d1bc      	bne.n	802a258 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x22c>
 802a2de:	e7f6      	b.n	802a2ce <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x2a2>
 802a2e0:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 802a2e4:	b299      	uxth	r1, r3
 802a2e6:	fb94 f2f1 	sdiv	r2, r4, r1
 802a2ea:	e6c4      	b.n	802a076 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x4a>
 802a2ec:	3a01      	subs	r2, #1
 802a2ee:	b292      	uxth	r2, r2
 802a2f0:	3201      	adds	r2, #1
 802a2f2:	eb08 0282 	add.w	r2, r8, r2, lsl #2
 802a2f6:	f848 7b04 	str.w	r7, [r8], #4
 802a2fa:	4590      	cmp	r8, r2
 802a2fc:	d1fb      	bne.n	802a2f6 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x2ca>
 802a2fe:	e772      	b.n	802a1e6 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x1ba>
 802a300:	9805      	ldr	r0, [sp, #20]
 802a302:	462b      	mov	r3, r5
 802a304:	e71d      	b.n	802a142 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x116>
 802a306:	4b05      	ldr	r3, [pc, #20]	@ (802a31c <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x2f0>)
 802a308:	4a05      	ldr	r2, [pc, #20]	@ (802a320 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x2f4>)
 802a30a:	f241 01eb 	movw	r1, #4331	@ 0x10eb
 802a30e:	4805      	ldr	r0, [pc, #20]	@ (802a324 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x2f8>)
 802a310:	f008 fa32 	bl	8032778 <__assert_func>
 802a314:	200830a4 	.word	0x200830a4
 802a318:	2008309e 	.word	0x2008309e
 802a31c:	08036654 	.word	0x08036654
 802a320:	08037d70 	.word	0x08037d70
 802a324:	08036560 	.word	0x08036560

0802a328 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h>:
 802a328:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802a32c:	b0a1      	sub	sp, #132	@ 0x84
 802a32e:	9210      	str	r2, [sp, #64]	@ 0x40
 802a330:	9119      	str	r1, [sp, #100]	@ 0x64
 802a332:	7812      	ldrb	r2, [r2, #0]
 802a334:	f89d 10ac 	ldrb.w	r1, [sp, #172]	@ 0xac
 802a338:	461c      	mov	r4, r3
 802a33a:	9104      	str	r1, [sp, #16]
 802a33c:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 802a33e:	2a00      	cmp	r2, #0
 802a340:	f040 8215 	bne.w	802a76e <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x446>
 802a344:	6861      	ldr	r1, [r4, #4]
 802a346:	4683      	mov	fp, r0
 802a348:	6820      	ldr	r0, [r4, #0]
 802a34a:	aa1c      	add	r2, sp, #112	@ 0x70
 802a34c:	c203      	stmia	r2!, {r0, r1}
 802a34e:	6818      	ldr	r0, [r3, #0]
 802a350:	6859      	ldr	r1, [r3, #4]
 802a352:	aa1e      	add	r2, sp, #120	@ 0x78
 802a354:	c203      	stmia	r2!, {r0, r1}
 802a356:	a81c      	add	r0, sp, #112	@ 0x70
 802a358:	f7e2 fe32 	bl	800cfc0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 802a35c:	4621      	mov	r1, r4
 802a35e:	a81e      	add	r0, sp, #120	@ 0x78
 802a360:	f7e2 fe56 	bl	800d010 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 802a364:	f9bd 1074 	ldrsh.w	r1, [sp, #116]	@ 0x74
 802a368:	f5b1 6f80 	cmp.w	r1, #1024	@ 0x400
 802a36c:	f340 81f7 	ble.w	802a75e <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x436>
 802a370:	2301      	movs	r3, #1
 802a372:	b289      	uxth	r1, r1
 802a374:	931a      	str	r3, [sp, #104]	@ 0x68
 802a376:	f9bd 007a 	ldrsh.w	r0, [sp, #122]	@ 0x7a
 802a37a:	f9bd 2076 	ldrsh.w	r2, [sp, #118]	@ 0x76
 802a37e:	fb90 f4f3 	sdiv	r4, r0, r3
 802a382:	441a      	add	r2, r3
 802a384:	3a01      	subs	r2, #1
 802a386:	fb92 f2f3 	sdiv	r2, r2, r3
 802a38a:	b2a4      	uxth	r4, r4
 802a38c:	fb03 0314 	mls	r3, r3, r4, r0
 802a390:	9418      	str	r4, [sp, #96]	@ 0x60
 802a392:	f8bd 4078 	ldrh.w	r4, [sp, #120]	@ 0x78
 802a396:	f8bd 6070 	ldrh.w	r6, [sp, #112]	@ 0x70
 802a39a:	fb13 4101 	smlabb	r1, r3, r1, r4
 802a39e:	f8bd 5072 	ldrh.w	r5, [sp, #114]	@ 0x72
 802a3a2:	4bc6      	ldr	r3, [pc, #792]	@ (802a6bc <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x394>)
 802a3a4:	4434      	add	r4, r6
 802a3a6:	4405      	add	r5, r0
 802a3a8:	6818      	ldr	r0, [r3, #0]
 802a3aa:	f8ad 4078 	strh.w	r4, [sp, #120]	@ 0x78
 802a3ae:	f8ad 507a 	strh.w	r5, [sp, #122]	@ 0x7a
 802a3b2:	f9bd 607c 	ldrsh.w	r6, [sp, #124]	@ 0x7c
 802a3b6:	6803      	ldr	r3, [r0, #0]
 802a3b8:	3201      	adds	r2, #1
 802a3ba:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 802a3bc:	9608      	str	r6, [sp, #32]
 802a3be:	fa1f f881 	uxth.w	r8, r1
 802a3c2:	b294      	uxth	r4, r2
 802a3c4:	f9bd 507e 	ldrsh.w	r5, [sp, #126]	@ 0x7e
 802a3c8:	4798      	blx	r3
 802a3ca:	2300      	movs	r3, #0
 802a3cc:	49bc      	ldr	r1, [pc, #752]	@ (802a6c0 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x398>)
 802a3ce:	f1b8 0f00 	cmp.w	r8, #0
 802a3d2:	bf08      	it	eq
 802a3d4:	4632      	moveq	r2, r6
 802a3d6:	8809      	ldrh	r1, [r1, #0]
 802a3d8:	f9bd 6078 	ldrsh.w	r6, [sp, #120]	@ 0x78
 802a3dc:	9317      	str	r3, [sp, #92]	@ 0x5c
 802a3de:	f9bd 307a 	ldrsh.w	r3, [sp, #122]	@ 0x7a
 802a3e2:	fb05 f501 	mul.w	r5, r5, r1
 802a3e6:	fb01 6303 	mla	r3, r1, r3, r6
 802a3ea:	ea4f 0484 	mov.w	r4, r4, lsl #2
 802a3ee:	eb00 0683 	add.w	r6, r0, r3, lsl #2
 802a3f2:	f104 0304 	add.w	r3, r4, #4
 802a3f6:	9315      	str	r3, [sp, #84]	@ 0x54
 802a3f8:	eb06 0385 	add.w	r3, r6, r5, lsl #2
 802a3fc:	bf18      	it	ne
 802a3fe:	2200      	movne	r2, #0
 802a400:	9303      	str	r3, [sp, #12]
 802a402:	f10b 030e 	add.w	r3, fp, #14
 802a406:	931b      	str	r3, [sp, #108]	@ 0x6c
 802a408:	465b      	mov	r3, fp
 802a40a:	fa1f f982 	uxth.w	r9, r2
 802a40e:	46cb      	mov	fp, r9
 802a410:	46b4      	mov	ip, r6
 802a412:	4647      	mov	r7, r8
 802a414:	4699      	mov	r9, r3
 802a416:	9b03      	ldr	r3, [sp, #12]
 802a418:	459c      	cmp	ip, r3
 802a41a:	f080 8104 	bcs.w	802a626 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x2fe>
 802a41e:	e9dd 2017 	ldrd	r2, r0, [sp, #92]	@ 0x5c
 802a422:	2301      	movs	r3, #1
 802a424:	f8bd 1074 	ldrh.w	r1, [sp, #116]	@ 0x74
 802a428:	2500      	movs	r5, #0
 802a42a:	fbb7 f1f1 	udiv	r1, r7, r1
 802a42e:	f04f 0a01 	mov.w	sl, #1
 802a432:	fa10 f282 	uxtah	r2, r0, r2
 802a436:	0092      	lsls	r2, r2, #2
 802a438:	9810      	ldr	r0, [sp, #64]	@ 0x40
 802a43a:	3204      	adds	r2, #4
 802a43c:	4410      	add	r0, r2
 802a43e:	9305      	str	r3, [sp, #20]
 802a440:	7883      	ldrb	r3, [r0, #2]
 802a442:	7844      	ldrb	r4, [r0, #1]
 802a444:	021b      	lsls	r3, r3, #8
 802a446:	78c0      	ldrb	r0, [r0, #3]
 802a448:	9e19      	ldr	r6, [sp, #100]	@ 0x64
 802a44a:	ea43 4404 	orr.w	r4, r3, r4, lsl #16
 802a44e:	4304      	orrs	r4, r0
 802a450:	1930      	adds	r0, r6, r4
 802a452:	7843      	ldrb	r3, [r0, #1]
 802a454:	5d34      	ldrb	r4, [r6, r4]
 802a456:	9e10      	ldr	r6, [sp, #64]	@ 0x40
 802a458:	021b      	lsls	r3, r3, #8
 802a45a:	5cb2      	ldrb	r2, [r6, r2]
 802a45c:	9e1a      	ldr	r6, [sp, #104]	@ 0x68
 802a45e:	f403 73ff 	and.w	r3, r3, #510	@ 0x1fe
 802a462:	1a71      	subs	r1, r6, r1
 802a464:	431c      	orrs	r4, r3
 802a466:	920a      	str	r2, [sp, #40]	@ 0x28
 802a468:	3201      	adds	r2, #1
 802a46a:	f889 400d 	strb.w	r4, [r9, #13]
 802a46e:	9512      	str	r5, [sp, #72]	@ 0x48
 802a470:	9202      	str	r2, [sp, #8]
 802a472:	4666      	mov	r6, ip
 802a474:	b28a      	uxth	r2, r1
 802a476:	46d6      	mov	lr, sl
 802a478:	4629      	mov	r1, r5
 802a47a:	464d      	mov	r5, r9
 802a47c:	46d9      	mov	r9, fp
 802a47e:	b2a4      	uxth	r4, r4
 802a480:	3001      	adds	r0, #1
 802a482:	9407      	str	r4, [sp, #28]
 802a484:	9001      	str	r0, [sp, #4]
 802a486:	9216      	str	r2, [sp, #88]	@ 0x58
 802a488:	2f00      	cmp	r7, #0
 802a48a:	d034      	beq.n	802a4f6 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x1ce>
 802a48c:	45ba      	cmp	sl, r7
 802a48e:	f080 80d2 	bcs.w	802a636 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x30e>
 802a492:	9b03      	ldr	r3, [sp, #12]
 802a494:	eba7 070a 	sub.w	r7, r7, sl
 802a498:	429e      	cmp	r6, r3
 802a49a:	b2bf      	uxth	r7, r7
 802a49c:	f080 80c3 	bcs.w	802a626 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x2fe>
 802a4a0:	9801      	ldr	r0, [sp, #4]
 802a4a2:	f1ce 0107 	rsb	r1, lr, #7
 802a4a6:	7842      	ldrb	r2, [r0, #1]
 802a4a8:	7803      	ldrb	r3, [r0, #0]
 802a4aa:	408a      	lsls	r2, r1
 802a4ac:	fa43 f30e 	asr.w	r3, r3, lr
 802a4b0:	0052      	lsls	r2, r2, #1
 802a4b2:	f10e 0101 	add.w	r1, lr, #1
 802a4b6:	f402 72ff 	and.w	r2, r2, #510	@ 0x1fe
 802a4ba:	b2db      	uxtb	r3, r3
 802a4bc:	fa5f fe81 	uxtb.w	lr, r1
 802a4c0:	4313      	orrs	r3, r2
 802a4c2:	f1be 0f08 	cmp.w	lr, #8
 802a4c6:	b29a      	uxth	r2, r3
 802a4c8:	f000 80f1 	beq.w	802a6ae <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x386>
 802a4cc:	3001      	adds	r0, #1
 802a4ce:	9001      	str	r0, [sp, #4]
 802a4d0:	990a      	ldr	r1, [sp, #40]	@ 0x28
 802a4d2:	4291      	cmp	r1, r2
 802a4d4:	f0c0 80c0 	bcc.w	802a658 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x330>
 802a4d8:	f04f 0a01 	mov.w	sl, #1
 802a4dc:	b2db      	uxtb	r3, r3
 802a4de:	736b      	strb	r3, [r5, #13]
 802a4e0:	9902      	ldr	r1, [sp, #8]
 802a4e2:	f5b1 7f00 	cmp.w	r1, #512	@ 0x200
 802a4e6:	f0c0 810a 	bcc.w	802a6fe <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x3d6>
 802a4ea:	9207      	str	r2, [sp, #28]
 802a4ec:	f8cd a014 	str.w	sl, [sp, #20]
 802a4f0:	2100      	movs	r1, #0
 802a4f2:	2f00      	cmp	r7, #0
 802a4f4:	d1ca      	bne.n	802a48c <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x164>
 802a4f6:	45ca      	cmp	sl, r9
 802a4f8:	f0c0 80cd 	bcc.w	802a696 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x36e>
 802a4fc:	ebaa 0309 	sub.w	r3, sl, r9
 802a500:	b29b      	uxth	r3, r3
 802a502:	9309      	str	r3, [sp, #36]	@ 0x24
 802a504:	f1b9 0f00 	cmp.w	r9, #0
 802a508:	f000 80dc 	beq.w	802a6c4 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x39c>
 802a50c:	464b      	mov	r3, r9
 802a50e:	f8cd 9018 	str.w	r9, [sp, #24]
 802a512:	9711      	str	r7, [sp, #68]	@ 0x44
 802a514:	18cb      	adds	r3, r1, r3
 802a516:	e9cd ea0d 	strd	lr, sl, [sp, #52]	@ 0x34
 802a51a:	46b3      	mov	fp, r6
 802a51c:	fa1f fc83 	uxth.w	ip, r3
 802a520:	e9cd 690b 	strd	r6, r9, [sp, #44]	@ 0x2c
 802a524:	f8dd a054 	ldr.w	sl, [sp, #84]	@ 0x54
 802a528:	970f      	str	r7, [sp, #60]	@ 0x3c
 802a52a:	f8dd 8040 	ldr.w	r8, [sp, #64]	@ 0x40
 802a52e:	e045      	b.n	802a5bc <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x294>
 802a530:	f8db 0000 	ldr.w	r0, [fp]
 802a534:	0e07      	lsrs	r7, r0, #24
 802a536:	d055      	beq.n	802a5e4 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x2bc>
 802a538:	b2d4      	uxtb	r4, r2
 802a53a:	2a00      	cmp	r2, #0
 802a53c:	d03a      	beq.n	802a5b4 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x28c>
 802a53e:	fb04 fe07 	mul.w	lr, r4, r7
 802a542:	f10e 0601 	add.w	r6, lr, #1
 802a546:	eb06 262e 	add.w	r6, r6, lr, asr #8
 802a54a:	1236      	asrs	r6, r6, #8
 802a54c:	fa5f fe80 	uxtb.w	lr, r0
 802a550:	9614      	str	r6, [sp, #80]	@ 0x50
 802a552:	1bbe      	subs	r6, r7, r6
 802a554:	9413      	str	r4, [sp, #76]	@ 0x4c
 802a556:	f3c3 4907 	ubfx	r9, r3, #16, #8
 802a55a:	fb06 f40e 	mul.w	r4, r6, lr
 802a55e:	fb02 f909 	mul.w	r9, r2, r9
 802a562:	f3c3 2e07 	ubfx	lr, r3, #8, #8
 802a566:	fb02 fe0e 	mul.w	lr, r2, lr
 802a56a:	b2db      	uxtb	r3, r3
 802a56c:	fb02 4303 	mla	r3, r2, r3, r4
 802a570:	f3c0 4207 	ubfx	r2, r0, #16, #8
 802a574:	fb06 9902 	mla	r9, r6, r2, r9
 802a578:	f3c0 2007 	ubfx	r0, r0, #8, #8
 802a57c:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 802a57e:	fb06 e000 	mla	r0, r6, r0, lr
 802a582:	9e14      	ldr	r6, [sp, #80]	@ 0x50
 802a584:	443a      	add	r2, r7
 802a586:	1b94      	subs	r4, r2, r6
 802a588:	b2e4      	uxtb	r4, r4
 802a58a:	fbb9 f9f4 	udiv	r9, r9, r4
 802a58e:	fbb3 f3f4 	udiv	r3, r3, r4
 802a592:	fbb0 f0f4 	udiv	r0, r0, r4
 802a596:	ea4f 4909 	mov.w	r9, r9, lsl #16
 802a59a:	b2db      	uxtb	r3, r3
 802a59c:	f409 097f 	and.w	r9, r9, #16711680	@ 0xff0000
 802a5a0:	ea43 6304 	orr.w	r3, r3, r4, lsl #24
 802a5a4:	0200      	lsls	r0, r0, #8
 802a5a6:	ea43 0909 	orr.w	r9, r3, r9
 802a5aa:	b280      	uxth	r0, r0
 802a5ac:	ea49 0000 	orr.w	r0, r9, r0
 802a5b0:	f8cb 0000 	str.w	r0, [fp]
 802a5b4:	4561      	cmp	r1, ip
 802a5b6:	f10b 0b04 	add.w	fp, fp, #4
 802a5ba:	d01d      	beq.n	802a5f8 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x2d0>
 802a5bc:	2204      	movs	r2, #4
 802a5be:	186b      	adds	r3, r5, r1
 802a5c0:	7b5b      	ldrb	r3, [r3, #13]
 802a5c2:	3101      	adds	r1, #1
 802a5c4:	fb12 a303 	smlabb	r3, r2, r3, sl
 802a5c8:	f858 3003 	ldr.w	r3, [r8, r3]
 802a5cc:	b289      	uxth	r1, r1
 802a5ce:	0e1a      	lsrs	r2, r3, #24
 802a5d0:	d0f0      	beq.n	802a5b4 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x28c>
 802a5d2:	9804      	ldr	r0, [sp, #16]
 802a5d4:	fb00 f202 	mul.w	r2, r0, r2
 802a5d8:	1c50      	adds	r0, r2, #1
 802a5da:	eb00 2222 	add.w	r2, r0, r2, asr #8
 802a5de:	1212      	asrs	r2, r2, #8
 802a5e0:	2aff      	cmp	r2, #255	@ 0xff
 802a5e2:	d1a5      	bne.n	802a530 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x208>
 802a5e4:	f023 437f 	bic.w	r3, r3, #4278190080	@ 0xff000000
 802a5e8:	ea43 6202 	orr.w	r2, r3, r2, lsl #24
 802a5ec:	4561      	cmp	r1, ip
 802a5ee:	f8cb 2000 	str.w	r2, [fp]
 802a5f2:	f10b 0b04 	add.w	fp, fp, #4
 802a5f6:	d1e1      	bne.n	802a5bc <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x294>
 802a5f8:	e9dd 690b 	ldrd	r6, r9, [sp, #44]	@ 0x2c
 802a5fc:	e9dd ea0d 	ldrd	lr, sl, [sp, #52]	@ 0x34
 802a600:	9b06      	ldr	r3, [sp, #24]
 802a602:	45ca      	cmp	sl, r9
 802a604:	f103 33ff 	add.w	r3, r3, #4294967295
 802a608:	b29b      	uxth	r3, r3
 802a60a:	f103 0301 	add.w	r3, r3, #1
 802a60e:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 802a610:	eb06 0683 	add.w	r6, r6, r3, lsl #2
 802a614:	d257      	bcs.n	802a6c6 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x39e>
 802a616:	9b03      	ldr	r3, [sp, #12]
 802a618:	4661      	mov	r1, ip
 802a61a:	429e      	cmp	r6, r3
 802a61c:	f8dd a024 	ldr.w	sl, [sp, #36]	@ 0x24
 802a620:	f8dd 9044 	ldr.w	r9, [sp, #68]	@ 0x44
 802a624:	d313      	bcc.n	802a64e <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x326>
 802a626:	4b25      	ldr	r3, [pc, #148]	@ (802a6bc <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x394>)
 802a628:	6818      	ldr	r0, [r3, #0]
 802a62a:	6803      	ldr	r3, [r0, #0]
 802a62c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 802a62e:	4798      	blx	r3
 802a630:	b021      	add	sp, #132	@ 0x84
 802a632:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802a636:	ebaa 0a07 	sub.w	sl, sl, r7
 802a63a:	4439      	add	r1, r7
 802a63c:	2700      	movs	r7, #0
 802a63e:	f8bd 9020 	ldrh.w	r9, [sp, #32]
 802a642:	fa1f fa8a 	uxth.w	sl, sl
 802a646:	b289      	uxth	r1, r1
 802a648:	9b03      	ldr	r3, [sp, #12]
 802a64a:	429e      	cmp	r6, r3
 802a64c:	d2eb      	bcs.n	802a626 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x2fe>
 802a64e:	f1ba 0f00 	cmp.w	sl, #0
 802a652:	f47f af19 	bne.w	802a488 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x160>
 802a656:	e723      	b.n	802a4a0 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x178>
 802a658:	9b02      	ldr	r3, [sp, #8]
 802a65a:	4293      	cmp	r3, r2
 802a65c:	d852      	bhi.n	802a704 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x3dc>
 802a65e:	9805      	ldr	r0, [sp, #20]
 802a660:	7b69      	ldrb	r1, [r5, #13]
 802a662:	182b      	adds	r3, r5, r0
 802a664:	7359      	strb	r1, [r3, #13]
 802a666:	7b6b      	ldrb	r3, [r5, #13]
 802a668:	1c41      	adds	r1, r0, #1
 802a66a:	fa1f fa81 	uxth.w	sl, r1
 802a66e:	9c02      	ldr	r4, [sp, #8]
 802a670:	f8cd a014 	str.w	sl, [sp, #20]
 802a674:	eb05 0084 	add.w	r0, r5, r4, lsl #2
 802a678:	f104 0c01 	add.w	ip, r4, #1
 802a67c:	9c07      	ldr	r4, [sp, #28]
 802a67e:	f880 304e 	strb.w	r3, [r0, #78]	@ 0x4e
 802a682:	fa1f f38c 	uxth.w	r3, ip
 802a686:	f880 104f 	strb.w	r1, [r0, #79]	@ 0x4f
 802a68a:	f8a0 4050 	strh.w	r4, [r0, #80]	@ 0x50
 802a68e:	9302      	str	r3, [sp, #8]
 802a690:	9207      	str	r2, [sp, #28]
 802a692:	2100      	movs	r1, #0
 802a694:	e6f8      	b.n	802a488 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x160>
 802a696:	eba9 030a 	sub.w	r3, r9, sl
 802a69a:	b29b      	uxth	r3, r3
 802a69c:	9311      	str	r3, [sp, #68]	@ 0x44
 802a69e:	f1ba 0f00 	cmp.w	sl, #0
 802a6a2:	d06b      	beq.n	802a77c <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x454>
 802a6a4:	f8cd a018 	str.w	sl, [sp, #24]
 802a6a8:	9709      	str	r7, [sp, #36]	@ 0x24
 802a6aa:	4653      	mov	r3, sl
 802a6ac:	e732      	b.n	802a514 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x1ec>
 802a6ae:	4601      	mov	r1, r0
 802a6b0:	3102      	adds	r1, #2
 802a6b2:	f04f 0e00 	mov.w	lr, #0
 802a6b6:	9101      	str	r1, [sp, #4]
 802a6b8:	e70a      	b.n	802a4d0 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x1a8>
 802a6ba:	bf00      	nop
 802a6bc:	200830a4 	.word	0x200830a4
 802a6c0:	2008309e 	.word	0x2008309e
 802a6c4:	468c      	mov	ip, r1
 802a6c6:	4b31      	ldr	r3, [pc, #196]	@ (802a78c <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x464>)
 802a6c8:	9908      	ldr	r1, [sp, #32]
 802a6ca:	881b      	ldrh	r3, [r3, #0]
 802a6cc:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 802a6ce:	1a5b      	subs	r3, r3, r1
 802a6d0:	eb06 0683 	add.w	r6, r6, r3, lsl #2
 802a6d4:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 802a6d6:	3201      	adds	r2, #1
 802a6d8:	4293      	cmp	r3, r2
 802a6da:	9212      	str	r2, [sp, #72]	@ 0x48
 802a6dc:	d02d      	beq.n	802a73a <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x412>
 802a6de:	f8bd 9020 	ldrh.w	r9, [sp, #32]
 802a6e2:	f8bd 7074 	ldrh.w	r7, [sp, #116]	@ 0x74
 802a6e6:	4661      	mov	r1, ip
 802a6e8:	eba7 0709 	sub.w	r7, r7, r9
 802a6ec:	b2bf      	uxth	r7, r7
 802a6ee:	2f00      	cmp	r7, #0
 802a6f0:	f8dd a024 	ldr.w	sl, [sp, #36]	@ 0x24
 802a6f4:	bf14      	ite	ne
 802a6f6:	f04f 0900 	movne.w	r9, #0
 802a6fa:	2700      	moveq	r7, #0
 802a6fc:	e7a4      	b.n	802a648 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x320>
 802a6fe:	9905      	ldr	r1, [sp, #20]
 802a700:	3101      	adds	r1, #1
 802a702:	e7b4      	b.n	802a66e <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x346>
 802a704:	eb05 0382 	add.w	r3, r5, r2, lsl #2
 802a708:	f893 a04f 	ldrb.w	sl, [r3, #79]	@ 0x4f
 802a70c:	4613      	mov	r3, r2
 802a70e:	f1ba 0f01 	cmp.w	sl, #1
 802a712:	d90d      	bls.n	802a730 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x408>
 802a714:	f10a 010d 	add.w	r1, sl, #13
 802a718:	9c1b      	ldr	r4, [sp, #108]	@ 0x6c
 802a71a:	4429      	add	r1, r5
 802a71c:	eb05 0383 	add.w	r3, r5, r3, lsl #2
 802a720:	f893 004e 	ldrb.w	r0, [r3, #78]	@ 0x4e
 802a724:	f801 0d01 	strb.w	r0, [r1, #-1]!
 802a728:	428c      	cmp	r4, r1
 802a72a:	f8b3 3050 	ldrh.w	r3, [r3, #80]	@ 0x50
 802a72e:	d1f5      	bne.n	802a71c <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x3f4>
 802a730:	b2db      	uxtb	r3, r3
 802a732:	736b      	strb	r3, [r5, #13]
 802a734:	fa1f fa8a 	uxth.w	sl, sl
 802a738:	e6d2      	b.n	802a4e0 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x1b8>
 802a73a:	f8bd 3078 	ldrh.w	r3, [sp, #120]	@ 0x78
 802a73e:	f8bd 2070 	ldrh.w	r2, [sp, #112]	@ 0x70
 802a742:	9917      	ldr	r1, [sp, #92]	@ 0x5c
 802a744:	1a9b      	subs	r3, r3, r2
 802a746:	b29f      	uxth	r7, r3
 802a748:	2f00      	cmp	r7, #0
 802a74a:	9b08      	ldr	r3, [sp, #32]
 802a74c:	bf18      	it	ne
 802a74e:	2300      	movne	r3, #0
 802a750:	3101      	adds	r1, #1
 802a752:	46b4      	mov	ip, r6
 802a754:	46a9      	mov	r9, r5
 802a756:	9117      	str	r1, [sp, #92]	@ 0x5c
 802a758:	fa1f fb83 	uxth.w	fp, r3
 802a75c:	e65b      	b.n	802a416 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0xee>
 802a75e:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 802a762:	b289      	uxth	r1, r1
 802a764:	fb93 f3f1 	sdiv	r3, r3, r1
 802a768:	b29a      	uxth	r2, r3
 802a76a:	921a      	str	r2, [sp, #104]	@ 0x68
 802a76c:	e603      	b.n	802a376 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x4e>
 802a76e:	4b08      	ldr	r3, [pc, #32]	@ (802a790 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x468>)
 802a770:	4a08      	ldr	r2, [pc, #32]	@ (802a794 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x46c>)
 802a772:	f241 1181 	movw	r1, #4481	@ 0x1181
 802a776:	4808      	ldr	r0, [pc, #32]	@ (802a798 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x470>)
 802a778:	f007 fffe 	bl	8032778 <__assert_func>
 802a77c:	9b03      	ldr	r3, [sp, #12]
 802a77e:	429e      	cmp	r6, r3
 802a780:	f4bf af51 	bcs.w	802a626 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x2fe>
 802a784:	f8dd 9044 	ldr.w	r9, [sp, #68]	@ 0x44
 802a788:	e68a      	b.n	802a4a0 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x178>
 802a78a:	bf00      	nop
 802a78c:	2008309e 	.word	0x2008309e
 802a790:	08036654 	.word	0x08036654
 802a794:	0803803c 	.word	0x0803803c
 802a798:	08036560 	.word	0x08036560

0802a79c <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h>:
 802a79c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802a7a0:	7814      	ldrb	r4, [r2, #0]
 802a7a2:	7855      	ldrb	r5, [r2, #1]
 802a7a4:	2c01      	cmp	r4, #1
 802a7a6:	9e06      	ldr	r6, [sp, #24]
 802a7a8:	f89d 701c 	ldrb.w	r7, [sp, #28]
 802a7ac:	d013      	beq.n	802a7d6 <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x3a>
 802a7ae:	d304      	bcc.n	802a7ba <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x1e>
 802a7b0:	2c02      	cmp	r4, #2
 802a7b2:	f000 80ca 	beq.w	802a94a <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x1ae>
 802a7b6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802a7ba:	7b04      	ldrb	r4, [r0, #12]
 802a7bc:	2c01      	cmp	r4, #1
 802a7be:	d02d      	beq.n	802a81c <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x80>
 802a7c0:	d317      	bcc.n	802a7f2 <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x56>
 802a7c2:	2c02      	cmp	r4, #2
 802a7c4:	f040 80cf 	bne.w	802a966 <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x1ca>
 802a7c8:	2d03      	cmp	r5, #3
 802a7ca:	f200 80da 	bhi.w	802a982 <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x1e6>
 802a7ce:	e8df f005 	tbb	[pc, r5]
 802a7d2:	989e      	.short	0x989e
 802a7d4:	8c92      	.short	0x8c92
 802a7d6:	7b04      	ldrb	r4, [r0, #12]
 802a7d8:	2c01      	cmp	r4, #1
 802a7da:	d018      	beq.n	802a80e <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x72>
 802a7dc:	d310      	bcc.n	802a800 <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x64>
 802a7de:	2c02      	cmp	r4, #2
 802a7e0:	f040 80ba 	bne.w	802a958 <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x1bc>
 802a7e4:	2d03      	cmp	r5, #3
 802a7e6:	f200 80c5 	bhi.w	802a974 <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x1d8>
 802a7ea:	e8df f005 	tbb	[pc, r5]
 802a7ee:	a2a8      	.short	0xa2a8
 802a7f0:	969c      	.short	0x969c
 802a7f2:	2d03      	cmp	r5, #3
 802a7f4:	f200 80d3 	bhi.w	802a99e <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x202>
 802a7f8:	e8df f005 	tbb	[pc, r5]
 802a7fc:	5f656b71 	.word	0x5f656b71
 802a800:	2d03      	cmp	r5, #3
 802a802:	f200 80c5 	bhi.w	802a990 <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x1f4>
 802a806:	e8df f005 	tbb	[pc, r5]
 802a80a:	4c52      	.short	0x4c52
 802a80c:	4046      	.short	0x4046
 802a80e:	2d03      	cmp	r5, #3
 802a810:	f200 80d3 	bhi.w	802a9ba <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x21e>
 802a814:	e8df f005 	tbb	[pc, r5]
 802a818:	21272d33 	.word	0x21272d33
 802a81c:	2d03      	cmp	r5, #3
 802a81e:	f200 80c5 	bhi.w	802a9ac <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x210>
 802a822:	e8df f005 	tbb	[pc, r5]
 802a826:	0e14      	.short	0x0e14
 802a828:	0208      	.short	0x0208
 802a82a:	e9cd 6706 	strd	r6, r7, [sp, #24]
 802a82e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 802a832:	f7fd b8e3 	b.w	80279fc <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h>
 802a836:	e9cd 6706 	strd	r6, r7, [sp, #24]
 802a83a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 802a83e:	f7fc bead 	b.w	802759c <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h>
 802a842:	e9cd 6706 	strd	r6, r7, [sp, #24]
 802a846:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 802a84a:	f7fc bcad 	b.w	80271a8 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h>
 802a84e:	e9cd 6706 	strd	r6, r7, [sp, #24]
 802a852:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 802a856:	f7fc bb83 	b.w	8026f60 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h>
 802a85a:	e9cd 6706 	strd	r6, r7, [sp, #24]
 802a85e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 802a862:	f7fd bf9d 	b.w	80287a0 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h>
 802a866:	e9cd 6706 	strd	r6, r7, [sp, #24]
 802a86a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 802a86e:	f7fd be47 	b.w	8028500 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_24BPPEPKhS2_RKNS_4RectES5_h>
 802a872:	e9cd 6706 	strd	r6, r7, [sp, #24]
 802a876:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 802a87a:	f7fd bc13 	b.w	80280a4 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_24BPPEPKhS2_RKNS_4RectES5_h>
 802a87e:	e9cd 6706 	strd	r6, r7, [sp, #24]
 802a882:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 802a886:	f7fd badd 	b.w	8027e44 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_24BPPEPKhS2_RKNS_4RectES5_h>
 802a88a:	e9cd 6706 	strd	r6, r7, [sp, #24]
 802a88e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 802a892:	f7fc b93f 	b.w	8026b14 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h>
 802a896:	e9cd 6706 	strd	r6, r7, [sp, #24]
 802a89a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 802a89e:	f7fb bfd7 	b.w	8026850 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_16BPPEPKhS2_RKNS_4RectES5_h>
 802a8a2:	e9cd 6706 	strd	r6, r7, [sp, #24]
 802a8a6:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 802a8aa:	f7fb bd63 	b.w	8026374 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_16BPPEPKhS2_RKNS_4RectES5_h>
 802a8ae:	e9cd 6706 	strd	r6, r7, [sp, #24]
 802a8b2:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 802a8b6:	f7fb bc05 	b.w	80260c4 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h>
 802a8ba:	e9cd 6706 	strd	r6, r7, [sp, #24]
 802a8be:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 802a8c2:	f7fb b9a7 	b.w	8025c14 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h>
 802a8c6:	e9cd 6706 	strd	r6, r7, [sp, #24]
 802a8ca:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 802a8ce:	f7fa bfd3 	b.w	8025878 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h>
 802a8d2:	e9cd 6706 	strd	r6, r7, [sp, #24]
 802a8d6:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 802a8da:	f7fa bde7 	b.w	80254ac <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h>
 802a8de:	e9cd 6706 	strd	r6, r7, [sp, #24]
 802a8e2:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 802a8e6:	f7fa bc41 	b.w	802516c <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h>
 802a8ea:	e9cd 6706 	strd	r6, r7, [sp, #24]
 802a8ee:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 802a8f2:	f7ff bd19 	b.w	802a328 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h>
 802a8f6:	e9cd 6706 	strd	r6, r7, [sp, #24]
 802a8fa:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 802a8fe:	f7ff bb95 	b.w	802a02c <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h>
 802a902:	e9cd 6706 	strd	r6, r7, [sp, #24]
 802a906:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 802a90a:	f7ff ba05 	b.w	8029d18 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h>
 802a90e:	e9cd 6706 	strd	r6, r7, [sp, #24]
 802a912:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 802a916:	f7ff b871 	b.w	80299fc <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h>
 802a91a:	e9cd 6706 	strd	r6, r7, [sp, #24]
 802a91e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 802a922:	f7fe be1f 	b.w	8029564 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h>
 802a926:	e9cd 6706 	strd	r6, r7, [sp, #24]
 802a92a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 802a92e:	f7fe bcaf 	b.w	8029290 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h>
 802a932:	e9cd 6706 	strd	r6, r7, [sp, #24]
 802a936:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 802a93a:	f7fe ba8b 	b.w	8028e54 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h>
 802a93e:	e9cd 6706 	strd	r6, r7, [sp, #24]
 802a942:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 802a946:	f7fe b955 	b.w	8028bf4 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_32BPPEPKhS2_RKNS_4RectES5_h>
 802a94a:	4b1f      	ldr	r3, [pc, #124]	@ (802a9c8 <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x22c>)
 802a94c:	4a1f      	ldr	r2, [pc, #124]	@ (802a9cc <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x230>)
 802a94e:	f240 31f3 	movw	r1, #1011	@ 0x3f3
 802a952:	481f      	ldr	r0, [pc, #124]	@ (802a9d0 <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x234>)
 802a954:	f007 ff10 	bl	8032778 <__assert_func>
 802a958:	4b1e      	ldr	r3, [pc, #120]	@ (802a9d4 <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x238>)
 802a95a:	4a1c      	ldr	r2, [pc, #112]	@ (802a9cc <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x230>)
 802a95c:	f240 4179 	movw	r1, #1145	@ 0x479
 802a960:	481b      	ldr	r0, [pc, #108]	@ (802a9d0 <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x234>)
 802a962:	f007 ff09 	bl	8032778 <__assert_func>
 802a966:	4b1b      	ldr	r3, [pc, #108]	@ (802a9d4 <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x238>)
 802a968:	4a18      	ldr	r2, [pc, #96]	@ (802a9cc <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x230>)
 802a96a:	f240 4135 	movw	r1, #1077	@ 0x435
 802a96e:	4818      	ldr	r0, [pc, #96]	@ (802a9d0 <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x234>)
 802a970:	f007 ff02 	bl	8032778 <__assert_func>
 802a974:	4b18      	ldr	r3, [pc, #96]	@ (802a9d8 <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x23c>)
 802a976:	4a15      	ldr	r2, [pc, #84]	@ (802a9cc <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x230>)
 802a978:	f240 4174 	movw	r1, #1140	@ 0x474
 802a97c:	4814      	ldr	r0, [pc, #80]	@ (802a9d0 <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x234>)
 802a97e:	f007 fefb 	bl	8032778 <__assert_func>
 802a982:	4b15      	ldr	r3, [pc, #84]	@ (802a9d8 <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x23c>)
 802a984:	4a11      	ldr	r2, [pc, #68]	@ (802a9cc <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x230>)
 802a986:	f44f 6186 	mov.w	r1, #1072	@ 0x430
 802a98a:	4811      	ldr	r0, [pc, #68]	@ (802a9d0 <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x234>)
 802a98c:	f007 fef4 	bl	8032778 <__assert_func>
 802a990:	4b12      	ldr	r3, [pc, #72]	@ (802a9dc <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x240>)
 802a992:	4a0e      	ldr	r2, [pc, #56]	@ (802a9cc <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x230>)
 802a994:	f240 414c 	movw	r1, #1100	@ 0x44c
 802a998:	480d      	ldr	r0, [pc, #52]	@ (802a9d0 <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x234>)
 802a99a:	f007 feed 	bl	8032778 <__assert_func>
 802a99e:	4b0f      	ldr	r3, [pc, #60]	@ (802a9dc <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x240>)
 802a9a0:	4a0a      	ldr	r2, [pc, #40]	@ (802a9cc <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x230>)
 802a9a2:	f44f 6181 	mov.w	r1, #1032	@ 0x408
 802a9a6:	480a      	ldr	r0, [pc, #40]	@ (802a9d0 <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x234>)
 802a9a8:	f007 fee6 	bl	8032778 <__assert_func>
 802a9ac:	4b0c      	ldr	r3, [pc, #48]	@ (802a9e0 <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x244>)
 802a9ae:	4a07      	ldr	r2, [pc, #28]	@ (802a9cc <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x230>)
 802a9b0:	f240 411c 	movw	r1, #1052	@ 0x41c
 802a9b4:	4806      	ldr	r0, [pc, #24]	@ (802a9d0 <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x234>)
 802a9b6:	f007 fedf 	bl	8032778 <__assert_func>
 802a9ba:	4b09      	ldr	r3, [pc, #36]	@ (802a9e0 <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x244>)
 802a9bc:	4a03      	ldr	r2, [pc, #12]	@ (802a9cc <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x230>)
 802a9be:	f44f 618c 	mov.w	r1, #1120	@ 0x460
 802a9c2:	4803      	ldr	r0, [pc, #12]	@ (802a9d0 <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x234>)
 802a9c4:	f007 fed8 	bl	8032778 <__assert_func>
 802a9c8:	08036218 	.word	0x08036218
 802a9cc:	08036d68 	.word	0x08036d68
 802a9d0:	08036560 	.word	0x08036560
 802a9d4:	08036378 	.word	0x08036378
 802a9d8:	08036314 	.word	0x08036314
 802a9dc:	08036254 	.word	0x08036254
 802a9e0:	080362b4 	.word	0x080362b4

0802a9e4 <_ZN8touchgfx8LCDGPU2D17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb>:
 802a9e4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 802a9e8:	b089      	sub	sp, #36	@ 0x24
 802a9ea:	f89d 4044 	ldrb.w	r4, [sp, #68]	@ 0x44
 802a9ee:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 802a9f0:	b13c      	cbz	r4, 802aa02 <_ZN8touchgfx8LCDGPU2D17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1e>
 802a9f2:	f9b5 6004 	ldrsh.w	r6, [r5, #4]
 802a9f6:	2e00      	cmp	r6, #0
 802a9f8:	dd03      	ble.n	802aa02 <_ZN8touchgfx8LCDGPU2D17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1e>
 802a9fa:	f9b5 6006 	ldrsh.w	r6, [r5, #6]
 802a9fe:	2e00      	cmp	r6, #0
 802aa00:	dc02      	bgt.n	802aa08 <_ZN8touchgfx8LCDGPU2D17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x24>
 802aa02:	b009      	add	sp, #36	@ 0x24
 802aa04:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 802aa08:	f04f 0800 	mov.w	r8, #0
 802aa0c:	4606      	mov	r6, r0
 802aa0e:	f362 080f 	bfi	r8, r2, #0, #16
 802aa12:	4608      	mov	r0, r1
 802aa14:	460f      	mov	r7, r1
 802aa16:	f363 481f 	bfi	r8, r3, #16, #16
 802aa1a:	f7e5 fc0b 	bl	8010234 <_ZNK8touchgfx6Bitmap8getWidthEv>
 802aa1e:	4681      	mov	r9, r0
 802aa20:	4638      	mov	r0, r7
 802aa22:	f7e5 fc3b 	bl	801029c <_ZNK8touchgfx6Bitmap9getHeightEv>
 802aa26:	2300      	movs	r3, #0
 802aa28:	f369 030f 	bfi	r3, r9, #0, #16
 802aa2c:	f360 431f 	bfi	r3, r0, #16, #16
 802aa30:	4638      	mov	r0, r7
 802aa32:	e9cd 8302 	strd	r8, r3, [sp, #8]
 802aa36:	f7e5 fd3b 	bl	80104b0 <_ZNK8touchgfx6Bitmap9getFormatEv>
 802aa3a:	280b      	cmp	r0, #11
 802aa3c:	d024      	beq.n	802aa88 <_ZN8touchgfx8LCDGPU2D17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xa4>
 802aa3e:	aa04      	add	r2, sp, #16
 802aa40:	f10d 0808 	add.w	r8, sp, #8
 802aa44:	e898 0003 	ldmia.w	r8, {r0, r1}
 802aa48:	e882 0003 	stmia.w	r2, {r0, r1}
 802aa4c:	6828      	ldr	r0, [r5, #0]
 802aa4e:	6869      	ldr	r1, [r5, #4]
 802aa50:	ab06      	add	r3, sp, #24
 802aa52:	c303      	stmia	r3!, {r0, r1}
 802aa54:	4610      	mov	r0, r2
 802aa56:	f7e2 fab3 	bl	800cfc0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 802aa5a:	4641      	mov	r1, r8
 802aa5c:	a806      	add	r0, sp, #24
 802aa5e:	f7e2 fad7 	bl	800d010 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 802aa62:	4638      	mov	r0, r7
 802aa64:	f7e5 fca0 	bl	80103a8 <_ZNK8touchgfx6Bitmap7getDataEv>
 802aa68:	4680      	mov	r8, r0
 802aa6a:	4638      	mov	r0, r7
 802aa6c:	f7e5 fd20 	bl	80104b0 <_ZNK8touchgfx6Bitmap9getFormatEv>
 802aa70:	280d      	cmp	r0, #13
 802aa72:	f200 8083 	bhi.w	802ab7c <_ZN8touchgfx8LCDGPU2D17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x198>
 802aa76:	e8df f000 	tbb	[pc, r0]
 802aa7a:	6467      	.short	0x6467
 802aa7c:	81818117 	.word	0x81818117
 802aa80:	81818181 	.word	0x81818181
 802aa84:	6a818181 	.word	0x6a818181
 802aa88:	4638      	mov	r0, r7
 802aa8a:	f7e5 fc8d 	bl	80103a8 <_ZNK8touchgfx6Bitmap7getDataEv>
 802aa8e:	4680      	mov	r8, r0
 802aa90:	4638      	mov	r0, r7
 802aa92:	f7e5 fcb9 	bl	8010408 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 802aa96:	4641      	mov	r1, r8
 802aa98:	4602      	mov	r2, r0
 802aa9a:	e9cd 5400 	strd	r5, r4, [sp]
 802aa9e:	4630      	mov	r0, r6
 802aaa0:	ab02      	add	r3, sp, #8
 802aaa2:	f7ff fe7b 	bl	802a79c <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h>
 802aaa6:	e7ac      	b.n	802aa02 <_ZN8touchgfx8LCDGPU2D17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1e>
 802aaa8:	f04f 0910 	mov.w	r9, #16
 802aaac:	f8bd 2018 	ldrh.w	r2, [sp, #24]
 802aab0:	f8bd 1010 	ldrh.w	r1, [sp, #16]
 802aab4:	4d37      	ldr	r5, [pc, #220]	@ (802ab94 <_ZN8touchgfx8LCDGPU2D17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1b0>)
 802aab6:	f8bd 301a 	ldrh.w	r3, [sp, #26]
 802aaba:	440a      	add	r2, r1
 802aabc:	f8bd 1012 	ldrh.w	r1, [sp, #18]
 802aac0:	6828      	ldr	r0, [r5, #0]
 802aac2:	440b      	add	r3, r1
 802aac4:	f8ad 2018 	strh.w	r2, [sp, #24]
 802aac8:	f8ad 301a 	strh.w	r3, [sp, #26]
 802aacc:	2800      	cmp	r0, #0
 802aace:	d05b      	beq.n	802ab88 <_ZN8touchgfx8LCDGPU2D17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1a4>
 802aad0:	f7f6 f9c2 	bl	8020e58 <_ZN8touchgfx8HALGPU2D14bindExecBufferEv>
 802aad4:	6833      	ldr	r3, [r6, #0]
 802aad6:	4630      	mov	r0, r6
 802aad8:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 802aada:	4798      	blx	r3
 802aadc:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 802aae0:	f9bd 201c 	ldrsh.w	r2, [sp, #28]
 802aae4:	f9bd 101a 	ldrsh.w	r1, [sp, #26]
 802aae8:	f9bd 0018 	ldrsh.w	r0, [sp, #24]
 802aaec:	f7e6 fa3c 	bl	8010f68 <nema_set_clip>
 802aaf0:	2200      	movs	r2, #0
 802aaf2:	4623      	mov	r3, r4
 802aaf4:	4611      	mov	r1, r2
 802aaf6:	4610      	mov	r0, r2
 802aaf8:	f7e6 fb14 	bl	8011124 <nema_rgba>
 802aafc:	f7f3 ff96 	bl	801ea2c <nema_set_const_color>
 802ab00:	2cff      	cmp	r4, #255	@ 0xff
 802ab02:	d02a      	beq.n	802ab5a <_ZN8touchgfx8LCDGPU2D17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x176>
 802ab04:	f04f 33ff 	mov.w	r3, #4294967295
 802ab08:	2201      	movs	r2, #1
 802ab0a:	2100      	movs	r1, #0
 802ab0c:	4822      	ldr	r0, [pc, #136]	@ (802ab98 <_ZN8touchgfx8LCDGPU2D17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1b4>)
 802ab0e:	f7f3 fbc7 	bl	801e2a0 <nema_set_blend>
 802ab12:	2100      	movs	r1, #0
 802ab14:	f04f 34ff 	mov.w	r4, #4294967295
 802ab18:	f9bd 2016 	ldrsh.w	r2, [sp, #22]
 802ab1c:	464b      	mov	r3, r9
 802ab1e:	4640      	mov	r0, r8
 802ab20:	9101      	str	r1, [sp, #4]
 802ab22:	9400      	str	r4, [sp, #0]
 802ab24:	f9bd 1014 	ldrsh.w	r1, [sp, #20]
 802ab28:	f7e6 fb04 	bl	8011134 <nema_bind_src_tex>
 802ab2c:	f9bd 0010 	ldrsh.w	r0, [sp, #16]
 802ab30:	f9bd 1012 	ldrsh.w	r1, [sp, #18]
 802ab34:	f7e6 fd58 	bl	80115e8 <nema_blit>
 802ab38:	6828      	ldr	r0, [r5, #0]
 802ab3a:	b328      	cbz	r0, 802ab88 <_ZN8touchgfx8LCDGPU2D17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1a4>
 802ab3c:	f7f6 f9ac 	bl	8020e98 <_ZN8touchgfx8HALGPU2D16submitExecBufferEv>
 802ab40:	e75f      	b.n	802aa02 <_ZN8touchgfx8LCDGPU2D17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1e>
 802ab42:	f04f 0939 	mov.w	r9, #57	@ 0x39
 802ab46:	e7b1      	b.n	802aaac <_ZN8touchgfx8LCDGPU2D17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xc8>
 802ab48:	f04f 0904 	mov.w	r9, #4
 802ab4c:	e7ae      	b.n	802aaac <_ZN8touchgfx8LCDGPU2D17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xc8>
 802ab4e:	4638      	mov	r0, r7
 802ab50:	f7e5 fc5a 	bl	8010408 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 802ab54:	f890 9000 	ldrb.w	r9, [r0]
 802ab58:	e7a8      	b.n	802aaac <_ZN8touchgfx8LCDGPU2D17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xc8>
 802ab5a:	4638      	mov	r0, r7
 802ab5c:	f7e5 fca8 	bl	80104b0 <_ZNK8touchgfx6Bitmap9getFormatEv>
 802ab60:	b120      	cbz	r0, 802ab6c <_ZN8touchgfx8LCDGPU2D17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x188>
 802ab62:	4638      	mov	r0, r7
 802ab64:	f7e5 fca4 	bl	80104b0 <_ZNK8touchgfx6Bitmap9getFormatEv>
 802ab68:	2801      	cmp	r0, #1
 802ab6a:	d1cb      	bne.n	802ab04 <_ZN8touchgfx8LCDGPU2D17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x120>
 802ab6c:	2201      	movs	r2, #1
 802ab6e:	f04f 33ff 	mov.w	r3, #4294967295
 802ab72:	4610      	mov	r0, r2
 802ab74:	2100      	movs	r1, #0
 802ab76:	f7f3 fb93 	bl	801e2a0 <nema_set_blend>
 802ab7a:	e7ca      	b.n	802ab12 <_ZN8touchgfx8LCDGPU2D17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x12e>
 802ab7c:	4b07      	ldr	r3, [pc, #28]	@ (802ab9c <_ZN8touchgfx8LCDGPU2D17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1b8>)
 802ab7e:	4a08      	ldr	r2, [pc, #32]	@ (802aba0 <_ZN8touchgfx8LCDGPU2D17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1bc>)
 802ab80:	2175      	movs	r1, #117	@ 0x75
 802ab82:	4808      	ldr	r0, [pc, #32]	@ (802aba4 <_ZN8touchgfx8LCDGPU2D17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1c0>)
 802ab84:	f007 fdf8 	bl	8032778 <__assert_func>
 802ab88:	4b07      	ldr	r3, [pc, #28]	@ (802aba8 <_ZN8touchgfx8LCDGPU2D17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1c4>)
 802ab8a:	4a08      	ldr	r2, [pc, #32]	@ (802abac <_ZN8touchgfx8LCDGPU2D17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1c8>)
 802ab8c:	217c      	movs	r1, #124	@ 0x7c
 802ab8e:	4808      	ldr	r0, [pc, #32]	@ (802abb0 <_ZN8touchgfx8LCDGPU2D17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1cc>)
 802ab90:	f007 fdf2 	bl	8032778 <__assert_func>
 802ab94:	20083544 	.word	0x20083544
 802ab98:	08000504 	.word	0x08000504
 802ab9c:	080363b4 	.word	0x080363b4
 802aba0:	08036e5c 	.word	0x08036e5c
 802aba4:	08036560 	.word	0x08036560
 802aba8:	080364bc 	.word	0x080364bc
 802abac:	08036d28 	.word	0x08036d28
 802abb0:	080364e4 	.word	0x080364e4

0802abb4 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>:
 802abb4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802abb8:	b089      	sub	sp, #36	@ 0x24
 802abba:	9f15      	ldr	r7, [sp, #84]	@ 0x54
 802abbc:	9e14      	ldr	r6, [sp, #80]	@ 0x50
 802abbe:	f9bd 4048 	ldrsh.w	r4, [sp, #72]	@ 0x48
 802abc2:	9104      	str	r1, [sp, #16]
 802abc4:	8809      	ldrh	r1, [r1, #0]
 802abc6:	fb07 6c04 	mla	ip, r7, r4, r6
 802abca:	10c8      	asrs	r0, r1, #3
 802abcc:	120d      	asrs	r5, r1, #8
 802abce:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 802abd2:	f005 0af8 	and.w	sl, r5, #248	@ 0xf8
 802abd6:	9002      	str	r0, [sp, #8]
 802abd8:	00c9      	lsls	r1, r1, #3
 802abda:	0200      	lsls	r0, r0, #8
 802abdc:	b2c9      	uxtb	r1, r1
 802abde:	4690      	mov	r8, r2
 802abe0:	ea40 400a 	orr.w	r0, r0, sl, lsl #16
 802abe4:	469e      	mov	lr, r3
 802abe6:	eb02 030c 	add.w	r3, r2, ip
 802abea:	f89d 2060 	ldrb.w	r2, [sp, #96]	@ 0x60
 802abee:	4308      	orrs	r0, r1
 802abf0:	2f00      	cmp	r7, #0
 802abf2:	9103      	str	r1, [sp, #12]
 802abf4:	9305      	str	r3, [sp, #20]
 802abf6:	9007      	str	r0, [sp, #28]
 802abf8:	f107 0501 	add.w	r5, r7, #1
 802abfc:	f9bd 604c 	ldrsh.w	r6, [sp, #76]	@ 0x4c
 802ac00:	f89d 3058 	ldrb.w	r3, [sp, #88]	@ 0x58
 802ac04:	f89d 105c 	ldrb.w	r1, [sp, #92]	@ 0x5c
 802ac08:	9200      	str	r2, [sp, #0]
 802ac0a:	db02      	blt.n	802ac12 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x5e>
 802ac0c:	42be      	cmp	r6, r7
 802ac0e:	f300 80a3 	bgt.w	802ad58 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1a4>
 802ac12:	fa5f fb80 	uxtb.w	fp, r0
 802ac16:	af07      	add	r7, sp, #28
 802ac18:	465a      	mov	r2, fp
 802ac1a:	46b8      	mov	r8, r7
 802ac1c:	2d00      	cmp	r5, #0
 802ac1e:	db01      	blt.n	802ac24 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x70>
 802ac20:	42ae      	cmp	r6, r5
 802ac22:	dc79      	bgt.n	802ad18 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x164>
 802ac24:	f10d 0e1c 	add.w	lr, sp, #28
 802ac28:	46f1      	mov	r9, lr
 802ac2a:	b2c0      	uxtb	r0, r0
 802ac2c:	9001      	str	r0, [sp, #4]
 802ac2e:	2b0f      	cmp	r3, #15
 802ac30:	f200 80ce 	bhi.w	802add0 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x21c>
 802ac34:	290f      	cmp	r1, #15
 802ac36:	f200 80cb 	bhi.w	802add0 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x21c>
 802ac3a:	9c00      	ldr	r4, [sp, #0]
 802ac3c:	b29b      	uxth	r3, r3
 802ac3e:	43e4      	mvns	r4, r4
 802ac40:	b289      	uxth	r1, r1
 802ac42:	fb03 f501 	mul.w	r5, r3, r1
 802ac46:	011b      	lsls	r3, r3, #4
 802ac48:	1b5e      	subs	r6, r3, r5
 802ac4a:	b2b6      	uxth	r6, r6
 802ac4c:	f897 c002 	ldrb.w	ip, [r7, #2]
 802ac50:	ebc5 1101 	rsb	r1, r5, r1, lsl #4
 802ac54:	787f      	ldrb	r7, [r7, #1]
 802ac56:	fb06 f202 	mul.w	r2, r6, r2
 802ac5a:	b289      	uxth	r1, r1
 802ac5c:	f5c3 7380 	rsb	r3, r3, #256	@ 0x100
 802ac60:	fb06 fc0c 	mul.w	ip, r6, ip
 802ac64:	1a5b      	subs	r3, r3, r1
 802ac66:	fb06 f607 	mul.w	r6, r6, r7
 802ac6a:	b29b      	uxth	r3, r3
 802ac6c:	f898 7001 	ldrb.w	r7, [r8, #1]
 802ac70:	fb03 220b 	mla	r2, r3, fp, r2
 802ac74:	f898 b002 	ldrb.w	fp, [r8, #2]
 802ac78:	fb03 6607 	mla	r6, r3, r7, r6
 802ac7c:	fb03 cc0b 	mla	ip, r3, fp, ip
 802ac80:	f899 8002 	ldrb.w	r8, [r9, #2]
 802ac84:	f899 7001 	ldrb.w	r7, [r9, #1]
 802ac88:	9b01      	ldr	r3, [sp, #4]
 802ac8a:	fb01 cc08 	mla	ip, r1, r8, ip
 802ac8e:	fb01 2203 	mla	r2, r1, r3, r2
 802ac92:	fb01 6607 	mla	r6, r1, r7, r6
 802ac96:	f89e 8002 	ldrb.w	r8, [lr, #2]
 802ac9a:	f89e 7001 	ldrb.w	r7, [lr, #1]
 802ac9e:	9b03      	ldr	r3, [sp, #12]
 802aca0:	9902      	ldr	r1, [sp, #8]
 802aca2:	fb05 2200 	mla	r2, r5, r0, r2
 802aca6:	b2e4      	uxtb	r4, r4
 802aca8:	fb05 cc08 	mla	ip, r5, r8, ip
 802acac:	fb05 6607 	mla	r6, r5, r7, r6
 802acb0:	fb13 f004 	smulbb	r0, r3, r4
 802acb4:	fb1a f304 	smulbb	r3, sl, r4
 802acb8:	fb11 f404 	smulbb	r4, r1, r4
 802acbc:	f8bd e000 	ldrh.w	lr, [sp]
 802acc0:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 802acc4:	f3c6 2607 	ubfx	r6, r6, #8, #8
 802acc8:	f3c2 2207 	ubfx	r2, r2, #8, #8
 802accc:	fb02 020e 	mla	r2, r2, lr, r0
 802acd0:	fb0c 330e 	mla	r3, ip, lr, r3
 802acd4:	fb06 4e0e 	mla	lr, r6, lr, r4
 802acd8:	fa1f fc83 	uxth.w	ip, r3
 802acdc:	b292      	uxth	r2, r2
 802acde:	fa1f fe8e 	uxth.w	lr, lr
 802ace2:	f10c 0301 	add.w	r3, ip, #1
 802ace6:	1c50      	adds	r0, r2, #1
 802ace8:	f10e 0101 	add.w	r1, lr, #1
 802acec:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 802acf0:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 802acf4:	eb01 2e1e 	add.w	lr, r1, lr, lsr #8
 802acf8:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 802acfc:	f403 4378 	and.w	r3, r3, #63488	@ 0xf800
 802ad00:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 802ad04:	4313      	orrs	r3, r2
 802ad06:	f40e 6efc 	and.w	lr, lr, #2016	@ 0x7e0
 802ad0a:	9a04      	ldr	r2, [sp, #16]
 802ad0c:	ea43 030e 	orr.w	r3, r3, lr
 802ad10:	8013      	strh	r3, [r2, #0]
 802ad12:	b009      	add	sp, #36	@ 0x24
 802ad14:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802ad18:	2900      	cmp	r1, #0
 802ad1a:	d036      	beq.n	802ad8a <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d6>
 802ad1c:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 802ad1e:	2d00      	cmp	r5, #0
 802ad20:	db45      	blt.n	802adae <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1fa>
 802ad22:	42ac      	cmp	r4, r5
 802ad24:	dd43      	ble.n	802adae <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1fa>
 802ad26:	9d05      	ldr	r5, [sp, #20]
 802ad28:	f815 9004 	ldrb.w	r9, [r5, r4]
 802ad2c:	eb09 0949 	add.w	r9, r9, r9, lsl #1
 802ad30:	44f1      	add	r9, lr
 802ad32:	f899 5000 	ldrb.w	r5, [r9]
 802ad36:	9501      	str	r5, [sp, #4]
 802ad38:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 802ad3a:	3501      	adds	r5, #1
 802ad3c:	d433      	bmi.n	802ada6 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1f2>
 802ad3e:	42ac      	cmp	r4, r5
 802ad40:	dd31      	ble.n	802ada6 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1f2>
 802ad42:	2b00      	cmp	r3, #0
 802ad44:	d040      	beq.n	802adc8 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x214>
 802ad46:	9805      	ldr	r0, [sp, #20]
 802ad48:	4420      	add	r0, r4
 802ad4a:	7840      	ldrb	r0, [r0, #1]
 802ad4c:	eb00 0440 	add.w	r4, r0, r0, lsl #1
 802ad50:	f81e 0004 	ldrb.w	r0, [lr, r4]
 802ad54:	44a6      	add	lr, r4
 802ad56:	e76a      	b.n	802ac2e <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x7a>
 802ad58:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 802ad5a:	2a00      	cmp	r2, #0
 802ad5c:	db01      	blt.n	802ad62 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ae>
 802ad5e:	4294      	cmp	r4, r2
 802ad60:	dc1b      	bgt.n	802ad9a <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1e6>
 802ad62:	f10d 081c 	add.w	r8, sp, #28
 802ad66:	3201      	adds	r2, #1
 802ad68:	f898 b000 	ldrb.w	fp, [r8]
 802ad6c:	d40a      	bmi.n	802ad84 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d0>
 802ad6e:	4294      	cmp	r4, r2
 802ad70:	dd08      	ble.n	802ad84 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d0>
 802ad72:	b1fb      	cbz	r3, 802adb4 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x200>
 802ad74:	9a05      	ldr	r2, [sp, #20]
 802ad76:	7857      	ldrb	r7, [r2, #1]
 802ad78:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 802ad7c:	f81e 2007 	ldrb.w	r2, [lr, r7]
 802ad80:	4477      	add	r7, lr
 802ad82:	e74b      	b.n	802ac1c <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x68>
 802ad84:	b2c2      	uxtb	r2, r0
 802ad86:	af07      	add	r7, sp, #28
 802ad88:	e748      	b.n	802ac1c <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x68>
 802ad8a:	b2c0      	uxtb	r0, r0
 802ad8c:	2b0f      	cmp	r3, #15
 802ad8e:	9001      	str	r0, [sp, #4]
 802ad90:	d81e      	bhi.n	802add0 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x21c>
 802ad92:	f10d 0e1c 	add.w	lr, sp, #28
 802ad96:	46f1      	mov	r9, lr
 802ad98:	e74f      	b.n	802ac3a <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x86>
 802ad9a:	f818 800c 	ldrb.w	r8, [r8, ip]
 802ad9e:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 802ada2:	44f0      	add	r8, lr
 802ada4:	e7df      	b.n	802ad66 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1b2>
 802ada6:	b2c0      	uxtb	r0, r0
 802ada8:	f10d 0e1c 	add.w	lr, sp, #28
 802adac:	e73f      	b.n	802ac2e <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x7a>
 802adae:	f10d 091c 	add.w	r9, sp, #28
 802adb2:	e7be      	b.n	802ad32 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x17e>
 802adb4:	2d00      	cmp	r5, #0
 802adb6:	b2c2      	uxtb	r2, r0
 802adb8:	af07      	add	r7, sp, #28
 802adba:	f6bf af31 	bge.w	802ac20 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x6c>
 802adbe:	46be      	mov	lr, r7
 802adc0:	46b9      	mov	r9, r7
 802adc2:	4610      	mov	r0, r2
 802adc4:	9201      	str	r2, [sp, #4]
 802adc6:	e735      	b.n	802ac34 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x80>
 802adc8:	b2c0      	uxtb	r0, r0
 802adca:	f10d 0e1c 	add.w	lr, sp, #28
 802adce:	e731      	b.n	802ac34 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x80>
 802add0:	4b03      	ldr	r3, [pc, #12]	@ (802ade0 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x22c>)
 802add2:	4a04      	ldr	r2, [pc, #16]	@ (802ade4 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x230>)
 802add4:	f240 31ca 	movw	r1, #970	@ 0x3ca
 802add8:	4803      	ldr	r0, [pc, #12]	@ (802ade8 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x234>)
 802adda:	f007 fccd 	bl	8032778 <__assert_func>
 802adde:	bf00      	nop
 802ade0:	08036954 	.word	0x08036954
 802ade4:	08036fd0 	.word	0x08036fd0
 802ade8:	08036adc 	.word	0x08036adc

0802adec <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 802adec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802adf0:	ed2d 8b08 	vpush	{d8-d11}
 802adf4:	b095      	sub	sp, #84	@ 0x54
 802adf6:	e9cd 120e 	strd	r1, r2, [sp, #56]	@ 0x38
 802adfa:	e9dd 512b 	ldrd	r5, r1, [sp, #172]	@ 0xac
 802adfe:	e9dd b827 	ldrd	fp, r8, [sp, #156]	@ 0x9c
 802ae02:	686c      	ldr	r4, [r5, #4]
 802ae04:	461a      	mov	r2, r3
 802ae06:	9b2d      	ldr	r3, [sp, #180]	@ 0xb4
 802ae08:	f89d 60bc 	ldrb.w	r6, [sp, #188]	@ 0xbc
 802ae0c:	fb04 1303 	mla	r3, r4, r3, r1
 802ae10:	682c      	ldr	r4, [r5, #0]
 802ae12:	e9cd 0612 	strd	r0, r6, [sp, #72]	@ 0x48
 802ae16:	43f0      	mvns	r0, r6
 802ae18:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 802ae1c:	eeb0 aa40 	vmov.f32	s20, s0
 802ae20:	eef0 9a60 	vmov.f32	s19, s1
 802ae24:	eeb0 9a41 	vmov.f32	s18, s2
 802ae28:	eef0 8a62 	vmov.f32	s17, s5
 802ae2c:	eeb0 8a43 	vmov.f32	s16, s6
 802ae30:	eef0 ba44 	vmov.f32	s23, s8
 802ae34:	eeb0 ba64 	vmov.f32	s22, s9
 802ae38:	eef0 aa45 	vmov.f32	s21, s10
 802ae3c:	469a      	mov	sl, r3
 802ae3e:	992e      	ldr	r1, [sp, #184]	@ 0xb8
 802ae40:	9d2e      	ldr	r5, [sp, #184]	@ 0xb8
 802ae42:	6849      	ldr	r1, [r1, #4]
 802ae44:	682d      	ldr	r5, [r5, #0]
 802ae46:	3104      	adds	r1, #4
 802ae48:	b2c0      	uxtb	r0, r0
 802ae4a:	9108      	str	r1, [sp, #32]
 802ae4c:	b2b1      	uxth	r1, r6
 802ae4e:	950b      	str	r5, [sp, #44]	@ 0x2c
 802ae50:	900c      	str	r0, [sp, #48]	@ 0x30
 802ae52:	910d      	str	r1, [sp, #52]	@ 0x34
 802ae54:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 802ae56:	2b00      	cmp	r3, #0
 802ae58:	dc02      	bgt.n	802ae60 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 802ae5a:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 802ae5c:	2b00      	cmp	r3, #0
 802ae5e:	dd65      	ble.n	802af2c <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x140>
 802ae60:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
 802ae62:	2a00      	cmp	r2, #0
 802ae64:	e9d3 4e02 	ldrd	r4, lr, [r3, #8]
 802ae68:	b225      	sxth	r5, r4
 802ae6a:	fa0f f78e 	sxth.w	r7, lr
 802ae6e:	f340 8233 	ble.w	802b2d8 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ec>
 802ae72:	1e6e      	subs	r6, r5, #1
 802ae74:	f107 3cff 	add.w	ip, r7, #4294967295
 802ae78:	f8cd e024 	str.w	lr, [sp, #36]	@ 0x24
 802ae7c:	e9dd e929 	ldrd	lr, r9, [sp, #164]	@ 0xa4
 802ae80:	ea5f 432b 	movs.w	r3, fp, asr #16
 802ae84:	ea4f 4128 	mov.w	r1, r8, asr #16
 802ae88:	d405      	bmi.n	802ae96 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 802ae8a:	42b3      	cmp	r3, r6
 802ae8c:	da03      	bge.n	802ae96 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 802ae8e:	2900      	cmp	r1, #0
 802ae90:	db01      	blt.n	802ae96 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 802ae92:	4561      	cmp	r1, ip
 802ae94:	db4f      	blt.n	802af36 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 802ae96:	1c58      	adds	r0, r3, #1
 802ae98:	d406      	bmi.n	802aea8 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xbc>
 802ae9a:	42a8      	cmp	r0, r5
 802ae9c:	dc04      	bgt.n	802aea8 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xbc>
 802ae9e:	1c48      	adds	r0, r1, #1
 802aea0:	d402      	bmi.n	802aea8 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xbc>
 802aea2:	42b8      	cmp	r0, r7
 802aea4:	f340 817e 	ble.w	802b1a4 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b8>
 802aea8:	3a01      	subs	r2, #1
 802aeaa:	44f3      	add	fp, lr
 802aeac:	44c8      	add	r8, r9
 802aeae:	f10a 0a02 	add.w	sl, sl, #2
 802aeb2:	d1e5      	bne.n	802ae80 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 802aeb4:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 802aeb6:	2b00      	cmp	r3, #0
 802aeb8:	dd38      	ble.n	802af2c <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x140>
 802aeba:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 802aebe:	ee3a aa2b 	vadd.f32	s20, s20, s23
 802aec2:	ee79 9a8b 	vadd.f32	s19, s19, s22
 802aec6:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 802aeca:	ee39 9a2a 	vadd.f32	s18, s18, s21
 802aece:	ee29 6aa7 	vmul.f32	s12, s19, s15
 802aed2:	ee69 7a27 	vmul.f32	s15, s18, s15
 802aed6:	ee76 6a68 	vsub.f32	s13, s12, s17
 802aeda:	ee37 7ac8 	vsub.f32	s14, s15, s16
 802aede:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802aee2:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 802aee6:	ee16 2a90 	vmov	r2, s13
 802aeea:	3b01      	subs	r3, #1
 802aeec:	930e      	str	r3, [sp, #56]	@ 0x38
 802aeee:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 802aef0:	fb92 f3f3 	sdiv	r3, r2, r3
 802aef4:	ee17 2a10 	vmov	r2, s14
 802aef8:	eeb0 7a48 	vmov.f32	s14, s16
 802aefc:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 802af00:	ee17 8a10 	vmov	r8, s14
 802af04:	eeb0 7a68 	vmov.f32	s14, s17
 802af08:	9329      	str	r3, [sp, #164]	@ 0xa4
 802af0a:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 802af0c:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 802af10:	fb92 f3f3 	sdiv	r3, r2, r3
 802af14:	932a      	str	r3, [sp, #168]	@ 0xa8
 802af16:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 802af18:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 802af1a:	ee17 ba10 	vmov	fp, s14
 802af1e:	eeb0 8a67 	vmov.f32	s16, s15
 802af22:	eef0 8a46 	vmov.f32	s17, s12
 802af26:	bf18      	it	ne
 802af28:	461a      	movne	r2, r3
 802af2a:	e793      	b.n	802ae54 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 802af2c:	b015      	add	sp, #84	@ 0x54
 802af2e:	ecbd 8b08 	vpop	{d8-d11}
 802af32:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802af36:	46d4      	mov	ip, sl
 802af38:	f8dd e024 	ldr.w	lr, [sp, #36]	@ 0x24
 802af3c:	9829      	ldr	r0, [sp, #164]	@ 0xa4
 802af3e:	1e51      	subs	r1, r2, #1
 802af40:	fb00 b301 	mla	r3, r0, r1, fp
 802af44:	141b      	asrs	r3, r3, #16
 802af46:	910a      	str	r1, [sp, #40]	@ 0x28
 802af48:	f100 80cc 	bmi.w	802b0e4 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f8>
 802af4c:	42b3      	cmp	r3, r6
 802af4e:	f280 80c9 	bge.w	802b0e4 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f8>
 802af52:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 802af54:	fb03 8301 	mla	r3, r3, r1, r8
 802af58:	141b      	asrs	r3, r3, #16
 802af5a:	f100 80c3 	bmi.w	802b0e4 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f8>
 802af5e:	3f01      	subs	r7, #1
 802af60:	42bb      	cmp	r3, r7
 802af62:	f280 80bf 	bge.w	802b0e4 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f8>
 802af66:	2a00      	cmp	r2, #0
 802af68:	dda4      	ble.n	802aeb4 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xc8>
 802af6a:	eb0a 0a42 	add.w	sl, sl, r2, lsl #1
 802af6e:	e9cd ca09 	strd	ip, sl, [sp, #36]	@ 0x24
 802af72:	e08e      	b.n	802b092 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
 802af74:	f891 c001 	ldrb.w	ip, [r1, #1]
 802af78:	194c      	adds	r4, r1, r5
 802af7a:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 802af7e:	44bc      	add	ip, r7
 802af80:	2a00      	cmp	r2, #0
 802af82:	f000 80a6 	beq.w	802b0d2 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 802af86:	5d48      	ldrb	r0, [r1, r5]
 802af88:	7865      	ldrb	r5, [r4, #1]
 802af8a:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 802af8e:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 802af92:	4438      	add	r0, r7
 802af94:	443d      	add	r5, r7
 802af96:	b29b      	uxth	r3, r3
 802af98:	b292      	uxth	r2, r2
 802af9a:	fb03 f402 	mul.w	r4, r3, r2
 802af9e:	011b      	lsls	r3, r3, #4
 802afa0:	1b19      	subs	r1, r3, r4
 802afa2:	f89c 9000 	ldrb.w	r9, [ip]
 802afa6:	f89c e002 	ldrb.w	lr, [ip, #2]
 802afaa:	b289      	uxth	r1, r1
 802afac:	f89c c001 	ldrb.w	ip, [ip, #1]
 802afb0:	ebc4 1202 	rsb	r2, r4, r2, lsl #4
 802afb4:	fb01 f909 	mul.w	r9, r1, r9
 802afb8:	b292      	uxth	r2, r2
 802afba:	fb01 fe0e 	mul.w	lr, r1, lr
 802afbe:	f5c3 7380 	rsb	r3, r3, #256	@ 0x100
 802afc2:	fb01 f10c 	mul.w	r1, r1, ip
 802afc6:	f817 a00a 	ldrb.w	sl, [r7, sl]
 802afca:	1a9b      	subs	r3, r3, r2
 802afcc:	f896 c002 	ldrb.w	ip, [r6, #2]
 802afd0:	b29b      	uxth	r3, r3
 802afd2:	7876      	ldrb	r6, [r6, #1]
 802afd4:	fb03 990a 	mla	r9, r3, sl, r9
 802afd8:	fb03 ec0c 	mla	ip, r3, ip, lr
 802afdc:	fb03 1306 	mla	r3, r3, r6, r1
 802afe0:	7801      	ldrb	r1, [r0, #0]
 802afe2:	f890 e002 	ldrb.w	lr, [r0, #2]
 802afe6:	fb02 9901 	mla	r9, r2, r1, r9
 802afea:	9f09      	ldr	r7, [sp, #36]	@ 0x24
 802afec:	fb02 ce0e 	mla	lr, r2, lr, ip
 802aff0:	7829      	ldrb	r1, [r5, #0]
 802aff2:	f8b7 c000 	ldrh.w	ip, [r7]
 802aff6:	7840      	ldrb	r0, [r0, #1]
 802aff8:	78ae      	ldrb	r6, [r5, #2]
 802affa:	fb02 3200 	mla	r2, r2, r0, r3
 802affe:	fb04 9901 	mla	r9, r4, r1, r9
 802b002:	7868      	ldrb	r0, [r5, #1]
 802b004:	990c      	ldr	r1, [sp, #48]	@ 0x30
 802b006:	ea4f 252c 	mov.w	r5, ip, asr #8
 802b00a:	fb04 ee06 	mla	lr, r4, r6, lr
 802b00e:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 802b012:	ea4f 03cc 	mov.w	r3, ip, lsl #3
 802b016:	fb15 f501 	smulbb	r5, r5, r1
 802b01a:	ea4f 0cec 	mov.w	ip, ip, asr #3
 802b01e:	b2db      	uxtb	r3, r3
 802b020:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
 802b024:	fb13 f301 	smulbb	r3, r3, r1
 802b028:	fb1c fc01 	smulbb	ip, ip, r1
 802b02c:	990d      	ldr	r1, [sp, #52]	@ 0x34
 802b02e:	f3ce 2e07 	ubfx	lr, lr, #8, #8
 802b032:	fb04 2200 	mla	r2, r4, r0, r2
 802b036:	fb0e 5501 	mla	r5, lr, r1, r5
 802b03a:	f3c2 2207 	ubfx	r2, r2, #8, #8
 802b03e:	b2ad      	uxth	r5, r5
 802b040:	fb02 cc01 	mla	ip, r2, r1, ip
 802b044:	1c6a      	adds	r2, r5, #1
 802b046:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 802b04a:	463a      	mov	r2, r7
 802b04c:	f3c9 2907 	ubfx	r9, r9, #8, #8
 802b050:	fb09 3301 	mla	r3, r9, r1, r3
 802b054:	fa1f f18c 	uxth.w	r1, ip
 802b058:	b29b      	uxth	r3, r3
 802b05a:	1c5c      	adds	r4, r3, #1
 802b05c:	1c48      	adds	r0, r1, #1
 802b05e:	eb04 2313 	add.w	r3, r4, r3, lsr #8
 802b062:	eb00 2111 	add.w	r1, r0, r1, lsr #8
 802b066:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 802b06a:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 802b06e:	0949      	lsrs	r1, r1, #5
 802b070:	432b      	orrs	r3, r5
 802b072:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 802b076:	430b      	orrs	r3, r1
 802b078:	f822 3b02 	strh.w	r3, [r2], #2
 802b07c:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 802b07e:	9209      	str	r2, [sp, #36]	@ 0x24
 802b080:	449b      	add	fp, r3
 802b082:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 802b084:	4498      	add	r8, r3
 802b086:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 802b088:	429a      	cmp	r2, r3
 802b08a:	d029      	beq.n	802b0e0 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 802b08c:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
 802b08e:	f9b3 5008 	ldrsh.w	r5, [r3, #8]
 802b092:	ea4f 432b 	mov.w	r3, fp, asr #16
 802b096:	ea4f 4128 	mov.w	r1, r8, asr #16
 802b09a:	fb05 3101 	mla	r1, r5, r1, r3
 802b09e:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 802b0a0:	9f08      	ldr	r7, [sp, #32]
 802b0a2:	f812 a001 	ldrb.w	sl, [r2, r1]
 802b0a6:	f3cb 3303 	ubfx	r3, fp, #12, #4
 802b0aa:	eb0a 0a4a 	add.w	sl, sl, sl, lsl #1
 802b0ae:	4411      	add	r1, r2
 802b0b0:	eb07 060a 	add.w	r6, r7, sl
 802b0b4:	f3c8 3203 	ubfx	r2, r8, #12, #4
 802b0b8:	2b00      	cmp	r3, #0
 802b0ba:	f47f af5b 	bne.w	802af74 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 802b0be:	b15a      	cbz	r2, 802b0d8 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ec>
 802b0c0:	5d48      	ldrb	r0, [r1, r5]
 802b0c2:	9908      	ldr	r1, [sp, #32]
 802b0c4:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 802b0c8:	4635      	mov	r5, r6
 802b0ca:	4408      	add	r0, r1
 802b0cc:	46b4      	mov	ip, r6
 802b0ce:	460f      	mov	r7, r1
 802b0d0:	e761      	b.n	802af96 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1aa>
 802b0d2:	4635      	mov	r5, r6
 802b0d4:	4630      	mov	r0, r6
 802b0d6:	e75e      	b.n	802af96 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1aa>
 802b0d8:	4635      	mov	r5, r6
 802b0da:	4630      	mov	r0, r6
 802b0dc:	46b4      	mov	ip, r6
 802b0de:	e75a      	b.n	802af96 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1aa>
 802b0e0:	469a      	mov	sl, r3
 802b0e2:	e6e7      	b.n	802aeb4 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xc8>
 802b0e4:	2a00      	cmp	r2, #0
 802b0e6:	f77f aee5 	ble.w	802aeb4 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xc8>
 802b0ea:	9e0a      	ldr	r6, [sp, #40]	@ 0x28
 802b0ec:	ea4f 432b 	mov.w	r3, fp, asr #16
 802b0f0:	ea4f 4128 	mov.w	r1, r8, asr #16
 802b0f4:	4675      	mov	r5, lr
 802b0f6:	46d1      	mov	r9, sl
 802b0f8:	f8cd a040 	str.w	sl, [sp, #64]	@ 0x40
 802b0fc:	f8dd a0b8 	ldr.w	sl, [sp, #184]	@ 0xb8
 802b100:	9609      	str	r6, [sp, #36]	@ 0x24
 802b102:	2b00      	cmp	r3, #0
 802b104:	f3cb 3703 	ubfx	r7, fp, #12, #4
 802b108:	f3c8 3203 	ubfx	r2, r8, #12, #4
 802b10c:	db27      	blt.n	802b15e <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x372>
 802b10e:	1e60      	subs	r0, r4, #1
 802b110:	4283      	cmp	r3, r0
 802b112:	da24      	bge.n	802b15e <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x372>
 802b114:	2900      	cmp	r1, #0
 802b116:	db22      	blt.n	802b15e <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x372>
 802b118:	1e68      	subs	r0, r5, #1
 802b11a:	4281      	cmp	r1, r0
 802b11c:	da1f      	bge.n	802b15e <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x372>
 802b11e:	b220      	sxth	r0, r4
 802b120:	fb01 3300 	mla	r3, r1, r0, r3
 802b124:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 802b126:	5ccd      	ldrb	r5, [r1, r3]
 802b128:	440b      	add	r3, r1
 802b12a:	9908      	ldr	r1, [sp, #32]
 802b12c:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 802b130:	460e      	mov	r6, r1
 802b132:	eb01 0c05 	add.w	ip, r1, r5
 802b136:	2f00      	cmp	r7, #0
 802b138:	d04b      	beq.n	802b1d2 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 802b13a:	785c      	ldrb	r4, [r3, #1]
 802b13c:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 802b140:	440c      	add	r4, r1
 802b142:	2a00      	cmp	r2, #0
 802b144:	f000 80c4 	beq.w	802b2d0 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 802b148:	1819      	adds	r1, r3, r0
 802b14a:	7849      	ldrb	r1, [r1, #1]
 802b14c:	5c18      	ldrb	r0, [r3, r0]
 802b14e:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 802b152:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 802b156:	1873      	adds	r3, r6, r1
 802b158:	9311      	str	r3, [sp, #68]	@ 0x44
 802b15a:	4430      	add	r0, r6
 802b15c:	e03f      	b.n	802b1de <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 802b15e:	1c58      	adds	r0, r3, #1
 802b160:	d405      	bmi.n	802b16e <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x382>
 802b162:	42a0      	cmp	r0, r4
 802b164:	dc03      	bgt.n	802b16e <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x382>
 802b166:	1c48      	adds	r0, r1, #1
 802b168:	d401      	bmi.n	802b16e <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x382>
 802b16a:	42a8      	cmp	r0, r5
 802b16c:	dd20      	ble.n	802b1b0 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c4>
 802b16e:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 802b170:	f109 0902 	add.w	r9, r9, #2
 802b174:	449b      	add	fp, r3
 802b176:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 802b178:	4498      	add	r8, r3
 802b17a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 802b17c:	2b00      	cmp	r3, #0
 802b17e:	dd08      	ble.n	802b192 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 802b180:	e9da 4502 	ldrd	r4, r5, [sl, #8]
 802b184:	3b01      	subs	r3, #1
 802b186:	9309      	str	r3, [sp, #36]	@ 0x24
 802b188:	ea4f 4128 	mov.w	r1, r8, asr #16
 802b18c:	ea4f 432b 	mov.w	r3, fp, asr #16
 802b190:	e7b7      	b.n	802b102 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x316>
 802b192:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 802b194:	f8dd a040 	ldr.w	sl, [sp, #64]	@ 0x40
 802b198:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 802b19c:	3301      	adds	r3, #1
 802b19e:	eb0a 0a43 	add.w	sl, sl, r3, lsl #1
 802b1a2:	e687      	b.n	802aeb4 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xc8>
 802b1a4:	3a01      	subs	r2, #1
 802b1a6:	f8dd e024 	ldr.w	lr, [sp, #36]	@ 0x24
 802b1aa:	920a      	str	r2, [sp, #40]	@ 0x28
 802b1ac:	4616      	mov	r6, r2
 802b1ae:	e7a1      	b.n	802b0f4 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x308>
 802b1b0:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 802b1b2:	b22d      	sxth	r5, r5
 802b1b4:	b224      	sxth	r4, r4
 802b1b6:	e9cd 2005 	strd	r2, r0, [sp, #20]
 802b1ba:	e9cd 1703 	strd	r1, r7, [sp, #12]
 802b1be:	9302      	str	r3, [sp, #8]
 802b1c0:	e9cd 4500 	strd	r4, r5, [sp]
 802b1c4:	9b08      	ldr	r3, [sp, #32]
 802b1c6:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 802b1c8:	4649      	mov	r1, r9
 802b1ca:	9812      	ldr	r0, [sp, #72]	@ 0x48
 802b1cc:	f7ff fcf2 	bl	802abb4 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>
 802b1d0:	e7cd      	b.n	802b16e <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x382>
 802b1d2:	2a00      	cmp	r2, #0
 802b1d4:	d173      	bne.n	802b2be <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d2>
 802b1d6:	4660      	mov	r0, ip
 802b1d8:	4664      	mov	r4, ip
 802b1da:	f8cd c044 	str.w	ip, [sp, #68]	@ 0x44
 802b1de:	b2bb      	uxth	r3, r7
 802b1e0:	b292      	uxth	r2, r2
 802b1e2:	fb03 f702 	mul.w	r7, r3, r2
 802b1e6:	011b      	lsls	r3, r3, #4
 802b1e8:	1bd9      	subs	r1, r3, r7
 802b1ea:	7826      	ldrb	r6, [r4, #0]
 802b1ec:	f894 e002 	ldrb.w	lr, [r4, #2]
 802b1f0:	7864      	ldrb	r4, [r4, #1]
 802b1f2:	b289      	uxth	r1, r1
 802b1f4:	fb01 f606 	mul.w	r6, r1, r6
 802b1f8:	fb01 fe0e 	mul.w	lr, r1, lr
 802b1fc:	ebc7 1202 	rsb	r2, r7, r2, lsl #4
 802b200:	fb01 f104 	mul.w	r1, r1, r4
 802b204:	9c08      	ldr	r4, [sp, #32]
 802b206:	b292      	uxth	r2, r2
 802b208:	f5c3 7380 	rsb	r3, r3, #256	@ 0x100
 802b20c:	5d65      	ldrb	r5, [r4, r5]
 802b20e:	1a9b      	subs	r3, r3, r2
 802b210:	f89c 4002 	ldrb.w	r4, [ip, #2]
 802b214:	f89c c001 	ldrb.w	ip, [ip, #1]
 802b218:	b29b      	uxth	r3, r3
 802b21a:	fb03 e404 	mla	r4, r3, r4, lr
 802b21e:	fb03 6505 	mla	r5, r3, r5, r6
 802b222:	fb03 130c 	mla	r3, r3, ip, r1
 802b226:	f890 c001 	ldrb.w	ip, [r0, #1]
 802b22a:	7801      	ldrb	r1, [r0, #0]
 802b22c:	f890 e002 	ldrb.w	lr, [r0, #2]
 802b230:	fb02 3c0c 	mla	ip, r2, ip, r3
 802b234:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 802b236:	fb02 5601 	mla	r6, r2, r1, r5
 802b23a:	fb02 4e0e 	mla	lr, r2, lr, r4
 802b23e:	7899      	ldrb	r1, [r3, #2]
 802b240:	781a      	ldrb	r2, [r3, #0]
 802b242:	785b      	ldrb	r3, [r3, #1]
 802b244:	f8b9 0000 	ldrh.w	r0, [r9]
 802b248:	fb07 c303 	mla	r3, r7, r3, ip
 802b24c:	fb07 6202 	mla	r2, r7, r2, r6
 802b250:	00c5      	lsls	r5, r0, #3
 802b252:	1204      	asrs	r4, r0, #8
 802b254:	fb07 e101 	mla	r1, r7, r1, lr
 802b258:	10c0      	asrs	r0, r0, #3
 802b25a:	9f0c      	ldr	r7, [sp, #48]	@ 0x30
 802b25c:	b2ed      	uxtb	r5, r5
 802b25e:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 802b262:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 802b266:	fb15 f507 	smulbb	r5, r5, r7
 802b26a:	fb14 f407 	smulbb	r4, r4, r7
 802b26e:	fb10 f007 	smulbb	r0, r0, r7
 802b272:	f3c3 2707 	ubfx	r7, r3, #8, #8
 802b276:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 802b278:	f3c1 2107 	ubfx	r1, r1, #8, #8
 802b27c:	461e      	mov	r6, r3
 802b27e:	f3c2 2207 	ubfx	r2, r2, #8, #8
 802b282:	fb02 5203 	mla	r2, r2, r3, r5
 802b286:	fb07 0006 	mla	r0, r7, r6, r0
 802b28a:	fb01 4303 	mla	r3, r1, r3, r4
 802b28e:	b281      	uxth	r1, r0
 802b290:	b294      	uxth	r4, r2
 802b292:	b29b      	uxth	r3, r3
 802b294:	1c4a      	adds	r2, r1, #1
 802b296:	1c5d      	adds	r5, r3, #1
 802b298:	1c60      	adds	r0, r4, #1
 802b29a:	eb02 2211 	add.w	r2, r2, r1, lsr #8
 802b29e:	eb05 2313 	add.w	r3, r5, r3, lsr #8
 802b2a2:	eb00 2014 	add.w	r0, r0, r4, lsr #8
 802b2a6:	f403 4378 	and.w	r3, r3, #63488	@ 0xf800
 802b2aa:	f3c0 21c4 	ubfx	r1, r0, #11, #5
 802b2ae:	0952      	lsrs	r2, r2, #5
 802b2b0:	430b      	orrs	r3, r1
 802b2b2:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 802b2b6:	4313      	orrs	r3, r2
 802b2b8:	f8a9 3000 	strh.w	r3, [r9]
 802b2bc:	e757      	b.n	802b16e <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x382>
 802b2be:	5c18      	ldrb	r0, [r3, r0]
 802b2c0:	9b08      	ldr	r3, [sp, #32]
 802b2c2:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 802b2c6:	f8cd c044 	str.w	ip, [sp, #68]	@ 0x44
 802b2ca:	4418      	add	r0, r3
 802b2cc:	4664      	mov	r4, ip
 802b2ce:	e786      	b.n	802b1de <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 802b2d0:	f8cd c044 	str.w	ip, [sp, #68]	@ 0x44
 802b2d4:	4660      	mov	r0, ip
 802b2d6:	e782      	b.n	802b1de <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 802b2d8:	f43f adec 	beq.w	802aeb4 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xc8>
 802b2dc:	1e6e      	subs	r6, r5, #1
 802b2de:	46d4      	mov	ip, sl
 802b2e0:	e62c      	b.n	802af3c <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x150>
 802b2e2:	bf00      	nop

0802b2e4 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>:
 802b2e4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802b2e8:	4692      	mov	sl, r2
 802b2ea:	b083      	sub	sp, #12
 802b2ec:	880a      	ldrh	r2, [r1, #0]
 802b2ee:	f9bd c030 	ldrsh.w	ip, [sp, #48]	@ 0x30
 802b2f2:	e9dd 740e 	ldrd	r7, r4, [sp, #56]	@ 0x38
 802b2f6:	0215      	lsls	r5, r2, #8
 802b2f8:	0150      	lsls	r0, r2, #5
 802b2fa:	fb04 7e0c 	mla	lr, r4, ip, r7
 802b2fe:	f400 407c 	and.w	r0, r0, #64512	@ 0xfc00
 802b302:	f405 0578 	and.w	r5, r5, #16252928	@ 0xf80000
 802b306:	00d2      	lsls	r2, r2, #3
 802b308:	4305      	orrs	r5, r0
 802b30a:	b2d2      	uxtb	r2, r2
 802b30c:	4315      	orrs	r5, r2
 802b30e:	2c00      	cmp	r4, #0
 802b310:	9501      	str	r5, [sp, #4]
 802b312:	eb0a 020e 	add.w	r2, sl, lr
 802b316:	f104 0801 	add.w	r8, r4, #1
 802b31a:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	@ 0x34
 802b31e:	f89d 6040 	ldrb.w	r6, [sp, #64]	@ 0x40
 802b322:	f89d 0044 	ldrb.w	r0, [sp, #68]	@ 0x44
 802b326:	db01      	blt.n	802b32c <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x48>
 802b328:	45a1      	cmp	r9, r4
 802b32a:	dc71      	bgt.n	802b410 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x12c>
 802b32c:	fa5f fa85 	uxtb.w	sl, r5
 802b330:	f10d 0b04 	add.w	fp, sp, #4
 802b334:	4654      	mov	r4, sl
 802b336:	46de      	mov	lr, fp
 802b338:	f1b8 0f00 	cmp.w	r8, #0
 802b33c:	db01      	blt.n	802b342 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x5e>
 802b33e:	45c1      	cmp	r9, r8
 802b340:	dc4c      	bgt.n	802b3dc <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xf8>
 802b342:	fa5f f985 	uxtb.w	r9, r5
 802b346:	ab01      	add	r3, sp, #4
 802b348:	464d      	mov	r5, r9
 802b34a:	4698      	mov	r8, r3
 802b34c:	2e0f      	cmp	r6, #15
 802b34e:	f200 809b 	bhi.w	802b488 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x1a4>
 802b352:	280f      	cmp	r0, #15
 802b354:	f200 8098 	bhi.w	802b488 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x1a4>
 802b358:	b2b2      	uxth	r2, r6
 802b35a:	b280      	uxth	r0, r0
 802b35c:	fb02 f700 	mul.w	r7, r2, r0
 802b360:	0112      	lsls	r2, r2, #4
 802b362:	f89b c002 	ldrb.w	ip, [fp, #2]
 802b366:	1bd6      	subs	r6, r2, r7
 802b368:	f89b b001 	ldrb.w	fp, [fp, #1]
 802b36c:	b2b6      	uxth	r6, r6
 802b36e:	ebc7 1000 	rsb	r0, r7, r0, lsl #4
 802b372:	fb06 f404 	mul.w	r4, r6, r4
 802b376:	fb06 fc0c 	mul.w	ip, r6, ip
 802b37a:	fb06 f60b 	mul.w	r6, r6, fp
 802b37e:	b280      	uxth	r0, r0
 802b380:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
 802b384:	f89e b002 	ldrb.w	fp, [lr, #2]
 802b388:	1a12      	subs	r2, r2, r0
 802b38a:	f89e e001 	ldrb.w	lr, [lr, #1]
 802b38e:	b292      	uxth	r2, r2
 802b390:	fb02 440a 	mla	r4, r2, sl, r4
 802b394:	fb02 660e 	mla	r6, r2, lr, r6
 802b398:	fb02 cc0b 	mla	ip, r2, fp, ip
 802b39c:	f898 a002 	ldrb.w	sl, [r8, #2]
 802b3a0:	f898 8001 	ldrb.w	r8, [r8, #1]
 802b3a4:	fb00 4909 	mla	r9, r0, r9, r4
 802b3a8:	fb00 cc0a 	mla	ip, r0, sl, ip
 802b3ac:	fb00 6008 	mla	r0, r0, r8, r6
 802b3b0:	789e      	ldrb	r6, [r3, #2]
 802b3b2:	785b      	ldrb	r3, [r3, #1]
 802b3b4:	fb07 9905 	mla	r9, r7, r5, r9
 802b3b8:	fb07 c506 	mla	r5, r7, r6, ip
 802b3bc:	fb07 0703 	mla	r7, r7, r3, r0
 802b3c0:	f3c9 29c4 	ubfx	r9, r9, #11, #5
 802b3c4:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 802b3c8:	097f      	lsrs	r7, r7, #5
 802b3ca:	ea45 0509 	orr.w	r5, r5, r9
 802b3ce:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 802b3d2:	433d      	orrs	r5, r7
 802b3d4:	800d      	strh	r5, [r1, #0]
 802b3d6:	b003      	add	sp, #12
 802b3d8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802b3dc:	b388      	cbz	r0, 802b442 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x15e>
 802b3de:	2f00      	cmp	r7, #0
 802b3e0:	db40      	blt.n	802b464 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x180>
 802b3e2:	45bc      	cmp	ip, r7
 802b3e4:	dd3e      	ble.n	802b464 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x180>
 802b3e6:	f812 800c 	ldrb.w	r8, [r2, ip]
 802b3ea:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 802b3ee:	4498      	add	r8, r3
 802b3f0:	3701      	adds	r7, #1
 802b3f2:	f898 9000 	ldrb.w	r9, [r8]
 802b3f6:	d432      	bmi.n	802b45e <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x17a>
 802b3f8:	45bc      	cmp	ip, r7
 802b3fa:	dd30      	ble.n	802b45e <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x17a>
 802b3fc:	2e00      	cmp	r6, #0
 802b3fe:	d040      	beq.n	802b482 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x19e>
 802b400:	4494      	add	ip, r2
 802b402:	f89c 2001 	ldrb.w	r2, [ip, #1]
 802b406:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 802b40a:	5c9d      	ldrb	r5, [r3, r2]
 802b40c:	4413      	add	r3, r2
 802b40e:	e79d      	b.n	802b34c <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x68>
 802b410:	2f00      	cmp	r7, #0
 802b412:	db01      	blt.n	802b418 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x134>
 802b414:	45bc      	cmp	ip, r7
 802b416:	dc1c      	bgt.n	802b452 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x16e>
 802b418:	f10d 0e04 	add.w	lr, sp, #4
 802b41c:	1c7c      	adds	r4, r7, #1
 802b41e:	f89e a000 	ldrb.w	sl, [lr]
 802b422:	d40a      	bmi.n	802b43a <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x156>
 802b424:	45a4      	cmp	ip, r4
 802b426:	dd08      	ble.n	802b43a <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x156>
 802b428:	b1fe      	cbz	r6, 802b46a <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x186>
 802b42a:	f892 b001 	ldrb.w	fp, [r2, #1]
 802b42e:	eb0b 0b4b 	add.w	fp, fp, fp, lsl #1
 802b432:	f813 400b 	ldrb.w	r4, [r3, fp]
 802b436:	449b      	add	fp, r3
 802b438:	e77e      	b.n	802b338 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x54>
 802b43a:	b2ec      	uxtb	r4, r5
 802b43c:	f10d 0b04 	add.w	fp, sp, #4
 802b440:	e77a      	b.n	802b338 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x54>
 802b442:	2e0f      	cmp	r6, #15
 802b444:	fa5f f985 	uxtb.w	r9, r5
 802b448:	d81e      	bhi.n	802b488 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x1a4>
 802b44a:	ab01      	add	r3, sp, #4
 802b44c:	4698      	mov	r8, r3
 802b44e:	464d      	mov	r5, r9
 802b450:	e782      	b.n	802b358 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x74>
 802b452:	f81a e00e 	ldrb.w	lr, [sl, lr]
 802b456:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 802b45a:	449e      	add	lr, r3
 802b45c:	e7de      	b.n	802b41c <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 802b45e:	b2ed      	uxtb	r5, r5
 802b460:	ab01      	add	r3, sp, #4
 802b462:	e773      	b.n	802b34c <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x68>
 802b464:	f10d 0804 	add.w	r8, sp, #4
 802b468:	e7c2      	b.n	802b3f0 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x10c>
 802b46a:	f1b8 0f00 	cmp.w	r8, #0
 802b46e:	b2ec      	uxtb	r4, r5
 802b470:	f10d 0b04 	add.w	fp, sp, #4
 802b474:	f6bf af63 	bge.w	802b33e <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x5a>
 802b478:	465b      	mov	r3, fp
 802b47a:	46d8      	mov	r8, fp
 802b47c:	4625      	mov	r5, r4
 802b47e:	46a1      	mov	r9, r4
 802b480:	e767      	b.n	802b352 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 802b482:	b2ed      	uxtb	r5, r5
 802b484:	ab01      	add	r3, sp, #4
 802b486:	e764      	b.n	802b352 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 802b488:	4b03      	ldr	r3, [pc, #12]	@ (802b498 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x1b4>)
 802b48a:	4a04      	ldr	r2, [pc, #16]	@ (802b49c <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x1b8>)
 802b48c:	f240 31ca 	movw	r1, #970	@ 0x3ca
 802b490:	4803      	ldr	r0, [pc, #12]	@ (802b4a0 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x1bc>)
 802b492:	f007 f971 	bl	8032778 <__assert_func>
 802b496:	bf00      	nop
 802b498:	08036954 	.word	0x08036954
 802b49c:	08036fd0 	.word	0x08036fd0
 802b4a0:	08036adc 	.word	0x08036adc

0802b4a4 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 802b4a4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802b4a8:	ed2d 8b0a 	vpush	{d8-d12}
 802b4ac:	eeb0 aa40 	vmov.f32	s20, s0
 802b4b0:	eef0 9a60 	vmov.f32	s19, s1
 802b4b4:	eeb0 9a41 	vmov.f32	s18, s2
 802b4b8:	eef0 8a62 	vmov.f32	s17, s5
 802b4bc:	eeb0 8a43 	vmov.f32	s16, s6
 802b4c0:	eeb0 ca44 	vmov.f32	s24, s8
 802b4c4:	eef0 ba64 	vmov.f32	s23, s9
 802b4c8:	eeb0 ba45 	vmov.f32	s22, s10
 802b4cc:	eef7 aa00 	vmov.f32	s21, #112	@ 0x3f800000  1.0
 802b4d0:	b093      	sub	sp, #76	@ 0x4c
 802b4d2:	e9cd 120a 	strd	r1, r2, [sp, #40]	@ 0x28
 802b4d6:	e9dd 412b 	ldrd	r4, r1, [sp, #172]	@ 0xac
 802b4da:	e9dd 9827 	ldrd	r9, r8, [sp, #156]	@ 0x9c
 802b4de:	9011      	str	r0, [sp, #68]	@ 0x44
 802b4e0:	461a      	mov	r2, r3
 802b4e2:	6860      	ldr	r0, [r4, #4]
 802b4e4:	9b2d      	ldr	r3, [sp, #180]	@ 0xb4
 802b4e6:	f8dd a0a4 	ldr.w	sl, [sp, #164]	@ 0xa4
 802b4ea:	fb00 1303 	mla	r3, r0, r3, r1
 802b4ee:	992e      	ldr	r1, [sp, #184]	@ 0xb8
 802b4f0:	6820      	ldr	r0, [r4, #0]
 802b4f2:	9c2e      	ldr	r4, [sp, #184]	@ 0xb8
 802b4f4:	6849      	ldr	r1, [r1, #4]
 802b4f6:	6824      	ldr	r4, [r4, #0]
 802b4f8:	eb00 0b43 	add.w	fp, r0, r3, lsl #1
 802b4fc:	1d0b      	adds	r3, r1, #4
 802b4fe:	9409      	str	r4, [sp, #36]	@ 0x24
 802b500:	930c      	str	r3, [sp, #48]	@ 0x30
 802b502:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 802b504:	2b00      	cmp	r3, #0
 802b506:	dc02      	bgt.n	802b50e <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 802b508:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 802b50a:	2b00      	cmp	r3, #0
 802b50c:	dd61      	ble.n	802b5d2 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x12e>
 802b50e:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
 802b510:	2a00      	cmp	r2, #0
 802b512:	e9d3 4e02 	ldrd	r4, lr, [r3, #8]
 802b516:	b225      	sxth	r5, r4
 802b518:	fa0f f78e 	sxth.w	r7, lr
 802b51c:	f340 81d9 	ble.w	802b8d2 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42e>
 802b520:	f8cd e01c 	str.w	lr, [sp, #28]
 802b524:	f8dd e0a8 	ldr.w	lr, [sp, #168]	@ 0xa8
 802b528:	1e6e      	subs	r6, r5, #1
 802b52a:	f107 3cff 	add.w	ip, r7, #4294967295
 802b52e:	ea5f 4329 	movs.w	r3, r9, asr #16
 802b532:	ea4f 4128 	mov.w	r1, r8, asr #16
 802b536:	d405      	bmi.n	802b544 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 802b538:	42b3      	cmp	r3, r6
 802b53a:	da03      	bge.n	802b544 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 802b53c:	2900      	cmp	r1, #0
 802b53e:	db01      	blt.n	802b544 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 802b540:	4561      	cmp	r1, ip
 802b542:	db4b      	blt.n	802b5dc <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x138>
 802b544:	1c58      	adds	r0, r3, #1
 802b546:	d406      	bmi.n	802b556 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 802b548:	42a8      	cmp	r0, r5
 802b54a:	dc04      	bgt.n	802b556 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 802b54c:	1c48      	adds	r0, r1, #1
 802b54e:	d402      	bmi.n	802b556 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 802b550:	42b8      	cmp	r0, r7
 802b552:	f340 8149 	ble.w	802b7e8 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 802b556:	3a01      	subs	r2, #1
 802b558:	44d1      	add	r9, sl
 802b55a:	44f0      	add	r8, lr
 802b55c:	f10b 0b02 	add.w	fp, fp, #2
 802b560:	d1e5      	bne.n	802b52e <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 802b562:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 802b564:	2b00      	cmp	r3, #0
 802b566:	dd34      	ble.n	802b5d2 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x12e>
 802b568:	ee3a aa0c 	vadd.f32	s20, s20, s24
 802b56c:	ee79 9aab 	vadd.f32	s19, s19, s23
 802b570:	eeca 7a8a 	vdiv.f32	s15, s21, s20
 802b574:	ee39 9a0b 	vadd.f32	s18, s18, s22
 802b578:	ee29 6aa7 	vmul.f32	s12, s19, s15
 802b57c:	ee69 7a27 	vmul.f32	s15, s18, s15
 802b580:	ee76 6a68 	vsub.f32	s13, s12, s17
 802b584:	ee37 7ac8 	vsub.f32	s14, s15, s16
 802b588:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802b58c:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 802b590:	ee16 2a90 	vmov	r2, s13
 802b594:	3b01      	subs	r3, #1
 802b596:	930a      	str	r3, [sp, #40]	@ 0x28
 802b598:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 802b59a:	fb92 faf3 	sdiv	sl, r2, r3
 802b59e:	ee17 2a10 	vmov	r2, s14
 802b5a2:	eeb0 7a48 	vmov.f32	s14, s16
 802b5a6:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 802b5aa:	ee17 8a10 	vmov	r8, s14
 802b5ae:	eeb0 7a68 	vmov.f32	s14, s17
 802b5b2:	fb92 f3f3 	sdiv	r3, r2, r3
 802b5b6:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 802b5ba:	932a      	str	r3, [sp, #168]	@ 0xa8
 802b5bc:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 802b5be:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 802b5c0:	ee17 9a10 	vmov	r9, s14
 802b5c4:	eeb0 8a67 	vmov.f32	s16, s15
 802b5c8:	eef0 8a46 	vmov.f32	s17, s12
 802b5cc:	bf18      	it	ne
 802b5ce:	461a      	movne	r2, r3
 802b5d0:	e797      	b.n	802b502 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 802b5d2:	b013      	add	sp, #76	@ 0x4c
 802b5d4:	ecbd 8b0a 	vpop	{d8-d12}
 802b5d8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802b5dc:	f8dd e01c 	ldr.w	lr, [sp, #28]
 802b5e0:	f8cd b01c 	str.w	fp, [sp, #28]
 802b5e4:	1e51      	subs	r1, r2, #1
 802b5e6:	fb0a 9301 	mla	r3, sl, r1, r9
 802b5ea:	141b      	asrs	r3, r3, #16
 802b5ec:	9108      	str	r1, [sp, #32]
 802b5ee:	f100 809e 	bmi.w	802b72e <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28a>
 802b5f2:	42b3      	cmp	r3, r6
 802b5f4:	f280 809b 	bge.w	802b72e <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28a>
 802b5f8:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 802b5fa:	fb03 8301 	mla	r3, r3, r1, r8
 802b5fe:	141b      	asrs	r3, r3, #16
 802b600:	f100 8095 	bmi.w	802b72e <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28a>
 802b604:	3f01      	subs	r7, #1
 802b606:	42bb      	cmp	r3, r7
 802b608:	f280 8091 	bge.w	802b72e <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28a>
 802b60c:	2a00      	cmp	r2, #0
 802b60e:	dda8      	ble.n	802b562 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xbe>
 802b610:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
 802b614:	f8cd a0a4 	str.w	sl, [sp, #164]	@ 0xa4
 802b618:	f8cd b020 	str.w	fp, [sp, #32]
 802b61c:	f8dd a030 	ldr.w	sl, [sp, #48]	@ 0x30
 802b620:	e060      	b.n	802b6e4 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 802b622:	784f      	ldrb	r7, [r1, #1]
 802b624:	194c      	adds	r4, r1, r5
 802b626:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 802b62a:	4457      	add	r7, sl
 802b62c:	2a00      	cmp	r2, #0
 802b62e:	d075      	beq.n	802b71c <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x278>
 802b630:	5d48      	ldrb	r0, [r1, r5]
 802b632:	7865      	ldrb	r5, [r4, #1]
 802b634:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 802b638:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 802b63c:	4450      	add	r0, sl
 802b63e:	4455      	add	r5, sl
 802b640:	b29b      	uxth	r3, r3
 802b642:	b292      	uxth	r2, r2
 802b644:	fb03 f402 	mul.w	r4, r3, r2
 802b648:	011b      	lsls	r3, r3, #4
 802b64a:	f897 e000 	ldrb.w	lr, [r7]
 802b64e:	f897 c002 	ldrb.w	ip, [r7, #2]
 802b652:	1b19      	subs	r1, r3, r4
 802b654:	787f      	ldrb	r7, [r7, #1]
 802b656:	b289      	uxth	r1, r1
 802b658:	fb01 fc0c 	mul.w	ip, r1, ip
 802b65c:	fb01 fe0e 	mul.w	lr, r1, lr
 802b660:	ebc4 1202 	rsb	r2, r4, r2, lsl #4
 802b664:	fb01 f107 	mul.w	r1, r1, r7
 802b668:	b292      	uxth	r2, r2
 802b66a:	f5c3 7380 	rsb	r3, r3, #256	@ 0x100
 802b66e:	f81a b00b 	ldrb.w	fp, [sl, fp]
 802b672:	78b7      	ldrb	r7, [r6, #2]
 802b674:	1a9b      	subs	r3, r3, r2
 802b676:	7876      	ldrb	r6, [r6, #1]
 802b678:	b29b      	uxth	r3, r3
 802b67a:	fb03 ee0b 	mla	lr, r3, fp, lr
 802b67e:	fb03 c707 	mla	r7, r3, r7, ip
 802b682:	fb03 1306 	mla	r3, r3, r6, r1
 802b686:	f890 b000 	ldrb.w	fp, [r0]
 802b68a:	f890 c002 	ldrb.w	ip, [r0, #2]
 802b68e:	7841      	ldrb	r1, [r0, #1]
 802b690:	fb02 ee0b 	mla	lr, r2, fp, lr
 802b694:	fb02 3301 	mla	r3, r2, r1, r3
 802b698:	fb02 770c 	mla	r7, r2, ip, r7
 802b69c:	f895 b000 	ldrb.w	fp, [r5]
 802b6a0:	f895 c002 	ldrb.w	ip, [r5, #2]
 802b6a4:	7869      	ldrb	r1, [r5, #1]
 802b6a6:	fb04 ee0b 	mla	lr, r4, fp, lr
 802b6aa:	fb04 3101 	mla	r1, r4, r1, r3
 802b6ae:	fb04 7c0c 	mla	ip, r4, ip, r7
 802b6b2:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 802b6b4:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 802b6b8:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 802b6bc:	0949      	lsrs	r1, r1, #5
 802b6be:	4491      	add	r9, r2
 802b6c0:	9a2a      	ldr	r2, [sp, #168]	@ 0xa8
 802b6c2:	9b07      	ldr	r3, [sp, #28]
 802b6c4:	ea4c 0e0e 	orr.w	lr, ip, lr
 802b6c8:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 802b6cc:	ea4e 0e01 	orr.w	lr, lr, r1
 802b6d0:	4490      	add	r8, r2
 802b6d2:	9a08      	ldr	r2, [sp, #32]
 802b6d4:	f823 eb02 	strh.w	lr, [r3], #2
 802b6d8:	4293      	cmp	r3, r2
 802b6da:	9307      	str	r3, [sp, #28]
 802b6dc:	d025      	beq.n	802b72a <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x286>
 802b6de:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
 802b6e0:	f9b3 5008 	ldrsh.w	r5, [r3, #8]
 802b6e4:	ea4f 4329 	mov.w	r3, r9, asr #16
 802b6e8:	ea4f 4128 	mov.w	r1, r8, asr #16
 802b6ec:	fb05 3101 	mla	r1, r5, r1, r3
 802b6f0:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 802b6f2:	f3c9 3303 	ubfx	r3, r9, #12, #4
 802b6f6:	f812 b001 	ldrb.w	fp, [r2, r1]
 802b6fa:	4411      	add	r1, r2
 802b6fc:	eb0b 0b4b 	add.w	fp, fp, fp, lsl #1
 802b700:	eb0a 060b 	add.w	r6, sl, fp
 802b704:	f3c8 3203 	ubfx	r2, r8, #12, #4
 802b708:	2b00      	cmp	r3, #0
 802b70a:	d18a      	bne.n	802b622 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 802b70c:	b14a      	cbz	r2, 802b722 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27e>
 802b70e:	5d48      	ldrb	r0, [r1, r5]
 802b710:	4637      	mov	r7, r6
 802b712:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 802b716:	4635      	mov	r5, r6
 802b718:	4450      	add	r0, sl
 802b71a:	e791      	b.n	802b640 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19c>
 802b71c:	4635      	mov	r5, r6
 802b71e:	4630      	mov	r0, r6
 802b720:	e78e      	b.n	802b640 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19c>
 802b722:	4635      	mov	r5, r6
 802b724:	4630      	mov	r0, r6
 802b726:	4637      	mov	r7, r6
 802b728:	e78a      	b.n	802b640 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19c>
 802b72a:	4693      	mov	fp, r2
 802b72c:	e719      	b.n	802b562 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xbe>
 802b72e:	2a00      	cmp	r2, #0
 802b730:	f77f af17 	ble.w	802b562 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xbe>
 802b734:	9e08      	ldr	r6, [sp, #32]
 802b736:	ea4f 4329 	mov.w	r3, r9, asr #16
 802b73a:	ea4f 4128 	mov.w	r1, r8, asr #16
 802b73e:	465f      	mov	r7, fp
 802b740:	f8cd b01c 	str.w	fp, [sp, #28]
 802b744:	f8dd b0b8 	ldr.w	fp, [sp, #184]	@ 0xb8
 802b748:	2b00      	cmp	r3, #0
 802b74a:	f3c9 3003 	ubfx	r0, r9, #12, #4
 802b74e:	f3c8 3203 	ubfx	r2, r8, #12, #4
 802b752:	db2a      	blt.n	802b7aa <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 802b754:	1e65      	subs	r5, r4, #1
 802b756:	42ab      	cmp	r3, r5
 802b758:	da27      	bge.n	802b7aa <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 802b75a:	2900      	cmp	r1, #0
 802b75c:	db25      	blt.n	802b7aa <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 802b75e:	f10e 35ff 	add.w	r5, lr, #4294967295
 802b762:	42a9      	cmp	r1, r5
 802b764:	da21      	bge.n	802b7aa <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 802b766:	b224      	sxth	r4, r4
 802b768:	fb01 3304 	mla	r3, r1, r4, r3
 802b76c:	9909      	ldr	r1, [sp, #36]	@ 0x24
 802b76e:	f811 c003 	ldrb.w	ip, [r1, r3]
 802b772:	440b      	add	r3, r1
 802b774:	990c      	ldr	r1, [sp, #48]	@ 0x30
 802b776:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 802b77a:	eb01 0e0c 	add.w	lr, r1, ip
 802b77e:	2800      	cmp	r0, #0
 802b780:	d048      	beq.n	802b814 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 802b782:	785d      	ldrb	r5, [r3, #1]
 802b784:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 802b788:	440d      	add	r5, r1
 802b78a:	2a00      	cmp	r2, #0
 802b78c:	f000 809e 	beq.w	802b8cc <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x428>
 802b790:	1919      	adds	r1, r3, r4
 802b792:	7849      	ldrb	r1, [r1, #1]
 802b794:	5d1c      	ldrb	r4, [r3, r4]
 802b796:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 802b798:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 802b79c:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 802b7a0:	1859      	adds	r1, r3, r1
 802b7a2:	18e3      	adds	r3, r4, r3
 802b7a4:	910f      	str	r1, [sp, #60]	@ 0x3c
 802b7a6:	9310      	str	r3, [sp, #64]	@ 0x40
 802b7a8:	e039      	b.n	802b81e <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 802b7aa:	1c5d      	adds	r5, r3, #1
 802b7ac:	d405      	bmi.n	802b7ba <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x316>
 802b7ae:	42a5      	cmp	r5, r4
 802b7b0:	dc03      	bgt.n	802b7ba <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x316>
 802b7b2:	1c4d      	adds	r5, r1, #1
 802b7b4:	d401      	bmi.n	802b7ba <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x316>
 802b7b6:	4575      	cmp	r5, lr
 802b7b8:	dd1c      	ble.n	802b7f4 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 802b7ba:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 802b7bc:	2e00      	cmp	r6, #0
 802b7be:	f107 0702 	add.w	r7, r7, #2
 802b7c2:	44d1      	add	r9, sl
 802b7c4:	4498      	add	r8, r3
 802b7c6:	dd07      	ble.n	802b7d8 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x334>
 802b7c8:	e9db 4e02 	ldrd	r4, lr, [fp, #8]
 802b7cc:	3e01      	subs	r6, #1
 802b7ce:	ea4f 4329 	mov.w	r3, r9, asr #16
 802b7d2:	ea4f 4128 	mov.w	r1, r8, asr #16
 802b7d6:	e7b7      	b.n	802b748 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a4>
 802b7d8:	e9dd b307 	ldrd	fp, r3, [sp, #28]
 802b7dc:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 802b7e0:	3301      	adds	r3, #1
 802b7e2:	eb0b 0b43 	add.w	fp, fp, r3, lsl #1
 802b7e6:	e6bc      	b.n	802b562 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xbe>
 802b7e8:	3a01      	subs	r2, #1
 802b7ea:	f8dd e01c 	ldr.w	lr, [sp, #28]
 802b7ee:	9208      	str	r2, [sp, #32]
 802b7f0:	4616      	mov	r6, r2
 802b7f2:	e7a4      	b.n	802b73e <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 802b7f4:	fa0f f58e 	sxth.w	r5, lr
 802b7f8:	b224      	sxth	r4, r4
 802b7fa:	e9cd 0204 	strd	r0, r2, [sp, #16]
 802b7fe:	e9cd 3102 	strd	r3, r1, [sp, #8]
 802b802:	e9cd 4500 	strd	r4, r5, [sp]
 802b806:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 802b808:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 802b80a:	4639      	mov	r1, r7
 802b80c:	9811      	ldr	r0, [sp, #68]	@ 0x44
 802b80e:	f7ff fd69 	bl	802b2e4 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>
 802b812:	e7d2      	b.n	802b7ba <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x316>
 802b814:	2a00      	cmp	r2, #0
 802b816:	d14f      	bne.n	802b8b8 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x414>
 802b818:	4675      	mov	r5, lr
 802b81a:	e9cd ee0f 	strd	lr, lr, [sp, #60]	@ 0x3c
 802b81e:	b283      	uxth	r3, r0
 802b820:	b292      	uxth	r2, r2
 802b822:	fb03 f002 	mul.w	r0, r3, r2
 802b826:	782c      	ldrb	r4, [r5, #0]
 802b828:	011b      	lsls	r3, r3, #4
 802b82a:	940e      	str	r4, [sp, #56]	@ 0x38
 802b82c:	78ac      	ldrb	r4, [r5, #2]
 802b82e:	1a19      	subs	r1, r3, r0
 802b830:	940d      	str	r4, [sp, #52]	@ 0x34
 802b832:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 802b834:	b289      	uxth	r1, r1
 802b836:	fb01 f404 	mul.w	r4, r1, r4
 802b83a:	940e      	str	r4, [sp, #56]	@ 0x38
 802b83c:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 802b83e:	786d      	ldrb	r5, [r5, #1]
 802b840:	fb01 f404 	mul.w	r4, r1, r4
 802b844:	ebc0 1202 	rsb	r2, r0, r2, lsl #4
 802b848:	fb01 f105 	mul.w	r1, r1, r5
 802b84c:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 802b84e:	b292      	uxth	r2, r2
 802b850:	f5c3 7380 	rsb	r3, r3, #256	@ 0x100
 802b854:	f815 c00c 	ldrb.w	ip, [r5, ip]
 802b858:	940d      	str	r4, [sp, #52]	@ 0x34
 802b85a:	1a9b      	subs	r3, r3, r2
 802b85c:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 802b85e:	b29b      	uxth	r3, r3
 802b860:	f89e 5002 	ldrb.w	r5, [lr, #2]
 802b864:	fb03 4c0c 	mla	ip, r3, ip, r4
 802b868:	f89e e001 	ldrb.w	lr, [lr, #1]
 802b86c:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 802b86e:	fb03 4505 	mla	r5, r3, r5, r4
 802b872:	fb03 130e 	mla	r3, r3, lr, r1
 802b876:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 802b878:	78a1      	ldrb	r1, [r4, #2]
 802b87a:	f894 e000 	ldrb.w	lr, [r4]
 802b87e:	7864      	ldrb	r4, [r4, #1]
 802b880:	fb02 5501 	mla	r5, r2, r1, r5
 802b884:	fb02 cc0e 	mla	ip, r2, lr, ip
 802b888:	fb02 3104 	mla	r1, r2, r4, r3
 802b88c:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 802b88e:	7822      	ldrb	r2, [r4, #0]
 802b890:	78a3      	ldrb	r3, [r4, #2]
 802b892:	7864      	ldrb	r4, [r4, #1]
 802b894:	fb00 cc02 	mla	ip, r0, r2, ip
 802b898:	fb00 5303 	mla	r3, r0, r3, r5
 802b89c:	fb00 1204 	mla	r2, r0, r4, r1
 802b8a0:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 802b8a4:	f403 4378 	and.w	r3, r3, #63488	@ 0xf800
 802b8a8:	0952      	lsrs	r2, r2, #5
 802b8aa:	ea43 030c 	orr.w	r3, r3, ip
 802b8ae:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 802b8b2:	4313      	orrs	r3, r2
 802b8b4:	803b      	strh	r3, [r7, #0]
 802b8b6:	e780      	b.n	802b7ba <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x316>
 802b8b8:	5d1c      	ldrb	r4, [r3, r4]
 802b8ba:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 802b8bc:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 802b8c0:	18e3      	adds	r3, r4, r3
 802b8c2:	f8cd e03c 	str.w	lr, [sp, #60]	@ 0x3c
 802b8c6:	9310      	str	r3, [sp, #64]	@ 0x40
 802b8c8:	4675      	mov	r5, lr
 802b8ca:	e7a8      	b.n	802b81e <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 802b8cc:	e9cd ee0f 	strd	lr, lr, [sp, #60]	@ 0x3c
 802b8d0:	e7a5      	b.n	802b81e <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 802b8d2:	f43f ae46 	beq.w	802b562 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xbe>
 802b8d6:	1e6e      	subs	r6, r5, #1
 802b8d8:	f8cd b01c 	str.w	fp, [sp, #28]
 802b8dc:	e682      	b.n	802b5e4 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x140>
 802b8de:	bf00      	nop

0802b8e0 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>:
 802b8e0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802b8e4:	b08b      	sub	sp, #44	@ 0x2c
 802b8e6:	f9bd 7050 	ldrsh.w	r7, [sp, #80]	@ 0x50
 802b8ea:	f8b1 c000 	ldrh.w	ip, [r1]
 802b8ee:	e9dd 6416 	ldrd	r6, r4, [sp, #88]	@ 0x58
 802b8f2:	fb04 6507 	mla	r5, r4, r7, r6
 802b8f6:	9107      	str	r1, [sp, #28]
 802b8f8:	ea4f 01ec 	mov.w	r1, ip, asr #3
 802b8fc:	ea4f 202c 	mov.w	r0, ip, asr #8
 802b900:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 802b904:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 802b908:	469a      	mov	sl, r3
 802b90a:	f89d 3068 	ldrb.w	r3, [sp, #104]	@ 0x68
 802b90e:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 802b912:	9105      	str	r1, [sp, #20]
 802b914:	2c00      	cmp	r4, #0
 802b916:	fa5f f18c 	uxtb.w	r1, ip
 802b91a:	9004      	str	r0, [sp, #16]
 802b91c:	9106      	str	r1, [sp, #24]
 802b91e:	eb02 0e05 	add.w	lr, r2, r5
 802b922:	f104 0801 	add.w	r8, r4, #1
 802b926:	f9bd 9054 	ldrsh.w	r9, [sp, #84]	@ 0x54
 802b92a:	f89d 1060 	ldrb.w	r1, [sp, #96]	@ 0x60
 802b92e:	f89d 0064 	ldrb.w	r0, [sp, #100]	@ 0x64
 802b932:	9308      	str	r3, [sp, #32]
 802b934:	db02      	blt.n	802b93c <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 802b936:	45a1      	cmp	r9, r4
 802b938:	f300 8119 	bgt.w	802bb6e <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28e>
 802b93c:	f04f 0c00 	mov.w	ip, #0
 802b940:	4665      	mov	r5, ip
 802b942:	4662      	mov	r2, ip
 802b944:	4664      	mov	r4, ip
 802b946:	f1b8 0f00 	cmp.w	r8, #0
 802b94a:	db02      	blt.n	802b952 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x72>
 802b94c:	45c1      	cmp	r9, r8
 802b94e:	f300 8127 	bgt.w	802bba0 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x2c0>
 802b952:	f04f 0e00 	mov.w	lr, #0
 802b956:	46f0      	mov	r8, lr
 802b958:	4676      	mov	r6, lr
 802b95a:	46f1      	mov	r9, lr
 802b95c:	290f      	cmp	r1, #15
 802b95e:	f200 815e 	bhi.w	802bc1e <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x33e>
 802b962:	280f      	cmp	r0, #15
 802b964:	f200 815b 	bhi.w	802bc1e <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x33e>
 802b968:	b280      	uxth	r0, r0
 802b96a:	b289      	uxth	r1, r1
 802b96c:	fb00 fa01 	mul.w	sl, r0, r1
 802b970:	ebca 1000 	rsb	r0, sl, r0, lsl #4
 802b974:	b280      	uxth	r0, r0
 802b976:	f006 13ff 	and.w	r3, r6, #16711935	@ 0xff00ff
 802b97a:	fb00 fb08 	mul.w	fp, r0, r8
 802b97e:	fb0a f70e 	mul.w	r7, sl, lr
 802b982:	9301      	str	r3, [sp, #4]
 802b984:	f009 13ff 	and.w	r3, r9, #16711935	@ 0xff00ff
 802b988:	9302      	str	r3, [sp, #8]
 802b98a:	f409 437f 	and.w	r3, r9, #65280	@ 0xff00
 802b98e:	f406 467f 	and.w	r6, r6, #65280	@ 0xff00
 802b992:	9303      	str	r3, [sp, #12]
 802b994:	0109      	lsls	r1, r1, #4
 802b996:	eba1 090a 	sub.w	r9, r1, sl
 802b99a:	fa1f f989 	uxth.w	r9, r9
 802b99e:	fb09 f30c 	mul.w	r3, r9, ip
 802b9a2:	f5c1 7180 	rsb	r1, r1, #256	@ 0x100
 802b9a6:	1a09      	subs	r1, r1, r0
 802b9a8:	b289      	uxth	r1, r1
 802b9aa:	fb01 3305 	mla	r3, r1, r5, r3
 802b9ae:	445b      	add	r3, fp
 802b9b0:	443b      	add	r3, r7
 802b9b2:	f3c3 2307 	ubfx	r3, r3, #8, #8
 802b9b6:	2dff      	cmp	r5, #255	@ 0xff
 802b9b8:	9309      	str	r3, [sp, #36]	@ 0x24
 802b9ba:	f004 13ff 	and.w	r3, r4, #16711935	@ 0xff00ff
 802b9be:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
 802b9c2:	d019      	beq.n	802b9f8 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x118>
 802b9c4:	fb03 f305 	mul.w	r3, r3, r5
 802b9c8:	fb04 f405 	mul.w	r4, r4, r5
 802b9cc:	ea4f 2b13 	mov.w	fp, r3, lsr #8
 802b9d0:	f00b 1bff 	and.w	fp, fp, #16711935	@ 0xff00ff
 802b9d4:	f103 1301 	add.w	r3, r3, #65537	@ 0x10001
 802b9d8:	f504 7780 	add.w	r7, r4, #256	@ 0x100
 802b9dc:	445b      	add	r3, fp
 802b9de:	eb07 2414 	add.w	r4, r7, r4, lsr #8
 802b9e2:	0a1b      	lsrs	r3, r3, #8
 802b9e4:	0a24      	lsrs	r4, r4, #8
 802b9e6:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 802b9ea:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
 802b9ee:	431c      	orrs	r4, r3
 802b9f0:	f004 13ff 	and.w	r3, r4, #16711935	@ 0xff00ff
 802b9f4:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
 802b9f8:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
 802b9fc:	f002 15ff 	and.w	r5, r2, #16711935	@ 0xff00ff
 802ba00:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 802ba04:	d018      	beq.n	802ba38 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x158>
 802ba06:	fb05 f50c 	mul.w	r5, r5, ip
 802ba0a:	fb02 f20c 	mul.w	r2, r2, ip
 802ba0e:	0a2f      	lsrs	r7, r5, #8
 802ba10:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
 802ba14:	f105 1501 	add.w	r5, r5, #65537	@ 0x10001
 802ba18:	f502 7c80 	add.w	ip, r2, #256	@ 0x100
 802ba1c:	443d      	add	r5, r7
 802ba1e:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 802ba22:	0a2d      	lsrs	r5, r5, #8
 802ba24:	0a12      	lsrs	r2, r2, #8
 802ba26:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 802ba2a:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 802ba2e:	432a      	orrs	r2, r5
 802ba30:	f002 15ff 	and.w	r5, r2, #16711935	@ 0xff00ff
 802ba34:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 802ba38:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
 802ba3c:	d01f      	beq.n	802ba7e <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x19e>
 802ba3e:	9f02      	ldr	r7, [sp, #8]
 802ba40:	fb07 fb08 	mul.w	fp, r7, r8
 802ba44:	9f03      	ldr	r7, [sp, #12]
 802ba46:	ea4f 2c1b 	mov.w	ip, fp, lsr #8
 802ba4a:	fb07 f808 	mul.w	r8, r7, r8
 802ba4e:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 802ba52:	f508 7780 	add.w	r7, r8, #256	@ 0x100
 802ba56:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 802ba5a:	eb07 2718 	add.w	r7, r7, r8, lsr #8
 802ba5e:	44dc      	add	ip, fp
 802ba60:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802ba64:	0a3f      	lsrs	r7, r7, #8
 802ba66:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 802ba6a:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 802ba6e:	ea4c 0807 	orr.w	r8, ip, r7
 802ba72:	f008 17ff 	and.w	r7, r8, #16711935	@ 0xff00ff
 802ba76:	9702      	str	r7, [sp, #8]
 802ba78:	f408 477f 	and.w	r7, r8, #65280	@ 0xff00
 802ba7c:	9703      	str	r7, [sp, #12]
 802ba7e:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
 802ba82:	d01d      	beq.n	802bac0 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x1e0>
 802ba84:	9f01      	ldr	r7, [sp, #4]
 802ba86:	fb06 f60e 	mul.w	r6, r6, lr
 802ba8a:	fb07 f80e 	mul.w	r8, r7, lr
 802ba8e:	ea4f 2c18 	mov.w	ip, r8, lsr #8
 802ba92:	f506 7780 	add.w	r7, r6, #256	@ 0x100
 802ba96:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 802ba9a:	f108 1801 	add.w	r8, r8, #65537	@ 0x10001
 802ba9e:	eb07 2616 	add.w	r6, r7, r6, lsr #8
 802baa2:	44e0      	add	r8, ip
 802baa4:	ea4f 2818 	mov.w	r8, r8, lsr #8
 802baa8:	0a36      	lsrs	r6, r6, #8
 802baaa:	f008 18ff 	and.w	r8, r8, #16711935	@ 0xff00ff
 802baae:	f406 467f 	and.w	r6, r6, #65280	@ 0xff00
 802bab2:	ea48 0606 	orr.w	r6, r8, r6
 802bab6:	f006 17ff 	and.w	r7, r6, #16711935	@ 0xff00ff
 802baba:	9701      	str	r7, [sp, #4]
 802babc:	f406 467f 	and.w	r6, r6, #65280	@ 0xff00
 802bac0:	f8bd e020 	ldrh.w	lr, [sp, #32]
 802bac4:	9f09      	ldr	r7, [sp, #36]	@ 0x24
 802bac6:	fb05 f509 	mul.w	r5, r5, r9
 802baca:	fb07 f70e 	mul.w	r7, r7, lr
 802bace:	f107 0c01 	add.w	ip, r7, #1
 802bad2:	eb0c 2c17 	add.w	ip, ip, r7, lsr #8
 802bad6:	ea6f 2c1c 	mvn.w	ip, ip, lsr #8
 802bada:	fb02 f209 	mul.w	r2, r2, r9
 802bade:	fb03 5501 	mla	r5, r3, r1, r5
 802bae2:	fb04 2201 	mla	r2, r4, r1, r2
 802bae6:	9b02      	ldr	r3, [sp, #8]
 802bae8:	fa5f fc8c 	uxtb.w	ip, ip
 802baec:	fb03 5500 	mla	r5, r3, r0, r5
 802baf0:	9b03      	ldr	r3, [sp, #12]
 802baf2:	fb03 2200 	mla	r2, r3, r0, r2
 802baf6:	9b01      	ldr	r3, [sp, #4]
 802baf8:	fb03 550a 	mla	r5, r3, sl, r5
 802bafc:	fb06 2a0a 	mla	sl, r6, sl, r2
 802bb00:	9a05      	ldr	r2, [sp, #20]
 802bb02:	9b04      	ldr	r3, [sp, #16]
 802bb04:	fb12 f10c 	smulbb	r1, r2, ip
 802bb08:	9a06      	ldr	r2, [sp, #24]
 802bb0a:	0a2e      	lsrs	r6, r5, #8
 802bb0c:	fb13 f30c 	smulbb	r3, r3, ip
 802bb10:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802bb14:	fb12 fc0c 	smulbb	ip, r2, ip
 802bb18:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 802bb1c:	f006 16ff 	and.w	r6, r6, #16711935	@ 0xff00ff
 802bb20:	ea46 060a 	orr.w	r6, r6, sl
 802bb24:	0c30      	lsrs	r0, r6, #16
 802bb26:	f3c6 2207 	ubfx	r2, r6, #8, #8
 802bb2a:	b2f6      	uxtb	r6, r6
 802bb2c:	fb00 330e 	mla	r3, r0, lr, r3
 802bb30:	fb02 120e 	mla	r2, r2, lr, r1
 802bb34:	fb06 c60e 	mla	r6, r6, lr, ip
 802bb38:	b298      	uxth	r0, r3
 802bb3a:	b291      	uxth	r1, r2
 802bb3c:	b2b6      	uxth	r6, r6
 802bb3e:	1c43      	adds	r3, r0, #1
 802bb40:	f106 0e01 	add.w	lr, r6, #1
 802bb44:	1c4a      	adds	r2, r1, #1
 802bb46:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 802bb4a:	eb0e 2616 	add.w	r6, lr, r6, lsr #8
 802bb4e:	eb02 2211 	add.w	r2, r2, r1, lsr #8
 802bb52:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 802bb56:	f403 4378 	and.w	r3, r3, #63488	@ 0xf800
 802bb5a:	0952      	lsrs	r2, r2, #5
 802bb5c:	4333      	orrs	r3, r6
 802bb5e:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 802bb62:	4313      	orrs	r3, r2
 802bb64:	9a07      	ldr	r2, [sp, #28]
 802bb66:	8013      	strh	r3, [r2, #0]
 802bb68:	b00b      	add	sp, #44	@ 0x2c
 802bb6a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802bb6e:	2e00      	cmp	r6, #0
 802bb70:	db01      	blt.n	802bb76 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x296>
 802bb72:	42b7      	cmp	r7, r6
 802bb74:	dc3c      	bgt.n	802bbf0 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x310>
 802bb76:	2500      	movs	r5, #0
 802bb78:	462c      	mov	r4, r5
 802bb7a:	1c72      	adds	r2, r6, #1
 802bb7c:	d427      	bmi.n	802bbce <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x2ee>
 802bb7e:	4297      	cmp	r7, r2
 802bb80:	dd25      	ble.n	802bbce <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x2ee>
 802bb82:	b131      	cbz	r1, 802bb92 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x2b2>
 802bb84:	f89e 2001 	ldrb.w	r2, [lr, #1]
 802bb88:	f85a 2022 	ldr.w	r2, [sl, r2, lsl #2]
 802bb8c:	ea4f 6c12 	mov.w	ip, r2, lsr #24
 802bb90:	e6d9      	b.n	802b946 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x66>
 802bb92:	f1b8 0f00 	cmp.w	r8, #0
 802bb96:	db3b      	blt.n	802bc10 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x330>
 802bb98:	45c1      	cmp	r9, r8
 802bb9a:	dd39      	ble.n	802bc10 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x330>
 802bb9c:	468c      	mov	ip, r1
 802bb9e:	460a      	mov	r2, r1
 802bba0:	b1c8      	cbz	r0, 802bbd6 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x2f6>
 802bba2:	2e00      	cmp	r6, #0
 802bba4:	db2d      	blt.n	802bc02 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x322>
 802bba6:	42b7      	cmp	r7, r6
 802bba8:	dd2b      	ble.n	802bc02 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x322>
 802bbaa:	f81e 8007 	ldrb.w	r8, [lr, r7]
 802bbae:	f85a 9028 	ldr.w	r9, [sl, r8, lsl #2]
 802bbb2:	ea4f 6819 	mov.w	r8, r9, lsr #24
 802bbb6:	3601      	adds	r6, #1
 802bbb8:	d41f      	bmi.n	802bbfa <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x31a>
 802bbba:	42b7      	cmp	r7, r6
 802bbbc:	dd1d      	ble.n	802bbfa <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x31a>
 802bbbe:	b321      	cbz	r1, 802bc0a <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x32a>
 802bbc0:	4477      	add	r7, lr
 802bbc2:	787e      	ldrb	r6, [r7, #1]
 802bbc4:	f85a 6026 	ldr.w	r6, [sl, r6, lsl #2]
 802bbc8:	ea4f 6e16 	mov.w	lr, r6, lsr #24
 802bbcc:	e6c6      	b.n	802b95c <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x7c>
 802bbce:	f04f 0c00 	mov.w	ip, #0
 802bbd2:	4662      	mov	r2, ip
 802bbd4:	e6b7      	b.n	802b946 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x66>
 802bbd6:	290f      	cmp	r1, #15
 802bbd8:	d821      	bhi.n	802bc1e <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x33e>
 802bbda:	b289      	uxth	r1, r1
 802bbdc:	4682      	mov	sl, r0
 802bbde:	4607      	mov	r7, r0
 802bbe0:	4683      	mov	fp, r0
 802bbe2:	e9cd 0002 	strd	r0, r0, [sp, #8]
 802bbe6:	4606      	mov	r6, r0
 802bbe8:	9001      	str	r0, [sp, #4]
 802bbea:	4686      	mov	lr, r0
 802bbec:	4680      	mov	r8, r0
 802bbee:	e6d1      	b.n	802b994 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xb4>
 802bbf0:	5d52      	ldrb	r2, [r2, r5]
 802bbf2:	f85a 4022 	ldr.w	r4, [sl, r2, lsl #2]
 802bbf6:	0e25      	lsrs	r5, r4, #24
 802bbf8:	e7bf      	b.n	802bb7a <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x29a>
 802bbfa:	f04f 0e00 	mov.w	lr, #0
 802bbfe:	4676      	mov	r6, lr
 802bc00:	e6ac      	b.n	802b95c <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x7c>
 802bc02:	f04f 0800 	mov.w	r8, #0
 802bc06:	46c1      	mov	r9, r8
 802bc08:	e7d5      	b.n	802bbb6 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x2d6>
 802bc0a:	460e      	mov	r6, r1
 802bc0c:	468e      	mov	lr, r1
 802bc0e:	e6a8      	b.n	802b962 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x82>
 802bc10:	460a      	mov	r2, r1
 802bc12:	460e      	mov	r6, r1
 802bc14:	4689      	mov	r9, r1
 802bc16:	468e      	mov	lr, r1
 802bc18:	4688      	mov	r8, r1
 802bc1a:	468c      	mov	ip, r1
 802bc1c:	e6a1      	b.n	802b962 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x82>
 802bc1e:	4b03      	ldr	r3, [pc, #12]	@ (802bc2c <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x34c>)
 802bc20:	4a03      	ldr	r2, [pc, #12]	@ (802bc30 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x350>)
 802bc22:	f240 31ca 	movw	r1, #970	@ 0x3ca
 802bc26:	4803      	ldr	r0, [pc, #12]	@ (802bc34 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x354>)
 802bc28:	f006 fda6 	bl	8032778 <__assert_func>
 802bc2c:	08036954 	.word	0x08036954
 802bc30:	08036fd0 	.word	0x08036fd0
 802bc34:	08036adc 	.word	0x08036adc

0802bc38 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 802bc38:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802bc3c:	ed2d 8b08 	vpush	{d8-d11}
 802bc40:	b0a9      	sub	sp, #164	@ 0xa4
 802bc42:	9c3f      	ldr	r4, [sp, #252]	@ 0xfc
 802bc44:	9022      	str	r0, [sp, #136]	@ 0x88
 802bc46:	9115      	str	r1, [sp, #84]	@ 0x54
 802bc48:	6860      	ldr	r0, [r4, #4]
 802bc4a:	9940      	ldr	r1, [sp, #256]	@ 0x100
 802bc4c:	9219      	str	r2, [sp, #100]	@ 0x64
 802bc4e:	9a41      	ldr	r2, [sp, #260]	@ 0x104
 802bc50:	e9dd ba3b 	ldrd	fp, sl, [sp, #236]	@ 0xec
 802bc54:	fb00 1202 	mla	r2, r0, r2, r1
 802bc58:	6820      	ldr	r0, [r4, #0]
 802bc5a:	46d1      	mov	r9, sl
 802bc5c:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 802bc60:	46da      	mov	sl, fp
 802bc62:	eeb0 aa40 	vmov.f32	s20, s0
 802bc66:	eef0 9a60 	vmov.f32	s19, s1
 802bc6a:	eeb0 9a41 	vmov.f32	s18, s2
 802bc6e:	eef0 8a62 	vmov.f32	s17, s5
 802bc72:	eeb0 8a43 	vmov.f32	s16, s6
 802bc76:	eef0 ba44 	vmov.f32	s23, s8
 802bc7a:	eeb0 ba64 	vmov.f32	s22, s9
 802bc7e:	eef0 aa45 	vmov.f32	s21, s10
 802bc82:	4693      	mov	fp, r2
 802bc84:	9942      	ldr	r1, [sp, #264]	@ 0x108
 802bc86:	9d42      	ldr	r5, [sp, #264]	@ 0x108
 802bc88:	6849      	ldr	r1, [r1, #4]
 802bc8a:	f89d 410c 	ldrb.w	r4, [sp, #268]	@ 0x10c
 802bc8e:	3104      	adds	r1, #4
 802bc90:	682d      	ldr	r5, [r5, #0]
 802bc92:	910e      	str	r1, [sp, #56]	@ 0x38
 802bc94:	b2a1      	uxth	r1, r4
 802bc96:	9423      	str	r4, [sp, #140]	@ 0x8c
 802bc98:	9511      	str	r5, [sp, #68]	@ 0x44
 802bc9a:	9112      	str	r1, [sp, #72]	@ 0x48
 802bc9c:	9a15      	ldr	r2, [sp, #84]	@ 0x54
 802bc9e:	2a00      	cmp	r2, #0
 802bca0:	dc02      	bgt.n	802bca8 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 802bca2:	9a19      	ldr	r2, [sp, #100]	@ 0x64
 802bca4:	2a00      	cmp	r2, #0
 802bca6:	dd65      	ble.n	802bd74 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13c>
 802bca8:	9a42      	ldr	r2, [sp, #264]	@ 0x108
 802bcaa:	2b00      	cmp	r3, #0
 802bcac:	e9d2 6c02 	ldrd	r6, ip, [r2, #8]
 802bcb0:	b234      	sxth	r4, r6
 802bcb2:	fa0f f78c 	sxth.w	r7, ip
 802bcb6:	f340 8396 	ble.w	802c3e6 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ae>
 802bcba:	1e65      	subs	r5, r4, #1
 802bcbc:	f107 3eff 	add.w	lr, r7, #4294967295
 802bcc0:	f8cd c024 	str.w	ip, [sp, #36]	@ 0x24
 802bcc4:	e9dd c83d 	ldrd	ip, r8, [sp, #244]	@ 0xf4
 802bcc8:	ea5f 422a 	movs.w	r2, sl, asr #16
 802bccc:	ea4f 4129 	mov.w	r1, r9, asr #16
 802bcd0:	d405      	bmi.n	802bcde <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 802bcd2:	42aa      	cmp	r2, r5
 802bcd4:	da03      	bge.n	802bcde <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 802bcd6:	2900      	cmp	r1, #0
 802bcd8:	db01      	blt.n	802bcde <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 802bcda:	4571      	cmp	r1, lr
 802bcdc:	db4f      	blt.n	802bd7e <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x146>
 802bcde:	1c50      	adds	r0, r2, #1
 802bce0:	d406      	bmi.n	802bcf0 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 802bce2:	42a0      	cmp	r0, r4
 802bce4:	dc04      	bgt.n	802bcf0 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 802bce6:	1c48      	adds	r0, r1, #1
 802bce8:	d402      	bmi.n	802bcf0 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 802bcea:	42b8      	cmp	r0, r7
 802bcec:	f340 834f 	ble.w	802c38e <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x756>
 802bcf0:	3b01      	subs	r3, #1
 802bcf2:	44e2      	add	sl, ip
 802bcf4:	44c1      	add	r9, r8
 802bcf6:	f10b 0b02 	add.w	fp, fp, #2
 802bcfa:	d1e5      	bne.n	802bcc8 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 802bcfc:	9b15      	ldr	r3, [sp, #84]	@ 0x54
 802bcfe:	2b00      	cmp	r3, #0
 802bd00:	dd38      	ble.n	802bd74 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13c>
 802bd02:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 802bd06:	ee3a aa2b 	vadd.f32	s20, s20, s23
 802bd0a:	ee79 9a8b 	vadd.f32	s19, s19, s22
 802bd0e:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 802bd12:	ee39 9a2a 	vadd.f32	s18, s18, s21
 802bd16:	ee29 6aa7 	vmul.f32	s12, s19, s15
 802bd1a:	ee69 7a27 	vmul.f32	s15, s18, s15
 802bd1e:	ee76 6a68 	vsub.f32	s13, s12, s17
 802bd22:	ee37 7ac8 	vsub.f32	s14, s15, s16
 802bd26:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802bd2a:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 802bd2e:	ee16 2a90 	vmov	r2, s13
 802bd32:	3b01      	subs	r3, #1
 802bd34:	9315      	str	r3, [sp, #84]	@ 0x54
 802bd36:	9b3a      	ldr	r3, [sp, #232]	@ 0xe8
 802bd38:	fb92 f3f3 	sdiv	r3, r2, r3
 802bd3c:	ee17 2a10 	vmov	r2, s14
 802bd40:	eeb0 7a48 	vmov.f32	s14, s16
 802bd44:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 802bd48:	ee17 9a10 	vmov	r9, s14
 802bd4c:	eeb0 7a68 	vmov.f32	s14, s17
 802bd50:	933d      	str	r3, [sp, #244]	@ 0xf4
 802bd52:	9b3a      	ldr	r3, [sp, #232]	@ 0xe8
 802bd54:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 802bd58:	fb92 f3f3 	sdiv	r3, r2, r3
 802bd5c:	9a19      	ldr	r2, [sp, #100]	@ 0x64
 802bd5e:	933e      	str	r3, [sp, #248]	@ 0xf8
 802bd60:	ee17 aa10 	vmov	sl, s14
 802bd64:	9b3a      	ldr	r3, [sp, #232]	@ 0xe8
 802bd66:	eeb0 8a67 	vmov.f32	s16, s15
 802bd6a:	eef0 8a46 	vmov.f32	s17, s12
 802bd6e:	bf08      	it	eq
 802bd70:	4613      	moveq	r3, r2
 802bd72:	e793      	b.n	802bc9c <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 802bd74:	b029      	add	sp, #164	@ 0xa4
 802bd76:	ecbd 8b08 	vpop	{d8-d11}
 802bd7a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802bd7e:	f8dd c024 	ldr.w	ip, [sp, #36]	@ 0x24
 802bd82:	f8cd b024 	str.w	fp, [sp, #36]	@ 0x24
 802bd86:	983d      	ldr	r0, [sp, #244]	@ 0xf4
 802bd88:	1e59      	subs	r1, r3, #1
 802bd8a:	fb00 a201 	mla	r2, r0, r1, sl
 802bd8e:	1412      	asrs	r2, r2, #16
 802bd90:	910d      	str	r1, [sp, #52]	@ 0x34
 802bd92:	f100 8161 	bmi.w	802c058 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x420>
 802bd96:	42aa      	cmp	r2, r5
 802bd98:	f280 815e 	bge.w	802c058 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x420>
 802bd9c:	9a3e      	ldr	r2, [sp, #248]	@ 0xf8
 802bd9e:	fb02 9201 	mla	r2, r2, r1, r9
 802bda2:	1412      	asrs	r2, r2, #16
 802bda4:	f100 8158 	bmi.w	802c058 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x420>
 802bda8:	3f01      	subs	r7, #1
 802bdaa:	42ba      	cmp	r2, r7
 802bdac:	f280 8154 	bge.w	802c058 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x420>
 802bdb0:	2b00      	cmp	r3, #0
 802bdb2:	dda3      	ble.n	802bcfc <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xc4>
 802bdb4:	eb0b 0b43 	add.w	fp, fp, r3, lsl #1
 802bdb8:	f8cd b040 	str.w	fp, [sp, #64]	@ 0x40
 802bdbc:	46d0      	mov	r8, sl
 802bdbe:	4621      	mov	r1, r4
 802bdc0:	e129      	b.n	802c016 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3de>
 802bdc2:	f893 c001 	ldrb.w	ip, [r3, #1]
 802bdc6:	f856 502c 	ldr.w	r5, [r6, ip, lsl #2]
 802bdca:	9513      	str	r5, [sp, #76]	@ 0x4c
 802bdcc:	0e2d      	lsrs	r5, r5, #24
 802bdce:	950a      	str	r5, [sp, #40]	@ 0x28
 802bdd0:	b162      	cbz	r2, 802bdec <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
 802bdd2:	185d      	adds	r5, r3, r1
 802bdd4:	786d      	ldrb	r5, [r5, #1]
 802bdd6:	5c5b      	ldrb	r3, [r3, r1]
 802bdd8:	f856 1025 	ldr.w	r1, [r6, r5, lsl #2]
 802bddc:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 802bde0:	9116      	str	r1, [sp, #88]	@ 0x58
 802bde2:	9314      	str	r3, [sp, #80]	@ 0x50
 802bde4:	0e09      	lsrs	r1, r1, #24
 802bde6:	0e1b      	lsrs	r3, r3, #24
 802bde8:	910c      	str	r1, [sp, #48]	@ 0x30
 802bdea:	930b      	str	r3, [sp, #44]	@ 0x2c
 802bdec:	b2a4      	uxth	r4, r4
 802bdee:	b292      	uxth	r2, r2
 802bdf0:	fb04 f502 	mul.w	r5, r4, r2
 802bdf4:	0124      	lsls	r4, r4, #4
 802bdf6:	1b66      	subs	r6, r4, r5
 802bdf8:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 802bdfa:	b2b6      	uxth	r6, r6
 802bdfc:	fb06 f103 	mul.w	r1, r6, r3
 802be00:	ebc5 1202 	rsb	r2, r5, r2, lsl #4
 802be04:	b292      	uxth	r2, r2
 802be06:	f5c4 7380 	rsb	r3, r4, #256	@ 0x100
 802be0a:	1a9b      	subs	r3, r3, r2
 802be0c:	b29b      	uxth	r3, r3
 802be0e:	fb03 1100 	mla	r1, r3, r0, r1
 802be12:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 802be14:	fb02 1104 	mla	r1, r2, r4, r1
 802be18:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 802be1a:	fb05 1104 	mla	r1, r5, r4, r1
 802be1e:	f3c1 2107 	ubfx	r1, r1, #8, #8
 802be22:	2900      	cmp	r1, #0
 802be24:	f000 80ea 	beq.w	802bffc <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c4>
 802be28:	f007 14ff 	and.w	r4, r7, #16711935	@ 0xff00ff
 802be2c:	28ff      	cmp	r0, #255	@ 0xff
 802be2e:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 802be32:	940f      	str	r4, [sp, #60]	@ 0x3c
 802be34:	970d      	str	r7, [sp, #52]	@ 0x34
 802be36:	d01c      	beq.n	802be72 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x23a>
 802be38:	fb04 f400 	mul.w	r4, r4, r0
 802be3c:	4627      	mov	r7, r4
 802be3e:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 802be40:	fb04 fe00 	mul.w	lr, r4, r0
 802be44:	0a3c      	lsrs	r4, r7, #8
 802be46:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
 802be4a:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 802be4e:	f50e 7080 	add.w	r0, lr, #256	@ 0x100
 802be52:	4427      	add	r7, r4
 802be54:	eb00 201e 	add.w	r0, r0, lr, lsr #8
 802be58:	0a3f      	lsrs	r7, r7, #8
 802be5a:	0a00      	lsrs	r0, r0, #8
 802be5c:	f400 407f 	and.w	r0, r0, #65280	@ 0xff00
 802be60:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
 802be64:	4307      	orrs	r7, r0
 802be66:	f007 10ff 	and.w	r0, r7, #16711935	@ 0xff00ff
 802be6a:	900f      	str	r0, [sp, #60]	@ 0x3c
 802be6c:	f407 407f 	and.w	r0, r7, #65280	@ 0xff00
 802be70:	900d      	str	r0, [sp, #52]	@ 0x34
 802be72:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 802be74:	f000 1cff 	and.w	ip, r0, #16711935	@ 0xff00ff
 802be78:	f400 4e7f 	and.w	lr, r0, #65280	@ 0xff00
 802be7c:	980a      	ldr	r0, [sp, #40]	@ 0x28
 802be7e:	28ff      	cmp	r0, #255	@ 0xff
 802be80:	d01c      	beq.n	802bebc <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x284>
 802be82:	fb0c fc00 	mul.w	ip, ip, r0
 802be86:	fb0e fe00 	mul.w	lr, lr, r0
 802be8a:	ea4f 241c 	mov.w	r4, ip, lsr #8
 802be8e:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
 802be92:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 802be96:	f50e 7080 	add.w	r0, lr, #256	@ 0x100
 802be9a:	44a4      	add	ip, r4
 802be9c:	eb00 2e1e 	add.w	lr, r0, lr, lsr #8
 802bea0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802bea4:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802bea8:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 802beac:	f40e 4e7f 	and.w	lr, lr, #65280	@ 0xff00
 802beb0:	ea4c 0e0e 	orr.w	lr, ip, lr
 802beb4:	f00e 1cff 	and.w	ip, lr, #16711935	@ 0xff00ff
 802beb8:	f40e 4e7f 	and.w	lr, lr, #65280	@ 0xff00
 802bebc:	9814      	ldr	r0, [sp, #80]	@ 0x50
 802bebe:	f000 17ff 	and.w	r7, r0, #16711935	@ 0xff00ff
 802bec2:	f400 4a7f 	and.w	sl, r0, #65280	@ 0xff00
 802bec6:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 802bec8:	28ff      	cmp	r0, #255	@ 0xff
 802beca:	d01a      	beq.n	802bf02 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 802becc:	fb07 f700 	mul.w	r7, r7, r0
 802bed0:	fb0a fa00 	mul.w	sl, sl, r0
 802bed4:	0a3c      	lsrs	r4, r7, #8
 802bed6:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
 802beda:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 802bede:	f50a 7080 	add.w	r0, sl, #256	@ 0x100
 802bee2:	4427      	add	r7, r4
 802bee4:	eb00 2a1a 	add.w	sl, r0, sl, lsr #8
 802bee8:	0a3f      	lsrs	r7, r7, #8
 802beea:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802beee:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
 802bef2:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 802bef6:	ea47 0a0a 	orr.w	sl, r7, sl
 802befa:	f00a 17ff 	and.w	r7, sl, #16711935	@ 0xff00ff
 802befe:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 802bf02:	9c16      	ldr	r4, [sp, #88]	@ 0x58
 802bf04:	f004 10ff 	and.w	r0, r4, #16711935	@ 0xff00ff
 802bf08:	f404 4b7f 	and.w	fp, r4, #65280	@ 0xff00
 802bf0c:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 802bf0e:	2cff      	cmp	r4, #255	@ 0xff
 802bf10:	d01d      	beq.n	802bf4e <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x316>
 802bf12:	fb00 f004 	mul.w	r0, r0, r4
 802bf16:	fb0b fb04 	mul.w	fp, fp, r4
 802bf1a:	0a04      	lsrs	r4, r0, #8
 802bf1c:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
 802bf20:	9418      	str	r4, [sp, #96]	@ 0x60
 802bf22:	f50b 7480 	add.w	r4, fp, #256	@ 0x100
 802bf26:	9417      	str	r4, [sp, #92]	@ 0x5c
 802bf28:	9c18      	ldr	r4, [sp, #96]	@ 0x60
 802bf2a:	f100 1001 	add.w	r0, r0, #65537	@ 0x10001
 802bf2e:	4420      	add	r0, r4
 802bf30:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
 802bf32:	0a00      	lsrs	r0, r0, #8
 802bf34:	eb04 241b 	add.w	r4, r4, fp, lsr #8
 802bf38:	0a24      	lsrs	r4, r4, #8
 802bf3a:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 802bf3e:	f404 4b7f 	and.w	fp, r4, #65280	@ 0xff00
 802bf42:	ea40 0b0b 	orr.w	fp, r0, fp
 802bf46:	f00b 10ff 	and.w	r0, fp, #16711935	@ 0xff00ff
 802bf4a:	f40b 4b7f 	and.w	fp, fp, #65280	@ 0xff00
 802bf4e:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 802bf50:	fb0c fc06 	mul.w	ip, ip, r6
 802bf54:	fb01 f104 	mul.w	r1, r1, r4
 802bf58:	1c4c      	adds	r4, r1, #1
 802bf5a:	eb04 2111 	add.w	r1, r4, r1, lsr #8
 802bf5e:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 802bf62:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 802bf64:	fb0e f606 	mul.w	r6, lr, r6
 802bf68:	fb04 cc03 	mla	ip, r4, r3, ip
 802bf6c:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 802bf6e:	fb07 cc02 	mla	ip, r7, r2, ip
 802bf72:	fb04 6603 	mla	r6, r4, r3, r6
 802bf76:	fb0a 6602 	mla	r6, sl, r2, r6
 802bf7a:	fb00 cc05 	mla	ip, r0, r5, ip
 802bf7e:	fb0b 6605 	mla	r6, fp, r5, r6
 802bf82:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802bf86:	0a36      	lsrs	r6, r6, #8
 802bf88:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 802bf8c:	f406 437f 	and.w	r3, r6, #65280	@ 0xff00
 802bf90:	ea4c 0303 	orr.w	r3, ip, r3
 802bf94:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 802bf96:	9809      	ldr	r0, [sp, #36]	@ 0x24
 802bf98:	0c1f      	lsrs	r7, r3, #16
 802bf9a:	f3c3 2607 	ubfx	r6, r3, #8, #8
 802bf9e:	b2db      	uxtb	r3, r3
 802bfa0:	8805      	ldrh	r5, [r0, #0]
 802bfa2:	fb13 f302 	smulbb	r3, r3, r2
 802bfa6:	fb17 f702 	smulbb	r7, r7, r2
 802bfaa:	fb16 f602 	smulbb	r6, r6, r2
 802bfae:	1228      	asrs	r0, r5, #8
 802bfb0:	10ea      	asrs	r2, r5, #3
 802bfb2:	00ed      	lsls	r5, r5, #3
 802bfb4:	b2c9      	uxtb	r1, r1
 802bfb6:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 802bfba:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 802bfbe:	b2ed      	uxtb	r5, r5
 802bfc0:	fb00 7001 	mla	r0, r0, r1, r7
 802bfc4:	fb02 6201 	mla	r2, r2, r1, r6
 802bfc8:	fb05 3101 	mla	r1, r5, r1, r3
 802bfcc:	b280      	uxth	r0, r0
 802bfce:	b292      	uxth	r2, r2
 802bfd0:	b289      	uxth	r1, r1
 802bfd2:	1c43      	adds	r3, r0, #1
 802bfd4:	1c4c      	adds	r4, r1, #1
 802bfd6:	f102 0c01 	add.w	ip, r2, #1
 802bfda:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 802bfde:	eb04 2111 	add.w	r1, r4, r1, lsr #8
 802bfe2:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 802bfe6:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
 802bfea:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 802bfee:	0952      	lsrs	r2, r2, #5
 802bff0:	4308      	orrs	r0, r1
 802bff2:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 802bff6:	4302      	orrs	r2, r0
 802bff8:	9809      	ldr	r0, [sp, #36]	@ 0x24
 802bffa:	8002      	strh	r2, [r0, #0]
 802bffc:	9a3d      	ldr	r2, [sp, #244]	@ 0xf4
 802bffe:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 802c000:	4490      	add	r8, r2
 802c002:	9a3e      	ldr	r2, [sp, #248]	@ 0xf8
 802c004:	3302      	adds	r3, #2
 802c006:	4491      	add	r9, r2
 802c008:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 802c00a:	9309      	str	r3, [sp, #36]	@ 0x24
 802c00c:	4293      	cmp	r3, r2
 802c00e:	d021      	beq.n	802c054 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x41c>
 802c010:	9b42      	ldr	r3, [sp, #264]	@ 0x108
 802c012:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802c016:	ea4f 4228 	mov.w	r2, r8, asr #16
 802c01a:	ea4f 4329 	mov.w	r3, r9, asr #16
 802c01e:	fb01 2303 	mla	r3, r1, r3, r2
 802c022:	9811      	ldr	r0, [sp, #68]	@ 0x44
 802c024:	9e0e      	ldr	r6, [sp, #56]	@ 0x38
 802c026:	5cc2      	ldrb	r2, [r0, r3]
 802c028:	f3c8 3403 	ubfx	r4, r8, #12, #4
 802c02c:	f856 7022 	ldr.w	r7, [r6, r2, lsl #2]
 802c030:	4403      	add	r3, r0
 802c032:	f3c9 3203 	ubfx	r2, r9, #12, #4
 802c036:	0e38      	lsrs	r0, r7, #24
 802c038:	2c00      	cmp	r4, #0
 802c03a:	f47f aec2 	bne.w	802bdc2 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18a>
 802c03e:	2a00      	cmp	r2, #0
 802c040:	f43f aed4 	beq.w	802bdec <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
 802c044:	5c5b      	ldrb	r3, [r3, r1]
 802c046:	990e      	ldr	r1, [sp, #56]	@ 0x38
 802c048:	f851 3023 	ldr.w	r3, [r1, r3, lsl #2]
 802c04c:	9314      	str	r3, [sp, #80]	@ 0x50
 802c04e:	0e1b      	lsrs	r3, r3, #24
 802c050:	930b      	str	r3, [sp, #44]	@ 0x2c
 802c052:	e6cb      	b.n	802bdec <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
 802c054:	4693      	mov	fp, r2
 802c056:	e651      	b.n	802bcfc <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xc4>
 802c058:	2b00      	cmp	r3, #0
 802c05a:	f77f ae4f 	ble.w	802bcfc <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xc4>
 802c05e:	f8dd 8034 	ldr.w	r8, [sp, #52]	@ 0x34
 802c062:	ea4f 422a 	mov.w	r2, sl, asr #16
 802c066:	ea4f 4129 	mov.w	r1, r9, asr #16
 802c06a:	2a00      	cmp	r2, #0
 802c06c:	465f      	mov	r7, fp
 802c06e:	f8cd b024 	str.w	fp, [sp, #36]	@ 0x24
 802c072:	9c42      	ldr	r4, [sp, #264]	@ 0x108
 802c074:	e9dd 5b3d 	ldrd	r5, fp, [sp, #244]	@ 0xf4
 802c078:	f3ca 3003 	ubfx	r0, sl, #12, #4
 802c07c:	f3c9 3e03 	ubfx	lr, r9, #12, #4
 802c080:	f2c0 815c 	blt.w	802c33c <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x704>
 802c084:	1e73      	subs	r3, r6, #1
 802c086:	429a      	cmp	r2, r3
 802c088:	f280 8158 	bge.w	802c33c <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x704>
 802c08c:	2900      	cmp	r1, #0
 802c08e:	f2c0 8155 	blt.w	802c33c <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x704>
 802c092:	f10c 33ff 	add.w	r3, ip, #4294967295
 802c096:	4299      	cmp	r1, r3
 802c098:	f280 8150 	bge.w	802c33c <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x704>
 802c09c:	b233      	sxth	r3, r6
 802c09e:	fb01 2203 	mla	r2, r1, r3, r2
 802c0a2:	9911      	ldr	r1, [sp, #68]	@ 0x44
 802c0a4:	930f      	str	r3, [sp, #60]	@ 0x3c
 802c0a6:	5c8b      	ldrb	r3, [r1, r2]
 802c0a8:	440a      	add	r2, r1
 802c0aa:	4616      	mov	r6, r2
 802c0ac:	9210      	str	r2, [sp, #64]	@ 0x40
 802c0ae:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 802c0b0:	f852 1023 	ldr.w	r1, [r2, r3, lsl #2]
 802c0b4:	0e0b      	lsrs	r3, r1, #24
 802c0b6:	2800      	cmp	r0, #0
 802c0b8:	f000 816f 	beq.w	802c39a <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x762>
 802c0bc:	f896 c001 	ldrb.w	ip, [r6, #1]
 802c0c0:	f852 202c 	ldr.w	r2, [r2, ip, lsl #2]
 802c0c4:	9224      	str	r2, [sp, #144]	@ 0x90
 802c0c6:	0e12      	lsrs	r2, r2, #24
 802c0c8:	921a      	str	r2, [sp, #104]	@ 0x68
 802c0ca:	f1be 0f00 	cmp.w	lr, #0
 802c0ce:	f040 8172 	bne.w	802c3b6 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x77e>
 802c0d2:	b280      	uxth	r0, r0
 802c0d4:	fa1f fc8e 	uxth.w	ip, lr
 802c0d8:	fb00 f20c 	mul.w	r2, r0, ip
 802c0dc:	0106      	lsls	r6, r0, #4
 802c0de:	1ab0      	subs	r0, r6, r2
 802c0e0:	b280      	uxth	r0, r0
 802c0e2:	4686      	mov	lr, r0
 802c0e4:	900f      	str	r0, [sp, #60]	@ 0x3c
 802c0e6:	981a      	ldr	r0, [sp, #104]	@ 0x68
 802c0e8:	ebc2 1c0c 	rsb	ip, r2, ip, lsl #4
 802c0ec:	fb0e f000 	mul.w	r0, lr, r0
 802c0f0:	f5c6 7680 	rsb	r6, r6, #256	@ 0x100
 802c0f4:	fa1f fe8c 	uxth.w	lr, ip
 802c0f8:	eba6 060e 	sub.w	r6, r6, lr
 802c0fc:	b2b6      	uxth	r6, r6
 802c0fe:	fb06 0003 	mla	r0, r6, r3, r0
 802c102:	9610      	str	r6, [sp, #64]	@ 0x40
 802c104:	9e1b      	ldr	r6, [sp, #108]	@ 0x6c
 802c106:	fb0e 0006 	mla	r0, lr, r6, r0
 802c10a:	9e1c      	ldr	r6, [sp, #112]	@ 0x70
 802c10c:	fb02 0006 	mla	r0, r2, r6, r0
 802c110:	f3c0 2007 	ubfx	r0, r0, #8, #8
 802c114:	9017      	str	r0, [sp, #92]	@ 0x5c
 802c116:	2800      	cmp	r0, #0
 802c118:	f000 80fa 	beq.w	802c310 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6d8>
 802c11c:	f001 10ff 	and.w	r0, r1, #16711935	@ 0xff00ff
 802c120:	2bff      	cmp	r3, #255	@ 0xff
 802c122:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 802c126:	9018      	str	r0, [sp, #96]	@ 0x60
 802c128:	911d      	str	r1, [sp, #116]	@ 0x74
 802c12a:	d01b      	beq.n	802c164 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52c>
 802c12c:	fb01 f103 	mul.w	r1, r1, r3
 802c130:	fb00 f003 	mul.w	r0, r0, r3
 802c134:	460b      	mov	r3, r1
 802c136:	0a01      	lsrs	r1, r0, #8
 802c138:	f100 1601 	add.w	r6, r0, #65537	@ 0x10001
 802c13c:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 802c140:	f503 7080 	add.w	r0, r3, #256	@ 0x100
 802c144:	4431      	add	r1, r6
 802c146:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 802c14a:	0a09      	lsrs	r1, r1, #8
 802c14c:	0a1b      	lsrs	r3, r3, #8
 802c14e:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 802c152:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 802c156:	430b      	orrs	r3, r1
 802c158:	f003 11ff 	and.w	r1, r3, #16711935	@ 0xff00ff
 802c15c:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 802c160:	9118      	str	r1, [sp, #96]	@ 0x60
 802c162:	931d      	str	r3, [sp, #116]	@ 0x74
 802c164:	9924      	ldr	r1, [sp, #144]	@ 0x90
 802c166:	9e1a      	ldr	r6, [sp, #104]	@ 0x68
 802c168:	f001 13ff 	and.w	r3, r1, #16711935	@ 0xff00ff
 802c16c:	2eff      	cmp	r6, #255	@ 0xff
 802c16e:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 802c172:	931e      	str	r3, [sp, #120]	@ 0x78
 802c174:	911f      	str	r1, [sp, #124]	@ 0x7c
 802c176:	d01b      	beq.n	802c1b0 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x578>
 802c178:	fb01 f106 	mul.w	r1, r1, r6
 802c17c:	fb03 f306 	mul.w	r3, r3, r6
 802c180:	460e      	mov	r6, r1
 802c182:	0a19      	lsrs	r1, r3, #8
 802c184:	f103 1001 	add.w	r0, r3, #65537	@ 0x10001
 802c188:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 802c18c:	f506 7380 	add.w	r3, r6, #256	@ 0x100
 802c190:	4401      	add	r1, r0
 802c192:	eb03 2316 	add.w	r3, r3, r6, lsr #8
 802c196:	0a09      	lsrs	r1, r1, #8
 802c198:	0a1b      	lsrs	r3, r3, #8
 802c19a:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 802c19e:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 802c1a2:	4319      	orrs	r1, r3
 802c1a4:	f001 13ff 	and.w	r3, r1, #16711935	@ 0xff00ff
 802c1a8:	931e      	str	r3, [sp, #120]	@ 0x78
 802c1aa:	f401 437f 	and.w	r3, r1, #65280	@ 0xff00
 802c1ae:	931f      	str	r3, [sp, #124]	@ 0x7c
 802c1b0:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 802c1b2:	f003 11ff 	and.w	r1, r3, #16711935	@ 0xff00ff
 802c1b6:	f403 4c7f 	and.w	ip, r3, #65280	@ 0xff00
 802c1ba:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 802c1bc:	9120      	str	r1, [sp, #128]	@ 0x80
 802c1be:	2bff      	cmp	r3, #255	@ 0xff
 802c1c0:	d01c      	beq.n	802c1fc <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c4>
 802c1c2:	fb01 f103 	mul.w	r1, r1, r3
 802c1c6:	4608      	mov	r0, r1
 802c1c8:	fb0c fc03 	mul.w	ip, ip, r3
 802c1cc:	0a09      	lsrs	r1, r1, #8
 802c1ce:	f50c 7380 	add.w	r3, ip, #256	@ 0x100
 802c1d2:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 802c1d6:	f100 1001 	add.w	r0, r0, #65537	@ 0x10001
 802c1da:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 802c1de:	4408      	add	r0, r1
 802c1e0:	0a00      	lsrs	r0, r0, #8
 802c1e2:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802c1e6:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 802c1ea:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 802c1ee:	ea40 0c0c 	orr.w	ip, r0, ip
 802c1f2:	f00c 13ff 	and.w	r3, ip, #16711935	@ 0xff00ff
 802c1f6:	9320      	str	r3, [sp, #128]	@ 0x80
 802c1f8:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 802c1fc:	9927      	ldr	r1, [sp, #156]	@ 0x9c
 802c1fe:	f001 13ff 	and.w	r3, r1, #16711935	@ 0xff00ff
 802c202:	f401 467f 	and.w	r6, r1, #65280	@ 0xff00
 802c206:	991c      	ldr	r1, [sp, #112]	@ 0x70
 802c208:	9321      	str	r3, [sp, #132]	@ 0x84
 802c20a:	29ff      	cmp	r1, #255	@ 0xff
 802c20c:	d019      	beq.n	802c242 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60a>
 802c20e:	fb03 f301 	mul.w	r3, r3, r1
 802c212:	fb06 f601 	mul.w	r6, r6, r1
 802c216:	0a19      	lsrs	r1, r3, #8
 802c218:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 802c21c:	f103 1301 	add.w	r3, r3, #65537	@ 0x10001
 802c220:	f506 7080 	add.w	r0, r6, #256	@ 0x100
 802c224:	4419      	add	r1, r3
 802c226:	eb00 2616 	add.w	r6, r0, r6, lsr #8
 802c22a:	0a09      	lsrs	r1, r1, #8
 802c22c:	0a36      	lsrs	r6, r6, #8
 802c22e:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 802c232:	f406 467f 	and.w	r6, r6, #65280	@ 0xff00
 802c236:	430e      	orrs	r6, r1
 802c238:	f006 13ff 	and.w	r3, r6, #16711935	@ 0xff00ff
 802c23c:	9321      	str	r3, [sp, #132]	@ 0x84
 802c23e:	f406 467f 	and.w	r6, r6, #65280	@ 0xff00
 802c242:	9817      	ldr	r0, [sp, #92]	@ 0x5c
 802c244:	9912      	ldr	r1, [sp, #72]	@ 0x48
 802c246:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 802c248:	fb00 f001 	mul.w	r0, r0, r1
 802c24c:	4601      	mov	r1, r0
 802c24e:	3001      	adds	r0, #1
 802c250:	eb00 2111 	add.w	r1, r0, r1, lsr #8
 802c254:	ea6f 2011 	mvn.w	r0, r1, lsr #8
 802c258:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 802c25a:	9025      	str	r0, [sp, #148]	@ 0x94
 802c25c:	981e      	ldr	r0, [sp, #120]	@ 0x78
 802c25e:	fb00 f001 	mul.w	r0, r0, r1
 802c262:	900f      	str	r0, [sp, #60]	@ 0x3c
 802c264:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 802c266:	fb00 f001 	mul.w	r0, r0, r1
 802c26a:	9017      	str	r0, [sp, #92]	@ 0x5c
 802c26c:	9818      	ldr	r0, [sp, #96]	@ 0x60
 802c26e:	4601      	mov	r1, r0
 802c270:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 802c272:	fb01 0003 	mla	r0, r1, r3, r0
 802c276:	900f      	str	r0, [sp, #60]	@ 0x3c
 802c278:	981d      	ldr	r0, [sp, #116]	@ 0x74
 802c27a:	4601      	mov	r1, r0
 802c27c:	9817      	ldr	r0, [sp, #92]	@ 0x5c
 802c27e:	fb01 0103 	mla	r1, r1, r3, r0
 802c282:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 802c284:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 802c286:	fb0c 110e 	mla	r1, ip, lr, r1
 802c28a:	fb03 000e 	mla	r0, r3, lr, r0
 802c28e:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 802c290:	f89d e094 	ldrb.w	lr, [sp, #148]	@ 0x94
 802c294:	fb03 0002 	mla	r0, r3, r2, r0
 802c298:	fb06 1302 	mla	r3, r6, r2, r1
 802c29c:	0a02      	lsrs	r2, r0, #8
 802c29e:	0a1b      	lsrs	r3, r3, #8
 802c2a0:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 802c2a4:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 802c2a8:	4313      	orrs	r3, r2
 802c2aa:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 802c2ac:	ea4f 4c13 	mov.w	ip, r3, lsr #16
 802c2b0:	f3c3 2607 	ubfx	r6, r3, #8, #8
 802c2b4:	b2db      	uxtb	r3, r3
 802c2b6:	8838      	ldrh	r0, [r7, #0]
 802c2b8:	fb16 f602 	smulbb	r6, r6, r2
 802c2bc:	fb1c fc02 	smulbb	ip, ip, r2
 802c2c0:	fb13 f302 	smulbb	r3, r3, r2
 802c2c4:	1201      	asrs	r1, r0, #8
 802c2c6:	10c2      	asrs	r2, r0, #3
 802c2c8:	00c0      	lsls	r0, r0, #3
 802c2ca:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 802c2ce:	b2c0      	uxtb	r0, r0
 802c2d0:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 802c2d4:	fb01 cc0e 	mla	ip, r1, lr, ip
 802c2d8:	fb02 620e 	mla	r2, r2, lr, r6
 802c2dc:	fb00 330e 	mla	r3, r0, lr, r3
 802c2e0:	b296      	uxth	r6, r2
 802c2e2:	b29b      	uxth	r3, r3
 802c2e4:	fa1f fc8c 	uxth.w	ip, ip
 802c2e8:	1c58      	adds	r0, r3, #1
 802c2ea:	f10c 0201 	add.w	r2, ip, #1
 802c2ee:	1c71      	adds	r1, r6, #1
 802c2f0:	eb02 221c 	add.w	r2, r2, ip, lsr #8
 802c2f4:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 802c2f8:	eb01 2116 	add.w	r1, r1, r6, lsr #8
 802c2fc:	f402 4378 	and.w	r3, r2, #63488	@ 0xf800
 802c300:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 802c304:	094a      	lsrs	r2, r1, #5
 802c306:	4303      	orrs	r3, r0
 802c308:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 802c30c:	4313      	orrs	r3, r2
 802c30e:	803b      	strh	r3, [r7, #0]
 802c310:	f1b8 0f00 	cmp.w	r8, #0
 802c314:	f107 0702 	add.w	r7, r7, #2
 802c318:	44aa      	add	sl, r5
 802c31a:	44d9      	add	r9, fp
 802c31c:	dd2e      	ble.n	802c37c <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x744>
 802c31e:	e9d4 6c02 	ldrd	r6, ip, [r4, #8]
 802c322:	ea4f 422a 	mov.w	r2, sl, asr #16
 802c326:	2a00      	cmp	r2, #0
 802c328:	f108 38ff 	add.w	r8, r8, #4294967295
 802c32c:	ea4f 4129 	mov.w	r1, r9, asr #16
 802c330:	f3ca 3003 	ubfx	r0, sl, #12, #4
 802c334:	f3c9 3e03 	ubfx	lr, r9, #12, #4
 802c338:	f6bf aea4 	bge.w	802c084 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44c>
 802c33c:	1c53      	adds	r3, r2, #1
 802c33e:	d4e7      	bmi.n	802c310 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6d8>
 802c340:	42b3      	cmp	r3, r6
 802c342:	dce5      	bgt.n	802c310 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6d8>
 802c344:	1c4b      	adds	r3, r1, #1
 802c346:	d4e3      	bmi.n	802c310 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6d8>
 802c348:	4563      	cmp	r3, ip
 802c34a:	dce1      	bgt.n	802c310 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6d8>
 802c34c:	fa0f f38c 	sxth.w	r3, ip
 802c350:	b236      	sxth	r6, r6
 802c352:	e9cd 6300 	strd	r6, r3, [sp]
 802c356:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 802c358:	e9cd 1003 	strd	r1, r0, [sp, #12]
 802c35c:	e9cd e305 	strd	lr, r3, [sp, #20]
 802c360:	9202      	str	r2, [sp, #8]
 802c362:	4639      	mov	r1, r7
 802c364:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 802c366:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 802c368:	9822      	ldr	r0, [sp, #136]	@ 0x88
 802c36a:	f7ff fab9 	bl	802b8e0 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>
 802c36e:	f1b8 0f00 	cmp.w	r8, #0
 802c372:	f107 0702 	add.w	r7, r7, #2
 802c376:	44aa      	add	sl, r5
 802c378:	44d9      	add	r9, fp
 802c37a:	dcd0      	bgt.n	802c31e <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e6>
 802c37c:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 802c37e:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
 802c382:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 802c386:	3301      	adds	r3, #1
 802c388:	eb0b 0b43 	add.w	fp, fp, r3, lsl #1
 802c38c:	e4b6      	b.n	802bcfc <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xc4>
 802c38e:	3b01      	subs	r3, #1
 802c390:	f8dd c024 	ldr.w	ip, [sp, #36]	@ 0x24
 802c394:	930d      	str	r3, [sp, #52]	@ 0x34
 802c396:	4698      	mov	r8, r3
 802c398:	e667      	b.n	802c06a <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x432>
 802c39a:	f1be 0f00 	cmp.w	lr, #0
 802c39e:	f43f ae98 	beq.w	802c0d2 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 802c3a2:	4632      	mov	r2, r6
 802c3a4:	9e0f      	ldr	r6, [sp, #60]	@ 0x3c
 802c3a6:	5d92      	ldrb	r2, [r2, r6]
 802c3a8:	9e0e      	ldr	r6, [sp, #56]	@ 0x38
 802c3aa:	f856 2022 	ldr.w	r2, [r6, r2, lsl #2]
 802c3ae:	9226      	str	r2, [sp, #152]	@ 0x98
 802c3b0:	0e12      	lsrs	r2, r2, #24
 802c3b2:	921b      	str	r2, [sp, #108]	@ 0x6c
 802c3b4:	e68d      	b.n	802c0d2 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 802c3b6:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 802c3b8:	eb06 0c02 	add.w	ip, r6, r2
 802c3bc:	4632      	mov	r2, r6
 802c3be:	9e0f      	ldr	r6, [sp, #60]	@ 0x3c
 802c3c0:	f89c c001 	ldrb.w	ip, [ip, #1]
 802c3c4:	5d92      	ldrb	r2, [r2, r6]
 802c3c6:	9e0e      	ldr	r6, [sp, #56]	@ 0x38
 802c3c8:	9210      	str	r2, [sp, #64]	@ 0x40
 802c3ca:	f856 202c 	ldr.w	r2, [r6, ip, lsl #2]
 802c3ce:	920f      	str	r2, [sp, #60]	@ 0x3c
 802c3d0:	9227      	str	r2, [sp, #156]	@ 0x9c
 802c3d2:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 802c3d4:	f856 6022 	ldr.w	r6, [r6, r2, lsl #2]
 802c3d8:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 802c3da:	9626      	str	r6, [sp, #152]	@ 0x98
 802c3dc:	0e12      	lsrs	r2, r2, #24
 802c3de:	921c      	str	r2, [sp, #112]	@ 0x70
 802c3e0:	0e32      	lsrs	r2, r6, #24
 802c3e2:	921b      	str	r2, [sp, #108]	@ 0x6c
 802c3e4:	e675      	b.n	802c0d2 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 802c3e6:	f43f ac89 	beq.w	802bcfc <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xc4>
 802c3ea:	1e65      	subs	r5, r4, #1
 802c3ec:	f8cd b024 	str.w	fp, [sp, #36]	@ 0x24
 802c3f0:	e4c9      	b.n	802bd86 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 802c3f2:	bf00      	nop

0802c3f4 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>:
 802c3f4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802c3f8:	b089      	sub	sp, #36	@ 0x24
 802c3fa:	f9bd 8048 	ldrsh.w	r8, [sp, #72]	@ 0x48
 802c3fe:	880f      	ldrh	r7, [r1, #0]
 802c400:	e9dd 5014 	ldrd	r5, r0, [sp, #80]	@ 0x50
 802c404:	fb00 5408 	mla	r4, r0, r8, r5
 802c408:	9106      	str	r1, [sp, #24]
 802c40a:	10f9      	asrs	r1, r7, #3
 802c40c:	123e      	asrs	r6, r7, #8
 802c40e:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 802c412:	00ff      	lsls	r7, r7, #3
 802c414:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 802c418:	9104      	str	r1, [sp, #16]
 802c41a:	2800      	cmp	r0, #0
 802c41c:	b2f9      	uxtb	r1, r7
 802c41e:	9105      	str	r1, [sp, #20]
 802c420:	9603      	str	r6, [sp, #12]
 802c422:	eb02 0704 	add.w	r7, r2, r4
 802c426:	f100 0c01 	add.w	ip, r0, #1
 802c42a:	f9bd a04c 	ldrsh.w	sl, [sp, #76]	@ 0x4c
 802c42e:	f89d e058 	ldrb.w	lr, [sp, #88]	@ 0x58
 802c432:	f89d 105c 	ldrb.w	r1, [sp, #92]	@ 0x5c
 802c436:	db02      	blt.n	802c43e <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x4a>
 802c438:	4582      	cmp	sl, r0
 802c43a:	f300 8113 	bgt.w	802c664 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x270>
 802c43e:	2600      	movs	r6, #0
 802c440:	46b1      	mov	r9, r6
 802c442:	4630      	mov	r0, r6
 802c444:	4634      	mov	r4, r6
 802c446:	f1bc 0f00 	cmp.w	ip, #0
 802c44a:	db02      	blt.n	802c452 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x5e>
 802c44c:	45e2      	cmp	sl, ip
 802c44e:	f300 8123 	bgt.w	802c698 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x2a4>
 802c452:	2700      	movs	r7, #0
 802c454:	46bc      	mov	ip, r7
 802c456:	463d      	mov	r5, r7
 802c458:	9702      	str	r7, [sp, #8]
 802c45a:	f1be 0f0f 	cmp.w	lr, #15
 802c45e:	f200 8160 	bhi.w	802c722 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x32e>
 802c462:	290f      	cmp	r1, #15
 802c464:	f200 815d 	bhi.w	802c722 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x32e>
 802c468:	b289      	uxth	r1, r1
 802c46a:	fa1f f38e 	uxth.w	r3, lr
 802c46e:	fb01 f803 	mul.w	r8, r1, r3
 802c472:	f005 12ff 	and.w	r2, r5, #16711935	@ 0xff00ff
 802c476:	9200      	str	r2, [sp, #0]
 802c478:	9a02      	ldr	r2, [sp, #8]
 802c47a:	ebc8 1101 	rsb	r1, r8, r1, lsl #4
 802c47e:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 802c482:	b289      	uxth	r1, r1
 802c484:	9201      	str	r2, [sp, #4]
 802c486:	fb01 fa0c 	mul.w	sl, r1, ip
 802c48a:	9a02      	ldr	r2, [sp, #8]
 802c48c:	fb08 fb07 	mul.w	fp, r8, r7
 802c490:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 802c494:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
 802c498:	9202      	str	r2, [sp, #8]
 802c49a:	011b      	lsls	r3, r3, #4
 802c49c:	eba3 0e08 	sub.w	lr, r3, r8
 802c4a0:	fa1f fe8e 	uxth.w	lr, lr
 802c4a4:	fb0e f206 	mul.w	r2, lr, r6
 802c4a8:	f5c3 7380 	rsb	r3, r3, #256	@ 0x100
 802c4ac:	1a5b      	subs	r3, r3, r1
 802c4ae:	b29b      	uxth	r3, r3
 802c4b0:	fb03 2209 	mla	r2, r3, r9, r2
 802c4b4:	4452      	add	r2, sl
 802c4b6:	445a      	add	r2, fp
 802c4b8:	f3c2 2207 	ubfx	r2, r2, #8, #8
 802c4bc:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 802c4c0:	9207      	str	r2, [sp, #28]
 802c4c2:	f004 12ff 	and.w	r2, r4, #16711935	@ 0xff00ff
 802c4c6:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
 802c4ca:	d019      	beq.n	802c500 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x10c>
 802c4cc:	fb02 f209 	mul.w	r2, r2, r9
 802c4d0:	fb04 f409 	mul.w	r4, r4, r9
 802c4d4:	ea4f 2b12 	mov.w	fp, r2, lsr #8
 802c4d8:	f00b 1bff 	and.w	fp, fp, #16711935	@ 0xff00ff
 802c4dc:	f102 1201 	add.w	r2, r2, #65537	@ 0x10001
 802c4e0:	f504 7a80 	add.w	sl, r4, #256	@ 0x100
 802c4e4:	445a      	add	r2, fp
 802c4e6:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 802c4ea:	0a12      	lsrs	r2, r2, #8
 802c4ec:	0a24      	lsrs	r4, r4, #8
 802c4ee:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 802c4f2:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
 802c4f6:	4314      	orrs	r4, r2
 802c4f8:	f004 12ff 	and.w	r2, r4, #16711935	@ 0xff00ff
 802c4fc:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
 802c500:	2eff      	cmp	r6, #255	@ 0xff
 802c502:	f000 1aff 	and.w	sl, r0, #16711935	@ 0xff00ff
 802c506:	f400 407f 	and.w	r0, r0, #65280	@ 0xff00
 802c50a:	d01b      	beq.n	802c544 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x150>
 802c50c:	fb0a fa06 	mul.w	sl, sl, r6
 802c510:	fb00 f006 	mul.w	r0, r0, r6
 802c514:	ea4f 2b1a 	mov.w	fp, sl, lsr #8
 802c518:	f00b 1bff 	and.w	fp, fp, #16711935	@ 0xff00ff
 802c51c:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 802c520:	f500 7980 	add.w	r9, r0, #256	@ 0x100
 802c524:	44da      	add	sl, fp
 802c526:	eb09 2010 	add.w	r0, r9, r0, lsr #8
 802c52a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802c52e:	0a00      	lsrs	r0, r0, #8
 802c530:	f00a 1aff 	and.w	sl, sl, #16711935	@ 0xff00ff
 802c534:	f400 407f 	and.w	r0, r0, #65280	@ 0xff00
 802c538:	ea4a 0000 	orr.w	r0, sl, r0
 802c53c:	f000 1aff 	and.w	sl, r0, #16711935	@ 0xff00ff
 802c540:	f400 407f 	and.w	r0, r0, #65280	@ 0xff00
 802c544:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
 802c548:	d020      	beq.n	802c58c <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x198>
 802c54a:	9e01      	ldr	r6, [sp, #4]
 802c54c:	fb06 fb0c 	mul.w	fp, r6, ip
 802c550:	9e02      	ldr	r6, [sp, #8]
 802c552:	ea4f 291b 	mov.w	r9, fp, lsr #8
 802c556:	fb06 fc0c 	mul.w	ip, r6, ip
 802c55a:	f009 19ff 	and.w	r9, r9, #16711935	@ 0xff00ff
 802c55e:	f50c 7680 	add.w	r6, ip, #256	@ 0x100
 802c562:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 802c566:	eb06 2c1c 	add.w	ip, r6, ip, lsr #8
 802c56a:	44cb      	add	fp, r9
 802c56c:	ea4f 2b1b 	mov.w	fp, fp, lsr #8
 802c570:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802c574:	f00b 1bff 	and.w	fp, fp, #16711935	@ 0xff00ff
 802c578:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 802c57c:	ea4b 0c0c 	orr.w	ip, fp, ip
 802c580:	f00c 16ff 	and.w	r6, ip, #16711935	@ 0xff00ff
 802c584:	9601      	str	r6, [sp, #4]
 802c586:	f40c 467f 	and.w	r6, ip, #65280	@ 0xff00
 802c58a:	9602      	str	r6, [sp, #8]
 802c58c:	2fff      	cmp	r7, #255	@ 0xff
 802c58e:	d01d      	beq.n	802c5cc <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x1d8>
 802c590:	9e00      	ldr	r6, [sp, #0]
 802c592:	fb05 f507 	mul.w	r5, r5, r7
 802c596:	fb06 fb07 	mul.w	fp, r6, r7
 802c59a:	ea4f 2c1b 	mov.w	ip, fp, lsr #8
 802c59e:	f505 7680 	add.w	r6, r5, #256	@ 0x100
 802c5a2:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 802c5a6:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 802c5aa:	eb06 2515 	add.w	r5, r6, r5, lsr #8
 802c5ae:	44e3      	add	fp, ip
 802c5b0:	ea4f 2b1b 	mov.w	fp, fp, lsr #8
 802c5b4:	0a2d      	lsrs	r5, r5, #8
 802c5b6:	f00b 1bff 	and.w	fp, fp, #16711935	@ 0xff00ff
 802c5ba:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
 802c5be:	ea4b 0505 	orr.w	r5, fp, r5
 802c5c2:	f005 16ff 	and.w	r6, r5, #16711935	@ 0xff00ff
 802c5c6:	9600      	str	r6, [sp, #0]
 802c5c8:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
 802c5cc:	9e07      	ldr	r6, [sp, #28]
 802c5ce:	fb0a fa0e 	mul.w	sl, sl, lr
 802c5d2:	43f7      	mvns	r7, r6
 802c5d4:	fb00 f00e 	mul.w	r0, r0, lr
 802c5d8:	fb02 aa03 	mla	sl, r2, r3, sl
 802c5dc:	fb04 0003 	mla	r0, r4, r3, r0
 802c5e0:	9b01      	ldr	r3, [sp, #4]
 802c5e2:	b2ff      	uxtb	r7, r7
 802c5e4:	fb03 aa01 	mla	sl, r3, r1, sl
 802c5e8:	9b02      	ldr	r3, [sp, #8]
 802c5ea:	fb03 0c01 	mla	ip, r3, r1, r0
 802c5ee:	9b00      	ldr	r3, [sp, #0]
 802c5f0:	9803      	ldr	r0, [sp, #12]
 802c5f2:	fb03 aa08 	mla	sl, r3, r8, sl
 802c5f6:	9b05      	ldr	r3, [sp, #20]
 802c5f8:	9904      	ldr	r1, [sp, #16]
 802c5fa:	fb03 f307 	mul.w	r3, r3, r7
 802c5fe:	fb00 f007 	mul.w	r0, r0, r7
 802c602:	fb01 f107 	mul.w	r1, r1, r7
 802c606:	461f      	mov	r7, r3
 802c608:	fb05 c808 	mla	r8, r5, r8, ip
 802c60c:	ea4f 251a 	mov.w	r5, sl, lsr #8
 802c610:	ea4f 2818 	mov.w	r8, r8, lsr #8
 802c614:	f408 487f 	and.w	r8, r8, #65280	@ 0xff00
 802c618:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 802c61c:	ea45 0508 	orr.w	r5, r5, r8
 802c620:	f100 0c01 	add.w	ip, r0, #1
 802c624:	1c4e      	adds	r6, r1, #1
 802c626:	eb0c 2c10 	add.w	ip, ip, r0, lsr #8
 802c62a:	0c2c      	lsrs	r4, r5, #16
 802c62c:	f3c5 2207 	ubfx	r2, r5, #8, #8
 802c630:	1c78      	adds	r0, r7, #1
 802c632:	eb06 2111 	add.w	r1, r6, r1, lsr #8
 802c636:	4b3e      	ldr	r3, [pc, #248]	@ (802c730 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x33c>)
 802c638:	eb04 241c 	add.w	r4, r4, ip, lsr #8
 802c63c:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 802c640:	eb02 2211 	add.w	r2, r2, r1, lsr #8
 802c644:	b2ed      	uxtb	r5, r5
 802c646:	ea03 2304 	and.w	r3, r3, r4, lsl #8
 802c64a:	eb05 2517 	add.w	r5, r5, r7, lsr #8
 802c64e:	00d2      	lsls	r2, r2, #3
 802c650:	ea43 05d5 	orr.w	r5, r3, r5, lsr #3
 802c654:	f402 63fc 	and.w	r3, r2, #2016	@ 0x7e0
 802c658:	431d      	orrs	r5, r3
 802c65a:	9b06      	ldr	r3, [sp, #24]
 802c65c:	801d      	strh	r5, [r3, #0]
 802c65e:	b009      	add	sp, #36	@ 0x24
 802c660:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802c664:	2d00      	cmp	r5, #0
 802c666:	db01      	blt.n	802c66c <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x278>
 802c668:	45a8      	cmp	r8, r5
 802c66a:	dc41      	bgt.n	802c6f0 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x2fc>
 802c66c:	f04f 0900 	mov.w	r9, #0
 802c670:	464c      	mov	r4, r9
 802c672:	1c6a      	adds	r2, r5, #1
 802c674:	d42a      	bmi.n	802c6cc <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x2d8>
 802c676:	4590      	cmp	r8, r2
 802c678:	dd28      	ble.n	802c6cc <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x2d8>
 802c67a:	f1be 0f00 	cmp.w	lr, #0
 802c67e:	d004      	beq.n	802c68a <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x296>
 802c680:	787a      	ldrb	r2, [r7, #1]
 802c682:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 802c686:	0e06      	lsrs	r6, r0, #24
 802c688:	e6dd      	b.n	802c446 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x52>
 802c68a:	f1bc 0f00 	cmp.w	ip, #0
 802c68e:	db40      	blt.n	802c712 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x31e>
 802c690:	45e2      	cmp	sl, ip
 802c692:	dd3e      	ble.n	802c712 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x31e>
 802c694:	4676      	mov	r6, lr
 802c696:	4670      	mov	r0, lr
 802c698:	b1d9      	cbz	r1, 802c6d2 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x2de>
 802c69a:	2d00      	cmp	r5, #0
 802c69c:	db31      	blt.n	802c702 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x30e>
 802c69e:	45a8      	cmp	r8, r5
 802c6a0:	dd2f      	ble.n	802c702 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x30e>
 802c6a2:	f817 2008 	ldrb.w	r2, [r7, r8]
 802c6a6:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 802c6aa:	9202      	str	r2, [sp, #8]
 802c6ac:	ea4f 6c12 	mov.w	ip, r2, lsr #24
 802c6b0:	3501      	adds	r5, #1
 802c6b2:	d423      	bmi.n	802c6fc <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x308>
 802c6b4:	45a8      	cmp	r8, r5
 802c6b6:	dd21      	ble.n	802c6fc <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x308>
 802c6b8:	f1be 0f00 	cmp.w	lr, #0
 802c6bc:	d026      	beq.n	802c70c <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x318>
 802c6be:	44b8      	add	r8, r7
 802c6c0:	f898 5001 	ldrb.w	r5, [r8, #1]
 802c6c4:	f853 5025 	ldr.w	r5, [r3, r5, lsl #2]
 802c6c8:	0e2f      	lsrs	r7, r5, #24
 802c6ca:	e6c6      	b.n	802c45a <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x66>
 802c6cc:	2600      	movs	r6, #0
 802c6ce:	4630      	mov	r0, r6
 802c6d0:	e6b9      	b.n	802c446 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x52>
 802c6d2:	f1be 0f0f 	cmp.w	lr, #15
 802c6d6:	d824      	bhi.n	802c722 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x32e>
 802c6d8:	fa1f f38e 	uxth.w	r3, lr
 802c6dc:	4688      	mov	r8, r1
 802c6de:	468b      	mov	fp, r1
 802c6e0:	468a      	mov	sl, r1
 802c6e2:	e9cd 1101 	strd	r1, r1, [sp, #4]
 802c6e6:	460d      	mov	r5, r1
 802c6e8:	9100      	str	r1, [sp, #0]
 802c6ea:	460f      	mov	r7, r1
 802c6ec:	468c      	mov	ip, r1
 802c6ee:	e6d4      	b.n	802c49a <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xa6>
 802c6f0:	5d12      	ldrb	r2, [r2, r4]
 802c6f2:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
 802c6f6:	ea4f 6914 	mov.w	r9, r4, lsr #24
 802c6fa:	e7ba      	b.n	802c672 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x27e>
 802c6fc:	2700      	movs	r7, #0
 802c6fe:	463d      	mov	r5, r7
 802c700:	e6ab      	b.n	802c45a <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x66>
 802c702:	f04f 0c00 	mov.w	ip, #0
 802c706:	f8cd c008 	str.w	ip, [sp, #8]
 802c70a:	e7d1      	b.n	802c6b0 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x2bc>
 802c70c:	4675      	mov	r5, lr
 802c70e:	4677      	mov	r7, lr
 802c710:	e6a7      	b.n	802c462 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x6e>
 802c712:	4670      	mov	r0, lr
 802c714:	4675      	mov	r5, lr
 802c716:	f8cd e008 	str.w	lr, [sp, #8]
 802c71a:	4677      	mov	r7, lr
 802c71c:	46f4      	mov	ip, lr
 802c71e:	4676      	mov	r6, lr
 802c720:	e69f      	b.n	802c462 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x6e>
 802c722:	4b04      	ldr	r3, [pc, #16]	@ (802c734 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x340>)
 802c724:	4a04      	ldr	r2, [pc, #16]	@ (802c738 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x344>)
 802c726:	f240 31ca 	movw	r1, #970	@ 0x3ca
 802c72a:	4804      	ldr	r0, [pc, #16]	@ (802c73c <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x348>)
 802c72c:	f006 f824 	bl	8032778 <__assert_func>
 802c730:	fffff800 	.word	0xfffff800
 802c734:	08036954 	.word	0x08036954
 802c738:	08036fd0 	.word	0x08036fd0
 802c73c:	08036adc 	.word	0x08036adc

0802c740 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 802c740:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802c744:	ed2d 8b08 	vpush	{d8-d11}
 802c748:	b0a3      	sub	sp, #140	@ 0x8c
 802c74a:	901e      	str	r0, [sp, #120]	@ 0x78
 802c74c:	9111      	str	r1, [sp, #68]	@ 0x44
 802c74e:	9215      	str	r2, [sp, #84]	@ 0x54
 802c750:	e9dd 4139 	ldrd	r4, r1, [sp, #228]	@ 0xe4
 802c754:	9a3b      	ldr	r2, [sp, #236]	@ 0xec
 802c756:	6860      	ldr	r0, [r4, #4]
 802c758:	e9dd 8b35 	ldrd	r8, fp, [sp, #212]	@ 0xd4
 802c75c:	fb00 1202 	mla	r2, r0, r2, r1
 802c760:	6820      	ldr	r0, [r4, #0]
 802c762:	46c1      	mov	r9, r8
 802c764:	eb00 0a42 	add.w	sl, r0, r2, lsl #1
 802c768:	46d8      	mov	r8, fp
 802c76a:	eeb0 aa40 	vmov.f32	s20, s0
 802c76e:	eef0 9a60 	vmov.f32	s19, s1
 802c772:	eeb0 9a41 	vmov.f32	s18, s2
 802c776:	eef0 8a62 	vmov.f32	s17, s5
 802c77a:	eeb0 8a43 	vmov.f32	s16, s6
 802c77e:	eef0 ba44 	vmov.f32	s23, s8
 802c782:	eeb0 ba64 	vmov.f32	s22, s9
 802c786:	eef0 aa45 	vmov.f32	s21, s10
 802c78a:	46d3      	mov	fp, sl
 802c78c:	993c      	ldr	r1, [sp, #240]	@ 0xf0
 802c78e:	9c3c      	ldr	r4, [sp, #240]	@ 0xf0
 802c790:	6849      	ldr	r1, [r1, #4]
 802c792:	6824      	ldr	r4, [r4, #0]
 802c794:	1d0a      	adds	r2, r1, #4
 802c796:	940e      	str	r4, [sp, #56]	@ 0x38
 802c798:	920b      	str	r2, [sp, #44]	@ 0x2c
 802c79a:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 802c79c:	2a00      	cmp	r2, #0
 802c79e:	dc02      	bgt.n	802c7a6 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 802c7a0:	9a15      	ldr	r2, [sp, #84]	@ 0x54
 802c7a2:	2a00      	cmp	r2, #0
 802c7a4:	dd65      	ble.n	802c872 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x132>
 802c7a6:	9a3c      	ldr	r2, [sp, #240]	@ 0xf0
 802c7a8:	2b00      	cmp	r3, #0
 802c7aa:	e9d2 6c02 	ldrd	r6, ip, [r2, #8]
 802c7ae:	b234      	sxth	r4, r6
 802c7b0:	fa0f f78c 	sxth.w	r7, ip
 802c7b4:	f340 836d 	ble.w	802ce92 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x752>
 802c7b8:	1e65      	subs	r5, r4, #1
 802c7ba:	f107 3eff 	add.w	lr, r7, #4294967295
 802c7be:	f8cd c01c 	str.w	ip, [sp, #28]
 802c7c2:	e9dd ca37 	ldrd	ip, sl, [sp, #220]	@ 0xdc
 802c7c6:	ea5f 4229 	movs.w	r2, r9, asr #16
 802c7ca:	ea4f 4128 	mov.w	r1, r8, asr #16
 802c7ce:	d405      	bmi.n	802c7dc <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 802c7d0:	42aa      	cmp	r2, r5
 802c7d2:	da03      	bge.n	802c7dc <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 802c7d4:	2900      	cmp	r1, #0
 802c7d6:	db01      	blt.n	802c7dc <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 802c7d8:	4571      	cmp	r1, lr
 802c7da:	db4f      	blt.n	802c87c <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13c>
 802c7dc:	1c50      	adds	r0, r2, #1
 802c7de:	d406      	bmi.n	802c7ee <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 802c7e0:	42a0      	cmp	r0, r4
 802c7e2:	dc04      	bgt.n	802c7ee <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 802c7e4:	1c48      	adds	r0, r1, #1
 802c7e6:	d402      	bmi.n	802c7ee <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 802c7e8:	42b8      	cmp	r0, r7
 802c7ea:	f340 832f 	ble.w	802ce4c <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70c>
 802c7ee:	3b01      	subs	r3, #1
 802c7f0:	44e1      	add	r9, ip
 802c7f2:	44d0      	add	r8, sl
 802c7f4:	f10b 0b02 	add.w	fp, fp, #2
 802c7f8:	d1e5      	bne.n	802c7c6 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 802c7fa:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 802c7fc:	2b00      	cmp	r3, #0
 802c7fe:	dd38      	ble.n	802c872 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x132>
 802c800:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 802c804:	ee3a aa2b 	vadd.f32	s20, s20, s23
 802c808:	ee79 9a8b 	vadd.f32	s19, s19, s22
 802c80c:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 802c810:	ee39 9a2a 	vadd.f32	s18, s18, s21
 802c814:	ee29 6aa7 	vmul.f32	s12, s19, s15
 802c818:	ee69 7a27 	vmul.f32	s15, s18, s15
 802c81c:	ee76 6a68 	vsub.f32	s13, s12, s17
 802c820:	ee37 7ac8 	vsub.f32	s14, s15, s16
 802c824:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802c828:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 802c82c:	ee16 2a90 	vmov	r2, s13
 802c830:	3b01      	subs	r3, #1
 802c832:	9311      	str	r3, [sp, #68]	@ 0x44
 802c834:	9b34      	ldr	r3, [sp, #208]	@ 0xd0
 802c836:	fb92 f3f3 	sdiv	r3, r2, r3
 802c83a:	ee17 2a10 	vmov	r2, s14
 802c83e:	eeb0 7a48 	vmov.f32	s14, s16
 802c842:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 802c846:	ee17 8a10 	vmov	r8, s14
 802c84a:	eeb0 7a68 	vmov.f32	s14, s17
 802c84e:	9337      	str	r3, [sp, #220]	@ 0xdc
 802c850:	9b34      	ldr	r3, [sp, #208]	@ 0xd0
 802c852:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 802c856:	fb92 f3f3 	sdiv	r3, r2, r3
 802c85a:	9a15      	ldr	r2, [sp, #84]	@ 0x54
 802c85c:	9338      	str	r3, [sp, #224]	@ 0xe0
 802c85e:	ee17 9a10 	vmov	r9, s14
 802c862:	9b34      	ldr	r3, [sp, #208]	@ 0xd0
 802c864:	eeb0 8a67 	vmov.f32	s16, s15
 802c868:	eef0 8a46 	vmov.f32	s17, s12
 802c86c:	bf08      	it	eq
 802c86e:	4613      	moveq	r3, r2
 802c870:	e793      	b.n	802c79a <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 802c872:	b023      	add	sp, #140	@ 0x8c
 802c874:	ecbd 8b08 	vpop	{d8-d11}
 802c878:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802c87c:	f8dd c01c 	ldr.w	ip, [sp, #28]
 802c880:	f8cd b01c 	str.w	fp, [sp, #28]
 802c884:	9837      	ldr	r0, [sp, #220]	@ 0xdc
 802c886:	1e59      	subs	r1, r3, #1
 802c888:	fb00 9201 	mla	r2, r0, r1, r9
 802c88c:	1412      	asrs	r2, r2, #16
 802c88e:	910c      	str	r1, [sp, #48]	@ 0x30
 802c890:	f100 815e 	bmi.w	802cb50 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x410>
 802c894:	42aa      	cmp	r2, r5
 802c896:	f280 815b 	bge.w	802cb50 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x410>
 802c89a:	9a38      	ldr	r2, [sp, #224]	@ 0xe0
 802c89c:	fb02 8201 	mla	r2, r2, r1, r8
 802c8a0:	1412      	asrs	r2, r2, #16
 802c8a2:	f100 8155 	bmi.w	802cb50 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x410>
 802c8a6:	3f01      	subs	r7, #1
 802c8a8:	42ba      	cmp	r2, r7
 802c8aa:	f280 8151 	bge.w	802cb50 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x410>
 802c8ae:	2b00      	cmp	r3, #0
 802c8b0:	dda3      	ble.n	802c7fa <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xba>
 802c8b2:	eb0b 0b43 	add.w	fp, fp, r3, lsl #1
 802c8b6:	4621      	mov	r1, r4
 802c8b8:	f8cd b034 	str.w	fp, [sp, #52]	@ 0x34
 802c8bc:	f8cd 90d4 	str.w	r9, [sp, #212]	@ 0xd4
 802c8c0:	464a      	mov	r2, r9
 802c8c2:	464c      	mov	r4, r9
 802c8c4:	e122      	b.n	802cb0c <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 802c8c6:	f893 c001 	ldrb.w	ip, [r3, #1]
 802c8ca:	f856 502c 	ldr.w	r5, [r6, ip, lsl #2]
 802c8ce:	950f      	str	r5, [sp, #60]	@ 0x3c
 802c8d0:	0e2d      	lsrs	r5, r5, #24
 802c8d2:	9508      	str	r5, [sp, #32]
 802c8d4:	b162      	cbz	r2, 802c8f0 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b0>
 802c8d6:	185d      	adds	r5, r3, r1
 802c8d8:	786d      	ldrb	r5, [r5, #1]
 802c8da:	5c5b      	ldrb	r3, [r3, r1]
 802c8dc:	f856 1025 	ldr.w	r1, [r6, r5, lsl #2]
 802c8e0:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 802c8e4:	9112      	str	r1, [sp, #72]	@ 0x48
 802c8e6:	9310      	str	r3, [sp, #64]	@ 0x40
 802c8e8:	0e09      	lsrs	r1, r1, #24
 802c8ea:	0e1b      	lsrs	r3, r3, #24
 802c8ec:	910a      	str	r1, [sp, #40]	@ 0x28
 802c8ee:	9309      	str	r3, [sp, #36]	@ 0x24
 802c8f0:	b2a4      	uxth	r4, r4
 802c8f2:	b292      	uxth	r2, r2
 802c8f4:	fb04 f502 	mul.w	r5, r4, r2
 802c8f8:	0124      	lsls	r4, r4, #4
 802c8fa:	1b66      	subs	r6, r4, r5
 802c8fc:	9b08      	ldr	r3, [sp, #32]
 802c8fe:	b2b6      	uxth	r6, r6
 802c900:	fb06 f103 	mul.w	r1, r6, r3
 802c904:	ebc5 1202 	rsb	r2, r5, r2, lsl #4
 802c908:	b292      	uxth	r2, r2
 802c90a:	f5c4 7380 	rsb	r3, r4, #256	@ 0x100
 802c90e:	1a9b      	subs	r3, r3, r2
 802c910:	b29b      	uxth	r3, r3
 802c912:	fb03 1100 	mla	r1, r3, r0, r1
 802c916:	9c09      	ldr	r4, [sp, #36]	@ 0x24
 802c918:	fb02 1104 	mla	r1, r2, r4, r1
 802c91c:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 802c91e:	fb05 1104 	mla	r1, r5, r4, r1
 802c922:	f3c1 2107 	ubfx	r1, r1, #8, #8
 802c926:	2900      	cmp	r1, #0
 802c928:	f000 80df 	beq.w	802caea <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
 802c92c:	f007 14ff 	and.w	r4, r7, #16711935	@ 0xff00ff
 802c930:	28ff      	cmp	r0, #255	@ 0xff
 802c932:	940c      	str	r4, [sp, #48]	@ 0x30
 802c934:	f407 497f 	and.w	r9, r7, #65280	@ 0xff00
 802c938:	d01a      	beq.n	802c970 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x230>
 802c93a:	fb04 f400 	mul.w	r4, r4, r0
 802c93e:	4627      	mov	r7, r4
 802c940:	fb09 fc00 	mul.w	ip, r9, r0
 802c944:	0a24      	lsrs	r4, r4, #8
 802c946:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
 802c94a:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 802c94e:	f50c 7080 	add.w	r0, ip, #256	@ 0x100
 802c952:	4427      	add	r7, r4
 802c954:	eb00 201c 	add.w	r0, r0, ip, lsr #8
 802c958:	0a3f      	lsrs	r7, r7, #8
 802c95a:	0a00      	lsrs	r0, r0, #8
 802c95c:	f400 407f 	and.w	r0, r0, #65280	@ 0xff00
 802c960:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
 802c964:	4307      	orrs	r7, r0
 802c966:	f007 10ff 	and.w	r0, r7, #16711935	@ 0xff00ff
 802c96a:	900c      	str	r0, [sp, #48]	@ 0x30
 802c96c:	f407 497f 	and.w	r9, r7, #65280	@ 0xff00
 802c970:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 802c972:	f000 17ff 	and.w	r7, r0, #16711935	@ 0xff00ff
 802c976:	f400 4c7f 	and.w	ip, r0, #65280	@ 0xff00
 802c97a:	9808      	ldr	r0, [sp, #32]
 802c97c:	28ff      	cmp	r0, #255	@ 0xff
 802c97e:	d01a      	beq.n	802c9b6 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 802c980:	fb07 f700 	mul.w	r7, r7, r0
 802c984:	fb0c fc00 	mul.w	ip, ip, r0
 802c988:	0a3c      	lsrs	r4, r7, #8
 802c98a:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
 802c98e:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 802c992:	f50c 7080 	add.w	r0, ip, #256	@ 0x100
 802c996:	4427      	add	r7, r4
 802c998:	eb00 2c1c 	add.w	ip, r0, ip, lsr #8
 802c99c:	0a3f      	lsrs	r7, r7, #8
 802c99e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802c9a2:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
 802c9a6:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 802c9aa:	ea47 0c0c 	orr.w	ip, r7, ip
 802c9ae:	f00c 17ff 	and.w	r7, ip, #16711935	@ 0xff00ff
 802c9b2:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 802c9b6:	9810      	ldr	r0, [sp, #64]	@ 0x40
 802c9b8:	f000 1eff 	and.w	lr, r0, #16711935	@ 0xff00ff
 802c9bc:	f400 4a7f 	and.w	sl, r0, #65280	@ 0xff00
 802c9c0:	9809      	ldr	r0, [sp, #36]	@ 0x24
 802c9c2:	28ff      	cmp	r0, #255	@ 0xff
 802c9c4:	d01c      	beq.n	802ca00 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c0>
 802c9c6:	fb0e fe00 	mul.w	lr, lr, r0
 802c9ca:	fb0a fa00 	mul.w	sl, sl, r0
 802c9ce:	ea4f 241e 	mov.w	r4, lr, lsr #8
 802c9d2:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
 802c9d6:	f10e 1e01 	add.w	lr, lr, #65537	@ 0x10001
 802c9da:	f50a 7080 	add.w	r0, sl, #256	@ 0x100
 802c9de:	44a6      	add	lr, r4
 802c9e0:	eb00 2a1a 	add.w	sl, r0, sl, lsr #8
 802c9e4:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802c9e8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802c9ec:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 802c9f0:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 802c9f4:	ea4e 0a0a 	orr.w	sl, lr, sl
 802c9f8:	f00a 1eff 	and.w	lr, sl, #16711935	@ 0xff00ff
 802c9fc:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 802ca00:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 802ca02:	f004 10ff 	and.w	r0, r4, #16711935	@ 0xff00ff
 802ca06:	f404 4b7f 	and.w	fp, r4, #65280	@ 0xff00
 802ca0a:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 802ca0c:	2cff      	cmp	r4, #255	@ 0xff
 802ca0e:	d01d      	beq.n	802ca4c <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 802ca10:	fb00 f004 	mul.w	r0, r0, r4
 802ca14:	fb0b fb04 	mul.w	fp, fp, r4
 802ca18:	0a04      	lsrs	r4, r0, #8
 802ca1a:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
 802ca1e:	9414      	str	r4, [sp, #80]	@ 0x50
 802ca20:	f50b 7480 	add.w	r4, fp, #256	@ 0x100
 802ca24:	9413      	str	r4, [sp, #76]	@ 0x4c
 802ca26:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 802ca28:	f100 1001 	add.w	r0, r0, #65537	@ 0x10001
 802ca2c:	4420      	add	r0, r4
 802ca2e:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 802ca30:	0a00      	lsrs	r0, r0, #8
 802ca32:	eb04 241b 	add.w	r4, r4, fp, lsr #8
 802ca36:	0a24      	lsrs	r4, r4, #8
 802ca38:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 802ca3c:	f404 4b7f 	and.w	fp, r4, #65280	@ 0xff00
 802ca40:	ea40 0b0b 	orr.w	fp, r0, fp
 802ca44:	f00b 10ff 	and.w	r0, fp, #16711935	@ 0xff00ff
 802ca48:	f40b 4b7f 	and.w	fp, fp, #65280	@ 0xff00
 802ca4c:	43c9      	mvns	r1, r1
 802ca4e:	fb07 f706 	mul.w	r7, r7, r6
 802ca52:	fb0c f606 	mul.w	r6, ip, r6
 802ca56:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 802ca58:	fb09 6603 	mla	r6, r9, r3, r6
 802ca5c:	fb04 7703 	mla	r7, r4, r3, r7
 802ca60:	9b07      	ldr	r3, [sp, #28]
 802ca62:	fb0e 7702 	mla	r7, lr, r2, r7
 802ca66:	fb0a 6602 	mla	r6, sl, r2, r6
 802ca6a:	f8b3 e000 	ldrh.w	lr, [r3]
 802ca6e:	b2c9      	uxtb	r1, r1
 802ca70:	ea4f 242e 	mov.w	r4, lr, asr #8
 802ca74:	fb00 7005 	mla	r0, r0, r5, r7
 802ca78:	fb0b 6605 	mla	r6, fp, r5, r6
 802ca7c:	ea4f 09ee 	mov.w	r9, lr, asr #3
 802ca80:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 802ca84:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 802ca88:	fb04 f401 	mul.w	r4, r4, r1
 802ca8c:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
 802ca90:	fa5f fe8e 	uxtb.w	lr, lr
 802ca94:	fb09 f901 	mul.w	r9, r9, r1
 802ca98:	fb0e f101 	mul.w	r1, lr, r1
 802ca9c:	0a00      	lsrs	r0, r0, #8
 802ca9e:	0a36      	lsrs	r6, r6, #8
 802caa0:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 802caa4:	f406 467f 	and.w	r6, r6, #65280	@ 0xff00
 802caa8:	1c62      	adds	r2, r4, #1
 802caaa:	ea40 0306 	orr.w	r3, r0, r6
 802caae:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 802cab2:	f109 0001 	add.w	r0, r9, #1
 802cab6:	1c4a      	adds	r2, r1, #1
 802cab8:	0c1e      	lsrs	r6, r3, #16
 802caba:	f3c3 2507 	ubfx	r5, r3, #8, #8
 802cabe:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 802cac2:	eb00 2019 	add.w	r0, r0, r9, lsr #8
 802cac6:	4a21      	ldr	r2, [pc, #132]	@ (802cb4c <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40c>)
 802cac8:	eb06 2414 	add.w	r4, r6, r4, lsr #8
 802cacc:	b2db      	uxtb	r3, r3
 802cace:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 802cad2:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 802cad6:	ea02 2404 	and.w	r4, r2, r4, lsl #8
 802cada:	00c0      	lsls	r0, r0, #3
 802cadc:	ea44 04d3 	orr.w	r4, r4, r3, lsr #3
 802cae0:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 802cae4:	9b07      	ldr	r3, [sp, #28]
 802cae6:	4320      	orrs	r0, r4
 802cae8:	8018      	strh	r0, [r3, #0]
 802caea:	9a35      	ldr	r2, [sp, #212]	@ 0xd4
 802caec:	9937      	ldr	r1, [sp, #220]	@ 0xdc
 802caee:	9b07      	ldr	r3, [sp, #28]
 802caf0:	440a      	add	r2, r1
 802caf2:	9235      	str	r2, [sp, #212]	@ 0xd4
 802caf4:	9a38      	ldr	r2, [sp, #224]	@ 0xe0
 802caf6:	3302      	adds	r3, #2
 802caf8:	4490      	add	r8, r2
 802cafa:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 802cafc:	9307      	str	r3, [sp, #28]
 802cafe:	4293      	cmp	r3, r2
 802cb00:	d022      	beq.n	802cb48 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x408>
 802cb02:	9b3c      	ldr	r3, [sp, #240]	@ 0xf0
 802cb04:	9a35      	ldr	r2, [sp, #212]	@ 0xd4
 802cb06:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802cb0a:	9c35      	ldr	r4, [sp, #212]	@ 0xd4
 802cb0c:	1412      	asrs	r2, r2, #16
 802cb0e:	ea4f 4328 	mov.w	r3, r8, asr #16
 802cb12:	fb01 2303 	mla	r3, r1, r3, r2
 802cb16:	980e      	ldr	r0, [sp, #56]	@ 0x38
 802cb18:	9e0b      	ldr	r6, [sp, #44]	@ 0x2c
 802cb1a:	5cc2      	ldrb	r2, [r0, r3]
 802cb1c:	f3c4 3403 	ubfx	r4, r4, #12, #4
 802cb20:	f856 7022 	ldr.w	r7, [r6, r2, lsl #2]
 802cb24:	4403      	add	r3, r0
 802cb26:	f3c8 3203 	ubfx	r2, r8, #12, #4
 802cb2a:	0e38      	lsrs	r0, r7, #24
 802cb2c:	2c00      	cmp	r4, #0
 802cb2e:	f47f aeca 	bne.w	802c8c6 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 802cb32:	2a00      	cmp	r2, #0
 802cb34:	f43f aedc 	beq.w	802c8f0 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b0>
 802cb38:	5c5b      	ldrb	r3, [r3, r1]
 802cb3a:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 802cb3c:	f851 3023 	ldr.w	r3, [r1, r3, lsl #2]
 802cb40:	9310      	str	r3, [sp, #64]	@ 0x40
 802cb42:	0e1b      	lsrs	r3, r3, #24
 802cb44:	9309      	str	r3, [sp, #36]	@ 0x24
 802cb46:	e6d3      	b.n	802c8f0 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b0>
 802cb48:	4693      	mov	fp, r2
 802cb4a:	e656      	b.n	802c7fa <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xba>
 802cb4c:	fffff800 	.word	0xfffff800
 802cb50:	2b00      	cmp	r3, #0
 802cb52:	f77f ae52 	ble.w	802c7fa <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xba>
 802cb56:	f8dd a030 	ldr.w	sl, [sp, #48]	@ 0x30
 802cb5a:	ea4f 4229 	mov.w	r2, r9, asr #16
 802cb5e:	ea4f 4128 	mov.w	r1, r8, asr #16
 802cb62:	2a00      	cmp	r2, #0
 802cb64:	465f      	mov	r7, fp
 802cb66:	f8cd b01c 	str.w	fp, [sp, #28]
 802cb6a:	9c3c      	ldr	r4, [sp, #240]	@ 0xf0
 802cb6c:	e9dd b337 	ldrd	fp, r3, [sp, #220]	@ 0xdc
 802cb70:	f3c9 3003 	ubfx	r0, r9, #12, #4
 802cb74:	f3c8 3e03 	ubfx	lr, r8, #12, #4
 802cb78:	f2c0 8147 	blt.w	802ce0a <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ca>
 802cb7c:	1e73      	subs	r3, r6, #1
 802cb7e:	429a      	cmp	r2, r3
 802cb80:	f280 8143 	bge.w	802ce0a <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ca>
 802cb84:	2900      	cmp	r1, #0
 802cb86:	f2c0 8140 	blt.w	802ce0a <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ca>
 802cb8a:	f10c 33ff 	add.w	r3, ip, #4294967295
 802cb8e:	4299      	cmp	r1, r3
 802cb90:	f280 813b 	bge.w	802ce0a <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ca>
 802cb94:	b236      	sxth	r6, r6
 802cb96:	fb01 2106 	mla	r1, r1, r6, r2
 802cb9a:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 802cb9c:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 802cb9e:	5c53      	ldrb	r3, [r2, r1]
 802cba0:	4411      	add	r1, r2
 802cba2:	f855 2023 	ldr.w	r2, [r5, r3, lsl #2]
 802cba6:	910d      	str	r1, [sp, #52]	@ 0x34
 802cba8:	0e13      	lsrs	r3, r2, #24
 802cbaa:	2800      	cmp	r0, #0
 802cbac:	f000 8154 	beq.w	802ce58 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x718>
 802cbb0:	f891 c001 	ldrb.w	ip, [r1, #1]
 802cbb4:	9513      	str	r5, [sp, #76]	@ 0x4c
 802cbb6:	f855 102c 	ldr.w	r1, [r5, ip, lsl #2]
 802cbba:	911f      	str	r1, [sp, #124]	@ 0x7c
 802cbbc:	0e09      	lsrs	r1, r1, #24
 802cbbe:	9116      	str	r1, [sp, #88]	@ 0x58
 802cbc0:	f1be 0f00 	cmp.w	lr, #0
 802cbc4:	f040 8153 	bne.w	802ce6e <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72e>
 802cbc8:	b286      	uxth	r6, r0
 802cbca:	fa1f fc8e 	uxth.w	ip, lr
 802cbce:	fb06 f00c 	mul.w	r0, r6, ip
 802cbd2:	0136      	lsls	r6, r6, #4
 802cbd4:	1a31      	subs	r1, r6, r0
 802cbd6:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 802cbd8:	b289      	uxth	r1, r1
 802cbda:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 802cbde:	9113      	str	r1, [sp, #76]	@ 0x4c
 802cbe0:	fb01 f105 	mul.w	r1, r1, r5
 802cbe4:	f5c6 7680 	rsb	r6, r6, #256	@ 0x100
 802cbe8:	fa1f f58c 	uxth.w	r5, ip
 802cbec:	1b76      	subs	r6, r6, r5
 802cbee:	b2b6      	uxth	r6, r6
 802cbf0:	fb06 1c03 	mla	ip, r6, r3, r1
 802cbf4:	9917      	ldr	r1, [sp, #92]	@ 0x5c
 802cbf6:	9514      	str	r5, [sp, #80]	@ 0x50
 802cbf8:	fb05 cc01 	mla	ip, r5, r1, ip
 802cbfc:	9918      	ldr	r1, [sp, #96]	@ 0x60
 802cbfe:	9619      	str	r6, [sp, #100]	@ 0x64
 802cc00:	fb00 cc01 	mla	ip, r0, r1, ip
 802cc04:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 802cc08:	f1bc 0f00 	cmp.w	ip, #0
 802cc0c:	f000 80e6 	beq.w	802cddc <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x69c>
 802cc10:	f002 11ff 	and.w	r1, r2, #16711935	@ 0xff00ff
 802cc14:	2bff      	cmp	r3, #255	@ 0xff
 802cc16:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 802cc1a:	911a      	str	r1, [sp, #104]	@ 0x68
 802cc1c:	921b      	str	r2, [sp, #108]	@ 0x6c
 802cc1e:	d01b      	beq.n	802cc58 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x518>
 802cc20:	fb02 f203 	mul.w	r2, r2, r3
 802cc24:	fb01 f103 	mul.w	r1, r1, r3
 802cc28:	4613      	mov	r3, r2
 802cc2a:	0a0a      	lsrs	r2, r1, #8
 802cc2c:	f101 1601 	add.w	r6, r1, #65537	@ 0x10001
 802cc30:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 802cc34:	f503 7180 	add.w	r1, r3, #256	@ 0x100
 802cc38:	4432      	add	r2, r6
 802cc3a:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 802cc3e:	0a12      	lsrs	r2, r2, #8
 802cc40:	0a1b      	lsrs	r3, r3, #8
 802cc42:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 802cc46:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 802cc4a:	4313      	orrs	r3, r2
 802cc4c:	f003 12ff 	and.w	r2, r3, #16711935	@ 0xff00ff
 802cc50:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 802cc54:	921a      	str	r2, [sp, #104]	@ 0x68
 802cc56:	931b      	str	r3, [sp, #108]	@ 0x6c
 802cc58:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 802cc5a:	9a16      	ldr	r2, [sp, #88]	@ 0x58
 802cc5c:	f003 11ff 	and.w	r1, r3, #16711935	@ 0xff00ff
 802cc60:	2aff      	cmp	r2, #255	@ 0xff
 802cc62:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 802cc66:	931c      	str	r3, [sp, #112]	@ 0x70
 802cc68:	d01b      	beq.n	802cca2 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x562>
 802cc6a:	fb03 f302 	mul.w	r3, r3, r2
 802cc6e:	461e      	mov	r6, r3
 802cc70:	fb01 f102 	mul.w	r1, r1, r2
 802cc74:	0a0a      	lsrs	r2, r1, #8
 802cc76:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 802cc7a:	f101 1101 	add.w	r1, r1, #65537	@ 0x10001
 802cc7e:	f503 7380 	add.w	r3, r3, #256	@ 0x100
 802cc82:	440a      	add	r2, r1
 802cc84:	eb03 2316 	add.w	r3, r3, r6, lsr #8
 802cc88:	0a12      	lsrs	r2, r2, #8
 802cc8a:	0a1b      	lsrs	r3, r3, #8
 802cc8c:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 802cc90:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 802cc94:	ea42 0603 	orr.w	r6, r2, r3
 802cc98:	f406 437f 	and.w	r3, r6, #65280	@ 0xff00
 802cc9c:	f006 11ff 	and.w	r1, r6, #16711935	@ 0xff00ff
 802cca0:	931c      	str	r3, [sp, #112]	@ 0x70
 802cca2:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 802cca4:	9a17      	ldr	r2, [sp, #92]	@ 0x5c
 802cca6:	f003 16ff 	and.w	r6, r3, #16711935	@ 0xff00ff
 802ccaa:	2aff      	cmp	r2, #255	@ 0xff
 802ccac:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 802ccb0:	931d      	str	r3, [sp, #116]	@ 0x74
 802ccb2:	d01b      	beq.n	802ccec <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ac>
 802ccb4:	fb03 f302 	mul.w	r3, r3, r2
 802ccb8:	fb06 f602 	mul.w	r6, r6, r2
 802ccbc:	461a      	mov	r2, r3
 802ccbe:	0a33      	lsrs	r3, r6, #8
 802ccc0:	f003 1eff 	and.w	lr, r3, #16711935	@ 0xff00ff
 802ccc4:	f106 1601 	add.w	r6, r6, #65537	@ 0x10001
 802ccc8:	f502 7380 	add.w	r3, r2, #256	@ 0x100
 802cccc:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 802ccd0:	4476      	add	r6, lr
 802ccd2:	0a36      	lsrs	r6, r6, #8
 802ccd4:	0a1b      	lsrs	r3, r3, #8
 802ccd6:	f006 16ff 	and.w	r6, r6, #16711935	@ 0xff00ff
 802ccda:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 802ccde:	ea46 0203 	orr.w	r2, r6, r3
 802cce2:	f402 437f 	and.w	r3, r2, #65280	@ 0xff00
 802cce6:	f002 16ff 	and.w	r6, r2, #16711935	@ 0xff00ff
 802ccea:	931d      	str	r3, [sp, #116]	@ 0x74
 802ccec:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 802ccee:	f002 13ff 	and.w	r3, r2, #16711935	@ 0xff00ff
 802ccf2:	f402 4e7f 	and.w	lr, r2, #65280	@ 0xff00
 802ccf6:	9a18      	ldr	r2, [sp, #96]	@ 0x60
 802ccf8:	930d      	str	r3, [sp, #52]	@ 0x34
 802ccfa:	2aff      	cmp	r2, #255	@ 0xff
 802ccfc:	d01b      	beq.n	802cd36 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5f6>
 802ccfe:	fb03 f302 	mul.w	r3, r3, r2
 802cd02:	fb0e fe02 	mul.w	lr, lr, r2
 802cd06:	0a1a      	lsrs	r2, r3, #8
 802cd08:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 802cd0c:	f103 1301 	add.w	r3, r3, #65537	@ 0x10001
 802cd10:	f50e 7580 	add.w	r5, lr, #256	@ 0x100
 802cd14:	441a      	add	r2, r3
 802cd16:	eb05 2e1e 	add.w	lr, r5, lr, lsr #8
 802cd1a:	0a12      	lsrs	r2, r2, #8
 802cd1c:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802cd20:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 802cd24:	f40e 4e7f 	and.w	lr, lr, #65280	@ 0xff00
 802cd28:	ea42 0e0e 	orr.w	lr, r2, lr
 802cd2c:	f00e 13ff 	and.w	r3, lr, #16711935	@ 0xff00ff
 802cd30:	930d      	str	r3, [sp, #52]	@ 0x34
 802cd32:	f40e 4e7f 	and.w	lr, lr, #65280	@ 0xff00
 802cd36:	ea6f 0c0c 	mvn.w	ip, ip
 802cd3a:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 802cd3c:	9a1a      	ldr	r2, [sp, #104]	@ 0x68
 802cd3e:	fb01 f305 	mul.w	r3, r1, r5
 802cd42:	991c      	ldr	r1, [sp, #112]	@ 0x70
 802cd44:	fa5f fc8c 	uxtb.w	ip, ip
 802cd48:	fb01 f105 	mul.w	r1, r1, r5
 802cd4c:	9d19      	ldr	r5, [sp, #100]	@ 0x64
 802cd4e:	fb02 3305 	mla	r3, r2, r5, r3
 802cd52:	9a1b      	ldr	r2, [sp, #108]	@ 0x6c
 802cd54:	fb02 1105 	mla	r1, r2, r5, r1
 802cd58:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 802cd5a:	9a1d      	ldr	r2, [sp, #116]	@ 0x74
 802cd5c:	fb06 3605 	mla	r6, r6, r5, r3
 802cd60:	fb02 1205 	mla	r2, r2, r5, r1
 802cd64:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 802cd66:	8839      	ldrh	r1, [r7, #0]
 802cd68:	fb03 6300 	mla	r3, r3, r0, r6
 802cd6c:	fb0e 2e00 	mla	lr, lr, r0, r2
 802cd70:	10c8      	asrs	r0, r1, #3
 802cd72:	120a      	asrs	r2, r1, #8
 802cd74:	f000 06fc 	and.w	r6, r0, #252	@ 0xfc
 802cd78:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 802cd7c:	00c9      	lsls	r1, r1, #3
 802cd7e:	fb02 f20c 	mul.w	r2, r2, ip
 802cd82:	fb06 f60c 	mul.w	r6, r6, ip
 802cd86:	b2c9      	uxtb	r1, r1
 802cd88:	fb01 f00c 	mul.w	r0, r1, ip
 802cd8c:	0a1b      	lsrs	r3, r3, #8
 802cd8e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802cd92:	f003 11ff 	and.w	r1, r3, #16711935	@ 0xff00ff
 802cd96:	f40e 437f 	and.w	r3, lr, #65280	@ 0xff00
 802cd9a:	430b      	orrs	r3, r1
 802cd9c:	f106 0e01 	add.w	lr, r6, #1
 802cda0:	1c51      	adds	r1, r2, #1
 802cda2:	0c1d      	lsrs	r5, r3, #16
 802cda4:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 802cda8:	eb0e 2616 	add.w	r6, lr, r6, lsr #8
 802cdac:	f3c3 2107 	ubfx	r1, r3, #8, #8
 802cdb0:	fa5f fe83 	uxtb.w	lr, r3
 802cdb4:	f100 0c01 	add.w	ip, r0, #1
 802cdb8:	4b39      	ldr	r3, [pc, #228]	@ (802cea0 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x760>)
 802cdba:	eb05 2212 	add.w	r2, r5, r2, lsr #8
 802cdbe:	eb0c 2010 	add.w	r0, ip, r0, lsr #8
 802cdc2:	eb01 2116 	add.w	r1, r1, r6, lsr #8
 802cdc6:	ea03 2202 	and.w	r2, r3, r2, lsl #8
 802cdca:	00c9      	lsls	r1, r1, #3
 802cdcc:	eb0e 2310 	add.w	r3, lr, r0, lsr #8
 802cdd0:	ea42 03d3 	orr.w	r3, r2, r3, lsr #3
 802cdd4:	f401 62fc 	and.w	r2, r1, #2016	@ 0x7e0
 802cdd8:	4313      	orrs	r3, r2
 802cdda:	803b      	strh	r3, [r7, #0]
 802cddc:	9b38      	ldr	r3, [sp, #224]	@ 0xe0
 802cdde:	f1ba 0f00 	cmp.w	sl, #0
 802cde2:	f107 0702 	add.w	r7, r7, #2
 802cde6:	44d9      	add	r9, fp
 802cde8:	4498      	add	r8, r3
 802cdea:	dd26      	ble.n	802ce3a <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6fa>
 802cdec:	e9d4 6c02 	ldrd	r6, ip, [r4, #8]
 802cdf0:	ea4f 4229 	mov.w	r2, r9, asr #16
 802cdf4:	2a00      	cmp	r2, #0
 802cdf6:	f10a 3aff 	add.w	sl, sl, #4294967295
 802cdfa:	ea4f 4128 	mov.w	r1, r8, asr #16
 802cdfe:	f3c9 3003 	ubfx	r0, r9, #12, #4
 802ce02:	f3c8 3e03 	ubfx	lr, r8, #12, #4
 802ce06:	f6bf aeb9 	bge.w	802cb7c <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x43c>
 802ce0a:	1c53      	adds	r3, r2, #1
 802ce0c:	d4e6      	bmi.n	802cddc <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x69c>
 802ce0e:	42b3      	cmp	r3, r6
 802ce10:	dce4      	bgt.n	802cddc <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x69c>
 802ce12:	1c4b      	adds	r3, r1, #1
 802ce14:	d4e2      	bmi.n	802cddc <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x69c>
 802ce16:	4563      	cmp	r3, ip
 802ce18:	dce0      	bgt.n	802cddc <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x69c>
 802ce1a:	fa0f f38c 	sxth.w	r3, ip
 802ce1e:	b236      	sxth	r6, r6
 802ce20:	e9cd 2102 	strd	r2, r1, [sp, #8]
 802ce24:	e9cd 6300 	strd	r6, r3, [sp]
 802ce28:	e9cd 0e04 	strd	r0, lr, [sp, #16]
 802ce2c:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 802ce2e:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 802ce30:	4639      	mov	r1, r7
 802ce32:	981e      	ldr	r0, [sp, #120]	@ 0x78
 802ce34:	f7ff fade 	bl	802c3f4 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>
 802ce38:	e7d0      	b.n	802cddc <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x69c>
 802ce3a:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 802ce3c:	f8dd b01c 	ldr.w	fp, [sp, #28]
 802ce40:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 802ce44:	3301      	adds	r3, #1
 802ce46:	eb0b 0b43 	add.w	fp, fp, r3, lsl #1
 802ce4a:	e4d6      	b.n	802c7fa <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xba>
 802ce4c:	3b01      	subs	r3, #1
 802ce4e:	f8dd c01c 	ldr.w	ip, [sp, #28]
 802ce52:	930c      	str	r3, [sp, #48]	@ 0x30
 802ce54:	469a      	mov	sl, r3
 802ce56:	e684      	b.n	802cb62 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x422>
 802ce58:	f1be 0f00 	cmp.w	lr, #0
 802ce5c:	f43f aeb4 	beq.w	802cbc8 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>
 802ce60:	5d89      	ldrb	r1, [r1, r6]
 802ce62:	f855 1021 	ldr.w	r1, [r5, r1, lsl #2]
 802ce66:	9120      	str	r1, [sp, #128]	@ 0x80
 802ce68:	0e09      	lsrs	r1, r1, #24
 802ce6a:	9117      	str	r1, [sp, #92]	@ 0x5c
 802ce6c:	e6ac      	b.n	802cbc8 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>
 802ce6e:	990d      	ldr	r1, [sp, #52]	@ 0x34
 802ce70:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 802ce72:	eb01 0c06 	add.w	ip, r1, r6
 802ce76:	f89c c001 	ldrb.w	ip, [ip, #1]
 802ce7a:	5d89      	ldrb	r1, [r1, r6]
 802ce7c:	f855 602c 	ldr.w	r6, [r5, ip, lsl #2]
 802ce80:	f855 1021 	ldr.w	r1, [r5, r1, lsl #2]
 802ce84:	0e35      	lsrs	r5, r6, #24
 802ce86:	9120      	str	r1, [sp, #128]	@ 0x80
 802ce88:	0e09      	lsrs	r1, r1, #24
 802ce8a:	9621      	str	r6, [sp, #132]	@ 0x84
 802ce8c:	9518      	str	r5, [sp, #96]	@ 0x60
 802ce8e:	9117      	str	r1, [sp, #92]	@ 0x5c
 802ce90:	e69a      	b.n	802cbc8 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>
 802ce92:	f43f acb2 	beq.w	802c7fa <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xba>
 802ce96:	1e65      	subs	r5, r4, #1
 802ce98:	f8cd b01c 	str.w	fp, [sp, #28]
 802ce9c:	e4f2      	b.n	802c884 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x144>
 802ce9e:	bf00      	nop
 802cea0:	fffff800 	.word	0xfffff800

0802cea4 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh>:
 802cea4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802cea8:	b08b      	sub	sp, #44	@ 0x2c
 802ceaa:	f89d 0068 	ldrb.w	r0, [sp, #104]	@ 0x68
 802ceae:	f8dd c05c 	ldr.w	ip, [sp, #92]	@ 0x5c
 802ceb2:	ea6f 0b00 	mvn.w	fp, r0
 802ceb6:	9c16      	ldr	r4, [sp, #88]	@ 0x58
 802ceb8:	f9bd 5050 	ldrsh.w	r5, [sp, #80]	@ 0x50
 802cebc:	9005      	str	r0, [sp, #20]
 802cebe:	fb0c 4805 	mla	r8, ip, r5, r4
 802cec2:	7848      	ldrb	r0, [r1, #1]
 802cec4:	788e      	ldrb	r6, [r1, #2]
 802cec6:	0204      	lsls	r4, r0, #8
 802cec8:	780f      	ldrb	r7, [r1, #0]
 802ceca:	ea44 4406 	orr.w	r4, r4, r6, lsl #16
 802cece:	9306      	str	r3, [sp, #24]
 802ced0:	fa5f f38b 	uxtb.w	r3, fp
 802ced4:	433c      	orrs	r4, r7
 802ced6:	9304      	str	r3, [sp, #16]
 802ced8:	f1bc 0f00 	cmp.w	ip, #0
 802cedc:	eb02 0308 	add.w	r3, r2, r8
 802cee0:	9003      	str	r0, [sp, #12]
 802cee2:	9602      	str	r6, [sp, #8]
 802cee4:	9307      	str	r3, [sp, #28]
 802cee6:	9409      	str	r4, [sp, #36]	@ 0x24
 802cee8:	f10c 0601 	add.w	r6, ip, #1
 802ceec:	f9bd e054 	ldrsh.w	lr, [sp, #84]	@ 0x54
 802cef0:	f89d 3060 	ldrb.w	r3, [sp, #96]	@ 0x60
 802cef4:	f89d 0064 	ldrb.w	r0, [sp, #100]	@ 0x64
 802cef8:	db02      	blt.n	802cf00 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x5c>
 802cefa:	45e6      	cmp	lr, ip
 802cefc:	f300 80a0 	bgt.w	802d040 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x19c>
 802cf00:	f10d 0c24 	add.w	ip, sp, #36	@ 0x24
 802cf04:	46e0      	mov	r8, ip
 802cf06:	fa5f fb84 	uxtb.w	fp, r4
 802cf0a:	f8cd b004 	str.w	fp, [sp, #4]
 802cf0e:	2e00      	cmp	r6, #0
 802cf10:	db01      	blt.n	802cf16 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x72>
 802cf12:	45b6      	cmp	lr, r6
 802cf14:	dc73      	bgt.n	802cffe <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x15a>
 802cf16:	fa5f fa84 	uxtb.w	sl, r4
 802cf1a:	f10d 0e24 	add.w	lr, sp, #36	@ 0x24
 802cf1e:	4654      	mov	r4, sl
 802cf20:	46f1      	mov	r9, lr
 802cf22:	2b0f      	cmp	r3, #15
 802cf24:	f200 80cb 	bhi.w	802d0be <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x21a>
 802cf28:	280f      	cmp	r0, #15
 802cf2a:	f200 80c8 	bhi.w	802d0be <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x21a>
 802cf2e:	b29b      	uxth	r3, r3
 802cf30:	b280      	uxth	r0, r0
 802cf32:	fb03 f600 	mul.w	r6, r3, r0
 802cf36:	011b      	lsls	r3, r3, #4
 802cf38:	1b9d      	subs	r5, r3, r6
 802cf3a:	9a01      	ldr	r2, [sp, #4]
 802cf3c:	b2ad      	uxth	r5, r5
 802cf3e:	ebc6 1000 	rsb	r0, r6, r0, lsl #4
 802cf42:	fb05 f202 	mul.w	r2, r5, r2
 802cf46:	b280      	uxth	r0, r0
 802cf48:	f5c3 7380 	rsb	r3, r3, #256	@ 0x100
 802cf4c:	1a1b      	subs	r3, r3, r0
 802cf4e:	b29b      	uxth	r3, r3
 802cf50:	fb03 220b 	mla	r2, r3, fp, r2
 802cf54:	fb00 2a0a 	mla	sl, r0, sl, r2
 802cf58:	f8bd b010 	ldrh.w	fp, [sp, #16]
 802cf5c:	fb06 a404 	mla	r4, r6, r4, sl
 802cf60:	fb17 f70b 	smulbb	r7, r7, fp
 802cf64:	f8bd a014 	ldrh.w	sl, [sp, #20]
 802cf68:	f3c4 2407 	ubfx	r4, r4, #8, #8
 802cf6c:	fb04 770a 	mla	r7, r4, sl, r7
 802cf70:	b2bf      	uxth	r7, r7
 802cf72:	1c7a      	adds	r2, r7, #1
 802cf74:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 802cf78:	123f      	asrs	r7, r7, #8
 802cf7a:	700f      	strb	r7, [r1, #0]
 802cf7c:	f89c 4001 	ldrb.w	r4, [ip, #1]
 802cf80:	f898 7001 	ldrb.w	r7, [r8, #1]
 802cf84:	fb05 f204 	mul.w	r2, r5, r4
 802cf88:	fb03 2407 	mla	r4, r3, r7, r2
 802cf8c:	f899 2001 	ldrb.w	r2, [r9, #1]
 802cf90:	f89e 7001 	ldrb.w	r7, [lr, #1]
 802cf94:	fb00 4202 	mla	r2, r0, r2, r4
 802cf98:	9c03      	ldr	r4, [sp, #12]
 802cf9a:	fb06 2207 	mla	r2, r6, r7, r2
 802cf9e:	fb14 f40b 	smulbb	r4, r4, fp
 802cfa2:	f3c2 2207 	ubfx	r2, r2, #8, #8
 802cfa6:	fb02 420a 	mla	r2, r2, sl, r4
 802cfaa:	b292      	uxth	r2, r2
 802cfac:	1c54      	adds	r4, r2, #1
 802cfae:	eb04 2212 	add.w	r2, r4, r2, lsr #8
 802cfb2:	1212      	asrs	r2, r2, #8
 802cfb4:	704a      	strb	r2, [r1, #1]
 802cfb6:	f89c 4002 	ldrb.w	r4, [ip, #2]
 802cfba:	f898 2002 	ldrb.w	r2, [r8, #2]
 802cfbe:	fb05 f504 	mul.w	r5, r5, r4
 802cfc2:	fb03 5502 	mla	r5, r3, r2, r5
 802cfc6:	f899 4002 	ldrb.w	r4, [r9, #2]
 802cfca:	f89e 2002 	ldrb.w	r2, [lr, #2]
 802cfce:	fb00 5004 	mla	r0, r0, r4, r5
 802cfd2:	9b02      	ldr	r3, [sp, #8]
 802cfd4:	fb06 0602 	mla	r6, r6, r2, r0
 802cfd8:	fb13 fb0b 	smulbb	fp, r3, fp
 802cfdc:	f3c6 2607 	ubfx	r6, r6, #8, #8
 802cfe0:	fb06 ba0a 	mla	sl, r6, sl, fp
 802cfe4:	fa1f fa8a 	uxth.w	sl, sl
 802cfe8:	f10a 0b01 	add.w	fp, sl, #1
 802cfec:	eb0b 2a1a 	add.w	sl, fp, sl, lsr #8
 802cff0:	ea4f 2a2a 	mov.w	sl, sl, asr #8
 802cff4:	f881 a002 	strb.w	sl, [r1, #2]
 802cff8:	b00b      	add	sp, #44	@ 0x2c
 802cffa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802cffe:	2800      	cmp	r0, #0
 802d000:	d089      	beq.n	802cf16 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x72>
 802d002:	9e16      	ldr	r6, [sp, #88]	@ 0x58
 802d004:	2e00      	cmp	r6, #0
 802d006:	db47      	blt.n	802d098 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x1f4>
 802d008:	42b5      	cmp	r5, r6
 802d00a:	dd45      	ble.n	802d098 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x1f4>
 802d00c:	9a07      	ldr	r2, [sp, #28]
 802d00e:	f812 9005 	ldrb.w	r9, [r2, r5]
 802d012:	9a06      	ldr	r2, [sp, #24]
 802d014:	eb09 0949 	add.w	r9, r9, r9, lsl #1
 802d018:	4491      	add	r9, r2
 802d01a:	3601      	adds	r6, #1
 802d01c:	f899 a000 	ldrb.w	sl, [r9]
 802d020:	d436      	bmi.n	802d090 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x1ec>
 802d022:	42b5      	cmp	r5, r6
 802d024:	dd34      	ble.n	802d090 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x1ec>
 802d026:	2b00      	cmp	r3, #0
 802d028:	d045      	beq.n	802d0b6 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x212>
 802d02a:	9a07      	ldr	r2, [sp, #28]
 802d02c:	442a      	add	r2, r5
 802d02e:	f892 e001 	ldrb.w	lr, [r2, #1]
 802d032:	9a06      	ldr	r2, [sp, #24]
 802d034:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 802d038:	f812 400e 	ldrb.w	r4, [r2, lr]
 802d03c:	4496      	add	lr, r2
 802d03e:	e770      	b.n	802cf22 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x7e>
 802d040:	4691      	mov	r9, r2
 802d042:	9a16      	ldr	r2, [sp, #88]	@ 0x58
 802d044:	2a00      	cmp	r2, #0
 802d046:	db01      	blt.n	802d04c <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x1a8>
 802d048:	4295      	cmp	r5, r2
 802d04a:	dc19      	bgt.n	802d080 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x1dc>
 802d04c:	f10d 0824 	add.w	r8, sp, #36	@ 0x24
 802d050:	3201      	adds	r2, #1
 802d052:	f898 b000 	ldrb.w	fp, [r8]
 802d056:	d40e      	bmi.n	802d076 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x1d2>
 802d058:	4295      	cmp	r5, r2
 802d05a:	dd0c      	ble.n	802d076 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x1d2>
 802d05c:	b1fb      	cbz	r3, 802d09e <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x1fa>
 802d05e:	9a07      	ldr	r2, [sp, #28]
 802d060:	f892 c001 	ldrb.w	ip, [r2, #1]
 802d064:	9a06      	ldr	r2, [sp, #24]
 802d066:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 802d06a:	f812 200c 	ldrb.w	r2, [r2, ip]
 802d06e:	9201      	str	r2, [sp, #4]
 802d070:	9a06      	ldr	r2, [sp, #24]
 802d072:	4494      	add	ip, r2
 802d074:	e74b      	b.n	802cf0e <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x6a>
 802d076:	b2e2      	uxtb	r2, r4
 802d078:	9201      	str	r2, [sp, #4]
 802d07a:	f10d 0c24 	add.w	ip, sp, #36	@ 0x24
 802d07e:	e746      	b.n	802cf0e <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x6a>
 802d080:	f819 8008 	ldrb.w	r8, [r9, r8]
 802d084:	9a06      	ldr	r2, [sp, #24]
 802d086:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 802d08a:	4490      	add	r8, r2
 802d08c:	9a16      	ldr	r2, [sp, #88]	@ 0x58
 802d08e:	e7df      	b.n	802d050 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x1ac>
 802d090:	b2e4      	uxtb	r4, r4
 802d092:	f10d 0e24 	add.w	lr, sp, #36	@ 0x24
 802d096:	e744      	b.n	802cf22 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x7e>
 802d098:	f10d 0924 	add.w	r9, sp, #36	@ 0x24
 802d09c:	e7bd      	b.n	802d01a <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x176>
 802d09e:	b2e2      	uxtb	r2, r4
 802d0a0:	2e00      	cmp	r6, #0
 802d0a2:	9201      	str	r2, [sp, #4]
 802d0a4:	f10d 0c24 	add.w	ip, sp, #36	@ 0x24
 802d0a8:	f6bf af33 	bge.w	802cf12 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x6e>
 802d0ac:	46e6      	mov	lr, ip
 802d0ae:	46e1      	mov	r9, ip
 802d0b0:	4692      	mov	sl, r2
 802d0b2:	4614      	mov	r4, r2
 802d0b4:	e738      	b.n	802cf28 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x84>
 802d0b6:	b2e4      	uxtb	r4, r4
 802d0b8:	f10d 0e24 	add.w	lr, sp, #36	@ 0x24
 802d0bc:	e734      	b.n	802cf28 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x84>
 802d0be:	4b03      	ldr	r3, [pc, #12]	@ (802d0cc <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x228>)
 802d0c0:	4a03      	ldr	r2, [pc, #12]	@ (802d0d0 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x22c>)
 802d0c2:	f240 31ca 	movw	r1, #970	@ 0x3ca
 802d0c6:	4803      	ldr	r0, [pc, #12]	@ (802d0d4 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x230>)
 802d0c8:	f005 fb56 	bl	8032778 <__assert_func>
 802d0cc:	08036954 	.word	0x08036954
 802d0d0:	08036fd0 	.word	0x08036fd0
 802d0d4:	08036adc 	.word	0x08036adc

0802d0d8 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 802d0d8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802d0dc:	ed2d 8b08 	vpush	{d8-d11}
 802d0e0:	b097      	sub	sp, #92	@ 0x5c
 802d0e2:	f89d 60c4 	ldrb.w	r6, [sp, #196]	@ 0xc4
 802d0e6:	eeb0 aa40 	vmov.f32	s20, s0
 802d0ea:	e9dd b729 	ldrd	fp, r7, [sp, #164]	@ 0xa4
 802d0ee:	e9cd 0614 	strd	r0, r6, [sp, #80]	@ 0x50
 802d0f2:	43f0      	mvns	r0, r6
 802d0f4:	eef0 9a60 	vmov.f32	s19, s1
 802d0f8:	eeb0 9a41 	vmov.f32	s18, s2
 802d0fc:	eef0 8a62 	vmov.f32	s17, s5
 802d100:	eeb0 8a43 	vmov.f32	s16, s6
 802d104:	eef0 ba44 	vmov.f32	s23, s8
 802d108:	eeb0 ba64 	vmov.f32	s22, s9
 802d10c:	eef0 aa45 	vmov.f32	s21, s10
 802d110:	e9cd 120e 	strd	r1, r2, [sp, #56]	@ 0x38
 802d114:	e9dd 512d 	ldrd	r5, r1, [sp, #180]	@ 0xb4
 802d118:	461a      	mov	r2, r3
 802d11a:	686c      	ldr	r4, [r5, #4]
 802d11c:	9b2f      	ldr	r3, [sp, #188]	@ 0xbc
 802d11e:	f8dd 90ac 	ldr.w	r9, [sp, #172]	@ 0xac
 802d122:	fb04 1303 	mla	r3, r4, r3, r1
 802d126:	9c30      	ldr	r4, [sp, #192]	@ 0xc0
 802d128:	6829      	ldr	r1, [r5, #0]
 802d12a:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 802d12e:	6865      	ldr	r5, [r4, #4]
 802d130:	eb01 0a03 	add.w	sl, r1, r3
 802d134:	b2c3      	uxtb	r3, r0
 802d136:	6824      	ldr	r4, [r4, #0]
 802d138:	9309      	str	r3, [sp, #36]	@ 0x24
 802d13a:	1d2b      	adds	r3, r5, #4
 802d13c:	930a      	str	r3, [sp, #40]	@ 0x28
 802d13e:	b2b3      	uxth	r3, r6
 802d140:	940d      	str	r4, [sp, #52]	@ 0x34
 802d142:	930b      	str	r3, [sp, #44]	@ 0x2c
 802d144:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 802d146:	2b00      	cmp	r3, #0
 802d148:	dc02      	bgt.n	802d150 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 802d14a:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 802d14c:	2b00      	cmp	r3, #0
 802d14e:	dd63      	ble.n	802d218 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x140>
 802d150:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
 802d152:	2a00      	cmp	r2, #0
 802d154:	e9d3 6e02 	ldrd	r6, lr, [r3, #8]
 802d158:	b234      	sxth	r4, r6
 802d15a:	fa0f fc8e 	sxth.w	ip, lr
 802d15e:	f340 825b 	ble.w	802d618 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x540>
 802d162:	f8cd e020 	str.w	lr, [sp, #32]
 802d166:	f8dd e0b0 	ldr.w	lr, [sp, #176]	@ 0xb0
 802d16a:	1e65      	subs	r5, r4, #1
 802d16c:	f10c 38ff 	add.w	r8, ip, #4294967295
 802d170:	ea5f 432b 	movs.w	r3, fp, asr #16
 802d174:	ea4f 4127 	mov.w	r1, r7, asr #16
 802d178:	d405      	bmi.n	802d186 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 802d17a:	42ab      	cmp	r3, r5
 802d17c:	da03      	bge.n	802d186 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 802d17e:	2900      	cmp	r1, #0
 802d180:	db01      	blt.n	802d186 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 802d182:	4541      	cmp	r1, r8
 802d184:	db4d      	blt.n	802d222 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 802d186:	1c58      	adds	r0, r3, #1
 802d188:	d406      	bmi.n	802d198 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xc0>
 802d18a:	42a0      	cmp	r0, r4
 802d18c:	dc04      	bgt.n	802d198 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xc0>
 802d18e:	1c48      	adds	r0, r1, #1
 802d190:	d402      	bmi.n	802d198 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xc0>
 802d192:	4560      	cmp	r0, ip
 802d194:	f340 819b 	ble.w	802d4ce <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f6>
 802d198:	3a01      	subs	r2, #1
 802d19a:	44cb      	add	fp, r9
 802d19c:	4477      	add	r7, lr
 802d19e:	f10a 0a03 	add.w	sl, sl, #3
 802d1a2:	d1e5      	bne.n	802d170 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 802d1a4:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 802d1a6:	2b00      	cmp	r3, #0
 802d1a8:	dd36      	ble.n	802d218 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x140>
 802d1aa:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 802d1ae:	ee3a aa2b 	vadd.f32	s20, s20, s23
 802d1b2:	ee79 9a8b 	vadd.f32	s19, s19, s22
 802d1b6:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 802d1ba:	ee39 9a2a 	vadd.f32	s18, s18, s21
 802d1be:	ee29 6aa7 	vmul.f32	s12, s19, s15
 802d1c2:	ee69 7a27 	vmul.f32	s15, s18, s15
 802d1c6:	ee76 6a68 	vsub.f32	s13, s12, s17
 802d1ca:	ee37 7ac8 	vsub.f32	s14, s15, s16
 802d1ce:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802d1d2:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 802d1d6:	ee16 2a90 	vmov	r2, s13
 802d1da:	3b01      	subs	r3, #1
 802d1dc:	930e      	str	r3, [sp, #56]	@ 0x38
 802d1de:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 802d1e0:	fb92 f9f3 	sdiv	r9, r2, r3
 802d1e4:	ee17 2a10 	vmov	r2, s14
 802d1e8:	eeb0 7a48 	vmov.f32	s14, s16
 802d1ec:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 802d1f0:	ee17 7a10 	vmov	r7, s14
 802d1f4:	eeb0 7a68 	vmov.f32	s14, s17
 802d1f8:	fb92 f3f3 	sdiv	r3, r2, r3
 802d1fc:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 802d200:	932c      	str	r3, [sp, #176]	@ 0xb0
 802d202:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 802d204:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 802d206:	ee17 ba10 	vmov	fp, s14
 802d20a:	eeb0 8a67 	vmov.f32	s16, s15
 802d20e:	eef0 8a46 	vmov.f32	s17, s12
 802d212:	bf18      	it	ne
 802d214:	461a      	movne	r2, r3
 802d216:	e795      	b.n	802d144 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 802d218:	b017      	add	sp, #92	@ 0x5c
 802d21a:	ecbd 8b08 	vpop	{d8-d11}
 802d21e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802d222:	f8dd e020 	ldr.w	lr, [sp, #32]
 802d226:	1e51      	subs	r1, r2, #1
 802d228:	fb09 b301 	mla	r3, r9, r1, fp
 802d22c:	141b      	asrs	r3, r3, #16
 802d22e:	9108      	str	r1, [sp, #32]
 802d230:	f100 80e7 	bmi.w	802d402 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32a>
 802d234:	42ab      	cmp	r3, r5
 802d236:	f280 80e4 	bge.w	802d402 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32a>
 802d23a:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 802d23c:	fb03 7301 	mla	r3, r3, r1, r7
 802d240:	141b      	asrs	r3, r3, #16
 802d242:	f100 80de 	bmi.w	802d402 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32a>
 802d246:	f10c 3cff 	add.w	ip, ip, #4294967295
 802d24a:	4563      	cmp	r3, ip
 802d24c:	f280 80d9 	bge.w	802d402 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32a>
 802d250:	2a00      	cmp	r2, #0
 802d252:	dda7      	ble.n	802d1a4 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xcc>
 802d254:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 802d258:	eb0a 0302 	add.w	r3, sl, r2
 802d25c:	930c      	str	r3, [sp, #48]	@ 0x30
 802d25e:	f10a 0c03 	add.w	ip, sl, #3
 802d262:	e9cd 792a 	strd	r7, r9, [sp, #168]	@ 0xa8
 802d266:	463b      	mov	r3, r7
 802d268:	e09a      	b.n	802d3a0 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 802d26a:	784d      	ldrb	r5, [r1, #1]
 802d26c:	1908      	adds	r0, r1, r4
 802d26e:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 802d272:	4435      	add	r5, r6
 802d274:	2a00      	cmp	r2, #0
 802d276:	f000 80b5 	beq.w	802d3e4 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 802d27a:	5d0c      	ldrb	r4, [r1, r4]
 802d27c:	f890 e001 	ldrb.w	lr, [r0, #1]
 802d280:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 802d284:	19a1      	adds	r1, r4, r6
 802d286:	9108      	str	r1, [sp, #32]
 802d288:	4631      	mov	r1, r6
 802d28a:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 802d28e:	9f08      	ldr	r7, [sp, #32]
 802d290:	44b6      	add	lr, r6
 802d292:	b29b      	uxth	r3, r3
 802d294:	b292      	uxth	r2, r2
 802d296:	fb03 f602 	mul.w	r6, r3, r2
 802d29a:	011b      	lsls	r3, r3, #4
 802d29c:	f895 9000 	ldrb.w	r9, [r5]
 802d2a0:	1b98      	subs	r0, r3, r6
 802d2a2:	b280      	uxth	r0, r0
 802d2a4:	fb00 f909 	mul.w	r9, r0, r9
 802d2a8:	ebc6 1202 	rsb	r2, r6, r2, lsl #4
 802d2ac:	b292      	uxth	r2, r2
 802d2ae:	f5c3 7380 	rsb	r3, r3, #256	@ 0x100
 802d2b2:	f811 100a 	ldrb.w	r1, [r1, sl]
 802d2b6:	1a9b      	subs	r3, r3, r2
 802d2b8:	b29b      	uxth	r3, r3
 802d2ba:	fb03 9101 	mla	r1, r3, r1, r9
 802d2be:	f897 9000 	ldrb.w	r9, [r7]
 802d2c2:	9c2b      	ldr	r4, [sp, #172]	@ 0xac
 802d2c4:	fb02 1109 	mla	r1, r2, r9, r1
 802d2c8:	f89e a000 	ldrb.w	sl, [lr]
 802d2cc:	f81c 9c03 	ldrb.w	r9, [ip, #-3]
 802d2d0:	44a3      	add	fp, r4
 802d2d2:	9c09      	ldr	r4, [sp, #36]	@ 0x24
 802d2d4:	fb06 110a 	mla	r1, r6, sl, r1
 802d2d8:	fb19 f904 	smulbb	r9, r9, r4
 802d2dc:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 802d2de:	f3c1 2107 	ubfx	r1, r1, #8, #8
 802d2e2:	fb01 9904 	mla	r9, r1, r4, r9
 802d2e6:	fa1f f989 	uxth.w	r9, r9
 802d2ea:	f109 0101 	add.w	r1, r9, #1
 802d2ee:	eb01 2919 	add.w	r9, r1, r9, lsr #8
 802d2f2:	ea4f 2929 	mov.w	r9, r9, asr #8
 802d2f6:	f80c 9c03 	strb.w	r9, [ip, #-3]
 802d2fa:	7869      	ldrb	r1, [r5, #1]
 802d2fc:	f898 9001 	ldrb.w	r9, [r8, #1]
 802d300:	fb00 f101 	mul.w	r1, r0, r1
 802d304:	9c08      	ldr	r4, [sp, #32]
 802d306:	fb03 1109 	mla	r1, r3, r9, r1
 802d30a:	f894 9001 	ldrb.w	r9, [r4, #1]
 802d30e:	9f2c      	ldr	r7, [sp, #176]	@ 0xb0
 802d310:	9c2a      	ldr	r4, [sp, #168]	@ 0xa8
 802d312:	fb02 1109 	mla	r1, r2, r9, r1
 802d316:	f89e a001 	ldrb.w	sl, [lr, #1]
 802d31a:	443c      	add	r4, r7
 802d31c:	f81c 9c02 	ldrb.w	r9, [ip, #-2]
 802d320:	942a      	str	r4, [sp, #168]	@ 0xa8
 802d322:	9c09      	ldr	r4, [sp, #36]	@ 0x24
 802d324:	fb06 110a 	mla	r1, r6, sl, r1
 802d328:	fb19 f904 	smulbb	r9, r9, r4
 802d32c:	9f0b      	ldr	r7, [sp, #44]	@ 0x2c
 802d32e:	f3c1 2107 	ubfx	r1, r1, #8, #8
 802d332:	fb01 9907 	mla	r9, r1, r7, r9
 802d336:	fa1f f989 	uxth.w	r9, r9
 802d33a:	f109 0101 	add.w	r1, r9, #1
 802d33e:	eb01 2919 	add.w	r9, r1, r9, lsr #8
 802d342:	ea4f 2929 	mov.w	r9, r9, asr #8
 802d346:	f80c 9c02 	strb.w	r9, [ip, #-2]
 802d34a:	78a9      	ldrb	r1, [r5, #2]
 802d34c:	f898 5002 	ldrb.w	r5, [r8, #2]
 802d350:	fb00 f001 	mul.w	r0, r0, r1
 802d354:	fb03 0005 	mla	r0, r3, r5, r0
 802d358:	9b08      	ldr	r3, [sp, #32]
 802d35a:	f89e 4002 	ldrb.w	r4, [lr, #2]
 802d35e:	789b      	ldrb	r3, [r3, #2]
 802d360:	f81c ec01 	ldrb.w	lr, [ip, #-1]
 802d364:	fb02 0003 	mla	r0, r2, r3, r0
 802d368:	fb06 0004 	mla	r0, r6, r4, r0
 802d36c:	9c09      	ldr	r4, [sp, #36]	@ 0x24
 802d36e:	fb1e f404 	smulbb	r4, lr, r4
 802d372:	f3c0 2e07 	ubfx	lr, r0, #8, #8
 802d376:	fb0e 4e07 	mla	lr, lr, r7, r4
 802d37a:	fa1f fe8e 	uxth.w	lr, lr
 802d37e:	f10e 0301 	add.w	r3, lr, #1
 802d382:	eb03 2e1e 	add.w	lr, r3, lr, lsr #8
 802d386:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 802d388:	ea4f 2e2e 	mov.w	lr, lr, asr #8
 802d38c:	4563      	cmp	r3, ip
 802d38e:	f80c ec01 	strb.w	lr, [ip, #-1]
 802d392:	d034      	beq.n	802d3fe <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x326>
 802d394:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
 802d396:	f10c 0c03 	add.w	ip, ip, #3
 802d39a:	f9b3 4008 	ldrsh.w	r4, [r3, #8]
 802d39e:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 802d3a0:	1419      	asrs	r1, r3, #16
 802d3a2:	ea4f 432b 	mov.w	r3, fp, asr #16
 802d3a6:	fb04 3101 	mla	r1, r4, r1, r3
 802d3aa:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 802d3ac:	9e0a      	ldr	r6, [sp, #40]	@ 0x28
 802d3ae:	f812 a001 	ldrb.w	sl, [r2, r1]
 802d3b2:	4411      	add	r1, r2
 802d3b4:	9a2a      	ldr	r2, [sp, #168]	@ 0xa8
 802d3b6:	eb0a 0a4a 	add.w	sl, sl, sl, lsl #1
 802d3ba:	f3cb 3303 	ubfx	r3, fp, #12, #4
 802d3be:	eb06 080a 	add.w	r8, r6, sl
 802d3c2:	f3c2 3203 	ubfx	r2, r2, #12, #4
 802d3c6:	2b00      	cmp	r3, #0
 802d3c8:	f47f af4f 	bne.w	802d26a <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x192>
 802d3cc:	b182      	cbz	r2, 802d3f0 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x318>
 802d3ce:	5d0c      	ldrb	r4, [r1, r4]
 802d3d0:	990a      	ldr	r1, [sp, #40]	@ 0x28
 802d3d2:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 802d3d6:	1861      	adds	r1, r4, r1
 802d3d8:	9108      	str	r1, [sp, #32]
 802d3da:	46c6      	mov	lr, r8
 802d3dc:	4645      	mov	r5, r8
 802d3de:	990a      	ldr	r1, [sp, #40]	@ 0x28
 802d3e0:	9f08      	ldr	r7, [sp, #32]
 802d3e2:	e756      	b.n	802d292 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
 802d3e4:	46c6      	mov	lr, r8
 802d3e6:	f8cd 8020 	str.w	r8, [sp, #32]
 802d3ea:	4631      	mov	r1, r6
 802d3ec:	4647      	mov	r7, r8
 802d3ee:	e750      	b.n	802d292 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
 802d3f0:	46c6      	mov	lr, r8
 802d3f2:	f8cd 8020 	str.w	r8, [sp, #32]
 802d3f6:	4645      	mov	r5, r8
 802d3f8:	4631      	mov	r1, r6
 802d3fa:	4647      	mov	r7, r8
 802d3fc:	e749      	b.n	802d292 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
 802d3fe:	469a      	mov	sl, r3
 802d400:	e6d0      	b.n	802d1a4 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xcc>
 802d402:	2a00      	cmp	r2, #0
 802d404:	f77f aece 	ble.w	802d1a4 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xcc>
 802d408:	f8dd 8020 	ldr.w	r8, [sp, #32]
 802d40c:	ea4f 432b 	mov.w	r3, fp, asr #16
 802d410:	1439      	asrs	r1, r7, #16
 802d412:	4654      	mov	r4, sl
 802d414:	9d30      	ldr	r5, [sp, #192]	@ 0xc0
 802d416:	f8cd a04c 	str.w	sl, [sp, #76]	@ 0x4c
 802d41a:	2b00      	cmp	r3, #0
 802d41c:	f3cb 3003 	ubfx	r0, fp, #12, #4
 802d420:	f3c7 3203 	ubfx	r2, r7, #12, #4
 802d424:	db2f      	blt.n	802d486 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 802d426:	f106 3cff 	add.w	ip, r6, #4294967295
 802d42a:	4563      	cmp	r3, ip
 802d42c:	da2b      	bge.n	802d486 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 802d42e:	2900      	cmp	r1, #0
 802d430:	db29      	blt.n	802d486 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 802d432:	f10e 3cff 	add.w	ip, lr, #4294967295
 802d436:	4561      	cmp	r1, ip
 802d438:	da25      	bge.n	802d486 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 802d43a:	fa0f fa86 	sxth.w	sl, r6
 802d43e:	fb01 330a 	mla	r3, r1, sl, r3
 802d442:	990d      	ldr	r1, [sp, #52]	@ 0x34
 802d444:	9e0a      	ldr	r6, [sp, #40]	@ 0x28
 802d446:	f811 e003 	ldrb.w	lr, [r1, r3]
 802d44a:	440b      	add	r3, r1
 802d44c:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 802d450:	eb06 0c0e 	add.w	ip, r6, lr
 802d454:	2800      	cmp	r0, #0
 802d456:	d052      	beq.n	802d4fe <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x426>
 802d458:	7859      	ldrb	r1, [r3, #1]
 802d45a:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 802d45e:	1871      	adds	r1, r6, r1
 802d460:	910c      	str	r1, [sp, #48]	@ 0x30
 802d462:	2a00      	cmp	r2, #0
 802d464:	f000 80d5 	beq.w	802d612 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x53a>
 802d468:	eb03 010a 	add.w	r1, r3, sl
 802d46c:	7849      	ldrb	r1, [r1, #1]
 802d46e:	f813 300a 	ldrb.w	r3, [r3, sl]
 802d472:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 802d476:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 802d47a:	1871      	adds	r1, r6, r1
 802d47c:	18f3      	adds	r3, r6, r3
 802d47e:	9110      	str	r1, [sp, #64]	@ 0x40
 802d480:	9311      	str	r3, [sp, #68]	@ 0x44
 802d482:	990c      	ldr	r1, [sp, #48]	@ 0x30
 802d484:	e042      	b.n	802d50c <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x434>
 802d486:	f113 0c01 	adds.w	ip, r3, #1
 802d48a:	d406      	bmi.n	802d49a <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 802d48c:	45b4      	cmp	ip, r6
 802d48e:	dc04      	bgt.n	802d49a <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 802d490:	f111 0c01 	adds.w	ip, r1, #1
 802d494:	d401      	bmi.n	802d49a <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 802d496:	45f4      	cmp	ip, lr
 802d498:	dd1f      	ble.n	802d4da <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x402>
 802d49a:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 802d49c:	f1b8 0f00 	cmp.w	r8, #0
 802d4a0:	f104 0403 	add.w	r4, r4, #3
 802d4a4:	44cb      	add	fp, r9
 802d4a6:	441f      	add	r7, r3
 802d4a8:	dd07      	ble.n	802d4ba <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e2>
 802d4aa:	e9d5 6e02 	ldrd	r6, lr, [r5, #8]
 802d4ae:	f108 38ff 	add.w	r8, r8, #4294967295
 802d4b2:	ea4f 432b 	mov.w	r3, fp, asr #16
 802d4b6:	1439      	asrs	r1, r7, #16
 802d4b8:	e7af      	b.n	802d41a <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 802d4ba:	9b08      	ldr	r3, [sp, #32]
 802d4bc:	f8dd a04c 	ldr.w	sl, [sp, #76]	@ 0x4c
 802d4c0:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 802d4c4:	3301      	adds	r3, #1
 802d4c6:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 802d4ca:	449a      	add	sl, r3
 802d4cc:	e66a      	b.n	802d1a4 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xcc>
 802d4ce:	3a01      	subs	r2, #1
 802d4d0:	f8dd e020 	ldr.w	lr, [sp, #32]
 802d4d4:	4690      	mov	r8, r2
 802d4d6:	9208      	str	r2, [sp, #32]
 802d4d8:	e79b      	b.n	802d412 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33a>
 802d4da:	fa0f fe8e 	sxth.w	lr, lr
 802d4de:	b236      	sxth	r6, r6
 802d4e0:	e9cd 6e00 	strd	r6, lr, [sp]
 802d4e4:	9e15      	ldr	r6, [sp, #84]	@ 0x54
 802d4e6:	e9cd 1003 	strd	r1, r0, [sp, #12]
 802d4ea:	e9cd 2605 	strd	r2, r6, [sp, #20]
 802d4ee:	9302      	str	r3, [sp, #8]
 802d4f0:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 802d4f2:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 802d4f4:	4621      	mov	r1, r4
 802d4f6:	9814      	ldr	r0, [sp, #80]	@ 0x50
 802d4f8:	f7ff fcd4 	bl	802cea4 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh>
 802d4fc:	e7cd      	b.n	802d49a <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 802d4fe:	2a00      	cmp	r2, #0
 802d500:	d17b      	bne.n	802d5fa <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x522>
 802d502:	4661      	mov	r1, ip
 802d504:	e9cd cc10 	strd	ip, ip, [sp, #64]	@ 0x40
 802d508:	f8cd c030 	str.w	ip, [sp, #48]	@ 0x30
 802d50c:	b283      	uxth	r3, r0
 802d50e:	b292      	uxth	r2, r2
 802d510:	fb03 f602 	mul.w	r6, r3, r2
 802d514:	011b      	lsls	r3, r3, #4
 802d516:	7809      	ldrb	r1, [r1, #0]
 802d518:	1b98      	subs	r0, r3, r6
 802d51a:	b280      	uxth	r0, r0
 802d51c:	9012      	str	r0, [sp, #72]	@ 0x48
 802d51e:	fb00 f101 	mul.w	r1, r0, r1
 802d522:	ebc6 1202 	rsb	r2, r6, r2, lsl #4
 802d526:	980a      	ldr	r0, [sp, #40]	@ 0x28
 802d528:	b292      	uxth	r2, r2
 802d52a:	f5c3 7380 	rsb	r3, r3, #256	@ 0x100
 802d52e:	f810 e00e 	ldrb.w	lr, [r0, lr]
 802d532:	1a9b      	subs	r3, r3, r2
 802d534:	b29b      	uxth	r3, r3
 802d536:	fb03 110e 	mla	r1, r3, lr, r1
 802d53a:	9811      	ldr	r0, [sp, #68]	@ 0x44
 802d53c:	f890 a000 	ldrb.w	sl, [r0]
 802d540:	9810      	ldr	r0, [sp, #64]	@ 0x40
 802d542:	fb02 110a 	mla	r1, r2, sl, r1
 802d546:	f890 e000 	ldrb.w	lr, [r0]
 802d54a:	f894 a000 	ldrb.w	sl, [r4]
 802d54e:	9809      	ldr	r0, [sp, #36]	@ 0x24
 802d550:	fb06 110e 	mla	r1, r6, lr, r1
 802d554:	fb1a fa00 	smulbb	sl, sl, r0
 802d558:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 802d55a:	f3c1 2107 	ubfx	r1, r1, #8, #8
 802d55e:	fb01 a100 	mla	r1, r1, r0, sl
 802d562:	b289      	uxth	r1, r1
 802d564:	f101 0e01 	add.w	lr, r1, #1
 802d568:	eb0e 2111 	add.w	r1, lr, r1, lsr #8
 802d56c:	1209      	asrs	r1, r1, #8
 802d56e:	7021      	strb	r1, [r4, #0]
 802d570:	990c      	ldr	r1, [sp, #48]	@ 0x30
 802d572:	9812      	ldr	r0, [sp, #72]	@ 0x48
 802d574:	7849      	ldrb	r1, [r1, #1]
 802d576:	f89c e001 	ldrb.w	lr, [ip, #1]
 802d57a:	fb00 f101 	mul.w	r1, r0, r1
 802d57e:	9811      	ldr	r0, [sp, #68]	@ 0x44
 802d580:	fb03 110e 	mla	r1, r3, lr, r1
 802d584:	f890 a001 	ldrb.w	sl, [r0, #1]
 802d588:	9810      	ldr	r0, [sp, #64]	@ 0x40
 802d58a:	fb02 110a 	mla	r1, r2, sl, r1
 802d58e:	f890 e001 	ldrb.w	lr, [r0, #1]
 802d592:	f894 a001 	ldrb.w	sl, [r4, #1]
 802d596:	9809      	ldr	r0, [sp, #36]	@ 0x24
 802d598:	fb06 110e 	mla	r1, r6, lr, r1
 802d59c:	fb1a fa00 	smulbb	sl, sl, r0
 802d5a0:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 802d5a2:	f3c1 2107 	ubfx	r1, r1, #8, #8
 802d5a6:	fb01 a100 	mla	r1, r1, r0, sl
 802d5aa:	b289      	uxth	r1, r1
 802d5ac:	f101 0e01 	add.w	lr, r1, #1
 802d5b0:	eb0e 2111 	add.w	r1, lr, r1, lsr #8
 802d5b4:	1209      	asrs	r1, r1, #8
 802d5b6:	7061      	strb	r1, [r4, #1]
 802d5b8:	990c      	ldr	r1, [sp, #48]	@ 0x30
 802d5ba:	9812      	ldr	r0, [sp, #72]	@ 0x48
 802d5bc:	7889      	ldrb	r1, [r1, #2]
 802d5be:	f89c c002 	ldrb.w	ip, [ip, #2]
 802d5c2:	fb00 f001 	mul.w	r0, r0, r1
 802d5c6:	fb03 010c 	mla	r1, r3, ip, r0
 802d5ca:	9811      	ldr	r0, [sp, #68]	@ 0x44
 802d5cc:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 802d5ce:	7880      	ldrb	r0, [r0, #2]
 802d5d0:	789b      	ldrb	r3, [r3, #2]
 802d5d2:	fb02 1100 	mla	r1, r2, r0, r1
 802d5d6:	78a2      	ldrb	r2, [r4, #2]
 802d5d8:	9809      	ldr	r0, [sp, #36]	@ 0x24
 802d5da:	fb06 1303 	mla	r3, r6, r3, r1
 802d5de:	fb12 f200 	smulbb	r2, r2, r0
 802d5e2:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 802d5e4:	f3c3 2307 	ubfx	r3, r3, #8, #8
 802d5e8:	fb03 2300 	mla	r3, r3, r0, r2
 802d5ec:	b29b      	uxth	r3, r3
 802d5ee:	1c5a      	adds	r2, r3, #1
 802d5f0:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 802d5f4:	121b      	asrs	r3, r3, #8
 802d5f6:	70a3      	strb	r3, [r4, #2]
 802d5f8:	e74f      	b.n	802d49a <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 802d5fa:	f813 300a 	ldrb.w	r3, [r3, sl]
 802d5fe:	f8cd c040 	str.w	ip, [sp, #64]	@ 0x40
 802d602:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 802d606:	18f3      	adds	r3, r6, r3
 802d608:	9311      	str	r3, [sp, #68]	@ 0x44
 802d60a:	f8cd c030 	str.w	ip, [sp, #48]	@ 0x30
 802d60e:	4661      	mov	r1, ip
 802d610:	e77c      	b.n	802d50c <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x434>
 802d612:	e9cd cc10 	strd	ip, ip, [sp, #64]	@ 0x40
 802d616:	e779      	b.n	802d50c <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x434>
 802d618:	f43f adc4 	beq.w	802d1a4 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xcc>
 802d61c:	1e65      	subs	r5, r4, #1
 802d61e:	e602      	b.n	802d226 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>

0802d620 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh>:
 802d620:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802d624:	b083      	sub	sp, #12
 802d626:	f9bd 8030 	ldrsh.w	r8, [sp, #48]	@ 0x30
 802d62a:	f891 9001 	ldrb.w	r9, [r1, #1]
 802d62e:	e9dd 670e 	ldrd	r6, r7, [sp, #56]	@ 0x38
 802d632:	7888      	ldrb	r0, [r1, #2]
 802d634:	fb07 6c08 	mla	ip, r7, r8, r6
 802d638:	ea4f 2909 	mov.w	r9, r9, lsl #8
 802d63c:	780c      	ldrb	r4, [r1, #0]
 802d63e:	ea49 4900 	orr.w	r9, r9, r0, lsl #16
 802d642:	ea49 0404 	orr.w	r4, r9, r4
 802d646:	2f00      	cmp	r7, #0
 802d648:	9401      	str	r4, [sp, #4]
 802d64a:	eb02 090c 	add.w	r9, r2, ip
 802d64e:	f107 0e01 	add.w	lr, r7, #1
 802d652:	f9bd a034 	ldrsh.w	sl, [sp, #52]	@ 0x34
 802d656:	f89d 0040 	ldrb.w	r0, [sp, #64]	@ 0x40
 802d65a:	f89d 5044 	ldrb.w	r5, [sp, #68]	@ 0x44
 802d65e:	db01      	blt.n	802d664 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x44>
 802d660:	45ba      	cmp	sl, r7
 802d662:	dc6e      	bgt.n	802d742 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x122>
 802d664:	fa5f fb84 	uxtb.w	fp, r4
 802d668:	af01      	add	r7, sp, #4
 802d66a:	465a      	mov	r2, fp
 802d66c:	46bc      	mov	ip, r7
 802d66e:	f1be 0f00 	cmp.w	lr, #0
 802d672:	db01      	blt.n	802d678 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x58>
 802d674:	45f2      	cmp	sl, lr
 802d676:	dc49      	bgt.n	802d70c <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0xec>
 802d678:	fa5f fa84 	uxtb.w	sl, r4
 802d67c:	ab01      	add	r3, sp, #4
 802d67e:	46d1      	mov	r9, sl
 802d680:	469e      	mov	lr, r3
 802d682:	280f      	cmp	r0, #15
 802d684:	f200 8098 	bhi.w	802d7b8 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x198>
 802d688:	2d0f      	cmp	r5, #15
 802d68a:	f200 8095 	bhi.w	802d7b8 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x198>
 802d68e:	b280      	uxth	r0, r0
 802d690:	b2ad      	uxth	r5, r5
 802d692:	fb00 f805 	mul.w	r8, r0, r5
 802d696:	0104      	lsls	r4, r0, #4
 802d698:	eba4 0608 	sub.w	r6, r4, r8
 802d69c:	b2b6      	uxth	r6, r6
 802d69e:	fb06 f002 	mul.w	r0, r6, r2
 802d6a2:	ebc8 1505 	rsb	r5, r8, r5, lsl #4
 802d6a6:	b2ad      	uxth	r5, r5
 802d6a8:	f5c4 7280 	rsb	r2, r4, #256	@ 0x100
 802d6ac:	1b52      	subs	r2, r2, r5
 802d6ae:	b292      	uxth	r2, r2
 802d6b0:	fb02 000b 	mla	r0, r2, fp, r0
 802d6b4:	fb05 000a 	mla	r0, r5, sl, r0
 802d6b8:	fb08 0009 	mla	r0, r8, r9, r0
 802d6bc:	1200      	asrs	r0, r0, #8
 802d6be:	7008      	strb	r0, [r1, #0]
 802d6c0:	f897 9001 	ldrb.w	r9, [r7, #1]
 802d6c4:	f89c 4001 	ldrb.w	r4, [ip, #1]
 802d6c8:	fb06 f909 	mul.w	r9, r6, r9
 802d6cc:	fb02 9904 	mla	r9, r2, r4, r9
 802d6d0:	f89e 4001 	ldrb.w	r4, [lr, #1]
 802d6d4:	7858      	ldrb	r0, [r3, #1]
 802d6d6:	fb05 9404 	mla	r4, r5, r4, r9
 802d6da:	fb08 4000 	mla	r0, r8, r0, r4
 802d6de:	1200      	asrs	r0, r0, #8
 802d6e0:	7048      	strb	r0, [r1, #1]
 802d6e2:	78bc      	ldrb	r4, [r7, #2]
 802d6e4:	f89c 0002 	ldrb.w	r0, [ip, #2]
 802d6e8:	fb06 f604 	mul.w	r6, r6, r4
 802d6ec:	fb02 6600 	mla	r6, r2, r0, r6
 802d6f0:	f89e 0002 	ldrb.w	r0, [lr, #2]
 802d6f4:	789b      	ldrb	r3, [r3, #2]
 802d6f6:	fb05 6500 	mla	r5, r5, r0, r6
 802d6fa:	fb08 5803 	mla	r8, r8, r3, r5
 802d6fe:	ea4f 2828 	mov.w	r8, r8, asr #8
 802d702:	f881 8002 	strb.w	r8, [r1, #2]
 802d706:	b003      	add	sp, #12
 802d708:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802d70c:	b385      	cbz	r5, 802d770 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x150>
 802d70e:	2e00      	cmp	r6, #0
 802d710:	db40      	blt.n	802d794 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x174>
 802d712:	45b0      	cmp	r8, r6
 802d714:	dd3e      	ble.n	802d794 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x174>
 802d716:	f819 e008 	ldrb.w	lr, [r9, r8]
 802d71a:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 802d71e:	449e      	add	lr, r3
 802d720:	3601      	adds	r6, #1
 802d722:	f89e a000 	ldrb.w	sl, [lr]
 802d726:	d431      	bmi.n	802d78c <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x16c>
 802d728:	45b0      	cmp	r8, r6
 802d72a:	dd2f      	ble.n	802d78c <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x16c>
 802d72c:	2800      	cmp	r0, #0
 802d72e:	d03f      	beq.n	802d7b0 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x190>
 802d730:	44c8      	add	r8, r9
 802d732:	f898 4001 	ldrb.w	r4, [r8, #1]
 802d736:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 802d73a:	f813 9004 	ldrb.w	r9, [r3, r4]
 802d73e:	4423      	add	r3, r4
 802d740:	e79f      	b.n	802d682 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x62>
 802d742:	2e00      	cmp	r6, #0
 802d744:	db01      	blt.n	802d74a <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x12a>
 802d746:	45b0      	cmp	r8, r6
 802d748:	dc1a      	bgt.n	802d780 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x160>
 802d74a:	f10d 0c04 	add.w	ip, sp, #4
 802d74e:	1c72      	adds	r2, r6, #1
 802d750:	f89c b000 	ldrb.w	fp, [ip]
 802d754:	d409      	bmi.n	802d76a <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x14a>
 802d756:	4590      	cmp	r8, r2
 802d758:	dd07      	ble.n	802d76a <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x14a>
 802d75a:	b1f0      	cbz	r0, 802d79a <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x17a>
 802d75c:	f899 7001 	ldrb.w	r7, [r9, #1]
 802d760:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 802d764:	5dda      	ldrb	r2, [r3, r7]
 802d766:	441f      	add	r7, r3
 802d768:	e781      	b.n	802d66e <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x4e>
 802d76a:	b2e2      	uxtb	r2, r4
 802d76c:	af01      	add	r7, sp, #4
 802d76e:	e77e      	b.n	802d66e <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x4e>
 802d770:	280f      	cmp	r0, #15
 802d772:	fa5f fa84 	uxtb.w	sl, r4
 802d776:	d81f      	bhi.n	802d7b8 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x198>
 802d778:	ab01      	add	r3, sp, #4
 802d77a:	469e      	mov	lr, r3
 802d77c:	46d1      	mov	r9, sl
 802d77e:	e786      	b.n	802d68e <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x6e>
 802d780:	f812 c00c 	ldrb.w	ip, [r2, ip]
 802d784:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 802d788:	449c      	add	ip, r3
 802d78a:	e7e0      	b.n	802d74e <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x12e>
 802d78c:	fa5f f984 	uxtb.w	r9, r4
 802d790:	ab01      	add	r3, sp, #4
 802d792:	e776      	b.n	802d682 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x62>
 802d794:	f10d 0e04 	add.w	lr, sp, #4
 802d798:	e7c2      	b.n	802d720 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x100>
 802d79a:	f1be 0f00 	cmp.w	lr, #0
 802d79e:	b2e2      	uxtb	r2, r4
 802d7a0:	af01      	add	r7, sp, #4
 802d7a2:	f6bf af67 	bge.w	802d674 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x54>
 802d7a6:	463b      	mov	r3, r7
 802d7a8:	46be      	mov	lr, r7
 802d7aa:	4691      	mov	r9, r2
 802d7ac:	4692      	mov	sl, r2
 802d7ae:	e76b      	b.n	802d688 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x68>
 802d7b0:	fa5f f984 	uxtb.w	r9, r4
 802d7b4:	ab01      	add	r3, sp, #4
 802d7b6:	e767      	b.n	802d688 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x68>
 802d7b8:	4b03      	ldr	r3, [pc, #12]	@ (802d7c8 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x1a8>)
 802d7ba:	4a04      	ldr	r2, [pc, #16]	@ (802d7cc <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x1ac>)
 802d7bc:	f240 31ca 	movw	r1, #970	@ 0x3ca
 802d7c0:	4803      	ldr	r0, [pc, #12]	@ (802d7d0 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x1b0>)
 802d7c2:	f004 ffd9 	bl	8032778 <__assert_func>
 802d7c6:	bf00      	nop
 802d7c8:	08036954 	.word	0x08036954
 802d7cc:	08036fd0 	.word	0x08036fd0
 802d7d0:	08036adc 	.word	0x08036adc

0802d7d4 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 802d7d4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802d7d8:	ed2d 8b0a 	vpush	{d8-d12}
 802d7dc:	eeb0 aa40 	vmov.f32	s20, s0
 802d7e0:	eef0 9a60 	vmov.f32	s19, s1
 802d7e4:	eeb0 9a41 	vmov.f32	s18, s2
 802d7e8:	eef0 8a62 	vmov.f32	s17, s5
 802d7ec:	eeb0 8a43 	vmov.f32	s16, s6
 802d7f0:	eeb0 ca44 	vmov.f32	s24, s8
 802d7f4:	eef0 ba64 	vmov.f32	s23, s9
 802d7f8:	eeb0 ba45 	vmov.f32	s22, s10
 802d7fc:	eef7 aa00 	vmov.f32	s21, #112	@ 0x3f800000  1.0
 802d800:	b093      	sub	sp, #76	@ 0x4c
 802d802:	e9cd 120a 	strd	r1, r2, [sp, #40]	@ 0x28
 802d806:	e9dd 412b 	ldrd	r4, r1, [sp, #172]	@ 0xac
 802d80a:	e9dd 9b27 	ldrd	r9, fp, [sp, #156]	@ 0x9c
 802d80e:	9011      	str	r0, [sp, #68]	@ 0x44
 802d810:	461a      	mov	r2, r3
 802d812:	6860      	ldr	r0, [r4, #4]
 802d814:	9b2d      	ldr	r3, [sp, #180]	@ 0xb4
 802d816:	fb00 1803 	mla	r8, r0, r3, r1
 802d81a:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
 802d81c:	982e      	ldr	r0, [sp, #184]	@ 0xb8
 802d81e:	6821      	ldr	r1, [r4, #0]
 802d820:	685b      	ldr	r3, [r3, #4]
 802d822:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 802d826:	6800      	ldr	r0, [r0, #0]
 802d828:	eb01 0a08 	add.w	sl, r1, r8
 802d82c:	3304      	adds	r3, #4
 802d82e:	f8dd 80a4 	ldr.w	r8, [sp, #164]	@ 0xa4
 802d832:	9009      	str	r0, [sp, #36]	@ 0x24
 802d834:	9307      	str	r3, [sp, #28]
 802d836:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 802d838:	2b00      	cmp	r3, #0
 802d83a:	dc02      	bgt.n	802d842 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 802d83c:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 802d83e:	2b00      	cmp	r3, #0
 802d840:	dd61      	ble.n	802d906 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x132>
 802d842:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
 802d844:	2a00      	cmp	r2, #0
 802d846:	e9d3 6e02 	ldrd	r6, lr, [r3, #8]
 802d84a:	b230      	sxth	r0, r6
 802d84c:	fa0f f78e 	sxth.w	r7, lr
 802d850:	f340 81fe 	ble.w	802dc50 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x47c>
 802d854:	f8cd e018 	str.w	lr, [sp, #24]
 802d858:	f8dd e0a8 	ldr.w	lr, [sp, #168]	@ 0xa8
 802d85c:	1e45      	subs	r5, r0, #1
 802d85e:	f107 3cff 	add.w	ip, r7, #4294967295
 802d862:	ea5f 4329 	movs.w	r3, r9, asr #16
 802d866:	ea4f 412b 	mov.w	r1, fp, asr #16
 802d86a:	d405      	bmi.n	802d878 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 802d86c:	42ab      	cmp	r3, r5
 802d86e:	da03      	bge.n	802d878 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 802d870:	2900      	cmp	r1, #0
 802d872:	db01      	blt.n	802d878 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 802d874:	4561      	cmp	r1, ip
 802d876:	db4b      	blt.n	802d910 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13c>
 802d878:	1c5c      	adds	r4, r3, #1
 802d87a:	d406      	bmi.n	802d88a <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 802d87c:	4284      	cmp	r4, r0
 802d87e:	dc04      	bgt.n	802d88a <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 802d880:	1c4c      	adds	r4, r1, #1
 802d882:	d402      	bmi.n	802d88a <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 802d884:	42bc      	cmp	r4, r7
 802d886:	f340 815e 	ble.w	802db46 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x372>
 802d88a:	3a01      	subs	r2, #1
 802d88c:	44c1      	add	r9, r8
 802d88e:	44f3      	add	fp, lr
 802d890:	f10a 0a03 	add.w	sl, sl, #3
 802d894:	d1e5      	bne.n	802d862 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 802d896:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 802d898:	2b00      	cmp	r3, #0
 802d89a:	dd34      	ble.n	802d906 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x132>
 802d89c:	ee3a aa0c 	vadd.f32	s20, s20, s24
 802d8a0:	ee79 9aab 	vadd.f32	s19, s19, s23
 802d8a4:	eeca 7a8a 	vdiv.f32	s15, s21, s20
 802d8a8:	ee39 9a0b 	vadd.f32	s18, s18, s22
 802d8ac:	ee29 6aa7 	vmul.f32	s12, s19, s15
 802d8b0:	ee69 7a27 	vmul.f32	s15, s18, s15
 802d8b4:	ee76 6a68 	vsub.f32	s13, s12, s17
 802d8b8:	ee37 7ac8 	vsub.f32	s14, s15, s16
 802d8bc:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802d8c0:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 802d8c4:	ee16 2a90 	vmov	r2, s13
 802d8c8:	3b01      	subs	r3, #1
 802d8ca:	930a      	str	r3, [sp, #40]	@ 0x28
 802d8cc:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 802d8ce:	fb92 f8f3 	sdiv	r8, r2, r3
 802d8d2:	ee17 2a10 	vmov	r2, s14
 802d8d6:	eeb0 7a48 	vmov.f32	s14, s16
 802d8da:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 802d8de:	ee17 ba10 	vmov	fp, s14
 802d8e2:	eeb0 7a68 	vmov.f32	s14, s17
 802d8e6:	fb92 f3f3 	sdiv	r3, r2, r3
 802d8ea:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 802d8ee:	932a      	str	r3, [sp, #168]	@ 0xa8
 802d8f0:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 802d8f2:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 802d8f4:	ee17 9a10 	vmov	r9, s14
 802d8f8:	eeb0 8a67 	vmov.f32	s16, s15
 802d8fc:	eef0 8a46 	vmov.f32	s17, s12
 802d900:	bf18      	it	ne
 802d902:	461a      	movne	r2, r3
 802d904:	e797      	b.n	802d836 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x62>
 802d906:	b013      	add	sp, #76	@ 0x4c
 802d908:	ecbd 8b0a 	vpop	{d8-d12}
 802d90c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802d910:	f8dd e018 	ldr.w	lr, [sp, #24]
 802d914:	1e51      	subs	r1, r2, #1
 802d916:	fb08 9301 	mla	r3, r8, r1, r9
 802d91a:	141b      	asrs	r3, r3, #16
 802d91c:	9106      	str	r1, [sp, #24]
 802d91e:	f100 80aa 	bmi.w	802da76 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 802d922:	42ab      	cmp	r3, r5
 802d924:	f280 80a7 	bge.w	802da76 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 802d928:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 802d92a:	fb03 b301 	mla	r3, r3, r1, fp
 802d92e:	141b      	asrs	r3, r3, #16
 802d930:	f100 80a1 	bmi.w	802da76 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 802d934:	3f01      	subs	r7, #1
 802d936:	42bb      	cmp	r3, r7
 802d938:	f280 809d 	bge.w	802da76 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 802d93c:	2a00      	cmp	r2, #0
 802d93e:	ddaa      	ble.n	802d896 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xc2>
 802d940:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 802d944:	eb0a 0302 	add.w	r3, sl, r2
 802d948:	9308      	str	r3, [sp, #32]
 802d94a:	f10a 0a03 	add.w	sl, sl, #3
 802d94e:	f8cd 80a4 	str.w	r8, [sp, #164]	@ 0xa4
 802d952:	e062      	b.n	802da1a <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x246>
 802d954:	784c      	ldrb	r4, [r1, #1]
 802d956:	180d      	adds	r5, r1, r0
 802d958:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 802d95c:	4434      	add	r4, r6
 802d95e:	2a00      	cmp	r2, #0
 802d960:	d07c      	beq.n	802da5c <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 802d962:	5c08      	ldrb	r0, [r1, r0]
 802d964:	786f      	ldrb	r7, [r5, #1]
 802d966:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 802d96a:	1981      	adds	r1, r0, r6
 802d96c:	4608      	mov	r0, r1
 802d96e:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 802d972:	9106      	str	r1, [sp, #24]
 802d974:	4437      	add	r7, r6
 802d976:	b29b      	uxth	r3, r3
 802d978:	b292      	uxth	r2, r2
 802d97a:	fb03 f502 	mul.w	r5, r3, r2
 802d97e:	011b      	lsls	r3, r3, #4
 802d980:	f894 e000 	ldrb.w	lr, [r4]
 802d984:	1b59      	subs	r1, r3, r5
 802d986:	b289      	uxth	r1, r1
 802d988:	fb01 fe0e 	mul.w	lr, r1, lr
 802d98c:	ebc5 1202 	rsb	r2, r5, r2, lsl #4
 802d990:	b292      	uxth	r2, r2
 802d992:	f5c3 7380 	rsb	r3, r3, #256	@ 0x100
 802d996:	f816 6008 	ldrb.w	r6, [r6, r8]
 802d99a:	1a9b      	subs	r3, r3, r2
 802d99c:	b29b      	uxth	r3, r3
 802d99e:	fb03 e606 	mla	r6, r3, r6, lr
 802d9a2:	f890 e000 	ldrb.w	lr, [r0]
 802d9a6:	f897 8000 	ldrb.w	r8, [r7]
 802d9aa:	fb02 660e 	mla	r6, r2, lr, r6
 802d9ae:	fb05 6808 	mla	r8, r5, r8, r6
 802d9b2:	ea4f 2828 	mov.w	r8, r8, asr #8
 802d9b6:	f80a 8c03 	strb.w	r8, [sl, #-3]
 802d9ba:	f894 8001 	ldrb.w	r8, [r4, #1]
 802d9be:	9829      	ldr	r0, [sp, #164]	@ 0xa4
 802d9c0:	fb01 f608 	mul.w	r6, r1, r8
 802d9c4:	f89c e001 	ldrb.w	lr, [ip, #1]
 802d9c8:	4481      	add	r9, r0
 802d9ca:	982a      	ldr	r0, [sp, #168]	@ 0xa8
 802d9cc:	fb03 680e 	mla	r8, r3, lr, r6
 802d9d0:	4483      	add	fp, r0
 802d9d2:	9806      	ldr	r0, [sp, #24]
 802d9d4:	787e      	ldrb	r6, [r7, #1]
 802d9d6:	f890 e001 	ldrb.w	lr, [r0, #1]
 802d9da:	fb02 8e0e 	mla	lr, r2, lr, r8
 802d9de:	fb05 ee06 	mla	lr, r5, r6, lr
 802d9e2:	ea4f 2e2e 	mov.w	lr, lr, asr #8
 802d9e6:	f80a ec02 	strb.w	lr, [sl, #-2]
 802d9ea:	78a4      	ldrb	r4, [r4, #2]
 802d9ec:	f89c 6002 	ldrb.w	r6, [ip, #2]
 802d9f0:	fb01 f104 	mul.w	r1, r1, r4
 802d9f4:	fb03 1106 	mla	r1, r3, r6, r1
 802d9f8:	7883      	ldrb	r3, [r0, #2]
 802d9fa:	78b8      	ldrb	r0, [r7, #2]
 802d9fc:	fb02 1103 	mla	r1, r2, r3, r1
 802da00:	fb05 1500 	mla	r5, r5, r0, r1
 802da04:	9b08      	ldr	r3, [sp, #32]
 802da06:	122d      	asrs	r5, r5, #8
 802da08:	4553      	cmp	r3, sl
 802da0a:	f80a 5c01 	strb.w	r5, [sl, #-1]
 802da0e:	d030      	beq.n	802da72 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29e>
 802da10:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
 802da12:	f10a 0a03 	add.w	sl, sl, #3
 802da16:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
 802da1a:	ea4f 4329 	mov.w	r3, r9, asr #16
 802da1e:	ea4f 412b 	mov.w	r1, fp, asr #16
 802da22:	fb00 3101 	mla	r1, r0, r1, r3
 802da26:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 802da28:	9e07      	ldr	r6, [sp, #28]
 802da2a:	f812 8001 	ldrb.w	r8, [r2, r1]
 802da2e:	f3c9 3303 	ubfx	r3, r9, #12, #4
 802da32:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 802da36:	4411      	add	r1, r2
 802da38:	eb06 0c08 	add.w	ip, r6, r8
 802da3c:	f3cb 3203 	ubfx	r2, fp, #12, #4
 802da40:	2b00      	cmp	r3, #0
 802da42:	d187      	bne.n	802d954 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x180>
 802da44:	b17a      	cbz	r2, 802da66 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 802da46:	5c08      	ldrb	r0, [r1, r0]
 802da48:	9907      	ldr	r1, [sp, #28]
 802da4a:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 802da4e:	1841      	adds	r1, r0, r1
 802da50:	4667      	mov	r7, ip
 802da52:	9106      	str	r1, [sp, #24]
 802da54:	4664      	mov	r4, ip
 802da56:	9e07      	ldr	r6, [sp, #28]
 802da58:	4608      	mov	r0, r1
 802da5a:	e78c      	b.n	802d976 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
 802da5c:	4667      	mov	r7, ip
 802da5e:	f8cd c018 	str.w	ip, [sp, #24]
 802da62:	4660      	mov	r0, ip
 802da64:	e787      	b.n	802d976 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
 802da66:	4667      	mov	r7, ip
 802da68:	f8cd c018 	str.w	ip, [sp, #24]
 802da6c:	4664      	mov	r4, ip
 802da6e:	4660      	mov	r0, ip
 802da70:	e781      	b.n	802d976 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
 802da72:	469a      	mov	sl, r3
 802da74:	e70f      	b.n	802d896 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xc2>
 802da76:	2a00      	cmp	r2, #0
 802da78:	f77f af0d 	ble.w	802d896 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xc2>
 802da7c:	9d06      	ldr	r5, [sp, #24]
 802da7e:	ea4f 4329 	mov.w	r3, r9, asr #16
 802da82:	ea4f 412b 	mov.w	r1, fp, asr #16
 802da86:	4657      	mov	r7, sl
 802da88:	f8cd a03c 	str.w	sl, [sp, #60]	@ 0x3c
 802da8c:	9c2e      	ldr	r4, [sp, #184]	@ 0xb8
 802da8e:	f8dd a0a8 	ldr.w	sl, [sp, #168]	@ 0xa8
 802da92:	2b00      	cmp	r3, #0
 802da94:	f3c9 3003 	ubfx	r0, r9, #12, #4
 802da98:	f3cb 3203 	ubfx	r2, fp, #12, #4
 802da9c:	db31      	blt.n	802db02 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32e>
 802da9e:	f106 3cff 	add.w	ip, r6, #4294967295
 802daa2:	4563      	cmp	r3, ip
 802daa4:	da2d      	bge.n	802db02 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32e>
 802daa6:	2900      	cmp	r1, #0
 802daa8:	db2b      	blt.n	802db02 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32e>
 802daaa:	f10e 3cff 	add.w	ip, lr, #4294967295
 802daae:	4561      	cmp	r1, ip
 802dab0:	da27      	bge.n	802db02 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32e>
 802dab2:	fa0f fc86 	sxth.w	ip, r6
 802dab6:	fb01 330c 	mla	r3, r1, ip, r3
 802daba:	9e07      	ldr	r6, [sp, #28]
 802dabc:	9909      	ldr	r1, [sp, #36]	@ 0x24
 802dabe:	f811 e003 	ldrb.w	lr, [r1, r3]
 802dac2:	440b      	add	r3, r1
 802dac4:	4631      	mov	r1, r6
 802dac6:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 802daca:	4471      	add	r1, lr
 802dacc:	910e      	str	r1, [sp, #56]	@ 0x38
 802dace:	2800      	cmp	r0, #0
 802dad0:	d04f      	beq.n	802db72 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x39e>
 802dad2:	7859      	ldrb	r1, [r3, #1]
 802dad4:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 802dad8:	1871      	adds	r1, r6, r1
 802dada:	9108      	str	r1, [sp, #32]
 802dadc:	2a00      	cmp	r2, #0
 802dade:	f000 80b2 	beq.w	802dc46 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x472>
 802dae2:	eb03 010c 	add.w	r1, r3, ip
 802dae6:	f813 600c 	ldrb.w	r6, [r3, ip]
 802daea:	7849      	ldrb	r1, [r1, #1]
 802daec:	9b07      	ldr	r3, [sp, #28]
 802daee:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 802daf2:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 802daf6:	1859      	adds	r1, r3, r1
 802daf8:	18f3      	adds	r3, r6, r3
 802dafa:	910c      	str	r1, [sp, #48]	@ 0x30
 802dafc:	930d      	str	r3, [sp, #52]	@ 0x34
 802dafe:	9e08      	ldr	r6, [sp, #32]
 802db00:	e03d      	b.n	802db7e <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
 802db02:	f113 0c01 	adds.w	ip, r3, #1
 802db06:	d406      	bmi.n	802db16 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 802db08:	45b4      	cmp	ip, r6
 802db0a:	dc04      	bgt.n	802db16 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 802db0c:	f111 0c01 	adds.w	ip, r1, #1
 802db10:	d401      	bmi.n	802db16 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 802db12:	45f4      	cmp	ip, lr
 802db14:	dd1d      	ble.n	802db52 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 802db16:	2d00      	cmp	r5, #0
 802db18:	f107 0703 	add.w	r7, r7, #3
 802db1c:	44c1      	add	r9, r8
 802db1e:	44d3      	add	fp, sl
 802db20:	dd07      	ble.n	802db32 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35e>
 802db22:	e9d4 6e02 	ldrd	r6, lr, [r4, #8]
 802db26:	3d01      	subs	r5, #1
 802db28:	ea4f 4329 	mov.w	r3, r9, asr #16
 802db2c:	ea4f 412b 	mov.w	r1, fp, asr #16
 802db30:	e7af      	b.n	802da92 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2be>
 802db32:	9b06      	ldr	r3, [sp, #24]
 802db34:	f8dd a03c 	ldr.w	sl, [sp, #60]	@ 0x3c
 802db38:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 802db3c:	3301      	adds	r3, #1
 802db3e:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 802db42:	449a      	add	sl, r3
 802db44:	e6a7      	b.n	802d896 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xc2>
 802db46:	3a01      	subs	r2, #1
 802db48:	f8dd e018 	ldr.w	lr, [sp, #24]
 802db4c:	4615      	mov	r5, r2
 802db4e:	9206      	str	r2, [sp, #24]
 802db50:	e799      	b.n	802da86 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b2>
 802db52:	fa0f fe8e 	sxth.w	lr, lr
 802db56:	b236      	sxth	r6, r6
 802db58:	e9cd 0204 	strd	r0, r2, [sp, #16]
 802db5c:	e9cd 3102 	strd	r3, r1, [sp, #8]
 802db60:	e9cd 6e00 	strd	r6, lr, [sp]
 802db64:	9b07      	ldr	r3, [sp, #28]
 802db66:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 802db68:	4639      	mov	r1, r7
 802db6a:	9811      	ldr	r0, [sp, #68]	@ 0x44
 802db6c:	f7ff fd58 	bl	802d620 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh>
 802db70:	e7d1      	b.n	802db16 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 802db72:	2a00      	cmp	r2, #0
 802db74:	d15b      	bne.n	802dc2e <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x45a>
 802db76:	460e      	mov	r6, r1
 802db78:	e9cd 110c 	strd	r1, r1, [sp, #48]	@ 0x30
 802db7c:	9108      	str	r1, [sp, #32]
 802db7e:	b283      	uxth	r3, r0
 802db80:	b292      	uxth	r2, r2
 802db82:	fb03 f002 	mul.w	r0, r3, r2
 802db86:	011b      	lsls	r3, r3, #4
 802db88:	f896 c000 	ldrb.w	ip, [r6]
 802db8c:	1a19      	subs	r1, r3, r0
 802db8e:	b289      	uxth	r1, r1
 802db90:	fb01 fc0c 	mul.w	ip, r1, ip
 802db94:	9e07      	ldr	r6, [sp, #28]
 802db96:	ebc0 1202 	rsb	r2, r0, r2, lsl #4
 802db9a:	b292      	uxth	r2, r2
 802db9c:	f5c3 7380 	rsb	r3, r3, #256	@ 0x100
 802dba0:	f816 e00e 	ldrb.w	lr, [r6, lr]
 802dba4:	1a9b      	subs	r3, r3, r2
 802dba6:	b29b      	uxth	r3, r3
 802dba8:	fb03 cc0e 	mla	ip, r3, lr, ip
 802dbac:	9e0d      	ldr	r6, [sp, #52]	@ 0x34
 802dbae:	f8cd c040 	str.w	ip, [sp, #64]	@ 0x40
 802dbb2:	f896 e000 	ldrb.w	lr, [r6]
 802dbb6:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 802dbb8:	f896 c000 	ldrb.w	ip, [r6]
 802dbbc:	9e10      	ldr	r6, [sp, #64]	@ 0x40
 802dbbe:	fb02 6e0e 	mla	lr, r2, lr, r6
 802dbc2:	fb00 ec0c 	mla	ip, r0, ip, lr
 802dbc6:	9e08      	ldr	r6, [sp, #32]
 802dbc8:	ea4f 2c2c 	mov.w	ip, ip, asr #8
 802dbcc:	f887 c000 	strb.w	ip, [r7]
 802dbd0:	f896 c001 	ldrb.w	ip, [r6, #1]
 802dbd4:	9e0e      	ldr	r6, [sp, #56]	@ 0x38
 802dbd6:	fb01 fc0c 	mul.w	ip, r1, ip
 802dbda:	f896 e001 	ldrb.w	lr, [r6, #1]
 802dbde:	9e0d      	ldr	r6, [sp, #52]	@ 0x34
 802dbe0:	fb03 ce0e 	mla	lr, r3, lr, ip
 802dbe4:	f896 c001 	ldrb.w	ip, [r6, #1]
 802dbe8:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 802dbea:	f8cd c040 	str.w	ip, [sp, #64]	@ 0x40
 802dbee:	f896 c001 	ldrb.w	ip, [r6, #1]
 802dbf2:	9e10      	ldr	r6, [sp, #64]	@ 0x40
 802dbf4:	fb02 ee06 	mla	lr, r2, r6, lr
 802dbf8:	fb00 ec0c 	mla	ip, r0, ip, lr
 802dbfc:	9e08      	ldr	r6, [sp, #32]
 802dbfe:	ea4f 2c2c 	mov.w	ip, ip, asr #8
 802dc02:	f887 c001 	strb.w	ip, [r7, #1]
 802dc06:	f896 c002 	ldrb.w	ip, [r6, #2]
 802dc0a:	9e0e      	ldr	r6, [sp, #56]	@ 0x38
 802dc0c:	fb01 f10c 	mul.w	r1, r1, ip
 802dc10:	f896 e002 	ldrb.w	lr, [r6, #2]
 802dc14:	fb03 110e 	mla	r1, r3, lr, r1
 802dc18:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 802dc1a:	789e      	ldrb	r6, [r3, #2]
 802dc1c:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 802dc1e:	fb02 1206 	mla	r2, r2, r6, r1
 802dc22:	789b      	ldrb	r3, [r3, #2]
 802dc24:	fb00 2303 	mla	r3, r0, r3, r2
 802dc28:	121b      	asrs	r3, r3, #8
 802dc2a:	70bb      	strb	r3, [r7, #2]
 802dc2c:	e773      	b.n	802db16 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 802dc2e:	4631      	mov	r1, r6
 802dc30:	f813 600c 	ldrb.w	r6, [r3, ip]
 802dc34:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 802dc36:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 802dc3a:	1871      	adds	r1, r6, r1
 802dc3c:	930c      	str	r3, [sp, #48]	@ 0x30
 802dc3e:	910d      	str	r1, [sp, #52]	@ 0x34
 802dc40:	9308      	str	r3, [sp, #32]
 802dc42:	461e      	mov	r6, r3
 802dc44:	e79b      	b.n	802db7e <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
 802dc46:	9e0e      	ldr	r6, [sp, #56]	@ 0x38
 802dc48:	e9cd 660c 	strd	r6, r6, [sp, #48]	@ 0x30
 802dc4c:	460e      	mov	r6, r1
 802dc4e:	e796      	b.n	802db7e <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
 802dc50:	f43f ae21 	beq.w	802d896 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xc2>
 802dc54:	1e45      	subs	r5, r0, #1
 802dc56:	e65d      	b.n	802d914 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x140>

0802dc58 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh>:
 802dc58:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802dc5c:	b087      	sub	sp, #28
 802dc5e:	f9bd c040 	ldrsh.w	ip, [sp, #64]	@ 0x40
 802dc62:	e9dd 0612 	ldrd	r0, r6, [sp, #72]	@ 0x48
 802dc66:	fb06 080c 	mla	r8, r6, ip, r0
 802dc6a:	2e00      	cmp	r6, #0
 802dc6c:	4696      	mov	lr, r2
 802dc6e:	eb02 0a08 	add.w	sl, r2, r8
 802dc72:	f106 0b01 	add.w	fp, r6, #1
 802dc76:	f9bd 2044 	ldrsh.w	r2, [sp, #68]	@ 0x44
 802dc7a:	f89d 7050 	ldrb.w	r7, [sp, #80]	@ 0x50
 802dc7e:	f89d 5054 	ldrb.w	r5, [sp, #84]	@ 0x54
 802dc82:	f89d 4058 	ldrb.w	r4, [sp, #88]	@ 0x58
 802dc86:	db02      	blt.n	802dc8e <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x36>
 802dc88:	42b2      	cmp	r2, r6
 802dc8a:	f300 80f1 	bgt.w	802de70 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x218>
 802dc8e:	2600      	movs	r6, #0
 802dc90:	46b1      	mov	r9, r6
 802dc92:	46b0      	mov	r8, r6
 802dc94:	46b6      	mov	lr, r6
 802dc96:	f1bb 0f00 	cmp.w	fp, #0
 802dc9a:	db02      	blt.n	802dca2 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x4a>
 802dc9c:	455a      	cmp	r2, fp
 802dc9e:	f300 8101 	bgt.w	802dea4 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x24c>
 802dca2:	f04f 0c00 	mov.w	ip, #0
 802dca6:	e9cd cc02 	strd	ip, ip, [sp, #8]
 802dcaa:	f8cd c004 	str.w	ip, [sp, #4]
 802dcae:	2f0f      	cmp	r7, #15
 802dcb0:	f200 813a 	bhi.w	802df28 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x2d0>
 802dcb4:	2d0f      	cmp	r5, #15
 802dcb6:	f200 8137 	bhi.w	802df28 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x2d0>
 802dcba:	b2a8      	uxth	r0, r5
 802dcbc:	b2bb      	uxth	r3, r7
 802dcbe:	fb00 f503 	mul.w	r5, r0, r3
 802dcc2:	9a01      	ldr	r2, [sp, #4]
 802dcc4:	ebc5 1000 	rsb	r0, r5, r0, lsl #4
 802dcc8:	b280      	uxth	r0, r0
 802dcca:	fb00 fa02 	mul.w	sl, r0, r2
 802dcce:	fb05 fb0c 	mul.w	fp, r5, ip
 802dcd2:	011b      	lsls	r3, r3, #4
 802dcd4:	1b5f      	subs	r7, r3, r5
 802dcd6:	b2bf      	uxth	r7, r7
 802dcd8:	fb07 f206 	mul.w	r2, r7, r6
 802dcdc:	f5c3 7380 	rsb	r3, r3, #256	@ 0x100
 802dce0:	1a1b      	subs	r3, r3, r0
 802dce2:	b29b      	uxth	r3, r3
 802dce4:	fb03 2209 	mla	r2, r3, r9, r2
 802dce8:	4452      	add	r2, sl
 802dcea:	445a      	add	r2, fp
 802dcec:	f3c2 2207 	ubfx	r2, r2, #8, #8
 802dcf0:	2a00      	cmp	r2, #0
 802dcf2:	f000 80ba 	beq.w	802de6a <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x212>
 802dcf6:	b2a4      	uxth	r4, r4
 802dcf8:	fb02 f204 	mul.w	r2, r2, r4
 802dcfc:	f102 0a01 	add.w	sl, r2, #1
 802dd00:	eb0a 2212 	add.w	r2, sl, r2, lsr #8
 802dd04:	ea6f 2212 	mvn.w	r2, r2, lsr #8
 802dd08:	9205      	str	r2, [sp, #20]
 802dd0a:	f008 12ff 	and.w	r2, r8, #16711935	@ 0xff00ff
 802dd0e:	f408 487f 	and.w	r8, r8, #65280	@ 0xff00
 802dd12:	fb06 f202 	mul.w	r2, r6, r2
 802dd16:	fb06 f608 	mul.w	r6, r6, r8
 802dd1a:	f00e 1bff 	and.w	fp, lr, #16711935	@ 0xff00ff
 802dd1e:	f40e 4e7f 	and.w	lr, lr, #65280	@ 0xff00
 802dd22:	fb09 fb0b 	mul.w	fp, r9, fp
 802dd26:	fb09 fe0e 	mul.w	lr, r9, lr
 802dd2a:	f506 7980 	add.w	r9, r6, #256	@ 0x100
 802dd2e:	eb09 2616 	add.w	r6, r9, r6, lsr #8
 802dd32:	0a36      	lsrs	r6, r6, #8
 802dd34:	ea4f 2812 	mov.w	r8, r2, lsr #8
 802dd38:	f406 467f 	and.w	r6, r6, #65280	@ 0xff00
 802dd3c:	fb07 f606 	mul.w	r6, r7, r6
 802dd40:	9404      	str	r4, [sp, #16]
 802dd42:	f102 1201 	add.w	r2, r2, #65537	@ 0x10001
 802dd46:	9c03      	ldr	r4, [sp, #12]
 802dd48:	f008 18ff 	and.w	r8, r8, #16711935	@ 0xff00ff
 802dd4c:	4490      	add	r8, r2
 802dd4e:	ea4f 2818 	mov.w	r8, r8, lsr #8
 802dd52:	f004 12ff 	and.w	r2, r4, #16711935	@ 0xff00ff
 802dd56:	fb0c f202 	mul.w	r2, ip, r2
 802dd5a:	f404 497f 	and.w	r9, r4, #65280	@ 0xff00
 802dd5e:	ea4f 2a1b 	mov.w	sl, fp, lsr #8
 802dd62:	9c02      	ldr	r4, [sp, #8]
 802dd64:	f008 18ff 	and.w	r8, r8, #16711935	@ 0xff00ff
 802dd68:	fb0c fc09 	mul.w	ip, ip, r9
 802dd6c:	fb08 f807 	mul.w	r8, r8, r7
 802dd70:	f00a 1aff 	and.w	sl, sl, #16711935	@ 0xff00ff
 802dd74:	9603      	str	r6, [sp, #12]
 802dd76:	f50e 7980 	add.w	r9, lr, #256	@ 0x100
 802dd7a:	9e01      	ldr	r6, [sp, #4]
 802dd7c:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 802dd80:	44d3      	add	fp, sl
 802dd82:	eb09 2e1e 	add.w	lr, r9, lr, lsr #8
 802dd86:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 802dd8a:	f404 497f 	and.w	r9, r4, #65280	@ 0xff00
 802dd8e:	fb06 f707 	mul.w	r7, r6, r7
 802dd92:	fb06 f909 	mul.w	r9, r6, r9
 802dd96:	ea4f 2b1b 	mov.w	fp, fp, lsr #8
 802dd9a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802dd9e:	9e03      	ldr	r6, [sp, #12]
 802dda0:	f00b 1bff 	and.w	fp, fp, #16711935	@ 0xff00ff
 802dda4:	ea4f 2a12 	mov.w	sl, r2, lsr #8
 802dda8:	f40e 4e7f 	and.w	lr, lr, #65280	@ 0xff00
 802ddac:	fb0b 8803 	mla	r8, fp, r3, r8
 802ddb0:	fb03 660e 	mla	r6, r3, lr, r6
 802ddb4:	f102 1201 	add.w	r2, r2, #65537	@ 0x10001
 802ddb8:	f50c 7e80 	add.w	lr, ip, #256	@ 0x100
 802ddbc:	f00a 1aff 	and.w	sl, sl, #16711935	@ 0xff00ff
 802ddc0:	4492      	add	sl, r2
 802ddc2:	eb0e 2c1c 	add.w	ip, lr, ip, lsr #8
 802ddc6:	ea4f 2b1a 	mov.w	fp, sl, lsr #8
 802ddca:	ea4f 2e1c 	mov.w	lr, ip, lsr #8
 802ddce:	0a3a      	lsrs	r2, r7, #8
 802ddd0:	f00b 1bff 	and.w	fp, fp, #16711935	@ 0xff00ff
 802ddd4:	f40e 4e7f 	and.w	lr, lr, #65280	@ 0xff00
 802ddd8:	fb0b 8b05 	mla	fp, fp, r5, r8
 802dddc:	fb05 660e 	mla	r6, r5, lr, r6
 802dde0:	f002 18ff 	and.w	r8, r2, #16711935	@ 0xff00ff
 802dde4:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 802dde8:	f509 7580 	add.w	r5, r9, #256	@ 0x100
 802ddec:	44b8      	add	r8, r7
 802ddee:	eb05 2519 	add.w	r5, r5, r9, lsr #8
 802ddf2:	ea4f 2818 	mov.w	r8, r8, lsr #8
 802ddf6:	0a2d      	lsrs	r5, r5, #8
 802ddf8:	f008 18ff 	and.w	r8, r8, #16711935	@ 0xff00ff
 802ddfc:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
 802de00:	fb00 6505 	mla	r5, r0, r5, r6
 802de04:	fb08 b800 	mla	r8, r8, r0, fp
 802de08:	0a2d      	lsrs	r5, r5, #8
 802de0a:	ea4f 2018 	mov.w	r0, r8, lsr #8
 802de0e:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
 802de12:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 802de16:	4328      	orrs	r0, r5
 802de18:	784b      	ldrb	r3, [r1, #1]
 802de1a:	f89d 2014 	ldrb.w	r2, [sp, #20]
 802de1e:	9c04      	ldr	r4, [sp, #16]
 802de20:	788d      	ldrb	r5, [r1, #2]
 802de22:	fa5f fa80 	uxtb.w	sl, r0
 802de26:	fb13 f602 	smulbb	r6, r3, r2
 802de2a:	fb15 f502 	smulbb	r5, r5, r2
 802de2e:	fb1a fa04 	smulbb	sl, sl, r4
 802de32:	780f      	ldrb	r7, [r1, #0]
 802de34:	f3c0 2c07 	ubfx	ip, r0, #8, #8
 802de38:	0c00      	lsrs	r0, r0, #16
 802de3a:	fb0c 6304 	mla	r3, ip, r4, r6
 802de3e:	fb07 a202 	mla	r2, r7, r2, sl
 802de42:	fb00 5404 	mla	r4, r0, r4, r5
 802de46:	b29b      	uxth	r3, r3
 802de48:	b292      	uxth	r2, r2
 802de4a:	b2a4      	uxth	r4, r4
 802de4c:	1c56      	adds	r6, r2, #1
 802de4e:	1c5d      	adds	r5, r3, #1
 802de50:	1c60      	adds	r0, r4, #1
 802de52:	eb06 2212 	add.w	r2, r6, r2, lsr #8
 802de56:	eb05 2313 	add.w	r3, r5, r3, lsr #8
 802de5a:	eb00 2414 	add.w	r4, r0, r4, lsr #8
 802de5e:	1212      	asrs	r2, r2, #8
 802de60:	121b      	asrs	r3, r3, #8
 802de62:	1224      	asrs	r4, r4, #8
 802de64:	700a      	strb	r2, [r1, #0]
 802de66:	704b      	strb	r3, [r1, #1]
 802de68:	708c      	strb	r4, [r1, #2]
 802de6a:	b007      	add	sp, #28
 802de6c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802de70:	2800      	cmp	r0, #0
 802de72:	db01      	blt.n	802de78 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x220>
 802de74:	4584      	cmp	ip, r0
 802de76:	dc3d      	bgt.n	802def4 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x29c>
 802de78:	f04f 0900 	mov.w	r9, #0
 802de7c:	46ce      	mov	lr, r9
 802de7e:	1c46      	adds	r6, r0, #1
 802de80:	d42a      	bmi.n	802ded8 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x280>
 802de82:	45b4      	cmp	ip, r6
 802de84:	dd28      	ble.n	802ded8 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x280>
 802de86:	b137      	cbz	r7, 802de96 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x23e>
 802de88:	f89a 6001 	ldrb.w	r6, [sl, #1]
 802de8c:	f853 8026 	ldr.w	r8, [r3, r6, lsl #2]
 802de90:	ea4f 6618 	mov.w	r6, r8, lsr #24
 802de94:	e6ff      	b.n	802dc96 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x3e>
 802de96:	f1bb 0f00 	cmp.w	fp, #0
 802de9a:	db3e      	blt.n	802df1a <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x2c2>
 802de9c:	455a      	cmp	r2, fp
 802de9e:	dd3c      	ble.n	802df1a <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x2c2>
 802dea0:	463e      	mov	r6, r7
 802dea2:	46b8      	mov	r8, r7
 802dea4:	b1dd      	cbz	r5, 802dede <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x286>
 802dea6:	2800      	cmp	r0, #0
 802dea8:	db30      	blt.n	802df0c <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x2b4>
 802deaa:	4584      	cmp	ip, r0
 802deac:	dd2e      	ble.n	802df0c <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x2b4>
 802deae:	f81a 200c 	ldrb.w	r2, [sl, ip]
 802deb2:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 802deb6:	9202      	str	r2, [sp, #8]
 802deb8:	0e12      	lsrs	r2, r2, #24
 802deba:	9201      	str	r2, [sp, #4]
 802debc:	3001      	adds	r0, #1
 802debe:	d420      	bmi.n	802df02 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x2aa>
 802dec0:	4584      	cmp	ip, r0
 802dec2:	dd1e      	ble.n	802df02 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x2aa>
 802dec4:	b337      	cbz	r7, 802df14 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x2bc>
 802dec6:	44d4      	add	ip, sl
 802dec8:	f89c 2001 	ldrb.w	r2, [ip, #1]
 802decc:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 802ded0:	9303      	str	r3, [sp, #12]
 802ded2:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 802ded6:	e6ea      	b.n	802dcae <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x56>
 802ded8:	2600      	movs	r6, #0
 802deda:	46b0      	mov	r8, r6
 802dedc:	e6db      	b.n	802dc96 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x3e>
 802dede:	2f0f      	cmp	r7, #15
 802dee0:	d822      	bhi.n	802df28 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x2d0>
 802dee2:	b2bb      	uxth	r3, r7
 802dee4:	4628      	mov	r0, r5
 802dee6:	46ab      	mov	fp, r5
 802dee8:	46aa      	mov	sl, r5
 802deea:	e9cd 5502 	strd	r5, r5, [sp, #8]
 802deee:	46ac      	mov	ip, r5
 802def0:	9501      	str	r5, [sp, #4]
 802def2:	e6ee      	b.n	802dcd2 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x7a>
 802def4:	f81e 6008 	ldrb.w	r6, [lr, r8]
 802def8:	f853 e026 	ldr.w	lr, [r3, r6, lsl #2]
 802defc:	ea4f 691e 	mov.w	r9, lr, lsr #24
 802df00:	e7bd      	b.n	802de7e <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x226>
 802df02:	f04f 0c00 	mov.w	ip, #0
 802df06:	f8cd c00c 	str.w	ip, [sp, #12]
 802df0a:	e6d0      	b.n	802dcae <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x56>
 802df0c:	2200      	movs	r2, #0
 802df0e:	e9cd 2201 	strd	r2, r2, [sp, #4]
 802df12:	e7d3      	b.n	802debc <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x264>
 802df14:	9703      	str	r7, [sp, #12]
 802df16:	46bc      	mov	ip, r7
 802df18:	e6cc      	b.n	802dcb4 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x5c>
 802df1a:	46b8      	mov	r8, r7
 802df1c:	e9cd 7702 	strd	r7, r7, [sp, #8]
 802df20:	46bc      	mov	ip, r7
 802df22:	9701      	str	r7, [sp, #4]
 802df24:	463e      	mov	r6, r7
 802df26:	e6c5      	b.n	802dcb4 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x5c>
 802df28:	4b03      	ldr	r3, [pc, #12]	@ (802df38 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x2e0>)
 802df2a:	4a04      	ldr	r2, [pc, #16]	@ (802df3c <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x2e4>)
 802df2c:	f240 31ca 	movw	r1, #970	@ 0x3ca
 802df30:	4803      	ldr	r0, [pc, #12]	@ (802df40 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x2e8>)
 802df32:	f004 fc21 	bl	8032778 <__assert_func>
 802df36:	bf00      	nop
 802df38:	08036954 	.word	0x08036954
 802df3c:	08036fd0 	.word	0x08036fd0
 802df40:	08036adc 	.word	0x08036adc

0802df44 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 802df44:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802df48:	ed2d 8b08 	vpush	{d8-d11}
 802df4c:	b0a9      	sub	sp, #164	@ 0xa4
 802df4e:	9c3f      	ldr	r4, [sp, #252]	@ 0xfc
 802df50:	9022      	str	r0, [sp, #136]	@ 0x88
 802df52:	9114      	str	r1, [sp, #80]	@ 0x50
 802df54:	6860      	ldr	r0, [r4, #4]
 802df56:	9940      	ldr	r1, [sp, #256]	@ 0x100
 802df58:	9217      	str	r2, [sp, #92]	@ 0x5c
 802df5a:	9a41      	ldr	r2, [sp, #260]	@ 0x104
 802df5c:	eeb0 aa40 	vmov.f32	s20, s0
 802df60:	fb00 1b02 	mla	fp, r0, r2, r1
 802df64:	6821      	ldr	r1, [r4, #0]
 802df66:	eb0b 004b 	add.w	r0, fp, fp, lsl #1
 802df6a:	eb01 0800 	add.w	r8, r1, r0
 802df6e:	e9dd ab3b 	ldrd	sl, fp, [sp, #236]	@ 0xec
 802df72:	eef0 9a60 	vmov.f32	s19, s1
 802df76:	eeb0 9a41 	vmov.f32	s18, s2
 802df7a:	eef0 8a62 	vmov.f32	s17, s5
 802df7e:	eeb0 8a43 	vmov.f32	s16, s6
 802df82:	eef0 ba44 	vmov.f32	s23, s8
 802df86:	eeb0 ba64 	vmov.f32	s22, s9
 802df8a:	eef0 aa45 	vmov.f32	s21, s10
 802df8e:	46c1      	mov	r9, r8
 802df90:	465f      	mov	r7, fp
 802df92:	9a42      	ldr	r2, [sp, #264]	@ 0x108
 802df94:	9d42      	ldr	r5, [sp, #264]	@ 0x108
 802df96:	6852      	ldr	r2, [r2, #4]
 802df98:	f89d 410c 	ldrb.w	r4, [sp, #268]	@ 0x10c
 802df9c:	3204      	adds	r2, #4
 802df9e:	682d      	ldr	r5, [r5, #0]
 802dfa0:	920a      	str	r2, [sp, #40]	@ 0x28
 802dfa2:	b2a2      	uxth	r2, r4
 802dfa4:	9423      	str	r4, [sp, #140]	@ 0x8c
 802dfa6:	9511      	str	r5, [sp, #68]	@ 0x44
 802dfa8:	9216      	str	r2, [sp, #88]	@ 0x58
 802dfaa:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 802dfac:	2a00      	cmp	r2, #0
 802dfae:	dc02      	bgt.n	802dfb6 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 802dfb0:	9a17      	ldr	r2, [sp, #92]	@ 0x5c
 802dfb2:	2a00      	cmp	r2, #0
 802dfb4:	dd65      	ble.n	802e082 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 802dfb6:	9a42      	ldr	r2, [sp, #264]	@ 0x108
 802dfb8:	2b00      	cmp	r3, #0
 802dfba:	e9d2 6c02 	ldrd	r6, ip, [r2, #8]
 802dfbe:	b235      	sxth	r5, r6
 802dfc0:	fa0f f88c 	sxth.w	r8, ip
 802dfc4:	f340 838b 	ble.w	802e6de <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x79a>
 802dfc8:	1e6c      	subs	r4, r5, #1
 802dfca:	f108 3eff 	add.w	lr, r8, #4294967295
 802dfce:	f8cd c024 	str.w	ip, [sp, #36]	@ 0x24
 802dfd2:	e9dd cb3d 	ldrd	ip, fp, [sp, #244]	@ 0xf4
 802dfd6:	ea5f 422a 	movs.w	r2, sl, asr #16
 802dfda:	ea4f 4127 	mov.w	r1, r7, asr #16
 802dfde:	d405      	bmi.n	802dfec <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 802dfe0:	42a2      	cmp	r2, r4
 802dfe2:	da03      	bge.n	802dfec <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 802dfe4:	2900      	cmp	r1, #0
 802dfe6:	db01      	blt.n	802dfec <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 802dfe8:	4571      	cmp	r1, lr
 802dfea:	db4f      	blt.n	802e08c <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x148>
 802dfec:	1c50      	adds	r0, r2, #1
 802dfee:	d406      	bmi.n	802dffe <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xba>
 802dff0:	42a8      	cmp	r0, r5
 802dff2:	dc04      	bgt.n	802dffe <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xba>
 802dff4:	1c48      	adds	r0, r1, #1
 802dff6:	d402      	bmi.n	802dffe <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xba>
 802dff8:	4540      	cmp	r0, r8
 802dffa:	f340 834c 	ble.w	802e696 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x752>
 802dffe:	3b01      	subs	r3, #1
 802e000:	44e2      	add	sl, ip
 802e002:	445f      	add	r7, fp
 802e004:	f109 0903 	add.w	r9, r9, #3
 802e008:	d1e5      	bne.n	802dfd6 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 802e00a:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 802e00c:	2b00      	cmp	r3, #0
 802e00e:	dd38      	ble.n	802e082 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 802e010:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 802e014:	ee3a aa2b 	vadd.f32	s20, s20, s23
 802e018:	ee79 9a8b 	vadd.f32	s19, s19, s22
 802e01c:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 802e020:	ee39 9a2a 	vadd.f32	s18, s18, s21
 802e024:	ee29 6aa7 	vmul.f32	s12, s19, s15
 802e028:	ee69 7a27 	vmul.f32	s15, s18, s15
 802e02c:	ee76 6a68 	vsub.f32	s13, s12, s17
 802e030:	ee37 7ac8 	vsub.f32	s14, s15, s16
 802e034:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802e038:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 802e03c:	ee16 2a90 	vmov	r2, s13
 802e040:	3b01      	subs	r3, #1
 802e042:	9314      	str	r3, [sp, #80]	@ 0x50
 802e044:	9b3a      	ldr	r3, [sp, #232]	@ 0xe8
 802e046:	fb92 f3f3 	sdiv	r3, r2, r3
 802e04a:	ee17 2a10 	vmov	r2, s14
 802e04e:	eeb0 7a48 	vmov.f32	s14, s16
 802e052:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 802e056:	ee17 7a10 	vmov	r7, s14
 802e05a:	eeb0 7a68 	vmov.f32	s14, s17
 802e05e:	933d      	str	r3, [sp, #244]	@ 0xf4
 802e060:	9b3a      	ldr	r3, [sp, #232]	@ 0xe8
 802e062:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 802e066:	fb92 f3f3 	sdiv	r3, r2, r3
 802e06a:	9a17      	ldr	r2, [sp, #92]	@ 0x5c
 802e06c:	933e      	str	r3, [sp, #248]	@ 0xf8
 802e06e:	ee17 aa10 	vmov	sl, s14
 802e072:	9b3a      	ldr	r3, [sp, #232]	@ 0xe8
 802e074:	eeb0 8a67 	vmov.f32	s16, s15
 802e078:	eef0 8a46 	vmov.f32	s17, s12
 802e07c:	bf08      	it	eq
 802e07e:	4613      	moveq	r3, r2
 802e080:	e793      	b.n	802dfaa <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 802e082:	b029      	add	sp, #164	@ 0xa4
 802e084:	ecbd 8b08 	vpop	{d8-d11}
 802e088:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802e08c:	f8dd c024 	ldr.w	ip, [sp, #36]	@ 0x24
 802e090:	983d      	ldr	r0, [sp, #244]	@ 0xf4
 802e092:	1e59      	subs	r1, r3, #1
 802e094:	fb00 a201 	mla	r2, r0, r1, sl
 802e098:	1412      	asrs	r2, r2, #16
 802e09a:	9109      	str	r1, [sp, #36]	@ 0x24
 802e09c:	f100 8168 	bmi.w	802e370 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42c>
 802e0a0:	42a2      	cmp	r2, r4
 802e0a2:	f280 8165 	bge.w	802e370 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42c>
 802e0a6:	9a3e      	ldr	r2, [sp, #248]	@ 0xf8
 802e0a8:	fb02 7201 	mla	r2, r2, r1, r7
 802e0ac:	1412      	asrs	r2, r2, #16
 802e0ae:	f100 815f 	bmi.w	802e370 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42c>
 802e0b2:	f108 31ff 	add.w	r1, r8, #4294967295
 802e0b6:	428a      	cmp	r2, r1
 802e0b8:	f280 815a 	bge.w	802e370 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42c>
 802e0bc:	2b00      	cmp	r3, #0
 802e0be:	dda4      	ble.n	802e00a <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xc6>
 802e0c0:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 802e0c4:	444b      	add	r3, r9
 802e0c6:	9310      	str	r3, [sp, #64]	@ 0x40
 802e0c8:	f109 0303 	add.w	r3, r9, #3
 802e0cc:	9309      	str	r3, [sp, #36]	@ 0x24
 802e0ce:	46d1      	mov	r9, sl
 802e0d0:	973c      	str	r7, [sp, #240]	@ 0xf0
 802e0d2:	462e      	mov	r6, r5
 802e0d4:	463b      	mov	r3, r7
 802e0d6:	e12b      	b.n	802e330 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 802e0d8:	785f      	ldrb	r7, [r3, #1]
 802e0da:	f854 7027 	ldr.w	r7, [r4, r7, lsl #2]
 802e0de:	9712      	str	r7, [sp, #72]	@ 0x48
 802e0e0:	0e3f      	lsrs	r7, r7, #24
 802e0e2:	970b      	str	r7, [sp, #44]	@ 0x2c
 802e0e4:	b16a      	cbz	r2, 802e102 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1be>
 802e0e6:	199f      	adds	r7, r3, r6
 802e0e8:	5d9b      	ldrb	r3, [r3, r6]
 802e0ea:	4626      	mov	r6, r4
 802e0ec:	787f      	ldrb	r7, [r7, #1]
 802e0ee:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 802e0f2:	f854 4027 	ldr.w	r4, [r4, r7, lsl #2]
 802e0f6:	9313      	str	r3, [sp, #76]	@ 0x4c
 802e0f8:	9415      	str	r4, [sp, #84]	@ 0x54
 802e0fa:	0e1b      	lsrs	r3, r3, #24
 802e0fc:	0e24      	lsrs	r4, r4, #24
 802e0fe:	940d      	str	r4, [sp, #52]	@ 0x34
 802e100:	930c      	str	r3, [sp, #48]	@ 0x30
 802e102:	fa1f fc81 	uxth.w	ip, r1
 802e106:	b292      	uxth	r2, r2
 802e108:	fb0c f602 	mul.w	r6, ip, r2
 802e10c:	ea4f 1c0c 	mov.w	ip, ip, lsl #4
 802e110:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 802e112:	ebac 0706 	sub.w	r7, ip, r6
 802e116:	b2bf      	uxth	r7, r7
 802e118:	fb07 f103 	mul.w	r1, r7, r3
 802e11c:	ebc6 1202 	rsb	r2, r6, r2, lsl #4
 802e120:	b292      	uxth	r2, r2
 802e122:	f5cc 7380 	rsb	r3, ip, #256	@ 0x100
 802e126:	1a9b      	subs	r3, r3, r2
 802e128:	b29b      	uxth	r3, r3
 802e12a:	fb03 1100 	mla	r1, r3, r0, r1
 802e12e:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 802e130:	fb02 1104 	mla	r1, r2, r4, r1
 802e134:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 802e136:	fb06 1104 	mla	r1, r6, r4, r1
 802e13a:	f3c1 2107 	ubfx	r1, r1, #8, #8
 802e13e:	2900      	cmp	r1, #0
 802e140:	f000 80e5 	beq.w	802e30e <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ca>
 802e144:	f005 14ff 	and.w	r4, r5, #16711935	@ 0xff00ff
 802e148:	28ff      	cmp	r0, #255	@ 0xff
 802e14a:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
 802e14e:	940e      	str	r4, [sp, #56]	@ 0x38
 802e150:	950f      	str	r5, [sp, #60]	@ 0x3c
 802e152:	d01d      	beq.n	802e190 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24c>
 802e154:	fb04 fe00 	mul.w	lr, r4, r0
 802e158:	fb05 f800 	mul.w	r8, r5, r0
 802e15c:	ea4f 251e 	mov.w	r5, lr, lsr #8
 802e160:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 802e164:	f10e 1e01 	add.w	lr, lr, #65537	@ 0x10001
 802e168:	f508 7080 	add.w	r0, r8, #256	@ 0x100
 802e16c:	44ae      	add	lr, r5
 802e16e:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 802e172:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802e176:	0a00      	lsrs	r0, r0, #8
 802e178:	f400 407f 	and.w	r0, r0, #65280	@ 0xff00
 802e17c:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 802e180:	ea4e 0e00 	orr.w	lr, lr, r0
 802e184:	f00e 10ff 	and.w	r0, lr, #16711935	@ 0xff00ff
 802e188:	900e      	str	r0, [sp, #56]	@ 0x38
 802e18a:	f40e 407f 	and.w	r0, lr, #65280	@ 0xff00
 802e18e:	900f      	str	r0, [sp, #60]	@ 0x3c
 802e190:	9812      	ldr	r0, [sp, #72]	@ 0x48
 802e192:	f000 1eff 	and.w	lr, r0, #16711935	@ 0xff00ff
 802e196:	f400 487f 	and.w	r8, r0, #65280	@ 0xff00
 802e19a:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 802e19c:	28ff      	cmp	r0, #255	@ 0xff
 802e19e:	d01c      	beq.n	802e1da <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
 802e1a0:	fb0e fe00 	mul.w	lr, lr, r0
 802e1a4:	fb08 f800 	mul.w	r8, r8, r0
 802e1a8:	ea4f 251e 	mov.w	r5, lr, lsr #8
 802e1ac:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 802e1b0:	f10e 1e01 	add.w	lr, lr, #65537	@ 0x10001
 802e1b4:	f508 7080 	add.w	r0, r8, #256	@ 0x100
 802e1b8:	44ae      	add	lr, r5
 802e1ba:	eb00 2818 	add.w	r8, r0, r8, lsr #8
 802e1be:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802e1c2:	ea4f 2818 	mov.w	r8, r8, lsr #8
 802e1c6:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 802e1ca:	f408 487f 	and.w	r8, r8, #65280	@ 0xff00
 802e1ce:	ea4e 0808 	orr.w	r8, lr, r8
 802e1d2:	f008 1eff 	and.w	lr, r8, #16711935	@ 0xff00ff
 802e1d6:	f408 487f 	and.w	r8, r8, #65280	@ 0xff00
 802e1da:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 802e1dc:	f000 1cff 	and.w	ip, r0, #16711935	@ 0xff00ff
 802e1e0:	f400 4a7f 	and.w	sl, r0, #65280	@ 0xff00
 802e1e4:	980c      	ldr	r0, [sp, #48]	@ 0x30
 802e1e6:	28ff      	cmp	r0, #255	@ 0xff
 802e1e8:	d01c      	beq.n	802e224 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 802e1ea:	fb0c fc00 	mul.w	ip, ip, r0
 802e1ee:	fb0a fa00 	mul.w	sl, sl, r0
 802e1f2:	ea4f 251c 	mov.w	r5, ip, lsr #8
 802e1f6:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 802e1fa:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 802e1fe:	f50a 7080 	add.w	r0, sl, #256	@ 0x100
 802e202:	44ac      	add	ip, r5
 802e204:	eb00 2a1a 	add.w	sl, r0, sl, lsr #8
 802e208:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802e20c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802e210:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 802e214:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 802e218:	ea4c 0a0a 	orr.w	sl, ip, sl
 802e21c:	f00a 1cff 	and.w	ip, sl, #16711935	@ 0xff00ff
 802e220:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 802e224:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 802e226:	f004 10ff 	and.w	r0, r4, #16711935	@ 0xff00ff
 802e22a:	f404 4b7f 	and.w	fp, r4, #65280	@ 0xff00
 802e22e:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 802e230:	2cff      	cmp	r4, #255	@ 0xff
 802e232:	d019      	beq.n	802e268 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>
 802e234:	fb00 f004 	mul.w	r0, r0, r4
 802e238:	fb0b fb04 	mul.w	fp, fp, r4
 802e23c:	0a05      	lsrs	r5, r0, #8
 802e23e:	f005 14ff 	and.w	r4, r5, #16711935	@ 0xff00ff
 802e242:	f100 1001 	add.w	r0, r0, #65537	@ 0x10001
 802e246:	f50b 7580 	add.w	r5, fp, #256	@ 0x100
 802e24a:	eb05 251b 	add.w	r5, r5, fp, lsr #8
 802e24e:	4420      	add	r0, r4
 802e250:	0a00      	lsrs	r0, r0, #8
 802e252:	0a2d      	lsrs	r5, r5, #8
 802e254:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 802e258:	f405 4b7f 	and.w	fp, r5, #65280	@ 0xff00
 802e25c:	ea40 0b0b 	orr.w	fp, r0, fp
 802e260:	f00b 10ff 	and.w	r0, fp, #16711935	@ 0xff00ff
 802e264:	f40b 4b7f 	and.w	fp, fp, #65280	@ 0xff00
 802e268:	9c16      	ldr	r4, [sp, #88]	@ 0x58
 802e26a:	fb0e fe07 	mul.w	lr, lr, r7
 802e26e:	fb01 f104 	mul.w	r1, r1, r4
 802e272:	1c4d      	adds	r5, r1, #1
 802e274:	eb05 2111 	add.w	r1, r5, r1, lsr #8
 802e278:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 802e27c:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 802e27e:	fb08 f707 	mul.w	r7, r8, r7
 802e282:	fb05 ee03 	mla	lr, r5, r3, lr
 802e286:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 802e288:	fb0c ee02 	mla	lr, ip, r2, lr
 802e28c:	fb05 7703 	mla	r7, r5, r3, r7
 802e290:	fb0a 7702 	mla	r7, sl, r2, r7
 802e294:	fb00 ee06 	mla	lr, r0, r6, lr
 802e298:	fb0b 7706 	mla	r7, fp, r6, r7
 802e29c:	9809      	ldr	r0, [sp, #36]	@ 0x24
 802e29e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802e2a2:	0a3f      	lsrs	r7, r7, #8
 802e2a4:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 802e2a8:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 802e2ac:	ea4e 0307 	orr.w	r3, lr, r7
 802e2b0:	f810 6c01 	ldrb.w	r6, [r0, #-1]
 802e2b4:	f810 7c02 	ldrb.w	r7, [r0, #-2]
 802e2b8:	b2c9      	uxtb	r1, r1
 802e2ba:	fa5f fc83 	uxtb.w	ip, r3
 802e2be:	fb16 f601 	smulbb	r6, r6, r1
 802e2c2:	fb17 f701 	smulbb	r7, r7, r1
 802e2c6:	fb1c fc04 	smulbb	ip, ip, r4
 802e2ca:	f810 0c03 	ldrb.w	r0, [r0, #-3]
 802e2ce:	f3c3 2207 	ubfx	r2, r3, #8, #8
 802e2d2:	0c1b      	lsrs	r3, r3, #16
 802e2d4:	fb00 c101 	mla	r1, r0, r1, ip
 802e2d8:	fb03 6304 	mla	r3, r3, r4, r6
 802e2dc:	fb02 7204 	mla	r2, r2, r4, r7
 802e2e0:	b289      	uxth	r1, r1
 802e2e2:	b292      	uxth	r2, r2
 802e2e4:	b29b      	uxth	r3, r3
 802e2e6:	f101 0e01 	add.w	lr, r1, #1
 802e2ea:	1c56      	adds	r6, r2, #1
 802e2ec:	1c5d      	adds	r5, r3, #1
 802e2ee:	9809      	ldr	r0, [sp, #36]	@ 0x24
 802e2f0:	eb0e 2111 	add.w	r1, lr, r1, lsr #8
 802e2f4:	eb06 2212 	add.w	r2, r6, r2, lsr #8
 802e2f8:	eb05 2313 	add.w	r3, r5, r3, lsr #8
 802e2fc:	1209      	asrs	r1, r1, #8
 802e2fe:	1212      	asrs	r2, r2, #8
 802e300:	121b      	asrs	r3, r3, #8
 802e302:	f800 1c03 	strb.w	r1, [r0, #-3]
 802e306:	f800 2c02 	strb.w	r2, [r0, #-2]
 802e30a:	f800 3c01 	strb.w	r3, [r0, #-1]
 802e30e:	9b3d      	ldr	r3, [sp, #244]	@ 0xf4
 802e310:	9a3e      	ldr	r2, [sp, #248]	@ 0xf8
 802e312:	4499      	add	r9, r3
 802e314:	9b3c      	ldr	r3, [sp, #240]	@ 0xf0
 802e316:	4413      	add	r3, r2
 802e318:	933c      	str	r3, [sp, #240]	@ 0xf0
 802e31a:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 802e31c:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 802e31e:	4293      	cmp	r3, r2
 802e320:	d024      	beq.n	802e36c <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x428>
 802e322:	4613      	mov	r3, r2
 802e324:	3303      	adds	r3, #3
 802e326:	9309      	str	r3, [sp, #36]	@ 0x24
 802e328:	9b42      	ldr	r3, [sp, #264]	@ 0x108
 802e32a:	f9b3 6008 	ldrsh.w	r6, [r3, #8]
 802e32e:	9b3c      	ldr	r3, [sp, #240]	@ 0xf0
 802e330:	ea4f 4229 	mov.w	r2, r9, asr #16
 802e334:	141b      	asrs	r3, r3, #16
 802e336:	fb06 2303 	mla	r3, r6, r3, r2
 802e33a:	9811      	ldr	r0, [sp, #68]	@ 0x44
 802e33c:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 802e33e:	5cc2      	ldrb	r2, [r0, r3]
 802e340:	f3c9 3103 	ubfx	r1, r9, #12, #4
 802e344:	f854 5022 	ldr.w	r5, [r4, r2, lsl #2]
 802e348:	9a3c      	ldr	r2, [sp, #240]	@ 0xf0
 802e34a:	4403      	add	r3, r0
 802e34c:	f3c2 3203 	ubfx	r2, r2, #12, #4
 802e350:	0e28      	lsrs	r0, r5, #24
 802e352:	2900      	cmp	r1, #0
 802e354:	f47f aec0 	bne.w	802e0d8 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x194>
 802e358:	2a00      	cmp	r2, #0
 802e35a:	f43f aed2 	beq.w	802e102 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1be>
 802e35e:	5d9b      	ldrb	r3, [r3, r6]
 802e360:	f854 3023 	ldr.w	r3, [r4, r3, lsl #2]
 802e364:	9313      	str	r3, [sp, #76]	@ 0x4c
 802e366:	0e1b      	lsrs	r3, r3, #24
 802e368:	930c      	str	r3, [sp, #48]	@ 0x30
 802e36a:	e6ca      	b.n	802e102 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1be>
 802e36c:	4699      	mov	r9, r3
 802e36e:	e64c      	b.n	802e00a <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xc6>
 802e370:	2b00      	cmp	r3, #0
 802e372:	f77f ae4a 	ble.w	802e00a <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xc6>
 802e376:	f8dd 8024 	ldr.w	r8, [sp, #36]	@ 0x24
 802e37a:	ea4f 422a 	mov.w	r2, sl, asr #16
 802e37e:	1439      	asrs	r1, r7, #16
 802e380:	2a00      	cmp	r2, #0
 802e382:	46cb      	mov	fp, r9
 802e384:	f8cd 903c 	str.w	r9, [sp, #60]	@ 0x3c
 802e388:	9c42      	ldr	r4, [sp, #264]	@ 0x108
 802e38a:	e9dd 953d 	ldrd	r9, r5, [sp, #244]	@ 0xf4
 802e38e:	f3ca 3003 	ubfx	r0, sl, #12, #4
 802e392:	f3c7 3e03 	ubfx	lr, r7, #12, #4
 802e396:	f2c0 8154 	blt.w	802e642 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6fe>
 802e39a:	1e73      	subs	r3, r6, #1
 802e39c:	429a      	cmp	r2, r3
 802e39e:	f280 8150 	bge.w	802e642 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6fe>
 802e3a2:	2900      	cmp	r1, #0
 802e3a4:	f2c0 814d 	blt.w	802e642 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6fe>
 802e3a8:	f10c 33ff 	add.w	r3, ip, #4294967295
 802e3ac:	4299      	cmp	r1, r3
 802e3ae:	f280 8148 	bge.w	802e642 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6fe>
 802e3b2:	b236      	sxth	r6, r6
 802e3b4:	fb01 2206 	mla	r2, r1, r6, r2
 802e3b8:	9911      	ldr	r1, [sp, #68]	@ 0x44
 802e3ba:	5c8b      	ldrb	r3, [r1, r2]
 802e3bc:	440a      	add	r2, r1
 802e3be:	9210      	str	r2, [sp, #64]	@ 0x40
 802e3c0:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 802e3c2:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 802e3c6:	930e      	str	r3, [sp, #56]	@ 0x38
 802e3c8:	0e1b      	lsrs	r3, r3, #24
 802e3ca:	2800      	cmp	r0, #0
 802e3cc:	f000 8169 	beq.w	802e6a2 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75e>
 802e3d0:	9910      	ldr	r1, [sp, #64]	@ 0x40
 802e3d2:	f891 c001 	ldrb.w	ip, [r1, #1]
 802e3d6:	f852 202c 	ldr.w	r2, [r2, ip, lsl #2]
 802e3da:	9224      	str	r2, [sp, #144]	@ 0x90
 802e3dc:	0e12      	lsrs	r2, r2, #24
 802e3de:	9218      	str	r2, [sp, #96]	@ 0x60
 802e3e0:	f1be 0f00 	cmp.w	lr, #0
 802e3e4:	f040 816a 	bne.w	802e6bc <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x778>
 802e3e8:	b280      	uxth	r0, r0
 802e3ea:	fa1f fc8e 	uxth.w	ip, lr
 802e3ee:	fb00 f20c 	mul.w	r2, r0, ip
 802e3f2:	4611      	mov	r1, r2
 802e3f4:	0106      	lsls	r6, r0, #4
 802e3f6:	1ab0      	subs	r0, r6, r2
 802e3f8:	9210      	str	r2, [sp, #64]	@ 0x40
 802e3fa:	b282      	uxth	r2, r0
 802e3fc:	9818      	ldr	r0, [sp, #96]	@ 0x60
 802e3fe:	ebc1 1c0c 	rsb	ip, r1, ip, lsl #4
 802e402:	fb02 f000 	mul.w	r0, r2, r0
 802e406:	921b      	str	r2, [sp, #108]	@ 0x6c
 802e408:	f5c6 7680 	rsb	r6, r6, #256	@ 0x100
 802e40c:	fa1f f28c 	uxth.w	r2, ip
 802e410:	1ab6      	subs	r6, r6, r2
 802e412:	b2b6      	uxth	r6, r6
 802e414:	fb06 0c03 	mla	ip, r6, r3, r0
 802e418:	9819      	ldr	r0, [sp, #100]	@ 0x64
 802e41a:	921c      	str	r2, [sp, #112]	@ 0x70
 802e41c:	fb02 cc00 	mla	ip, r2, r0, ip
 802e420:	9a1a      	ldr	r2, [sp, #104]	@ 0x68
 802e422:	961d      	str	r6, [sp, #116]	@ 0x74
 802e424:	fb01 cc02 	mla	ip, r1, r2, ip
 802e428:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 802e42c:	f1bc 0f00 	cmp.w	ip, #0
 802e430:	f000 80f1 	beq.w	802e616 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6d2>
 802e434:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 802e436:	990e      	ldr	r1, [sp, #56]	@ 0x38
 802e438:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 802e43c:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 802e440:	2bff      	cmp	r3, #255	@ 0xff
 802e442:	921e      	str	r2, [sp, #120]	@ 0x78
 802e444:	910e      	str	r1, [sp, #56]	@ 0x38
 802e446:	d01b      	beq.n	802e480 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x53c>
 802e448:	fb01 f103 	mul.w	r1, r1, r3
 802e44c:	fb02 f203 	mul.w	r2, r2, r3
 802e450:	460b      	mov	r3, r1
 802e452:	0a11      	lsrs	r1, r2, #8
 802e454:	f102 1601 	add.w	r6, r2, #65537	@ 0x10001
 802e458:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 802e45c:	f503 7080 	add.w	r0, r3, #256	@ 0x100
 802e460:	4431      	add	r1, r6
 802e462:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 802e466:	0a09      	lsrs	r1, r1, #8
 802e468:	0a1b      	lsrs	r3, r3, #8
 802e46a:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 802e46e:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 802e472:	430b      	orrs	r3, r1
 802e474:	f003 12ff 	and.w	r2, r3, #16711935	@ 0xff00ff
 802e478:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 802e47c:	921e      	str	r2, [sp, #120]	@ 0x78
 802e47e:	930e      	str	r3, [sp, #56]	@ 0x38
 802e480:	9a24      	ldr	r2, [sp, #144]	@ 0x90
 802e482:	9918      	ldr	r1, [sp, #96]	@ 0x60
 802e484:	f002 13ff 	and.w	r3, r2, #16711935	@ 0xff00ff
 802e488:	29ff      	cmp	r1, #255	@ 0xff
 802e48a:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 802e48e:	931f      	str	r3, [sp, #124]	@ 0x7c
 802e490:	9220      	str	r2, [sp, #128]	@ 0x80
 802e492:	d01b      	beq.n	802e4cc <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x588>
 802e494:	fb03 f301 	mul.w	r3, r3, r1
 802e498:	fb02 f201 	mul.w	r2, r2, r1
 802e49c:	0a19      	lsrs	r1, r3, #8
 802e49e:	f103 1001 	add.w	r0, r3, #65537	@ 0x10001
 802e4a2:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 802e4a6:	f502 7380 	add.w	r3, r2, #256	@ 0x100
 802e4aa:	4401      	add	r1, r0
 802e4ac:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 802e4b0:	0a09      	lsrs	r1, r1, #8
 802e4b2:	0a1b      	lsrs	r3, r3, #8
 802e4b4:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 802e4b8:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 802e4bc:	ea41 0003 	orr.w	r0, r1, r3
 802e4c0:	f000 13ff 	and.w	r3, r0, #16711935	@ 0xff00ff
 802e4c4:	931f      	str	r3, [sp, #124]	@ 0x7c
 802e4c6:	f400 437f 	and.w	r3, r0, #65280	@ 0xff00
 802e4ca:	9320      	str	r3, [sp, #128]	@ 0x80
 802e4cc:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 802e4ce:	9a19      	ldr	r2, [sp, #100]	@ 0x64
 802e4d0:	f003 16ff 	and.w	r6, r3, #16711935	@ 0xff00ff
 802e4d4:	2aff      	cmp	r2, #255	@ 0xff
 802e4d6:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 802e4da:	9321      	str	r3, [sp, #132]	@ 0x84
 802e4dc:	d01a      	beq.n	802e514 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5d0>
 802e4de:	fb03 f302 	mul.w	r3, r3, r2
 802e4e2:	4618      	mov	r0, r3
 802e4e4:	fb06 f602 	mul.w	r6, r6, r2
 802e4e8:	0a31      	lsrs	r1, r6, #8
 802e4ea:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 802e4ee:	f106 1601 	add.w	r6, r6, #65537	@ 0x10001
 802e4f2:	f503 7380 	add.w	r3, r3, #256	@ 0x100
 802e4f6:	440e      	add	r6, r1
 802e4f8:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 802e4fc:	0a36      	lsrs	r6, r6, #8
 802e4fe:	0a1b      	lsrs	r3, r3, #8
 802e500:	f006 16ff 	and.w	r6, r6, #16711935	@ 0xff00ff
 802e504:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 802e508:	4333      	orrs	r3, r6
 802e50a:	f003 16ff 	and.w	r6, r3, #16711935	@ 0xff00ff
 802e50e:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 802e512:	9321      	str	r3, [sp, #132]	@ 0x84
 802e514:	9a27      	ldr	r2, [sp, #156]	@ 0x9c
 802e516:	f002 13ff 	and.w	r3, r2, #16711935	@ 0xff00ff
 802e51a:	f402 4e7f 	and.w	lr, r2, #65280	@ 0xff00
 802e51e:	9a1a      	ldr	r2, [sp, #104]	@ 0x68
 802e520:	2aff      	cmp	r2, #255	@ 0xff
 802e522:	d01a      	beq.n	802e55a <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x616>
 802e524:	fb03 f302 	mul.w	r3, r3, r2
 802e528:	fb0e fe02 	mul.w	lr, lr, r2
 802e52c:	0a19      	lsrs	r1, r3, #8
 802e52e:	f103 1001 	add.w	r0, r3, #65537	@ 0x10001
 802e532:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 802e536:	f50e 7380 	add.w	r3, lr, #256	@ 0x100
 802e53a:	eb03 2e1e 	add.w	lr, r3, lr, lsr #8
 802e53e:	4401      	add	r1, r0
 802e540:	0a09      	lsrs	r1, r1, #8
 802e542:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802e546:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 802e54a:	f40e 4e7f 	and.w	lr, lr, #65280	@ 0xff00
 802e54e:	ea41 0e0e 	orr.w	lr, r1, lr
 802e552:	f00e 13ff 	and.w	r3, lr, #16711935	@ 0xff00ff
 802e556:	f40e 4e7f 	and.w	lr, lr, #65280	@ 0xff00
 802e55a:	9a16      	ldr	r2, [sp, #88]	@ 0x58
 802e55c:	fb0c f102 	mul.w	r1, ip, r2
 802e560:	1c48      	adds	r0, r1, #1
 802e562:	eb00 2111 	add.w	r1, r0, r1, lsr #8
 802e566:	ea6f 2211 	mvn.w	r2, r1, lsr #8
 802e56a:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 802e56c:	9225      	str	r2, [sp, #148]	@ 0x94
 802e56e:	4684      	mov	ip, r0
 802e570:	9a1b      	ldr	r2, [sp, #108]	@ 0x6c
 802e572:	9820      	ldr	r0, [sp, #128]	@ 0x80
 802e574:	fb0c fc02 	mul.w	ip, ip, r2
 802e578:	fb00 f002 	mul.w	r0, r0, r2
 802e57c:	4601      	mov	r1, r0
 802e57e:	9a1d      	ldr	r2, [sp, #116]	@ 0x74
 802e580:	981e      	ldr	r0, [sp, #120]	@ 0x78
 802e582:	fb00 cc02 	mla	ip, r0, r2, ip
 802e586:	980e      	ldr	r0, [sp, #56]	@ 0x38
 802e588:	fb00 1102 	mla	r1, r0, r2, r1
 802e58c:	9a1c      	ldr	r2, [sp, #112]	@ 0x70
 802e58e:	9821      	ldr	r0, [sp, #132]	@ 0x84
 802e590:	fb06 c602 	mla	r6, r6, r2, ip
 802e594:	fb00 1002 	mla	r0, r0, r2, r1
 802e598:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 802e59a:	f89d 1094 	ldrb.w	r1, [sp, #148]	@ 0x94
 802e59e:	fb03 6602 	mla	r6, r3, r2, r6
 802e5a2:	fb0e 0302 	mla	r3, lr, r2, r0
 802e5a6:	0a32      	lsrs	r2, r6, #8
 802e5a8:	0a1b      	lsrs	r3, r3, #8
 802e5aa:	f89b 6002 	ldrb.w	r6, [fp, #2]
 802e5ae:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 802e5b2:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 802e5b6:	4313      	orrs	r3, r2
 802e5b8:	fb16 f001 	smulbb	r0, r6, r1
 802e5bc:	9a16      	ldr	r2, [sp, #88]	@ 0x58
 802e5be:	fa5f fe83 	uxtb.w	lr, r3
 802e5c2:	fb1e fe02 	smulbb	lr, lr, r2
 802e5c6:	f89b c001 	ldrb.w	ip, [fp, #1]
 802e5ca:	900e      	str	r0, [sp, #56]	@ 0x38
 802e5cc:	f89b 0000 	ldrb.w	r0, [fp]
 802e5d0:	fb1c fc01 	smulbb	ip, ip, r1
 802e5d4:	fb00 e001 	mla	r0, r0, r1, lr
 802e5d8:	4611      	mov	r1, r2
 802e5da:	f3c3 2607 	ubfx	r6, r3, #8, #8
 802e5de:	fb06 c202 	mla	r2, r6, r2, ip
 802e5e2:	9e0e      	ldr	r6, [sp, #56]	@ 0x38
 802e5e4:	0c1b      	lsrs	r3, r3, #16
 802e5e6:	fb03 6301 	mla	r3, r3, r1, r6
 802e5ea:	b280      	uxth	r0, r0
 802e5ec:	b296      	uxth	r6, r2
 802e5ee:	b29b      	uxth	r3, r3
 802e5f0:	1c5a      	adds	r2, r3, #1
 802e5f2:	f100 0c01 	add.w	ip, r0, #1
 802e5f6:	1c71      	adds	r1, r6, #1
 802e5f8:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 802e5fc:	eb0c 2010 	add.w	r0, ip, r0, lsr #8
 802e600:	eb01 2116 	add.w	r1, r1, r6, lsr #8
 802e604:	1200      	asrs	r0, r0, #8
 802e606:	120a      	asrs	r2, r1, #8
 802e608:	121b      	asrs	r3, r3, #8
 802e60a:	f88b 0000 	strb.w	r0, [fp]
 802e60e:	f88b 2001 	strb.w	r2, [fp, #1]
 802e612:	f88b 3002 	strb.w	r3, [fp, #2]
 802e616:	f1b8 0f00 	cmp.w	r8, #0
 802e61a:	f10b 0b03 	add.w	fp, fp, #3
 802e61e:	44ca      	add	sl, r9
 802e620:	442f      	add	r7, r5
 802e622:	dd2e      	ble.n	802e682 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x73e>
 802e624:	e9d4 6c02 	ldrd	r6, ip, [r4, #8]
 802e628:	ea4f 422a 	mov.w	r2, sl, asr #16
 802e62c:	2a00      	cmp	r2, #0
 802e62e:	f108 38ff 	add.w	r8, r8, #4294967295
 802e632:	ea4f 4127 	mov.w	r1, r7, asr #16
 802e636:	f3ca 3003 	ubfx	r0, sl, #12, #4
 802e63a:	f3c7 3e03 	ubfx	lr, r7, #12, #4
 802e63e:	f6bf aeac 	bge.w	802e39a <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 802e642:	1c53      	adds	r3, r2, #1
 802e644:	d4e7      	bmi.n	802e616 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6d2>
 802e646:	42b3      	cmp	r3, r6
 802e648:	dce5      	bgt.n	802e616 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6d2>
 802e64a:	1c4b      	adds	r3, r1, #1
 802e64c:	d4e3      	bmi.n	802e616 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6d2>
 802e64e:	4563      	cmp	r3, ip
 802e650:	dce1      	bgt.n	802e616 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6d2>
 802e652:	fa0f f38c 	sxth.w	r3, ip
 802e656:	b236      	sxth	r6, r6
 802e658:	e9cd 6300 	strd	r6, r3, [sp]
 802e65c:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 802e65e:	e9cd 1003 	strd	r1, r0, [sp, #12]
 802e662:	e9cd e305 	strd	lr, r3, [sp, #20]
 802e666:	9202      	str	r2, [sp, #8]
 802e668:	4659      	mov	r1, fp
 802e66a:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 802e66c:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 802e66e:	9822      	ldr	r0, [sp, #136]	@ 0x88
 802e670:	f7ff faf2 	bl	802dc58 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh>
 802e674:	f1b8 0f00 	cmp.w	r8, #0
 802e678:	f10b 0b03 	add.w	fp, fp, #3
 802e67c:	44ca      	add	sl, r9
 802e67e:	442f      	add	r7, r5
 802e680:	dcd0      	bgt.n	802e624 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e0>
 802e682:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 802e684:	f8dd 903c 	ldr.w	r9, [sp, #60]	@ 0x3c
 802e688:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 802e68c:	3301      	adds	r3, #1
 802e68e:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 802e692:	4499      	add	r9, r3
 802e694:	e4b9      	b.n	802e00a <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xc6>
 802e696:	3b01      	subs	r3, #1
 802e698:	f8dd c024 	ldr.w	ip, [sp, #36]	@ 0x24
 802e69c:	4698      	mov	r8, r3
 802e69e:	9309      	str	r3, [sp, #36]	@ 0x24
 802e6a0:	e66e      	b.n	802e380 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x43c>
 802e6a2:	f1be 0f00 	cmp.w	lr, #0
 802e6a6:	f43f ae9f 	beq.w	802e3e8 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a4>
 802e6aa:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 802e6ac:	5d92      	ldrb	r2, [r2, r6]
 802e6ae:	9e0a      	ldr	r6, [sp, #40]	@ 0x28
 802e6b0:	f856 2022 	ldr.w	r2, [r6, r2, lsl #2]
 802e6b4:	9226      	str	r2, [sp, #152]	@ 0x98
 802e6b6:	0e12      	lsrs	r2, r2, #24
 802e6b8:	9219      	str	r2, [sp, #100]	@ 0x64
 802e6ba:	e695      	b.n	802e3e8 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a4>
 802e6bc:	eb01 0c06 	add.w	ip, r1, r6
 802e6c0:	f89c c001 	ldrb.w	ip, [ip, #1]
 802e6c4:	5d89      	ldrb	r1, [r1, r6]
 802e6c6:	9e0a      	ldr	r6, [sp, #40]	@ 0x28
 802e6c8:	f856 202c 	ldr.w	r2, [r6, ip, lsl #2]
 802e6cc:	f856 6021 	ldr.w	r6, [r6, r1, lsl #2]
 802e6d0:	9227      	str	r2, [sp, #156]	@ 0x9c
 802e6d2:	0e12      	lsrs	r2, r2, #24
 802e6d4:	921a      	str	r2, [sp, #104]	@ 0x68
 802e6d6:	0e32      	lsrs	r2, r6, #24
 802e6d8:	9626      	str	r6, [sp, #152]	@ 0x98
 802e6da:	9219      	str	r2, [sp, #100]	@ 0x64
 802e6dc:	e684      	b.n	802e3e8 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a4>
 802e6de:	f43f ac94 	beq.w	802e00a <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xc6>
 802e6e2:	1e6c      	subs	r4, r5, #1
 802e6e4:	e4d4      	b.n	802e090 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 802e6e6:	bf00      	nop

0802e6e8 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh>:
 802e6e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802e6ec:	b089      	sub	sp, #36	@ 0x24
 802e6ee:	f9bd b048 	ldrsh.w	fp, [sp, #72]	@ 0x48
 802e6f2:	e9dd 4014 	ldrd	r4, r0, [sp, #80]	@ 0x50
 802e6f6:	fb00 450b 	mla	r5, r0, fp, r4
 802e6fa:	2800      	cmp	r0, #0
 802e6fc:	4694      	mov	ip, r2
 802e6fe:	f100 0601 	add.w	r6, r0, #1
 802e702:	442a      	add	r2, r5
 802e704:	f9bd 804c 	ldrsh.w	r8, [sp, #76]	@ 0x4c
 802e708:	f89d a058 	ldrb.w	sl, [sp, #88]	@ 0x58
 802e70c:	f89d 705c 	ldrb.w	r7, [sp, #92]	@ 0x5c
 802e710:	db02      	blt.n	802e718 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x30>
 802e712:	4580      	cmp	r8, r0
 802e714:	f300 810a 	bgt.w	802e92c <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x244>
 802e718:	f04f 0c00 	mov.w	ip, #0
 802e71c:	46e6      	mov	lr, ip
 802e71e:	4665      	mov	r5, ip
 802e720:	46e1      	mov	r9, ip
 802e722:	2e00      	cmp	r6, #0
 802e724:	db02      	blt.n	802e72c <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x44>
 802e726:	45b0      	cmp	r8, r6
 802e728:	f300 811a 	bgt.w	802e960 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x278>
 802e72c:	2400      	movs	r4, #0
 802e72e:	46a0      	mov	r8, r4
 802e730:	e9cd 4403 	strd	r4, r4, [sp, #12]
 802e734:	f1ba 0f0f 	cmp.w	sl, #15
 802e738:	f200 8158 	bhi.w	802e9ec <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x304>
 802e73c:	2f0f      	cmp	r7, #15
 802e73e:	f200 8155 	bhi.w	802e9ec <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x304>
 802e742:	b2ba      	uxth	r2, r7
 802e744:	fa1f f38a 	uxth.w	r3, sl
 802e748:	fb02 f703 	mul.w	r7, r2, r3
 802e74c:	ebc7 1202 	rsb	r2, r7, r2, lsl #4
 802e750:	b292      	uxth	r2, r2
 802e752:	fb02 fa08 	mul.w	sl, r2, r8
 802e756:	fb07 fb04 	mul.w	fp, r7, r4
 802e75a:	011b      	lsls	r3, r3, #4
 802e75c:	1bd8      	subs	r0, r3, r7
 802e75e:	b280      	uxth	r0, r0
 802e760:	9001      	str	r0, [sp, #4]
 802e762:	fb00 f00c 	mul.w	r0, r0, ip
 802e766:	f5c3 7380 	rsb	r3, r3, #256	@ 0x100
 802e76a:	1a9b      	subs	r3, r3, r2
 802e76c:	b29b      	uxth	r3, r3
 802e76e:	fb03 000e 	mla	r0, r3, lr, r0
 802e772:	4450      	add	r0, sl
 802e774:	4458      	add	r0, fp
 802e776:	f3c0 2007 	ubfx	r0, r0, #8, #8
 802e77a:	9002      	str	r0, [sp, #8]
 802e77c:	2800      	cmp	r0, #0
 802e77e:	f000 80d2 	beq.w	802e926 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x23e>
 802e782:	f009 10ff 	and.w	r0, r9, #16711935	@ 0xff00ff
 802e786:	f409 467f 	and.w	r6, r9, #65280	@ 0xff00
 802e78a:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
 802e78e:	9005      	str	r0, [sp, #20]
 802e790:	9606      	str	r6, [sp, #24]
 802e792:	d01e      	beq.n	802e7d2 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0xea>
 802e794:	fb00 fb0e 	mul.w	fp, r0, lr
 802e798:	fb06 fe0e 	mul.w	lr, r6, lr
 802e79c:	ea4f 201b 	mov.w	r0, fp, lsr #8
 802e7a0:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 802e7a4:	f50e 7a80 	add.w	sl, lr, #256	@ 0x100
 802e7a8:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 802e7ac:	4483      	add	fp, r0
 802e7ae:	eb0a 2e1e 	add.w	lr, sl, lr, lsr #8
 802e7b2:	ea4f 2b1b 	mov.w	fp, fp, lsr #8
 802e7b6:	ea4f 2a1e 	mov.w	sl, lr, lsr #8
 802e7ba:	f00b 1bff 	and.w	fp, fp, #16711935	@ 0xff00ff
 802e7be:	f40a 4e7f 	and.w	lr, sl, #65280	@ 0xff00
 802e7c2:	ea4b 0e0e 	orr.w	lr, fp, lr
 802e7c6:	f00e 10ff 	and.w	r0, lr, #16711935	@ 0xff00ff
 802e7ca:	9005      	str	r0, [sp, #20]
 802e7cc:	f40e 407f 	and.w	r0, lr, #65280	@ 0xff00
 802e7d0:	9006      	str	r0, [sp, #24]
 802e7d2:	f405 407f 	and.w	r0, r5, #65280	@ 0xff00
 802e7d6:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
 802e7da:	f005 1aff 	and.w	sl, r5, #16711935	@ 0xff00ff
 802e7de:	9007      	str	r0, [sp, #28]
 802e7e0:	d01d      	beq.n	802e81e <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x136>
 802e7e2:	fb0a fa0c 	mul.w	sl, sl, ip
 802e7e6:	fb00 f50c 	mul.w	r5, r0, ip
 802e7ea:	ea4f 201a 	mov.w	r0, sl, lsr #8
 802e7ee:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 802e7f2:	f505 7b80 	add.w	fp, r5, #256	@ 0x100
 802e7f6:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 802e7fa:	4482      	add	sl, r0
 802e7fc:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 802e800:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802e804:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 802e808:	f00a 1aff 	and.w	sl, sl, #16711935	@ 0xff00ff
 802e80c:	f40b 457f 	and.w	r5, fp, #65280	@ 0xff00
 802e810:	ea4a 0505 	orr.w	r5, sl, r5
 802e814:	f405 407f 	and.w	r0, r5, #65280	@ 0xff00
 802e818:	f005 1aff 	and.w	sl, r5, #16711935	@ 0xff00ff
 802e81c:	9007      	str	r0, [sp, #28]
 802e81e:	9803      	ldr	r0, [sp, #12]
 802e820:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
 802e824:	f000 19ff 	and.w	r9, r0, #16711935	@ 0xff00ff
 802e828:	f400 467f 	and.w	r6, r0, #65280	@ 0xff00
 802e82c:	d01b      	beq.n	802e866 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x17e>
 802e82e:	fb09 f908 	mul.w	r9, r9, r8
 802e832:	fb06 f608 	mul.w	r6, r6, r8
 802e836:	ea4f 2c19 	mov.w	ip, r9, lsr #8
 802e83a:	f506 7080 	add.w	r0, r6, #256	@ 0x100
 802e83e:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 802e842:	f109 1901 	add.w	r9, r9, #65537	@ 0x10001
 802e846:	eb00 2616 	add.w	r6, r0, r6, lsr #8
 802e84a:	44e1      	add	r9, ip
 802e84c:	ea4f 2919 	mov.w	r9, r9, lsr #8
 802e850:	0a30      	lsrs	r0, r6, #8
 802e852:	f009 19ff 	and.w	r9, r9, #16711935	@ 0xff00ff
 802e856:	f400 467f 	and.w	r6, r0, #65280	@ 0xff00
 802e85a:	ea49 0606 	orr.w	r6, r9, r6
 802e85e:	f006 19ff 	and.w	r9, r6, #16711935	@ 0xff00ff
 802e862:	f406 467f 	and.w	r6, r6, #65280	@ 0xff00
 802e866:	9d04      	ldr	r5, [sp, #16]
 802e868:	2cff      	cmp	r4, #255	@ 0xff
 802e86a:	f005 10ff 	and.w	r0, r5, #16711935	@ 0xff00ff
 802e86e:	f405 4e7f 	and.w	lr, r5, #65280	@ 0xff00
 802e872:	d01a      	beq.n	802e8aa <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x1c2>
 802e874:	fb00 f004 	mul.w	r0, r0, r4
 802e878:	fb0e f404 	mul.w	r4, lr, r4
 802e87c:	ea4f 2c10 	mov.w	ip, r0, lsr #8
 802e880:	f504 7e80 	add.w	lr, r4, #256	@ 0x100
 802e884:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 802e888:	f100 1001 	add.w	r0, r0, #65537	@ 0x10001
 802e88c:	eb0e 2414 	add.w	r4, lr, r4, lsr #8
 802e890:	4460      	add	r0, ip
 802e892:	0a00      	lsrs	r0, r0, #8
 802e894:	0a24      	lsrs	r4, r4, #8
 802e896:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 802e89a:	f404 4e7f 	and.w	lr, r4, #65280	@ 0xff00
 802e89e:	ea40 0e0e 	orr.w	lr, r0, lr
 802e8a2:	f00e 10ff 	and.w	r0, lr, #16711935	@ 0xff00ff
 802e8a6:	f40e 4e7f 	and.w	lr, lr, #65280	@ 0xff00
 802e8aa:	9c02      	ldr	r4, [sp, #8]
 802e8ac:	9d07      	ldr	r5, [sp, #28]
 802e8ae:	ea6f 0c04 	mvn.w	ip, r4
 802e8b2:	9c01      	ldr	r4, [sp, #4]
 802e8b4:	fa5f fc8c 	uxtb.w	ip, ip
 802e8b8:	fb0a fb04 	mul.w	fp, sl, r4
 802e8bc:	fb05 f504 	mul.w	r5, r5, r4
 802e8c0:	9c05      	ldr	r4, [sp, #20]
 802e8c2:	fb04 bb03 	mla	fp, r4, r3, fp
 802e8c6:	9c06      	ldr	r4, [sp, #24]
 802e8c8:	fb09 b902 	mla	r9, r9, r2, fp
 802e8cc:	fb04 5303 	mla	r3, r4, r3, r5
 802e8d0:	fb06 3602 	mla	r6, r6, r2, r3
 802e8d4:	780c      	ldrb	r4, [r1, #0]
 802e8d6:	fb00 9007 	mla	r0, r0, r7, r9
 802e8da:	784a      	ldrb	r2, [r1, #1]
 802e8dc:	fb0e 6707 	mla	r7, lr, r7, r6
 802e8e0:	788b      	ldrb	r3, [r1, #2]
 802e8e2:	fb02 f20c 	mul.w	r2, r2, ip
 802e8e6:	fb03 f30c 	mul.w	r3, r3, ip
 802e8ea:	fb04 fc0c 	mul.w	ip, r4, ip
 802e8ee:	0a00      	lsrs	r0, r0, #8
 802e8f0:	0a3f      	lsrs	r7, r7, #8
 802e8f2:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 802e8f6:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 802e8fa:	4338      	orrs	r0, r7
 802e8fc:	1c54      	adds	r4, r2, #1
 802e8fe:	1c5f      	adds	r7, r3, #1
 802e900:	f10c 0601 	add.w	r6, ip, #1
 802e904:	0a05      	lsrs	r5, r0, #8
 802e906:	eb04 2212 	add.w	r2, r4, r2, lsr #8
 802e90a:	eb07 2313 	add.w	r3, r7, r3, lsr #8
 802e90e:	0c04      	lsrs	r4, r0, #16
 802e910:	eb06 2c1c 	add.w	ip, r6, ip, lsr #8
 802e914:	eb05 2212 	add.w	r2, r5, r2, lsr #8
 802e918:	eb04 2313 	add.w	r3, r4, r3, lsr #8
 802e91c:	eb00 201c 	add.w	r0, r0, ip, lsr #8
 802e920:	704a      	strb	r2, [r1, #1]
 802e922:	708b      	strb	r3, [r1, #2]
 802e924:	7008      	strb	r0, [r1, #0]
 802e926:	b009      	add	sp, #36	@ 0x24
 802e928:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802e92c:	2c00      	cmp	r4, #0
 802e92e:	db01      	blt.n	802e934 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x24c>
 802e930:	45a3      	cmp	fp, r4
 802e932:	dc41      	bgt.n	802e9b8 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x2d0>
 802e934:	f04f 0e00 	mov.w	lr, #0
 802e938:	46f1      	mov	r9, lr
 802e93a:	1c60      	adds	r0, r4, #1
 802e93c:	d42b      	bmi.n	802e996 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x2ae>
 802e93e:	4583      	cmp	fp, r0
 802e940:	dd29      	ble.n	802e996 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x2ae>
 802e942:	f1ba 0f00 	cmp.w	sl, #0
 802e946:	d005      	beq.n	802e954 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x26c>
 802e948:	7850      	ldrb	r0, [r2, #1]
 802e94a:	f853 5020 	ldr.w	r5, [r3, r0, lsl #2]
 802e94e:	ea4f 6c15 	mov.w	ip, r5, lsr #24
 802e952:	e6e6      	b.n	802e722 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x3a>
 802e954:	2e00      	cmp	r6, #0
 802e956:	db42      	blt.n	802e9de <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x2f6>
 802e958:	45b0      	cmp	r8, r6
 802e95a:	dd40      	ble.n	802e9de <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x2f6>
 802e95c:	46d4      	mov	ip, sl
 802e95e:	4655      	mov	r5, sl
 802e960:	b1ef      	cbz	r7, 802e99e <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x2b6>
 802e962:	2c00      	cmp	r4, #0
 802e964:	db32      	blt.n	802e9cc <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x2e4>
 802e966:	45a3      	cmp	fp, r4
 802e968:	dd30      	ble.n	802e9cc <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x2e4>
 802e96a:	f812 000b 	ldrb.w	r0, [r2, fp]
 802e96e:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]
 802e972:	9003      	str	r0, [sp, #12]
 802e974:	ea4f 6810 	mov.w	r8, r0, lsr #24
 802e978:	3401      	adds	r4, #1
 802e97a:	d424      	bmi.n	802e9c6 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x2de>
 802e97c:	45a3      	cmp	fp, r4
 802e97e:	dd22      	ble.n	802e9c6 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x2de>
 802e980:	f1ba 0f00 	cmp.w	sl, #0
 802e984:	d027      	beq.n	802e9d6 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x2ee>
 802e986:	4493      	add	fp, r2
 802e988:	f89b 2001 	ldrb.w	r2, [fp, #1]
 802e98c:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 802e990:	9304      	str	r3, [sp, #16]
 802e992:	0e1c      	lsrs	r4, r3, #24
 802e994:	e6ce      	b.n	802e734 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x4c>
 802e996:	f04f 0c00 	mov.w	ip, #0
 802e99a:	4665      	mov	r5, ip
 802e99c:	e6c1      	b.n	802e722 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x3a>
 802e99e:	f1ba 0f0f 	cmp.w	sl, #15
 802e9a2:	d823      	bhi.n	802e9ec <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x304>
 802e9a4:	fa1f f38a 	uxth.w	r3, sl
 802e9a8:	463a      	mov	r2, r7
 802e9aa:	46bb      	mov	fp, r7
 802e9ac:	46ba      	mov	sl, r7
 802e9ae:	e9cd 7703 	strd	r7, r7, [sp, #12]
 802e9b2:	463c      	mov	r4, r7
 802e9b4:	46b8      	mov	r8, r7
 802e9b6:	e6d0      	b.n	802e75a <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x72>
 802e9b8:	f81c 0005 	ldrb.w	r0, [ip, r5]
 802e9bc:	f853 9020 	ldr.w	r9, [r3, r0, lsl #2]
 802e9c0:	ea4f 6e19 	mov.w	lr, r9, lsr #24
 802e9c4:	e7b9      	b.n	802e93a <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x252>
 802e9c6:	2400      	movs	r4, #0
 802e9c8:	9404      	str	r4, [sp, #16]
 802e9ca:	e6b3      	b.n	802e734 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x4c>
 802e9cc:	f04f 0800 	mov.w	r8, #0
 802e9d0:	f8cd 800c 	str.w	r8, [sp, #12]
 802e9d4:	e7d0      	b.n	802e978 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x290>
 802e9d6:	f8cd a010 	str.w	sl, [sp, #16]
 802e9da:	4654      	mov	r4, sl
 802e9dc:	e6ae      	b.n	802e73c <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x54>
 802e9de:	4655      	mov	r5, sl
 802e9e0:	e9cd aa03 	strd	sl, sl, [sp, #12]
 802e9e4:	4654      	mov	r4, sl
 802e9e6:	46d0      	mov	r8, sl
 802e9e8:	46d4      	mov	ip, sl
 802e9ea:	e6a7      	b.n	802e73c <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x54>
 802e9ec:	4b03      	ldr	r3, [pc, #12]	@ (802e9fc <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x314>)
 802e9ee:	4a04      	ldr	r2, [pc, #16]	@ (802ea00 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x318>)
 802e9f0:	f240 31ca 	movw	r1, #970	@ 0x3ca
 802e9f4:	4803      	ldr	r0, [pc, #12]	@ (802ea04 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x31c>)
 802e9f6:	f003 febf 	bl	8032778 <__assert_func>
 802e9fa:	bf00      	nop
 802e9fc:	08036954 	.word	0x08036954
 802ea00:	08036fd0 	.word	0x08036fd0
 802ea04:	08036adc 	.word	0x08036adc

0802ea08 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 802ea08:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802ea0c:	ed2d 8b0a 	vpush	{d8-d12}
 802ea10:	eeb0 aa40 	vmov.f32	s20, s0
 802ea14:	eef0 9a60 	vmov.f32	s19, s1
 802ea18:	eeb0 9a41 	vmov.f32	s18, s2
 802ea1c:	eef0 8a62 	vmov.f32	s17, s5
 802ea20:	eeb0 8a43 	vmov.f32	s16, s6
 802ea24:	eeb0 ca44 	vmov.f32	s24, s8
 802ea28:	eef0 ba64 	vmov.f32	s23, s9
 802ea2c:	eeb0 ba45 	vmov.f32	s22, s10
 802ea30:	eef7 aa00 	vmov.f32	s21, #112	@ 0x3f800000  1.0
 802ea34:	b0a3      	sub	sp, #140	@ 0x8c
 802ea36:	901e      	str	r0, [sp, #120]	@ 0x78
 802ea38:	9111      	str	r1, [sp, #68]	@ 0x44
 802ea3a:	9213      	str	r2, [sp, #76]	@ 0x4c
 802ea3c:	e9dd 413b 	ldrd	r4, r1, [sp, #236]	@ 0xec
 802ea40:	9a3d      	ldr	r2, [sp, #244]	@ 0xf4
 802ea42:	6860      	ldr	r0, [r4, #4]
 802ea44:	fb00 1b02 	mla	fp, r0, r2, r1
 802ea48:	9a3e      	ldr	r2, [sp, #248]	@ 0xf8
 802ea4a:	6821      	ldr	r1, [r4, #0]
 802ea4c:	9c3e      	ldr	r4, [sp, #248]	@ 0xf8
 802ea4e:	eb0b 004b 	add.w	r0, fp, fp, lsl #1
 802ea52:	6852      	ldr	r2, [r2, #4]
 802ea54:	eb01 0800 	add.w	r8, r1, r0
 802ea58:	6824      	ldr	r4, [r4, #0]
 802ea5a:	e9dd 7b37 	ldrd	r7, fp, [sp, #220]	@ 0xdc
 802ea5e:	3204      	adds	r2, #4
 802ea60:	46c3      	mov	fp, r8
 802ea62:	46b8      	mov	r8, r7
 802ea64:	9f38      	ldr	r7, [sp, #224]	@ 0xe0
 802ea66:	940e      	str	r4, [sp, #56]	@ 0x38
 802ea68:	920a      	str	r2, [sp, #40]	@ 0x28
 802ea6a:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 802ea6c:	2a00      	cmp	r2, #0
 802ea6e:	dc02      	bgt.n	802ea76 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 802ea70:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 802ea72:	2a00      	cmp	r2, #0
 802ea74:	dd63      	ble.n	802eb3e <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x136>
 802ea76:	9a3e      	ldr	r2, [sp, #248]	@ 0xf8
 802ea78:	2b00      	cmp	r3, #0
 802ea7a:	e9d2 6c02 	ldrd	r6, ip, [r2, #8]
 802ea7e:	b234      	sxth	r4, r6
 802ea80:	fa0f f98c 	sxth.w	r9, ip
 802ea84:	f340 835f 	ble.w	802f146 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x73e>
 802ea88:	1e65      	subs	r5, r4, #1
 802ea8a:	f109 3eff 	add.w	lr, r9, #4294967295
 802ea8e:	f8cd c024 	str.w	ip, [sp, #36]	@ 0x24
 802ea92:	e9dd ca39 	ldrd	ip, sl, [sp, #228]	@ 0xe4
 802ea96:	ea5f 4228 	movs.w	r2, r8, asr #16
 802ea9a:	ea4f 4127 	mov.w	r1, r7, asr #16
 802ea9e:	d405      	bmi.n	802eaac <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 802eaa0:	42aa      	cmp	r2, r5
 802eaa2:	da03      	bge.n	802eaac <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 802eaa4:	2900      	cmp	r1, #0
 802eaa6:	db01      	blt.n	802eaac <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 802eaa8:	4571      	cmp	r1, lr
 802eaaa:	db4d      	blt.n	802eb48 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x140>
 802eaac:	1c50      	adds	r0, r2, #1
 802eaae:	d406      	bmi.n	802eabe <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 802eab0:	42a0      	cmp	r0, r4
 802eab2:	dc04      	bgt.n	802eabe <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 802eab4:	1c48      	adds	r0, r1, #1
 802eab6:	d402      	bmi.n	802eabe <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 802eab8:	4548      	cmp	r0, r9
 802eaba:	f340 831e 	ble.w	802f0fa <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6f2>
 802eabe:	3b01      	subs	r3, #1
 802eac0:	44e0      	add	r8, ip
 802eac2:	4457      	add	r7, sl
 802eac4:	f10b 0b03 	add.w	fp, fp, #3
 802eac8:	d1e5      	bne.n	802ea96 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 802eaca:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 802eacc:	2b00      	cmp	r3, #0
 802eace:	dd36      	ble.n	802eb3e <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x136>
 802ead0:	ee3a aa0c 	vadd.f32	s20, s20, s24
 802ead4:	ee79 9aab 	vadd.f32	s19, s19, s23
 802ead8:	eeca 7a8a 	vdiv.f32	s15, s21, s20
 802eadc:	ee39 9a0b 	vadd.f32	s18, s18, s22
 802eae0:	ee29 6aa7 	vmul.f32	s12, s19, s15
 802eae4:	ee69 7a27 	vmul.f32	s15, s18, s15
 802eae8:	ee76 6a68 	vsub.f32	s13, s12, s17
 802eaec:	ee37 7ac8 	vsub.f32	s14, s15, s16
 802eaf0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802eaf4:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 802eaf8:	ee16 2a90 	vmov	r2, s13
 802eafc:	3b01      	subs	r3, #1
 802eafe:	9311      	str	r3, [sp, #68]	@ 0x44
 802eb00:	9b36      	ldr	r3, [sp, #216]	@ 0xd8
 802eb02:	fb92 f3f3 	sdiv	r3, r2, r3
 802eb06:	ee17 2a10 	vmov	r2, s14
 802eb0a:	eeb0 7a48 	vmov.f32	s14, s16
 802eb0e:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 802eb12:	ee17 7a10 	vmov	r7, s14
 802eb16:	eeb0 7a68 	vmov.f32	s14, s17
 802eb1a:	9339      	str	r3, [sp, #228]	@ 0xe4
 802eb1c:	9b36      	ldr	r3, [sp, #216]	@ 0xd8
 802eb1e:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 802eb22:	fb92 f3f3 	sdiv	r3, r2, r3
 802eb26:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 802eb28:	933a      	str	r3, [sp, #232]	@ 0xe8
 802eb2a:	ee17 8a10 	vmov	r8, s14
 802eb2e:	9b36      	ldr	r3, [sp, #216]	@ 0xd8
 802eb30:	eeb0 8a67 	vmov.f32	s16, s15
 802eb34:	eef0 8a46 	vmov.f32	s17, s12
 802eb38:	bf08      	it	eq
 802eb3a:	4613      	moveq	r3, r2
 802eb3c:	e795      	b.n	802ea6a <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x62>
 802eb3e:	b023      	add	sp, #140	@ 0x8c
 802eb40:	ecbd 8b0a 	vpop	{d8-d12}
 802eb44:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802eb48:	f8dd c024 	ldr.w	ip, [sp, #36]	@ 0x24
 802eb4c:	9839      	ldr	r0, [sp, #228]	@ 0xe4
 802eb4e:	1e59      	subs	r1, r3, #1
 802eb50:	fb00 8201 	mla	r2, r0, r1, r8
 802eb54:	1412      	asrs	r2, r2, #16
 802eb56:	9109      	str	r1, [sp, #36]	@ 0x24
 802eb58:	f100 8151 	bmi.w	802edfe <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f6>
 802eb5c:	42aa      	cmp	r2, r5
 802eb5e:	f280 814e 	bge.w	802edfe <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f6>
 802eb62:	9a3a      	ldr	r2, [sp, #232]	@ 0xe8
 802eb64:	fb02 7201 	mla	r2, r2, r1, r7
 802eb68:	1412      	asrs	r2, r2, #16
 802eb6a:	f100 8148 	bmi.w	802edfe <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f6>
 802eb6e:	f109 31ff 	add.w	r1, r9, #4294967295
 802eb72:	428a      	cmp	r2, r1
 802eb74:	f280 8143 	bge.w	802edfe <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f6>
 802eb78:	2b00      	cmp	r3, #0
 802eb7a:	dda6      	ble.n	802eaca <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xc2>
 802eb7c:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 802eb80:	445b      	add	r3, fp
 802eb82:	930d      	str	r3, [sp, #52]	@ 0x34
 802eb84:	f10b 0c03 	add.w	ip, fp, #3
 802eb88:	46c1      	mov	r9, r8
 802eb8a:	9738      	str	r7, [sp, #224]	@ 0xe0
 802eb8c:	4621      	mov	r1, r4
 802eb8e:	463b      	mov	r3, r7
 802eb90:	e114      	b.n	802edbc <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b4>
 802eb92:	f893 e001 	ldrb.w	lr, [r3, #1]
 802eb96:	f856 502e 	ldr.w	r5, [r6, lr, lsl #2]
 802eb9a:	950f      	str	r5, [sp, #60]	@ 0x3c
 802eb9c:	0e2d      	lsrs	r5, r5, #24
 802eb9e:	9506      	str	r5, [sp, #24]
 802eba0:	b162      	cbz	r2, 802ebbc <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
 802eba2:	185d      	adds	r5, r3, r1
 802eba4:	786d      	ldrb	r5, [r5, #1]
 802eba6:	5c5b      	ldrb	r3, [r3, r1]
 802eba8:	f856 1025 	ldr.w	r1, [r6, r5, lsl #2]
 802ebac:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 802ebb0:	9112      	str	r1, [sp, #72]	@ 0x48
 802ebb2:	9310      	str	r3, [sp, #64]	@ 0x40
 802ebb4:	0e09      	lsrs	r1, r1, #24
 802ebb6:	0e1b      	lsrs	r3, r3, #24
 802ebb8:	9108      	str	r1, [sp, #32]
 802ebba:	9307      	str	r3, [sp, #28]
 802ebbc:	b2a4      	uxth	r4, r4
 802ebbe:	b292      	uxth	r2, r2
 802ebc0:	fb04 f502 	mul.w	r5, r4, r2
 802ebc4:	0124      	lsls	r4, r4, #4
 802ebc6:	1b66      	subs	r6, r4, r5
 802ebc8:	9b06      	ldr	r3, [sp, #24]
 802ebca:	b2b6      	uxth	r6, r6
 802ebcc:	fb06 f103 	mul.w	r1, r6, r3
 802ebd0:	ebc5 1202 	rsb	r2, r5, r2, lsl #4
 802ebd4:	b292      	uxth	r2, r2
 802ebd6:	f5c4 7380 	rsb	r3, r4, #256	@ 0x100
 802ebda:	1a9b      	subs	r3, r3, r2
 802ebdc:	b29b      	uxth	r3, r3
 802ebde:	fb03 1100 	mla	r1, r3, r0, r1
 802ebe2:	9c07      	ldr	r4, [sp, #28]
 802ebe4:	fb02 1104 	mla	r1, r2, r4, r1
 802ebe8:	9c08      	ldr	r4, [sp, #32]
 802ebea:	fb05 1104 	mla	r1, r5, r4, r1
 802ebee:	f3c1 2107 	ubfx	r1, r1, #8, #8
 802ebf2:	9109      	str	r1, [sp, #36]	@ 0x24
 802ebf4:	2900      	cmp	r1, #0
 802ebf6:	f000 80d2 	beq.w	802ed9e <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x396>
 802ebfa:	f007 14ff 	and.w	r4, r7, #16711935	@ 0xff00ff
 802ebfe:	f407 417f 	and.w	r1, r7, #65280	@ 0xff00
 802ec02:	28ff      	cmp	r0, #255	@ 0xff
 802ec04:	940b      	str	r4, [sp, #44]	@ 0x2c
 802ec06:	910c      	str	r1, [sp, #48]	@ 0x30
 802ec08:	d01b      	beq.n	802ec42 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x23a>
 802ec0a:	fb04 f400 	mul.w	r4, r4, r0
 802ec0e:	4627      	mov	r7, r4
 802ec10:	fb01 fe00 	mul.w	lr, r1, r0
 802ec14:	0a24      	lsrs	r4, r4, #8
 802ec16:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
 802ec1a:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 802ec1e:	f50e 7080 	add.w	r0, lr, #256	@ 0x100
 802ec22:	4427      	add	r7, r4
 802ec24:	eb00 201e 	add.w	r0, r0, lr, lsr #8
 802ec28:	0a3f      	lsrs	r7, r7, #8
 802ec2a:	0a00      	lsrs	r0, r0, #8
 802ec2c:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
 802ec30:	f400 407f 	and.w	r0, r0, #65280	@ 0xff00
 802ec34:	4307      	orrs	r7, r0
 802ec36:	f007 11ff 	and.w	r1, r7, #16711935	@ 0xff00ff
 802ec3a:	910b      	str	r1, [sp, #44]	@ 0x2c
 802ec3c:	f407 417f 	and.w	r1, r7, #65280	@ 0xff00
 802ec40:	910c      	str	r1, [sp, #48]	@ 0x30
 802ec42:	9806      	ldr	r0, [sp, #24]
 802ec44:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 802ec46:	28ff      	cmp	r0, #255	@ 0xff
 802ec48:	f001 17ff 	and.w	r7, r1, #16711935	@ 0xff00ff
 802ec4c:	f401 4e7f 	and.w	lr, r1, #65280	@ 0xff00
 802ec50:	d01a      	beq.n	802ec88 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x280>
 802ec52:	fb07 f700 	mul.w	r7, r7, r0
 802ec56:	fb0e fe00 	mul.w	lr, lr, r0
 802ec5a:	0a3c      	lsrs	r4, r7, #8
 802ec5c:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
 802ec60:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 802ec64:	f50e 7080 	add.w	r0, lr, #256	@ 0x100
 802ec68:	4427      	add	r7, r4
 802ec6a:	eb00 2e1e 	add.w	lr, r0, lr, lsr #8
 802ec6e:	0a3f      	lsrs	r7, r7, #8
 802ec70:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802ec74:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
 802ec78:	f40e 4e7f 	and.w	lr, lr, #65280	@ 0xff00
 802ec7c:	ea47 0e0e 	orr.w	lr, r7, lr
 802ec80:	f00e 17ff 	and.w	r7, lr, #16711935	@ 0xff00ff
 802ec84:	f40e 4e7f 	and.w	lr, lr, #65280	@ 0xff00
 802ec88:	9c07      	ldr	r4, [sp, #28]
 802ec8a:	9910      	ldr	r1, [sp, #64]	@ 0x40
 802ec8c:	2cff      	cmp	r4, #255	@ 0xff
 802ec8e:	f001 10ff 	and.w	r0, r1, #16711935	@ 0xff00ff
 802ec92:	f401 4a7f 	and.w	sl, r1, #65280	@ 0xff00
 802ec96:	d01b      	beq.n	802ecd0 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 802ec98:	fb00 f004 	mul.w	r0, r0, r4
 802ec9c:	fb0a fa04 	mul.w	sl, sl, r4
 802eca0:	ea4f 2810 	mov.w	r8, r0, lsr #8
 802eca4:	f008 18ff 	and.w	r8, r8, #16711935	@ 0xff00ff
 802eca8:	f100 1001 	add.w	r0, r0, #65537	@ 0x10001
 802ecac:	f50a 7480 	add.w	r4, sl, #256	@ 0x100
 802ecb0:	4440      	add	r0, r8
 802ecb2:	eb04 2a1a 	add.w	sl, r4, sl, lsr #8
 802ecb6:	0a00      	lsrs	r0, r0, #8
 802ecb8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802ecbc:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 802ecc0:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 802ecc4:	ea40 0a0a 	orr.w	sl, r0, sl
 802ecc8:	f00a 10ff 	and.w	r0, sl, #16711935	@ 0xff00ff
 802eccc:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 802ecd0:	9c08      	ldr	r4, [sp, #32]
 802ecd2:	9912      	ldr	r1, [sp, #72]	@ 0x48
 802ecd4:	2cff      	cmp	r4, #255	@ 0xff
 802ecd6:	f001 18ff 	and.w	r8, r1, #16711935	@ 0xff00ff
 802ecda:	f401 4b7f 	and.w	fp, r1, #65280	@ 0xff00
 802ecde:	d01b      	beq.n	802ed18 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x310>
 802ece0:	fb08 f804 	mul.w	r8, r8, r4
 802ece4:	fb0b fb04 	mul.w	fp, fp, r4
 802ece8:	ea4f 2418 	mov.w	r4, r8, lsr #8
 802ecec:	f004 11ff 	and.w	r1, r4, #16711935	@ 0xff00ff
 802ecf0:	f108 1801 	add.w	r8, r8, #65537	@ 0x10001
 802ecf4:	f50b 7480 	add.w	r4, fp, #256	@ 0x100
 802ecf8:	eb04 241b 	add.w	r4, r4, fp, lsr #8
 802ecfc:	4488      	add	r8, r1
 802ecfe:	ea4f 2818 	mov.w	r8, r8, lsr #8
 802ed02:	0a24      	lsrs	r4, r4, #8
 802ed04:	f008 18ff 	and.w	r8, r8, #16711935	@ 0xff00ff
 802ed08:	f404 4b7f 	and.w	fp, r4, #65280	@ 0xff00
 802ed0c:	ea48 0b0b 	orr.w	fp, r8, fp
 802ed10:	f00b 18ff 	and.w	r8, fp, #16711935	@ 0xff00ff
 802ed14:	f40b 4b7f 	and.w	fp, fp, #65280	@ 0xff00
 802ed18:	9909      	ldr	r1, [sp, #36]	@ 0x24
 802ed1a:	fb07 f706 	mul.w	r7, r7, r6
 802ed1e:	43c9      	mvns	r1, r1
 802ed20:	fb0e f606 	mul.w	r6, lr, r6
 802ed24:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 802ed26:	f81c ec02 	ldrb.w	lr, [ip, #-2]
 802ed2a:	fb04 7703 	mla	r7, r4, r3, r7
 802ed2e:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 802ed30:	fb00 7702 	mla	r7, r0, r2, r7
 802ed34:	fb04 6603 	mla	r6, r4, r3, r6
 802ed38:	fb0a 6602 	mla	r6, sl, r2, r6
 802ed3c:	f81c 3c03 	ldrb.w	r3, [ip, #-3]
 802ed40:	fb0b 6b05 	mla	fp, fp, r5, r6
 802ed44:	fb08 7805 	mla	r8, r8, r5, r7
 802ed48:	f81c 4c01 	ldrb.w	r4, [ip, #-1]
 802ed4c:	b2c9      	uxtb	r1, r1
 802ed4e:	fb0e fe01 	mul.w	lr, lr, r1
 802ed52:	fb04 f401 	mul.w	r4, r4, r1
 802ed56:	fb03 f101 	mul.w	r1, r3, r1
 802ed5a:	ea4f 2818 	mov.w	r8, r8, lsr #8
 802ed5e:	ea4f 2b1b 	mov.w	fp, fp, lsr #8
 802ed62:	f008 18ff 	and.w	r8, r8, #16711935	@ 0xff00ff
 802ed66:	f40b 4b7f 	and.w	fp, fp, #65280	@ 0xff00
 802ed6a:	ea48 030b 	orr.w	r3, r8, fp
 802ed6e:	f10e 0201 	add.w	r2, lr, #1
 802ed72:	1c66      	adds	r6, r4, #1
 802ed74:	1c4d      	adds	r5, r1, #1
 802ed76:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 802ed7a:	0a18      	lsrs	r0, r3, #8
 802ed7c:	0c1a      	lsrs	r2, r3, #16
 802ed7e:	eb06 2414 	add.w	r4, r6, r4, lsr #8
 802ed82:	eb05 2111 	add.w	r1, r5, r1, lsr #8
 802ed86:	eb00 2e1e 	add.w	lr, r0, lr, lsr #8
 802ed8a:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 802ed8e:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 802ed92:	f80c ec02 	strb.w	lr, [ip, #-2]
 802ed96:	f80c 4c01 	strb.w	r4, [ip, #-1]
 802ed9a:	f80c 1c03 	strb.w	r1, [ip, #-3]
 802ed9e:	9b39      	ldr	r3, [sp, #228]	@ 0xe4
 802eda0:	9a3a      	ldr	r2, [sp, #232]	@ 0xe8
 802eda2:	4499      	add	r9, r3
 802eda4:	9b38      	ldr	r3, [sp, #224]	@ 0xe0
 802eda6:	4413      	add	r3, r2
 802eda8:	9338      	str	r3, [sp, #224]	@ 0xe0
 802edaa:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 802edac:	4563      	cmp	r3, ip
 802edae:	d024      	beq.n	802edfa <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 802edb0:	9b3e      	ldr	r3, [sp, #248]	@ 0xf8
 802edb2:	f10c 0c03 	add.w	ip, ip, #3
 802edb6:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802edba:	9b38      	ldr	r3, [sp, #224]	@ 0xe0
 802edbc:	ea4f 4229 	mov.w	r2, r9, asr #16
 802edc0:	141b      	asrs	r3, r3, #16
 802edc2:	fb01 2303 	mla	r3, r1, r3, r2
 802edc6:	980e      	ldr	r0, [sp, #56]	@ 0x38
 802edc8:	9e0a      	ldr	r6, [sp, #40]	@ 0x28
 802edca:	5cc2      	ldrb	r2, [r0, r3]
 802edcc:	f3c9 3403 	ubfx	r4, r9, #12, #4
 802edd0:	f856 7022 	ldr.w	r7, [r6, r2, lsl #2]
 802edd4:	9a38      	ldr	r2, [sp, #224]	@ 0xe0
 802edd6:	4403      	add	r3, r0
 802edd8:	f3c2 3203 	ubfx	r2, r2, #12, #4
 802eddc:	0e38      	lsrs	r0, r7, #24
 802edde:	2c00      	cmp	r4, #0
 802ede0:	f47f aed7 	bne.w	802eb92 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18a>
 802ede4:	2a00      	cmp	r2, #0
 802ede6:	f43f aee9 	beq.w	802ebbc <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
 802edea:	5c5b      	ldrb	r3, [r3, r1]
 802edec:	990a      	ldr	r1, [sp, #40]	@ 0x28
 802edee:	f851 3023 	ldr.w	r3, [r1, r3, lsl #2]
 802edf2:	9310      	str	r3, [sp, #64]	@ 0x40
 802edf4:	0e1b      	lsrs	r3, r3, #24
 802edf6:	9307      	str	r3, [sp, #28]
 802edf8:	e6e0      	b.n	802ebbc <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
 802edfa:	469b      	mov	fp, r3
 802edfc:	e665      	b.n	802eaca <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xc2>
 802edfe:	2b00      	cmp	r3, #0
 802ee00:	f77f ae63 	ble.w	802eaca <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xc2>
 802ee04:	f8dd a024 	ldr.w	sl, [sp, #36]	@ 0x24
 802ee08:	ea4f 4228 	mov.w	r2, r8, asr #16
 802ee0c:	1439      	asrs	r1, r7, #16
 802ee0e:	2a00      	cmp	r2, #0
 802ee10:	46d9      	mov	r9, fp
 802ee12:	f8cd b02c 	str.w	fp, [sp, #44]	@ 0x2c
 802ee16:	9c3e      	ldr	r4, [sp, #248]	@ 0xf8
 802ee18:	e9dd b539 	ldrd	fp, r5, [sp, #228]	@ 0xe4
 802ee1c:	f3c8 3003 	ubfx	r0, r8, #12, #4
 802ee20:	f3c7 3e03 	ubfx	lr, r7, #12, #4
 802ee24:	f2c0 8141 	blt.w	802f0aa <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a2>
 802ee28:	1e73      	subs	r3, r6, #1
 802ee2a:	429a      	cmp	r2, r3
 802ee2c:	f280 813d 	bge.w	802f0aa <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a2>
 802ee30:	2900      	cmp	r1, #0
 802ee32:	f2c0 813a 	blt.w	802f0aa <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a2>
 802ee36:	f10c 33ff 	add.w	r3, ip, #4294967295
 802ee3a:	4299      	cmp	r1, r3
 802ee3c:	f280 8135 	bge.w	802f0aa <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a2>
 802ee40:	b233      	sxth	r3, r6
 802ee42:	fb01 2203 	mla	r2, r1, r3, r2
 802ee46:	990e      	ldr	r1, [sp, #56]	@ 0x38
 802ee48:	930c      	str	r3, [sp, #48]	@ 0x30
 802ee4a:	5c8b      	ldrb	r3, [r1, r2]
 802ee4c:	440a      	add	r2, r1
 802ee4e:	990a      	ldr	r1, [sp, #40]	@ 0x28
 802ee50:	4616      	mov	r6, r2
 802ee52:	f851 3023 	ldr.w	r3, [r1, r3, lsl #2]
 802ee56:	930d      	str	r3, [sp, #52]	@ 0x34
 802ee58:	0e1b      	lsrs	r3, r3, #24
 802ee5a:	2800      	cmp	r0, #0
 802ee5c:	f000 8153 	beq.w	802f106 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6fe>
 802ee60:	f896 c001 	ldrb.w	ip, [r6, #1]
 802ee64:	f851 202c 	ldr.w	r2, [r1, ip, lsl #2]
 802ee68:	921f      	str	r2, [sp, #124]	@ 0x7c
 802ee6a:	0e12      	lsrs	r2, r2, #24
 802ee6c:	9214      	str	r2, [sp, #80]	@ 0x50
 802ee6e:	f1be 0f00 	cmp.w	lr, #0
 802ee72:	f040 8155 	bne.w	802f120 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x718>
 802ee76:	b280      	uxth	r0, r0
 802ee78:	fa1f fc8e 	uxth.w	ip, lr
 802ee7c:	fb00 f20c 	mul.w	r2, r0, ip
 802ee80:	0106      	lsls	r6, r0, #4
 802ee82:	1ab0      	subs	r0, r6, r2
 802ee84:	b281      	uxth	r1, r0
 802ee86:	9814      	ldr	r0, [sp, #80]	@ 0x50
 802ee88:	ebc2 1c0c 	rsb	ip, r2, ip, lsl #4
 802ee8c:	fb01 f000 	mul.w	r0, r1, r0
 802ee90:	9117      	str	r1, [sp, #92]	@ 0x5c
 802ee92:	f5c6 7680 	rsb	r6, r6, #256	@ 0x100
 802ee96:	fa1f f18c 	uxth.w	r1, ip
 802ee9a:	1a76      	subs	r6, r6, r1
 802ee9c:	b2b6      	uxth	r6, r6
 802ee9e:	9619      	str	r6, [sp, #100]	@ 0x64
 802eea0:	fb06 0603 	mla	r6, r6, r3, r0
 802eea4:	9815      	ldr	r0, [sp, #84]	@ 0x54
 802eea6:	9118      	str	r1, [sp, #96]	@ 0x60
 802eea8:	fb01 6600 	mla	r6, r1, r0, r6
 802eeac:	9916      	ldr	r1, [sp, #88]	@ 0x58
 802eeae:	fb02 6601 	mla	r6, r2, r1, r6
 802eeb2:	f3c6 2107 	ubfx	r1, r6, #8, #8
 802eeb6:	911a      	str	r1, [sp, #104]	@ 0x68
 802eeb8:	2900      	cmp	r1, #0
 802eeba:	f000 80e0 	beq.w	802f07e <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x676>
 802eebe:	980d      	ldr	r0, [sp, #52]	@ 0x34
 802eec0:	2bff      	cmp	r3, #255	@ 0xff
 802eec2:	f000 11ff 	and.w	r1, r0, #16711935	@ 0xff00ff
 802eec6:	f400 407f 	and.w	r0, r0, #65280	@ 0xff00
 802eeca:	910d      	str	r1, [sp, #52]	@ 0x34
 802eecc:	901b      	str	r0, [sp, #108]	@ 0x6c
 802eece:	d01c      	beq.n	802ef0a <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x502>
 802eed0:	fb01 f103 	mul.w	r1, r1, r3
 802eed4:	fb00 f003 	mul.w	r0, r0, r3
 802eed8:	460e      	mov	r6, r1
 802eeda:	4603      	mov	r3, r0
 802eedc:	0a09      	lsrs	r1, r1, #8
 802eede:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 802eee2:	f106 1601 	add.w	r6, r6, #65537	@ 0x10001
 802eee6:	f500 7080 	add.w	r0, r0, #256	@ 0x100
 802eeea:	4431      	add	r1, r6
 802eeec:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 802eef0:	0a09      	lsrs	r1, r1, #8
 802eef2:	0a1b      	lsrs	r3, r3, #8
 802eef4:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 802eef8:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 802eefc:	430b      	orrs	r3, r1
 802eefe:	f003 11ff 	and.w	r1, r3, #16711935	@ 0xff00ff
 802ef02:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 802ef06:	910d      	str	r1, [sp, #52]	@ 0x34
 802ef08:	931b      	str	r3, [sp, #108]	@ 0x6c
 802ef0a:	991f      	ldr	r1, [sp, #124]	@ 0x7c
 802ef0c:	f001 13ff 	and.w	r3, r1, #16711935	@ 0xff00ff
 802ef10:	f401 467f 	and.w	r6, r1, #65280	@ 0xff00
 802ef14:	9914      	ldr	r1, [sp, #80]	@ 0x50
 802ef16:	931c      	str	r3, [sp, #112]	@ 0x70
 802ef18:	29ff      	cmp	r1, #255	@ 0xff
 802ef1a:	d019      	beq.n	802ef50 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x548>
 802ef1c:	fb03 f301 	mul.w	r3, r3, r1
 802ef20:	fb06 f601 	mul.w	r6, r6, r1
 802ef24:	0a19      	lsrs	r1, r3, #8
 802ef26:	f103 1001 	add.w	r0, r3, #65537	@ 0x10001
 802ef2a:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 802ef2e:	f506 7380 	add.w	r3, r6, #256	@ 0x100
 802ef32:	eb03 2316 	add.w	r3, r3, r6, lsr #8
 802ef36:	4401      	add	r1, r0
 802ef38:	0a09      	lsrs	r1, r1, #8
 802ef3a:	0a1b      	lsrs	r3, r3, #8
 802ef3c:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 802ef40:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 802ef44:	4319      	orrs	r1, r3
 802ef46:	f001 13ff 	and.w	r3, r1, #16711935	@ 0xff00ff
 802ef4a:	931c      	str	r3, [sp, #112]	@ 0x70
 802ef4c:	f401 467f 	and.w	r6, r1, #65280	@ 0xff00
 802ef50:	9920      	ldr	r1, [sp, #128]	@ 0x80
 802ef52:	f001 13ff 	and.w	r3, r1, #16711935	@ 0xff00ff
 802ef56:	f401 407f 	and.w	r0, r1, #65280	@ 0xff00
 802ef5a:	9915      	ldr	r1, [sp, #84]	@ 0x54
 802ef5c:	930c      	str	r3, [sp, #48]	@ 0x30
 802ef5e:	29ff      	cmp	r1, #255	@ 0xff
 802ef60:	901d      	str	r0, [sp, #116]	@ 0x74
 802ef62:	d01a      	beq.n	802ef9a <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x592>
 802ef64:	fb03 f301 	mul.w	r3, r3, r1
 802ef68:	fb00 fc01 	mul.w	ip, r0, r1
 802ef6c:	0a19      	lsrs	r1, r3, #8
 802ef6e:	f103 1001 	add.w	r0, r3, #65537	@ 0x10001
 802ef72:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 802ef76:	f50c 7380 	add.w	r3, ip, #256	@ 0x100
 802ef7a:	4401      	add	r1, r0
 802ef7c:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 802ef80:	0a09      	lsrs	r1, r1, #8
 802ef82:	0a1b      	lsrs	r3, r3, #8
 802ef84:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 802ef88:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 802ef8c:	4319      	orrs	r1, r3
 802ef8e:	f001 13ff 	and.w	r3, r1, #16711935	@ 0xff00ff
 802ef92:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 802ef96:	930c      	str	r3, [sp, #48]	@ 0x30
 802ef98:	911d      	str	r1, [sp, #116]	@ 0x74
 802ef9a:	9921      	ldr	r1, [sp, #132]	@ 0x84
 802ef9c:	f001 1cff 	and.w	ip, r1, #16711935	@ 0xff00ff
 802efa0:	f401 4e7f 	and.w	lr, r1, #65280	@ 0xff00
 802efa4:	9916      	ldr	r1, [sp, #88]	@ 0x58
 802efa6:	29ff      	cmp	r1, #255	@ 0xff
 802efa8:	d01c      	beq.n	802efe4 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5dc>
 802efaa:	fb0c fc01 	mul.w	ip, ip, r1
 802efae:	fb0e fe01 	mul.w	lr, lr, r1
 802efb2:	ea4f 201c 	mov.w	r0, ip, lsr #8
 802efb6:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 802efba:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 802efbe:	f50e 7180 	add.w	r1, lr, #256	@ 0x100
 802efc2:	4484      	add	ip, r0
 802efc4:	eb01 2e1e 	add.w	lr, r1, lr, lsr #8
 802efc8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802efcc:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802efd0:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 802efd4:	f40e 4e7f 	and.w	lr, lr, #65280	@ 0xff00
 802efd8:	ea4c 0e0e 	orr.w	lr, ip, lr
 802efdc:	f00e 1cff 	and.w	ip, lr, #16711935	@ 0xff00ff
 802efe0:	f40e 4e7f 	and.w	lr, lr, #65280	@ 0xff00
 802efe4:	991a      	ldr	r1, [sp, #104]	@ 0x68
 802efe6:	981c      	ldr	r0, [sp, #112]	@ 0x70
 802efe8:	43c9      	mvns	r1, r1
 802efea:	911a      	str	r1, [sp, #104]	@ 0x68
 802efec:	9917      	ldr	r1, [sp, #92]	@ 0x5c
 802efee:	fb00 f001 	mul.w	r0, r0, r1
 802eff2:	fb06 f301 	mul.w	r3, r6, r1
 802eff6:	9e19      	ldr	r6, [sp, #100]	@ 0x64
 802eff8:	990d      	ldr	r1, [sp, #52]	@ 0x34
 802effa:	fb01 0006 	mla	r0, r1, r6, r0
 802effe:	991b      	ldr	r1, [sp, #108]	@ 0x6c
 802f000:	fb01 3106 	mla	r1, r1, r6, r3
 802f004:	9e18      	ldr	r6, [sp, #96]	@ 0x60
 802f006:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 802f008:	910d      	str	r1, [sp, #52]	@ 0x34
 802f00a:	fb03 0306 	mla	r3, r3, r6, r0
 802f00e:	990d      	ldr	r1, [sp, #52]	@ 0x34
 802f010:	981d      	ldr	r0, [sp, #116]	@ 0x74
 802f012:	fb0c 3302 	mla	r3, ip, r2, r3
 802f016:	fb00 1106 	mla	r1, r0, r6, r1
 802f01a:	f89d 6068 	ldrb.w	r6, [sp, #104]	@ 0x68
 802f01e:	f899 0002 	ldrb.w	r0, [r9, #2]
 802f022:	fb0e 1e02 	mla	lr, lr, r2, r1
 802f026:	f899 2001 	ldrb.w	r2, [r9, #1]
 802f02a:	f899 1000 	ldrb.w	r1, [r9]
 802f02e:	fb00 f006 	mul.w	r0, r0, r6
 802f032:	fb02 fc06 	mul.w	ip, r2, r6
 802f036:	fb01 f106 	mul.w	r1, r1, r6
 802f03a:	0a1b      	lsrs	r3, r3, #8
 802f03c:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802f040:	f003 12ff 	and.w	r2, r3, #16711935	@ 0xff00ff
 802f044:	1c46      	adds	r6, r0, #1
 802f046:	f40e 437f 	and.w	r3, lr, #65280	@ 0xff00
 802f04a:	4313      	orrs	r3, r2
 802f04c:	eb06 2010 	add.w	r0, r6, r0, lsr #8
 802f050:	f10c 0201 	add.w	r2, ip, #1
 802f054:	1c4e      	adds	r6, r1, #1
 802f056:	ea4f 2e13 	mov.w	lr, r3, lsr #8
 802f05a:	eb02 221c 	add.w	r2, r2, ip, lsr #8
 802f05e:	eb06 2111 	add.w	r1, r6, r1, lsr #8
 802f062:	ea4f 4c13 	mov.w	ip, r3, lsr #16
 802f066:	eb0e 2212 	add.w	r2, lr, r2, lsr #8
 802f06a:	eb0c 2010 	add.w	r0, ip, r0, lsr #8
 802f06e:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 802f072:	f889 2001 	strb.w	r2, [r9, #1]
 802f076:	f889 0002 	strb.w	r0, [r9, #2]
 802f07a:	f889 3000 	strb.w	r3, [r9]
 802f07e:	f1ba 0f00 	cmp.w	sl, #0
 802f082:	f109 0903 	add.w	r9, r9, #3
 802f086:	44d8      	add	r8, fp
 802f088:	442f      	add	r7, r5
 802f08a:	dd2c      	ble.n	802f0e6 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6de>
 802f08c:	e9d4 6c02 	ldrd	r6, ip, [r4, #8]
 802f090:	ea4f 4228 	mov.w	r2, r8, asr #16
 802f094:	2a00      	cmp	r2, #0
 802f096:	f10a 3aff 	add.w	sl, sl, #4294967295
 802f09a:	ea4f 4127 	mov.w	r1, r7, asr #16
 802f09e:	f3c8 3003 	ubfx	r0, r8, #12, #4
 802f0a2:	f3c7 3e03 	ubfx	lr, r7, #12, #4
 802f0a6:	f6bf aebf 	bge.w	802ee28 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x420>
 802f0aa:	1c53      	adds	r3, r2, #1
 802f0ac:	d4e7      	bmi.n	802f07e <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x676>
 802f0ae:	42b3      	cmp	r3, r6
 802f0b0:	dce5      	bgt.n	802f07e <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x676>
 802f0b2:	1c4b      	adds	r3, r1, #1
 802f0b4:	d4e3      	bmi.n	802f07e <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x676>
 802f0b6:	4563      	cmp	r3, ip
 802f0b8:	dce1      	bgt.n	802f07e <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x676>
 802f0ba:	fa0f f38c 	sxth.w	r3, ip
 802f0be:	b236      	sxth	r6, r6
 802f0c0:	e9cd 2102 	strd	r2, r1, [sp, #8]
 802f0c4:	e9cd 6300 	strd	r6, r3, [sp]
 802f0c8:	e9cd 0e04 	strd	r0, lr, [sp, #16]
 802f0cc:	4649      	mov	r1, r9
 802f0ce:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 802f0d0:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 802f0d2:	981e      	ldr	r0, [sp, #120]	@ 0x78
 802f0d4:	f7ff fb08 	bl	802e6e8 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh>
 802f0d8:	f1ba 0f00 	cmp.w	sl, #0
 802f0dc:	f109 0903 	add.w	r9, r9, #3
 802f0e0:	44d8      	add	r8, fp
 802f0e2:	442f      	add	r7, r5
 802f0e4:	dcd2      	bgt.n	802f08c <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x684>
 802f0e6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 802f0e8:	f8dd b02c 	ldr.w	fp, [sp, #44]	@ 0x2c
 802f0ec:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 802f0f0:	3301      	adds	r3, #1
 802f0f2:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 802f0f6:	449b      	add	fp, r3
 802f0f8:	e4e7      	b.n	802eaca <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xc2>
 802f0fa:	3b01      	subs	r3, #1
 802f0fc:	f8dd c024 	ldr.w	ip, [sp, #36]	@ 0x24
 802f100:	469a      	mov	sl, r3
 802f102:	9309      	str	r3, [sp, #36]	@ 0x24
 802f104:	e683      	b.n	802ee0e <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x406>
 802f106:	f1be 0f00 	cmp.w	lr, #0
 802f10a:	f43f aeb4 	beq.w	802ee76 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46e>
 802f10e:	990c      	ldr	r1, [sp, #48]	@ 0x30
 802f110:	5c72      	ldrb	r2, [r6, r1]
 802f112:	990a      	ldr	r1, [sp, #40]	@ 0x28
 802f114:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 802f118:	9220      	str	r2, [sp, #128]	@ 0x80
 802f11a:	0e12      	lsrs	r2, r2, #24
 802f11c:	9215      	str	r2, [sp, #84]	@ 0x54
 802f11e:	e6aa      	b.n	802ee76 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46e>
 802f120:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 802f122:	eb06 0c02 	add.w	ip, r6, r2
 802f126:	4632      	mov	r2, r6
 802f128:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 802f12a:	f89c c001 	ldrb.w	ip, [ip, #1]
 802f12e:	5d92      	ldrb	r2, [r2, r6]
 802f130:	f851 602c 	ldr.w	r6, [r1, ip, lsl #2]
 802f134:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 802f138:	0e31      	lsrs	r1, r6, #24
 802f13a:	9220      	str	r2, [sp, #128]	@ 0x80
 802f13c:	0e12      	lsrs	r2, r2, #24
 802f13e:	9621      	str	r6, [sp, #132]	@ 0x84
 802f140:	9116      	str	r1, [sp, #88]	@ 0x58
 802f142:	9215      	str	r2, [sp, #84]	@ 0x54
 802f144:	e697      	b.n	802ee76 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46e>
 802f146:	f43f acc0 	beq.w	802eaca <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xc2>
 802f14a:	1e65      	subs	r5, r4, #1
 802f14c:	e4fe      	b.n	802eb4c <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x144>
 802f14e:	bf00      	nop

0802f150 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhS4_ssiihhh>:
 802f150:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802f154:	b087      	sub	sp, #28
 802f156:	f89d b058 	ldrb.w	fp, [sp, #88]	@ 0x58
 802f15a:	f9bd 6040 	ldrsh.w	r6, [sp, #64]	@ 0x40
 802f15e:	ea6f 000b 	mvn.w	r0, fp
 802f162:	e9dd 4712 	ldrd	r4, r7, [sp, #72]	@ 0x48
 802f166:	fb07 4c06 	mla	ip, r7, r6, r4
 802f16a:	b2c0      	uxtb	r0, r0
 802f16c:	2f00      	cmp	r7, #0
 802f16e:	9002      	str	r0, [sp, #8]
 802f170:	eb02 0e0c 	add.w	lr, r2, ip
 802f174:	f107 0801 	add.w	r8, r7, #1
 802f178:	f9bd 9044 	ldrsh.w	r9, [sp, #68]	@ 0x44
 802f17c:	f89d 5050 	ldrb.w	r5, [sp, #80]	@ 0x50
 802f180:	f89d 0054 	ldrb.w	r0, [sp, #84]	@ 0x54
 802f184:	db02      	blt.n	802f18c <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhS4_ssiihhh+0x3c>
 802f186:	45b9      	cmp	r9, r7
 802f188:	f300 80a0 	bgt.w	802f2cc <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhS4_ssiihhh+0x17c>
 802f18c:	468c      	mov	ip, r1
 802f18e:	460f      	mov	r7, r1
 802f190:	780a      	ldrb	r2, [r1, #0]
 802f192:	9203      	str	r2, [sp, #12]
 802f194:	9201      	str	r2, [sp, #4]
 802f196:	f1b8 0f00 	cmp.w	r8, #0
 802f19a:	db01      	blt.n	802f1a0 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhS4_ssiihhh+0x50>
 802f19c:	45c1      	cmp	r9, r8
 802f19e:	dc7b      	bgt.n	802f298 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhS4_ssiihhh+0x148>
 802f1a0:	460b      	mov	r3, r1
 802f1a2:	4689      	mov	r9, r1
 802f1a4:	f891 a000 	ldrb.w	sl, [r1]
 802f1a8:	f8cd a014 	str.w	sl, [sp, #20]
 802f1ac:	2d0f      	cmp	r5, #15
 802f1ae:	f200 80cd 	bhi.w	802f34c <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhS4_ssiihhh+0x1fc>
 802f1b2:	280f      	cmp	r0, #15
 802f1b4:	f200 80ca 	bhi.w	802f34c <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhS4_ssiihhh+0x1fc>
 802f1b8:	780a      	ldrb	r2, [r1, #0]
 802f1ba:	9204      	str	r2, [sp, #16]
 802f1bc:	b2aa      	uxth	r2, r5
 802f1be:	b280      	uxth	r0, r0
 802f1c0:	fb02 f500 	mul.w	r5, r2, r0
 802f1c4:	0112      	lsls	r2, r2, #4
 802f1c6:	f89c 8001 	ldrb.w	r8, [ip, #1]
 802f1ca:	f89c e002 	ldrb.w	lr, [ip, #2]
 802f1ce:	1b54      	subs	r4, r2, r5
 802f1d0:	b2a4      	uxth	r4, r4
 802f1d2:	fb04 f808 	mul.w	r8, r4, r8
 802f1d6:	fb04 fe0e 	mul.w	lr, r4, lr
 802f1da:	ebc5 1000 	rsb	r0, r5, r0, lsl #4
 802f1de:	b280      	uxth	r0, r0
 802f1e0:	9e01      	ldr	r6, [sp, #4]
 802f1e2:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
 802f1e6:	f897 c001 	ldrb.w	ip, [r7, #1]
 802f1ea:	1a12      	subs	r2, r2, r0
 802f1ec:	78bf      	ldrb	r7, [r7, #2]
 802f1ee:	b292      	uxth	r2, r2
 802f1f0:	fb04 f406 	mul.w	r4, r4, r6
 802f1f4:	fb02 8c0c 	mla	ip, r2, ip, r8
 802f1f8:	fb02 e707 	mla	r7, r2, r7, lr
 802f1fc:	9e03      	ldr	r6, [sp, #12]
 802f1fe:	f899 8001 	ldrb.w	r8, [r9, #1]
 802f202:	f899 e002 	ldrb.w	lr, [r9, #2]
 802f206:	fb02 4206 	mla	r2, r2, r6, r4
 802f20a:	fb00 cc08 	mla	ip, r0, r8, ip
 802f20e:	fb00 770e 	mla	r7, r0, lr, r7
 802f212:	f893 8001 	ldrb.w	r8, [r3, #1]
 802f216:	f893 e002 	ldrb.w	lr, [r3, #2]
 802f21a:	fb00 220a 	mla	r2, r0, sl, r2
 802f21e:	fb05 c808 	mla	r8, r5, r8, ip
 802f222:	fb05 7e0e 	mla	lr, r5, lr, r7
 802f226:	9805      	ldr	r0, [sp, #20]
 802f228:	f8bd 9008 	ldrh.w	r9, [sp, #8]
 802f22c:	fb05 2500 	mla	r5, r5, r0, r2
 802f230:	9a04      	ldr	r2, [sp, #16]
 802f232:	fa1f f38b 	uxth.w	r3, fp
 802f236:	f3c8 2807 	ubfx	r8, r8, #8, #8
 802f23a:	f3ce 2e07 	ubfx	lr, lr, #8, #8
 802f23e:	fb12 f609 	smulbb	r6, r2, r9
 802f242:	fb1e fe03 	smulbb	lr, lr, r3
 802f246:	fb18 f803 	smulbb	r8, r8, r3
 802f24a:	784a      	ldrb	r2, [r1, #1]
 802f24c:	7888      	ldrb	r0, [r1, #2]
 802f24e:	f3c5 2507 	ubfx	r5, r5, #8, #8
 802f252:	fb05 6503 	mla	r5, r5, r3, r6
 802f256:	fb02 8809 	mla	r8, r2, r9, r8
 802f25a:	fb00 e909 	mla	r9, r0, r9, lr
 802f25e:	b2ad      	uxth	r5, r5
 802f260:	fa1f f888 	uxth.w	r8, r8
 802f264:	fa1f f989 	uxth.w	r9, r9
 802f268:	f108 0001 	add.w	r0, r8, #1
 802f26c:	f109 0201 	add.w	r2, r9, #1
 802f270:	1c6b      	adds	r3, r5, #1
 802f272:	eb00 2818 	add.w	r8, r0, r8, lsr #8
 802f276:	eb02 2919 	add.w	r9, r2, r9, lsr #8
 802f27a:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 802f27e:	ea4f 2828 	mov.w	r8, r8, asr #8
 802f282:	ea4f 2929 	mov.w	r9, r9, asr #8
 802f286:	122d      	asrs	r5, r5, #8
 802f288:	f881 8001 	strb.w	r8, [r1, #1]
 802f28c:	f881 9002 	strb.w	r9, [r1, #2]
 802f290:	700d      	strb	r5, [r1, #0]
 802f292:	b007      	add	sp, #28
 802f294:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802f298:	b388      	cbz	r0, 802f2fe <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhS4_ssiihhh+0x1ae>
 802f29a:	2c00      	cmp	r4, #0
 802f29c:	db44      	blt.n	802f328 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhS4_ssiihhh+0x1d8>
 802f29e:	42a6      	cmp	r6, r4
 802f2a0:	dd42      	ble.n	802f328 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhS4_ssiihhh+0x1d8>
 802f2a2:	f81e 9006 	ldrb.w	r9, [lr, r6]
 802f2a6:	eb09 0949 	add.w	r9, r9, r9, lsl #1
 802f2aa:	4499      	add	r9, r3
 802f2ac:	3401      	adds	r4, #1
 802f2ae:	f899 a000 	ldrb.w	sl, [r9]
 802f2b2:	d435      	bmi.n	802f320 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhS4_ssiihhh+0x1d0>
 802f2b4:	42a6      	cmp	r6, r4
 802f2b6:	dd33      	ble.n	802f320 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhS4_ssiihhh+0x1d0>
 802f2b8:	2d00      	cmp	r5, #0
 802f2ba:	d043      	beq.n	802f344 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhS4_ssiihhh+0x1f4>
 802f2bc:	4476      	add	r6, lr
 802f2be:	7872      	ldrb	r2, [r6, #1]
 802f2c0:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 802f2c4:	5c9c      	ldrb	r4, [r3, r2]
 802f2c6:	4413      	add	r3, r2
 802f2c8:	9405      	str	r4, [sp, #20]
 802f2ca:	e76f      	b.n	802f1ac <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhS4_ssiihhh+0x5c>
 802f2cc:	2c00      	cmp	r4, #0
 802f2ce:	db01      	blt.n	802f2d4 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhS4_ssiihhh+0x184>
 802f2d0:	42a6      	cmp	r6, r4
 802f2d2:	dc1f      	bgt.n	802f314 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhS4_ssiihhh+0x1c4>
 802f2d4:	460f      	mov	r7, r1
 802f2d6:	783a      	ldrb	r2, [r7, #0]
 802f2d8:	9203      	str	r2, [sp, #12]
 802f2da:	1c62      	adds	r2, r4, #1
 802f2dc:	d40b      	bmi.n	802f2f6 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhS4_ssiihhh+0x1a6>
 802f2de:	4296      	cmp	r6, r2
 802f2e0:	dd09      	ble.n	802f2f6 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhS4_ssiihhh+0x1a6>
 802f2e2:	b31d      	cbz	r5, 802f32c <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhS4_ssiihhh+0x1dc>
 802f2e4:	f89e c001 	ldrb.w	ip, [lr, #1]
 802f2e8:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 802f2ec:	f813 200c 	ldrb.w	r2, [r3, ip]
 802f2f0:	449c      	add	ip, r3
 802f2f2:	9201      	str	r2, [sp, #4]
 802f2f4:	e74f      	b.n	802f196 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhS4_ssiihhh+0x46>
 802f2f6:	780a      	ldrb	r2, [r1, #0]
 802f2f8:	468c      	mov	ip, r1
 802f2fa:	9201      	str	r2, [sp, #4]
 802f2fc:	e74b      	b.n	802f196 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhS4_ssiihhh+0x46>
 802f2fe:	2d0f      	cmp	r5, #15
 802f300:	f891 a000 	ldrb.w	sl, [r1]
 802f304:	d822      	bhi.n	802f34c <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhS4_ssiihhh+0x1fc>
 802f306:	f8cd a010 	str.w	sl, [sp, #16]
 802f30a:	460b      	mov	r3, r1
 802f30c:	4689      	mov	r9, r1
 802f30e:	f8cd a014 	str.w	sl, [sp, #20]
 802f312:	e753      	b.n	802f1bc <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhS4_ssiihhh+0x6c>
 802f314:	f812 700c 	ldrb.w	r7, [r2, ip]
 802f318:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 802f31c:	441f      	add	r7, r3
 802f31e:	e7da      	b.n	802f2d6 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhS4_ssiihhh+0x186>
 802f320:	780b      	ldrb	r3, [r1, #0]
 802f322:	9305      	str	r3, [sp, #20]
 802f324:	460b      	mov	r3, r1
 802f326:	e741      	b.n	802f1ac <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhS4_ssiihhh+0x5c>
 802f328:	4689      	mov	r9, r1
 802f32a:	e7bf      	b.n	802f2ac <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhS4_ssiihhh+0x15c>
 802f32c:	780a      	ldrb	r2, [r1, #0]
 802f32e:	f1b8 0f00 	cmp.w	r8, #0
 802f332:	9201      	str	r2, [sp, #4]
 802f334:	468c      	mov	ip, r1
 802f336:	f6bf af31 	bge.w	802f19c <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhS4_ssiihhh+0x4c>
 802f33a:	460b      	mov	r3, r1
 802f33c:	4689      	mov	r9, r1
 802f33e:	9205      	str	r2, [sp, #20]
 802f340:	4692      	mov	sl, r2
 802f342:	e736      	b.n	802f1b2 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhS4_ssiihhh+0x62>
 802f344:	780b      	ldrb	r3, [r1, #0]
 802f346:	9305      	str	r3, [sp, #20]
 802f348:	460b      	mov	r3, r1
 802f34a:	e732      	b.n	802f1b2 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhS4_ssiihhh+0x62>
 802f34c:	4b03      	ldr	r3, [pc, #12]	@ (802f35c <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhS4_ssiihhh+0x20c>)
 802f34e:	4a04      	ldr	r2, [pc, #16]	@ (802f360 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhS4_ssiihhh+0x210>)
 802f350:	f240 31ca 	movw	r1, #970	@ 0x3ca
 802f354:	4803      	ldr	r0, [pc, #12]	@ (802f364 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhS4_ssiihhh+0x214>)
 802f356:	f003 fa0f 	bl	8032778 <__assert_func>
 802f35a:	bf00      	nop
 802f35c:	08036954 	.word	0x08036954
 802f360:	08036fd0 	.word	0x08036fd0
 802f364:	08036adc 	.word	0x08036adc

0802f368 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 802f368:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802f36c:	ed2d 8b08 	vpush	{d8-d11}
 802f370:	b095      	sub	sp, #84	@ 0x54
 802f372:	f89d 40bc 	ldrb.w	r4, [sp, #188]	@ 0xbc
 802f376:	9013      	str	r0, [sp, #76]	@ 0x4c
 802f378:	43e0      	mvns	r0, r4
 802f37a:	e9dd a727 	ldrd	sl, r7, [sp, #156]	@ 0x9c
 802f37e:	eeb0 aa40 	vmov.f32	s20, s0
 802f382:	eef0 9a60 	vmov.f32	s19, s1
 802f386:	eeb0 9a41 	vmov.f32	s18, s2
 802f38a:	eef0 8a62 	vmov.f32	s17, s5
 802f38e:	eeb0 8a43 	vmov.f32	s16, s6
 802f392:	eef0 ba44 	vmov.f32	s23, s8
 802f396:	eeb0 ba64 	vmov.f32	s22, s9
 802f39a:	eef0 aa45 	vmov.f32	s21, s10
 802f39e:	e9cd 120e 	strd	r1, r2, [sp, #56]	@ 0x38
 802f3a2:	9411      	str	r4, [sp, #68]	@ 0x44
 802f3a4:	469b      	mov	fp, r3
 802f3a6:	e9dd 422b 	ldrd	r4, r2, [sp, #172]	@ 0xac
 802f3aa:	9b2d      	ldr	r3, [sp, #180]	@ 0xb4
 802f3ac:	6861      	ldr	r1, [r4, #4]
 802f3ae:	fb01 2303 	mla	r3, r1, r3, r2
 802f3b2:	6821      	ldr	r1, [r4, #0]
 802f3b4:	9a2e      	ldr	r2, [sp, #184]	@ 0xb8
 802f3b6:	9c2e      	ldr	r4, [sp, #184]	@ 0xb8
 802f3b8:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 802f3bc:	6852      	ldr	r2, [r2, #4]
 802f3be:	6824      	ldr	r4, [r4, #0]
 802f3c0:	930d      	str	r3, [sp, #52]	@ 0x34
 802f3c2:	b2c3      	uxtb	r3, r0
 802f3c4:	930b      	str	r3, [sp, #44]	@ 0x2c
 802f3c6:	1d13      	adds	r3, r2, #4
 802f3c8:	940a      	str	r4, [sp, #40]	@ 0x28
 802f3ca:	9308      	str	r3, [sp, #32]
 802f3cc:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 802f3ce:	2b00      	cmp	r3, #0
 802f3d0:	dc02      	bgt.n	802f3d8 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 802f3d2:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 802f3d4:	2b00      	cmp	r3, #0
 802f3d6:	dd6c      	ble.n	802f4b2 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 802f3d8:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
 802f3da:	f1bb 0f00 	cmp.w	fp, #0
 802f3de:	e9d3 5e02 	ldrd	r5, lr, [r3, #8]
 802f3e2:	b228      	sxth	r0, r5
 802f3e4:	fa0f f68e 	sxth.w	r6, lr
 802f3e8:	f340 8245 	ble.w	802f876 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50e>
 802f3ec:	e9dd 8929 	ldrd	r8, r9, [sp, #164]	@ 0xa4
 802f3f0:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 802f3f2:	1e44      	subs	r4, r0, #1
 802f3f4:	f106 3cff 	add.w	ip, r6, #4294967295
 802f3f8:	f8cd e024 	str.w	lr, [sp, #36]	@ 0x24
 802f3fc:	ea5f 432a 	movs.w	r3, sl, asr #16
 802f400:	ea4f 4127 	mov.w	r1, r7, asr #16
 802f404:	d405      	bmi.n	802f412 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 802f406:	42a3      	cmp	r3, r4
 802f408:	da03      	bge.n	802f412 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 802f40a:	2900      	cmp	r1, #0
 802f40c:	db01      	blt.n	802f412 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 802f40e:	4561      	cmp	r1, ip
 802f410:	db54      	blt.n	802f4bc <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 802f412:	f113 0e01 	adds.w	lr, r3, #1
 802f416:	d407      	bmi.n	802f428 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xc0>
 802f418:	4586      	cmp	lr, r0
 802f41a:	dc05      	bgt.n	802f428 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xc0>
 802f41c:	f111 0e01 	adds.w	lr, r1, #1
 802f420:	d402      	bmi.n	802f428 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xc0>
 802f422:	45b6      	cmp	lr, r6
 802f424:	f340 8189 	ble.w	802f73a <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d2>
 802f428:	f1bb 0b01 	subs.w	fp, fp, #1
 802f42c:	44c2      	add	sl, r8
 802f42e:	444f      	add	r7, r9
 802f430:	f102 0204 	add.w	r2, r2, #4
 802f434:	d1e2      	bne.n	802f3fc <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 802f436:	920d      	str	r2, [sp, #52]	@ 0x34
 802f438:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 802f43a:	2b00      	cmp	r3, #0
 802f43c:	dd39      	ble.n	802f4b2 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 802f43e:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 802f442:	ee3a aa2b 	vadd.f32	s20, s20, s23
 802f446:	ee79 9a8b 	vadd.f32	s19, s19, s22
 802f44a:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 802f44e:	ee39 9a2a 	vadd.f32	s18, s18, s21
 802f452:	ee29 6aa7 	vmul.f32	s12, s19, s15
 802f456:	ee69 7a27 	vmul.f32	s15, s18, s15
 802f45a:	ee76 6a68 	vsub.f32	s13, s12, s17
 802f45e:	ee37 7ac8 	vsub.f32	s14, s15, s16
 802f462:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802f466:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 802f46a:	ee16 2a90 	vmov	r2, s13
 802f46e:	3b01      	subs	r3, #1
 802f470:	930e      	str	r3, [sp, #56]	@ 0x38
 802f472:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 802f474:	fb92 f3f3 	sdiv	r3, r2, r3
 802f478:	ee17 2a10 	vmov	r2, s14
 802f47c:	eeb0 7a48 	vmov.f32	s14, s16
 802f480:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 802f484:	ee17 7a10 	vmov	r7, s14
 802f488:	eeb0 7a68 	vmov.f32	s14, s17
 802f48c:	9329      	str	r3, [sp, #164]	@ 0xa4
 802f48e:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 802f490:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 802f494:	fb92 f3f3 	sdiv	r3, r2, r3
 802f498:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 802f49a:	932a      	str	r3, [sp, #168]	@ 0xa8
 802f49c:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 802f49e:	ee17 aa10 	vmov	sl, s14
 802f4a2:	eeb0 8a67 	vmov.f32	s16, s15
 802f4a6:	eef0 8a46 	vmov.f32	s17, s12
 802f4aa:	bf14      	ite	ne
 802f4ac:	469b      	movne	fp, r3
 802f4ae:	4693      	moveq	fp, r2
 802f4b0:	e78c      	b.n	802f3cc <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 802f4b2:	b015      	add	sp, #84	@ 0x54
 802f4b4:	ecbd 8b08 	vpop	{d8-d11}
 802f4b8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802f4bc:	f8dd e024 	ldr.w	lr, [sp, #36]	@ 0x24
 802f4c0:	920d      	str	r2, [sp, #52]	@ 0x34
 802f4c2:	9929      	ldr	r1, [sp, #164]	@ 0xa4
 802f4c4:	f10b 32ff 	add.w	r2, fp, #4294967295
 802f4c8:	fb01 a302 	mla	r3, r1, r2, sl
 802f4cc:	141b      	asrs	r3, r3, #16
 802f4ce:	9209      	str	r2, [sp, #36]	@ 0x24
 802f4d0:	f100 80d3 	bmi.w	802f67a <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x312>
 802f4d4:	42a3      	cmp	r3, r4
 802f4d6:	f280 80d0 	bge.w	802f67a <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x312>
 802f4da:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 802f4dc:	fb03 7302 	mla	r3, r3, r2, r7
 802f4e0:	141b      	asrs	r3, r3, #16
 802f4e2:	f100 80ca 	bmi.w	802f67a <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x312>
 802f4e6:	3e01      	subs	r6, #1
 802f4e8:	42b3      	cmp	r3, r6
 802f4ea:	f280 80c6 	bge.w	802f67a <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x312>
 802f4ee:	f1bb 0f00 	cmp.w	fp, #0
 802f4f2:	dda1      	ble.n	802f438 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xd0>
 802f4f4:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
 802f4f8:	f8cd b040 	str.w	fp, [sp, #64]	@ 0x40
 802f4fc:	930c      	str	r3, [sp, #48]	@ 0x30
 802f4fe:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 802f500:	f103 0804 	add.w	r8, r3, #4
 802f504:	e08f      	b.n	802f626 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2be>
 802f506:	7861      	ldrb	r1, [r4, #1]
 802f508:	eb04 0c00 	add.w	ip, r4, r0
 802f50c:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 802f510:	4431      	add	r1, r6
 802f512:	2a00      	cmp	r2, #0
 802f514:	f000 80a3 	beq.w	802f65e <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f6>
 802f518:	5c20      	ldrb	r0, [r4, r0]
 802f51a:	f89c c001 	ldrb.w	ip, [ip, #1]
 802f51e:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 802f522:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 802f526:	4430      	add	r0, r6
 802f528:	44b4      	add	ip, r6
 802f52a:	b29b      	uxth	r3, r3
 802f52c:	b292      	uxth	r2, r2
 802f52e:	fb03 f402 	mul.w	r4, r3, r2
 802f532:	011b      	lsls	r3, r3, #4
 802f534:	f891 b001 	ldrb.w	fp, [r1, #1]
 802f538:	1b1e      	subs	r6, r3, r4
 802f53a:	f891 9002 	ldrb.w	r9, [r1, #2]
 802f53e:	b2b6      	uxth	r6, r6
 802f540:	7809      	ldrb	r1, [r1, #0]
 802f542:	fb06 fb0b 	mul.w	fp, r6, fp
 802f546:	ebc4 1202 	rsb	r2, r4, r2, lsl #4
 802f54a:	b292      	uxth	r2, r2
 802f54c:	fb06 f909 	mul.w	r9, r6, r9
 802f550:	f5c3 7380 	rsb	r3, r3, #256	@ 0x100
 802f554:	fb06 f601 	mul.w	r6, r6, r1
 802f558:	1a9b      	subs	r3, r3, r2
 802f55a:	f89e 1001 	ldrb.w	r1, [lr, #1]
 802f55e:	b29b      	uxth	r3, r3
 802f560:	f89e e002 	ldrb.w	lr, [lr, #2]
 802f564:	fb03 bb01 	mla	fp, r3, r1, fp
 802f568:	9908      	ldr	r1, [sp, #32]
 802f56a:	fb03 990e 	mla	r9, r3, lr, r9
 802f56e:	5d49      	ldrb	r1, [r1, r5]
 802f570:	7885      	ldrb	r5, [r0, #2]
 802f572:	fb03 6301 	mla	r3, r3, r1, r6
 802f576:	f890 e001 	ldrb.w	lr, [r0, #1]
 802f57a:	fb02 9905 	mla	r9, r2, r5, r9
 802f57e:	7801      	ldrb	r1, [r0, #0]
 802f580:	fb02 bb0e 	mla	fp, r2, lr, fp
 802f584:	f89c 0002 	ldrb.w	r0, [ip, #2]
 802f588:	fb02 3301 	mla	r3, r2, r1, r3
 802f58c:	f89c e001 	ldrb.w	lr, [ip, #1]
 802f590:	fb04 9900 	mla	r9, r4, r0, r9
 802f594:	f89c 1000 	ldrb.w	r1, [ip]
 802f598:	fb04 bb0e 	mla	fp, r4, lr, fp
 802f59c:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 802f59e:	f818 cc04 	ldrb.w	ip, [r8, #-4]
 802f5a2:	fb04 3301 	mla	r3, r4, r1, r3
 802f5a6:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 802f5a8:	f3c9 2907 	ubfx	r9, r9, #8, #8
 802f5ac:	fb19 f902 	smulbb	r9, r9, r2
 802f5b0:	fb1c fc01 	smulbb	ip, ip, r1
 802f5b4:	f3cb 2b07 	ubfx	fp, fp, #8, #8
 802f5b8:	f818 5c02 	ldrb.w	r5, [r8, #-2]
 802f5bc:	fb1b fb02 	smulbb	fp, fp, r2
 802f5c0:	f3c3 2307 	ubfx	r3, r3, #8, #8
 802f5c4:	f818 6c03 	ldrb.w	r6, [r8, #-3]
 802f5c8:	fb05 9901 	mla	r9, r5, r1, r9
 802f5cc:	fb03 c302 	mla	r3, r3, r2, ip
 802f5d0:	fb06 bb01 	mla	fp, r6, r1, fp
 802f5d4:	fa1f f989 	uxth.w	r9, r9
 802f5d8:	b29b      	uxth	r3, r3
 802f5da:	f109 0101 	add.w	r1, r9, #1
 802f5de:	1c5a      	adds	r2, r3, #1
 802f5e0:	fa1f fb8b 	uxth.w	fp, fp
 802f5e4:	eb01 2919 	add.w	r9, r1, r9, lsr #8
 802f5e8:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 802f5ec:	9929      	ldr	r1, [sp, #164]	@ 0xa4
 802f5ee:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 802f5f0:	f10b 0001 	add.w	r0, fp, #1
 802f5f4:	3a01      	subs	r2, #1
 802f5f6:	eb00 2b1b 	add.w	fp, r0, fp, lsr #8
 802f5fa:	448a      	add	sl, r1
 802f5fc:	992a      	ldr	r1, [sp, #168]	@ 0xa8
 802f5fe:	9209      	str	r2, [sp, #36]	@ 0x24
 802f600:	ea4f 2b2b 	mov.w	fp, fp, asr #8
 802f604:	ea4f 2929 	mov.w	r9, r9, asr #8
 802f608:	121b      	asrs	r3, r3, #8
 802f60a:	3201      	adds	r2, #1
 802f60c:	f808 bc03 	strb.w	fp, [r8, #-3]
 802f610:	f808 9c02 	strb.w	r9, [r8, #-2]
 802f614:	f808 3c04 	strb.w	r3, [r8, #-4]
 802f618:	440f      	add	r7, r1
 802f61a:	f108 0804 	add.w	r8, r8, #4
 802f61e:	d025      	beq.n	802f66c <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x304>
 802f620:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
 802f622:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
 802f626:	ea4f 432a 	mov.w	r3, sl, asr #16
 802f62a:	143c      	asrs	r4, r7, #16
 802f62c:	fb00 3404 	mla	r4, r0, r4, r3
 802f630:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 802f632:	9e08      	ldr	r6, [sp, #32]
 802f634:	5d15      	ldrb	r5, [r2, r4]
 802f636:	f3ca 3303 	ubfx	r3, sl, #12, #4
 802f63a:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 802f63e:	4414      	add	r4, r2
 802f640:	eb06 0e05 	add.w	lr, r6, r5
 802f644:	f3c7 3203 	ubfx	r2, r7, #12, #4
 802f648:	2b00      	cmp	r3, #0
 802f64a:	f47f af5c 	bne.w	802f506 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19e>
 802f64e:	b14a      	cbz	r2, 802f664 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fc>
 802f650:	5c20      	ldrb	r0, [r4, r0]
 802f652:	46f4      	mov	ip, lr
 802f654:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 802f658:	4430      	add	r0, r6
 802f65a:	4671      	mov	r1, lr
 802f65c:	e765      	b.n	802f52a <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 802f65e:	46f4      	mov	ip, lr
 802f660:	4670      	mov	r0, lr
 802f662:	e762      	b.n	802f52a <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 802f664:	46f4      	mov	ip, lr
 802f666:	4670      	mov	r0, lr
 802f668:	4671      	mov	r1, lr
 802f66a:	e75e      	b.n	802f52a <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 802f66c:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 802f66e:	f8dd b040 	ldr.w	fp, [sp, #64]	@ 0x40
 802f672:	eb03 038b 	add.w	r3, r3, fp, lsl #2
 802f676:	930d      	str	r3, [sp, #52]	@ 0x34
 802f678:	e6de      	b.n	802f438 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xd0>
 802f67a:	f1bb 0f00 	cmp.w	fp, #0
 802f67e:	f77f aedb 	ble.w	802f438 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xd0>
 802f682:	f8dd 9024 	ldr.w	r9, [sp, #36]	@ 0x24
 802f686:	ea4f 432a 	mov.w	r3, sl, asr #16
 802f68a:	1439      	asrs	r1, r7, #16
 802f68c:	4676      	mov	r6, lr
 802f68e:	f8dd b034 	ldr.w	fp, [sp, #52]	@ 0x34
 802f692:	f8dd 80b8 	ldr.w	r8, [sp, #184]	@ 0xb8
 802f696:	2b00      	cmp	r3, #0
 802f698:	f3ca 3003 	ubfx	r0, sl, #12, #4
 802f69c:	f3c7 3203 	ubfx	r2, r7, #12, #4
 802f6a0:	db29      	blt.n	802f6f6 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38e>
 802f6a2:	1e6c      	subs	r4, r5, #1
 802f6a4:	42a3      	cmp	r3, r4
 802f6a6:	da26      	bge.n	802f6f6 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38e>
 802f6a8:	2900      	cmp	r1, #0
 802f6aa:	db24      	blt.n	802f6f6 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38e>
 802f6ac:	1e74      	subs	r4, r6, #1
 802f6ae:	42a1      	cmp	r1, r4
 802f6b0:	da21      	bge.n	802f6f6 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38e>
 802f6b2:	b22c      	sxth	r4, r5
 802f6b4:	fb01 3304 	mla	r3, r1, r4, r3
 802f6b8:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
 802f6ba:	5ce9      	ldrb	r1, [r5, r3]
 802f6bc:	442b      	add	r3, r5
 802f6be:	9d08      	ldr	r5, [sp, #32]
 802f6c0:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 802f6c4:	9112      	str	r1, [sp, #72]	@ 0x48
 802f6c6:	eb05 0c01 	add.w	ip, r5, r1
 802f6ca:	2800      	cmp	r0, #0
 802f6cc:	d04e      	beq.n	802f76c <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x404>
 802f6ce:	f893 e001 	ldrb.w	lr, [r3, #1]
 802f6d2:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 802f6d6:	44ae      	add	lr, r5
 802f6d8:	2a00      	cmp	r2, #0
 802f6da:	f000 80c7 	beq.w	802f86c <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x504>
 802f6de:	1919      	adds	r1, r3, r4
 802f6e0:	7849      	ldrb	r1, [r1, #1]
 802f6e2:	5d1c      	ldrb	r4, [r3, r4]
 802f6e4:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 802f6e8:	186b      	adds	r3, r5, r1
 802f6ea:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 802f6ee:	930c      	str	r3, [sp, #48]	@ 0x30
 802f6f0:	1963      	adds	r3, r4, r5
 802f6f2:	9310      	str	r3, [sp, #64]	@ 0x40
 802f6f4:	e041      	b.n	802f77a <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x412>
 802f6f6:	1c5c      	adds	r4, r3, #1
 802f6f8:	d405      	bmi.n	802f706 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x39e>
 802f6fa:	42ac      	cmp	r4, r5
 802f6fc:	dc03      	bgt.n	802f706 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x39e>
 802f6fe:	1c4c      	adds	r4, r1, #1
 802f700:	d401      	bmi.n	802f706 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x39e>
 802f702:	42b4      	cmp	r4, r6
 802f704:	dd21      	ble.n	802f74a <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e2>
 802f706:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 802f708:	f1b9 0f00 	cmp.w	r9, #0
 802f70c:	449a      	add	sl, r3
 802f70e:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 802f710:	f10b 0b04 	add.w	fp, fp, #4
 802f714:	441f      	add	r7, r3
 802f716:	dd07      	ble.n	802f728 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c0>
 802f718:	e9d8 5602 	ldrd	r5, r6, [r8, #8]
 802f71c:	f109 39ff 	add.w	r9, r9, #4294967295
 802f720:	ea4f 432a 	mov.w	r3, sl, asr #16
 802f724:	1439      	asrs	r1, r7, #16
 802f726:	e7b6      	b.n	802f696 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32e>
 802f728:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 802f72a:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 802f72c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 802f730:	3301      	adds	r3, #1
 802f732:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 802f736:	930d      	str	r3, [sp, #52]	@ 0x34
 802f738:	e67e      	b.n	802f438 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xd0>
 802f73a:	920d      	str	r2, [sp, #52]	@ 0x34
 802f73c:	f10b 32ff 	add.w	r2, fp, #4294967295
 802f740:	f8dd e024 	ldr.w	lr, [sp, #36]	@ 0x24
 802f744:	4691      	mov	r9, r2
 802f746:	9209      	str	r2, [sp, #36]	@ 0x24
 802f748:	e7a0      	b.n	802f68c <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>
 802f74a:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 802f74c:	b236      	sxth	r6, r6
 802f74e:	b22d      	sxth	r5, r5
 802f750:	e9cd 1003 	strd	r1, r0, [sp, #12]
 802f754:	e9cd 2405 	strd	r2, r4, [sp, #20]
 802f758:	9302      	str	r3, [sp, #8]
 802f75a:	e9cd 5600 	strd	r5, r6, [sp]
 802f75e:	9b08      	ldr	r3, [sp, #32]
 802f760:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 802f762:	4659      	mov	r1, fp
 802f764:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 802f766:	f7ff fcf3 	bl	802f150 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhS4_ssiihhh>
 802f76a:	e7cc      	b.n	802f706 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x39e>
 802f76c:	2a00      	cmp	r2, #0
 802f76e:	d173      	bne.n	802f858 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 802f770:	46e6      	mov	lr, ip
 802f772:	f8cd c030 	str.w	ip, [sp, #48]	@ 0x30
 802f776:	f8cd c040 	str.w	ip, [sp, #64]	@ 0x40
 802f77a:	b283      	uxth	r3, r0
 802f77c:	b292      	uxth	r2, r2
 802f77e:	fb03 f002 	mul.w	r0, r3, r2
 802f782:	011b      	lsls	r3, r3, #4
 802f784:	f89e 6001 	ldrb.w	r6, [lr, #1]
 802f788:	f89e 5002 	ldrb.w	r5, [lr, #2]
 802f78c:	1a19      	subs	r1, r3, r0
 802f78e:	b289      	uxth	r1, r1
 802f790:	f89e e000 	ldrb.w	lr, [lr]
 802f794:	fb01 f505 	mul.w	r5, r1, r5
 802f798:	ebc0 1202 	rsb	r2, r0, r2, lsl #4
 802f79c:	fb01 f606 	mul.w	r6, r1, r6
 802f7a0:	b292      	uxth	r2, r2
 802f7a2:	f5c3 7380 	rsb	r3, r3, #256	@ 0x100
 802f7a6:	fb01 f40e 	mul.w	r4, r1, lr
 802f7aa:	1a9b      	subs	r3, r3, r2
 802f7ac:	f89c 1001 	ldrb.w	r1, [ip, #1]
 802f7b0:	f89c e002 	ldrb.w	lr, [ip, #2]
 802f7b4:	b29b      	uxth	r3, r3
 802f7b6:	fb03 6601 	mla	r6, r3, r1, r6
 802f7ba:	fb03 5e0e 	mla	lr, r3, lr, r5
 802f7be:	9908      	ldr	r1, [sp, #32]
 802f7c0:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 802f7c2:	5d49      	ldrb	r1, [r1, r5]
 802f7c4:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 802f7c6:	fb03 4301 	mla	r3, r3, r1, r4
 802f7ca:	f895 c001 	ldrb.w	ip, [r5, #1]
 802f7ce:	78ad      	ldrb	r5, [r5, #2]
 802f7d0:	fb02 6c0c 	mla	ip, r2, ip, r6
 802f7d4:	fb02 e505 	mla	r5, r2, r5, lr
 802f7d8:	990c      	ldr	r1, [sp, #48]	@ 0x30
 802f7da:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 802f7dc:	784e      	ldrb	r6, [r1, #1]
 802f7de:	7824      	ldrb	r4, [r4, #0]
 802f7e0:	7889      	ldrb	r1, [r1, #2]
 802f7e2:	fb02 3204 	mla	r2, r2, r4, r3
 802f7e6:	fb00 cc06 	mla	ip, r0, r6, ip
 802f7ea:	fb00 5501 	mla	r5, r0, r1, r5
 802f7ee:	990c      	ldr	r1, [sp, #48]	@ 0x30
 802f7f0:	9e0b      	ldr	r6, [sp, #44]	@ 0x2c
 802f7f2:	780b      	ldrb	r3, [r1, #0]
 802f7f4:	f89b 4000 	ldrb.w	r4, [fp]
 802f7f8:	f8bd 1044 	ldrh.w	r1, [sp, #68]	@ 0x44
 802f7fc:	fb00 2003 	mla	r0, r0, r3, r2
 802f800:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 802f804:	f3c5 2507 	ubfx	r5, r5, #8, #8
 802f808:	fb15 f501 	smulbb	r5, r5, r1
 802f80c:	fb14 f406 	smulbb	r4, r4, r6
 802f810:	fb1c fc01 	smulbb	ip, ip, r1
 802f814:	f89b 2001 	ldrb.w	r2, [fp, #1]
 802f818:	f89b 3002 	ldrb.w	r3, [fp, #2]
 802f81c:	f3c0 2007 	ubfx	r0, r0, #8, #8
 802f820:	fb00 4001 	mla	r0, r0, r1, r4
 802f824:	fb03 5306 	mla	r3, r3, r6, r5
 802f828:	fb02 c106 	mla	r1, r2, r6, ip
 802f82c:	b29b      	uxth	r3, r3
 802f82e:	b280      	uxth	r0, r0
 802f830:	b289      	uxth	r1, r1
 802f832:	1c5a      	adds	r2, r3, #1
 802f834:	1c4d      	adds	r5, r1, #1
 802f836:	1c44      	adds	r4, r0, #1
 802f838:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 802f83c:	eb05 2111 	add.w	r1, r5, r1, lsr #8
 802f840:	eb04 2310 	add.w	r3, r4, r0, lsr #8
 802f844:	1209      	asrs	r1, r1, #8
 802f846:	1212      	asrs	r2, r2, #8
 802f848:	121b      	asrs	r3, r3, #8
 802f84a:	f88b 1001 	strb.w	r1, [fp, #1]
 802f84e:	f88b 2002 	strb.w	r2, [fp, #2]
 802f852:	f88b 3000 	strb.w	r3, [fp]
 802f856:	e756      	b.n	802f706 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x39e>
 802f858:	5d1c      	ldrb	r4, [r3, r4]
 802f85a:	9b08      	ldr	r3, [sp, #32]
 802f85c:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 802f860:	18e3      	adds	r3, r4, r3
 802f862:	f8cd c030 	str.w	ip, [sp, #48]	@ 0x30
 802f866:	9310      	str	r3, [sp, #64]	@ 0x40
 802f868:	46e6      	mov	lr, ip
 802f86a:	e786      	b.n	802f77a <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x412>
 802f86c:	f8cd c030 	str.w	ip, [sp, #48]	@ 0x30
 802f870:	f8cd c040 	str.w	ip, [sp, #64]	@ 0x40
 802f874:	e781      	b.n	802f77a <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x412>
 802f876:	f43f addf 	beq.w	802f438 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xd0>
 802f87a:	1e44      	subs	r4, r0, #1
 802f87c:	e621      	b.n	802f4c2 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15a>
 802f87e:	bf00      	nop

0802f880 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPmPKhS4_ssiihh>:
 802f880:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802f884:	f9bd c028 	ldrsh.w	ip, [sp, #40]	@ 0x28
 802f888:	e9dd 640c 	ldrd	r6, r4, [sp, #48]	@ 0x30
 802f88c:	fb04 6e0c 	mla	lr, r4, ip, r6
 802f890:	2c00      	cmp	r4, #0
 802f892:	461f      	mov	r7, r3
 802f894:	eb02 0a0e 	add.w	sl, r2, lr
 802f898:	f104 0801 	add.w	r8, r4, #1
 802f89c:	f9bd 902c 	ldrsh.w	r9, [sp, #44]	@ 0x2c
 802f8a0:	f89d 5038 	ldrb.w	r5, [sp, #56]	@ 0x38
 802f8a4:	f89d 003c 	ldrb.w	r0, [sp, #60]	@ 0x3c
 802f8a8:	db01      	blt.n	802f8ae <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPmPKhS4_ssiihh+0x2e>
 802f8aa:	45a1      	cmp	r9, r4
 802f8ac:	dc6f      	bgt.n	802f98e <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPmPKhS4_ssiihh+0x10e>
 802f8ae:	f891 b000 	ldrb.w	fp, [r1]
 802f8b2:	460b      	mov	r3, r1
 802f8b4:	465c      	mov	r4, fp
 802f8b6:	468e      	mov	lr, r1
 802f8b8:	f1b8 0f00 	cmp.w	r8, #0
 802f8bc:	db01      	blt.n	802f8c2 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPmPKhS4_ssiihh+0x42>
 802f8be:	45c1      	cmp	r9, r8
 802f8c0:	dc4a      	bgt.n	802f958 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPmPKhS4_ssiihh+0xd8>
 802f8c2:	f891 9000 	ldrb.w	r9, [r1]
 802f8c6:	460f      	mov	r7, r1
 802f8c8:	46ca      	mov	sl, r9
 802f8ca:	4688      	mov	r8, r1
 802f8cc:	2d0f      	cmp	r5, #15
 802f8ce:	f200 8097 	bhi.w	802fa00 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPmPKhS4_ssiihh+0x180>
 802f8d2:	280f      	cmp	r0, #15
 802f8d4:	f200 8094 	bhi.w	802fa00 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPmPKhS4_ssiihh+0x180>
 802f8d8:	b2aa      	uxth	r2, r5
 802f8da:	b280      	uxth	r0, r0
 802f8dc:	fb02 f600 	mul.w	r6, r2, r0
 802f8e0:	0112      	lsls	r2, r2, #4
 802f8e2:	1b95      	subs	r5, r2, r6
 802f8e4:	f893 c001 	ldrb.w	ip, [r3, #1]
 802f8e8:	789b      	ldrb	r3, [r3, #2]
 802f8ea:	b2ad      	uxth	r5, r5
 802f8ec:	ebc6 1000 	rsb	r0, r6, r0, lsl #4
 802f8f0:	fb05 f404 	mul.w	r4, r5, r4
 802f8f4:	fb05 fc0c 	mul.w	ip, r5, ip
 802f8f8:	fb05 f503 	mul.w	r5, r5, r3
 802f8fc:	b280      	uxth	r0, r0
 802f8fe:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
 802f902:	f89e 3001 	ldrb.w	r3, [lr, #1]
 802f906:	1a12      	subs	r2, r2, r0
 802f908:	f89e e002 	ldrb.w	lr, [lr, #2]
 802f90c:	b292      	uxth	r2, r2
 802f90e:	fb02 cc03 	mla	ip, r2, r3, ip
 802f912:	fb02 440b 	mla	r4, r2, fp, r4
 802f916:	fb02 520e 	mla	r2, r2, lr, r5
 802f91a:	f898 3001 	ldrb.w	r3, [r8, #1]
 802f91e:	f898 8002 	ldrb.w	r8, [r8, #2]
 802f922:	fb00 cc03 	mla	ip, r0, r3, ip
 802f926:	fb00 4909 	mla	r9, r0, r9, r4
 802f92a:	fb00 2008 	mla	r0, r0, r8, r2
 802f92e:	787b      	ldrb	r3, [r7, #1]
 802f930:	78ba      	ldrb	r2, [r7, #2]
 802f932:	fb06 9a0a 	mla	sl, r6, sl, r9
 802f936:	fb06 c303 	mla	r3, r6, r3, ip
 802f93a:	fb06 0602 	mla	r6, r6, r2, r0
 802f93e:	f3ca 2a07 	ubfx	sl, sl, #8, #8
 802f942:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 802f946:	0236      	lsls	r6, r6, #8
 802f948:	ea43 030a 	orr.w	r3, r3, sl
 802f94c:	f406 067f 	and.w	r6, r6, #16711680	@ 0xff0000
 802f950:	4333      	orrs	r3, r6
 802f952:	600b      	str	r3, [r1, #0]
 802f954:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802f958:	b378      	cbz	r0, 802f9ba <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPmPKhS4_ssiihh+0x13a>
 802f95a:	2e00      	cmp	r6, #0
 802f95c:	db3f      	blt.n	802f9de <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPmPKhS4_ssiihh+0x15e>
 802f95e:	45b4      	cmp	ip, r6
 802f960:	dd3d      	ble.n	802f9de <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPmPKhS4_ssiihh+0x15e>
 802f962:	f81a 800c 	ldrb.w	r8, [sl, ip]
 802f966:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 802f96a:	44b8      	add	r8, r7
 802f96c:	3601      	adds	r6, #1
 802f96e:	f898 9000 	ldrb.w	r9, [r8]
 802f972:	d430      	bmi.n	802f9d6 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPmPKhS4_ssiihh+0x156>
 802f974:	45b4      	cmp	ip, r6
 802f976:	dd2e      	ble.n	802f9d6 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPmPKhS4_ssiihh+0x156>
 802f978:	2d00      	cmp	r5, #0
 802f97a:	d03d      	beq.n	802f9f8 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPmPKhS4_ssiihh+0x178>
 802f97c:	44d4      	add	ip, sl
 802f97e:	f89c 2001 	ldrb.w	r2, [ip, #1]
 802f982:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 802f986:	f817 a002 	ldrb.w	sl, [r7, r2]
 802f98a:	4417      	add	r7, r2
 802f98c:	e79e      	b.n	802f8cc <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPmPKhS4_ssiihh+0x4c>
 802f98e:	2e00      	cmp	r6, #0
 802f990:	db01      	blt.n	802f996 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPmPKhS4_ssiihh+0x116>
 802f992:	45b4      	cmp	ip, r6
 802f994:	dc19      	bgt.n	802f9ca <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPmPKhS4_ssiihh+0x14a>
 802f996:	468e      	mov	lr, r1
 802f998:	1c73      	adds	r3, r6, #1
 802f99a:	f89e b000 	ldrb.w	fp, [lr]
 802f99e:	d409      	bmi.n	802f9b4 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPmPKhS4_ssiihh+0x134>
 802f9a0:	459c      	cmp	ip, r3
 802f9a2:	dd07      	ble.n	802f9b4 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPmPKhS4_ssiihh+0x134>
 802f9a4:	b1ed      	cbz	r5, 802f9e2 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPmPKhS4_ssiihh+0x162>
 802f9a6:	f89a 3001 	ldrb.w	r3, [sl, #1]
 802f9aa:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 802f9ae:	5cfc      	ldrb	r4, [r7, r3]
 802f9b0:	443b      	add	r3, r7
 802f9b2:	e781      	b.n	802f8b8 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPmPKhS4_ssiihh+0x38>
 802f9b4:	780c      	ldrb	r4, [r1, #0]
 802f9b6:	460b      	mov	r3, r1
 802f9b8:	e77e      	b.n	802f8b8 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPmPKhS4_ssiihh+0x38>
 802f9ba:	2d0f      	cmp	r5, #15
 802f9bc:	f891 9000 	ldrb.w	r9, [r1]
 802f9c0:	d81e      	bhi.n	802fa00 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPmPKhS4_ssiihh+0x180>
 802f9c2:	460f      	mov	r7, r1
 802f9c4:	4688      	mov	r8, r1
 802f9c6:	46ca      	mov	sl, r9
 802f9c8:	e786      	b.n	802f8d8 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPmPKhS4_ssiihh+0x58>
 802f9ca:	f812 e00e 	ldrb.w	lr, [r2, lr]
 802f9ce:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 802f9d2:	449e      	add	lr, r3
 802f9d4:	e7e0      	b.n	802f998 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPmPKhS4_ssiihh+0x118>
 802f9d6:	f891 a000 	ldrb.w	sl, [r1]
 802f9da:	460f      	mov	r7, r1
 802f9dc:	e776      	b.n	802f8cc <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPmPKhS4_ssiihh+0x4c>
 802f9de:	4688      	mov	r8, r1
 802f9e0:	e7c4      	b.n	802f96c <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPmPKhS4_ssiihh+0xec>
 802f9e2:	f1b8 0f00 	cmp.w	r8, #0
 802f9e6:	780c      	ldrb	r4, [r1, #0]
 802f9e8:	460b      	mov	r3, r1
 802f9ea:	f6bf af68 	bge.w	802f8be <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPmPKhS4_ssiihh+0x3e>
 802f9ee:	460f      	mov	r7, r1
 802f9f0:	4688      	mov	r8, r1
 802f9f2:	46a2      	mov	sl, r4
 802f9f4:	46a1      	mov	r9, r4
 802f9f6:	e76c      	b.n	802f8d2 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPmPKhS4_ssiihh+0x52>
 802f9f8:	f891 a000 	ldrb.w	sl, [r1]
 802f9fc:	460f      	mov	r7, r1
 802f9fe:	e768      	b.n	802f8d2 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPmPKhS4_ssiihh+0x52>
 802fa00:	4b03      	ldr	r3, [pc, #12]	@ (802fa10 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPmPKhS4_ssiihh+0x190>)
 802fa02:	4a04      	ldr	r2, [pc, #16]	@ (802fa14 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPmPKhS4_ssiihh+0x194>)
 802fa04:	f240 31ca 	movw	r1, #970	@ 0x3ca
 802fa08:	4803      	ldr	r0, [pc, #12]	@ (802fa18 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPmPKhS4_ssiihh+0x198>)
 802fa0a:	f002 feb5 	bl	8032778 <__assert_func>
 802fa0e:	bf00      	nop
 802fa10:	08036954 	.word	0x08036954
 802fa14:	08036fd0 	.word	0x08036fd0
 802fa18:	08036adc 	.word	0x08036adc

0802fa1c <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 802fa1c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802fa20:	ed2d 8b0a 	vpush	{d8-d12}
 802fa24:	eeb0 aa40 	vmov.f32	s20, s0
 802fa28:	eef0 9a60 	vmov.f32	s19, s1
 802fa2c:	eeb0 9a41 	vmov.f32	s18, s2
 802fa30:	eef0 8a62 	vmov.f32	s17, s5
 802fa34:	eeb0 8a43 	vmov.f32	s16, s6
 802fa38:	eeb0 ca44 	vmov.f32	s24, s8
 802fa3c:	eef0 ba64 	vmov.f32	s23, s9
 802fa40:	eeb0 ba45 	vmov.f32	s22, s10
 802fa44:	eef7 aa00 	vmov.f32	s21, #112	@ 0x3f800000  1.0
 802fa48:	b091      	sub	sp, #68	@ 0x44
 802fa4a:	e9cd 120a 	strd	r1, r2, [sp, #40]	@ 0x28
 802fa4e:	e9dd 9525 	ldrd	r9, r5, [sp, #148]	@ 0x94
 802fa52:	900f      	str	r0, [sp, #60]	@ 0x3c
 802fa54:	4698      	mov	r8, r3
 802fa56:	e9dd 0229 	ldrd	r0, r2, [sp, #164]	@ 0xa4
 802fa5a:	9b2b      	ldr	r3, [sp, #172]	@ 0xac
 802fa5c:	6841      	ldr	r1, [r0, #4]
 802fa5e:	fb01 2303 	mla	r3, r1, r3, r2
 802fa62:	9a2c      	ldr	r2, [sp, #176]	@ 0xb0
 802fa64:	6801      	ldr	r1, [r0, #0]
 802fa66:	982c      	ldr	r0, [sp, #176]	@ 0xb0
 802fa68:	6852      	ldr	r2, [r2, #4]
 802fa6a:	6800      	ldr	r0, [r0, #0]
 802fa6c:	eb01 0a83 	add.w	sl, r1, r3, lsl #2
 802fa70:	1d13      	adds	r3, r2, #4
 802fa72:	9009      	str	r0, [sp, #36]	@ 0x24
 802fa74:	930c      	str	r3, [sp, #48]	@ 0x30
 802fa76:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 802fa78:	2b00      	cmp	r3, #0
 802fa7a:	dc02      	bgt.n	802fa82 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 802fa7c:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 802fa7e:	2b00      	cmp	r3, #0
 802fa80:	dd66      	ble.n	802fb50 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x134>
 802fa82:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 802fa84:	f1b8 0f00 	cmp.w	r8, #0
 802fa88:	e9d3 4e02 	ldrd	r4, lr, [r3, #8]
 802fa8c:	b221      	sxth	r1, r4
 802fa8e:	fa0f f78e 	sxth.w	r7, lr
 802fa92:	f340 81df 	ble.w	802fe54 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x438>
 802fa96:	1e4e      	subs	r6, r1, #1
 802fa98:	f107 3cff 	add.w	ip, r7, #4294967295
 802fa9c:	f8cd e01c 	str.w	lr, [sp, #28]
 802faa0:	e9dd eb27 	ldrd	lr, fp, [sp, #156]	@ 0x9c
 802faa4:	ea5f 4329 	movs.w	r3, r9, asr #16
 802faa8:	ea4f 4025 	mov.w	r0, r5, asr #16
 802faac:	d405      	bmi.n	802faba <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 802faae:	42b3      	cmp	r3, r6
 802fab0:	da03      	bge.n	802faba <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 802fab2:	2800      	cmp	r0, #0
 802fab4:	db01      	blt.n	802faba <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 802fab6:	4560      	cmp	r0, ip
 802fab8:	db4f      	blt.n	802fb5a <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 802faba:	1c5a      	adds	r2, r3, #1
 802fabc:	d406      	bmi.n	802facc <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 802fabe:	428a      	cmp	r2, r1
 802fac0:	dc04      	bgt.n	802facc <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 802fac2:	1c42      	adds	r2, r0, #1
 802fac4:	d402      	bmi.n	802facc <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 802fac6:	42ba      	cmp	r2, r7
 802fac8:	f340 8157 	ble.w	802fd7a <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35e>
 802facc:	f1b8 0801 	subs.w	r8, r8, #1
 802fad0:	44f1      	add	r9, lr
 802fad2:	445d      	add	r5, fp
 802fad4:	f10a 0a04 	add.w	sl, sl, #4
 802fad8:	d1e4      	bne.n	802faa4 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 802fada:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 802fadc:	2b00      	cmp	r3, #0
 802fade:	dd37      	ble.n	802fb50 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x134>
 802fae0:	ee3a aa0c 	vadd.f32	s20, s20, s24
 802fae4:	ee79 9aab 	vadd.f32	s19, s19, s23
 802fae8:	eeca 7a8a 	vdiv.f32	s15, s21, s20
 802faec:	ee39 9a0b 	vadd.f32	s18, s18, s22
 802faf0:	ee29 6aa7 	vmul.f32	s12, s19, s15
 802faf4:	ee69 7a27 	vmul.f32	s15, s18, s15
 802faf8:	ee76 6a68 	vsub.f32	s13, s12, s17
 802fafc:	ee37 7ac8 	vsub.f32	s14, s15, s16
 802fb00:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802fb04:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 802fb08:	ee16 2a90 	vmov	r2, s13
 802fb0c:	3b01      	subs	r3, #1
 802fb0e:	930a      	str	r3, [sp, #40]	@ 0x28
 802fb10:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 802fb12:	fb92 f3f3 	sdiv	r3, r2, r3
 802fb16:	ee17 2a10 	vmov	r2, s14
 802fb1a:	eeb0 7a48 	vmov.f32	s14, s16
 802fb1e:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 802fb22:	ee17 5a10 	vmov	r5, s14
 802fb26:	eeb0 7a68 	vmov.f32	s14, s17
 802fb2a:	9327      	str	r3, [sp, #156]	@ 0x9c
 802fb2c:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 802fb2e:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 802fb32:	fb92 f3f3 	sdiv	r3, r2, r3
 802fb36:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 802fb38:	9328      	str	r3, [sp, #160]	@ 0xa0
 802fb3a:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 802fb3c:	ee17 9a10 	vmov	r9, s14
 802fb40:	eeb0 8a67 	vmov.f32	s16, s15
 802fb44:	eef0 8a46 	vmov.f32	s17, s12
 802fb48:	bf14      	ite	ne
 802fb4a:	4698      	movne	r8, r3
 802fb4c:	4690      	moveq	r8, r2
 802fb4e:	e792      	b.n	802fa76 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 802fb50:	b011      	add	sp, #68	@ 0x44
 802fb52:	ecbd 8b0a 	vpop	{d8-d12}
 802fb56:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802fb5a:	f8dd e01c 	ldr.w	lr, [sp, #28]
 802fb5e:	9827      	ldr	r0, [sp, #156]	@ 0x9c
 802fb60:	f108 32ff 	add.w	r2, r8, #4294967295
 802fb64:	fb00 9302 	mla	r3, r0, r2, r9
 802fb68:	141b      	asrs	r3, r3, #16
 802fb6a:	9207      	str	r2, [sp, #28]
 802fb6c:	f100 80a6 	bmi.w	802fcbc <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 802fb70:	42b3      	cmp	r3, r6
 802fb72:	f280 80a3 	bge.w	802fcbc <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 802fb76:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 802fb78:	fb03 5302 	mla	r3, r3, r2, r5
 802fb7c:	141b      	asrs	r3, r3, #16
 802fb7e:	f100 809d 	bmi.w	802fcbc <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 802fb82:	3f01      	subs	r7, #1
 802fb84:	42bb      	cmp	r3, r7
 802fb86:	f280 8099 	bge.w	802fcbc <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 802fb8a:	f1b8 0f00 	cmp.w	r8, #0
 802fb8e:	dda4      	ble.n	802fada <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xbe>
 802fb90:	f8cd a020 	str.w	sl, [sp, #32]
 802fb94:	f8cd a034 	str.w	sl, [sp, #52]	@ 0x34
 802fb98:	f8cd 8038 	str.w	r8, [sp, #56]	@ 0x38
 802fb9c:	f8dd a030 	ldr.w	sl, [sp, #48]	@ 0x30
 802fba0:	e065      	b.n	802fc6e <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 802fba2:	f890 c001 	ldrb.w	ip, [r0, #1]
 802fba6:	1844      	adds	r4, r0, r1
 802fba8:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 802fbac:	44d4      	add	ip, sl
 802fbae:	2a00      	cmp	r2, #0
 802fbb0:	d078      	beq.n	802fca4 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 802fbb2:	5c40      	ldrb	r0, [r0, r1]
 802fbb4:	7866      	ldrb	r6, [r4, #1]
 802fbb6:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 802fbba:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 802fbbe:	4450      	add	r0, sl
 802fbc0:	4456      	add	r6, sl
 802fbc2:	b29b      	uxth	r3, r3
 802fbc4:	b292      	uxth	r2, r2
 802fbc6:	fb03 f402 	mul.w	r4, r3, r2
 802fbca:	011b      	lsls	r3, r3, #4
 802fbcc:	f89c 8000 	ldrb.w	r8, [ip]
 802fbd0:	f89c e001 	ldrb.w	lr, [ip, #1]
 802fbd4:	1b19      	subs	r1, r3, r4
 802fbd6:	f89c c002 	ldrb.w	ip, [ip, #2]
 802fbda:	b289      	uxth	r1, r1
 802fbdc:	fb01 fe0e 	mul.w	lr, r1, lr
 802fbe0:	fb01 f808 	mul.w	r8, r1, r8
 802fbe4:	ebc4 1202 	rsb	r2, r4, r2, lsl #4
 802fbe8:	fb01 f10c 	mul.w	r1, r1, ip
 802fbec:	b292      	uxth	r2, r2
 802fbee:	f5c3 7380 	rsb	r3, r3, #256	@ 0x100
 802fbf2:	f81a b00b 	ldrb.w	fp, [sl, fp]
 802fbf6:	f897 c001 	ldrb.w	ip, [r7, #1]
 802fbfa:	1a9b      	subs	r3, r3, r2
 802fbfc:	78bf      	ldrb	r7, [r7, #2]
 802fbfe:	b29b      	uxth	r3, r3
 802fc00:	fb03 880b 	mla	r8, r3, fp, r8
 802fc04:	fb03 ec0c 	mla	ip, r3, ip, lr
 802fc08:	fb03 1307 	mla	r3, r3, r7, r1
 802fc0c:	7881      	ldrb	r1, [r0, #2]
 802fc0e:	f890 b000 	ldrb.w	fp, [r0]
 802fc12:	fb02 3301 	mla	r3, r2, r1, r3
 802fc16:	f890 e001 	ldrb.w	lr, [r0, #1]
 802fc1a:	78b1      	ldrb	r1, [r6, #2]
 802fc1c:	fb02 880b 	mla	r8, r2, fp, r8
 802fc20:	fb02 cc0e 	mla	ip, r2, lr, ip
 802fc24:	fb04 3301 	mla	r3, r4, r1, r3
 802fc28:	f896 b000 	ldrb.w	fp, [r6]
 802fc2c:	f896 e001 	ldrb.w	lr, [r6, #1]
 802fc30:	0219      	lsls	r1, r3, #8
 802fc32:	fb04 880b 	mla	r8, r4, fp, r8
 802fc36:	fb04 cc0e 	mla	ip, r4, lr, ip
 802fc3a:	f401 037f 	and.w	r3, r1, #16711680	@ 0xff0000
 802fc3e:	9927      	ldr	r1, [sp, #156]	@ 0x9c
 802fc40:	9a07      	ldr	r2, [sp, #28]
 802fc42:	4489      	add	r9, r1
 802fc44:	9928      	ldr	r1, [sp, #160]	@ 0xa0
 802fc46:	f3c8 2807 	ubfx	r8, r8, #8, #8
 802fc4a:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 802fc4e:	ea48 080c 	orr.w	r8, r8, ip
 802fc52:	440d      	add	r5, r1
 802fc54:	9908      	ldr	r1, [sp, #32]
 802fc56:	3a01      	subs	r2, #1
 802fc58:	ea48 0303 	orr.w	r3, r8, r3
 802fc5c:	9207      	str	r2, [sp, #28]
 802fc5e:	f841 3b04 	str.w	r3, [r1], #4
 802fc62:	3201      	adds	r2, #1
 802fc64:	9108      	str	r1, [sp, #32]
 802fc66:	d024      	beq.n	802fcb2 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
 802fc68:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 802fc6a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802fc6e:	ea4f 4329 	mov.w	r3, r9, asr #16
 802fc72:	1428      	asrs	r0, r5, #16
 802fc74:	fb01 3000 	mla	r0, r1, r0, r3
 802fc78:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 802fc7a:	f3c9 3303 	ubfx	r3, r9, #12, #4
 802fc7e:	f812 b000 	ldrb.w	fp, [r2, r0]
 802fc82:	4410      	add	r0, r2
 802fc84:	eb0b 0b4b 	add.w	fp, fp, fp, lsl #1
 802fc88:	eb0a 070b 	add.w	r7, sl, fp
 802fc8c:	f3c5 3203 	ubfx	r2, r5, #12, #4
 802fc90:	2b00      	cmp	r3, #0
 802fc92:	d186      	bne.n	802fba2 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 802fc94:	b14a      	cbz	r2, 802fcaa <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28e>
 802fc96:	5c40      	ldrb	r0, [r0, r1]
 802fc98:	463e      	mov	r6, r7
 802fc9a:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 802fc9e:	4450      	add	r0, sl
 802fca0:	46bc      	mov	ip, r7
 802fca2:	e78e      	b.n	802fbc2 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a6>
 802fca4:	463e      	mov	r6, r7
 802fca6:	4638      	mov	r0, r7
 802fca8:	e78b      	b.n	802fbc2 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a6>
 802fcaa:	463e      	mov	r6, r7
 802fcac:	4638      	mov	r0, r7
 802fcae:	46bc      	mov	ip, r7
 802fcb0:	e787      	b.n	802fbc2 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a6>
 802fcb2:	e9dd a80d 	ldrd	sl, r8, [sp, #52]	@ 0x34
 802fcb6:	eb0a 0a88 	add.w	sl, sl, r8, lsl #2
 802fcba:	e70e      	b.n	802fada <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xbe>
 802fcbc:	f1b8 0f00 	cmp.w	r8, #0
 802fcc0:	f77f af0b 	ble.w	802fada <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xbe>
 802fcc4:	f8dd b01c 	ldr.w	fp, [sp, #28]
 802fcc8:	ea4f 4329 	mov.w	r3, r9, asr #16
 802fccc:	1428      	asrs	r0, r5, #16
 802fcce:	4677      	mov	r7, lr
 802fcd0:	46d0      	mov	r8, sl
 802fcd2:	f8cd a020 	str.w	sl, [sp, #32]
 802fcd6:	f8dd a0b0 	ldr.w	sl, [sp, #176]	@ 0xb0
 802fcda:	2b00      	cmp	r3, #0
 802fcdc:	f3c9 3103 	ubfx	r1, r9, #12, #4
 802fce0:	f3c5 3203 	ubfx	r2, r5, #12, #4
 802fce4:	db28      	blt.n	802fd38 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 802fce6:	1e66      	subs	r6, r4, #1
 802fce8:	42b3      	cmp	r3, r6
 802fcea:	da25      	bge.n	802fd38 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 802fcec:	2800      	cmp	r0, #0
 802fcee:	db23      	blt.n	802fd38 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 802fcf0:	1e7e      	subs	r6, r7, #1
 802fcf2:	42b0      	cmp	r0, r6
 802fcf4:	da20      	bge.n	802fd38 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 802fcf6:	b224      	sxth	r4, r4
 802fcf8:	fb00 3304 	mla	r3, r0, r4, r3
 802fcfc:	9809      	ldr	r0, [sp, #36]	@ 0x24
 802fcfe:	5cc7      	ldrb	r7, [r0, r3]
 802fd00:	4403      	add	r3, r0
 802fd02:	980c      	ldr	r0, [sp, #48]	@ 0x30
 802fd04:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 802fd08:	eb00 0c07 	add.w	ip, r0, r7
 802fd0c:	2900      	cmp	r1, #0
 802fd0e:	d04a      	beq.n	802fda6 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 802fd10:	785e      	ldrb	r6, [r3, #1]
 802fd12:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 802fd16:	4406      	add	r6, r0
 802fd18:	2a00      	cmp	r2, #0
 802fd1a:	f000 8098 	beq.w	802fe4e <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x432>
 802fd1e:	1918      	adds	r0, r3, r4
 802fd20:	7840      	ldrb	r0, [r0, #1]
 802fd22:	5d1c      	ldrb	r4, [r3, r4]
 802fd24:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 802fd26:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 802fd2a:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 802fd2e:	1818      	adds	r0, r3, r0
 802fd30:	18e3      	adds	r3, r4, r3
 802fd32:	900d      	str	r0, [sp, #52]	@ 0x34
 802fd34:	930e      	str	r3, [sp, #56]	@ 0x38
 802fd36:	e03b      	b.n	802fdb0 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x394>
 802fd38:	1c5e      	adds	r6, r3, #1
 802fd3a:	d405      	bmi.n	802fd48 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 802fd3c:	42a6      	cmp	r6, r4
 802fd3e:	dc03      	bgt.n	802fd48 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 802fd40:	1c46      	adds	r6, r0, #1
 802fd42:	d401      	bmi.n	802fd48 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 802fd44:	42be      	cmp	r6, r7
 802fd46:	dd1f      	ble.n	802fd88 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 802fd48:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 802fd4a:	f1bb 0f00 	cmp.w	fp, #0
 802fd4e:	4499      	add	r9, r3
 802fd50:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 802fd52:	f108 0804 	add.w	r8, r8, #4
 802fd56:	441d      	add	r5, r3
 802fd58:	dd07      	ble.n	802fd6a <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34e>
 802fd5a:	e9da 4702 	ldrd	r4, r7, [sl, #8]
 802fd5e:	f10b 3bff 	add.w	fp, fp, #4294967295
 802fd62:	ea4f 4329 	mov.w	r3, r9, asr #16
 802fd66:	1428      	asrs	r0, r5, #16
 802fd68:	e7b7      	b.n	802fcda <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2be>
 802fd6a:	e9dd 3a07 	ldrd	r3, sl, [sp, #28]
 802fd6e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 802fd72:	3301      	adds	r3, #1
 802fd74:	eb0a 0a83 	add.w	sl, sl, r3, lsl #2
 802fd78:	e6af      	b.n	802fada <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xbe>
 802fd7a:	f108 32ff 	add.w	r2, r8, #4294967295
 802fd7e:	f8dd e01c 	ldr.w	lr, [sp, #28]
 802fd82:	4693      	mov	fp, r2
 802fd84:	9207      	str	r2, [sp, #28]
 802fd86:	e7a2      	b.n	802fcce <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b2>
 802fd88:	b23f      	sxth	r7, r7
 802fd8a:	b224      	sxth	r4, r4
 802fd8c:	e9cd 1204 	strd	r1, r2, [sp, #16]
 802fd90:	e9cd 3002 	strd	r3, r0, [sp, #8]
 802fd94:	e9cd 4700 	strd	r4, r7, [sp]
 802fd98:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 802fd9a:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 802fd9c:	4641      	mov	r1, r8
 802fd9e:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 802fda0:	f7ff fd6e 	bl	802f880 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPmPKhS4_ssiihh>
 802fda4:	e7d0      	b.n	802fd48 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 802fda6:	2a00      	cmp	r2, #0
 802fda8:	d147      	bne.n	802fe3a <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x41e>
 802fdaa:	4666      	mov	r6, ip
 802fdac:	e9cd cc0d 	strd	ip, ip, [sp, #52]	@ 0x34
 802fdb0:	b28b      	uxth	r3, r1
 802fdb2:	b292      	uxth	r2, r2
 802fdb4:	fb03 f002 	mul.w	r0, r3, r2
 802fdb8:	011b      	lsls	r3, r3, #4
 802fdba:	f896 e000 	ldrb.w	lr, [r6]
 802fdbe:	7874      	ldrb	r4, [r6, #1]
 802fdc0:	1a19      	subs	r1, r3, r0
 802fdc2:	78b6      	ldrb	r6, [r6, #2]
 802fdc4:	b289      	uxth	r1, r1
 802fdc6:	fb01 f404 	mul.w	r4, r1, r4
 802fdca:	fb01 fe0e 	mul.w	lr, r1, lr
 802fdce:	ebc0 1202 	rsb	r2, r0, r2, lsl #4
 802fdd2:	fb01 f106 	mul.w	r1, r1, r6
 802fdd6:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 802fdd8:	b292      	uxth	r2, r2
 802fdda:	f5c3 7380 	rsb	r3, r3, #256	@ 0x100
 802fdde:	5df7      	ldrb	r7, [r6, r7]
 802fde0:	1a9b      	subs	r3, r3, r2
 802fde2:	f89c 6001 	ldrb.w	r6, [ip, #1]
 802fde6:	f89c c002 	ldrb.w	ip, [ip, #2]
 802fdea:	b29b      	uxth	r3, r3
 802fdec:	fb03 4606 	mla	r6, r3, r6, r4
 802fdf0:	fb03 e707 	mla	r7, r3, r7, lr
 802fdf4:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 802fdf6:	fb03 130c 	mla	r3, r3, ip, r1
 802fdfa:	7861      	ldrb	r1, [r4, #1]
 802fdfc:	f894 c000 	ldrb.w	ip, [r4]
 802fe00:	78a4      	ldrb	r4, [r4, #2]
 802fe02:	fb02 6601 	mla	r6, r2, r1, r6
 802fe06:	fb02 770c 	mla	r7, r2, ip, r7
 802fe0a:	fb02 3104 	mla	r1, r2, r4, r3
 802fe0e:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 802fe10:	7862      	ldrb	r2, [r4, #1]
 802fe12:	7823      	ldrb	r3, [r4, #0]
 802fe14:	78a4      	ldrb	r4, [r4, #2]
 802fe16:	fb00 6602 	mla	r6, r0, r2, r6
 802fe1a:	fb00 7303 	mla	r3, r0, r3, r7
 802fe1e:	fb00 1204 	mla	r2, r0, r4, r1
 802fe22:	f3c3 2307 	ubfx	r3, r3, #8, #8
 802fe26:	f406 467f 	and.w	r6, r6, #65280	@ 0xff00
 802fe2a:	0212      	lsls	r2, r2, #8
 802fe2c:	4333      	orrs	r3, r6
 802fe2e:	f402 027f 	and.w	r2, r2, #16711680	@ 0xff0000
 802fe32:	4313      	orrs	r3, r2
 802fe34:	f8c8 3000 	str.w	r3, [r8]
 802fe38:	e786      	b.n	802fd48 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 802fe3a:	5d1c      	ldrb	r4, [r3, r4]
 802fe3c:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 802fe3e:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 802fe42:	18e3      	adds	r3, r4, r3
 802fe44:	f8cd c034 	str.w	ip, [sp, #52]	@ 0x34
 802fe48:	930e      	str	r3, [sp, #56]	@ 0x38
 802fe4a:	4666      	mov	r6, ip
 802fe4c:	e7b0      	b.n	802fdb0 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x394>
 802fe4e:	e9cd cc0d 	strd	ip, ip, [sp, #52]	@ 0x34
 802fe52:	e7ad      	b.n	802fdb0 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x394>
 802fe54:	f43f ae41 	beq.w	802fada <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xbe>
 802fe58:	1e4e      	subs	r6, r1, #1
 802fe5a:	e680      	b.n	802fb5e <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x142>

0802fe5c <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh>:
 802fe5c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802fe60:	b087      	sub	sp, #28
 802fe62:	f9bd c040 	ldrsh.w	ip, [sp, #64]	@ 0x40
 802fe66:	e9dd 0412 	ldrd	r0, r4, [sp, #72]	@ 0x48
 802fe6a:	fb04 070c 	mla	r7, r4, ip, r0
 802fe6e:	9100      	str	r1, [sp, #0]
 802fe70:	f89d 1058 	ldrb.w	r1, [sp, #88]	@ 0x58
 802fe74:	2c00      	cmp	r4, #0
 802fe76:	eb02 0b07 	add.w	fp, r2, r7
 802fe7a:	f104 0501 	add.w	r5, r4, #1
 802fe7e:	f9bd 8044 	ldrsh.w	r8, [sp, #68]	@ 0x44
 802fe82:	f89d a050 	ldrb.w	sl, [sp, #80]	@ 0x50
 802fe86:	f89d 6054 	ldrb.w	r6, [sp, #84]	@ 0x54
 802fe8a:	9101      	str	r1, [sp, #4]
 802fe8c:	db02      	blt.n	802fe94 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x38>
 802fe8e:	45a0      	cmp	r8, r4
 802fe90:	f300 811a 	bgt.w	80300c8 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x26c>
 802fe94:	2700      	movs	r7, #0
 802fe96:	46be      	mov	lr, r7
 802fe98:	46b9      	mov	r9, r7
 802fe9a:	463c      	mov	r4, r7
 802fe9c:	2d00      	cmp	r5, #0
 802fe9e:	db02      	blt.n	802fea6 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x4a>
 802fea0:	45a8      	cmp	r8, r5
 802fea2:	f300 812b 	bgt.w	80300fc <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x2a0>
 802fea6:	f04f 0c00 	mov.w	ip, #0
 802feaa:	46e0      	mov	r8, ip
 802feac:	4665      	mov	r5, ip
 802feae:	f8cd c010 	str.w	ip, [sp, #16]
 802feb2:	f1ba 0f0f 	cmp.w	sl, #15
 802feb6:	f200 8167 	bhi.w	8030188 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x32c>
 802feba:	2e0f      	cmp	r6, #15
 802febc:	f200 8164 	bhi.w	8030188 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x32c>
 802fec0:	b2b2      	uxth	r2, r6
 802fec2:	fa1f f38a 	uxth.w	r3, sl
 802fec6:	fb02 f603 	mul.w	r6, r2, r3
 802feca:	ebc6 1202 	rsb	r2, r6, r2, lsl #4
 802fece:	b292      	uxth	r2, r2
 802fed0:	fb02 fa08 	mul.w	sl, r2, r8
 802fed4:	fb06 fb0c 	mul.w	fp, r6, ip
 802fed8:	011b      	lsls	r3, r3, #4
 802feda:	1b98      	subs	r0, r3, r6
 802fedc:	b280      	uxth	r0, r0
 802fede:	9002      	str	r0, [sp, #8]
 802fee0:	fb00 f007 	mul.w	r0, r0, r7
 802fee4:	f5c3 7380 	rsb	r3, r3, #256	@ 0x100
 802fee8:	1a9b      	subs	r3, r3, r2
 802feea:	b29b      	uxth	r3, r3
 802feec:	fb03 000e 	mla	r0, r3, lr, r0
 802fef0:	4450      	add	r0, sl
 802fef2:	4458      	add	r0, fp
 802fef4:	f3c0 2007 	ubfx	r0, r0, #8, #8
 802fef8:	9003      	str	r0, [sp, #12]
 802fefa:	2800      	cmp	r0, #0
 802fefc:	f000 80e1 	beq.w	80300c2 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x266>
 802ff00:	f409 417f 	and.w	r1, r9, #65280	@ 0xff00
 802ff04:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
 802ff08:	f009 1bff 	and.w	fp, r9, #16711935	@ 0xff00ff
 802ff0c:	9105      	str	r1, [sp, #20]
 802ff0e:	d01d      	beq.n	802ff4c <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0xf0>
 802ff10:	fb0b fb0e 	mul.w	fp, fp, lr
 802ff14:	fb01 fe0e 	mul.w	lr, r1, lr
 802ff18:	ea4f 2a1b 	mov.w	sl, fp, lsr #8
 802ff1c:	f00a 1aff 	and.w	sl, sl, #16711935	@ 0xff00ff
 802ff20:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 802ff24:	f50e 7080 	add.w	r0, lr, #256	@ 0x100
 802ff28:	44d3      	add	fp, sl
 802ff2a:	eb00 2e1e 	add.w	lr, r0, lr, lsr #8
 802ff2e:	ea4f 2b1b 	mov.w	fp, fp, lsr #8
 802ff32:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802ff36:	f00b 1bff 	and.w	fp, fp, #16711935	@ 0xff00ff
 802ff3a:	f40e 4e7f 	and.w	lr, lr, #65280	@ 0xff00
 802ff3e:	ea4b 0e0e 	orr.w	lr, fp, lr
 802ff42:	f40e 417f 	and.w	r1, lr, #65280	@ 0xff00
 802ff46:	f00e 1bff 	and.w	fp, lr, #16711935	@ 0xff00ff
 802ff4a:	9105      	str	r1, [sp, #20]
 802ff4c:	2fff      	cmp	r7, #255	@ 0xff
 802ff4e:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
 802ff52:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
 802ff56:	d01b      	beq.n	802ff90 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x134>
 802ff58:	fb0e fe07 	mul.w	lr, lr, r7
 802ff5c:	fb04 f407 	mul.w	r4, r4, r7
 802ff60:	ea4f 2a1e 	mov.w	sl, lr, lsr #8
 802ff64:	f00a 1aff 	and.w	sl, sl, #16711935	@ 0xff00ff
 802ff68:	f10e 1e01 	add.w	lr, lr, #65537	@ 0x10001
 802ff6c:	f504 7080 	add.w	r0, r4, #256	@ 0x100
 802ff70:	44d6      	add	lr, sl
 802ff72:	eb00 2414 	add.w	r4, r0, r4, lsr #8
 802ff76:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802ff7a:	0a24      	lsrs	r4, r4, #8
 802ff7c:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 802ff80:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
 802ff84:	ea4e 0404 	orr.w	r4, lr, r4
 802ff88:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
 802ff8c:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
 802ff90:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
 802ff94:	f005 10ff 	and.w	r0, r5, #16711935	@ 0xff00ff
 802ff98:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
 802ff9c:	d019      	beq.n	802ffd2 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x176>
 802ff9e:	fb00 f008 	mul.w	r0, r0, r8
 802ffa2:	fb05 f508 	mul.w	r5, r5, r8
 802ffa6:	ea4f 2910 	mov.w	r9, r0, lsr #8
 802ffaa:	f009 19ff 	and.w	r9, r9, #16711935	@ 0xff00ff
 802ffae:	f100 1001 	add.w	r0, r0, #65537	@ 0x10001
 802ffb2:	f505 7780 	add.w	r7, r5, #256	@ 0x100
 802ffb6:	4448      	add	r0, r9
 802ffb8:	eb07 2515 	add.w	r5, r7, r5, lsr #8
 802ffbc:	0a00      	lsrs	r0, r0, #8
 802ffbe:	0a2d      	lsrs	r5, r5, #8
 802ffc0:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 802ffc4:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
 802ffc8:	4305      	orrs	r5, r0
 802ffca:	f005 10ff 	and.w	r0, r5, #16711935	@ 0xff00ff
 802ffce:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
 802ffd2:	9904      	ldr	r1, [sp, #16]
 802ffd4:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
 802ffd8:	f001 1aff 	and.w	sl, r1, #16711935	@ 0xff00ff
 802ffdc:	f401 497f 	and.w	r9, r1, #65280	@ 0xff00
 802ffe0:	d01c      	beq.n	803001c <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x1c0>
 802ffe2:	fb0a fa0c 	mul.w	sl, sl, ip
 802ffe6:	fb09 fc0c 	mul.w	ip, r9, ip
 802ffea:	ea4f 281a 	mov.w	r8, sl, lsr #8
 802ffee:	f008 18ff 	and.w	r8, r8, #16711935	@ 0xff00ff
 802fff2:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 802fff6:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
 802fffa:	44c2      	add	sl, r8
 802fffc:	eb07 2c1c 	add.w	ip, r7, ip, lsr #8
 8030000:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8030004:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8030008:	f00a 1aff 	and.w	sl, sl, #16711935	@ 0xff00ff
 803000c:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 8030010:	ea4a 090c 	orr.w	r9, sl, ip
 8030014:	f009 1aff 	and.w	sl, r9, #16711935	@ 0xff00ff
 8030018:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
 803001c:	f8bd 8004 	ldrh.w	r8, [sp, #4]
 8030020:	9903      	ldr	r1, [sp, #12]
 8030022:	fb01 fc08 	mul.w	ip, r1, r8
 8030026:	f10c 0701 	add.w	r7, ip, #1
 803002a:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 803002e:	ea6f 2c17 	mvn.w	ip, r7, lsr #8
 8030032:	9902      	ldr	r1, [sp, #8]
 8030034:	fa5f f78c 	uxtb.w	r7, ip
 8030038:	fb04 f401 	mul.w	r4, r4, r1
 803003c:	fb0e fe01 	mul.w	lr, lr, r1
 8030040:	9905      	ldr	r1, [sp, #20]
 8030042:	fb0b ee03 	mla	lr, fp, r3, lr
 8030046:	fb01 4303 	mla	r3, r1, r3, r4
 803004a:	fb00 e002 	mla	r0, r0, r2, lr
 803004e:	fb05 3502 	mla	r5, r5, r2, r3
 8030052:	fb0a 0a06 	mla	sl, sl, r6, r0
 8030056:	fb09 5906 	mla	r9, r9, r6, r5
 803005a:	ea4f 261a 	mov.w	r6, sl, lsr #8
 803005e:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8030062:	f006 16ff 	and.w	r6, r6, #16711935	@ 0xff00ff
 8030066:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
 803006a:	ea46 0609 	orr.w	r6, r6, r9
 803006e:	b2f2      	uxtb	r2, r6
 8030070:	f3c6 2307 	ubfx	r3, r6, #8, #8
 8030074:	0c36      	lsrs	r6, r6, #16
 8030076:	9900      	ldr	r1, [sp, #0]
 8030078:	fb12 f408 	smulbb	r4, r2, r8
 803007c:	fb13 f008 	smulbb	r0, r3, r8
 8030080:	fb16 f808 	smulbb	r8, r6, r8
 8030084:	780a      	ldrb	r2, [r1, #0]
 8030086:	784b      	ldrb	r3, [r1, #1]
 8030088:	788e      	ldrb	r6, [r1, #2]
 803008a:	fb02 4207 	mla	r2, r2, r7, r4
 803008e:	fb03 0307 	mla	r3, r3, r7, r0
 8030092:	fb06 8807 	mla	r8, r6, r7, r8
 8030096:	b292      	uxth	r2, r2
 8030098:	b29b      	uxth	r3, r3
 803009a:	fa1f f888 	uxth.w	r8, r8
 803009e:	1c54      	adds	r4, r2, #1
 80300a0:	1c58      	adds	r0, r3, #1
 80300a2:	f108 0701 	add.w	r7, r8, #1
 80300a6:	eb04 2212 	add.w	r2, r4, r2, lsr #8
 80300aa:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 80300ae:	eb07 2818 	add.w	r8, r7, r8, lsr #8
 80300b2:	1212      	asrs	r2, r2, #8
 80300b4:	121b      	asrs	r3, r3, #8
 80300b6:	ea4f 2828 	mov.w	r8, r8, asr #8
 80300ba:	700a      	strb	r2, [r1, #0]
 80300bc:	704b      	strb	r3, [r1, #1]
 80300be:	f881 8002 	strb.w	r8, [r1, #2]
 80300c2:	b007      	add	sp, #28
 80300c4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80300c8:	2800      	cmp	r0, #0
 80300ca:	db01      	blt.n	80300d0 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x274>
 80300cc:	4584      	cmp	ip, r0
 80300ce:	dc40      	bgt.n	8030152 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x2f6>
 80300d0:	f04f 0e00 	mov.w	lr, #0
 80300d4:	46f1      	mov	r9, lr
 80300d6:	1c42      	adds	r2, r0, #1
 80300d8:	d42b      	bmi.n	8030132 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x2d6>
 80300da:	4594      	cmp	ip, r2
 80300dc:	dd29      	ble.n	8030132 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x2d6>
 80300de:	f1ba 0f00 	cmp.w	sl, #0
 80300e2:	d005      	beq.n	80300f0 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x294>
 80300e4:	f89b 2001 	ldrb.w	r2, [fp, #1]
 80300e8:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
 80300ec:	0e27      	lsrs	r7, r4, #24
 80300ee:	e6d5      	b.n	802fe9c <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x40>
 80300f0:	2d00      	cmp	r5, #0
 80300f2:	db41      	blt.n	8030178 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x31c>
 80300f4:	45a8      	cmp	r8, r5
 80300f6:	dd3f      	ble.n	8030178 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x31c>
 80300f8:	4657      	mov	r7, sl
 80300fa:	4654      	mov	r4, sl
 80300fc:	b1e6      	cbz	r6, 8030138 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x2dc>
 80300fe:	2800      	cmp	r0, #0
 8030100:	db32      	blt.n	8030168 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x30c>
 8030102:	4584      	cmp	ip, r0
 8030104:	dd30      	ble.n	8030168 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x30c>
 8030106:	f81b 200c 	ldrb.w	r2, [fp, ip]
 803010a:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 803010e:	ea4f 6815 	mov.w	r8, r5, lsr #24
 8030112:	3001      	adds	r0, #1
 8030114:	d423      	bmi.n	803015e <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x302>
 8030116:	4584      	cmp	ip, r0
 8030118:	dd21      	ble.n	803015e <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x302>
 803011a:	f1ba 0f00 	cmp.w	sl, #0
 803011e:	d027      	beq.n	8030170 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x314>
 8030120:	44dc      	add	ip, fp
 8030122:	f89c 2001 	ldrb.w	r2, [ip, #1]
 8030126:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 803012a:	9304      	str	r3, [sp, #16]
 803012c:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8030130:	e6bf      	b.n	802feb2 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x56>
 8030132:	2700      	movs	r7, #0
 8030134:	463c      	mov	r4, r7
 8030136:	e6b1      	b.n	802fe9c <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x40>
 8030138:	f1ba 0f0f 	cmp.w	sl, #15
 803013c:	d824      	bhi.n	8030188 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x32c>
 803013e:	fa1f f38a 	uxth.w	r3, sl
 8030142:	4632      	mov	r2, r6
 8030144:	46b3      	mov	fp, r6
 8030146:	46b2      	mov	sl, r6
 8030148:	9604      	str	r6, [sp, #16]
 803014a:	4635      	mov	r5, r6
 803014c:	46b4      	mov	ip, r6
 803014e:	46b0      	mov	r8, r6
 8030150:	e6c2      	b.n	802fed8 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x7c>
 8030152:	5dd2      	ldrb	r2, [r2, r7]
 8030154:	f853 9022 	ldr.w	r9, [r3, r2, lsl #2]
 8030158:	ea4f 6e19 	mov.w	lr, r9, lsr #24
 803015c:	e7bb      	b.n	80300d6 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x27a>
 803015e:	f04f 0c00 	mov.w	ip, #0
 8030162:	f8cd c010 	str.w	ip, [sp, #16]
 8030166:	e6a4      	b.n	802feb2 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x56>
 8030168:	f04f 0800 	mov.w	r8, #0
 803016c:	4645      	mov	r5, r8
 803016e:	e7d0      	b.n	8030112 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x2b6>
 8030170:	f8cd a010 	str.w	sl, [sp, #16]
 8030174:	46d4      	mov	ip, sl
 8030176:	e6a0      	b.n	802feba <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x5e>
 8030178:	4654      	mov	r4, sl
 803017a:	f8cd a010 	str.w	sl, [sp, #16]
 803017e:	4655      	mov	r5, sl
 8030180:	46d4      	mov	ip, sl
 8030182:	46d0      	mov	r8, sl
 8030184:	4657      	mov	r7, sl
 8030186:	e698      	b.n	802feba <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x5e>
 8030188:	4b03      	ldr	r3, [pc, #12]	@ (8030198 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x33c>)
 803018a:	4a04      	ldr	r2, [pc, #16]	@ (803019c <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x340>)
 803018c:	f240 31ca 	movw	r1, #970	@ 0x3ca
 8030190:	4803      	ldr	r0, [pc, #12]	@ (80301a0 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x344>)
 8030192:	f002 faf1 	bl	8032778 <__assert_func>
 8030196:	bf00      	nop
 8030198:	08036954 	.word	0x08036954
 803019c:	08036fd0 	.word	0x08036fd0
 80301a0:	08036adc 	.word	0x08036adc

080301a4 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80301a4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80301a8:	ed2d 8b08 	vpush	{d8-d11}
 80301ac:	b0a9      	sub	sp, #164	@ 0xa4
 80301ae:	e9dd ba3b 	ldrd	fp, sl, [sp, #236]	@ 0xec
 80301b2:	eeb0 aa40 	vmov.f32	s20, s0
 80301b6:	46d9      	mov	r9, fp
 80301b8:	eef0 9a60 	vmov.f32	s19, s1
 80301bc:	eeb0 9a41 	vmov.f32	s18, s2
 80301c0:	eef0 8a62 	vmov.f32	s17, s5
 80301c4:	eeb0 8a43 	vmov.f32	s16, s6
 80301c8:	eef0 ba44 	vmov.f32	s23, s8
 80301cc:	eeb0 ba64 	vmov.f32	s22, s9
 80301d0:	eef0 aa45 	vmov.f32	s21, s10
 80301d4:	46d3      	mov	fp, sl
 80301d6:	9022      	str	r0, [sp, #136]	@ 0x88
 80301d8:	983f      	ldr	r0, [sp, #252]	@ 0xfc
 80301da:	9115      	str	r1, [sp, #84]	@ 0x54
 80301dc:	9218      	str	r2, [sp, #96]	@ 0x60
 80301de:	6841      	ldr	r1, [r0, #4]
 80301e0:	9a40      	ldr	r2, [sp, #256]	@ 0x100
 80301e2:	469e      	mov	lr, r3
 80301e4:	9b41      	ldr	r3, [sp, #260]	@ 0x104
 80301e6:	6807      	ldr	r7, [r0, #0]
 80301e8:	fb01 2303 	mla	r3, r1, r3, r2
 80301ec:	9a42      	ldr	r2, [sp, #264]	@ 0x108
 80301ee:	9842      	ldr	r0, [sp, #264]	@ 0x108
 80301f0:	6852      	ldr	r2, [r2, #4]
 80301f2:	f89d 110c 	ldrb.w	r1, [sp, #268]	@ 0x10c
 80301f6:	eb07 0783 	add.w	r7, r7, r3, lsl #2
 80301fa:	6800      	ldr	r0, [r0, #0]
 80301fc:	1d13      	adds	r3, r2, #4
 80301fe:	930b      	str	r3, [sp, #44]	@ 0x2c
 8030200:	b28b      	uxth	r3, r1
 8030202:	9123      	str	r1, [sp, #140]	@ 0x8c
 8030204:	9011      	str	r0, [sp, #68]	@ 0x44
 8030206:	9317      	str	r3, [sp, #92]	@ 0x5c
 8030208:	9712      	str	r7, [sp, #72]	@ 0x48
 803020a:	9b15      	ldr	r3, [sp, #84]	@ 0x54
 803020c:	2b00      	cmp	r3, #0
 803020e:	dc02      	bgt.n	8030216 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8030210:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 8030212:	2b00      	cmp	r3, #0
 8030214:	dd68      	ble.n	80302e8 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x144>
 8030216:	9b42      	ldr	r3, [sp, #264]	@ 0x108
 8030218:	f1be 0f00 	cmp.w	lr, #0
 803021c:	e9d3 5702 	ldrd	r5, r7, [r3, #8]
 8030220:	b228      	sxth	r0, r5
 8030222:	b23e      	sxth	r6, r7
 8030224:	f340 83a0 	ble.w	8030968 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c4>
 8030228:	e9dd 8a3d 	ldrd	r8, sl, [sp, #244]	@ 0xf4
 803022c:	9912      	ldr	r1, [sp, #72]	@ 0x48
 803022e:	1e44      	subs	r4, r0, #1
 8030230:	f106 3cff 	add.w	ip, r6, #4294967295
 8030234:	9709      	str	r7, [sp, #36]	@ 0x24
 8030236:	ea5f 4329 	movs.w	r3, r9, asr #16
 803023a:	ea4f 422b 	mov.w	r2, fp, asr #16
 803023e:	d405      	bmi.n	803024c <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8030240:	42a3      	cmp	r3, r4
 8030242:	da03      	bge.n	803024c <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8030244:	2a00      	cmp	r2, #0
 8030246:	db01      	blt.n	803024c <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8030248:	4562      	cmp	r2, ip
 803024a:	db52      	blt.n	80302f2 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 803024c:	1c5f      	adds	r7, r3, #1
 803024e:	d406      	bmi.n	803025e <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xba>
 8030250:	4287      	cmp	r7, r0
 8030252:	dc04      	bgt.n	803025e <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xba>
 8030254:	1c57      	adds	r7, r2, #1
 8030256:	d402      	bmi.n	803025e <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xba>
 8030258:	42b7      	cmp	r7, r6
 803025a:	f340 835f 	ble.w	803091c <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x778>
 803025e:	f1be 0e01 	subs.w	lr, lr, #1
 8030262:	44c1      	add	r9, r8
 8030264:	44d3      	add	fp, sl
 8030266:	f101 0104 	add.w	r1, r1, #4
 803026a:	d1e4      	bne.n	8030236 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 803026c:	9112      	str	r1, [sp, #72]	@ 0x48
 803026e:	9b15      	ldr	r3, [sp, #84]	@ 0x54
 8030270:	2b00      	cmp	r3, #0
 8030272:	dd39      	ble.n	80302e8 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x144>
 8030274:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8030278:	ee3a aa2b 	vadd.f32	s20, s20, s23
 803027c:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8030280:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8030284:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8030288:	ee29 6aa7 	vmul.f32	s12, s19, s15
 803028c:	ee69 7a27 	vmul.f32	s15, s18, s15
 8030290:	ee76 6a68 	vsub.f32	s13, s12, s17
 8030294:	ee37 7ac8 	vsub.f32	s14, s15, s16
 8030298:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 803029c:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 80302a0:	ee16 2a90 	vmov	r2, s13
 80302a4:	3b01      	subs	r3, #1
 80302a6:	9315      	str	r3, [sp, #84]	@ 0x54
 80302a8:	9b3a      	ldr	r3, [sp, #232]	@ 0xe8
 80302aa:	fb92 f3f3 	sdiv	r3, r2, r3
 80302ae:	ee17 2a10 	vmov	r2, s14
 80302b2:	eeb0 7a48 	vmov.f32	s14, s16
 80302b6:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 80302ba:	ee17 ba10 	vmov	fp, s14
 80302be:	eeb0 7a68 	vmov.f32	s14, s17
 80302c2:	933d      	str	r3, [sp, #244]	@ 0xf4
 80302c4:	9b3a      	ldr	r3, [sp, #232]	@ 0xe8
 80302c6:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 80302ca:	fb92 f3f3 	sdiv	r3, r2, r3
 80302ce:	9a18      	ldr	r2, [sp, #96]	@ 0x60
 80302d0:	933e      	str	r3, [sp, #248]	@ 0xf8
 80302d2:	9b3a      	ldr	r3, [sp, #232]	@ 0xe8
 80302d4:	ee17 9a10 	vmov	r9, s14
 80302d8:	eeb0 8a67 	vmov.f32	s16, s15
 80302dc:	eef0 8a46 	vmov.f32	s17, s12
 80302e0:	bf14      	ite	ne
 80302e2:	469e      	movne	lr, r3
 80302e4:	4696      	moveq	lr, r2
 80302e6:	e790      	b.n	803020a <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80302e8:	b029      	add	sp, #164	@ 0xa4
 80302ea:	ecbd 8b08 	vpop	{d8-d11}
 80302ee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80302f2:	9f09      	ldr	r7, [sp, #36]	@ 0x24
 80302f4:	9112      	str	r1, [sp, #72]	@ 0x48
 80302f6:	993d      	ldr	r1, [sp, #244]	@ 0xf4
 80302f8:	f10e 32ff 	add.w	r2, lr, #4294967295
 80302fc:	fb01 9302 	mla	r3, r1, r2, r9
 8030300:	141b      	asrs	r3, r3, #16
 8030302:	920a      	str	r2, [sp, #40]	@ 0x28
 8030304:	f100 816a 	bmi.w	80305dc <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x438>
 8030308:	42a3      	cmp	r3, r4
 803030a:	f280 8167 	bge.w	80305dc <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x438>
 803030e:	9b3e      	ldr	r3, [sp, #248]	@ 0xf8
 8030310:	fb03 b302 	mla	r3, r3, r2, fp
 8030314:	141b      	asrs	r3, r3, #16
 8030316:	f100 8161 	bmi.w	80305dc <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x438>
 803031a:	3e01      	subs	r6, #1
 803031c:	42b3      	cmp	r3, r6
 803031e:	f280 815d 	bge.w	80305dc <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x438>
 8030322:	f1be 0f00 	cmp.w	lr, #0
 8030326:	dda2      	ble.n	803026e <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xca>
 8030328:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 803032a:	f8cd e064 	str.w	lr, [sp, #100]	@ 0x64
 803032e:	3304      	adds	r3, #4
 8030330:	9309      	str	r3, [sp, #36]	@ 0x24
 8030332:	f8cd b0f0 	str.w	fp, [sp, #240]	@ 0xf0
 8030336:	4606      	mov	r6, r0
 8030338:	465b      	mov	r3, fp
 803033a:	e12a      	b.n	8030592 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ee>
 803033c:	785f      	ldrb	r7, [r3, #1]
 803033e:	f855 7027 	ldr.w	r7, [r5, r7, lsl #2]
 8030342:	9713      	str	r7, [sp, #76]	@ 0x4c
 8030344:	0e3f      	lsrs	r7, r7, #24
 8030346:	970c      	str	r7, [sp, #48]	@ 0x30
 8030348:	b16a      	cbz	r2, 8030366 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 803034a:	199f      	adds	r7, r3, r6
 803034c:	5d9b      	ldrb	r3, [r3, r6]
 803034e:	462e      	mov	r6, r5
 8030350:	787f      	ldrb	r7, [r7, #1]
 8030352:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8030356:	f855 5027 	ldr.w	r5, [r5, r7, lsl #2]
 803035a:	9314      	str	r3, [sp, #80]	@ 0x50
 803035c:	9516      	str	r5, [sp, #88]	@ 0x58
 803035e:	0e1b      	lsrs	r3, r3, #24
 8030360:	0e2d      	lsrs	r5, r5, #24
 8030362:	950e      	str	r5, [sp, #56]	@ 0x38
 8030364:	930d      	str	r3, [sp, #52]	@ 0x34
 8030366:	fa1f fc81 	uxth.w	ip, r1
 803036a:	b292      	uxth	r2, r2
 803036c:	fb0c f602 	mul.w	r6, ip, r2
 8030370:	ea4f 1c0c 	mov.w	ip, ip, lsl #4
 8030374:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8030376:	ebac 0706 	sub.w	r7, ip, r6
 803037a:	b2bf      	uxth	r7, r7
 803037c:	fb07 f103 	mul.w	r1, r7, r3
 8030380:	ebc6 1202 	rsb	r2, r6, r2, lsl #4
 8030384:	b292      	uxth	r2, r2
 8030386:	f5cc 7380 	rsb	r3, ip, #256	@ 0x100
 803038a:	1a9b      	subs	r3, r3, r2
 803038c:	b29b      	uxth	r3, r3
 803038e:	fb03 1104 	mla	r1, r3, r4, r1
 8030392:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 8030394:	fb02 1105 	mla	r1, r2, r5, r1
 8030398:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 803039a:	fb06 1105 	mla	r1, r6, r5, r1
 803039e:	f3c1 2107 	ubfx	r1, r1, #8, #8
 80303a2:	2900      	cmp	r1, #0
 80303a4:	f000 80e3 	beq.w	803056e <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ca>
 80303a8:	f000 15ff 	and.w	r5, r0, #16711935	@ 0xff00ff
 80303ac:	2cff      	cmp	r4, #255	@ 0xff
 80303ae:	f400 407f 	and.w	r0, r0, #65280	@ 0xff00
 80303b2:	950f      	str	r5, [sp, #60]	@ 0x3c
 80303b4:	9010      	str	r0, [sp, #64]	@ 0x40
 80303b6:	d01e      	beq.n	80303f6 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 80303b8:	fb00 f004 	mul.w	r0, r0, r4
 80303bc:	fb05 fe04 	mul.w	lr, r5, r4
 80303c0:	4604      	mov	r4, r0
 80303c2:	ea4f 2c1e 	mov.w	ip, lr, lsr #8
 80303c6:	f500 7080 	add.w	r0, r0, #256	@ 0x100
 80303ca:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 80303ce:	f10e 1e01 	add.w	lr, lr, #65537	@ 0x10001
 80303d2:	eb00 2414 	add.w	r4, r0, r4, lsr #8
 80303d6:	44e6      	add	lr, ip
 80303d8:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80303dc:	0a24      	lsrs	r4, r4, #8
 80303de:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 80303e2:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
 80303e6:	ea4e 0e04 	orr.w	lr, lr, r4
 80303ea:	f00e 10ff 	and.w	r0, lr, #16711935	@ 0xff00ff
 80303ee:	900f      	str	r0, [sp, #60]	@ 0x3c
 80303f0:	f40e 407f 	and.w	r0, lr, #65280	@ 0xff00
 80303f4:	9010      	str	r0, [sp, #64]	@ 0x40
 80303f6:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 80303f8:	f000 1eff 	and.w	lr, r0, #16711935	@ 0xff00ff
 80303fc:	f400 487f 	and.w	r8, r0, #65280	@ 0xff00
 8030400:	980c      	ldr	r0, [sp, #48]	@ 0x30
 8030402:	28ff      	cmp	r0, #255	@ 0xff
 8030404:	d01c      	beq.n	8030440 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29c>
 8030406:	fb0e fe00 	mul.w	lr, lr, r0
 803040a:	fb08 f800 	mul.w	r8, r8, r0
 803040e:	ea4f 241e 	mov.w	r4, lr, lsr #8
 8030412:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
 8030416:	f10e 1e01 	add.w	lr, lr, #65537	@ 0x10001
 803041a:	f508 7080 	add.w	r0, r8, #256	@ 0x100
 803041e:	44a6      	add	lr, r4
 8030420:	eb00 2818 	add.w	r8, r0, r8, lsr #8
 8030424:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8030428:	ea4f 2818 	mov.w	r8, r8, lsr #8
 803042c:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8030430:	f408 487f 	and.w	r8, r8, #65280	@ 0xff00
 8030434:	ea4e 0808 	orr.w	r8, lr, r8
 8030438:	f008 1eff 	and.w	lr, r8, #16711935	@ 0xff00ff
 803043c:	f408 487f 	and.w	r8, r8, #65280	@ 0xff00
 8030440:	9814      	ldr	r0, [sp, #80]	@ 0x50
 8030442:	f000 1cff 	and.w	ip, r0, #16711935	@ 0xff00ff
 8030446:	f400 4a7f 	and.w	sl, r0, #65280	@ 0xff00
 803044a:	980d      	ldr	r0, [sp, #52]	@ 0x34
 803044c:	28ff      	cmp	r0, #255	@ 0xff
 803044e:	d01c      	beq.n	803048a <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 8030450:	fb0c fc00 	mul.w	ip, ip, r0
 8030454:	fb0a fa00 	mul.w	sl, sl, r0
 8030458:	ea4f 241c 	mov.w	r4, ip, lsr #8
 803045c:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
 8030460:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 8030464:	f50a 7080 	add.w	r0, sl, #256	@ 0x100
 8030468:	44a4      	add	ip, r4
 803046a:	eb00 2a1a 	add.w	sl, r0, sl, lsr #8
 803046e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8030472:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8030476:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 803047a:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 803047e:	ea4c 0a0a 	orr.w	sl, ip, sl
 8030482:	f00a 1cff 	and.w	ip, sl, #16711935	@ 0xff00ff
 8030486:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 803048a:	9c16      	ldr	r4, [sp, #88]	@ 0x58
 803048c:	f004 10ff 	and.w	r0, r4, #16711935	@ 0xff00ff
 8030490:	f404 4b7f 	and.w	fp, r4, #65280	@ 0xff00
 8030494:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 8030496:	2cff      	cmp	r4, #255	@ 0xff
 8030498:	d019      	beq.n	80304ce <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32a>
 803049a:	fb00 f004 	mul.w	r0, r0, r4
 803049e:	fb0b fb04 	mul.w	fp, fp, r4
 80304a2:	0a04      	lsrs	r4, r0, #8
 80304a4:	f004 15ff 	and.w	r5, r4, #16711935	@ 0xff00ff
 80304a8:	f100 1001 	add.w	r0, r0, #65537	@ 0x10001
 80304ac:	f50b 7480 	add.w	r4, fp, #256	@ 0x100
 80304b0:	eb04 241b 	add.w	r4, r4, fp, lsr #8
 80304b4:	4428      	add	r0, r5
 80304b6:	0a00      	lsrs	r0, r0, #8
 80304b8:	0a24      	lsrs	r4, r4, #8
 80304ba:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 80304be:	f404 4b7f 	and.w	fp, r4, #65280	@ 0xff00
 80304c2:	ea40 0b0b 	orr.w	fp, r0, fp
 80304c6:	f00b 10ff 	and.w	r0, fp, #16711935	@ 0xff00ff
 80304ca:	f40b 4b7f 	and.w	fp, fp, #65280	@ 0xff00
 80304ce:	9d17      	ldr	r5, [sp, #92]	@ 0x5c
 80304d0:	fb0e fe07 	mul.w	lr, lr, r7
 80304d4:	fb01 f105 	mul.w	r1, r1, r5
 80304d8:	1c4c      	adds	r4, r1, #1
 80304da:	eb04 2111 	add.w	r1, r4, r1, lsr #8
 80304de:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 80304e2:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 80304e4:	fb08 f707 	mul.w	r7, r8, r7
 80304e8:	fb04 ee03 	mla	lr, r4, r3, lr
 80304ec:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 80304ee:	fb0c ee02 	mla	lr, ip, r2, lr
 80304f2:	fb04 7703 	mla	r7, r4, r3, r7
 80304f6:	fb0a 7702 	mla	r7, sl, r2, r7
 80304fa:	fb00 ee06 	mla	lr, r0, r6, lr
 80304fe:	fb0b 7706 	mla	r7, fp, r6, r7
 8030502:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8030506:	0a3f      	lsrs	r7, r7, #8
 8030508:	f407 437f 	and.w	r3, r7, #65280	@ 0xff00
 803050c:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8030510:	ea4e 0303 	orr.w	r3, lr, r3
 8030514:	b2df      	uxtb	r7, r3
 8030516:	f3c3 2607 	ubfx	r6, r3, #8, #8
 803051a:	0c1b      	lsrs	r3, r3, #16
 803051c:	9c09      	ldr	r4, [sp, #36]	@ 0x24
 803051e:	fb17 f705 	smulbb	r7, r7, r5
 8030522:	fb16 f605 	smulbb	r6, r6, r5
 8030526:	fb13 f305 	smulbb	r3, r3, r5
 803052a:	f814 0c04 	ldrb.w	r0, [r4, #-4]
 803052e:	f814 2c03 	ldrb.w	r2, [r4, #-3]
 8030532:	f814 cc02 	ldrb.w	ip, [r4, #-2]
 8030536:	b2c9      	uxtb	r1, r1
 8030538:	fb00 7001 	mla	r0, r0, r1, r7
 803053c:	fb02 6201 	mla	r2, r2, r1, r6
 8030540:	fb0c 3101 	mla	r1, ip, r1, r3
 8030544:	b280      	uxth	r0, r0
 8030546:	b292      	uxth	r2, r2
 8030548:	b289      	uxth	r1, r1
 803054a:	1c47      	adds	r7, r0, #1
 803054c:	1c56      	adds	r6, r2, #1
 803054e:	1c4b      	adds	r3, r1, #1
 8030550:	eb07 2010 	add.w	r0, r7, r0, lsr #8
 8030554:	eb06 2212 	add.w	r2, r6, r2, lsr #8
 8030558:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 803055c:	1200      	asrs	r0, r0, #8
 803055e:	1212      	asrs	r2, r2, #8
 8030560:	1209      	asrs	r1, r1, #8
 8030562:	f804 0c04 	strb.w	r0, [r4, #-4]
 8030566:	f804 2c03 	strb.w	r2, [r4, #-3]
 803056a:	f804 1c02 	strb.w	r1, [r4, #-2]
 803056e:	9a3d      	ldr	r2, [sp, #244]	@ 0xf4
 8030570:	993e      	ldr	r1, [sp, #248]	@ 0xf8
 8030572:	4491      	add	r9, r2
 8030574:	9a3c      	ldr	r2, [sp, #240]	@ 0xf0
 8030576:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8030578:	440a      	add	r2, r1
 803057a:	923c      	str	r2, [sp, #240]	@ 0xf0
 803057c:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 803057e:	3b01      	subs	r3, #1
 8030580:	930a      	str	r3, [sp, #40]	@ 0x28
 8030582:	3204      	adds	r2, #4
 8030584:	3301      	adds	r3, #1
 8030586:	9209      	str	r2, [sp, #36]	@ 0x24
 8030588:	d021      	beq.n	80305ce <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 803058a:	9b42      	ldr	r3, [sp, #264]	@ 0x108
 803058c:	f9b3 6008 	ldrsh.w	r6, [r3, #8]
 8030590:	9b3c      	ldr	r3, [sp, #240]	@ 0xf0
 8030592:	ea4f 4229 	mov.w	r2, r9, asr #16
 8030596:	141b      	asrs	r3, r3, #16
 8030598:	fb06 2303 	mla	r3, r6, r3, r2
 803059c:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 803059e:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 80305a0:	5ce2      	ldrb	r2, [r4, r3]
 80305a2:	f3c9 3103 	ubfx	r1, r9, #12, #4
 80305a6:	f855 0022 	ldr.w	r0, [r5, r2, lsl #2]
 80305aa:	9a3c      	ldr	r2, [sp, #240]	@ 0xf0
 80305ac:	4423      	add	r3, r4
 80305ae:	f3c2 3203 	ubfx	r2, r2, #12, #4
 80305b2:	0e04      	lsrs	r4, r0, #24
 80305b4:	2900      	cmp	r1, #0
 80305b6:	f47f aec1 	bne.w	803033c <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 80305ba:	2a00      	cmp	r2, #0
 80305bc:	f43f aed3 	beq.w	8030366 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 80305c0:	5d9b      	ldrb	r3, [r3, r6]
 80305c2:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 80305c6:	9314      	str	r3, [sp, #80]	@ 0x50
 80305c8:	0e1b      	lsrs	r3, r3, #24
 80305ca:	930d      	str	r3, [sp, #52]	@ 0x34
 80305cc:	e6cb      	b.n	8030366 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 80305ce:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 80305d0:	f8dd e064 	ldr.w	lr, [sp, #100]	@ 0x64
 80305d4:	eb03 038e 	add.w	r3, r3, lr, lsl #2
 80305d8:	9312      	str	r3, [sp, #72]	@ 0x48
 80305da:	e648      	b.n	803026e <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xca>
 80305dc:	f1be 0f00 	cmp.w	lr, #0
 80305e0:	f77f ae45 	ble.w	803026e <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xca>
 80305e4:	f8dd 8028 	ldr.w	r8, [sp, #40]	@ 0x28
 80305e8:	ea4f 4329 	mov.w	r3, r9, asr #16
 80305ec:	ea4f 422b 	mov.w	r2, fp, asr #16
 80305f0:	2b00      	cmp	r3, #0
 80305f2:	46be      	mov	lr, r7
 80305f4:	4629      	mov	r1, r5
 80305f6:	e9dd 653d 	ldrd	r6, r5, [sp, #244]	@ 0xf4
 80305fa:	f8dd a048 	ldr.w	sl, [sp, #72]	@ 0x48
 80305fe:	9c42      	ldr	r4, [sp, #264]	@ 0x108
 8030600:	f3c9 3003 	ubfx	r0, r9, #12, #4
 8030604:	f3cb 3703 	ubfx	r7, fp, #12, #4
 8030608:	f2c0 815d 	blt.w	80308c6 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x722>
 803060c:	f101 3cff 	add.w	ip, r1, #4294967295
 8030610:	4563      	cmp	r3, ip
 8030612:	f280 8158 	bge.w	80308c6 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x722>
 8030616:	2a00      	cmp	r2, #0
 8030618:	f2c0 8155 	blt.w	80308c6 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x722>
 803061c:	f10e 3cff 	add.w	ip, lr, #4294967295
 8030620:	4562      	cmp	r2, ip
 8030622:	f280 8150 	bge.w	80308c6 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x722>
 8030626:	fa0f fc81 	sxth.w	ip, r1
 803062a:	fb02 330c 	mla	r3, r2, ip, r3
 803062e:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8030630:	5cd1      	ldrb	r1, [r2, r3]
 8030632:	18d3      	adds	r3, r2, r3
 8030634:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8030636:	469e      	mov	lr, r3
 8030638:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 803063c:	0e19      	lsrs	r1, r3, #24
 803063e:	9309      	str	r3, [sp, #36]	@ 0x24
 8030640:	910f      	str	r1, [sp, #60]	@ 0x3c
 8030642:	2800      	cmp	r0, #0
 8030644:	f000 8171 	beq.w	803092a <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x786>
 8030648:	4671      	mov	r1, lr
 803064a:	f89e e001 	ldrb.w	lr, [lr, #1]
 803064e:	4613      	mov	r3, r2
 8030650:	f852 202e 	ldr.w	r2, [r2, lr, lsl #2]
 8030654:	9224      	str	r2, [sp, #144]	@ 0x90
 8030656:	0e12      	lsrs	r2, r2, #24
 8030658:	921a      	str	r2, [sp, #104]	@ 0x68
 803065a:	2f00      	cmp	r7, #0
 803065c:	f040 8171 	bne.w	8030942 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x79e>
 8030660:	b280      	uxth	r0, r0
 8030662:	b2bf      	uxth	r7, r7
 8030664:	fb00 f207 	mul.w	r2, r0, r7
 8030668:	ea4f 1c00 	mov.w	ip, r0, lsl #4
 803066c:	ebac 0002 	sub.w	r0, ip, r2
 8030670:	b280      	uxth	r0, r0
 8030672:	4603      	mov	r3, r0
 8030674:	9010      	str	r0, [sp, #64]	@ 0x40
 8030676:	981a      	ldr	r0, [sp, #104]	@ 0x68
 8030678:	ebc2 1707 	rsb	r7, r2, r7, lsl #4
 803067c:	fb03 f000 	mul.w	r0, r3, r0
 8030680:	fa1f fe87 	uxth.w	lr, r7
 8030684:	f5cc 7780 	rsb	r7, ip, #256	@ 0x100
 8030688:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 803068a:	eba7 070e 	sub.w	r7, r7, lr
 803068e:	b2bf      	uxth	r7, r7
 8030690:	fb07 0003 	mla	r0, r7, r3, r0
 8030694:	9719      	str	r7, [sp, #100]	@ 0x64
 8030696:	9f1b      	ldr	r7, [sp, #108]	@ 0x6c
 8030698:	fb0e 0007 	mla	r0, lr, r7, r0
 803069c:	9f1c      	ldr	r7, [sp, #112]	@ 0x70
 803069e:	fb02 0007 	mla	r0, r2, r7, r0
 80306a2:	f3c0 2007 	ubfx	r0, r0, #8, #8
 80306a6:	900f      	str	r0, [sp, #60]	@ 0x3c
 80306a8:	2800      	cmp	r0, #0
 80306aa:	f000 80f6 	beq.w	803089a <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6f6>
 80306ae:	9909      	ldr	r1, [sp, #36]	@ 0x24
 80306b0:	2bff      	cmp	r3, #255	@ 0xff
 80306b2:	f001 10ff 	and.w	r0, r1, #16711935	@ 0xff00ff
 80306b6:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 80306ba:	901d      	str	r0, [sp, #116]	@ 0x74
 80306bc:	9109      	str	r1, [sp, #36]	@ 0x24
 80306be:	d01b      	beq.n	80306f8 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x554>
 80306c0:	fb01 f103 	mul.w	r1, r1, r3
 80306c4:	fb00 f003 	mul.w	r0, r0, r3
 80306c8:	460b      	mov	r3, r1
 80306ca:	0a01      	lsrs	r1, r0, #8
 80306cc:	f100 1701 	add.w	r7, r0, #65537	@ 0x10001
 80306d0:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 80306d4:	f503 7080 	add.w	r0, r3, #256	@ 0x100
 80306d8:	4439      	add	r1, r7
 80306da:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 80306de:	0a09      	lsrs	r1, r1, #8
 80306e0:	0a1b      	lsrs	r3, r3, #8
 80306e2:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 80306e6:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 80306ea:	430b      	orrs	r3, r1
 80306ec:	f003 11ff 	and.w	r1, r3, #16711935	@ 0xff00ff
 80306f0:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 80306f4:	911d      	str	r1, [sp, #116]	@ 0x74
 80306f6:	9309      	str	r3, [sp, #36]	@ 0x24
 80306f8:	9924      	ldr	r1, [sp, #144]	@ 0x90
 80306fa:	9f1a      	ldr	r7, [sp, #104]	@ 0x68
 80306fc:	f001 13ff 	and.w	r3, r1, #16711935	@ 0xff00ff
 8030700:	2fff      	cmp	r7, #255	@ 0xff
 8030702:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 8030706:	931e      	str	r3, [sp, #120]	@ 0x78
 8030708:	911f      	str	r1, [sp, #124]	@ 0x7c
 803070a:	d01c      	beq.n	8030746 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a2>
 803070c:	fb01 f107 	mul.w	r1, r1, r7
 8030710:	fb03 f307 	mul.w	r3, r3, r7
 8030714:	460f      	mov	r7, r1
 8030716:	0a19      	lsrs	r1, r3, #8
 8030718:	f103 1001 	add.w	r0, r3, #65537	@ 0x10001
 803071c:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 8030720:	f507 7380 	add.w	r3, r7, #256	@ 0x100
 8030724:	4401      	add	r1, r0
 8030726:	eb03 2317 	add.w	r3, r3, r7, lsr #8
 803072a:	0a09      	lsrs	r1, r1, #8
 803072c:	0a1b      	lsrs	r3, r3, #8
 803072e:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 8030732:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 8030736:	ea41 0003 	orr.w	r0, r1, r3
 803073a:	f000 13ff 	and.w	r3, r0, #16711935	@ 0xff00ff
 803073e:	931e      	str	r3, [sp, #120]	@ 0x78
 8030740:	f400 437f 	and.w	r3, r0, #65280	@ 0xff00
 8030744:	931f      	str	r3, [sp, #124]	@ 0x7c
 8030746:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 8030748:	f003 11ff 	and.w	r1, r3, #16711935	@ 0xff00ff
 803074c:	f403 4c7f 	and.w	ip, r3, #65280	@ 0xff00
 8030750:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 8030752:	9120      	str	r1, [sp, #128]	@ 0x80
 8030754:	2bff      	cmp	r3, #255	@ 0xff
 8030756:	d01b      	beq.n	8030790 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ec>
 8030758:	fb01 f103 	mul.w	r1, r1, r3
 803075c:	fb0c fc03 	mul.w	ip, ip, r3
 8030760:	0a08      	lsrs	r0, r1, #8
 8030762:	f50c 7380 	add.w	r3, ip, #256	@ 0x100
 8030766:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 803076a:	f101 1101 	add.w	r1, r1, #65537	@ 0x10001
 803076e:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 8030772:	4401      	add	r1, r0
 8030774:	0a09      	lsrs	r1, r1, #8
 8030776:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 803077a:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 803077e:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 8030782:	ea41 0c0c 	orr.w	ip, r1, ip
 8030786:	f00c 13ff 	and.w	r3, ip, #16711935	@ 0xff00ff
 803078a:	9320      	str	r3, [sp, #128]	@ 0x80
 803078c:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 8030790:	9827      	ldr	r0, [sp, #156]	@ 0x9c
 8030792:	f000 13ff 	and.w	r3, r0, #16711935	@ 0xff00ff
 8030796:	f400 477f 	and.w	r7, r0, #65280	@ 0xff00
 803079a:	981c      	ldr	r0, [sp, #112]	@ 0x70
 803079c:	9321      	str	r3, [sp, #132]	@ 0x84
 803079e:	28ff      	cmp	r0, #255	@ 0xff
 80307a0:	d019      	beq.n	80307d6 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x632>
 80307a2:	fb03 f300 	mul.w	r3, r3, r0
 80307a6:	fb07 f700 	mul.w	r7, r7, r0
 80307aa:	0a18      	lsrs	r0, r3, #8
 80307ac:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 80307b0:	f103 1301 	add.w	r3, r3, #65537	@ 0x10001
 80307b4:	f507 7180 	add.w	r1, r7, #256	@ 0x100
 80307b8:	4418      	add	r0, r3
 80307ba:	eb01 2717 	add.w	r7, r1, r7, lsr #8
 80307be:	0a00      	lsrs	r0, r0, #8
 80307c0:	0a3f      	lsrs	r7, r7, #8
 80307c2:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 80307c6:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 80307ca:	4307      	orrs	r7, r0
 80307cc:	f007 13ff 	and.w	r3, r7, #16711935	@ 0xff00ff
 80307d0:	9321      	str	r3, [sp, #132]	@ 0x84
 80307d2:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 80307d6:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 80307d8:	9817      	ldr	r0, [sp, #92]	@ 0x5c
 80307da:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 80307dc:	fb01 f100 	mul.w	r1, r1, r0
 80307e0:	4608      	mov	r0, r1
 80307e2:	3101      	adds	r1, #1
 80307e4:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 80307e8:	ea6f 2110 	mvn.w	r1, r0, lsr #8
 80307ec:	9810      	ldr	r0, [sp, #64]	@ 0x40
 80307ee:	9125      	str	r1, [sp, #148]	@ 0x94
 80307f0:	991e      	ldr	r1, [sp, #120]	@ 0x78
 80307f2:	fb01 f100 	mul.w	r1, r1, r0
 80307f6:	910f      	str	r1, [sp, #60]	@ 0x3c
 80307f8:	991f      	ldr	r1, [sp, #124]	@ 0x7c
 80307fa:	fb01 f100 	mul.w	r1, r1, r0
 80307fe:	9110      	str	r1, [sp, #64]	@ 0x40
 8030800:	991d      	ldr	r1, [sp, #116]	@ 0x74
 8030802:	4608      	mov	r0, r1
 8030804:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 8030806:	fb00 1103 	mla	r1, r0, r3, r1
 803080a:	910f      	str	r1, [sp, #60]	@ 0x3c
 803080c:	9909      	ldr	r1, [sp, #36]	@ 0x24
 803080e:	4608      	mov	r0, r1
 8030810:	9910      	ldr	r1, [sp, #64]	@ 0x40
 8030812:	fb00 1003 	mla	r0, r0, r3, r1
 8030816:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8030818:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 803081a:	fb0c 000e 	mla	r0, ip, lr, r0
 803081e:	fb03 110e 	mla	r1, r3, lr, r1
 8030822:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 8030824:	f89a c002 	ldrb.w	ip, [sl, #2]
 8030828:	fb03 1102 	mla	r1, r3, r2, r1
 803082c:	fb07 0302 	mla	r3, r7, r2, r0
 8030830:	0a0a      	lsrs	r2, r1, #8
 8030832:	0a1b      	lsrs	r3, r3, #8
 8030834:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 8030838:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 803083c:	4313      	orrs	r3, r2
 803083e:	9a17      	ldr	r2, [sp, #92]	@ 0x5c
 8030840:	b2df      	uxtb	r7, r3
 8030842:	f3c3 2007 	ubfx	r0, r3, #8, #8
 8030846:	0c1b      	lsrs	r3, r3, #16
 8030848:	fb17 f702 	smulbb	r7, r7, r2
 803084c:	fb10 f002 	smulbb	r0, r0, r2
 8030850:	fb13 f302 	smulbb	r3, r3, r2
 8030854:	f89d e094 	ldrb.w	lr, [sp, #148]	@ 0x94
 8030858:	f89a 1000 	ldrb.w	r1, [sl]
 803085c:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8030860:	fb01 710e 	mla	r1, r1, lr, r7
 8030864:	fb02 020e 	mla	r2, r2, lr, r0
 8030868:	fb0c 330e 	mla	r3, ip, lr, r3
 803086c:	b297      	uxth	r7, r2
 803086e:	fa1f fc81 	uxth.w	ip, r1
 8030872:	b298      	uxth	r0, r3
 8030874:	f10c 0101 	add.w	r1, ip, #1
 8030878:	1c7a      	adds	r2, r7, #1
 803087a:	1c43      	adds	r3, r0, #1
 803087c:	eb01 211c 	add.w	r1, r1, ip, lsr #8
 8030880:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 8030884:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8030888:	1209      	asrs	r1, r1, #8
 803088a:	1212      	asrs	r2, r2, #8
 803088c:	121b      	asrs	r3, r3, #8
 803088e:	f88a 1000 	strb.w	r1, [sl]
 8030892:	f88a 2001 	strb.w	r2, [sl, #1]
 8030896:	f88a 3002 	strb.w	r3, [sl, #2]
 803089a:	f1b8 0f00 	cmp.w	r8, #0
 803089e:	f10a 0a04 	add.w	sl, sl, #4
 80308a2:	44b1      	add	r9, r6
 80308a4:	44ab      	add	fp, r5
 80308a6:	dd30      	ble.n	803090a <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x766>
 80308a8:	e9d4 1e02 	ldrd	r1, lr, [r4, #8]
 80308ac:	ea4f 4329 	mov.w	r3, r9, asr #16
 80308b0:	2b00      	cmp	r3, #0
 80308b2:	f108 38ff 	add.w	r8, r8, #4294967295
 80308b6:	ea4f 422b 	mov.w	r2, fp, asr #16
 80308ba:	f3c9 3003 	ubfx	r0, r9, #12, #4
 80308be:	f3cb 3703 	ubfx	r7, fp, #12, #4
 80308c2:	f6bf aea3 	bge.w	803060c <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x468>
 80308c6:	f113 0c01 	adds.w	ip, r3, #1
 80308ca:	d4e6      	bmi.n	803089a <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6f6>
 80308cc:	458c      	cmp	ip, r1
 80308ce:	dce4      	bgt.n	803089a <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6f6>
 80308d0:	f112 0c01 	adds.w	ip, r2, #1
 80308d4:	d4e1      	bmi.n	803089a <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6f6>
 80308d6:	45f4      	cmp	ip, lr
 80308d8:	dcdf      	bgt.n	803089a <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6f6>
 80308da:	fa0f fe8e 	sxth.w	lr, lr
 80308de:	b209      	sxth	r1, r1
 80308e0:	e9cd 1e00 	strd	r1, lr, [sp]
 80308e4:	9923      	ldr	r1, [sp, #140]	@ 0x8c
 80308e6:	e9cd 2003 	strd	r2, r0, [sp, #12]
 80308ea:	e9cd 7105 	strd	r7, r1, [sp, #20]
 80308ee:	9302      	str	r3, [sp, #8]
 80308f0:	4651      	mov	r1, sl
 80308f2:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 80308f4:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 80308f6:	9822      	ldr	r0, [sp, #136]	@ 0x88
 80308f8:	f7ff fab0 	bl	802fe5c <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh>
 80308fc:	f1b8 0f00 	cmp.w	r8, #0
 8030900:	f10a 0a04 	add.w	sl, sl, #4
 8030904:	44b1      	add	r9, r6
 8030906:	44ab      	add	fp, r5
 8030908:	dcce      	bgt.n	80308a8 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x704>
 803090a:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 803090c:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 803090e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8030912:	3301      	adds	r3, #1
 8030914:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 8030918:	9312      	str	r3, [sp, #72]	@ 0x48
 803091a:	e4a8      	b.n	803026e <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xca>
 803091c:	9112      	str	r1, [sp, #72]	@ 0x48
 803091e:	f10e 31ff 	add.w	r1, lr, #4294967295
 8030922:	9f09      	ldr	r7, [sp, #36]	@ 0x24
 8030924:	910a      	str	r1, [sp, #40]	@ 0x28
 8030926:	4688      	mov	r8, r1
 8030928:	e662      	b.n	80305f0 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44c>
 803092a:	2f00      	cmp	r7, #0
 803092c:	f43f ae98 	beq.w	8030660 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4bc>
 8030930:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8030932:	f81e 200c 	ldrb.w	r2, [lr, ip]
 8030936:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 803093a:	0e13      	lsrs	r3, r2, #24
 803093c:	9226      	str	r2, [sp, #152]	@ 0x98
 803093e:	931b      	str	r3, [sp, #108]	@ 0x6c
 8030940:	e68e      	b.n	8030660 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4bc>
 8030942:	eb01 0e0c 	add.w	lr, r1, ip
 8030946:	f89e e001 	ldrb.w	lr, [lr, #1]
 803094a:	f811 c00c 	ldrb.w	ip, [r1, ip]
 803094e:	f853 202e 	ldr.w	r2, [r3, lr, lsl #2]
 8030952:	4611      	mov	r1, r2
 8030954:	9227      	str	r2, [sp, #156]	@ 0x9c
 8030956:	f853 202c 	ldr.w	r2, [r3, ip, lsl #2]
 803095a:	4613      	mov	r3, r2
 803095c:	9226      	str	r2, [sp, #152]	@ 0x98
 803095e:	0e0a      	lsrs	r2, r1, #24
 8030960:	921c      	str	r2, [sp, #112]	@ 0x70
 8030962:	0e1a      	lsrs	r2, r3, #24
 8030964:	921b      	str	r2, [sp, #108]	@ 0x6c
 8030966:	e67b      	b.n	8030660 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4bc>
 8030968:	f43f ac81 	beq.w	803026e <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xca>
 803096c:	1e44      	subs	r4, r0, #1
 803096e:	e4c2      	b.n	80302f6 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>

08030970 <_ZN8touchgfx19GPU2DVectorRenderer19setStrokeMiterLimitEf>:
 8030970:	4770      	bx	lr
 8030972:	bf00      	nop

08030974 <_ZN8touchgfx19GPU2DVectorRenderer17setStrokeLineJoinENS_16VGStrokeLineJoinE>:
 8030974:	4770      	bx	lr
 8030976:	bf00      	nop

08030978 <_ZN8touchgfx19GPU2DVectorRenderer16setStrokeLineCapENS_15VGStrokeLineCapE>:
 8030978:	4770      	bx	lr
 803097a:	bf00      	nop

0803097c <_ZN8touchgfx19GPU2DVectorRenderer23setTransformationMatrixERKNS_9Matrix3x3E>:
 803097c:	680a      	ldr	r2, [r1, #0]
 803097e:	4b09      	ldr	r3, [pc, #36]	@ (80309a4 <_ZN8touchgfx19GPU2DVectorRenderer23setTransformationMatrixERKNS_9Matrix3x3E+0x28>)
 8030980:	601a      	str	r2, [r3, #0]
 8030982:	684a      	ldr	r2, [r1, #4]
 8030984:	605a      	str	r2, [r3, #4]
 8030986:	688a      	ldr	r2, [r1, #8]
 8030988:	609a      	str	r2, [r3, #8]
 803098a:	68ca      	ldr	r2, [r1, #12]
 803098c:	60da      	str	r2, [r3, #12]
 803098e:	690a      	ldr	r2, [r1, #16]
 8030990:	611a      	str	r2, [r3, #16]
 8030992:	694a      	ldr	r2, [r1, #20]
 8030994:	615a      	str	r2, [r3, #20]
 8030996:	698a      	ldr	r2, [r1, #24]
 8030998:	619a      	str	r2, [r3, #24]
 803099a:	69ca      	ldr	r2, [r1, #28]
 803099c:	61da      	str	r2, [r3, #28]
 803099e:	6a0a      	ldr	r2, [r1, #32]
 80309a0:	621a      	str	r2, [r3, #32]
 80309a2:	4770      	bx	lr
 80309a4:	200835a0 	.word	0x200835a0

080309a8 <_ZN8touchgfx19GPU2DVectorRendererD1Ev>:
 80309a8:	4770      	bx	lr
 80309aa:	bf00      	nop

080309ac <_ZN8touchgfx19GPU2DVectorRenderer5setupERKNS_4RectES3_>:
 80309ac:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80309b0:	4f58      	ldr	r7, [pc, #352]	@ (8030b14 <_ZN8touchgfx19GPU2DVectorRenderer5setupERKNS_4RectES3_+0x168>)
 80309b2:	b08c      	sub	sp, #48	@ 0x30
 80309b4:	6838      	ldr	r0, [r7, #0]
 80309b6:	2800      	cmp	r0, #0
 80309b8:	f000 8093 	beq.w	8030ae2 <_ZN8touchgfx19GPU2DVectorRenderer5setupERKNS_4RectES3_+0x136>
 80309bc:	460e      	mov	r6, r1
 80309be:	4615      	mov	r5, r2
 80309c0:	f7f0 fa4a 	bl	8020e58 <_ZN8touchgfx8HALGPU2D14bindExecBufferEv>
 80309c4:	683c      	ldr	r4, [r7, #0]
 80309c6:	2c00      	cmp	r4, #0
 80309c8:	f000 808b 	beq.w	8030ae2 <_ZN8touchgfx19GPU2DVectorRenderer5setupERKNS_4RectES3_+0x136>
 80309cc:	4b52      	ldr	r3, [pc, #328]	@ (8030b18 <_ZN8touchgfx19GPU2DVectorRenderer5setupERKNS_4RectES3_+0x16c>)
 80309ce:	781b      	ldrb	r3, [r3, #0]
 80309d0:	2b00      	cmp	r3, #0
 80309d2:	d178      	bne.n	8030ac6 <_ZN8touchgfx19GPU2DVectorRenderer5setupERKNS_4RectES3_+0x11a>
 80309d4:	f8d4 803c 	ldr.w	r8, [r4, #60]	@ 0x3c
 80309d8:	4b50      	ldr	r3, [pc, #320]	@ (8030b1c <_ZN8touchgfx19GPU2DVectorRenderer5setupERKNS_4RectES3_+0x170>)
 80309da:	681b      	ldr	r3, [r3, #0]
 80309dc:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
 80309e0:	2a00      	cmp	r2, #0
 80309e2:	d151      	bne.n	8030a88 <_ZN8touchgfx19GPU2DVectorRenderer5setupERKNS_4RectES3_+0xdc>
 80309e4:	6898      	ldr	r0, [r3, #8]
 80309e6:	6803      	ldr	r3, [r0, #0]
 80309e8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80309ea:	4798      	blx	r3
 80309ec:	2801      	cmp	r0, #1
 80309ee:	d053      	beq.n	8030a98 <_ZN8touchgfx19GPU2DVectorRenderer5setupERKNS_4RectES3_+0xec>
 80309f0:	d35e      	bcc.n	8030ab0 <_ZN8touchgfx19GPU2DVectorRenderer5setupERKNS_4RectES3_+0x104>
 80309f2:	2802      	cmp	r0, #2
 80309f4:	f040 8087 	bne.w	8030b06 <_ZN8touchgfx19GPU2DVectorRenderer5setupERKNS_4RectES3_+0x15a>
 80309f8:	4a49      	ldr	r2, [pc, #292]	@ (8030b20 <_ZN8touchgfx19GPU2DVectorRenderer5setupERKNS_4RectES3_+0x174>)
 80309fa:	4b4a      	ldr	r3, [pc, #296]	@ (8030b24 <_ZN8touchgfx19GPU2DVectorRenderer5setupERKNS_4RectES3_+0x178>)
 80309fc:	8811      	ldrh	r1, [r2, #0]
 80309fe:	881a      	ldrh	r2, [r3, #0]
 8030a00:	008b      	lsls	r3, r1, #2
 8030a02:	9300      	str	r3, [sp, #0]
 8030a04:	4640      	mov	r0, r8
 8030a06:	2310      	movs	r3, #16
 8030a08:	f7e0 fc18 	bl	801123c <nema_bind_dst_tex>
 8030a0c:	4c46      	ldr	r4, [pc, #280]	@ (8030b28 <_ZN8touchgfx19GPU2DVectorRenderer5setupERKNS_4RectES3_+0x17c>)
 8030a0e:	4847      	ldr	r0, [pc, #284]	@ (8030b2c <_ZN8touchgfx19GPU2DVectorRenderer5setupERKNS_4RectES3_+0x180>)
 8030a10:	f7e1 f8be 	bl	8011b90 <nema_mat3x3_load_identity>
 8030a14:	6823      	ldr	r3, [r4, #0]
 8030a16:	2b00      	cmp	r3, #0
 8030a18:	d069      	beq.n	8030aee <_ZN8touchgfx19GPU2DVectorRenderer5setupERKNS_4RectES3_+0x142>
 8030a1a:	882a      	ldrh	r2, [r5, #0]
 8030a1c:	886b      	ldrh	r3, [r5, #2]
 8030a1e:	8831      	ldrh	r1, [r6, #0]
 8030a20:	8874      	ldrh	r4, [r6, #2]
 8030a22:	4f43      	ldr	r7, [pc, #268]	@ (8030b30 <_ZN8touchgfx19GPU2DVectorRenderer5setupERKNS_4RectES3_+0x184>)
 8030a24:	4411      	add	r1, r2
 8030a26:	441c      	add	r4, r3
 8030a28:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 8030a2c:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 8030a30:	686d      	ldr	r5, [r5, #4]
 8030a32:	b209      	sxth	r1, r1
 8030a34:	b224      	sxth	r4, r4
 8030a36:	4608      	mov	r0, r1
 8030a38:	8039      	strh	r1, [r7, #0]
 8030a3a:	607d      	str	r5, [r7, #4]
 8030a3c:	4621      	mov	r1, r4
 8030a3e:	807c      	strh	r4, [r7, #2]
 8030a40:	f7e0 fa92 	bl	8010f68 <nema_set_clip>
 8030a44:	483b      	ldr	r0, [pc, #236]	@ (8030b34 <_ZN8touchgfx19GPU2DVectorRenderer5setupERKNS_4RectES3_+0x188>)
 8030a46:	f7ec f95d 	bl	801cd04 <nema_vg_set_blend>
 8030a4a:	2002      	movs	r0, #2
 8030a4c:	f7ec f960 	bl	801cd10 <nema_vg_set_quality>
 8030a50:	f7ed fa34 	bl	801debc <nema_cl_get_bound>
 8030a54:	4b38      	ldr	r3, [pc, #224]	@ (8030b38 <_ZN8touchgfx19GPU2DVectorRenderer5setupERKNS_4RectES3_+0x18c>)
 8030a56:	6018      	str	r0, [r3, #0]
 8030a58:	a803      	add	r0, sp, #12
 8030a5a:	f7e1 f899 	bl	8011b90 <nema_mat3x3_load_identity>
 8030a5e:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
 8030a62:	a803      	add	r0, sp, #12
 8030a64:	ee00 3a90 	vmov	s1, r3
 8030a68:	f9b6 3000 	ldrsh.w	r3, [r6]
 8030a6c:	eef8 0ae0 	vcvt.f32.s32	s1, s1
 8030a70:	ee00 3a10 	vmov	s0, r3
 8030a74:	eeb8 0ac0 	vcvt.f32.s32	s0, s0
 8030a78:	f7e1 f8ac 	bl	8011bd4 <nema_mat3x3_translate>
 8030a7c:	a803      	add	r0, sp, #12
 8030a7e:	f7ec f957 	bl	801cd30 <nema_vg_set_global_matrix>
 8030a82:	b00c      	add	sp, #48	@ 0x30
 8030a84:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8030a88:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
 8030a8a:	2800      	cmp	r0, #0
 8030a8c:	d0aa      	beq.n	80309e4 <_ZN8touchgfx19GPU2DVectorRenderer5setupERKNS_4RectES3_+0x38>
 8030a8e:	6803      	ldr	r3, [r0, #0]
 8030a90:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8030a92:	4798      	blx	r3
 8030a94:	2801      	cmp	r0, #1
 8030a96:	d1ab      	bne.n	80309f0 <_ZN8touchgfx19GPU2DVectorRenderer5setupERKNS_4RectES3_+0x44>
 8030a98:	4a21      	ldr	r2, [pc, #132]	@ (8030b20 <_ZN8touchgfx19GPU2DVectorRenderer5setupERKNS_4RectES3_+0x174>)
 8030a9a:	4b22      	ldr	r3, [pc, #136]	@ (8030b24 <_ZN8touchgfx19GPU2DVectorRenderer5setupERKNS_4RectES3_+0x178>)
 8030a9c:	8811      	ldrh	r1, [r2, #0]
 8030a9e:	881a      	ldrh	r2, [r3, #0]
 8030aa0:	eb01 0341 	add.w	r3, r1, r1, lsl #1
 8030aa4:	9300      	str	r3, [sp, #0]
 8030aa6:	4640      	mov	r0, r8
 8030aa8:	2339      	movs	r3, #57	@ 0x39
 8030aaa:	f7e0 fbc7 	bl	801123c <nema_bind_dst_tex>
 8030aae:	e7ad      	b.n	8030a0c <_ZN8touchgfx19GPU2DVectorRenderer5setupERKNS_4RectES3_+0x60>
 8030ab0:	4a1b      	ldr	r2, [pc, #108]	@ (8030b20 <_ZN8touchgfx19GPU2DVectorRenderer5setupERKNS_4RectES3_+0x174>)
 8030ab2:	4b1c      	ldr	r3, [pc, #112]	@ (8030b24 <_ZN8touchgfx19GPU2DVectorRenderer5setupERKNS_4RectES3_+0x178>)
 8030ab4:	8811      	ldrh	r1, [r2, #0]
 8030ab6:	881a      	ldrh	r2, [r3, #0]
 8030ab8:	004b      	lsls	r3, r1, #1
 8030aba:	9300      	str	r3, [sp, #0]
 8030abc:	4640      	mov	r0, r8
 8030abe:	2304      	movs	r3, #4
 8030ac0:	f7e0 fbbc 	bl	801123c <nema_bind_dst_tex>
 8030ac4:	e7a2      	b.n	8030a0c <_ZN8touchgfx19GPU2DVectorRenderer5setupERKNS_4RectES3_+0x60>
 8030ac6:	6823      	ldr	r3, [r4, #0]
 8030ac8:	4620      	mov	r0, r4
 8030aca:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8030acc:	4798      	blx	r3
 8030ace:	f8d4 803c 	ldr.w	r8, [r4, #60]	@ 0x3c
 8030ad2:	683b      	ldr	r3, [r7, #0]
 8030ad4:	4580      	cmp	r8, r0
 8030ad6:	bf08      	it	eq
 8030ad8:	f8d4 8040 	ldreq.w	r8, [r4, #64]	@ 0x40
 8030adc:	2b00      	cmp	r3, #0
 8030ade:	f47f af7b 	bne.w	80309d8 <_ZN8touchgfx19GPU2DVectorRenderer5setupERKNS_4RectES3_+0x2c>
 8030ae2:	4b16      	ldr	r3, [pc, #88]	@ (8030b3c <_ZN8touchgfx19GPU2DVectorRenderer5setupERKNS_4RectES3_+0x190>)
 8030ae4:	4a16      	ldr	r2, [pc, #88]	@ (8030b40 <_ZN8touchgfx19GPU2DVectorRenderer5setupERKNS_4RectES3_+0x194>)
 8030ae6:	217c      	movs	r1, #124	@ 0x7c
 8030ae8:	4816      	ldr	r0, [pc, #88]	@ (8030b44 <_ZN8touchgfx19GPU2DVectorRenderer5setupERKNS_4RectES3_+0x198>)
 8030aea:	f001 fe45 	bl	8032778 <__assert_func>
 8030aee:	f7ec f975 	bl	801cddc <nema_vg_paint_create>
 8030af2:	6020      	str	r0, [r4, #0]
 8030af4:	f7ec fdc4 	bl	801d680 <nema_vg_path_create>
 8030af8:	4b13      	ldr	r3, [pc, #76]	@ (8030b48 <_ZN8touchgfx19GPU2DVectorRenderer5setupERKNS_4RectES3_+0x19c>)
 8030afa:	2101      	movs	r1, #1
 8030afc:	6018      	str	r0, [r3, #0]
 8030afe:	6820      	ldr	r0, [r4, #0]
 8030b00:	f7ec f9a2 	bl	801ce48 <nema_vg_paint_lock_tran_to_path>
 8030b04:	e789      	b.n	8030a1a <_ZN8touchgfx19GPU2DVectorRenderer5setupERKNS_4RectES3_+0x6e>
 8030b06:	4b11      	ldr	r3, [pc, #68]	@ (8030b4c <_ZN8touchgfx19GPU2DVectorRenderer5setupERKNS_4RectES3_+0x1a0>)
 8030b08:	4a11      	ldr	r2, [pc, #68]	@ (8030b50 <_ZN8touchgfx19GPU2DVectorRenderer5setupERKNS_4RectES3_+0x1a4>)
 8030b0a:	212c      	movs	r1, #44	@ 0x2c
 8030b0c:	4811      	ldr	r0, [pc, #68]	@ (8030b54 <_ZN8touchgfx19GPU2DVectorRenderer5setupERKNS_4RectES3_+0x1a8>)
 8030b0e:	f001 fe33 	bl	8032778 <__assert_func>
 8030b12:	bf00      	nop
 8030b14:	20083544 	.word	0x20083544
 8030b18:	200830a2 	.word	0x200830a2
 8030b1c:	200830a4 	.word	0x200830a4
 8030b20:	2008309e 	.word	0x2008309e
 8030b24:	200830a0 	.word	0x200830a0
 8030b28:	200835d0 	.word	0x200835d0
 8030b2c:	200835a0 	.word	0x200835a0
 8030b30:	200835d4 	.word	0x200835d4
 8030b34:	04000501 	.word	0x04000501
 8030b38:	200835c4 	.word	0x200835c4
 8030b3c:	080364bc 	.word	0x080364bc
 8030b40:	080384b4 	.word	0x080384b4
 8030b44:	080364e4 	.word	0x080364e4
 8030b48:	200835cc 	.word	0x200835cc
 8030b4c:	08036518 	.word	0x08036518
 8030b50:	08038454 	.word	0x08038454
 8030b54:	080382b0 	.word	0x080382b0

08030b58 <_ZN8touchgfx19GPU2DVectorRenderer7setModeENS_14VectorRenderer8DrawModeE>:
 8030b58:	2901      	cmp	r1, #1
 8030b5a:	d002      	beq.n	8030b62 <_ZN8touchgfx19GPU2DVectorRenderer7setModeENS_14VectorRenderer8DrawModeE+0xa>
 8030b5c:	d305      	bcc.n	8030b6a <_ZN8touchgfx19GPU2DVectorRenderer7setModeENS_14VectorRenderer8DrawModeE+0x12>
 8030b5e:	2902      	cmp	r1, #2
 8030b60:	d102      	bne.n	8030b68 <_ZN8touchgfx19GPU2DVectorRenderer7setModeENS_14VectorRenderer8DrawModeE+0x10>
 8030b62:	4608      	mov	r0, r1
 8030b64:	f7ec b8c0 	b.w	801cce8 <nema_vg_set_fill_rule>
 8030b68:	4770      	bx	lr
 8030b6a:	2000      	movs	r0, #0
 8030b6c:	f7ec b8bc 	b.w	801cce8 <nema_vg_set_fill_rule>

08030b70 <_ZN8touchgfx19GPU2DVectorRenderer8tearDownEv>:
 8030b70:	b510      	push	{r4, lr}
 8030b72:	4b06      	ldr	r3, [pc, #24]	@ (8030b8c <_ZN8touchgfx19GPU2DVectorRenderer8tearDownEv+0x1c>)
 8030b74:	4c06      	ldr	r4, [pc, #24]	@ (8030b90 <_ZN8touchgfx19GPU2DVectorRenderer8tearDownEv+0x20>)
 8030b76:	6818      	ldr	r0, [r3, #0]
 8030b78:	f7ed fad2 	bl	801e120 <nema_cl_submit>
 8030b7c:	6820      	ldr	r0, [r4, #0]
 8030b7e:	b118      	cbz	r0, 8030b88 <_ZN8touchgfx19GPU2DVectorRenderer8tearDownEv+0x18>
 8030b80:	f7ec f988 	bl	801ce94 <nema_vg_grad_destroy>
 8030b84:	2300      	movs	r3, #0
 8030b86:	6023      	str	r3, [r4, #0]
 8030b88:	bd10      	pop	{r4, pc}
 8030b8a:	bf00      	nop
 8030b8c:	200835c4 	.word	0x200835c4
 8030b90:	200835c8 	.word	0x200835c8

08030b94 <_ZN8touchgfx19GPU2DVectorRenderer8drawPathEPKhmPKfmS4_>:
 8030b94:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8030b98:	4c13      	ldr	r4, [pc, #76]	@ (8030be8 <_ZN8touchgfx19GPU2DVectorRenderer8drawPathEPKhmPKfmS4_+0x54>)
 8030b9a:	b083      	sub	sp, #12
 8030b9c:	6820      	ldr	r0, [r4, #0]
 8030b9e:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 8030ba0:	460f      	mov	r7, r1
 8030ba2:	4616      	mov	r6, r2
 8030ba4:	4699      	mov	r9, r3
 8030ba6:	f8dd 8028 	ldr.w	r8, [sp, #40]	@ 0x28
 8030baa:	f7ec fd61 	bl	801d670 <nema_vg_path_clear>
 8030bae:	6820      	ldr	r0, [r4, #0]
 8030bb0:	490e      	ldr	r1, [pc, #56]	@ (8030bec <_ZN8touchgfx19GPU2DVectorRenderer8drawPathEPKhmPKfmS4_+0x58>)
 8030bb2:	f7ec fdeb 	bl	801d78c <nema_vg_path_set_matrix>
 8030bb6:	6820      	ldr	r0, [r4, #0]
 8030bb8:	b175      	cbz	r5, 8030bd8 <_ZN8touchgfx19GPU2DVectorRenderer8drawPathEPKhmPKfmS4_+0x44>
 8030bba:	e9cd 9500 	strd	r9, r5, [sp]
 8030bbe:	4643      	mov	r3, r8
 8030bc0:	463a      	mov	r2, r7
 8030bc2:	4631      	mov	r1, r6
 8030bc4:	f7ec fd64 	bl	801d690 <nema_vg_path_set_shape_and_bbox>
 8030bc8:	4b09      	ldr	r3, [pc, #36]	@ (8030bf0 <_ZN8touchgfx19GPU2DVectorRenderer8drawPathEPKhmPKfmS4_+0x5c>)
 8030bca:	6820      	ldr	r0, [r4, #0]
 8030bcc:	6819      	ldr	r1, [r3, #0]
 8030bce:	b003      	add	sp, #12
 8030bd0:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8030bd4:	f7e7 bd64 	b.w	80186a0 <nema_vg_draw_path>
 8030bd8:	f8cd 9000 	str.w	r9, [sp]
 8030bdc:	4643      	mov	r3, r8
 8030bde:	463a      	mov	r2, r7
 8030be0:	4631      	mov	r1, r6
 8030be2:	f7ec fdc5 	bl	801d770 <nema_vg_path_set_shape>
 8030be6:	e7ef      	b.n	8030bc8 <_ZN8touchgfx19GPU2DVectorRenderer8drawPathEPKhmPKfmS4_+0x34>
 8030be8:	200835cc 	.word	0x200835cc
 8030bec:	200835a0 	.word	0x200835a0
 8030bf0:	200835d0 	.word	0x200835d0

08030bf4 <_ZN8touchgfx19GPU2DVectorRenderer14setStrokeWidthEf>:
 8030bf4:	b510      	push	{r4, lr}
 8030bf6:	ed2d 8b02 	vpush	{d8}
 8030bfa:	eeb0 8a40 	vmov.f32	s16, s0
 8030bfe:	4c07      	ldr	r4, [pc, #28]	@ (8030c1c <_ZN8touchgfx19GPU2DVectorRenderer14setStrokeWidthEf+0x28>)
 8030c00:	2100      	movs	r1, #0
 8030c02:	6820      	ldr	r0, [r4, #0]
 8030c04:	f7ec f914 	bl	801ce30 <nema_vg_paint_set_type>
 8030c08:	eeb0 0a48 	vmov.f32	s0, s16
 8030c0c:	ecbd 8b02 	vpop	{d8}
 8030c10:	6820      	ldr	r0, [r4, #0]
 8030c12:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8030c16:	f7ec bcbd 	b.w	801d594 <nema_vg_paint_set_stroke_width>
 8030c1a:	bf00      	nop
 8030c1c:	200835d0 	.word	0x200835d0

08030c20 <_ZN8touchgfx19GPU2DVectorRenderer8setColorENS_9colortypeE>:
 8030c20:	b538      	push	{r3, r4, r5, lr}
 8030c22:	460c      	mov	r4, r1
 8030c24:	4d09      	ldr	r5, [pc, #36]	@ (8030c4c <_ZN8touchgfx19GPU2DVectorRenderer8setColorENS_9colortypeE+0x2c>)
 8030c26:	2100      	movs	r1, #0
 8030c28:	6828      	ldr	r0, [r5, #0]
 8030c2a:	f7ec f901 	bl	801ce30 <nema_vg_paint_set_type>
 8030c2e:	f3c4 2107 	ubfx	r1, r4, #8, #8
 8030c32:	0e23      	lsrs	r3, r4, #24
 8030c34:	b2e2      	uxtb	r2, r4
 8030c36:	f3c4 4007 	ubfx	r0, r4, #16, #8
 8030c3a:	682d      	ldr	r5, [r5, #0]
 8030c3c:	f7e0 fa72 	bl	8011124 <nema_rgba>
 8030c40:	4601      	mov	r1, r0
 8030c42:	4628      	mov	r0, r5
 8030c44:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8030c48:	f7ec bc96 	b.w	801d578 <nema_vg_paint_set_paint_color>
 8030c4c:	200835d0 	.word	0x200835d0

08030c50 <_ZN8touchgfx19GPU2DVectorRenderer8setAlphaEh>:
 8030c50:	29ff      	cmp	r1, #255	@ 0xff
 8030c52:	d00b      	beq.n	8030c6c <_ZN8touchgfx19GPU2DVectorRenderer8setAlphaEh+0x1c>
 8030c54:	ee07 1a90 	vmov	s15, r1
 8030c58:	ed9f 7a07 	vldr	s14, [pc, #28]	@ 8030c78 <_ZN8touchgfx19GPU2DVectorRenderer8setAlphaEh+0x28>
 8030c5c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8030c60:	4b06      	ldr	r3, [pc, #24]	@ (8030c7c <_ZN8touchgfx19GPU2DVectorRenderer8setAlphaEh+0x2c>)
 8030c62:	ee87 0a87 	vdiv.f32	s0, s15, s14
 8030c66:	6818      	ldr	r0, [r3, #0]
 8030c68:	f7ec bc8c 	b.w	801d584 <nema_vg_paint_set_opacity>
 8030c6c:	4b03      	ldr	r3, [pc, #12]	@ (8030c7c <_ZN8touchgfx19GPU2DVectorRenderer8setAlphaEh+0x2c>)
 8030c6e:	eeb7 0a00 	vmov.f32	s0, #112	@ 0x3f800000  1.0
 8030c72:	6818      	ldr	r0, [r3, #0]
 8030c74:	f7ec bc86 	b.w	801d584 <nema_vg_paint_set_opacity>
 8030c78:	437f0000 	.word	0x437f0000
 8030c7c:	200835d0 	.word	0x200835d0

08030c80 <_ZN8touchgfx19GPU2DVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_>:
 8030c80:	b570      	push	{r4, r5, r6, lr}
 8030c82:	ed2d 8b08 	vpush	{d8-d11}
 8030c86:	290a      	cmp	r1, #10
 8030c88:	b0c4      	sub	sp, #272	@ 0x110
 8030c8a:	f200 8288 	bhi.w	803119e <_ZN8touchgfx19GPU2DVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x51e>
 8030c8e:	4dd8      	ldr	r5, [pc, #864]	@ (8030ff0 <_ZN8touchgfx19GPU2DVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x370>)
 8030c90:	4616      	mov	r6, r2
 8030c92:	682a      	ldr	r2, [r5, #0]
 8030c94:	460c      	mov	r4, r1
 8030c96:	eeb0 9a40 	vmov.f32	s18, s0
 8030c9a:	eef0 8a60 	vmov.f32	s17, s1
 8030c9e:	eef0 aa41 	vmov.f32	s21, s2
 8030ca2:	eeb0 8a61 	vmov.f32	s16, s3
 8030ca6:	eef0 9a42 	vmov.f32	s19, s4
 8030caa:	eeb0 aa62 	vmov.f32	s20, s5
 8030cae:	2a00      	cmp	r2, #0
 8030cb0:	f000 8197 	beq.w	8030fe2 <_ZN8touchgfx19GPU2DVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x362>
 8030cb4:	2c00      	cmp	r4, #0
 8030cb6:	f000 8157 	beq.w	8030f68 <_ZN8touchgfx19GPU2DVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x2e8>
 8030cba:	681a      	ldr	r2, [r3, #0]
 8030cbc:	2c01      	cmp	r4, #1
 8030cbe:	f3c2 4107 	ubfx	r1, r2, #16, #8
 8030cc2:	ee06 1a10 	vmov	s12, r1
 8030cc6:	f3c2 2107 	ubfx	r1, r2, #8, #8
 8030cca:	ee06 1a90 	vmov	s13, r1
 8030cce:	b2d1      	uxtb	r1, r2
 8030cd0:	ea4f 6212 	mov.w	r2, r2, lsr #24
 8030cd4:	ee07 1a10 	vmov	s14, r1
 8030cd8:	ee07 2a90 	vmov	s15, r2
 8030cdc:	eeb8 6a46 	vcvt.f32.u32	s12, s12
 8030ce0:	eef8 6a66 	vcvt.f32.u32	s13, s13
 8030ce4:	eeb8 7a47 	vcvt.f32.u32	s14, s14
 8030ce8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8030cec:	ed8d 6a1c 	vstr	s12, [sp, #112]	@ 0x70
 8030cf0:	edcd 6a1d 	vstr	s13, [sp, #116]	@ 0x74
 8030cf4:	ed8d 7a1e 	vstr	s14, [sp, #120]	@ 0x78
 8030cf8:	edcd 7a1f 	vstr	s15, [sp, #124]	@ 0x7c
 8030cfc:	f000 8134 	beq.w	8030f68 <_ZN8touchgfx19GPU2DVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x2e8>
 8030d00:	685a      	ldr	r2, [r3, #4]
 8030d02:	2c02      	cmp	r4, #2
 8030d04:	f3c2 4107 	ubfx	r1, r2, #16, #8
 8030d08:	ee06 1a10 	vmov	s12, r1
 8030d0c:	f3c2 2107 	ubfx	r1, r2, #8, #8
 8030d10:	ee06 1a90 	vmov	s13, r1
 8030d14:	b2d1      	uxtb	r1, r2
 8030d16:	ea4f 6212 	mov.w	r2, r2, lsr #24
 8030d1a:	ee07 1a10 	vmov	s14, r1
 8030d1e:	ee07 2a90 	vmov	s15, r2
 8030d22:	eeb8 6a46 	vcvt.f32.u32	s12, s12
 8030d26:	eef8 6a66 	vcvt.f32.u32	s13, s13
 8030d2a:	eeb8 7a47 	vcvt.f32.u32	s14, s14
 8030d2e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8030d32:	ed8d 6a20 	vstr	s12, [sp, #128]	@ 0x80
 8030d36:	edcd 6a21 	vstr	s13, [sp, #132]	@ 0x84
 8030d3a:	ed8d 7a22 	vstr	s14, [sp, #136]	@ 0x88
 8030d3e:	edcd 7a23 	vstr	s15, [sp, #140]	@ 0x8c
 8030d42:	f000 8111 	beq.w	8030f68 <_ZN8touchgfx19GPU2DVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x2e8>
 8030d46:	689a      	ldr	r2, [r3, #8]
 8030d48:	2c03      	cmp	r4, #3
 8030d4a:	f3c2 4107 	ubfx	r1, r2, #16, #8
 8030d4e:	ee06 1a10 	vmov	s12, r1
 8030d52:	f3c2 2107 	ubfx	r1, r2, #8, #8
 8030d56:	ee06 1a90 	vmov	s13, r1
 8030d5a:	b2d1      	uxtb	r1, r2
 8030d5c:	ea4f 6212 	mov.w	r2, r2, lsr #24
 8030d60:	ee07 1a10 	vmov	s14, r1
 8030d64:	ee07 2a90 	vmov	s15, r2
 8030d68:	eeb8 6a46 	vcvt.f32.u32	s12, s12
 8030d6c:	eef8 6a66 	vcvt.f32.u32	s13, s13
 8030d70:	eeb8 7a47 	vcvt.f32.u32	s14, s14
 8030d74:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8030d78:	ed8d 6a24 	vstr	s12, [sp, #144]	@ 0x90
 8030d7c:	edcd 6a25 	vstr	s13, [sp, #148]	@ 0x94
 8030d80:	ed8d 7a26 	vstr	s14, [sp, #152]	@ 0x98
 8030d84:	edcd 7a27 	vstr	s15, [sp, #156]	@ 0x9c
 8030d88:	f000 80ee 	beq.w	8030f68 <_ZN8touchgfx19GPU2DVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x2e8>
 8030d8c:	68da      	ldr	r2, [r3, #12]
 8030d8e:	2c04      	cmp	r4, #4
 8030d90:	f3c2 4107 	ubfx	r1, r2, #16, #8
 8030d94:	ee06 1a10 	vmov	s12, r1
 8030d98:	f3c2 2107 	ubfx	r1, r2, #8, #8
 8030d9c:	ee06 1a90 	vmov	s13, r1
 8030da0:	b2d1      	uxtb	r1, r2
 8030da2:	ea4f 6212 	mov.w	r2, r2, lsr #24
 8030da6:	ee07 1a10 	vmov	s14, r1
 8030daa:	ee07 2a90 	vmov	s15, r2
 8030dae:	eeb8 6a46 	vcvt.f32.u32	s12, s12
 8030db2:	eef8 6a66 	vcvt.f32.u32	s13, s13
 8030db6:	eeb8 7a47 	vcvt.f32.u32	s14, s14
 8030dba:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8030dbe:	ed8d 6a28 	vstr	s12, [sp, #160]	@ 0xa0
 8030dc2:	edcd 6a29 	vstr	s13, [sp, #164]	@ 0xa4
 8030dc6:	ed8d 7a2a 	vstr	s14, [sp, #168]	@ 0xa8
 8030dca:	edcd 7a2b 	vstr	s15, [sp, #172]	@ 0xac
 8030dce:	f000 80cb 	beq.w	8030f68 <_ZN8touchgfx19GPU2DVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x2e8>
 8030dd2:	691a      	ldr	r2, [r3, #16]
 8030dd4:	2c05      	cmp	r4, #5
 8030dd6:	f3c2 4107 	ubfx	r1, r2, #16, #8
 8030dda:	ee06 1a10 	vmov	s12, r1
 8030dde:	f3c2 2107 	ubfx	r1, r2, #8, #8
 8030de2:	ee06 1a90 	vmov	s13, r1
 8030de6:	b2d1      	uxtb	r1, r2
 8030de8:	ea4f 6212 	mov.w	r2, r2, lsr #24
 8030dec:	ee07 1a10 	vmov	s14, r1
 8030df0:	ee07 2a90 	vmov	s15, r2
 8030df4:	eeb8 6a46 	vcvt.f32.u32	s12, s12
 8030df8:	eef8 6a66 	vcvt.f32.u32	s13, s13
 8030dfc:	eeb8 7a47 	vcvt.f32.u32	s14, s14
 8030e00:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8030e04:	ed8d 6a2c 	vstr	s12, [sp, #176]	@ 0xb0
 8030e08:	edcd 6a2d 	vstr	s13, [sp, #180]	@ 0xb4
 8030e0c:	ed8d 7a2e 	vstr	s14, [sp, #184]	@ 0xb8
 8030e10:	edcd 7a2f 	vstr	s15, [sp, #188]	@ 0xbc
 8030e14:	f000 80a8 	beq.w	8030f68 <_ZN8touchgfx19GPU2DVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x2e8>
 8030e18:	695a      	ldr	r2, [r3, #20]
 8030e1a:	2c06      	cmp	r4, #6
 8030e1c:	f3c2 4107 	ubfx	r1, r2, #16, #8
 8030e20:	ee06 1a10 	vmov	s12, r1
 8030e24:	f3c2 2107 	ubfx	r1, r2, #8, #8
 8030e28:	ee06 1a90 	vmov	s13, r1
 8030e2c:	b2d1      	uxtb	r1, r2
 8030e2e:	ea4f 6212 	mov.w	r2, r2, lsr #24
 8030e32:	ee07 1a10 	vmov	s14, r1
 8030e36:	ee07 2a90 	vmov	s15, r2
 8030e3a:	eeb8 6a46 	vcvt.f32.u32	s12, s12
 8030e3e:	eef8 6a66 	vcvt.f32.u32	s13, s13
 8030e42:	eeb8 7a47 	vcvt.f32.u32	s14, s14
 8030e46:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8030e4a:	ed8d 6a30 	vstr	s12, [sp, #192]	@ 0xc0
 8030e4e:	edcd 6a31 	vstr	s13, [sp, #196]	@ 0xc4
 8030e52:	ed8d 7a32 	vstr	s14, [sp, #200]	@ 0xc8
 8030e56:	edcd 7a33 	vstr	s15, [sp, #204]	@ 0xcc
 8030e5a:	f000 8085 	beq.w	8030f68 <_ZN8touchgfx19GPU2DVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x2e8>
 8030e5e:	699a      	ldr	r2, [r3, #24]
 8030e60:	2c07      	cmp	r4, #7
 8030e62:	f3c2 4107 	ubfx	r1, r2, #16, #8
 8030e66:	ee06 1a10 	vmov	s12, r1
 8030e6a:	f3c2 2107 	ubfx	r1, r2, #8, #8
 8030e6e:	ee06 1a90 	vmov	s13, r1
 8030e72:	b2d1      	uxtb	r1, r2
 8030e74:	ea4f 6212 	mov.w	r2, r2, lsr #24
 8030e78:	ee07 1a10 	vmov	s14, r1
 8030e7c:	ee07 2a90 	vmov	s15, r2
 8030e80:	eeb8 6a46 	vcvt.f32.u32	s12, s12
 8030e84:	eef8 6a66 	vcvt.f32.u32	s13, s13
 8030e88:	eeb8 7a47 	vcvt.f32.u32	s14, s14
 8030e8c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8030e90:	ed8d 6a34 	vstr	s12, [sp, #208]	@ 0xd0
 8030e94:	edcd 6a35 	vstr	s13, [sp, #212]	@ 0xd4
 8030e98:	ed8d 7a36 	vstr	s14, [sp, #216]	@ 0xd8
 8030e9c:	edcd 7a37 	vstr	s15, [sp, #220]	@ 0xdc
 8030ea0:	d062      	beq.n	8030f68 <_ZN8touchgfx19GPU2DVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x2e8>
 8030ea2:	69da      	ldr	r2, [r3, #28]
 8030ea4:	2c08      	cmp	r4, #8
 8030ea6:	f3c2 4107 	ubfx	r1, r2, #16, #8
 8030eaa:	ee06 1a10 	vmov	s12, r1
 8030eae:	f3c2 2107 	ubfx	r1, r2, #8, #8
 8030eb2:	ee06 1a90 	vmov	s13, r1
 8030eb6:	b2d1      	uxtb	r1, r2
 8030eb8:	ea4f 6212 	mov.w	r2, r2, lsr #24
 8030ebc:	ee07 1a10 	vmov	s14, r1
 8030ec0:	ee07 2a90 	vmov	s15, r2
 8030ec4:	eeb8 6a46 	vcvt.f32.u32	s12, s12
 8030ec8:	eef8 6a66 	vcvt.f32.u32	s13, s13
 8030ecc:	eeb8 7a47 	vcvt.f32.u32	s14, s14
 8030ed0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8030ed4:	ed8d 6a38 	vstr	s12, [sp, #224]	@ 0xe0
 8030ed8:	edcd 6a39 	vstr	s13, [sp, #228]	@ 0xe4
 8030edc:	ed8d 7a3a 	vstr	s14, [sp, #232]	@ 0xe8
 8030ee0:	edcd 7a3b 	vstr	s15, [sp, #236]	@ 0xec
 8030ee4:	d040      	beq.n	8030f68 <_ZN8touchgfx19GPU2DVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x2e8>
 8030ee6:	6a1a      	ldr	r2, [r3, #32]
 8030ee8:	2c09      	cmp	r4, #9
 8030eea:	f3c2 4107 	ubfx	r1, r2, #16, #8
 8030eee:	ee06 1a10 	vmov	s12, r1
 8030ef2:	f3c2 2107 	ubfx	r1, r2, #8, #8
 8030ef6:	ee06 1a90 	vmov	s13, r1
 8030efa:	b2d1      	uxtb	r1, r2
 8030efc:	ea4f 6212 	mov.w	r2, r2, lsr #24
 8030f00:	ee07 1a10 	vmov	s14, r1
 8030f04:	ee07 2a90 	vmov	s15, r2
 8030f08:	eeb8 6a46 	vcvt.f32.u32	s12, s12
 8030f0c:	eef8 6a66 	vcvt.f32.u32	s13, s13
 8030f10:	eeb8 7a47 	vcvt.f32.u32	s14, s14
 8030f14:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8030f18:	ed8d 6a3c 	vstr	s12, [sp, #240]	@ 0xf0
 8030f1c:	edcd 6a3d 	vstr	s13, [sp, #244]	@ 0xf4
 8030f20:	ed8d 7a3e 	vstr	s14, [sp, #248]	@ 0xf8
 8030f24:	edcd 7a3f 	vstr	s15, [sp, #252]	@ 0xfc
 8030f28:	d01e      	beq.n	8030f68 <_ZN8touchgfx19GPU2DVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x2e8>
 8030f2a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8030f2c:	f3c3 4207 	ubfx	r2, r3, #16, #8
 8030f30:	ee06 2a10 	vmov	s12, r2
 8030f34:	f3c3 2207 	ubfx	r2, r3, #8, #8
 8030f38:	ee06 2a90 	vmov	s13, r2
 8030f3c:	b2da      	uxtb	r2, r3
 8030f3e:	0e1b      	lsrs	r3, r3, #24
 8030f40:	ee07 2a10 	vmov	s14, r2
 8030f44:	ee07 3a90 	vmov	s15, r3
 8030f48:	eeb8 6a46 	vcvt.f32.u32	s12, s12
 8030f4c:	eef8 6a66 	vcvt.f32.u32	s13, s13
 8030f50:	eeb8 7a47 	vcvt.f32.u32	s14, s14
 8030f54:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8030f58:	ed8d 6a40 	vstr	s12, [sp, #256]	@ 0x100
 8030f5c:	edcd 6a41 	vstr	s13, [sp, #260]	@ 0x104
 8030f60:	ed8d 7a42 	vstr	s14, [sp, #264]	@ 0x108
 8030f64:	edcd 7a43 	vstr	s15, [sp, #268]	@ 0x10c
 8030f68:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 8030f6c:	2100      	movs	r1, #0
 8030f6e:	461a      	mov	r2, r3
 8030f70:	4608      	mov	r0, r1
 8030f72:	f7df fff9 	bl	8010f68 <nema_set_clip>
 8030f76:	4621      	mov	r1, r4
 8030f78:	4632      	mov	r2, r6
 8030f7a:	ab1c      	add	r3, sp, #112	@ 0x70
 8030f7c:	6828      	ldr	r0, [r5, #0]
 8030f7e:	f7eb ff95 	bl	801ceac <nema_vg_grad_set>
 8030f82:	481c      	ldr	r0, [pc, #112]	@ (8030ff4 <_ZN8touchgfx19GPU2DVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x374>)
 8030f84:	4c1c      	ldr	r4, [pc, #112]	@ (8030ff8 <_ZN8touchgfx19GPU2DVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x378>)
 8030f86:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 8030f8a:	f9b0 2004 	ldrsh.w	r2, [r0, #4]
 8030f8e:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 8030f92:	f9b0 0000 	ldrsh.w	r0, [r0]
 8030f96:	f7df ffe7 	bl	8010f68 <nema_set_clip>
 8030f9a:	6820      	ldr	r0, [r4, #0]
 8030f9c:	2101      	movs	r1, #1
 8030f9e:	f7eb ff47 	bl	801ce30 <nema_vg_paint_set_type>
 8030fa2:	eef4 9a4a 	vcmp.f32	s19, s20
 8030fa6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8030faa:	d009      	beq.n	8030fc0 <_ZN8touchgfx19GPU2DVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x340>
 8030fac:	eef4 8a48 	vcmp.f32	s17, s16
 8030fb0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8030fb4:	d004      	beq.n	8030fc0 <_ZN8touchgfx19GPU2DVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x340>
 8030fb6:	eeb4 9a6a 	vcmp.f32	s18, s21
 8030fba:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8030fbe:	d11f      	bne.n	8031000 <_ZN8touchgfx19GPU2DVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x380>
 8030fc0:	eef0 1a48 	vmov.f32	s3, s16
 8030fc4:	eeb0 1a6a 	vmov.f32	s2, s21
 8030fc8:	eef0 0a68 	vmov.f32	s1, s17
 8030fcc:	eeb0 0a49 	vmov.f32	s0, s18
 8030fd0:	6829      	ldr	r1, [r5, #0]
 8030fd2:	6820      	ldr	r0, [r4, #0]
 8030fd4:	2201      	movs	r2, #1
 8030fd6:	f7ec fa11 	bl	801d3fc <nema_vg_paint_set_grad_linear>
 8030fda:	b044      	add	sp, #272	@ 0x110
 8030fdc:	ecbd 8b08 	vpop	{d8-d11}
 8030fe0:	bd70      	pop	{r4, r5, r6, pc}
 8030fe2:	9301      	str	r3, [sp, #4]
 8030fe4:	f7eb ff42 	bl	801ce6c <nema_vg_grad_create>
 8030fe8:	9b01      	ldr	r3, [sp, #4]
 8030fea:	6028      	str	r0, [r5, #0]
 8030fec:	e662      	b.n	8030cb4 <_ZN8touchgfx19GPU2DVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x34>
 8030fee:	bf00      	nop
 8030ff0:	200835c8 	.word	0x200835c8
 8030ff4:	200835d4 	.word	0x200835d4
 8030ff8:	200835d0 	.word	0x200835d0
 8030ffc:	42c80000 	.word	0x42c80000
 8031000:	ed1f ba02 	vldr	s22, [pc, #-8]	@ 8030ffc <_ZN8touchgfx19GPU2DVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x37c>
 8031004:	a813      	add	r0, sp, #76	@ 0x4c
 8031006:	f7dd fcfe 	bl	800ea06 <_ZN8touchgfx9Matrix3x3C1Ev>
 803100a:	a813      	add	r0, sp, #76	@ 0x4c
 803100c:	f7dd fcee 	bl	800e9ec <_ZN8touchgfx9Matrix3x35resetEv>
 8031010:	ee8b 0a29 	vdiv.f32	s0, s22, s19
 8031014:	eecb 0a0a 	vdiv.f32	s1, s22, s20
 8031018:	a813      	add	r0, sp, #76	@ 0x4c
 803101a:	f7dd fcf8 	bl	800ea0e <_ZN8touchgfx9Matrix3x35scaleEff>
 803101e:	a813      	add	r0, sp, #76	@ 0x4c
 8031020:	a903      	add	r1, sp, #12
 8031022:	edcd aa05 	vstr	s21, [sp, #20]
 8031026:	ed8d 9a03 	vstr	s18, [sp, #12]
 803102a:	ed8d 8a06 	vstr	s16, [sp, #24]
 803102e:	edcd 8a04 	vstr	s17, [sp, #16]
 8031032:	f7dd fd8a 	bl	800eb4a <_ZNK8touchgfx9Matrix3x315affineTransformERKNS0_5PointE>
 8031036:	a905      	add	r1, sp, #20
 8031038:	a813      	add	r0, sp, #76	@ 0x4c
 803103a:	eef0 aa40 	vmov.f32	s21, s0
 803103e:	eeb0 9a60 	vmov.f32	s18, s1
 8031042:	f7dd fd82 	bl	800eb4a <_ZNK8touchgfx9Matrix3x315affineTransformERKNS0_5PointE>
 8031046:	ee30 6ac9 	vsub.f32	s12, s1, s18
 803104a:	ee70 5a6a 	vsub.f32	s11, s0, s21
 803104e:	eef7 7a00 	vmov.f32	s15, #112	@ 0x3f800000  1.0
 8031052:	ee86 5a25 	vdiv.f32	s10, s12, s11
 8031056:	eef6 6a00 	vmov.f32	s13, #96	@ 0x3f000000  0.5
 803105a:	ee87 7a85 	vdiv.f32	s14, s15, s10
 803105e:	eea6 9a26 	vfma.f32	s18, s12, s13
 8031062:	ee77 0a20 	vadd.f32	s1, s14, s1
 8031066:	ee70 7a27 	vadd.f32	s15, s0, s15
 803106a:	eee5 aaa6 	vfma.f32	s21, s11, s13
 803106e:	a813      	add	r0, sp, #76	@ 0x4c
 8031070:	edcd 7a0d 	vstr	s15, [sp, #52]	@ 0x34
 8031074:	ed8d 9a0c 	vstr	s18, [sp, #48]	@ 0x30
 8031078:	edcd 0a0e 	vstr	s1, [sp, #56]	@ 0x38
 803107c:	edcd aa0b 	vstr	s21, [sp, #44]	@ 0x2c
 8031080:	f7dd fcb4 	bl	800e9ec <_ZN8touchgfx9Matrix3x35resetEv>
 8031084:	ee89 0a8b 	vdiv.f32	s0, s19, s22
 8031088:	eeca 0a0b 	vdiv.f32	s1, s20, s22
 803108c:	a813      	add	r0, sp, #76	@ 0x4c
 803108e:	f7dd fcbe 	bl	800ea0e <_ZN8touchgfx9Matrix3x35scaleEff>
 8031092:	a813      	add	r0, sp, #76	@ 0x4c
 8031094:	a90d      	add	r1, sp, #52	@ 0x34
 8031096:	f7dd fd58 	bl	800eb4a <_ZNK8touchgfx9Matrix3x315affineTransformERKNS0_5PointE>
 803109a:	a813      	add	r0, sp, #76	@ 0x4c
 803109c:	a90b      	add	r1, sp, #44	@ 0x2c
 803109e:	ed8d 0a0f 	vstr	s0, [sp, #60]	@ 0x3c
 80310a2:	edcd 0a10 	vstr	s1, [sp, #64]	@ 0x40
 80310a6:	f7dd fd50 	bl	800eb4a <_ZNK8touchgfx9Matrix3x315affineTransformERKNS0_5PointE>
 80310aa:	eddd 7a04 	vldr	s15, [sp, #16]
 80310ae:	ed9d 6a06 	vldr	s12, [sp, #24]
 80310b2:	ed9d 7a03 	vldr	s14, [sp, #12]
 80310b6:	ee76 7a67 	vsub.f32	s15, s12, s15
 80310ba:	eddd 6a05 	vldr	s13, [sp, #20]
 80310be:	eef0 9a40 	vmov.f32	s19, s0
 80310c2:	ee27 0aa7 	vmul.f32	s0, s15, s15
 80310c6:	ee76 7ac7 	vsub.f32	s15, s13, s14
 80310ca:	eea7 0aa7 	vfma.f32	s0, s15, s15
 80310ce:	eeb5 0a40 	vcmp.f32	s0, #0.0
 80310d2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80310d6:	eeb0 aa60 	vmov.f32	s20, s1
 80310da:	eeb1 9ac0 	vsqrt.f32	s18, s0
 80310de:	d457      	bmi.n	8031190 <_ZN8touchgfx19GPU2DVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x510>
 80310e0:	ed9d 7a10 	vldr	s14, [sp, #64]	@ 0x40
 80310e4:	eddd 7a0f 	vldr	s15, [sp, #60]	@ 0x3c
 80310e8:	ee37 7a46 	vsub.f32	s14, s14, s12
 80310ec:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80310f0:	eeb7 6a00 	vmov.f32	s12, #112	@ 0x3f800000  1.0
 80310f4:	eec7 6a27 	vdiv.f32	s13, s14, s15
 80310f8:	eec6 aa26 	vdiv.f32	s21, s12, s13
 80310fc:	eeb0 0a6a 	vmov.f32	s0, s21
 8031100:	f000 f9f4 	bl	80314ec <atanf>
 8031104:	eef0 ba40 	vmov.f32	s23, s0
 8031108:	f000 fac4 	bl	8031694 <cosf>
 803110c:	ee29 ba00 	vmul.f32	s22, s18, s0
 8031110:	eeb0 0a6b 	vmov.f32	s0, s23
 8031114:	f000 fb0a 	bl	803172c <sinf>
 8031118:	eef5 aac0 	vcmpe.f32	s21, #0.0
 803111c:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 8031120:	ee29 9a00 	vmul.f32	s18, s18, s0
 8031124:	eef0 0a4a 	vmov.f32	s1, s20
 8031128:	eeb0 0a69 	vmov.f32	s0, s19
 803112c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8031130:	eeab 0a27 	vfma.f32	s0, s22, s15
 8031134:	eeeb 9a67 	vfms.f32	s19, s22, s15
 8031138:	eee9 0a27 	vfma.f32	s1, s18, s15
 803113c:	eea9 aa67 	vfms.f32	s20, s18, s15
 8031140:	dc0b      	bgt.n	803115a <_ZN8touchgfx19GPU2DVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x4da>
 8031142:	eeb0 7a4a 	vmov.f32	s14, s20
 8031146:	eef0 7a69 	vmov.f32	s15, s19
 803114a:	eeb0 aa60 	vmov.f32	s20, s1
 803114e:	eef0 9a40 	vmov.f32	s19, s0
 8031152:	eef0 0a47 	vmov.f32	s1, s14
 8031156:	eeb0 0a67 	vmov.f32	s0, s15
 803115a:	eef4 8ac8 	vcmpe.f32	s17, s16
 803115e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8031162:	6820      	ldr	r0, [r4, #0]
 8031164:	6829      	ldr	r1, [r5, #0]
 8031166:	d50b      	bpl.n	8031180 <_ZN8touchgfx19GPU2DVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x500>
 8031168:	eef0 1a60 	vmov.f32	s3, s1
 803116c:	eeb0 1a40 	vmov.f32	s2, s0
 8031170:	eef0 0a4a 	vmov.f32	s1, s20
 8031174:	eeb0 0a69 	vmov.f32	s0, s19
 8031178:	2201      	movs	r2, #1
 803117a:	f7ec f93f 	bl	801d3fc <nema_vg_paint_set_grad_linear>
 803117e:	e72c      	b.n	8030fda <_ZN8touchgfx19GPU2DVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x35a>
 8031180:	eef0 1a4a 	vmov.f32	s3, s20
 8031184:	eeb0 1a69 	vmov.f32	s2, s19
 8031188:	2201      	movs	r2, #1
 803118a:	f7ec f937 	bl	801d3fc <nema_vg_paint_set_grad_linear>
 803118e:	e724      	b.n	8030fda <_ZN8touchgfx19GPU2DVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x35a>
 8031190:	f000 f98e 	bl	80314b0 <sqrtf>
 8031194:	ed9d 6a06 	vldr	s12, [sp, #24]
 8031198:	eddd 6a05 	vldr	s13, [sp, #20]
 803119c:	e7a0      	b.n	80310e0 <_ZN8touchgfx19GPU2DVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x460>
 803119e:	4b03      	ldr	r3, [pc, #12]	@ (80311ac <_ZN8touchgfx19GPU2DVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x52c>)
 80311a0:	4a03      	ldr	r2, [pc, #12]	@ (80311b0 <_ZN8touchgfx19GPU2DVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x530>)
 80311a2:	2194      	movs	r1, #148	@ 0x94
 80311a4:	4803      	ldr	r0, [pc, #12]	@ (80311b4 <_ZN8touchgfx19GPU2DVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x534>)
 80311a6:	f001 fae7 	bl	8032778 <__assert_func>
 80311aa:	bf00      	nop
 80311ac:	08038298 	.word	0x08038298
 80311b0:	08038324 	.word	0x08038324
 80311b4:	080382b0 	.word	0x080382b0

080311b8 <_ZN8touchgfx19GPU2DVectorRenderer17setRadialGradientEfffmPKfPKNS_9colortypeE>:
 80311b8:	b530      	push	{r4, r5, lr}
 80311ba:	ed2d 8b04 	vpush	{d8-d9}
 80311be:	2905      	cmp	r1, #5
 80311c0:	b099      	sub	sp, #100	@ 0x64
 80311c2:	f200 80db 	bhi.w	803137c <_ZN8touchgfx19GPU2DVectorRenderer17setRadialGradientEfffmPKfPKNS_9colortypeE+0x1c4>
 80311c6:	4d70      	ldr	r5, [pc, #448]	@ (8031388 <_ZN8touchgfx19GPU2DVectorRenderer17setRadialGradientEfffmPKfPKNS_9colortypeE+0x1d0>)
 80311c8:	eeb0 8a40 	vmov.f32	s16, s0
 80311cc:	6828      	ldr	r0, [r5, #0]
 80311ce:	eef0 8a60 	vmov.f32	s17, s1
 80311d2:	eeb0 9a41 	vmov.f32	s18, s2
 80311d6:	2800      	cmp	r0, #0
 80311d8:	f000 80c6 	beq.w	8031368 <_ZN8touchgfx19GPU2DVectorRenderer17setRadialGradientEfffmPKfPKNS_9colortypeE+0x1b0>
 80311dc:	2900      	cmp	r1, #0
 80311de:	f000 80ac 	beq.w	803133a <_ZN8touchgfx19GPU2DVectorRenderer17setRadialGradientEfffmPKfPKNS_9colortypeE+0x182>
 80311e2:	681c      	ldr	r4, [r3, #0]
 80311e4:	2901      	cmp	r1, #1
 80311e6:	f3c4 4c07 	ubfx	ip, r4, #16, #8
 80311ea:	ee06 ca10 	vmov	s12, ip
 80311ee:	f3c4 2c07 	ubfx	ip, r4, #8, #8
 80311f2:	ee06 ca90 	vmov	s13, ip
 80311f6:	fa5f fc84 	uxtb.w	ip, r4
 80311fa:	ea4f 6414 	mov.w	r4, r4, lsr #24
 80311fe:	ee07 ca10 	vmov	s14, ip
 8031202:	ee07 4a90 	vmov	s15, r4
 8031206:	eeb8 6a46 	vcvt.f32.u32	s12, s12
 803120a:	eef8 6a66 	vcvt.f32.u32	s13, s13
 803120e:	eeb8 7a47 	vcvt.f32.u32	s14, s14
 8031212:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8031216:	ed8d 6a04 	vstr	s12, [sp, #16]
 803121a:	edcd 6a05 	vstr	s13, [sp, #20]
 803121e:	ed8d 7a06 	vstr	s14, [sp, #24]
 8031222:	edcd 7a07 	vstr	s15, [sp, #28]
 8031226:	f000 8088 	beq.w	803133a <_ZN8touchgfx19GPU2DVectorRenderer17setRadialGradientEfffmPKfPKNS_9colortypeE+0x182>
 803122a:	685c      	ldr	r4, [r3, #4]
 803122c:	2902      	cmp	r1, #2
 803122e:	f3c4 4c07 	ubfx	ip, r4, #16, #8
 8031232:	ee06 ca10 	vmov	s12, ip
 8031236:	f3c4 2c07 	ubfx	ip, r4, #8, #8
 803123a:	ee06 ca90 	vmov	s13, ip
 803123e:	fa5f fc84 	uxtb.w	ip, r4
 8031242:	ea4f 6414 	mov.w	r4, r4, lsr #24
 8031246:	ee07 ca10 	vmov	s14, ip
 803124a:	ee07 4a90 	vmov	s15, r4
 803124e:	eeb8 6a46 	vcvt.f32.u32	s12, s12
 8031252:	eef8 6a66 	vcvt.f32.u32	s13, s13
 8031256:	eeb8 7a47 	vcvt.f32.u32	s14, s14
 803125a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 803125e:	ed8d 6a08 	vstr	s12, [sp, #32]
 8031262:	edcd 6a09 	vstr	s13, [sp, #36]	@ 0x24
 8031266:	ed8d 7a0a 	vstr	s14, [sp, #40]	@ 0x28
 803126a:	edcd 7a0b 	vstr	s15, [sp, #44]	@ 0x2c
 803126e:	d064      	beq.n	803133a <_ZN8touchgfx19GPU2DVectorRenderer17setRadialGradientEfffmPKfPKNS_9colortypeE+0x182>
 8031270:	689c      	ldr	r4, [r3, #8]
 8031272:	2903      	cmp	r1, #3
 8031274:	f3c4 4c07 	ubfx	ip, r4, #16, #8
 8031278:	ee06 ca10 	vmov	s12, ip
 803127c:	f3c4 2c07 	ubfx	ip, r4, #8, #8
 8031280:	ee06 ca90 	vmov	s13, ip
 8031284:	fa5f fc84 	uxtb.w	ip, r4
 8031288:	ea4f 6414 	mov.w	r4, r4, lsr #24
 803128c:	ee07 ca10 	vmov	s14, ip
 8031290:	ee07 4a90 	vmov	s15, r4
 8031294:	eeb8 6a46 	vcvt.f32.u32	s12, s12
 8031298:	eef8 6a66 	vcvt.f32.u32	s13, s13
 803129c:	eeb8 7a47 	vcvt.f32.u32	s14, s14
 80312a0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80312a4:	ed8d 6a0c 	vstr	s12, [sp, #48]	@ 0x30
 80312a8:	edcd 6a0d 	vstr	s13, [sp, #52]	@ 0x34
 80312ac:	ed8d 7a0e 	vstr	s14, [sp, #56]	@ 0x38
 80312b0:	edcd 7a0f 	vstr	s15, [sp, #60]	@ 0x3c
 80312b4:	d041      	beq.n	803133a <_ZN8touchgfx19GPU2DVectorRenderer17setRadialGradientEfffmPKfPKNS_9colortypeE+0x182>
 80312b6:	68dc      	ldr	r4, [r3, #12]
 80312b8:	2904      	cmp	r1, #4
 80312ba:	f3c4 4c07 	ubfx	ip, r4, #16, #8
 80312be:	ee06 ca10 	vmov	s12, ip
 80312c2:	f3c4 2c07 	ubfx	ip, r4, #8, #8
 80312c6:	ee06 ca90 	vmov	s13, ip
 80312ca:	fa5f fc84 	uxtb.w	ip, r4
 80312ce:	ea4f 6414 	mov.w	r4, r4, lsr #24
 80312d2:	ee07 ca10 	vmov	s14, ip
 80312d6:	ee07 4a90 	vmov	s15, r4
 80312da:	eeb8 6a46 	vcvt.f32.u32	s12, s12
 80312de:	eef8 6a66 	vcvt.f32.u32	s13, s13
 80312e2:	eeb8 7a47 	vcvt.f32.u32	s14, s14
 80312e6:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80312ea:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 80312ee:	edcd 6a11 	vstr	s13, [sp, #68]	@ 0x44
 80312f2:	ed8d 7a12 	vstr	s14, [sp, #72]	@ 0x48
 80312f6:	edcd 7a13 	vstr	s15, [sp, #76]	@ 0x4c
 80312fa:	d01e      	beq.n	803133a <_ZN8touchgfx19GPU2DVectorRenderer17setRadialGradientEfffmPKfPKNS_9colortypeE+0x182>
 80312fc:	691b      	ldr	r3, [r3, #16]
 80312fe:	f3c3 4407 	ubfx	r4, r3, #16, #8
 8031302:	ee06 4a10 	vmov	s12, r4
 8031306:	f3c3 2407 	ubfx	r4, r3, #8, #8
 803130a:	ee06 4a90 	vmov	s13, r4
 803130e:	b2dc      	uxtb	r4, r3
 8031310:	0e1b      	lsrs	r3, r3, #24
 8031312:	ee07 4a10 	vmov	s14, r4
 8031316:	ee07 3a90 	vmov	s15, r3
 803131a:	eeb8 6a46 	vcvt.f32.u32	s12, s12
 803131e:	eef8 6a66 	vcvt.f32.u32	s13, s13
 8031322:	eeb8 7a47 	vcvt.f32.u32	s14, s14
 8031326:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 803132a:	ed8d 6a14 	vstr	s12, [sp, #80]	@ 0x50
 803132e:	edcd 6a15 	vstr	s13, [sp, #84]	@ 0x54
 8031332:	ed8d 7a16 	vstr	s14, [sp, #88]	@ 0x58
 8031336:	edcd 7a17 	vstr	s15, [sp, #92]	@ 0x5c
 803133a:	4c14      	ldr	r4, [pc, #80]	@ (803138c <_ZN8touchgfx19GPU2DVectorRenderer17setRadialGradientEfffmPKfPKNS_9colortypeE+0x1d4>)
 803133c:	ab04      	add	r3, sp, #16
 803133e:	f7eb fdb5 	bl	801ceac <nema_vg_grad_set>
 8031342:	6820      	ldr	r0, [r4, #0]
 8031344:	2103      	movs	r1, #3
 8031346:	f7eb fd73 	bl	801ce30 <nema_vg_paint_set_type>
 803134a:	6820      	ldr	r0, [r4, #0]
 803134c:	eeb0 1a49 	vmov.f32	s2, s18
 8031350:	eef0 0a68 	vmov.f32	s1, s17
 8031354:	eeb0 0a48 	vmov.f32	s0, s16
 8031358:	6829      	ldr	r1, [r5, #0]
 803135a:	2201      	movs	r2, #1
 803135c:	f7ec f8be 	bl	801d4dc <nema_vg_paint_set_grad_radial>
 8031360:	b019      	add	sp, #100	@ 0x64
 8031362:	ecbd 8b04 	vpop	{d8-d9}
 8031366:	bd30      	pop	{r4, r5, pc}
 8031368:	e9cd 2302 	strd	r2, r3, [sp, #8]
 803136c:	9101      	str	r1, [sp, #4]
 803136e:	f7eb fd7d 	bl	801ce6c <nema_vg_grad_create>
 8031372:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8031376:	6028      	str	r0, [r5, #0]
 8031378:	9901      	ldr	r1, [sp, #4]
 803137a:	e72f      	b.n	80311dc <_ZN8touchgfx19GPU2DVectorRenderer17setRadialGradientEfffmPKfPKNS_9colortypeE+0x24>
 803137c:	4b04      	ldr	r3, [pc, #16]	@ (8031390 <_ZN8touchgfx19GPU2DVectorRenderer17setRadialGradientEfffmPKfPKNS_9colortypeE+0x1d8>)
 803137e:	4a05      	ldr	r2, [pc, #20]	@ (8031394 <_ZN8touchgfx19GPU2DVectorRenderer17setRadialGradientEfffmPKfPKNS_9colortypeE+0x1dc>)
 8031380:	21ed      	movs	r1, #237	@ 0xed
 8031382:	4805      	ldr	r0, [pc, #20]	@ (8031398 <_ZN8touchgfx19GPU2DVectorRenderer17setRadialGradientEfffmPKfPKNS_9colortypeE+0x1e0>)
 8031384:	f001 f9f8 	bl	8032778 <__assert_func>
 8031388:	200835c8 	.word	0x200835c8
 803138c:	200835d0 	.word	0x200835d0
 8031390:	080382a4 	.word	0x080382a4
 8031394:	080383cc 	.word	0x080383cc
 8031398:	080382b0 	.word	0x080382b0

0803139c <_ZN8touchgfx19GPU2DVectorRendererD0Ev>:
 803139c:	b510      	push	{r4, lr}
 803139e:	4604      	mov	r4, r0
 80313a0:	2104      	movs	r1, #4
 80313a2:	f000 f810 	bl	80313c6 <_ZdlPvj>
 80313a6:	4620      	mov	r0, r4
 80313a8:	bd10      	pop	{r4, pc}
 80313aa:	bf00      	nop

080313ac <_GLOBAL__sub_I__ZN8touchgfx19GPU2DVectorRenderer5setupERKNS_4RectES3_>:
 80313ac:	2200      	movs	r2, #0
 80313ae:	4b02      	ldr	r3, [pc, #8]	@ (80313b8 <_GLOBAL__sub_I__ZN8touchgfx19GPU2DVectorRenderer5setupERKNS_4RectES3_+0xc>)
 80313b0:	e9c3 2200 	strd	r2, r2, [r3]
 80313b4:	4770      	bx	lr
 80313b6:	bf00      	nop
 80313b8:	200835d4 	.word	0x200835d4

080313bc <__aeabi_atexit>:
 80313bc:	460b      	mov	r3, r1
 80313be:	4601      	mov	r1, r0
 80313c0:	4618      	mov	r0, r3
 80313c2:	f001 babb 	b.w	803293c <__cxa_atexit>

080313c6 <_ZdlPvj>:
 80313c6:	f000 b812 	b.w	80313ee <_ZdlPv>

080313ca <__cxa_guard_acquire>:
 80313ca:	6802      	ldr	r2, [r0, #0]
 80313cc:	4603      	mov	r3, r0
 80313ce:	07d2      	lsls	r2, r2, #31
 80313d0:	d405      	bmi.n	80313de <__cxa_guard_acquire+0x14>
 80313d2:	7842      	ldrb	r2, [r0, #1]
 80313d4:	b102      	cbz	r2, 80313d8 <__cxa_guard_acquire+0xe>
 80313d6:	deff      	udf	#255	@ 0xff
 80313d8:	2001      	movs	r0, #1
 80313da:	7058      	strb	r0, [r3, #1]
 80313dc:	4770      	bx	lr
 80313de:	2000      	movs	r0, #0
 80313e0:	4770      	bx	lr

080313e2 <__cxa_guard_release>:
 80313e2:	2301      	movs	r3, #1
 80313e4:	6003      	str	r3, [r0, #0]
 80313e6:	4770      	bx	lr

080313e8 <__cxa_pure_virtual>:
 80313e8:	b508      	push	{r3, lr}
 80313ea:	f000 f80d 	bl	8031408 <_ZSt9terminatev>

080313ee <_ZdlPv>:
 80313ee:	f001 b9ef 	b.w	80327d0 <free>

080313f2 <_ZN10__cxxabiv111__terminateEPFvvE>:
 80313f2:	b508      	push	{r3, lr}
 80313f4:	4780      	blx	r0
 80313f6:	f001 f9b8 	bl	803276a <abort>
	...

080313fc <_ZSt13get_terminatev>:
 80313fc:	4b01      	ldr	r3, [pc, #4]	@ (8031404 <_ZSt13get_terminatev+0x8>)
 80313fe:	e8d3 0faf 	lda	r0, [r3]
 8031402:	4770      	bx	lr
 8031404:	20000244 	.word	0x20000244

08031408 <_ZSt9terminatev>:
 8031408:	b508      	push	{r3, lr}
 803140a:	f7ff fff7 	bl	80313fc <_ZSt13get_terminatev>
 803140e:	f7ff fff0 	bl	80313f2 <_ZN10__cxxabiv111__terminateEPFvvE>
	...

08031414 <acosf>:
 8031414:	b508      	push	{r3, lr}
 8031416:	ed2d 8b02 	vpush	{d8}
 803141a:	eeb0 8a40 	vmov.f32	s16, s0
 803141e:	f000 fb81 	bl	8031b24 <__ieee754_acosf>
 8031422:	eef0 8a40 	vmov.f32	s17, s0
 8031426:	eeb4 8a48 	vcmp.f32	s16, s16
 803142a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 803142e:	d615      	bvs.n	803145c <acosf+0x48>
 8031430:	eeb0 0a48 	vmov.f32	s0, s16
 8031434:	f000 f972 	bl	803171c <fabsf>
 8031438:	eef7 7a00 	vmov.f32	s15, #112	@ 0x3f800000  1.0
 803143c:	eeb4 0ae7 	vcmpe.f32	s0, s15
 8031440:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8031444:	dd0a      	ble.n	803145c <acosf+0x48>
 8031446:	f001 fc53 	bl	8032cf0 <__errno>
 803144a:	2321      	movs	r3, #33	@ 0x21
 803144c:	ecbd 8b02 	vpop	{d8}
 8031450:	6003      	str	r3, [r0, #0]
 8031452:	4805      	ldr	r0, [pc, #20]	@ (8031468 <acosf+0x54>)
 8031454:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8031458:	f000 b9da 	b.w	8031810 <nanf>
 803145c:	eeb0 0a68 	vmov.f32	s0, s17
 8031460:	ecbd 8b02 	vpop	{d8}
 8031464:	bd08      	pop	{r3, pc}
 8031466:	bf00      	nop
 8031468:	0803893f 	.word	0x0803893f

0803146c <atan2f>:
 803146c:	f000 bc52 	b.w	8031d14 <__ieee754_atan2f>

08031470 <fmodf>:
 8031470:	b508      	push	{r3, lr}
 8031472:	ed2d 8b02 	vpush	{d8}
 8031476:	eef0 8a40 	vmov.f32	s17, s0
 803147a:	eeb0 8a60 	vmov.f32	s16, s1
 803147e:	f000 fce7 	bl	8031e50 <__ieee754_fmodf>
 8031482:	eef4 8a48 	vcmp.f32	s17, s16
 8031486:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 803148a:	d60c      	bvs.n	80314a6 <fmodf+0x36>
 803148c:	eddf 8a07 	vldr	s17, [pc, #28]	@ 80314ac <fmodf+0x3c>
 8031490:	eeb4 8a68 	vcmp.f32	s16, s17
 8031494:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8031498:	d105      	bne.n	80314a6 <fmodf+0x36>
 803149a:	f001 fc29 	bl	8032cf0 <__errno>
 803149e:	ee88 0aa8 	vdiv.f32	s0, s17, s17
 80314a2:	2321      	movs	r3, #33	@ 0x21
 80314a4:	6003      	str	r3, [r0, #0]
 80314a6:	ecbd 8b02 	vpop	{d8}
 80314aa:	bd08      	pop	{r3, pc}
 80314ac:	00000000 	.word	0x00000000

080314b0 <sqrtf>:
 80314b0:	b508      	push	{r3, lr}
 80314b2:	ed2d 8b02 	vpush	{d8}
 80314b6:	eeb0 8a40 	vmov.f32	s16, s0
 80314ba:	f000 f9af 	bl	803181c <__ieee754_sqrtf>
 80314be:	eeb4 8a48 	vcmp.f32	s16, s16
 80314c2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80314c6:	d60c      	bvs.n	80314e2 <sqrtf+0x32>
 80314c8:	eddf 8a07 	vldr	s17, [pc, #28]	@ 80314e8 <sqrtf+0x38>
 80314cc:	eeb4 8ae8 	vcmpe.f32	s16, s17
 80314d0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80314d4:	d505      	bpl.n	80314e2 <sqrtf+0x32>
 80314d6:	f001 fc0b 	bl	8032cf0 <__errno>
 80314da:	ee88 0aa8 	vdiv.f32	s0, s17, s17
 80314de:	2321      	movs	r3, #33	@ 0x21
 80314e0:	6003      	str	r3, [r0, #0]
 80314e2:	ecbd 8b02 	vpop	{d8}
 80314e6:	bd08      	pop	{r3, pc}
 80314e8:	00000000 	.word	0x00000000

080314ec <atanf>:
 80314ec:	b538      	push	{r3, r4, r5, lr}
 80314ee:	ee10 5a10 	vmov	r5, s0
 80314f2:	eef0 7a40 	vmov.f32	s15, s0
 80314f6:	f025 4400 	bic.w	r4, r5, #2147483648	@ 0x80000000
 80314fa:	f1b4 4fa1 	cmp.w	r4, #1350565888	@ 0x50800000
 80314fe:	d30f      	bcc.n	8031520 <atanf+0x34>
 8031500:	f1b4 4fff 	cmp.w	r4, #2139095040	@ 0x7f800000
 8031504:	d904      	bls.n	8031510 <atanf+0x24>
 8031506:	ee70 7a00 	vadd.f32	s15, s0, s0
 803150a:	eeb0 0a67 	vmov.f32	s0, s15
 803150e:	bd38      	pop	{r3, r4, r5, pc}
 8031510:	2d00      	cmp	r5, #0
 8031512:	eddf 7a4d 	vldr	s15, [pc, #308]	@ 8031648 <atanf+0x15c>
 8031516:	ed9f 7a4d 	vldr	s14, [pc, #308]	@ 803164c <atanf+0x160>
 803151a:	fe77 7a27 	vselgt.f32	s15, s14, s15
 803151e:	e7f4      	b.n	803150a <atanf+0x1e>
 8031520:	4b4b      	ldr	r3, [pc, #300]	@ (8031650 <atanf+0x164>)
 8031522:	429c      	cmp	r4, r3
 8031524:	d810      	bhi.n	8031548 <atanf+0x5c>
 8031526:	f1b4 5f44 	cmp.w	r4, #822083584	@ 0x31000000
 803152a:	d20a      	bcs.n	8031542 <atanf+0x56>
 803152c:	ed9f 7a49 	vldr	s14, [pc, #292]	@ 8031654 <atanf+0x168>
 8031530:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8031534:	ee30 7a07 	vadd.f32	s14, s0, s14
 8031538:	eeb4 7ae6 	vcmpe.f32	s14, s13
 803153c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8031540:	dce3      	bgt.n	803150a <atanf+0x1e>
 8031542:	f04f 33ff 	mov.w	r3, #4294967295
 8031546:	e013      	b.n	8031570 <atanf+0x84>
 8031548:	f000 f8e8 	bl	803171c <fabsf>
 803154c:	4b42      	ldr	r3, [pc, #264]	@ (8031658 <atanf+0x16c>)
 803154e:	429c      	cmp	r4, r3
 8031550:	d84f      	bhi.n	80315f2 <atanf+0x106>
 8031552:	f5a3 03d0 	sub.w	r3, r3, #6815744	@ 0x680000
 8031556:	429c      	cmp	r4, r3
 8031558:	d841      	bhi.n	80315de <atanf+0xf2>
 803155a:	eef0 7a00 	vmov.f32	s15, #0	@ 0x40000000  2.0
 803155e:	2300      	movs	r3, #0
 8031560:	eebf 7a00 	vmov.f32	s14, #240	@ 0xbf800000 -1.0
 8031564:	eea0 7a27 	vfma.f32	s14, s0, s15
 8031568:	ee30 0a27 	vadd.f32	s0, s0, s15
 803156c:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8031570:	ed9f 7a3a 	vldr	s14, [pc, #232]	@ 803165c <atanf+0x170>
 8031574:	1c5a      	adds	r2, r3, #1
 8031576:	eddf 5a3a 	vldr	s11, [pc, #232]	@ 8031660 <atanf+0x174>
 803157a:	ed9f 5a3a 	vldr	s10, [pc, #232]	@ 8031664 <atanf+0x178>
 803157e:	ee27 6aa7 	vmul.f32	s12, s15, s15
 8031582:	ee66 6a06 	vmul.f32	s13, s12, s12
 8031586:	eee6 5a87 	vfma.f32	s11, s13, s14
 803158a:	ed9f 7a37 	vldr	s14, [pc, #220]	@ 8031668 <atanf+0x17c>
 803158e:	eea5 7aa6 	vfma.f32	s14, s11, s13
 8031592:	eddf 5a36 	vldr	s11, [pc, #216]	@ 803166c <atanf+0x180>
 8031596:	eee7 5a26 	vfma.f32	s11, s14, s13
 803159a:	ed9f 7a35 	vldr	s14, [pc, #212]	@ 8031670 <atanf+0x184>
 803159e:	eea5 7aa6 	vfma.f32	s14, s11, s13
 80315a2:	eddf 5a34 	vldr	s11, [pc, #208]	@ 8031674 <atanf+0x188>
 80315a6:	eee7 5a26 	vfma.f32	s11, s14, s13
 80315aa:	ed9f 7a33 	vldr	s14, [pc, #204]	@ 8031678 <atanf+0x18c>
 80315ae:	eea6 5a87 	vfma.f32	s10, s13, s14
 80315b2:	ed9f 7a32 	vldr	s14, [pc, #200]	@ 803167c <atanf+0x190>
 80315b6:	eea5 7a26 	vfma.f32	s14, s10, s13
 80315ba:	ed9f 5a31 	vldr	s10, [pc, #196]	@ 8031680 <atanf+0x194>
 80315be:	eea7 5a26 	vfma.f32	s10, s14, s13
 80315c2:	ed9f 7a30 	vldr	s14, [pc, #192]	@ 8031684 <atanf+0x198>
 80315c6:	eea5 7a26 	vfma.f32	s14, s10, s13
 80315ca:	ee27 7a26 	vmul.f32	s14, s14, s13
 80315ce:	eea5 7a86 	vfma.f32	s14, s11, s12
 80315d2:	ee27 7a87 	vmul.f32	s14, s15, s14
 80315d6:	d121      	bne.n	803161c <atanf+0x130>
 80315d8:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80315dc:	e795      	b.n	803150a <atanf+0x1e>
 80315de:	eef7 7a00 	vmov.f32	s15, #112	@ 0x3f800000  1.0
 80315e2:	2301      	movs	r3, #1
 80315e4:	ee30 7a67 	vsub.f32	s14, s0, s15
 80315e8:	ee30 0a27 	vadd.f32	s0, s0, s15
 80315ec:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80315f0:	e7be      	b.n	8031570 <atanf+0x84>
 80315f2:	4b25      	ldr	r3, [pc, #148]	@ (8031688 <atanf+0x19c>)
 80315f4:	429c      	cmp	r4, r3
 80315f6:	d80b      	bhi.n	8031610 <atanf+0x124>
 80315f8:	eef7 7a08 	vmov.f32	s15, #120	@ 0x3fc00000  1.5
 80315fc:	2302      	movs	r3, #2
 80315fe:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8031602:	ee70 6a67 	vsub.f32	s13, s0, s15
 8031606:	eea0 7a27 	vfma.f32	s14, s0, s15
 803160a:	eec6 7a87 	vdiv.f32	s15, s13, s14
 803160e:	e7af      	b.n	8031570 <atanf+0x84>
 8031610:	eebf 7a00 	vmov.f32	s14, #240	@ 0xbf800000 -1.0
 8031614:	2303      	movs	r3, #3
 8031616:	eec7 7a00 	vdiv.f32	s15, s14, s0
 803161a:	e7a9      	b.n	8031570 <atanf+0x84>
 803161c:	4a1b      	ldr	r2, [pc, #108]	@ (803168c <atanf+0x1a0>)
 803161e:	2d00      	cmp	r5, #0
 8031620:	491b      	ldr	r1, [pc, #108]	@ (8031690 <atanf+0x1a4>)
 8031622:	eb02 0283 	add.w	r2, r2, r3, lsl #2
 8031626:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 803162a:	edd3 6a00 	vldr	s13, [r3]
 803162e:	ee37 7a66 	vsub.f32	s14, s14, s13
 8031632:	ee37 7a67 	vsub.f32	s14, s14, s15
 8031636:	edd2 7a00 	vldr	s15, [r2]
 803163a:	ee77 7ac7 	vsub.f32	s15, s15, s14
 803163e:	bfb8      	it	lt
 8031640:	eef1 7a67 	vneglt.f32	s15, s15
 8031644:	e761      	b.n	803150a <atanf+0x1e>
 8031646:	bf00      	nop
 8031648:	bfc90fdb 	.word	0xbfc90fdb
 803164c:	3fc90fdb 	.word	0x3fc90fdb
 8031650:	3edfffff 	.word	0x3edfffff
 8031654:	7149f2ca 	.word	0x7149f2ca
 8031658:	3f97ffff 	.word	0x3f97ffff
 803165c:	3c8569d7 	.word	0x3c8569d7
 8031660:	3d4bda59 	.word	0x3d4bda59
 8031664:	bd6ef16b 	.word	0xbd6ef16b
 8031668:	3d886b35 	.word	0x3d886b35
 803166c:	3dba2e6e 	.word	0x3dba2e6e
 8031670:	3e124925 	.word	0x3e124925
 8031674:	3eaaaaab 	.word	0x3eaaaaab
 8031678:	bd15a221 	.word	0xbd15a221
 803167c:	bd9d8795 	.word	0xbd9d8795
 8031680:	bde38e38 	.word	0xbde38e38
 8031684:	be4ccccd 	.word	0xbe4ccccd
 8031688:	401bffff 	.word	0x401bffff
 803168c:	08038504 	.word	0x08038504
 8031690:	080384f4 	.word	0x080384f4

08031694 <cosf>:
 8031694:	ee10 3a10 	vmov	r3, s0
 8031698:	b507      	push	{r0, r1, r2, lr}
 803169a:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 803169e:	4a1d      	ldr	r2, [pc, #116]	@ (8031714 <cosf+0x80>)
 80316a0:	4293      	cmp	r3, r2
 80316a2:	d806      	bhi.n	80316b2 <cosf+0x1e>
 80316a4:	eddf 0a1c 	vldr	s1, [pc, #112]	@ 8031718 <cosf+0x84>
 80316a8:	b003      	add	sp, #12
 80316aa:	f85d eb04 	ldr.w	lr, [sp], #4
 80316ae:	f000 b8b9 	b.w	8031824 <__kernel_cosf>
 80316b2:	f1b3 4fff 	cmp.w	r3, #2139095040	@ 0x7f800000
 80316b6:	d304      	bcc.n	80316c2 <cosf+0x2e>
 80316b8:	ee30 0a40 	vsub.f32	s0, s0, s0
 80316bc:	b003      	add	sp, #12
 80316be:	f85d fb04 	ldr.w	pc, [sp], #4
 80316c2:	4668      	mov	r0, sp
 80316c4:	f000 fc48 	bl	8031f58 <__ieee754_rem_pio2f>
 80316c8:	f000 0003 	and.w	r0, r0, #3
 80316cc:	2801      	cmp	r0, #1
 80316ce:	d009      	beq.n	80316e4 <cosf+0x50>
 80316d0:	2802      	cmp	r0, #2
 80316d2:	d010      	beq.n	80316f6 <cosf+0x62>
 80316d4:	b9b0      	cbnz	r0, 8031704 <cosf+0x70>
 80316d6:	eddd 0a01 	vldr	s1, [sp, #4]
 80316da:	ed9d 0a00 	vldr	s0, [sp]
 80316de:	f000 f8a1 	bl	8031824 <__kernel_cosf>
 80316e2:	e7eb      	b.n	80316bc <cosf+0x28>
 80316e4:	eddd 0a01 	vldr	s1, [sp, #4]
 80316e8:	ed9d 0a00 	vldr	s0, [sp]
 80316ec:	f000 f8f2 	bl	80318d4 <__kernel_sinf>
 80316f0:	eeb1 0a40 	vneg.f32	s0, s0
 80316f4:	e7e2      	b.n	80316bc <cosf+0x28>
 80316f6:	eddd 0a01 	vldr	s1, [sp, #4]
 80316fa:	ed9d 0a00 	vldr	s0, [sp]
 80316fe:	f000 f891 	bl	8031824 <__kernel_cosf>
 8031702:	e7f5      	b.n	80316f0 <cosf+0x5c>
 8031704:	2001      	movs	r0, #1
 8031706:	eddd 0a01 	vldr	s1, [sp, #4]
 803170a:	ed9d 0a00 	vldr	s0, [sp]
 803170e:	f000 f8e1 	bl	80318d4 <__kernel_sinf>
 8031712:	e7d3      	b.n	80316bc <cosf+0x28>
 8031714:	3f490fd8 	.word	0x3f490fd8
 8031718:	00000000 	.word	0x00000000

0803171c <fabsf>:
 803171c:	ee10 3a10 	vmov	r3, s0
 8031720:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 8031724:	ee00 3a10 	vmov	s0, r3
 8031728:	4770      	bx	lr
	...

0803172c <sinf>:
 803172c:	ee10 3a10 	vmov	r3, s0
 8031730:	b507      	push	{r0, r1, r2, lr}
 8031732:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 8031736:	4a1e      	ldr	r2, [pc, #120]	@ (80317b0 <sinf+0x84>)
 8031738:	4293      	cmp	r3, r2
 803173a:	d807      	bhi.n	803174c <sinf+0x20>
 803173c:	2000      	movs	r0, #0
 803173e:	eddf 0a1d 	vldr	s1, [pc, #116]	@ 80317b4 <sinf+0x88>
 8031742:	b003      	add	sp, #12
 8031744:	f85d eb04 	ldr.w	lr, [sp], #4
 8031748:	f000 b8c4 	b.w	80318d4 <__kernel_sinf>
 803174c:	f1b3 4fff 	cmp.w	r3, #2139095040	@ 0x7f800000
 8031750:	d304      	bcc.n	803175c <sinf+0x30>
 8031752:	ee30 0a40 	vsub.f32	s0, s0, s0
 8031756:	b003      	add	sp, #12
 8031758:	f85d fb04 	ldr.w	pc, [sp], #4
 803175c:	4668      	mov	r0, sp
 803175e:	f000 fbfb 	bl	8031f58 <__ieee754_rem_pio2f>
 8031762:	f000 0003 	and.w	r0, r0, #3
 8031766:	2801      	cmp	r0, #1
 8031768:	d00a      	beq.n	8031780 <sinf+0x54>
 803176a:	2802      	cmp	r0, #2
 803176c:	d00f      	beq.n	803178e <sinf+0x62>
 803176e:	b9c0      	cbnz	r0, 80317a2 <sinf+0x76>
 8031770:	2001      	movs	r0, #1
 8031772:	eddd 0a01 	vldr	s1, [sp, #4]
 8031776:	ed9d 0a00 	vldr	s0, [sp]
 803177a:	f000 f8ab 	bl	80318d4 <__kernel_sinf>
 803177e:	e7ea      	b.n	8031756 <sinf+0x2a>
 8031780:	eddd 0a01 	vldr	s1, [sp, #4]
 8031784:	ed9d 0a00 	vldr	s0, [sp]
 8031788:	f000 f84c 	bl	8031824 <__kernel_cosf>
 803178c:	e7e3      	b.n	8031756 <sinf+0x2a>
 803178e:	2001      	movs	r0, #1
 8031790:	eddd 0a01 	vldr	s1, [sp, #4]
 8031794:	ed9d 0a00 	vldr	s0, [sp]
 8031798:	f000 f89c 	bl	80318d4 <__kernel_sinf>
 803179c:	eeb1 0a40 	vneg.f32	s0, s0
 80317a0:	e7d9      	b.n	8031756 <sinf+0x2a>
 80317a2:	eddd 0a01 	vldr	s1, [sp, #4]
 80317a6:	ed9d 0a00 	vldr	s0, [sp]
 80317aa:	f000 f83b 	bl	8031824 <__kernel_cosf>
 80317ae:	e7f5      	b.n	803179c <sinf+0x70>
 80317b0:	3f490fd8 	.word	0x3f490fd8
 80317b4:	00000000 	.word	0x00000000

080317b8 <tanf>:
 80317b8:	ee10 3a10 	vmov	r3, s0
 80317bc:	b507      	push	{r0, r1, r2, lr}
 80317be:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 80317c2:	4a11      	ldr	r2, [pc, #68]	@ (8031808 <tanf+0x50>)
 80317c4:	4293      	cmp	r3, r2
 80317c6:	d807      	bhi.n	80317d8 <tanf+0x20>
 80317c8:	2001      	movs	r0, #1
 80317ca:	eddf 0a10 	vldr	s1, [pc, #64]	@ 803180c <tanf+0x54>
 80317ce:	b003      	add	sp, #12
 80317d0:	f85d eb04 	ldr.w	lr, [sp], #4
 80317d4:	f000 b8c6 	b.w	8031964 <__kernel_tanf>
 80317d8:	f1b3 4fff 	cmp.w	r3, #2139095040	@ 0x7f800000
 80317dc:	d304      	bcc.n	80317e8 <tanf+0x30>
 80317de:	ee30 0a40 	vsub.f32	s0, s0, s0
 80317e2:	b003      	add	sp, #12
 80317e4:	f85d fb04 	ldr.w	pc, [sp], #4
 80317e8:	4668      	mov	r0, sp
 80317ea:	f000 fbb5 	bl	8031f58 <__ieee754_rem_pio2f>
 80317ee:	eddd 0a01 	vldr	s1, [sp, #4]
 80317f2:	0040      	lsls	r0, r0, #1
 80317f4:	ed9d 0a00 	vldr	s0, [sp]
 80317f8:	f000 0002 	and.w	r0, r0, #2
 80317fc:	f1c0 0001 	rsb	r0, r0, #1
 8031800:	f000 f8b0 	bl	8031964 <__kernel_tanf>
 8031804:	e7ed      	b.n	80317e2 <tanf+0x2a>
 8031806:	bf00      	nop
 8031808:	3f490fda 	.word	0x3f490fda
 803180c:	00000000 	.word	0x00000000

08031810 <nanf>:
 8031810:	ed9f 0a01 	vldr	s0, [pc, #4]	@ 8031818 <nanf+0x8>
 8031814:	4770      	bx	lr
 8031816:	bf00      	nop
 8031818:	7fc00000 	.word	0x7fc00000

0803181c <__ieee754_sqrtf>:
 803181c:	eeb1 0ac0 	vsqrt.f32	s0, s0
 8031820:	4770      	bx	lr
	...

08031824 <__kernel_cosf>:
 8031824:	ee10 3a10 	vmov	r3, s0
 8031828:	eef0 6a40 	vmov.f32	s13, s0
 803182c:	eeb7 0a00 	vmov.f32	s0, #112	@ 0x3f800000  1.0
 8031830:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 8031834:	f1b3 5f48 	cmp.w	r3, #838860800	@ 0x32000000
 8031838:	d204      	bcs.n	8031844 <__kernel_cosf+0x20>
 803183a:	eefd 7ae6 	vcvt.s32.f32	s15, s13
 803183e:	ee17 2a90 	vmov	r2, s15
 8031842:	b342      	cbz	r2, 8031896 <__kernel_cosf+0x72>
 8031844:	ee26 7aa6 	vmul.f32	s14, s13, s13
 8031848:	eddf 7a1a 	vldr	s15, [pc, #104]	@ 80318b4 <__kernel_cosf+0x90>
 803184c:	ed9f 6a1a 	vldr	s12, [pc, #104]	@ 80318b8 <__kernel_cosf+0x94>
 8031850:	ee60 0ae6 	vnmul.f32	s1, s1, s13
 8031854:	4a19      	ldr	r2, [pc, #100]	@ (80318bc <__kernel_cosf+0x98>)
 8031856:	eea7 6a27 	vfma.f32	s12, s14, s15
 803185a:	eddf 7a19 	vldr	s15, [pc, #100]	@ 80318c0 <__kernel_cosf+0x9c>
 803185e:	4293      	cmp	r3, r2
 8031860:	eee6 7a07 	vfma.f32	s15, s12, s14
 8031864:	ed9f 6a17 	vldr	s12, [pc, #92]	@ 80318c4 <__kernel_cosf+0xa0>
 8031868:	eea7 6a87 	vfma.f32	s12, s15, s14
 803186c:	eddf 7a16 	vldr	s15, [pc, #88]	@ 80318c8 <__kernel_cosf+0xa4>
 8031870:	eee6 7a07 	vfma.f32	s15, s12, s14
 8031874:	ed9f 6a15 	vldr	s12, [pc, #84]	@ 80318cc <__kernel_cosf+0xa8>
 8031878:	eea7 6a87 	vfma.f32	s12, s15, s14
 803187c:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 8031880:	ee67 7a27 	vmul.f32	s15, s14, s15
 8031884:	ee26 6a07 	vmul.f32	s12, s12, s14
 8031888:	eee7 0a06 	vfma.f32	s1, s14, s12
 803188c:	d804      	bhi.n	8031898 <__kernel_cosf+0x74>
 803188e:	ee77 7ae0 	vsub.f32	s15, s15, s1
 8031892:	ee30 0a67 	vsub.f32	s0, s0, s15
 8031896:	4770      	bx	lr
 8031898:	4a0d      	ldr	r2, [pc, #52]	@ (80318d0 <__kernel_cosf+0xac>)
 803189a:	4293      	cmp	r3, r2
 803189c:	bf96      	itet	ls
 803189e:	f103 437f 	addls.w	r3, r3, #4278190080	@ 0xff000000
 80318a2:	eeb5 7a02 	vmovhi.f32	s14, #82	@ 0x3e900000  0.2812500
 80318a6:	ee07 3a10 	vmovls	s14, r3
 80318aa:	ee30 0a47 	vsub.f32	s0, s0, s14
 80318ae:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80318b2:	e7ec      	b.n	803188e <__kernel_cosf+0x6a>
 80318b4:	ad47d74e 	.word	0xad47d74e
 80318b8:	310f74f6 	.word	0x310f74f6
 80318bc:	3e999999 	.word	0x3e999999
 80318c0:	b493f27c 	.word	0xb493f27c
 80318c4:	37d00d01 	.word	0x37d00d01
 80318c8:	bab60b61 	.word	0xbab60b61
 80318cc:	3d2aaaab 	.word	0x3d2aaaab
 80318d0:	3f480000 	.word	0x3f480000

080318d4 <__kernel_sinf>:
 80318d4:	ee10 3a10 	vmov	r3, s0
 80318d8:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 80318dc:	f1b3 5f48 	cmp.w	r3, #838860800	@ 0x32000000
 80318e0:	d204      	bcs.n	80318ec <__kernel_sinf+0x18>
 80318e2:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 80318e6:	ee17 3a90 	vmov	r3, s15
 80318ea:	b35b      	cbz	r3, 8031944 <__kernel_sinf+0x70>
 80318ec:	ee20 7a00 	vmul.f32	s14, s0, s0
 80318f0:	eddf 7a15 	vldr	s15, [pc, #84]	@ 8031948 <__kernel_sinf+0x74>
 80318f4:	ed9f 6a15 	vldr	s12, [pc, #84]	@ 803194c <__kernel_sinf+0x78>
 80318f8:	eea7 6a27 	vfma.f32	s12, s14, s15
 80318fc:	eddf 7a14 	vldr	s15, [pc, #80]	@ 8031950 <__kernel_sinf+0x7c>
 8031900:	ee60 6a07 	vmul.f32	s13, s0, s14
 8031904:	eee6 7a07 	vfma.f32	s15, s12, s14
 8031908:	ed9f 6a12 	vldr	s12, [pc, #72]	@ 8031954 <__kernel_sinf+0x80>
 803190c:	eea7 6a87 	vfma.f32	s12, s15, s14
 8031910:	eddf 7a11 	vldr	s15, [pc, #68]	@ 8031958 <__kernel_sinf+0x84>
 8031914:	eee6 7a07 	vfma.f32	s15, s12, s14
 8031918:	b930      	cbnz	r0, 8031928 <__kernel_sinf+0x54>
 803191a:	ed9f 6a10 	vldr	s12, [pc, #64]	@ 803195c <__kernel_sinf+0x88>
 803191e:	eea7 6a27 	vfma.f32	s12, s14, s15
 8031922:	eea6 0a26 	vfma.f32	s0, s12, s13
 8031926:	4770      	bx	lr
 8031928:	ee67 7ae6 	vnmul.f32	s15, s15, s13
 803192c:	eeb6 6a00 	vmov.f32	s12, #96	@ 0x3f000000  0.5
 8031930:	eee0 7a86 	vfma.f32	s15, s1, s12
 8031934:	eed7 0a87 	vfnms.f32	s1, s15, s14
 8031938:	eddf 7a09 	vldr	s15, [pc, #36]	@ 8031960 <__kernel_sinf+0x8c>
 803193c:	eee6 0aa7 	vfma.f32	s1, s13, s15
 8031940:	ee30 0a60 	vsub.f32	s0, s0, s1
 8031944:	4770      	bx	lr
 8031946:	bf00      	nop
 8031948:	2f2ec9d3 	.word	0x2f2ec9d3
 803194c:	b2d72f34 	.word	0xb2d72f34
 8031950:	3638ef1b 	.word	0x3638ef1b
 8031954:	b9500d01 	.word	0xb9500d01
 8031958:	3c088889 	.word	0x3c088889
 803195c:	be2aaaab 	.word	0xbe2aaaab
 8031960:	3e2aaaab 	.word	0x3e2aaaab

08031964 <__kernel_tanf>:
 8031964:	b508      	push	{r3, lr}
 8031966:	ee10 3a10 	vmov	r3, s0
 803196a:	eef0 7a40 	vmov.f32	s15, s0
 803196e:	f023 4200 	bic.w	r2, r3, #2147483648	@ 0x80000000
 8031972:	f1b2 5f46 	cmp.w	r2, #830472192	@ 0x31800000
 8031976:	d217      	bcs.n	80319a8 <__kernel_tanf+0x44>
 8031978:	eebd 7ac0 	vcvt.s32.f32	s14, s0
 803197c:	ee17 1a10 	vmov	r1, s14
 8031980:	bb39      	cbnz	r1, 80319d2 <__kernel_tanf+0x6e>
 8031982:	1c43      	adds	r3, r0, #1
 8031984:	4313      	orrs	r3, r2
 8031986:	d108      	bne.n	803199a <__kernel_tanf+0x36>
 8031988:	f7ff fec8 	bl	803171c <fabsf>
 803198c:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8031990:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8031994:	eeb0 0a67 	vmov.f32	s0, s15
 8031998:	bd08      	pop	{r3, pc}
 803199a:	2801      	cmp	r0, #1
 803199c:	d0fa      	beq.n	8031994 <__kernel_tanf+0x30>
 803199e:	eebf 7a00 	vmov.f32	s14, #240	@ 0xbf800000 -1.0
 80319a2:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80319a6:	e7f5      	b.n	8031994 <__kernel_tanf+0x30>
 80319a8:	494c      	ldr	r1, [pc, #304]	@ (8031adc <__kernel_tanf+0x178>)
 80319aa:	428a      	cmp	r2, r1
 80319ac:	d311      	bcc.n	80319d2 <__kernel_tanf+0x6e>
 80319ae:	2b00      	cmp	r3, #0
 80319b0:	ed9f 7a4b 	vldr	s14, [pc, #300]	@ 8031ae0 <__kernel_tanf+0x17c>
 80319b4:	bfbc      	itt	lt
 80319b6:	eef1 7a40 	vneglt.f32	s15, s0
 80319ba:	eef1 0a60 	vneglt.f32	s1, s1
 80319be:	ee37 7a67 	vsub.f32	s14, s14, s15
 80319c2:	eddf 7a48 	vldr	s15, [pc, #288]	@ 8031ae4 <__kernel_tanf+0x180>
 80319c6:	ee77 7ae0 	vsub.f32	s15, s15, s1
 80319ca:	eddf 0a47 	vldr	s1, [pc, #284]	@ 8031ae8 <__kernel_tanf+0x184>
 80319ce:	ee77 7a87 	vadd.f32	s15, s15, s14
 80319d2:	ee67 6aa7 	vmul.f32	s13, s15, s15
 80319d6:	eddf 5a45 	vldr	s11, [pc, #276]	@ 8031aec <__kernel_tanf+0x188>
 80319da:	ed9f 6a45 	vldr	s12, [pc, #276]	@ 8031af0 <__kernel_tanf+0x18c>
 80319de:	ed9f 5a45 	vldr	s10, [pc, #276]	@ 8031af4 <__kernel_tanf+0x190>
 80319e2:	ee26 7aa6 	vmul.f32	s14, s13, s13
 80319e6:	493d      	ldr	r1, [pc, #244]	@ (8031adc <__kernel_tanf+0x178>)
 80319e8:	428a      	cmp	r2, r1
 80319ea:	eea7 6a25 	vfma.f32	s12, s14, s11
 80319ee:	eddf 5a42 	vldr	s11, [pc, #264]	@ 8031af8 <__kernel_tanf+0x194>
 80319f2:	eee6 5a07 	vfma.f32	s11, s12, s14
 80319f6:	ed9f 6a41 	vldr	s12, [pc, #260]	@ 8031afc <__kernel_tanf+0x198>
 80319fa:	eea5 6a87 	vfma.f32	s12, s11, s14
 80319fe:	eddf 5a40 	vldr	s11, [pc, #256]	@ 8031b00 <__kernel_tanf+0x19c>
 8031a02:	eee6 5a07 	vfma.f32	s11, s12, s14
 8031a06:	ed9f 6a3f 	vldr	s12, [pc, #252]	@ 8031b04 <__kernel_tanf+0x1a0>
 8031a0a:	eea5 6a87 	vfma.f32	s12, s11, s14
 8031a0e:	eddf 5a3e 	vldr	s11, [pc, #248]	@ 8031b08 <__kernel_tanf+0x1a4>
 8031a12:	eee7 5a05 	vfma.f32	s11, s14, s10
 8031a16:	ed9f 5a3d 	vldr	s10, [pc, #244]	@ 8031b0c <__kernel_tanf+0x1a8>
 8031a1a:	eea5 5a87 	vfma.f32	s10, s11, s14
 8031a1e:	eddf 5a3c 	vldr	s11, [pc, #240]	@ 8031b10 <__kernel_tanf+0x1ac>
 8031a22:	eee5 5a07 	vfma.f32	s11, s10, s14
 8031a26:	ed9f 5a3b 	vldr	s10, [pc, #236]	@ 8031b14 <__kernel_tanf+0x1b0>
 8031a2a:	eea5 5a87 	vfma.f32	s10, s11, s14
 8031a2e:	eddf 5a3a 	vldr	s11, [pc, #232]	@ 8031b18 <__kernel_tanf+0x1b4>
 8031a32:	eee5 5a07 	vfma.f32	s11, s10, s14
 8031a36:	eeb0 7a46 	vmov.f32	s14, s12
 8031a3a:	ee27 5aa6 	vmul.f32	s10, s15, s13
 8031a3e:	eeb0 6a60 	vmov.f32	s12, s1
 8031a42:	eea5 7aa6 	vfma.f32	s14, s11, s13
 8031a46:	eea7 6a05 	vfma.f32	s12, s14, s10
 8031a4a:	ed9f 7a34 	vldr	s14, [pc, #208]	@ 8031b1c <__kernel_tanf+0x1b8>
 8031a4e:	eee6 0a26 	vfma.f32	s1, s12, s13
 8031a52:	eee5 0a07 	vfma.f32	s1, s10, s14
 8031a56:	ee37 6aa0 	vadd.f32	s12, s15, s1
 8031a5a:	d31d      	bcc.n	8031a98 <__kernel_tanf+0x134>
 8031a5c:	ee07 0a10 	vmov	s14, r0
 8031a60:	ee26 5a06 	vmul.f32	s10, s12, s12
 8031a64:	179b      	asrs	r3, r3, #30
 8031a66:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8031a6a:	f003 0302 	and.w	r3, r3, #2
 8031a6e:	ee36 6a07 	vadd.f32	s12, s12, s14
 8031a72:	f1c3 0301 	rsb	r3, r3, #1
 8031a76:	ee06 3a90 	vmov	s13, r3
 8031a7a:	eec5 5a06 	vdiv.f32	s11, s10, s12
 8031a7e:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8031a82:	ee35 6ae0 	vsub.f32	s12, s11, s1
 8031a86:	ee77 7ac6 	vsub.f32	s15, s15, s12
 8031a8a:	eeb0 6a00 	vmov.f32	s12, #0	@ 0x40000000  2.0
 8031a8e:	eea7 7ac6 	vfms.f32	s14, s15, s12
 8031a92:	ee66 7a87 	vmul.f32	s15, s13, s14
 8031a96:	e77d      	b.n	8031994 <__kernel_tanf+0x30>
 8031a98:	2801      	cmp	r0, #1
 8031a9a:	d01b      	beq.n	8031ad4 <__kernel_tanf+0x170>
 8031a9c:	4b20      	ldr	r3, [pc, #128]	@ (8031b20 <__kernel_tanf+0x1bc>)
 8031a9e:	ee16 2a10 	vmov	r2, s12
 8031aa2:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8031aa6:	401a      	ands	r2, r3
 8031aa8:	ee05 2a90 	vmov	s11, r2
 8031aac:	ee75 7ae7 	vsub.f32	s15, s11, s15
 8031ab0:	ee70 0ae7 	vsub.f32	s1, s1, s15
 8031ab4:	eeff 7a00 	vmov.f32	s15, #240	@ 0xbf800000 -1.0
 8031ab8:	eec7 6a86 	vdiv.f32	s13, s15, s12
 8031abc:	ee16 2a90 	vmov	r2, s13
 8031ac0:	4013      	ands	r3, r2
 8031ac2:	ee07 3a90 	vmov	s15, r3
 8031ac6:	eea5 7aa7 	vfma.f32	s14, s11, s15
 8031aca:	eea0 7aa7 	vfma.f32	s14, s1, s15
 8031ace:	eee7 7a26 	vfma.f32	s15, s14, s13
 8031ad2:	e75f      	b.n	8031994 <__kernel_tanf+0x30>
 8031ad4:	eef0 7a46 	vmov.f32	s15, s12
 8031ad8:	e75c      	b.n	8031994 <__kernel_tanf+0x30>
 8031ada:	bf00      	nop
 8031adc:	3f2ca140 	.word	0x3f2ca140
 8031ae0:	3f490fda 	.word	0x3f490fda
 8031ae4:	33222168 	.word	0x33222168
 8031ae8:	00000000 	.word	0x00000000
 8031aec:	b79bae5f 	.word	0xb79bae5f
 8031af0:	38a3f445 	.word	0x38a3f445
 8031af4:	37d95384 	.word	0x37d95384
 8031af8:	3a1a26c8 	.word	0x3a1a26c8
 8031afc:	3b6b6916 	.word	0x3b6b6916
 8031b00:	3cb327a4 	.word	0x3cb327a4
 8031b04:	3e088889 	.word	0x3e088889
 8031b08:	3895c07a 	.word	0x3895c07a
 8031b0c:	398137b9 	.word	0x398137b9
 8031b10:	3abede48 	.word	0x3abede48
 8031b14:	3c11371f 	.word	0x3c11371f
 8031b18:	3d5d0dd1 	.word	0x3d5d0dd1
 8031b1c:	3eaaaaab 	.word	0x3eaaaaab
 8031b20:	fffff000 	.word	0xfffff000

08031b24 <__ieee754_acosf>:
 8031b24:	b508      	push	{r3, lr}
 8031b26:	ee10 3a10 	vmov	r3, s0
 8031b2a:	f023 4200 	bic.w	r2, r3, #2147483648	@ 0x80000000
 8031b2e:	f1b2 5f7e 	cmp.w	r2, #1065353216	@ 0x3f800000
 8031b32:	ed2d 8b0c 	vpush	{d8-d13}
 8031b36:	d109      	bne.n	8031b4c <__ieee754_acosf+0x28>
 8031b38:	2b00      	cmp	r3, #0
 8031b3a:	ed9f 0a65 	vldr	s0, [pc, #404]	@ 8031cd0 <__ieee754_acosf+0x1ac>
 8031b3e:	eddf 7a65 	vldr	s15, [pc, #404]	@ 8031cd4 <__ieee754_acosf+0x1b0>
 8031b42:	fe37 0a80 	vselgt.f32	s0, s15, s0
 8031b46:	ecbd 8b0c 	vpop	{d8-d13}
 8031b4a:	bd08      	pop	{r3, pc}
 8031b4c:	d904      	bls.n	8031b58 <__ieee754_acosf+0x34>
 8031b4e:	ee30 8a40 	vsub.f32	s16, s0, s0
 8031b52:	ee88 0a08 	vdiv.f32	s0, s16, s16
 8031b56:	e7f6      	b.n	8031b46 <__ieee754_acosf+0x22>
 8031b58:	f1b2 5f7c 	cmp.w	r2, #1056964608	@ 0x3f000000
 8031b5c:	d23c      	bcs.n	8031bd8 <__ieee754_acosf+0xb4>
 8031b5e:	f1b2 5f0c 	cmp.w	r2, #587202560	@ 0x23000000
 8031b62:	f240 80b1 	bls.w	8031cc8 <__ieee754_acosf+0x1a4>
 8031b66:	ee60 7a00 	vmul.f32	s15, s0, s0
 8031b6a:	eddf 6a5b 	vldr	s13, [pc, #364]	@ 8031cd8 <__ieee754_acosf+0x1b4>
 8031b6e:	ed9f 7a5b 	vldr	s14, [pc, #364]	@ 8031cdc <__ieee754_acosf+0x1b8>
 8031b72:	ed9f 6a5b 	vldr	s12, [pc, #364]	@ 8031ce0 <__ieee754_acosf+0x1bc>
 8031b76:	eea7 7aa6 	vfma.f32	s14, s15, s13
 8031b7a:	eddf 6a5a 	vldr	s13, [pc, #360]	@ 8031ce4 <__ieee754_acosf+0x1c0>
 8031b7e:	eee7 6a27 	vfma.f32	s13, s14, s15
 8031b82:	ed9f 7a59 	vldr	s14, [pc, #356]	@ 8031ce8 <__ieee754_acosf+0x1c4>
 8031b86:	eea6 7aa7 	vfma.f32	s14, s13, s15
 8031b8a:	eddf 6a58 	vldr	s13, [pc, #352]	@ 8031cec <__ieee754_acosf+0x1c8>
 8031b8e:	eee7 6a27 	vfma.f32	s13, s14, s15
 8031b92:	ed9f 7a57 	vldr	s14, [pc, #348]	@ 8031cf0 <__ieee754_acosf+0x1cc>
 8031b96:	eea6 7aa7 	vfma.f32	s14, s13, s15
 8031b9a:	eddf 6a56 	vldr	s13, [pc, #344]	@ 8031cf4 <__ieee754_acosf+0x1d0>
 8031b9e:	eea7 6aa6 	vfma.f32	s12, s15, s13
 8031ba2:	eddf 6a55 	vldr	s13, [pc, #340]	@ 8031cf8 <__ieee754_acosf+0x1d4>
 8031ba6:	ee27 7a27 	vmul.f32	s14, s14, s15
 8031baa:	eee6 6a27 	vfma.f32	s13, s12, s15
 8031bae:	ed9f 6a53 	vldr	s12, [pc, #332]	@ 8031cfc <__ieee754_acosf+0x1d8>
 8031bb2:	eea6 6aa7 	vfma.f32	s12, s13, s15
 8031bb6:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8031bba:	eee6 6a27 	vfma.f32	s13, s12, s15
 8031bbe:	eddf 7a50 	vldr	s15, [pc, #320]	@ 8031d00 <__ieee754_acosf+0x1dc>
 8031bc2:	ee87 6a26 	vdiv.f32	s12, s14, s13
 8031bc6:	eee0 7a46 	vfms.f32	s15, s0, s12
 8031bca:	ee70 7a67 	vsub.f32	s15, s0, s15
 8031bce:	ed9f 0a4d 	vldr	s0, [pc, #308]	@ 8031d04 <__ieee754_acosf+0x1e0>
 8031bd2:	ee30 0a67 	vsub.f32	s0, s0, s15
 8031bd6:	e7b6      	b.n	8031b46 <__ieee754_acosf+0x22>
 8031bd8:	2b00      	cmp	r3, #0
 8031bda:	eeb7 9a00 	vmov.f32	s18, #112	@ 0x3f800000  1.0
 8031bde:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 8031be2:	eddf da3d 	vldr	s27, [pc, #244]	@ 8031cd8 <__ieee754_acosf+0x1b4>
 8031be6:	eddf ca3d 	vldr	s25, [pc, #244]	@ 8031cdc <__ieee754_acosf+0x1b8>
 8031bea:	ed9f ca3e 	vldr	s24, [pc, #248]	@ 8031ce4 <__ieee754_acosf+0x1c0>
 8031bee:	eddf ba3e 	vldr	s23, [pc, #248]	@ 8031ce8 <__ieee754_acosf+0x1c4>
 8031bf2:	ed9f ba3e 	vldr	s22, [pc, #248]	@ 8031cec <__ieee754_acosf+0x1c8>
 8031bf6:	eddf 8a3e 	vldr	s17, [pc, #248]	@ 8031cf0 <__ieee754_acosf+0x1cc>
 8031bfa:	ed9f da3e 	vldr	s26, [pc, #248]	@ 8031cf4 <__ieee754_acosf+0x1d0>
 8031bfe:	eddf aa38 	vldr	s21, [pc, #224]	@ 8031ce0 <__ieee754_acosf+0x1bc>
 8031c02:	ed9f aa3d 	vldr	s20, [pc, #244]	@ 8031cf8 <__ieee754_acosf+0x1d4>
 8031c06:	eddf 9a3d 	vldr	s19, [pc, #244]	@ 8031cfc <__ieee754_acosf+0x1d8>
 8031c0a:	da28      	bge.n	8031c5e <__ieee754_acosf+0x13a>
 8031c0c:	ee30 8a09 	vadd.f32	s16, s0, s18
 8031c10:	ee28 0a27 	vmul.f32	s0, s16, s15
 8031c14:	eee0 ca2d 	vfma.f32	s25, s0, s27
 8031c18:	eee0 aa0d 	vfma.f32	s21, s0, s26
 8031c1c:	eeac ca80 	vfma.f32	s24, s25, s0
 8031c20:	eeaa aa80 	vfma.f32	s20, s21, s0
 8031c24:	eeec ba00 	vfma.f32	s23, s24, s0
 8031c28:	eeea 9a00 	vfma.f32	s19, s20, s0
 8031c2c:	eeab ba80 	vfma.f32	s22, s23, s0
 8031c30:	eea9 9a80 	vfma.f32	s18, s19, s0
 8031c34:	eeeb 8a00 	vfma.f32	s17, s22, s0
 8031c38:	ee68 8a80 	vmul.f32	s17, s17, s0
 8031c3c:	f7ff fdee 	bl	803181c <__ieee754_sqrtf>
 8031c40:	eddf 7a31 	vldr	s15, [pc, #196]	@ 8031d08 <__ieee754_acosf+0x1e4>
 8031c44:	ee88 7a89 	vdiv.f32	s14, s17, s18
 8031c48:	eee0 7a07 	vfma.f32	s15, s0, s14
 8031c4c:	eeb0 7a00 	vmov.f32	s14, #0	@ 0x40000000  2.0
 8031c50:	ee77 7a80 	vadd.f32	s15, s15, s0
 8031c54:	ed9f 0a2d 	vldr	s0, [pc, #180]	@ 8031d0c <__ieee754_acosf+0x1e8>
 8031c58:	eea7 0ac7 	vfms.f32	s0, s15, s14
 8031c5c:	e773      	b.n	8031b46 <__ieee754_acosf+0x22>
 8031c5e:	ee39 8a40 	vsub.f32	s16, s18, s0
 8031c62:	ee28 8a27 	vmul.f32	s16, s16, s15
 8031c66:	eeb0 0a48 	vmov.f32	s0, s16
 8031c6a:	f7ff fdd7 	bl	803181c <__ieee754_sqrtf>
 8031c6e:	eee8 ca2d 	vfma.f32	s25, s16, s27
 8031c72:	eee8 aa0d 	vfma.f32	s21, s16, s26
 8031c76:	ee10 3a10 	vmov	r3, s0
 8031c7a:	eeb0 6a48 	vmov.f32	s12, s16
 8031c7e:	f423 637f 	bic.w	r3, r3, #4080	@ 0xff0
 8031c82:	f023 030f 	bic.w	r3, r3, #15
 8031c86:	eeac ca88 	vfma.f32	s24, s25, s16
 8031c8a:	eeaa aa88 	vfma.f32	s20, s21, s16
 8031c8e:	ee07 3a90 	vmov	s15, r3
 8031c92:	eea7 6ae7 	vfms.f32	s12, s15, s15
 8031c96:	ee70 6a27 	vadd.f32	s13, s0, s15
 8031c9a:	eeec ba08 	vfma.f32	s23, s24, s16
 8031c9e:	eeea 9a08 	vfma.f32	s19, s20, s16
 8031ca2:	ee86 7a26 	vdiv.f32	s14, s12, s13
 8031ca6:	eeab ba88 	vfma.f32	s22, s23, s16
 8031caa:	eea9 9a88 	vfma.f32	s18, s19, s16
 8031cae:	eeeb 8a08 	vfma.f32	s17, s22, s16
 8031cb2:	ee68 8a88 	vmul.f32	s17, s17, s16
 8031cb6:	eec8 6a89 	vdiv.f32	s13, s17, s18
 8031cba:	eea0 7a26 	vfma.f32	s14, s0, s13
 8031cbe:	ee37 0a87 	vadd.f32	s0, s15, s14
 8031cc2:	ee30 0a00 	vadd.f32	s0, s0, s0
 8031cc6:	e73e      	b.n	8031b46 <__ieee754_acosf+0x22>
 8031cc8:	ed9f 0a11 	vldr	s0, [pc, #68]	@ 8031d10 <__ieee754_acosf+0x1ec>
 8031ccc:	e73b      	b.n	8031b46 <__ieee754_acosf+0x22>
 8031cce:	bf00      	nop
 8031cd0:	40490fdb 	.word	0x40490fdb
 8031cd4:	00000000 	.word	0x00000000
 8031cd8:	3811ef08 	.word	0x3811ef08
 8031cdc:	3a4f7f04 	.word	0x3a4f7f04
 8031ce0:	bf303361 	.word	0xbf303361
 8031ce4:	bd241146 	.word	0xbd241146
 8031ce8:	3e4e0aa8 	.word	0x3e4e0aa8
 8031cec:	bea6b090 	.word	0xbea6b090
 8031cf0:	3e2aaaab 	.word	0x3e2aaaab
 8031cf4:	3d9dc62e 	.word	0x3d9dc62e
 8031cf8:	4001572d 	.word	0x4001572d
 8031cfc:	c019d139 	.word	0xc019d139
 8031d00:	33a22168 	.word	0x33a22168
 8031d04:	3fc90fda 	.word	0x3fc90fda
 8031d08:	b3a22168 	.word	0xb3a22168
 8031d0c:	40490fda 	.word	0x40490fda
 8031d10:	3fc90fdb 	.word	0x3fc90fdb

08031d14 <__ieee754_atan2f>:
 8031d14:	ee10 2a90 	vmov	r2, s1
 8031d18:	eef0 7a40 	vmov.f32	s15, s0
 8031d1c:	f022 4100 	bic.w	r1, r2, #2147483648	@ 0x80000000
 8031d20:	f1b1 4fff 	cmp.w	r1, #2139095040	@ 0x7f800000
 8031d24:	b510      	push	{r4, lr}
 8031d26:	d806      	bhi.n	8031d36 <__ieee754_atan2f+0x22>
 8031d28:	ee10 0a10 	vmov	r0, s0
 8031d2c:	f020 4300 	bic.w	r3, r0, #2147483648	@ 0x80000000
 8031d30:	f1b3 4fff 	cmp.w	r3, #2139095040	@ 0x7f800000
 8031d34:	d904      	bls.n	8031d40 <__ieee754_atan2f+0x2c>
 8031d36:	ee77 7aa0 	vadd.f32	s15, s15, s1
 8031d3a:	eeb0 0a67 	vmov.f32	s0, s15
 8031d3e:	bd10      	pop	{r4, pc}
 8031d40:	f1b2 5f7e 	cmp.w	r2, #1065353216	@ 0x3f800000
 8031d44:	d103      	bne.n	8031d4e <__ieee754_atan2f+0x3a>
 8031d46:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8031d4a:	f7ff bbcf 	b.w	80314ec <atanf>
 8031d4e:	1794      	asrs	r4, r2, #30
 8031d50:	f004 0402 	and.w	r4, r4, #2
 8031d54:	ea44 74d0 	orr.w	r4, r4, r0, lsr #31
 8031d58:	b93b      	cbnz	r3, 8031d6a <__ieee754_atan2f+0x56>
 8031d5a:	2c02      	cmp	r4, #2
 8031d5c:	d05c      	beq.n	8031e18 <__ieee754_atan2f+0x104>
 8031d5e:	2c03      	cmp	r4, #3
 8031d60:	ed9f 7a32 	vldr	s14, [pc, #200]	@ 8031e2c <__ieee754_atan2f+0x118>
 8031d64:	fe47 7a00 	vseleq.f32	s15, s14, s0
 8031d68:	e7e7      	b.n	8031d3a <__ieee754_atan2f+0x26>
 8031d6a:	b939      	cbnz	r1, 8031d7c <__ieee754_atan2f+0x68>
 8031d6c:	2800      	cmp	r0, #0
 8031d6e:	eddf 7a30 	vldr	s15, [pc, #192]	@ 8031e30 <__ieee754_atan2f+0x11c>
 8031d72:	ed9f 7a30 	vldr	s14, [pc, #192]	@ 8031e34 <__ieee754_atan2f+0x120>
 8031d76:	fe67 7a87 	vselge.f32	s15, s15, s14
 8031d7a:	e7de      	b.n	8031d3a <__ieee754_atan2f+0x26>
 8031d7c:	f1b1 4fff 	cmp.w	r1, #2139095040	@ 0x7f800000
 8031d80:	d110      	bne.n	8031da4 <__ieee754_atan2f+0x90>
 8031d82:	f1b3 4fff 	cmp.w	r3, #2139095040	@ 0x7f800000
 8031d86:	f104 34ff 	add.w	r4, r4, #4294967295
 8031d8a:	d107      	bne.n	8031d9c <__ieee754_atan2f+0x88>
 8031d8c:	2c02      	cmp	r4, #2
 8031d8e:	d846      	bhi.n	8031e1e <__ieee754_atan2f+0x10a>
 8031d90:	4b29      	ldr	r3, [pc, #164]	@ (8031e38 <__ieee754_atan2f+0x124>)
 8031d92:	eb03 0384 	add.w	r3, r3, r4, lsl #2
 8031d96:	edd3 7a00 	vldr	s15, [r3]
 8031d9a:	e7ce      	b.n	8031d3a <__ieee754_atan2f+0x26>
 8031d9c:	2c02      	cmp	r4, #2
 8031d9e:	d841      	bhi.n	8031e24 <__ieee754_atan2f+0x110>
 8031da0:	4b26      	ldr	r3, [pc, #152]	@ (8031e3c <__ieee754_atan2f+0x128>)
 8031da2:	e7f6      	b.n	8031d92 <__ieee754_atan2f+0x7e>
 8031da4:	f1b3 4fff 	cmp.w	r3, #2139095040	@ 0x7f800000
 8031da8:	d0e0      	beq.n	8031d6c <__ieee754_atan2f+0x58>
 8031daa:	1a5b      	subs	r3, r3, r1
 8031dac:	f1b3 5ff4 	cmp.w	r3, #511705088	@ 0x1e800000
 8031db0:	ea4f 51e3 	mov.w	r1, r3, asr #23
 8031db4:	da1a      	bge.n	8031dec <__ieee754_atan2f+0xd8>
 8031db6:	2a00      	cmp	r2, #0
 8031db8:	da01      	bge.n	8031dbe <__ieee754_atan2f+0xaa>
 8031dba:	313c      	adds	r1, #60	@ 0x3c
 8031dbc:	db19      	blt.n	8031df2 <__ieee754_atan2f+0xde>
 8031dbe:	ee87 0aa0 	vdiv.f32	s0, s15, s1
 8031dc2:	f7ff fcab 	bl	803171c <fabsf>
 8031dc6:	f7ff fb91 	bl	80314ec <atanf>
 8031dca:	eef0 7a40 	vmov.f32	s15, s0
 8031dce:	2c01      	cmp	r4, #1
 8031dd0:	d012      	beq.n	8031df8 <__ieee754_atan2f+0xe4>
 8031dd2:	2c02      	cmp	r4, #2
 8031dd4:	d017      	beq.n	8031e06 <__ieee754_atan2f+0xf2>
 8031dd6:	2c00      	cmp	r4, #0
 8031dd8:	d0af      	beq.n	8031d3a <__ieee754_atan2f+0x26>
 8031dda:	ed9f 7a19 	vldr	s14, [pc, #100]	@ 8031e40 <__ieee754_atan2f+0x12c>
 8031dde:	ee77 7a87 	vadd.f32	s15, s15, s14
 8031de2:	ed9f 7a18 	vldr	s14, [pc, #96]	@ 8031e44 <__ieee754_atan2f+0x130>
 8031de6:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8031dea:	e7a6      	b.n	8031d3a <__ieee754_atan2f+0x26>
 8031dec:	eddf 7a10 	vldr	s15, [pc, #64]	@ 8031e30 <__ieee754_atan2f+0x11c>
 8031df0:	e7ed      	b.n	8031dce <__ieee754_atan2f+0xba>
 8031df2:	eddf 7a15 	vldr	s15, [pc, #84]	@ 8031e48 <__ieee754_atan2f+0x134>
 8031df6:	e7ea      	b.n	8031dce <__ieee754_atan2f+0xba>
 8031df8:	ee17 3a90 	vmov	r3, s15
 8031dfc:	f103 4300 	add.w	r3, r3, #2147483648	@ 0x80000000
 8031e00:	ee07 3a90 	vmov	s15, r3
 8031e04:	e799      	b.n	8031d3a <__ieee754_atan2f+0x26>
 8031e06:	ed9f 7a0e 	vldr	s14, [pc, #56]	@ 8031e40 <__ieee754_atan2f+0x12c>
 8031e0a:	ee77 7a87 	vadd.f32	s15, s15, s14
 8031e0e:	ed9f 7a0d 	vldr	s14, [pc, #52]	@ 8031e44 <__ieee754_atan2f+0x130>
 8031e12:	ee77 7a67 	vsub.f32	s15, s14, s15
 8031e16:	e790      	b.n	8031d3a <__ieee754_atan2f+0x26>
 8031e18:	eddf 7a0a 	vldr	s15, [pc, #40]	@ 8031e44 <__ieee754_atan2f+0x130>
 8031e1c:	e78d      	b.n	8031d3a <__ieee754_atan2f+0x26>
 8031e1e:	eddf 7a0b 	vldr	s15, [pc, #44]	@ 8031e4c <__ieee754_atan2f+0x138>
 8031e22:	e78a      	b.n	8031d3a <__ieee754_atan2f+0x26>
 8031e24:	eddf 7a08 	vldr	s15, [pc, #32]	@ 8031e48 <__ieee754_atan2f+0x134>
 8031e28:	e787      	b.n	8031d3a <__ieee754_atan2f+0x26>
 8031e2a:	bf00      	nop
 8031e2c:	c0490fdb 	.word	0xc0490fdb
 8031e30:	3fc90fdb 	.word	0x3fc90fdb
 8031e34:	bfc90fdb 	.word	0xbfc90fdb
 8031e38:	08038520 	.word	0x08038520
 8031e3c:	08038514 	.word	0x08038514
 8031e40:	33bbbd2e 	.word	0x33bbbd2e
 8031e44:	40490fdb 	.word	0x40490fdb
 8031e48:	00000000 	.word	0x00000000
 8031e4c:	3f490fdb 	.word	0x3f490fdb

08031e50 <__ieee754_fmodf>:
 8031e50:	b5f0      	push	{r4, r5, r6, r7, lr}
 8031e52:	ee10 5a90 	vmov	r5, s1
 8031e56:	f025 4000 	bic.w	r0, r5, #2147483648	@ 0x80000000
 8031e5a:	1e43      	subs	r3, r0, #1
 8031e5c:	f1b3 4fff 	cmp.w	r3, #2139095040	@ 0x7f800000
 8031e60:	d206      	bcs.n	8031e70 <__ieee754_fmodf+0x20>
 8031e62:	ee10 3a10 	vmov	r3, s0
 8031e66:	f023 4600 	bic.w	r6, r3, #2147483648	@ 0x80000000
 8031e6a:	f1b6 4fff 	cmp.w	r6, #2139095040	@ 0x7f800000
 8031e6e:	d304      	bcc.n	8031e7a <__ieee754_fmodf+0x2a>
 8031e70:	ee60 0a20 	vmul.f32	s1, s0, s1
 8031e74:	ee80 0aa0 	vdiv.f32	s0, s1, s1
 8031e78:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8031e7a:	4286      	cmp	r6, r0
 8031e7c:	dbfc      	blt.n	8031e78 <__ieee754_fmodf+0x28>
 8031e7e:	f003 4400 	and.w	r4, r3, #2147483648	@ 0x80000000
 8031e82:	d105      	bne.n	8031e90 <__ieee754_fmodf+0x40>
 8031e84:	4b33      	ldr	r3, [pc, #204]	@ (8031f54 <__ieee754_fmodf+0x104>)
 8031e86:	eb03 7354 	add.w	r3, r3, r4, lsr #29
 8031e8a:	ed93 0a00 	vldr	s0, [r3]
 8031e8e:	e7f3      	b.n	8031e78 <__ieee754_fmodf+0x28>
 8031e90:	f013 4fff 	tst.w	r3, #2139095040	@ 0x7f800000
 8031e94:	d141      	bne.n	8031f1a <__ieee754_fmodf+0xca>
 8031e96:	0232      	lsls	r2, r6, #8
 8031e98:	f06f 017d 	mvn.w	r1, #125	@ 0x7d
 8031e9c:	2a00      	cmp	r2, #0
 8031e9e:	dc39      	bgt.n	8031f14 <__ieee754_fmodf+0xc4>
 8031ea0:	f015 4fff 	tst.w	r5, #2139095040	@ 0x7f800000
 8031ea4:	d13f      	bne.n	8031f26 <__ieee754_fmodf+0xd6>
 8031ea6:	0207      	lsls	r7, r0, #8
 8031ea8:	f06f 027d 	mvn.w	r2, #125	@ 0x7d
 8031eac:	2f00      	cmp	r7, #0
 8031eae:	da37      	bge.n	8031f20 <__ieee754_fmodf+0xd0>
 8031eb0:	f111 0f7e 	cmn.w	r1, #126	@ 0x7e
 8031eb4:	bfb5      	itete	lt
 8031eb6:	f06f 037d 	mvnlt.w	r3, #125	@ 0x7d
 8031eba:	f3c3 0316 	ubfxge	r3, r3, #0, #23
 8031ebe:	1a5b      	sublt	r3, r3, r1
 8031ec0:	f443 0300 	orrge.w	r3, r3, #8388608	@ 0x800000
 8031ec4:	eba1 0102 	sub.w	r1, r1, r2
 8031ec8:	bfb8      	it	lt
 8031eca:	fa06 f303 	lsllt.w	r3, r6, r3
 8031ece:	f112 0f7e 	cmn.w	r2, #126	@ 0x7e
 8031ed2:	bfb5      	itete	lt
 8031ed4:	f06f 057d 	mvnlt.w	r5, #125	@ 0x7d
 8031ed8:	f3c5 0516 	ubfxge	r5, r5, #0, #23
 8031edc:	1aad      	sublt	r5, r5, r2
 8031ede:	f445 0000 	orrge.w	r0, r5, #8388608	@ 0x800000
 8031ee2:	bfb8      	it	lt
 8031ee4:	40a8      	lsllt	r0, r5
 8031ee6:	1a1d      	subs	r5, r3, r0
 8031ee8:	bb01      	cbnz	r1, 8031f2c <__ieee754_fmodf+0xdc>
 8031eea:	ea13 0325 	ands.w	r3, r3, r5, asr #32
 8031eee:	bf38      	it	cc
 8031ef0:	462b      	movcc	r3, r5
 8031ef2:	2b00      	cmp	r3, #0
 8031ef4:	d0c6      	beq.n	8031e84 <__ieee754_fmodf+0x34>
 8031ef6:	f5b3 0f00 	cmp.w	r3, #8388608	@ 0x800000
 8031efa:	db1f      	blt.n	8031f3c <__ieee754_fmodf+0xec>
 8031efc:	f112 0f7e 	cmn.w	r2, #126	@ 0x7e
 8031f00:	db1f      	blt.n	8031f42 <__ieee754_fmodf+0xf2>
 8031f02:	f5a3 0300 	sub.w	r3, r3, #8388608	@ 0x800000
 8031f06:	327f      	adds	r2, #127	@ 0x7f
 8031f08:	4323      	orrs	r3, r4
 8031f0a:	ea43 53c2 	orr.w	r3, r3, r2, lsl #23
 8031f0e:	ee00 3a10 	vmov	s0, r3
 8031f12:	e7b1      	b.n	8031e78 <__ieee754_fmodf+0x28>
 8031f14:	3901      	subs	r1, #1
 8031f16:	0052      	lsls	r2, r2, #1
 8031f18:	e7c0      	b.n	8031e9c <__ieee754_fmodf+0x4c>
 8031f1a:	15f1      	asrs	r1, r6, #23
 8031f1c:	397f      	subs	r1, #127	@ 0x7f
 8031f1e:	e7bf      	b.n	8031ea0 <__ieee754_fmodf+0x50>
 8031f20:	3a01      	subs	r2, #1
 8031f22:	007f      	lsls	r7, r7, #1
 8031f24:	e7c2      	b.n	8031eac <__ieee754_fmodf+0x5c>
 8031f26:	15c2      	asrs	r2, r0, #23
 8031f28:	3a7f      	subs	r2, #127	@ 0x7f
 8031f2a:	e7c1      	b.n	8031eb0 <__ieee754_fmodf+0x60>
 8031f2c:	2d00      	cmp	r5, #0
 8031f2e:	da02      	bge.n	8031f36 <__ieee754_fmodf+0xe6>
 8031f30:	005b      	lsls	r3, r3, #1
 8031f32:	3901      	subs	r1, #1
 8031f34:	e7d7      	b.n	8031ee6 <__ieee754_fmodf+0x96>
 8031f36:	d0a5      	beq.n	8031e84 <__ieee754_fmodf+0x34>
 8031f38:	006b      	lsls	r3, r5, #1
 8031f3a:	e7fa      	b.n	8031f32 <__ieee754_fmodf+0xe2>
 8031f3c:	005b      	lsls	r3, r3, #1
 8031f3e:	3a01      	subs	r2, #1
 8031f40:	e7d9      	b.n	8031ef6 <__ieee754_fmodf+0xa6>
 8031f42:	f1c2 22ff 	rsb	r2, r2, #4278255360	@ 0xff00ff00
 8031f46:	f502 027f 	add.w	r2, r2, #16711680	@ 0xff0000
 8031f4a:	3282      	adds	r2, #130	@ 0x82
 8031f4c:	4113      	asrs	r3, r2
 8031f4e:	4323      	orrs	r3, r4
 8031f50:	e7dd      	b.n	8031f0e <__ieee754_fmodf+0xbe>
 8031f52:	bf00      	nop
 8031f54:	0803852c 	.word	0x0803852c

08031f58 <__ieee754_rem_pio2f>:
 8031f58:	b5f0      	push	{r4, r5, r6, r7, lr}
 8031f5a:	ee10 6a10 	vmov	r6, s0
 8031f5e:	4b87      	ldr	r3, [pc, #540]	@ (803217c <__ieee754_rem_pio2f+0x224>)
 8031f60:	b087      	sub	sp, #28
 8031f62:	4604      	mov	r4, r0
 8031f64:	f026 4500 	bic.w	r5, r6, #2147483648	@ 0x80000000
 8031f68:	429d      	cmp	r5, r3
 8031f6a:	d805      	bhi.n	8031f78 <__ieee754_rem_pio2f+0x20>
 8031f6c:	2300      	movs	r3, #0
 8031f6e:	ed80 0a00 	vstr	s0, [r0]
 8031f72:	6043      	str	r3, [r0, #4]
 8031f74:	2000      	movs	r0, #0
 8031f76:	e022      	b.n	8031fbe <__ieee754_rem_pio2f+0x66>
 8031f78:	4b81      	ldr	r3, [pc, #516]	@ (8032180 <__ieee754_rem_pio2f+0x228>)
 8031f7a:	429d      	cmp	r5, r3
 8031f7c:	d83a      	bhi.n	8031ff4 <__ieee754_rem_pio2f+0x9c>
 8031f7e:	f026 4300 	bic.w	r3, r6, #2147483648	@ 0x80000000
 8031f82:	2e00      	cmp	r6, #0
 8031f84:	ed9f 7a7f 	vldr	s14, [pc, #508]	@ 8032184 <__ieee754_rem_pio2f+0x22c>
 8031f88:	f023 030f 	bic.w	r3, r3, #15
 8031f8c:	4a7e      	ldr	r2, [pc, #504]	@ (8032188 <__ieee754_rem_pio2f+0x230>)
 8031f8e:	dd18      	ble.n	8031fc2 <__ieee754_rem_pio2f+0x6a>
 8031f90:	4293      	cmp	r3, r2
 8031f92:	ee70 7a47 	vsub.f32	s15, s0, s14
 8031f96:	bf09      	itett	eq
 8031f98:	ed9f 7a7c 	vldreq	s14, [pc, #496]	@ 803218c <__ieee754_rem_pio2f+0x234>
 8031f9c:	eddf 6a7c 	vldrne	s13, [pc, #496]	@ 8032190 <__ieee754_rem_pio2f+0x238>
 8031fa0:	ee77 7ac7 	vsubeq.f32	s15, s15, s14
 8031fa4:	eddf 6a7b 	vldreq	s13, [pc, #492]	@ 8032194 <__ieee754_rem_pio2f+0x23c>
 8031fa8:	ee37 7ae6 	vsub.f32	s14, s15, s13
 8031fac:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8031fb0:	ed80 7a00 	vstr	s14, [r0]
 8031fb4:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8031fb8:	edc0 7a01 	vstr	s15, [r0, #4]
 8031fbc:	2001      	movs	r0, #1
 8031fbe:	b007      	add	sp, #28
 8031fc0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8031fc2:	4293      	cmp	r3, r2
 8031fc4:	ee70 7a07 	vadd.f32	s15, s0, s14
 8031fc8:	bf09      	itett	eq
 8031fca:	ed9f 7a70 	vldreq	s14, [pc, #448]	@ 803218c <__ieee754_rem_pio2f+0x234>
 8031fce:	eddf 6a70 	vldrne	s13, [pc, #448]	@ 8032190 <__ieee754_rem_pio2f+0x238>
 8031fd2:	ee77 7a87 	vaddeq.f32	s15, s15, s14
 8031fd6:	eddf 6a6f 	vldreq	s13, [pc, #444]	@ 8032194 <__ieee754_rem_pio2f+0x23c>
 8031fda:	ee37 7aa6 	vadd.f32	s14, s15, s13
 8031fde:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8031fe2:	ed80 7a00 	vstr	s14, [r0]
 8031fe6:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8031fea:	edc0 7a01 	vstr	s15, [r0, #4]
 8031fee:	f04f 30ff 	mov.w	r0, #4294967295
 8031ff2:	e7e4      	b.n	8031fbe <__ieee754_rem_pio2f+0x66>
 8031ff4:	4b68      	ldr	r3, [pc, #416]	@ (8032198 <__ieee754_rem_pio2f+0x240>)
 8031ff6:	429d      	cmp	r5, r3
 8031ff8:	d872      	bhi.n	80320e0 <__ieee754_rem_pio2f+0x188>
 8031ffa:	f7ff fb8f 	bl	803171c <fabsf>
 8031ffe:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 8032002:	ed9f 7a66 	vldr	s14, [pc, #408]	@ 803219c <__ieee754_rem_pio2f+0x244>
 8032006:	eee0 7a07 	vfma.f32	s15, s0, s14
 803200a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 803200e:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8032012:	ee17 0a90 	vmov	r0, s15
 8032016:	eddf 7a5b 	vldr	s15, [pc, #364]	@ 8032184 <__ieee754_rem_pio2f+0x22c>
 803201a:	281f      	cmp	r0, #31
 803201c:	eea7 0a67 	vfms.f32	s0, s14, s15
 8032020:	eddf 7a5b 	vldr	s15, [pc, #364]	@ 8032190 <__ieee754_rem_pio2f+0x238>
 8032024:	eeb1 6a47 	vneg.f32	s12, s14
 8032028:	ee67 7a27 	vmul.f32	s15, s14, s15
 803202c:	ee70 6a67 	vsub.f32	s13, s0, s15
 8032030:	ee16 1a90 	vmov	r1, s13
 8032034:	dc09      	bgt.n	803204a <__ieee754_rem_pio2f+0xf2>
 8032036:	f026 4300 	bic.w	r3, r6, #2147483648	@ 0x80000000
 803203a:	1e47      	subs	r7, r0, #1
 803203c:	4a58      	ldr	r2, [pc, #352]	@ (80321a0 <__ieee754_rem_pio2f+0x248>)
 803203e:	f023 03ff 	bic.w	r3, r3, #255	@ 0xff
 8032042:	f852 2027 	ldr.w	r2, [r2, r7, lsl #2]
 8032046:	4293      	cmp	r3, r2
 8032048:	d106      	bne.n	8032058 <__ieee754_rem_pio2f+0x100>
 803204a:	f3c1 52c7 	ubfx	r2, r1, #23, #8
 803204e:	15eb      	asrs	r3, r5, #23
 8032050:	ebc2 52d5 	rsb	r2, r2, r5, lsr #23
 8032054:	2a08      	cmp	r2, #8
 8032056:	dc14      	bgt.n	8032082 <__ieee754_rem_pio2f+0x12a>
 8032058:	6021      	str	r1, [r4, #0]
 803205a:	ed94 7a00 	vldr	s14, [r4]
 803205e:	2e00      	cmp	r6, #0
 8032060:	ee30 0a47 	vsub.f32	s0, s0, s14
 8032064:	ee30 0a67 	vsub.f32	s0, s0, s15
 8032068:	ed84 0a01 	vstr	s0, [r4, #4]
 803206c:	daa7      	bge.n	8031fbe <__ieee754_rem_pio2f+0x66>
 803206e:	eeb1 7a47 	vneg.f32	s14, s14
 8032072:	eeb1 0a40 	vneg.f32	s0, s0
 8032076:	ed84 7a00 	vstr	s14, [r4]
 803207a:	ed84 0a01 	vstr	s0, [r4, #4]
 803207e:	4240      	negs	r0, r0
 8032080:	e79d      	b.n	8031fbe <__ieee754_rem_pio2f+0x66>
 8032082:	eef0 6a40 	vmov.f32	s13, s0
 8032086:	eddf 5a41 	vldr	s11, [pc, #260]	@ 803218c <__ieee754_rem_pio2f+0x234>
 803208a:	eee6 6a25 	vfma.f32	s13, s12, s11
 803208e:	ee70 7a66 	vsub.f32	s15, s0, s13
 8032092:	eee6 7a25 	vfma.f32	s15, s12, s11
 8032096:	eddf 5a3f 	vldr	s11, [pc, #252]	@ 8032194 <__ieee754_rem_pio2f+0x23c>
 803209a:	eed7 7a25 	vfnms.f32	s15, s14, s11
 803209e:	ee76 5ae7 	vsub.f32	s11, s13, s15
 80320a2:	ee15 2a90 	vmov	r2, s11
 80320a6:	f3c2 51c7 	ubfx	r1, r2, #23, #8
 80320aa:	1a5b      	subs	r3, r3, r1
 80320ac:	2b19      	cmp	r3, #25
 80320ae:	dc04      	bgt.n	80320ba <__ieee754_rem_pio2f+0x162>
 80320b0:	eeb0 0a66 	vmov.f32	s0, s13
 80320b4:	edc4 5a00 	vstr	s11, [r4]
 80320b8:	e7cf      	b.n	803205a <__ieee754_rem_pio2f+0x102>
 80320ba:	eeb0 0a66 	vmov.f32	s0, s13
 80320be:	eddf 5a39 	vldr	s11, [pc, #228]	@ 80321a4 <__ieee754_rem_pio2f+0x24c>
 80320c2:	eea6 0a25 	vfma.f32	s0, s12, s11
 80320c6:	ee76 7ac0 	vsub.f32	s15, s13, s0
 80320ca:	eddf 6a37 	vldr	s13, [pc, #220]	@ 80321a8 <__ieee754_rem_pio2f+0x250>
 80320ce:	eee6 7a25 	vfma.f32	s15, s12, s11
 80320d2:	eed7 7a26 	vfnms.f32	s15, s14, s13
 80320d6:	ee30 7a67 	vsub.f32	s14, s0, s15
 80320da:	ed84 7a00 	vstr	s14, [r4]
 80320de:	e7bc      	b.n	803205a <__ieee754_rem_pio2f+0x102>
 80320e0:	f1b5 4fff 	cmp.w	r5, #2139095040	@ 0x7f800000
 80320e4:	d306      	bcc.n	80320f4 <__ieee754_rem_pio2f+0x19c>
 80320e6:	ee70 7a40 	vsub.f32	s15, s0, s0
 80320ea:	edc0 7a01 	vstr	s15, [r0, #4]
 80320ee:	edc0 7a00 	vstr	s15, [r0]
 80320f2:	e73f      	b.n	8031f74 <__ieee754_rem_pio2f+0x1c>
 80320f4:	15ea      	asrs	r2, r5, #23
 80320f6:	eddf 6a2d 	vldr	s13, [pc, #180]	@ 80321ac <__ieee754_rem_pio2f+0x254>
 80320fa:	3a86      	subs	r2, #134	@ 0x86
 80320fc:	eba5 53c2 	sub.w	r3, r5, r2, lsl #23
 8032100:	ee07 3a90 	vmov	s15, r3
 8032104:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8032108:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 803210c:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8032110:	ed8d 7a03 	vstr	s14, [sp, #12]
 8032114:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8032118:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 803211c:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8032120:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8032124:	ed8d 7a04 	vstr	s14, [sp, #16]
 8032128:	ee67 7aa6 	vmul.f32	s15, s15, s13
 803212c:	eef5 7a40 	vcmp.f32	s15, #0.0
 8032130:	edcd 7a05 	vstr	s15, [sp, #20]
 8032134:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8032138:	d11e      	bne.n	8032178 <__ieee754_rem_pio2f+0x220>
 803213a:	eeb5 7a40 	vcmp.f32	s14, #0.0
 803213e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8032142:	bf0c      	ite	eq
 8032144:	2301      	moveq	r3, #1
 8032146:	2302      	movne	r3, #2
 8032148:	4919      	ldr	r1, [pc, #100]	@ (80321b0 <__ieee754_rem_pio2f+0x258>)
 803214a:	a803      	add	r0, sp, #12
 803214c:	9101      	str	r1, [sp, #4]
 803214e:	2102      	movs	r1, #2
 8032150:	9100      	str	r1, [sp, #0]
 8032152:	4621      	mov	r1, r4
 8032154:	f000 f82e 	bl	80321b4 <__kernel_rem_pio2f>
 8032158:	2e00      	cmp	r6, #0
 803215a:	f6bf af30 	bge.w	8031fbe <__ieee754_rem_pio2f+0x66>
 803215e:	edd4 7a00 	vldr	s15, [r4]
 8032162:	eef1 7a67 	vneg.f32	s15, s15
 8032166:	edc4 7a00 	vstr	s15, [r4]
 803216a:	edd4 7a01 	vldr	s15, [r4, #4]
 803216e:	eef1 7a67 	vneg.f32	s15, s15
 8032172:	edc4 7a01 	vstr	s15, [r4, #4]
 8032176:	e782      	b.n	803207e <__ieee754_rem_pio2f+0x126>
 8032178:	2303      	movs	r3, #3
 803217a:	e7e5      	b.n	8032148 <__ieee754_rem_pio2f+0x1f0>
 803217c:	3f490fd8 	.word	0x3f490fd8
 8032180:	4016cbe3 	.word	0x4016cbe3
 8032184:	3fc90f80 	.word	0x3fc90f80
 8032188:	3fc90fd0 	.word	0x3fc90fd0
 803218c:	37354400 	.word	0x37354400
 8032190:	37354443 	.word	0x37354443
 8032194:	2e85a308 	.word	0x2e85a308
 8032198:	43490f80 	.word	0x43490f80
 803219c:	3f22f984 	.word	0x3f22f984
 80321a0:	08038534 	.word	0x08038534
 80321a4:	2e85a300 	.word	0x2e85a300
 80321a8:	248d3132 	.word	0x248d3132
 80321ac:	43800000 	.word	0x43800000
 80321b0:	080385b4 	.word	0x080385b4

080321b4 <__kernel_rem_pio2f>:
 80321b4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80321b8:	4690      	mov	r8, r2
 80321ba:	4abc      	ldr	r2, [pc, #752]	@ (80324ac <__kernel_rem_pio2f+0x2f8>)
 80321bc:	460f      	mov	r7, r1
 80321be:	f103 3bff 	add.w	fp, r3, #4294967295
 80321c2:	f118 0f04 	cmn.w	r8, #4
 80321c6:	ed2d 8b04 	vpush	{d8-d9}
 80321ca:	b0d9      	sub	sp, #356	@ 0x164
 80321cc:	9001      	str	r0, [sp, #4]
 80321ce:	9866      	ldr	r0, [sp, #408]	@ 0x198
 80321d0:	f852 a020 	ldr.w	sl, [r2, r0, lsl #2]
 80321d4:	db27      	blt.n	8032226 <__kernel_rem_pio2f+0x72>
 80321d6:	f1b8 0203 	subs.w	r2, r8, #3
 80321da:	bf48      	it	mi
 80321dc:	f108 0204 	addmi.w	r2, r8, #4
 80321e0:	10d2      	asrs	r2, r2, #3
 80321e2:	1c55      	adds	r5, r2, #1
 80321e4:	eba2 060b 	sub.w	r6, r2, fp
 80321e8:	9967      	ldr	r1, [sp, #412]	@ 0x19c
 80321ea:	eb0a 0c0b 	add.w	ip, sl, fp
 80321ee:	00e8      	lsls	r0, r5, #3
 80321f0:	ac1c      	add	r4, sp, #112	@ 0x70
 80321f2:	eba8 05c5 	sub.w	r5, r8, r5, lsl #3
 80321f6:	ed9f 7ab1 	vldr	s14, [pc, #708]	@ 80324bc <__kernel_rem_pio2f+0x308>
 80321fa:	9002      	str	r0, [sp, #8]
 80321fc:	eb01 0e86 	add.w	lr, r1, r6, lsl #2
 8032200:	2000      	movs	r0, #0
 8032202:	4560      	cmp	r0, ip
 8032204:	dd11      	ble.n	803222a <__kernel_rem_pio2f+0x76>
 8032206:	a91c      	add	r1, sp, #112	@ 0x70
 8032208:	f50d 7988 	add.w	r9, sp, #272	@ 0x110
 803220c:	f04f 0c00 	mov.w	ip, #0
 8032210:	eb01 0083 	add.w	r0, r1, r3, lsl #2
 8032214:	45d4      	cmp	ip, sl
 8032216:	dc29      	bgt.n	803226c <__kernel_rem_pio2f+0xb8>
 8032218:	f8dd e004 	ldr.w	lr, [sp, #4]
 803221c:	4606      	mov	r6, r0
 803221e:	eddf 7aa7 	vldr	s15, [pc, #668]	@ 80324bc <__kernel_rem_pio2f+0x308>
 8032222:	2400      	movs	r4, #0
 8032224:	e018      	b.n	8032258 <__kernel_rem_pio2f+0xa4>
 8032226:	2200      	movs	r2, #0
 8032228:	e7db      	b.n	80321e2 <__kernel_rem_pio2f+0x2e>
 803222a:	42c6      	cmn	r6, r0
 803222c:	bf54      	ite	pl
 803222e:	f85e 1020 	ldrpl.w	r1, [lr, r0, lsl #2]
 8032232:	eef0 7a47 	vmovmi.f32	s15, s14
 8032236:	f100 0001 	add.w	r0, r0, #1
 803223a:	bf5c      	itt	pl
 803223c:	ee07 1a90 	vmovpl	s15, r1
 8032240:	eef8 7ae7 	vcvtpl.f32.s32	s15, s15
 8032244:	ece4 7a01 	vstmia	r4!, {s15}
 8032248:	e7db      	b.n	8032202 <__kernel_rem_pio2f+0x4e>
 803224a:	ecfe 6a01 	vldmia	lr!, {s13}
 803224e:	3401      	adds	r4, #1
 8032250:	ed96 7a00 	vldr	s14, [r6]
 8032254:	eee6 7a87 	vfma.f32	s15, s13, s14
 8032258:	455c      	cmp	r4, fp
 803225a:	f1a6 0604 	sub.w	r6, r6, #4
 803225e:	ddf4      	ble.n	803224a <__kernel_rem_pio2f+0x96>
 8032260:	f10c 0c01 	add.w	ip, ip, #1
 8032264:	3004      	adds	r0, #4
 8032266:	ece9 7a01 	vstmia	r9!, {s15}
 803226a:	e7d3      	b.n	8032214 <__kernel_rem_pio2f+0x60>
 803226c:	a908      	add	r1, sp, #32
 803226e:	4654      	mov	r4, sl
 8032270:	eddf 8a91 	vldr	s17, [pc, #580]	@ 80324b8 <__kernel_rem_pio2f+0x304>
 8032274:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 8032278:	ed9f 9a8e 	vldr	s18, [pc, #568]	@ 80324b4 <__kernel_rem_pio2f+0x300>
 803227c:	9104      	str	r1, [sp, #16]
 803227e:	9967      	ldr	r1, [sp, #412]	@ 0x19c
 8032280:	eb01 0282 	add.w	r2, r1, r2, lsl #2
 8032284:	9203      	str	r2, [sp, #12]
 8032286:	00a2      	lsls	r2, r4, #2
 8032288:	a944      	add	r1, sp, #272	@ 0x110
 803228a:	4626      	mov	r6, r4
 803228c:	9205      	str	r2, [sp, #20]
 803228e:	aa58      	add	r2, sp, #352	@ 0x160
 8032290:	eb01 0084 	add.w	r0, r1, r4, lsl #2
 8032294:	eb02 0284 	add.w	r2, r2, r4, lsl #2
 8032298:	ed12 0a14 	vldr	s0, [r2, #-80]	@ 0xffffffb0
 803229c:	aa08      	add	r2, sp, #32
 803229e:	4694      	mov	ip, r2
 80322a0:	2e00      	cmp	r6, #0
 80322a2:	f1a0 0004 	sub.w	r0, r0, #4
 80322a6:	dc4c      	bgt.n	8032342 <__kernel_rem_pio2f+0x18e>
 80322a8:	4628      	mov	r0, r5
 80322aa:	e9cd 2306 	strd	r2, r3, [sp, #24]
 80322ae:	f000 f9f5 	bl	803269c <scalbnf>
 80322b2:	eeb0 8a40 	vmov.f32	s16, s0
 80322b6:	eeb4 0a00 	vmov.f32	s0, #64	@ 0x3e000000  0.125
 80322ba:	ee28 0a00 	vmul.f32	s0, s16, s0
 80322be:	f000 fa51 	bl	8032764 <floorf>
 80322c2:	eef2 7a00 	vmov.f32	s15, #32	@ 0x41000000  8.0
 80322c6:	2d00      	cmp	r5, #0
 80322c8:	eea0 8a67 	vfms.f32	s16, s0, s15
 80322cc:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 80322d0:	eefd 7ac8 	vcvt.s32.f32	s15, s16
 80322d4:	ee17 9a90 	vmov	r9, s15
 80322d8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80322dc:	ee38 8a67 	vsub.f32	s16, s16, s15
 80322e0:	dd41      	ble.n	8032366 <__kernel_rem_pio2f+0x1b2>
 80322e2:	f104 3cff 	add.w	ip, r4, #4294967295
 80322e6:	a908      	add	r1, sp, #32
 80322e8:	f1c5 0e08 	rsb	lr, r5, #8
 80322ec:	f851 602c 	ldr.w	r6, [r1, ip, lsl #2]
 80322f0:	fa46 f00e 	asr.w	r0, r6, lr
 80322f4:	4481      	add	r9, r0
 80322f6:	fa00 f00e 	lsl.w	r0, r0, lr
 80322fa:	1a36      	subs	r6, r6, r0
 80322fc:	f1c5 0007 	rsb	r0, r5, #7
 8032300:	f841 602c 	str.w	r6, [r1, ip, lsl #2]
 8032304:	4106      	asrs	r6, r0
 8032306:	2e00      	cmp	r6, #0
 8032308:	dd3c      	ble.n	8032384 <__kernel_rem_pio2f+0x1d0>
 803230a:	f04f 0e00 	mov.w	lr, #0
 803230e:	f109 0901 	add.w	r9, r9, #1
 8032312:	4670      	mov	r0, lr
 8032314:	4574      	cmp	r4, lr
 8032316:	dc68      	bgt.n	80323ea <__kernel_rem_pio2f+0x236>
 8032318:	2d00      	cmp	r5, #0
 803231a:	dd03      	ble.n	8032324 <__kernel_rem_pio2f+0x170>
 803231c:	2d01      	cmp	r5, #1
 803231e:	d074      	beq.n	803240a <__kernel_rem_pio2f+0x256>
 8032320:	2d02      	cmp	r5, #2
 8032322:	d07d      	beq.n	8032420 <__kernel_rem_pio2f+0x26c>
 8032324:	2e02      	cmp	r6, #2
 8032326:	d12d      	bne.n	8032384 <__kernel_rem_pio2f+0x1d0>
 8032328:	eeb7 0a00 	vmov.f32	s0, #112	@ 0x3f800000  1.0
 803232c:	ee30 8a48 	vsub.f32	s16, s0, s16
 8032330:	b340      	cbz	r0, 8032384 <__kernel_rem_pio2f+0x1d0>
 8032332:	4628      	mov	r0, r5
 8032334:	9306      	str	r3, [sp, #24]
 8032336:	f000 f9b1 	bl	803269c <scalbnf>
 803233a:	9b06      	ldr	r3, [sp, #24]
 803233c:	ee38 8a40 	vsub.f32	s16, s16, s0
 8032340:	e020      	b.n	8032384 <__kernel_rem_pio2f+0x1d0>
 8032342:	ee60 7a28 	vmul.f32	s15, s0, s17
 8032346:	3e01      	subs	r6, #1
 8032348:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 803234c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8032350:	eea7 0ac9 	vfms.f32	s0, s15, s18
 8032354:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 8032358:	ecac 0a01 	vstmia	ip!, {s0}
 803235c:	ed90 0a00 	vldr	s0, [r0]
 8032360:	ee37 0a80 	vadd.f32	s0, s15, s0
 8032364:	e79c      	b.n	80322a0 <__kernel_rem_pio2f+0xec>
 8032366:	d105      	bne.n	8032374 <__kernel_rem_pio2f+0x1c0>
 8032368:	1e60      	subs	r0, r4, #1
 803236a:	a908      	add	r1, sp, #32
 803236c:	f851 6020 	ldr.w	r6, [r1, r0, lsl #2]
 8032370:	11f6      	asrs	r6, r6, #7
 8032372:	e7c8      	b.n	8032306 <__kernel_rem_pio2f+0x152>
 8032374:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 8032378:	eeb4 8ae7 	vcmpe.f32	s16, s15
 803237c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8032380:	da31      	bge.n	80323e6 <__kernel_rem_pio2f+0x232>
 8032382:	2600      	movs	r6, #0
 8032384:	eeb5 8a40 	vcmp.f32	s16, #0.0
 8032388:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 803238c:	f040 8098 	bne.w	80324c0 <__kernel_rem_pio2f+0x30c>
 8032390:	1e60      	subs	r0, r4, #1
 8032392:	2200      	movs	r2, #0
 8032394:	4550      	cmp	r0, sl
 8032396:	da4b      	bge.n	8032430 <__kernel_rem_pio2f+0x27c>
 8032398:	2a00      	cmp	r2, #0
 803239a:	d065      	beq.n	8032468 <__kernel_rem_pio2f+0x2b4>
 803239c:	3c01      	subs	r4, #1
 803239e:	ab08      	add	r3, sp, #32
 80323a0:	3d08      	subs	r5, #8
 80323a2:	f853 3024 	ldr.w	r3, [r3, r4, lsl #2]
 80323a6:	2b00      	cmp	r3, #0
 80323a8:	d0f8      	beq.n	803239c <__kernel_rem_pio2f+0x1e8>
 80323aa:	eeb7 0a00 	vmov.f32	s0, #112	@ 0x3f800000  1.0
 80323ae:	4628      	mov	r0, r5
 80323b0:	f000 f974 	bl	803269c <scalbnf>
 80323b4:	1c63      	adds	r3, r4, #1
 80323b6:	aa44      	add	r2, sp, #272	@ 0x110
 80323b8:	ed9f 7a3f 	vldr	s14, [pc, #252]	@ 80324b8 <__kernel_rem_pio2f+0x304>
 80323bc:	0099      	lsls	r1, r3, #2
 80323be:	eb02 0283 	add.w	r2, r2, r3, lsl #2
 80323c2:	4623      	mov	r3, r4
 80323c4:	2b00      	cmp	r3, #0
 80323c6:	f280 80a9 	bge.w	803251c <__kernel_rem_pio2f+0x368>
 80323ca:	4623      	mov	r3, r4
 80323cc:	2b00      	cmp	r3, #0
 80323ce:	f2c0 80c7 	blt.w	8032560 <__kernel_rem_pio2f+0x3ac>
 80323d2:	aa44      	add	r2, sp, #272	@ 0x110
 80323d4:	f8df c0d8 	ldr.w	ip, [pc, #216]	@ 80324b0 <__kernel_rem_pio2f+0x2fc>
 80323d8:	eddf 7a38 	vldr	s15, [pc, #224]	@ 80324bc <__kernel_rem_pio2f+0x308>
 80323dc:	2000      	movs	r0, #0
 80323de:	eb02 0583 	add.w	r5, r2, r3, lsl #2
 80323e2:	1ae2      	subs	r2, r4, r3
 80323e4:	e0b1      	b.n	803254a <__kernel_rem_pio2f+0x396>
 80323e6:	2602      	movs	r6, #2
 80323e8:	e78f      	b.n	803230a <__kernel_rem_pio2f+0x156>
 80323ea:	f852 1b04 	ldr.w	r1, [r2], #4
 80323ee:	b948      	cbnz	r0, 8032404 <__kernel_rem_pio2f+0x250>
 80323f0:	b121      	cbz	r1, 80323fc <__kernel_rem_pio2f+0x248>
 80323f2:	f5c1 7180 	rsb	r1, r1, #256	@ 0x100
 80323f6:	f842 1c04 	str.w	r1, [r2, #-4]
 80323fa:	2101      	movs	r1, #1
 80323fc:	f10e 0e01 	add.w	lr, lr, #1
 8032400:	4608      	mov	r0, r1
 8032402:	e787      	b.n	8032314 <__kernel_rem_pio2f+0x160>
 8032404:	f1c1 01ff 	rsb	r1, r1, #255	@ 0xff
 8032408:	e7f5      	b.n	80323f6 <__kernel_rem_pio2f+0x242>
 803240a:	f104 3cff 	add.w	ip, r4, #4294967295
 803240e:	aa08      	add	r2, sp, #32
 8032410:	f852 202c 	ldr.w	r2, [r2, ip, lsl #2]
 8032414:	f002 027f 	and.w	r2, r2, #127	@ 0x7f
 8032418:	a908      	add	r1, sp, #32
 803241a:	f841 202c 	str.w	r2, [r1, ip, lsl #2]
 803241e:	e781      	b.n	8032324 <__kernel_rem_pio2f+0x170>
 8032420:	f104 3cff 	add.w	ip, r4, #4294967295
 8032424:	aa08      	add	r2, sp, #32
 8032426:	f852 202c 	ldr.w	r2, [r2, ip, lsl #2]
 803242a:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 803242e:	e7f3      	b.n	8032418 <__kernel_rem_pio2f+0x264>
 8032430:	a908      	add	r1, sp, #32
 8032432:	f851 1020 	ldr.w	r1, [r1, r0, lsl #2]
 8032436:	3801      	subs	r0, #1
 8032438:	430a      	orrs	r2, r1
 803243a:	e7ab      	b.n	8032394 <__kernel_rem_pio2f+0x1e0>
 803243c:	3201      	adds	r2, #1
 803243e:	f850 6d04 	ldr.w	r6, [r0, #-4]!
 8032442:	2e00      	cmp	r6, #0
 8032444:	d0fa      	beq.n	803243c <__kernel_rem_pio2f+0x288>
 8032446:	9905      	ldr	r1, [sp, #20]
 8032448:	18e6      	adds	r6, r4, r3
 803244a:	f104 0c01 	add.w	ip, r4, #1
 803244e:	4422      	add	r2, r4
 8032450:	f501 71b0 	add.w	r1, r1, #352	@ 0x160
 8032454:	eb0d 0001 	add.w	r0, sp, r1
 8032458:	a91c      	add	r1, sp, #112	@ 0x70
 803245a:	384c      	subs	r0, #76	@ 0x4c
 803245c:	eb01 0686 	add.w	r6, r1, r6, lsl #2
 8032460:	4562      	cmp	r2, ip
 8032462:	da04      	bge.n	803246e <__kernel_rem_pio2f+0x2ba>
 8032464:	4614      	mov	r4, r2
 8032466:	e70e      	b.n	8032286 <__kernel_rem_pio2f+0xd2>
 8032468:	9804      	ldr	r0, [sp, #16]
 803246a:	2201      	movs	r2, #1
 803246c:	e7e7      	b.n	803243e <__kernel_rem_pio2f+0x28a>
 803246e:	9903      	ldr	r1, [sp, #12]
 8032470:	2400      	movs	r4, #0
 8032472:	f8dd e004 	ldr.w	lr, [sp, #4]
 8032476:	f851 102c 	ldr.w	r1, [r1, ip, lsl #2]
 803247a:	ee07 1a90 	vmov	s15, r1
 803247e:	9105      	str	r1, [sp, #20]
 8032480:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8032484:	ece6 7a01 	vstmia	r6!, {s15}
 8032488:	46b1      	mov	r9, r6
 803248a:	eddf 7a0c 	vldr	s15, [pc, #48]	@ 80324bc <__kernel_rem_pio2f+0x308>
 803248e:	455c      	cmp	r4, fp
 8032490:	dd04      	ble.n	803249c <__kernel_rem_pio2f+0x2e8>
 8032492:	f10c 0c01 	add.w	ip, ip, #1
 8032496:	ece0 7a01 	vstmia	r0!, {s15}
 803249a:	e7e1      	b.n	8032460 <__kernel_rem_pio2f+0x2ac>
 803249c:	ecfe 6a01 	vldmia	lr!, {s13}
 80324a0:	3401      	adds	r4, #1
 80324a2:	ed39 7a01 	vldmdb	r9!, {s14}
 80324a6:	eee6 7a87 	vfma.f32	s15, s13, s14
 80324aa:	e7f0      	b.n	803248e <__kernel_rem_pio2f+0x2da>
 80324ac:	080388f8 	.word	0x080388f8
 80324b0:	080388cc 	.word	0x080388cc
 80324b4:	43800000 	.word	0x43800000
 80324b8:	3b800000 	.word	0x3b800000
 80324bc:	00000000 	.word	0x00000000
 80324c0:	9b02      	ldr	r3, [sp, #8]
 80324c2:	eeb0 0a48 	vmov.f32	s0, s16
 80324c6:	eba3 0008 	sub.w	r0, r3, r8
 80324ca:	f000 f8e7 	bl	803269c <scalbnf>
 80324ce:	ed1f 7a07 	vldr	s14, [pc, #-28]	@ 80324b4 <__kernel_rem_pio2f+0x300>
 80324d2:	eeb4 0ac7 	vcmpe.f32	s0, s14
 80324d6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80324da:	db19      	blt.n	8032510 <__kernel_rem_pio2f+0x35c>
 80324dc:	ed5f 7a0a 	vldr	s15, [pc, #-40]	@ 80324b8 <__kernel_rem_pio2f+0x304>
 80324e0:	aa08      	add	r2, sp, #32
 80324e2:	3508      	adds	r5, #8
 80324e4:	ee60 7a27 	vmul.f32	s15, s0, s15
 80324e8:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80324ec:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80324f0:	eea7 0ac7 	vfms.f32	s0, s15, s14
 80324f4:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80324f8:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 80324fc:	ee10 3a10 	vmov	r3, s0
 8032500:	f842 3024 	str.w	r3, [r2, r4, lsl #2]
 8032504:	3401      	adds	r4, #1
 8032506:	ee17 3a90 	vmov	r3, s15
 803250a:	f842 3024 	str.w	r3, [r2, r4, lsl #2]
 803250e:	e74c      	b.n	80323aa <__kernel_rem_pio2f+0x1f6>
 8032510:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 8032514:	aa08      	add	r2, sp, #32
 8032516:	ee10 3a10 	vmov	r3, s0
 803251a:	e7f6      	b.n	803250a <__kernel_rem_pio2f+0x356>
 803251c:	a808      	add	r0, sp, #32
 803251e:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
 8032522:	3b01      	subs	r3, #1
 8032524:	ee07 0a90 	vmov	s15, r0
 8032528:	9001      	str	r0, [sp, #4]
 803252a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 803252e:	ee67 7a80 	vmul.f32	s15, s15, s0
 8032532:	ee20 0a07 	vmul.f32	s0, s0, s14
 8032536:	ed62 7a01 	vstmdb	r2!, {s15}
 803253a:	e743      	b.n	80323c4 <__kernel_rem_pio2f+0x210>
 803253c:	ecfc 6a01 	vldmia	ip!, {s13}
 8032540:	3001      	adds	r0, #1
 8032542:	ecb5 7a01 	vldmia	r5!, {s14}
 8032546:	eee6 7a87 	vfma.f32	s15, s13, s14
 803254a:	4550      	cmp	r0, sl
 803254c:	dc01      	bgt.n	8032552 <__kernel_rem_pio2f+0x39e>
 803254e:	4282      	cmp	r2, r0
 8032550:	daf4      	bge.n	803253c <__kernel_rem_pio2f+0x388>
 8032552:	a858      	add	r0, sp, #352	@ 0x160
 8032554:	3b01      	subs	r3, #1
 8032556:	eb00 0282 	add.w	r2, r0, r2, lsl #2
 803255a:	ed42 7a28 	vstr	s15, [r2, #-160]	@ 0xffffff60
 803255e:	e735      	b.n	80323cc <__kernel_rem_pio2f+0x218>
 8032560:	9b66      	ldr	r3, [sp, #408]	@ 0x198
 8032562:	2b02      	cmp	r3, #2
 8032564:	dc09      	bgt.n	803257a <__kernel_rem_pio2f+0x3c6>
 8032566:	2b00      	cmp	r3, #0
 8032568:	dc2b      	bgt.n	80325c2 <__kernel_rem_pio2f+0x40e>
 803256a:	d044      	beq.n	80325f6 <__kernel_rem_pio2f+0x442>
 803256c:	f009 0007 	and.w	r0, r9, #7
 8032570:	b059      	add	sp, #356	@ 0x164
 8032572:	ecbd 8b04 	vpop	{d8-d9}
 8032576:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 803257a:	9b66      	ldr	r3, [sp, #408]	@ 0x198
 803257c:	2b03      	cmp	r3, #3
 803257e:	d1f5      	bne.n	803256c <__kernel_rem_pio2f+0x3b8>
 8032580:	aa30      	add	r2, sp, #192	@ 0xc0
 8032582:	1f0b      	subs	r3, r1, #4
 8032584:	4620      	mov	r0, r4
 8032586:	4413      	add	r3, r2
 8032588:	461a      	mov	r2, r3
 803258a:	2800      	cmp	r0, #0
 803258c:	f1a2 0204 	sub.w	r2, r2, #4
 8032590:	dc52      	bgt.n	8032638 <__kernel_rem_pio2f+0x484>
 8032592:	4622      	mov	r2, r4
 8032594:	2a01      	cmp	r2, #1
 8032596:	f1a3 0304 	sub.w	r3, r3, #4
 803259a:	dc5d      	bgt.n	8032658 <__kernel_rem_pio2f+0x4a4>
 803259c:	ab30      	add	r3, sp, #192	@ 0xc0
 803259e:	ed5f 7a39 	vldr	s15, [pc, #-228]	@ 80324bc <__kernel_rem_pio2f+0x308>
 80325a2:	440b      	add	r3, r1
 80325a4:	2c01      	cmp	r4, #1
 80325a6:	dc67      	bgt.n	8032678 <__kernel_rem_pio2f+0x4c4>
 80325a8:	eddd 6a30 	vldr	s13, [sp, #192]	@ 0xc0
 80325ac:	ed9d 7a31 	vldr	s14, [sp, #196]	@ 0xc4
 80325b0:	2e00      	cmp	r6, #0
 80325b2:	d167      	bne.n	8032684 <__kernel_rem_pio2f+0x4d0>
 80325b4:	edc7 6a00 	vstr	s13, [r7]
 80325b8:	ed87 7a01 	vstr	s14, [r7, #4]
 80325bc:	edc7 7a02 	vstr	s15, [r7, #8]
 80325c0:	e7d4      	b.n	803256c <__kernel_rem_pio2f+0x3b8>
 80325c2:	ab30      	add	r3, sp, #192	@ 0xc0
 80325c4:	4622      	mov	r2, r4
 80325c6:	ed1f 7a43 	vldr	s14, [pc, #-268]	@ 80324bc <__kernel_rem_pio2f+0x308>
 80325ca:	440b      	add	r3, r1
 80325cc:	2a00      	cmp	r2, #0
 80325ce:	da24      	bge.n	803261a <__kernel_rem_pio2f+0x466>
 80325d0:	b34e      	cbz	r6, 8032626 <__kernel_rem_pio2f+0x472>
 80325d2:	eef1 7a47 	vneg.f32	s15, s14
 80325d6:	edc7 7a00 	vstr	s15, [r7]
 80325da:	aa31      	add	r2, sp, #196	@ 0xc4
 80325dc:	eddd 7a30 	vldr	s15, [sp, #192]	@ 0xc0
 80325e0:	2301      	movs	r3, #1
 80325e2:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80325e6:	429c      	cmp	r4, r3
 80325e8:	da20      	bge.n	803262c <__kernel_rem_pio2f+0x478>
 80325ea:	b10e      	cbz	r6, 80325f0 <__kernel_rem_pio2f+0x43c>
 80325ec:	eef1 7a67 	vneg.f32	s15, s15
 80325f0:	edc7 7a01 	vstr	s15, [r7, #4]
 80325f4:	e7ba      	b.n	803256c <__kernel_rem_pio2f+0x3b8>
 80325f6:	ab30      	add	r3, sp, #192	@ 0xc0
 80325f8:	ed5f 7a50 	vldr	s15, [pc, #-320]	@ 80324bc <__kernel_rem_pio2f+0x308>
 80325fc:	440b      	add	r3, r1
 80325fe:	2c00      	cmp	r4, #0
 8032600:	da05      	bge.n	803260e <__kernel_rem_pio2f+0x45a>
 8032602:	b10e      	cbz	r6, 8032608 <__kernel_rem_pio2f+0x454>
 8032604:	eef1 7a67 	vneg.f32	s15, s15
 8032608:	edc7 7a00 	vstr	s15, [r7]
 803260c:	e7ae      	b.n	803256c <__kernel_rem_pio2f+0x3b8>
 803260e:	ed33 7a01 	vldmdb	r3!, {s14}
 8032612:	3c01      	subs	r4, #1
 8032614:	ee77 7a87 	vadd.f32	s15, s15, s14
 8032618:	e7f1      	b.n	80325fe <__kernel_rem_pio2f+0x44a>
 803261a:	ed73 7a01 	vldmdb	r3!, {s15}
 803261e:	3a01      	subs	r2, #1
 8032620:	ee37 7a27 	vadd.f32	s14, s14, s15
 8032624:	e7d2      	b.n	80325cc <__kernel_rem_pio2f+0x418>
 8032626:	eef0 7a47 	vmov.f32	s15, s14
 803262a:	e7d4      	b.n	80325d6 <__kernel_rem_pio2f+0x422>
 803262c:	ecb2 7a01 	vldmia	r2!, {s14}
 8032630:	3301      	adds	r3, #1
 8032632:	ee77 7a87 	vadd.f32	s15, s15, s14
 8032636:	e7d6      	b.n	80325e6 <__kernel_rem_pio2f+0x432>
 8032638:	edd2 7a00 	vldr	s15, [r2]
 803263c:	3801      	subs	r0, #1
 803263e:	edd2 6a01 	vldr	s13, [r2, #4]
 8032642:	ee37 7aa6 	vadd.f32	s14, s15, s13
 8032646:	ee77 7ac7 	vsub.f32	s15, s15, s14
 803264a:	ed82 7a00 	vstr	s14, [r2]
 803264e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8032652:	edc2 7a01 	vstr	s15, [r2, #4]
 8032656:	e798      	b.n	803258a <__kernel_rem_pio2f+0x3d6>
 8032658:	edd3 7a00 	vldr	s15, [r3]
 803265c:	3a01      	subs	r2, #1
 803265e:	edd3 6a01 	vldr	s13, [r3, #4]
 8032662:	ee37 7aa6 	vadd.f32	s14, s15, s13
 8032666:	ee77 7ac7 	vsub.f32	s15, s15, s14
 803266a:	ed83 7a00 	vstr	s14, [r3]
 803266e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8032672:	edc3 7a01 	vstr	s15, [r3, #4]
 8032676:	e78d      	b.n	8032594 <__kernel_rem_pio2f+0x3e0>
 8032678:	ed33 7a01 	vldmdb	r3!, {s14}
 803267c:	3c01      	subs	r4, #1
 803267e:	ee77 7a87 	vadd.f32	s15, s15, s14
 8032682:	e78f      	b.n	80325a4 <__kernel_rem_pio2f+0x3f0>
 8032684:	eef1 6a66 	vneg.f32	s13, s13
 8032688:	eeb1 7a47 	vneg.f32	s14, s14
 803268c:	eef1 7a67 	vneg.f32	s15, s15
 8032690:	edc7 6a00 	vstr	s13, [r7]
 8032694:	ed87 7a01 	vstr	s14, [r7, #4]
 8032698:	e790      	b.n	80325bc <__kernel_rem_pio2f+0x408>
 803269a:	bf00      	nop

0803269c <scalbnf>:
 803269c:	ee10 3a10 	vmov	r3, s0
 80326a0:	f033 4200 	bics.w	r2, r3, #2147483648	@ 0x80000000
 80326a4:	d02a      	beq.n	80326fc <scalbnf+0x60>
 80326a6:	f1b2 4fff 	cmp.w	r2, #2139095040	@ 0x7f800000
 80326aa:	d302      	bcc.n	80326b2 <scalbnf+0x16>
 80326ac:	ee30 0a00 	vadd.f32	s0, s0, s0
 80326b0:	4770      	bx	lr
 80326b2:	f013 4fff 	tst.w	r3, #2139095040	@ 0x7f800000
 80326b6:	d122      	bne.n	80326fe <scalbnf+0x62>
 80326b8:	4b23      	ldr	r3, [pc, #140]	@ (8032748 <scalbnf+0xac>)
 80326ba:	eddf 7a24 	vldr	s15, [pc, #144]	@ 803274c <scalbnf+0xb0>
 80326be:	4298      	cmp	r0, r3
 80326c0:	ee20 0a27 	vmul.f32	s0, s0, s15
 80326c4:	db16      	blt.n	80326f4 <scalbnf+0x58>
 80326c6:	ee10 3a10 	vmov	r3, s0
 80326ca:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 80326ce:	3a19      	subs	r2, #25
 80326d0:	f24c 3150 	movw	r1, #50000	@ 0xc350
 80326d4:	4288      	cmp	r0, r1
 80326d6:	dd14      	ble.n	8032702 <scalbnf+0x66>
 80326d8:	eddf 7a1d 	vldr	s15, [pc, #116]	@ 8032750 <scalbnf+0xb4>
 80326dc:	ee10 3a10 	vmov	r3, s0
 80326e0:	eddf 6a1c 	vldr	s13, [pc, #112]	@ 8032754 <scalbnf+0xb8>
 80326e4:	eeb0 7a67 	vmov.f32	s14, s15
 80326e8:	2b00      	cmp	r3, #0
 80326ea:	fe67 7aa6 	vselge.f32	s15, s15, s13
 80326ee:	ee27 0a87 	vmul.f32	s0, s15, s14
 80326f2:	4770      	bx	lr
 80326f4:	eddf 7a18 	vldr	s15, [pc, #96]	@ 8032758 <scalbnf+0xbc>
 80326f8:	ee27 0a80 	vmul.f32	s0, s15, s0
 80326fc:	4770      	bx	lr
 80326fe:	0dd2      	lsrs	r2, r2, #23
 8032700:	e7e6      	b.n	80326d0 <scalbnf+0x34>
 8032702:	4410      	add	r0, r2
 8032704:	28fe      	cmp	r0, #254	@ 0xfe
 8032706:	dce7      	bgt.n	80326d8 <scalbnf+0x3c>
 8032708:	2800      	cmp	r0, #0
 803270a:	dd06      	ble.n	803271a <scalbnf+0x7e>
 803270c:	f023 43ff 	bic.w	r3, r3, #2139095040	@ 0x7f800000
 8032710:	ea43 53c0 	orr.w	r3, r3, r0, lsl #23
 8032714:	ee00 3a10 	vmov	s0, r3
 8032718:	4770      	bx	lr
 803271a:	f110 0f16 	cmn.w	r0, #22
 803271e:	da09      	bge.n	8032734 <scalbnf+0x98>
 8032720:	eddf 7a0d 	vldr	s15, [pc, #52]	@ 8032758 <scalbnf+0xbc>
 8032724:	ee10 3a10 	vmov	r3, s0
 8032728:	eddf 6a0c 	vldr	s13, [pc, #48]	@ 803275c <scalbnf+0xc0>
 803272c:	eeb0 7a67 	vmov.f32	s14, s15
 8032730:	2b00      	cmp	r3, #0
 8032732:	e7da      	b.n	80326ea <scalbnf+0x4e>
 8032734:	3019      	adds	r0, #25
 8032736:	f023 43ff 	bic.w	r3, r3, #2139095040	@ 0x7f800000
 803273a:	ed9f 0a09 	vldr	s0, [pc, #36]	@ 8032760 <scalbnf+0xc4>
 803273e:	ea43 53c0 	orr.w	r3, r3, r0, lsl #23
 8032742:	ee07 3a90 	vmov	s15, r3
 8032746:	e7d7      	b.n	80326f8 <scalbnf+0x5c>
 8032748:	ffff3cb0 	.word	0xffff3cb0
 803274c:	4c000000 	.word	0x4c000000
 8032750:	7149f2ca 	.word	0x7149f2ca
 8032754:	f149f2ca 	.word	0xf149f2ca
 8032758:	0da24260 	.word	0x0da24260
 803275c:	8da24260 	.word	0x8da24260
 8032760:	33000000 	.word	0x33000000

08032764 <floorf>:
 8032764:	febb 0a40 	vrintm.f32	s0, s0
 8032768:	4770      	bx	lr

0803276a <abort>:
 803276a:	2006      	movs	r0, #6
 803276c:	b508      	push	{r3, lr}
 803276e:	f000 fa4d 	bl	8032c0c <raise>
 8032772:	2001      	movs	r0, #1
 8032774:	f7ce fba2 	bl	8000ebc <_exit>

08032778 <__assert_func>:
 8032778:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 803277a:	4614      	mov	r4, r2
 803277c:	461a      	mov	r2, r3
 803277e:	4b09      	ldr	r3, [pc, #36]	@ (80327a4 <__assert_func+0x2c>)
 8032780:	4605      	mov	r5, r0
 8032782:	681b      	ldr	r3, [r3, #0]
 8032784:	68d8      	ldr	r0, [r3, #12]
 8032786:	b954      	cbnz	r4, 803279e <__assert_func+0x26>
 8032788:	4b07      	ldr	r3, [pc, #28]	@ (80327a8 <__assert_func+0x30>)
 803278a:	461c      	mov	r4, r3
 803278c:	9100      	str	r1, [sp, #0]
 803278e:	4907      	ldr	r1, [pc, #28]	@ (80327ac <__assert_func+0x34>)
 8032790:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8032794:	462b      	mov	r3, r5
 8032796:	f000 f983 	bl	8032aa0 <fiprintf>
 803279a:	f7ff ffe6 	bl	803276a <abort>
 803279e:	4b04      	ldr	r3, [pc, #16]	@ (80327b0 <__assert_func+0x38>)
 80327a0:	e7f4      	b.n	803278c <__assert_func+0x14>
 80327a2:	bf00      	nop
 80327a4:	20000254 	.word	0x20000254
 80327a8:	0803893f 	.word	0x0803893f
 80327ac:	08038911 	.word	0x08038911
 80327b0:	08038904 	.word	0x08038904

080327b4 <atexit>:
 80327b4:	2300      	movs	r3, #0
 80327b6:	4601      	mov	r1, r0
 80327b8:	461a      	mov	r2, r3
 80327ba:	4618      	mov	r0, r3
 80327bc:	f000 bad2 	b.w	8032d64 <__register_exitproc>

080327c0 <malloc>:
 80327c0:	4b02      	ldr	r3, [pc, #8]	@ (80327cc <malloc+0xc>)
 80327c2:	4601      	mov	r1, r0
 80327c4:	6818      	ldr	r0, [r3, #0]
 80327c6:	f000 b82d 	b.w	8032824 <_malloc_r>
 80327ca:	bf00      	nop
 80327cc:	20000254 	.word	0x20000254

080327d0 <free>:
 80327d0:	4b02      	ldr	r3, [pc, #8]	@ (80327dc <free+0xc>)
 80327d2:	4601      	mov	r1, r0
 80327d4:	6818      	ldr	r0, [r3, #0]
 80327d6:	f000 bb23 	b.w	8032e20 <_free_r>
 80327da:	bf00      	nop
 80327dc:	20000254 	.word	0x20000254

080327e0 <sbrk_aligned>:
 80327e0:	b570      	push	{r4, r5, r6, lr}
 80327e2:	4e0f      	ldr	r6, [pc, #60]	@ (8032820 <sbrk_aligned+0x40>)
 80327e4:	460c      	mov	r4, r1
 80327e6:	4605      	mov	r5, r0
 80327e8:	6831      	ldr	r1, [r6, #0]
 80327ea:	b911      	cbnz	r1, 80327f2 <sbrk_aligned+0x12>
 80327ec:	f000 fa5e 	bl	8032cac <_sbrk_r>
 80327f0:	6030      	str	r0, [r6, #0]
 80327f2:	4621      	mov	r1, r4
 80327f4:	4628      	mov	r0, r5
 80327f6:	f000 fa59 	bl	8032cac <_sbrk_r>
 80327fa:	1c43      	adds	r3, r0, #1
 80327fc:	d103      	bne.n	8032806 <sbrk_aligned+0x26>
 80327fe:	f04f 34ff 	mov.w	r4, #4294967295
 8032802:	4620      	mov	r0, r4
 8032804:	bd70      	pop	{r4, r5, r6, pc}
 8032806:	1cc4      	adds	r4, r0, #3
 8032808:	f024 0403 	bic.w	r4, r4, #3
 803280c:	42a0      	cmp	r0, r4
 803280e:	d0f8      	beq.n	8032802 <sbrk_aligned+0x22>
 8032810:	1a21      	subs	r1, r4, r0
 8032812:	4628      	mov	r0, r5
 8032814:	f000 fa4a 	bl	8032cac <_sbrk_r>
 8032818:	3001      	adds	r0, #1
 803281a:	d1f2      	bne.n	8032802 <sbrk_aligned+0x22>
 803281c:	e7ef      	b.n	80327fe <sbrk_aligned+0x1e>
 803281e:	bf00      	nop
 8032820:	200835dc 	.word	0x200835dc

08032824 <_malloc_r>:
 8032824:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8032828:	1ccd      	adds	r5, r1, #3
 803282a:	4606      	mov	r6, r0
 803282c:	f025 0503 	bic.w	r5, r5, #3
 8032830:	3508      	adds	r5, #8
 8032832:	2d0c      	cmp	r5, #12
 8032834:	bf38      	it	cc
 8032836:	250c      	movcc	r5, #12
 8032838:	2d00      	cmp	r5, #0
 803283a:	db01      	blt.n	8032840 <_malloc_r+0x1c>
 803283c:	42a9      	cmp	r1, r5
 803283e:	d904      	bls.n	803284a <_malloc_r+0x26>
 8032840:	230c      	movs	r3, #12
 8032842:	6033      	str	r3, [r6, #0]
 8032844:	2000      	movs	r0, #0
 8032846:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 803284a:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 8032920 <_malloc_r+0xfc>
 803284e:	f000 f869 	bl	8032924 <__malloc_lock>
 8032852:	f8d8 3000 	ldr.w	r3, [r8]
 8032856:	461c      	mov	r4, r3
 8032858:	bb44      	cbnz	r4, 80328ac <_malloc_r+0x88>
 803285a:	4629      	mov	r1, r5
 803285c:	4630      	mov	r0, r6
 803285e:	f7ff ffbf 	bl	80327e0 <sbrk_aligned>
 8032862:	1c43      	adds	r3, r0, #1
 8032864:	4604      	mov	r4, r0
 8032866:	d158      	bne.n	803291a <_malloc_r+0xf6>
 8032868:	f8d8 4000 	ldr.w	r4, [r8]
 803286c:	4627      	mov	r7, r4
 803286e:	2f00      	cmp	r7, #0
 8032870:	d143      	bne.n	80328fa <_malloc_r+0xd6>
 8032872:	2c00      	cmp	r4, #0
 8032874:	d04b      	beq.n	803290e <_malloc_r+0xea>
 8032876:	6823      	ldr	r3, [r4, #0]
 8032878:	4639      	mov	r1, r7
 803287a:	4630      	mov	r0, r6
 803287c:	eb04 0903 	add.w	r9, r4, r3
 8032880:	f000 fa14 	bl	8032cac <_sbrk_r>
 8032884:	4581      	cmp	r9, r0
 8032886:	d142      	bne.n	803290e <_malloc_r+0xea>
 8032888:	6821      	ldr	r1, [r4, #0]
 803288a:	4630      	mov	r0, r6
 803288c:	1a6d      	subs	r5, r5, r1
 803288e:	4629      	mov	r1, r5
 8032890:	f7ff ffa6 	bl	80327e0 <sbrk_aligned>
 8032894:	3001      	adds	r0, #1
 8032896:	d03a      	beq.n	803290e <_malloc_r+0xea>
 8032898:	6823      	ldr	r3, [r4, #0]
 803289a:	442b      	add	r3, r5
 803289c:	6023      	str	r3, [r4, #0]
 803289e:	f8d8 3000 	ldr.w	r3, [r8]
 80328a2:	685a      	ldr	r2, [r3, #4]
 80328a4:	bb62      	cbnz	r2, 8032900 <_malloc_r+0xdc>
 80328a6:	f8c8 7000 	str.w	r7, [r8]
 80328aa:	e00f      	b.n	80328cc <_malloc_r+0xa8>
 80328ac:	6822      	ldr	r2, [r4, #0]
 80328ae:	1b52      	subs	r2, r2, r5
 80328b0:	d420      	bmi.n	80328f4 <_malloc_r+0xd0>
 80328b2:	2a0b      	cmp	r2, #11
 80328b4:	d917      	bls.n	80328e6 <_malloc_r+0xc2>
 80328b6:	1961      	adds	r1, r4, r5
 80328b8:	42a3      	cmp	r3, r4
 80328ba:	6025      	str	r5, [r4, #0]
 80328bc:	bf18      	it	ne
 80328be:	6059      	strne	r1, [r3, #4]
 80328c0:	6863      	ldr	r3, [r4, #4]
 80328c2:	bf08      	it	eq
 80328c4:	f8c8 1000 	streq.w	r1, [r8]
 80328c8:	5162      	str	r2, [r4, r5]
 80328ca:	604b      	str	r3, [r1, #4]
 80328cc:	4630      	mov	r0, r6
 80328ce:	f000 f82f 	bl	8032930 <__malloc_unlock>
 80328d2:	f104 000b 	add.w	r0, r4, #11
 80328d6:	1d23      	adds	r3, r4, #4
 80328d8:	f020 0007 	bic.w	r0, r0, #7
 80328dc:	1ac2      	subs	r2, r0, r3
 80328de:	bf1c      	itt	ne
 80328e0:	1a1b      	subne	r3, r3, r0
 80328e2:	50a3      	strne	r3, [r4, r2]
 80328e4:	e7af      	b.n	8032846 <_malloc_r+0x22>
 80328e6:	6862      	ldr	r2, [r4, #4]
 80328e8:	42a3      	cmp	r3, r4
 80328ea:	bf0c      	ite	eq
 80328ec:	f8c8 2000 	streq.w	r2, [r8]
 80328f0:	605a      	strne	r2, [r3, #4]
 80328f2:	e7eb      	b.n	80328cc <_malloc_r+0xa8>
 80328f4:	4623      	mov	r3, r4
 80328f6:	6864      	ldr	r4, [r4, #4]
 80328f8:	e7ae      	b.n	8032858 <_malloc_r+0x34>
 80328fa:	463c      	mov	r4, r7
 80328fc:	687f      	ldr	r7, [r7, #4]
 80328fe:	e7b6      	b.n	803286e <_malloc_r+0x4a>
 8032900:	461a      	mov	r2, r3
 8032902:	685b      	ldr	r3, [r3, #4]
 8032904:	42a3      	cmp	r3, r4
 8032906:	d1fb      	bne.n	8032900 <_malloc_r+0xdc>
 8032908:	2300      	movs	r3, #0
 803290a:	6053      	str	r3, [r2, #4]
 803290c:	e7de      	b.n	80328cc <_malloc_r+0xa8>
 803290e:	230c      	movs	r3, #12
 8032910:	4630      	mov	r0, r6
 8032912:	6033      	str	r3, [r6, #0]
 8032914:	f000 f80c 	bl	8032930 <__malloc_unlock>
 8032918:	e794      	b.n	8032844 <_malloc_r+0x20>
 803291a:	6005      	str	r5, [r0, #0]
 803291c:	e7d6      	b.n	80328cc <_malloc_r+0xa8>
 803291e:	bf00      	nop
 8032920:	200835e0 	.word	0x200835e0

08032924 <__malloc_lock>:
 8032924:	4801      	ldr	r0, [pc, #4]	@ (803292c <__malloc_lock+0x8>)
 8032926:	f000 ba0e 	b.w	8032d46 <__retarget_lock_acquire_recursive>
 803292a:	bf00      	nop
 803292c:	20083724 	.word	0x20083724

08032930 <__malloc_unlock>:
 8032930:	4801      	ldr	r0, [pc, #4]	@ (8032938 <__malloc_unlock+0x8>)
 8032932:	f000 ba09 	b.w	8032d48 <__retarget_lock_release_recursive>
 8032936:	bf00      	nop
 8032938:	20083724 	.word	0x20083724

0803293c <__cxa_atexit>:
 803293c:	b510      	push	{r4, lr}
 803293e:	4604      	mov	r4, r0
 8032940:	4804      	ldr	r0, [pc, #16]	@ (8032954 <__cxa_atexit+0x18>)
 8032942:	4613      	mov	r3, r2
 8032944:	b120      	cbz	r0, 8032950 <__cxa_atexit+0x14>
 8032946:	460a      	mov	r2, r1
 8032948:	2002      	movs	r0, #2
 803294a:	4621      	mov	r1, r4
 803294c:	f000 fa0a 	bl	8032d64 <__register_exitproc>
 8032950:	bd10      	pop	{r4, pc}
 8032952:	bf00      	nop
 8032954:	08032d65 	.word	0x08032d65

08032958 <std>:
 8032958:	2300      	movs	r3, #0
 803295a:	b510      	push	{r4, lr}
 803295c:	4604      	mov	r4, r0
 803295e:	6083      	str	r3, [r0, #8]
 8032960:	8181      	strh	r1, [r0, #12]
 8032962:	4619      	mov	r1, r3
 8032964:	6643      	str	r3, [r0, #100]	@ 0x64
 8032966:	81c2      	strh	r2, [r0, #14]
 8032968:	2208      	movs	r2, #8
 803296a:	6183      	str	r3, [r0, #24]
 803296c:	e9c0 3300 	strd	r3, r3, [r0]
 8032970:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8032974:	305c      	adds	r0, #92	@ 0x5c
 8032976:	f000 f906 	bl	8032b86 <memset>
 803297a:	4b0d      	ldr	r3, [pc, #52]	@ (80329b0 <std+0x58>)
 803297c:	6224      	str	r4, [r4, #32]
 803297e:	6263      	str	r3, [r4, #36]	@ 0x24
 8032980:	4b0c      	ldr	r3, [pc, #48]	@ (80329b4 <std+0x5c>)
 8032982:	62a3      	str	r3, [r4, #40]	@ 0x28
 8032984:	4b0c      	ldr	r3, [pc, #48]	@ (80329b8 <std+0x60>)
 8032986:	62e3      	str	r3, [r4, #44]	@ 0x2c
 8032988:	4b0c      	ldr	r3, [pc, #48]	@ (80329bc <std+0x64>)
 803298a:	6323      	str	r3, [r4, #48]	@ 0x30
 803298c:	4b0c      	ldr	r3, [pc, #48]	@ (80329c0 <std+0x68>)
 803298e:	429c      	cmp	r4, r3
 8032990:	d006      	beq.n	80329a0 <std+0x48>
 8032992:	f103 0268 	add.w	r2, r3, #104	@ 0x68
 8032996:	4294      	cmp	r4, r2
 8032998:	d002      	beq.n	80329a0 <std+0x48>
 803299a:	33d0      	adds	r3, #208	@ 0xd0
 803299c:	429c      	cmp	r4, r3
 803299e:	d105      	bne.n	80329ac <std+0x54>
 80329a0:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 80329a4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80329a8:	f000 b9cc 	b.w	8032d44 <__retarget_lock_init_recursive>
 80329ac:	bd10      	pop	{r4, pc}
 80329ae:	bf00      	nop
 80329b0:	08032b01 	.word	0x08032b01
 80329b4:	08032b23 	.word	0x08032b23
 80329b8:	08032b5b 	.word	0x08032b5b
 80329bc:	08032b7f 	.word	0x08032b7f
 80329c0:	200835e4 	.word	0x200835e4

080329c4 <stdio_exit_handler>:
 80329c4:	4a02      	ldr	r2, [pc, #8]	@ (80329d0 <stdio_exit_handler+0xc>)
 80329c6:	4903      	ldr	r1, [pc, #12]	@ (80329d4 <stdio_exit_handler+0x10>)
 80329c8:	4803      	ldr	r0, [pc, #12]	@ (80329d8 <stdio_exit_handler+0x14>)
 80329ca:	f000 b87b 	b.w	8032ac4 <_fwalk_sglue>
 80329ce:	bf00      	nop
 80329d0:	20000248 	.word	0x20000248
 80329d4:	08033565 	.word	0x08033565
 80329d8:	20000258 	.word	0x20000258

080329dc <cleanup_stdio>:
 80329dc:	6841      	ldr	r1, [r0, #4]
 80329de:	4b0c      	ldr	r3, [pc, #48]	@ (8032a10 <cleanup_stdio+0x34>)
 80329e0:	4299      	cmp	r1, r3
 80329e2:	b510      	push	{r4, lr}
 80329e4:	4604      	mov	r4, r0
 80329e6:	d001      	beq.n	80329ec <cleanup_stdio+0x10>
 80329e8:	f000 fdbc 	bl	8033564 <_fflush_r>
 80329ec:	68a1      	ldr	r1, [r4, #8]
 80329ee:	4b09      	ldr	r3, [pc, #36]	@ (8032a14 <cleanup_stdio+0x38>)
 80329f0:	4299      	cmp	r1, r3
 80329f2:	d002      	beq.n	80329fa <cleanup_stdio+0x1e>
 80329f4:	4620      	mov	r0, r4
 80329f6:	f000 fdb5 	bl	8033564 <_fflush_r>
 80329fa:	68e1      	ldr	r1, [r4, #12]
 80329fc:	4b06      	ldr	r3, [pc, #24]	@ (8032a18 <cleanup_stdio+0x3c>)
 80329fe:	4299      	cmp	r1, r3
 8032a00:	d004      	beq.n	8032a0c <cleanup_stdio+0x30>
 8032a02:	4620      	mov	r0, r4
 8032a04:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8032a08:	f000 bdac 	b.w	8033564 <_fflush_r>
 8032a0c:	bd10      	pop	{r4, pc}
 8032a0e:	bf00      	nop
 8032a10:	200835e4 	.word	0x200835e4
 8032a14:	2008364c 	.word	0x2008364c
 8032a18:	200836b4 	.word	0x200836b4

08032a1c <global_stdio_init.part.0>:
 8032a1c:	b510      	push	{r4, lr}
 8032a1e:	4b0b      	ldr	r3, [pc, #44]	@ (8032a4c <global_stdio_init.part.0+0x30>)
 8032a20:	2104      	movs	r1, #4
 8032a22:	4c0b      	ldr	r4, [pc, #44]	@ (8032a50 <global_stdio_init.part.0+0x34>)
 8032a24:	4a0b      	ldr	r2, [pc, #44]	@ (8032a54 <global_stdio_init.part.0+0x38>)
 8032a26:	4620      	mov	r0, r4
 8032a28:	601a      	str	r2, [r3, #0]
 8032a2a:	2200      	movs	r2, #0
 8032a2c:	f7ff ff94 	bl	8032958 <std>
 8032a30:	f104 0068 	add.w	r0, r4, #104	@ 0x68
 8032a34:	2201      	movs	r2, #1
 8032a36:	2109      	movs	r1, #9
 8032a38:	f7ff ff8e 	bl	8032958 <std>
 8032a3c:	f104 00d0 	add.w	r0, r4, #208	@ 0xd0
 8032a40:	2202      	movs	r2, #2
 8032a42:	2112      	movs	r1, #18
 8032a44:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8032a48:	f7ff bf86 	b.w	8032958 <std>
 8032a4c:	2008371c 	.word	0x2008371c
 8032a50:	200835e4 	.word	0x200835e4
 8032a54:	080329c5 	.word	0x080329c5

08032a58 <__sfp_lock_acquire>:
 8032a58:	4801      	ldr	r0, [pc, #4]	@ (8032a60 <__sfp_lock_acquire+0x8>)
 8032a5a:	f000 b974 	b.w	8032d46 <__retarget_lock_acquire_recursive>
 8032a5e:	bf00      	nop
 8032a60:	20083726 	.word	0x20083726

08032a64 <__sfp_lock_release>:
 8032a64:	4801      	ldr	r0, [pc, #4]	@ (8032a6c <__sfp_lock_release+0x8>)
 8032a66:	f000 b96f 	b.w	8032d48 <__retarget_lock_release_recursive>
 8032a6a:	bf00      	nop
 8032a6c:	20083726 	.word	0x20083726

08032a70 <__sinit>:
 8032a70:	b510      	push	{r4, lr}
 8032a72:	4604      	mov	r4, r0
 8032a74:	f7ff fff0 	bl	8032a58 <__sfp_lock_acquire>
 8032a78:	6a23      	ldr	r3, [r4, #32]
 8032a7a:	b11b      	cbz	r3, 8032a84 <__sinit+0x14>
 8032a7c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8032a80:	f7ff bff0 	b.w	8032a64 <__sfp_lock_release>
 8032a84:	4b04      	ldr	r3, [pc, #16]	@ (8032a98 <__sinit+0x28>)
 8032a86:	6223      	str	r3, [r4, #32]
 8032a88:	4b04      	ldr	r3, [pc, #16]	@ (8032a9c <__sinit+0x2c>)
 8032a8a:	681b      	ldr	r3, [r3, #0]
 8032a8c:	2b00      	cmp	r3, #0
 8032a8e:	d1f5      	bne.n	8032a7c <__sinit+0xc>
 8032a90:	f7ff ffc4 	bl	8032a1c <global_stdio_init.part.0>
 8032a94:	e7f2      	b.n	8032a7c <__sinit+0xc>
 8032a96:	bf00      	nop
 8032a98:	080329dd 	.word	0x080329dd
 8032a9c:	2008371c 	.word	0x2008371c

08032aa0 <fiprintf>:
 8032aa0:	b40e      	push	{r1, r2, r3}
 8032aa2:	b503      	push	{r0, r1, lr}
 8032aa4:	ab03      	add	r3, sp, #12
 8032aa6:	4601      	mov	r1, r0
 8032aa8:	4805      	ldr	r0, [pc, #20]	@ (8032ac0 <fiprintf+0x20>)
 8032aaa:	f853 2b04 	ldr.w	r2, [r3], #4
 8032aae:	6800      	ldr	r0, [r0, #0]
 8032ab0:	9301      	str	r3, [sp, #4]
 8032ab2:	f000 fa29 	bl	8032f08 <_vfiprintf_r>
 8032ab6:	b002      	add	sp, #8
 8032ab8:	f85d eb04 	ldr.w	lr, [sp], #4
 8032abc:	b003      	add	sp, #12
 8032abe:	4770      	bx	lr
 8032ac0:	20000254 	.word	0x20000254

08032ac4 <_fwalk_sglue>:
 8032ac4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8032ac8:	4607      	mov	r7, r0
 8032aca:	4688      	mov	r8, r1
 8032acc:	4614      	mov	r4, r2
 8032ace:	2600      	movs	r6, #0
 8032ad0:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8032ad4:	f1b9 0901 	subs.w	r9, r9, #1
 8032ad8:	d505      	bpl.n	8032ae6 <_fwalk_sglue+0x22>
 8032ada:	6824      	ldr	r4, [r4, #0]
 8032adc:	2c00      	cmp	r4, #0
 8032ade:	d1f7      	bne.n	8032ad0 <_fwalk_sglue+0xc>
 8032ae0:	4630      	mov	r0, r6
 8032ae2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8032ae6:	89ab      	ldrh	r3, [r5, #12]
 8032ae8:	2b01      	cmp	r3, #1
 8032aea:	d907      	bls.n	8032afc <_fwalk_sglue+0x38>
 8032aec:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8032af0:	3301      	adds	r3, #1
 8032af2:	d003      	beq.n	8032afc <_fwalk_sglue+0x38>
 8032af4:	4629      	mov	r1, r5
 8032af6:	4638      	mov	r0, r7
 8032af8:	47c0      	blx	r8
 8032afa:	4306      	orrs	r6, r0
 8032afc:	3568      	adds	r5, #104	@ 0x68
 8032afe:	e7e9      	b.n	8032ad4 <_fwalk_sglue+0x10>

08032b00 <__sread>:
 8032b00:	b510      	push	{r4, lr}
 8032b02:	460c      	mov	r4, r1
 8032b04:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8032b08:	f000 f8aa 	bl	8032c60 <_read_r>
 8032b0c:	2800      	cmp	r0, #0
 8032b0e:	bfab      	itete	ge
 8032b10:	6d63      	ldrge	r3, [r4, #84]	@ 0x54
 8032b12:	89a3      	ldrhlt	r3, [r4, #12]
 8032b14:	181b      	addge	r3, r3, r0
 8032b16:	f423 5380 	biclt.w	r3, r3, #4096	@ 0x1000
 8032b1a:	bfac      	ite	ge
 8032b1c:	6563      	strge	r3, [r4, #84]	@ 0x54
 8032b1e:	81a3      	strhlt	r3, [r4, #12]
 8032b20:	bd10      	pop	{r4, pc}

08032b22 <__swrite>:
 8032b22:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8032b26:	461f      	mov	r7, r3
 8032b28:	898b      	ldrh	r3, [r1, #12]
 8032b2a:	4605      	mov	r5, r0
 8032b2c:	460c      	mov	r4, r1
 8032b2e:	05db      	lsls	r3, r3, #23
 8032b30:	4616      	mov	r6, r2
 8032b32:	d505      	bpl.n	8032b40 <__swrite+0x1e>
 8032b34:	2302      	movs	r3, #2
 8032b36:	2200      	movs	r2, #0
 8032b38:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8032b3c:	f000 f87e 	bl	8032c3c <_lseek_r>
 8032b40:	89a3      	ldrh	r3, [r4, #12]
 8032b42:	4632      	mov	r2, r6
 8032b44:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8032b48:	4628      	mov	r0, r5
 8032b4a:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 8032b4e:	81a3      	strh	r3, [r4, #12]
 8032b50:	463b      	mov	r3, r7
 8032b52:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8032b56:	f000 b8b9 	b.w	8032ccc <_write_r>

08032b5a <__sseek>:
 8032b5a:	b510      	push	{r4, lr}
 8032b5c:	460c      	mov	r4, r1
 8032b5e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8032b62:	f000 f86b 	bl	8032c3c <_lseek_r>
 8032b66:	1c43      	adds	r3, r0, #1
 8032b68:	89a3      	ldrh	r3, [r4, #12]
 8032b6a:	bf15      	itete	ne
 8032b6c:	6560      	strne	r0, [r4, #84]	@ 0x54
 8032b6e:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
 8032b72:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
 8032b76:	81a3      	strheq	r3, [r4, #12]
 8032b78:	bf18      	it	ne
 8032b7a:	81a3      	strhne	r3, [r4, #12]
 8032b7c:	bd10      	pop	{r4, pc}

08032b7e <__sclose>:
 8032b7e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8032b82:	f000 b84b 	b.w	8032c1c <_close_r>

08032b86 <memset>:
 8032b86:	4402      	add	r2, r0
 8032b88:	4603      	mov	r3, r0
 8032b8a:	4293      	cmp	r3, r2
 8032b8c:	d100      	bne.n	8032b90 <memset+0xa>
 8032b8e:	4770      	bx	lr
 8032b90:	f803 1b01 	strb.w	r1, [r3], #1
 8032b94:	e7f9      	b.n	8032b8a <memset+0x4>

08032b96 <strncmp>:
 8032b96:	b510      	push	{r4, lr}
 8032b98:	b16a      	cbz	r2, 8032bb6 <strncmp+0x20>
 8032b9a:	3901      	subs	r1, #1
 8032b9c:	1884      	adds	r4, r0, r2
 8032b9e:	f810 2b01 	ldrb.w	r2, [r0], #1
 8032ba2:	f811 3f01 	ldrb.w	r3, [r1, #1]!
 8032ba6:	429a      	cmp	r2, r3
 8032ba8:	d103      	bne.n	8032bb2 <strncmp+0x1c>
 8032baa:	42a0      	cmp	r0, r4
 8032bac:	d001      	beq.n	8032bb2 <strncmp+0x1c>
 8032bae:	2a00      	cmp	r2, #0
 8032bb0:	d1f5      	bne.n	8032b9e <strncmp+0x8>
 8032bb2:	1ad0      	subs	r0, r2, r3
 8032bb4:	bd10      	pop	{r4, pc}
 8032bb6:	4610      	mov	r0, r2
 8032bb8:	e7fc      	b.n	8032bb4 <strncmp+0x1e>

08032bba <_raise_r>:
 8032bba:	291f      	cmp	r1, #31
 8032bbc:	b538      	push	{r3, r4, r5, lr}
 8032bbe:	4605      	mov	r5, r0
 8032bc0:	460c      	mov	r4, r1
 8032bc2:	d904      	bls.n	8032bce <_raise_r+0x14>
 8032bc4:	2316      	movs	r3, #22
 8032bc6:	6003      	str	r3, [r0, #0]
 8032bc8:	f04f 30ff 	mov.w	r0, #4294967295
 8032bcc:	bd38      	pop	{r3, r4, r5, pc}
 8032bce:	6bc2      	ldr	r2, [r0, #60]	@ 0x3c
 8032bd0:	b112      	cbz	r2, 8032bd8 <_raise_r+0x1e>
 8032bd2:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 8032bd6:	b94b      	cbnz	r3, 8032bec <_raise_r+0x32>
 8032bd8:	4628      	mov	r0, r5
 8032bda:	f000 f865 	bl	8032ca8 <_getpid_r>
 8032bde:	4622      	mov	r2, r4
 8032be0:	4601      	mov	r1, r0
 8032be2:	4628      	mov	r0, r5
 8032be4:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8032be8:	f000 b84c 	b.w	8032c84 <_kill_r>
 8032bec:	2b01      	cmp	r3, #1
 8032bee:	d00a      	beq.n	8032c06 <_raise_r+0x4c>
 8032bf0:	1c59      	adds	r1, r3, #1
 8032bf2:	d103      	bne.n	8032bfc <_raise_r+0x42>
 8032bf4:	2316      	movs	r3, #22
 8032bf6:	6003      	str	r3, [r0, #0]
 8032bf8:	2001      	movs	r0, #1
 8032bfa:	e7e7      	b.n	8032bcc <_raise_r+0x12>
 8032bfc:	2100      	movs	r1, #0
 8032bfe:	4620      	mov	r0, r4
 8032c00:	f842 1024 	str.w	r1, [r2, r4, lsl #2]
 8032c04:	4798      	blx	r3
 8032c06:	2000      	movs	r0, #0
 8032c08:	e7e0      	b.n	8032bcc <_raise_r+0x12>
	...

08032c0c <raise>:
 8032c0c:	4b02      	ldr	r3, [pc, #8]	@ (8032c18 <raise+0xc>)
 8032c0e:	4601      	mov	r1, r0
 8032c10:	6818      	ldr	r0, [r3, #0]
 8032c12:	f7ff bfd2 	b.w	8032bba <_raise_r>
 8032c16:	bf00      	nop
 8032c18:	20000254 	.word	0x20000254

08032c1c <_close_r>:
 8032c1c:	b538      	push	{r3, r4, r5, lr}
 8032c1e:	2300      	movs	r3, #0
 8032c20:	4d05      	ldr	r5, [pc, #20]	@ (8032c38 <_close_r+0x1c>)
 8032c22:	4604      	mov	r4, r0
 8032c24:	4608      	mov	r0, r1
 8032c26:	602b      	str	r3, [r5, #0]
 8032c28:	f7ce f96a 	bl	8000f00 <_close>
 8032c2c:	1c43      	adds	r3, r0, #1
 8032c2e:	d102      	bne.n	8032c36 <_close_r+0x1a>
 8032c30:	682b      	ldr	r3, [r5, #0]
 8032c32:	b103      	cbz	r3, 8032c36 <_close_r+0x1a>
 8032c34:	6023      	str	r3, [r4, #0]
 8032c36:	bd38      	pop	{r3, r4, r5, pc}
 8032c38:	20083720 	.word	0x20083720

08032c3c <_lseek_r>:
 8032c3c:	b538      	push	{r3, r4, r5, lr}
 8032c3e:	4604      	mov	r4, r0
 8032c40:	4d06      	ldr	r5, [pc, #24]	@ (8032c5c <_lseek_r+0x20>)
 8032c42:	4608      	mov	r0, r1
 8032c44:	4611      	mov	r1, r2
 8032c46:	2200      	movs	r2, #0
 8032c48:	602a      	str	r2, [r5, #0]
 8032c4a:	461a      	mov	r2, r3
 8032c4c:	f7ce f962 	bl	8000f14 <_lseek>
 8032c50:	1c43      	adds	r3, r0, #1
 8032c52:	d102      	bne.n	8032c5a <_lseek_r+0x1e>
 8032c54:	682b      	ldr	r3, [r5, #0]
 8032c56:	b103      	cbz	r3, 8032c5a <_lseek_r+0x1e>
 8032c58:	6023      	str	r3, [r4, #0]
 8032c5a:	bd38      	pop	{r3, r4, r5, pc}
 8032c5c:	20083720 	.word	0x20083720

08032c60 <_read_r>:
 8032c60:	b538      	push	{r3, r4, r5, lr}
 8032c62:	4604      	mov	r4, r0
 8032c64:	4d06      	ldr	r5, [pc, #24]	@ (8032c80 <_read_r+0x20>)
 8032c66:	4608      	mov	r0, r1
 8032c68:	4611      	mov	r1, r2
 8032c6a:	2200      	movs	r2, #0
 8032c6c:	602a      	str	r2, [r5, #0]
 8032c6e:	461a      	mov	r2, r3
 8032c70:	f7ce f92a 	bl	8000ec8 <_read>
 8032c74:	1c43      	adds	r3, r0, #1
 8032c76:	d102      	bne.n	8032c7e <_read_r+0x1e>
 8032c78:	682b      	ldr	r3, [r5, #0]
 8032c7a:	b103      	cbz	r3, 8032c7e <_read_r+0x1e>
 8032c7c:	6023      	str	r3, [r4, #0]
 8032c7e:	bd38      	pop	{r3, r4, r5, pc}
 8032c80:	20083720 	.word	0x20083720

08032c84 <_kill_r>:
 8032c84:	b538      	push	{r3, r4, r5, lr}
 8032c86:	2300      	movs	r3, #0
 8032c88:	4d06      	ldr	r5, [pc, #24]	@ (8032ca4 <_kill_r+0x20>)
 8032c8a:	4604      	mov	r4, r0
 8032c8c:	4608      	mov	r0, r1
 8032c8e:	4611      	mov	r1, r2
 8032c90:	602b      	str	r3, [r5, #0]
 8032c92:	f7ce f90b 	bl	8000eac <_kill>
 8032c96:	1c43      	adds	r3, r0, #1
 8032c98:	d102      	bne.n	8032ca0 <_kill_r+0x1c>
 8032c9a:	682b      	ldr	r3, [r5, #0]
 8032c9c:	b103      	cbz	r3, 8032ca0 <_kill_r+0x1c>
 8032c9e:	6023      	str	r3, [r4, #0]
 8032ca0:	bd38      	pop	{r3, r4, r5, pc}
 8032ca2:	bf00      	nop
 8032ca4:	20083720 	.word	0x20083720

08032ca8 <_getpid_r>:
 8032ca8:	f7ce b8fe 	b.w	8000ea8 <_getpid>

08032cac <_sbrk_r>:
 8032cac:	b538      	push	{r3, r4, r5, lr}
 8032cae:	2300      	movs	r3, #0
 8032cb0:	4d05      	ldr	r5, [pc, #20]	@ (8032cc8 <_sbrk_r+0x1c>)
 8032cb2:	4604      	mov	r4, r0
 8032cb4:	4608      	mov	r0, r1
 8032cb6:	602b      	str	r3, [r5, #0]
 8032cb8:	f7ce f92e 	bl	8000f18 <_sbrk>
 8032cbc:	1c43      	adds	r3, r0, #1
 8032cbe:	d102      	bne.n	8032cc6 <_sbrk_r+0x1a>
 8032cc0:	682b      	ldr	r3, [r5, #0]
 8032cc2:	b103      	cbz	r3, 8032cc6 <_sbrk_r+0x1a>
 8032cc4:	6023      	str	r3, [r4, #0]
 8032cc6:	bd38      	pop	{r3, r4, r5, pc}
 8032cc8:	20083720 	.word	0x20083720

08032ccc <_write_r>:
 8032ccc:	b538      	push	{r3, r4, r5, lr}
 8032cce:	4604      	mov	r4, r0
 8032cd0:	4d06      	ldr	r5, [pc, #24]	@ (8032cec <_write_r+0x20>)
 8032cd2:	4608      	mov	r0, r1
 8032cd4:	4611      	mov	r1, r2
 8032cd6:	2200      	movs	r2, #0
 8032cd8:	602a      	str	r2, [r5, #0]
 8032cda:	461a      	mov	r2, r3
 8032cdc:	f7ce f902 	bl	8000ee4 <_write>
 8032ce0:	1c43      	adds	r3, r0, #1
 8032ce2:	d102      	bne.n	8032cea <_write_r+0x1e>
 8032ce4:	682b      	ldr	r3, [r5, #0]
 8032ce6:	b103      	cbz	r3, 8032cea <_write_r+0x1e>
 8032ce8:	6023      	str	r3, [r4, #0]
 8032cea:	bd38      	pop	{r3, r4, r5, pc}
 8032cec:	20083720 	.word	0x20083720

08032cf0 <__errno>:
 8032cf0:	4b01      	ldr	r3, [pc, #4]	@ (8032cf8 <__errno+0x8>)
 8032cf2:	6818      	ldr	r0, [r3, #0]
 8032cf4:	4770      	bx	lr
 8032cf6:	bf00      	nop
 8032cf8:	20000254 	.word	0x20000254

08032cfc <__libc_init_array>:
 8032cfc:	b570      	push	{r4, r5, r6, lr}
 8032cfe:	4d0d      	ldr	r5, [pc, #52]	@ (8032d34 <__libc_init_array+0x38>)
 8032d00:	2600      	movs	r6, #0
 8032d02:	4c0d      	ldr	r4, [pc, #52]	@ (8032d38 <__libc_init_array+0x3c>)
 8032d04:	1b64      	subs	r4, r4, r5
 8032d06:	10a4      	asrs	r4, r4, #2
 8032d08:	42a6      	cmp	r6, r4
 8032d0a:	d109      	bne.n	8032d20 <__libc_init_array+0x24>
 8032d0c:	4d0b      	ldr	r5, [pc, #44]	@ (8032d3c <__libc_init_array+0x40>)
 8032d0e:	2600      	movs	r6, #0
 8032d10:	4c0b      	ldr	r4, [pc, #44]	@ (8032d40 <__libc_init_array+0x44>)
 8032d12:	f000 fd75 	bl	8033800 <_init>
 8032d16:	1b64      	subs	r4, r4, r5
 8032d18:	10a4      	asrs	r4, r4, #2
 8032d1a:	42a6      	cmp	r6, r4
 8032d1c:	d105      	bne.n	8032d2a <__libc_init_array+0x2e>
 8032d1e:	bd70      	pop	{r4, r5, r6, pc}
 8032d20:	f855 3b04 	ldr.w	r3, [r5], #4
 8032d24:	3601      	adds	r6, #1
 8032d26:	4798      	blx	r3
 8032d28:	e7ee      	b.n	8032d08 <__libc_init_array+0xc>
 8032d2a:	f855 3b04 	ldr.w	r3, [r5], #4
 8032d2e:	3601      	adds	r6, #1
 8032d30:	4798      	blx	r3
 8032d32:	e7f2      	b.n	8032d1a <__libc_init_array+0x1e>
 8032d34:	08038b48 	.word	0x08038b48
 8032d38:	08038b48 	.word	0x08038b48
 8032d3c:	08038b48 	.word	0x08038b48
 8032d40:	08038b68 	.word	0x08038b68

08032d44 <__retarget_lock_init_recursive>:
 8032d44:	4770      	bx	lr

08032d46 <__retarget_lock_acquire_recursive>:
 8032d46:	4770      	bx	lr

08032d48 <__retarget_lock_release_recursive>:
 8032d48:	4770      	bx	lr

08032d4a <memcpy>:
 8032d4a:	440a      	add	r2, r1
 8032d4c:	1e43      	subs	r3, r0, #1
 8032d4e:	4291      	cmp	r1, r2
 8032d50:	d100      	bne.n	8032d54 <memcpy+0xa>
 8032d52:	4770      	bx	lr
 8032d54:	b510      	push	{r4, lr}
 8032d56:	f811 4b01 	ldrb.w	r4, [r1], #1
 8032d5a:	4291      	cmp	r1, r2
 8032d5c:	f803 4f01 	strb.w	r4, [r3, #1]!
 8032d60:	d1f9      	bne.n	8032d56 <memcpy+0xc>
 8032d62:	bd10      	pop	{r4, pc}

08032d64 <__register_exitproc>:
 8032d64:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8032d68:	4d28      	ldr	r5, [pc, #160]	@ (8032e0c <__register_exitproc+0xa8>)
 8032d6a:	4607      	mov	r7, r0
 8032d6c:	4691      	mov	r9, r2
 8032d6e:	460e      	mov	r6, r1
 8032d70:	6828      	ldr	r0, [r5, #0]
 8032d72:	4698      	mov	r8, r3
 8032d74:	f7ff ffe7 	bl	8032d46 <__retarget_lock_acquire_recursive>
 8032d78:	4a25      	ldr	r2, [pc, #148]	@ (8032e10 <__register_exitproc+0xac>)
 8032d7a:	6814      	ldr	r4, [r2, #0]
 8032d7c:	b93c      	cbnz	r4, 8032d8e <__register_exitproc+0x2a>
 8032d7e:	4b25      	ldr	r3, [pc, #148]	@ (8032e14 <__register_exitproc+0xb0>)
 8032d80:	6013      	str	r3, [r2, #0]
 8032d82:	4a25      	ldr	r2, [pc, #148]	@ (8032e18 <__register_exitproc+0xb4>)
 8032d84:	b112      	cbz	r2, 8032d8c <__register_exitproc+0x28>
 8032d86:	6812      	ldr	r2, [r2, #0]
 8032d88:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
 8032d8c:	4c21      	ldr	r4, [pc, #132]	@ (8032e14 <__register_exitproc+0xb0>)
 8032d8e:	6863      	ldr	r3, [r4, #4]
 8032d90:	2b1f      	cmp	r3, #31
 8032d92:	dd06      	ble.n	8032da2 <__register_exitproc+0x3e>
 8032d94:	6828      	ldr	r0, [r5, #0]
 8032d96:	f7ff ffd7 	bl	8032d48 <__retarget_lock_release_recursive>
 8032d9a:	f04f 30ff 	mov.w	r0, #4294967295
 8032d9e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8032da2:	b33f      	cbz	r7, 8032df4 <__register_exitproc+0x90>
 8032da4:	f8d4 0088 	ldr.w	r0, [r4, #136]	@ 0x88
 8032da8:	b968      	cbnz	r0, 8032dc6 <__register_exitproc+0x62>
 8032daa:	4b1c      	ldr	r3, [pc, #112]	@ (8032e1c <__register_exitproc+0xb8>)
 8032dac:	2b00      	cmp	r3, #0
 8032dae:	d0f1      	beq.n	8032d94 <__register_exitproc+0x30>
 8032db0:	f44f 7084 	mov.w	r0, #264	@ 0x108
 8032db4:	f7ff fd04 	bl	80327c0 <malloc>
 8032db8:	2800      	cmp	r0, #0
 8032dba:	d0eb      	beq.n	8032d94 <__register_exitproc+0x30>
 8032dbc:	2300      	movs	r3, #0
 8032dbe:	e9c0 3340 	strd	r3, r3, [r0, #256]	@ 0x100
 8032dc2:	f8c4 0088 	str.w	r0, [r4, #136]	@ 0x88
 8032dc6:	6863      	ldr	r3, [r4, #4]
 8032dc8:	2201      	movs	r2, #1
 8032dca:	2f02      	cmp	r7, #2
 8032dcc:	f840 9023 	str.w	r9, [r0, r3, lsl #2]
 8032dd0:	fa02 f203 	lsl.w	r2, r2, r3
 8032dd4:	eb00 0183 	add.w	r1, r0, r3, lsl #2
 8032dd8:	f8d0 3100 	ldr.w	r3, [r0, #256]	@ 0x100
 8032ddc:	ea43 0302 	orr.w	r3, r3, r2
 8032de0:	f8c0 3100 	str.w	r3, [r0, #256]	@ 0x100
 8032de4:	f8c1 8080 	str.w	r8, [r1, #128]	@ 0x80
 8032de8:	bf02      	ittt	eq
 8032dea:	f8d0 3104 	ldreq.w	r3, [r0, #260]	@ 0x104
 8032dee:	4313      	orreq	r3, r2
 8032df0:	f8c0 3104 	streq.w	r3, [r0, #260]	@ 0x104
 8032df4:	6863      	ldr	r3, [r4, #4]
 8032df6:	6828      	ldr	r0, [r5, #0]
 8032df8:	1c5a      	adds	r2, r3, #1
 8032dfa:	3302      	adds	r3, #2
 8032dfc:	6062      	str	r2, [r4, #4]
 8032dfe:	f844 6023 	str.w	r6, [r4, r3, lsl #2]
 8032e02:	f7ff ffa1 	bl	8032d48 <__retarget_lock_release_recursive>
 8032e06:	2000      	movs	r0, #0
 8032e08:	e7c9      	b.n	8032d9e <__register_exitproc+0x3a>
 8032e0a:	bf00      	nop
 8032e0c:	200002a4 	.word	0x200002a4
 8032e10:	200837b4 	.word	0x200837b4
 8032e14:	20083728 	.word	0x20083728
 8032e18:	08038940 	.word	0x08038940
 8032e1c:	080327c1 	.word	0x080327c1

08032e20 <_free_r>:
 8032e20:	b538      	push	{r3, r4, r5, lr}
 8032e22:	4605      	mov	r5, r0
 8032e24:	2900      	cmp	r1, #0
 8032e26:	d041      	beq.n	8032eac <_free_r+0x8c>
 8032e28:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8032e2c:	1f0c      	subs	r4, r1, #4
 8032e2e:	2b00      	cmp	r3, #0
 8032e30:	bfb8      	it	lt
 8032e32:	18e4      	addlt	r4, r4, r3
 8032e34:	f7ff fd76 	bl	8032924 <__malloc_lock>
 8032e38:	4a1d      	ldr	r2, [pc, #116]	@ (8032eb0 <_free_r+0x90>)
 8032e3a:	6813      	ldr	r3, [r2, #0]
 8032e3c:	b933      	cbnz	r3, 8032e4c <_free_r+0x2c>
 8032e3e:	6063      	str	r3, [r4, #4]
 8032e40:	6014      	str	r4, [r2, #0]
 8032e42:	4628      	mov	r0, r5
 8032e44:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8032e48:	f7ff bd72 	b.w	8032930 <__malloc_unlock>
 8032e4c:	42a3      	cmp	r3, r4
 8032e4e:	d908      	bls.n	8032e62 <_free_r+0x42>
 8032e50:	6820      	ldr	r0, [r4, #0]
 8032e52:	1821      	adds	r1, r4, r0
 8032e54:	428b      	cmp	r3, r1
 8032e56:	bf01      	itttt	eq
 8032e58:	6819      	ldreq	r1, [r3, #0]
 8032e5a:	685b      	ldreq	r3, [r3, #4]
 8032e5c:	1809      	addeq	r1, r1, r0
 8032e5e:	6021      	streq	r1, [r4, #0]
 8032e60:	e7ed      	b.n	8032e3e <_free_r+0x1e>
 8032e62:	461a      	mov	r2, r3
 8032e64:	685b      	ldr	r3, [r3, #4]
 8032e66:	b10b      	cbz	r3, 8032e6c <_free_r+0x4c>
 8032e68:	42a3      	cmp	r3, r4
 8032e6a:	d9fa      	bls.n	8032e62 <_free_r+0x42>
 8032e6c:	6811      	ldr	r1, [r2, #0]
 8032e6e:	1850      	adds	r0, r2, r1
 8032e70:	42a0      	cmp	r0, r4
 8032e72:	d10b      	bne.n	8032e8c <_free_r+0x6c>
 8032e74:	6820      	ldr	r0, [r4, #0]
 8032e76:	4401      	add	r1, r0
 8032e78:	1850      	adds	r0, r2, r1
 8032e7a:	6011      	str	r1, [r2, #0]
 8032e7c:	4283      	cmp	r3, r0
 8032e7e:	d1e0      	bne.n	8032e42 <_free_r+0x22>
 8032e80:	6818      	ldr	r0, [r3, #0]
 8032e82:	685b      	ldr	r3, [r3, #4]
 8032e84:	4408      	add	r0, r1
 8032e86:	6053      	str	r3, [r2, #4]
 8032e88:	6010      	str	r0, [r2, #0]
 8032e8a:	e7da      	b.n	8032e42 <_free_r+0x22>
 8032e8c:	d902      	bls.n	8032e94 <_free_r+0x74>
 8032e8e:	230c      	movs	r3, #12
 8032e90:	602b      	str	r3, [r5, #0]
 8032e92:	e7d6      	b.n	8032e42 <_free_r+0x22>
 8032e94:	6820      	ldr	r0, [r4, #0]
 8032e96:	1821      	adds	r1, r4, r0
 8032e98:	428b      	cmp	r3, r1
 8032e9a:	bf02      	ittt	eq
 8032e9c:	6819      	ldreq	r1, [r3, #0]
 8032e9e:	685b      	ldreq	r3, [r3, #4]
 8032ea0:	1809      	addeq	r1, r1, r0
 8032ea2:	6063      	str	r3, [r4, #4]
 8032ea4:	bf08      	it	eq
 8032ea6:	6021      	streq	r1, [r4, #0]
 8032ea8:	6054      	str	r4, [r2, #4]
 8032eaa:	e7ca      	b.n	8032e42 <_free_r+0x22>
 8032eac:	bd38      	pop	{r3, r4, r5, pc}
 8032eae:	bf00      	nop
 8032eb0:	200835e0 	.word	0x200835e0

08032eb4 <__sfputc_r>:
 8032eb4:	6893      	ldr	r3, [r2, #8]
 8032eb6:	3b01      	subs	r3, #1
 8032eb8:	2b00      	cmp	r3, #0
 8032eba:	6093      	str	r3, [r2, #8]
 8032ebc:	b410      	push	{r4}
 8032ebe:	da08      	bge.n	8032ed2 <__sfputc_r+0x1e>
 8032ec0:	6994      	ldr	r4, [r2, #24]
 8032ec2:	42a3      	cmp	r3, r4
 8032ec4:	db01      	blt.n	8032eca <__sfputc_r+0x16>
 8032ec6:	290a      	cmp	r1, #10
 8032ec8:	d103      	bne.n	8032ed2 <__sfputc_r+0x1e>
 8032eca:	f85d 4b04 	ldr.w	r4, [sp], #4
 8032ece:	f000 bb71 	b.w	80335b4 <__swbuf_r>
 8032ed2:	6813      	ldr	r3, [r2, #0]
 8032ed4:	1c58      	adds	r0, r3, #1
 8032ed6:	6010      	str	r0, [r2, #0]
 8032ed8:	4608      	mov	r0, r1
 8032eda:	7019      	strb	r1, [r3, #0]
 8032edc:	f85d 4b04 	ldr.w	r4, [sp], #4
 8032ee0:	4770      	bx	lr

08032ee2 <__sfputs_r>:
 8032ee2:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8032ee4:	4606      	mov	r6, r0
 8032ee6:	460f      	mov	r7, r1
 8032ee8:	4614      	mov	r4, r2
 8032eea:	18d5      	adds	r5, r2, r3
 8032eec:	42ac      	cmp	r4, r5
 8032eee:	d101      	bne.n	8032ef4 <__sfputs_r+0x12>
 8032ef0:	2000      	movs	r0, #0
 8032ef2:	e007      	b.n	8032f04 <__sfputs_r+0x22>
 8032ef4:	463a      	mov	r2, r7
 8032ef6:	f814 1b01 	ldrb.w	r1, [r4], #1
 8032efa:	4630      	mov	r0, r6
 8032efc:	f7ff ffda 	bl	8032eb4 <__sfputc_r>
 8032f00:	1c43      	adds	r3, r0, #1
 8032f02:	d1f3      	bne.n	8032eec <__sfputs_r+0xa>
 8032f04:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08032f08 <_vfiprintf_r>:
 8032f08:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8032f0c:	460d      	mov	r5, r1
 8032f0e:	b09d      	sub	sp, #116	@ 0x74
 8032f10:	4614      	mov	r4, r2
 8032f12:	4698      	mov	r8, r3
 8032f14:	4606      	mov	r6, r0
 8032f16:	b118      	cbz	r0, 8032f20 <_vfiprintf_r+0x18>
 8032f18:	6a03      	ldr	r3, [r0, #32]
 8032f1a:	b90b      	cbnz	r3, 8032f20 <_vfiprintf_r+0x18>
 8032f1c:	f7ff fda8 	bl	8032a70 <__sinit>
 8032f20:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8032f22:	07d9      	lsls	r1, r3, #31
 8032f24:	d405      	bmi.n	8032f32 <_vfiprintf_r+0x2a>
 8032f26:	89ab      	ldrh	r3, [r5, #12]
 8032f28:	059a      	lsls	r2, r3, #22
 8032f2a:	d402      	bmi.n	8032f32 <_vfiprintf_r+0x2a>
 8032f2c:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8032f2e:	f7ff ff0a 	bl	8032d46 <__retarget_lock_acquire_recursive>
 8032f32:	89ab      	ldrh	r3, [r5, #12]
 8032f34:	071b      	lsls	r3, r3, #28
 8032f36:	d501      	bpl.n	8032f3c <_vfiprintf_r+0x34>
 8032f38:	692b      	ldr	r3, [r5, #16]
 8032f3a:	b99b      	cbnz	r3, 8032f64 <_vfiprintf_r+0x5c>
 8032f3c:	4629      	mov	r1, r5
 8032f3e:	4630      	mov	r0, r6
 8032f40:	f000 fb76 	bl	8033630 <__swsetup_r>
 8032f44:	b170      	cbz	r0, 8032f64 <_vfiprintf_r+0x5c>
 8032f46:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8032f48:	07dc      	lsls	r4, r3, #31
 8032f4a:	d504      	bpl.n	8032f56 <_vfiprintf_r+0x4e>
 8032f4c:	f04f 30ff 	mov.w	r0, #4294967295
 8032f50:	b01d      	add	sp, #116	@ 0x74
 8032f52:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8032f56:	89ab      	ldrh	r3, [r5, #12]
 8032f58:	0598      	lsls	r0, r3, #22
 8032f5a:	d4f7      	bmi.n	8032f4c <_vfiprintf_r+0x44>
 8032f5c:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8032f5e:	f7ff fef3 	bl	8032d48 <__retarget_lock_release_recursive>
 8032f62:	e7f3      	b.n	8032f4c <_vfiprintf_r+0x44>
 8032f64:	2300      	movs	r3, #0
 8032f66:	f8cd 800c 	str.w	r8, [sp, #12]
 8032f6a:	f04f 0901 	mov.w	r9, #1
 8032f6e:	f8df 81b4 	ldr.w	r8, [pc, #436]	@ 8033124 <_vfiprintf_r+0x21c>
 8032f72:	9309      	str	r3, [sp, #36]	@ 0x24
 8032f74:	2320      	movs	r3, #32
 8032f76:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 8032f7a:	2330      	movs	r3, #48	@ 0x30
 8032f7c:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 8032f80:	4623      	mov	r3, r4
 8032f82:	469a      	mov	sl, r3
 8032f84:	f813 2b01 	ldrb.w	r2, [r3], #1
 8032f88:	b10a      	cbz	r2, 8032f8e <_vfiprintf_r+0x86>
 8032f8a:	2a25      	cmp	r2, #37	@ 0x25
 8032f8c:	d1f9      	bne.n	8032f82 <_vfiprintf_r+0x7a>
 8032f8e:	ebba 0b04 	subs.w	fp, sl, r4
 8032f92:	d00b      	beq.n	8032fac <_vfiprintf_r+0xa4>
 8032f94:	465b      	mov	r3, fp
 8032f96:	4622      	mov	r2, r4
 8032f98:	4629      	mov	r1, r5
 8032f9a:	4630      	mov	r0, r6
 8032f9c:	f7ff ffa1 	bl	8032ee2 <__sfputs_r>
 8032fa0:	3001      	adds	r0, #1
 8032fa2:	f000 80a7 	beq.w	80330f4 <_vfiprintf_r+0x1ec>
 8032fa6:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8032fa8:	445a      	add	r2, fp
 8032faa:	9209      	str	r2, [sp, #36]	@ 0x24
 8032fac:	f89a 3000 	ldrb.w	r3, [sl]
 8032fb0:	2b00      	cmp	r3, #0
 8032fb2:	f000 809f 	beq.w	80330f4 <_vfiprintf_r+0x1ec>
 8032fb6:	2300      	movs	r3, #0
 8032fb8:	f04f 32ff 	mov.w	r2, #4294967295
 8032fbc:	f10a 0a01 	add.w	sl, sl, #1
 8032fc0:	9304      	str	r3, [sp, #16]
 8032fc2:	9307      	str	r3, [sp, #28]
 8032fc4:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 8032fc8:	931a      	str	r3, [sp, #104]	@ 0x68
 8032fca:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8032fce:	4654      	mov	r4, sl
 8032fd0:	2205      	movs	r2, #5
 8032fd2:	4854      	ldr	r0, [pc, #336]	@ (8033124 <_vfiprintf_r+0x21c>)
 8032fd4:	f814 1b01 	ldrb.w	r1, [r4], #1
 8032fd8:	f000 fb80 	bl	80336dc <memchr>
 8032fdc:	9a04      	ldr	r2, [sp, #16]
 8032fde:	b9d8      	cbnz	r0, 8033018 <_vfiprintf_r+0x110>
 8032fe0:	06d1      	lsls	r1, r2, #27
 8032fe2:	bf44      	itt	mi
 8032fe4:	2320      	movmi	r3, #32
 8032fe6:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8032fea:	0713      	lsls	r3, r2, #28
 8032fec:	bf44      	itt	mi
 8032fee:	232b      	movmi	r3, #43	@ 0x2b
 8032ff0:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8032ff4:	f89a 3000 	ldrb.w	r3, [sl]
 8032ff8:	2b2a      	cmp	r3, #42	@ 0x2a
 8032ffa:	d015      	beq.n	8033028 <_vfiprintf_r+0x120>
 8032ffc:	9a07      	ldr	r2, [sp, #28]
 8032ffe:	4654      	mov	r4, sl
 8033000:	2000      	movs	r0, #0
 8033002:	f04f 0c0a 	mov.w	ip, #10
 8033006:	4621      	mov	r1, r4
 8033008:	f811 3b01 	ldrb.w	r3, [r1], #1
 803300c:	3b30      	subs	r3, #48	@ 0x30
 803300e:	2b09      	cmp	r3, #9
 8033010:	d94b      	bls.n	80330aa <_vfiprintf_r+0x1a2>
 8033012:	b1b0      	cbz	r0, 8033042 <_vfiprintf_r+0x13a>
 8033014:	9207      	str	r2, [sp, #28]
 8033016:	e014      	b.n	8033042 <_vfiprintf_r+0x13a>
 8033018:	eba0 0308 	sub.w	r3, r0, r8
 803301c:	46a2      	mov	sl, r4
 803301e:	fa09 f303 	lsl.w	r3, r9, r3
 8033022:	4313      	orrs	r3, r2
 8033024:	9304      	str	r3, [sp, #16]
 8033026:	e7d2      	b.n	8032fce <_vfiprintf_r+0xc6>
 8033028:	9b03      	ldr	r3, [sp, #12]
 803302a:	1d19      	adds	r1, r3, #4
 803302c:	681b      	ldr	r3, [r3, #0]
 803302e:	2b00      	cmp	r3, #0
 8033030:	9103      	str	r1, [sp, #12]
 8033032:	bfbb      	ittet	lt
 8033034:	425b      	neglt	r3, r3
 8033036:	f042 0202 	orrlt.w	r2, r2, #2
 803303a:	9307      	strge	r3, [sp, #28]
 803303c:	9307      	strlt	r3, [sp, #28]
 803303e:	bfb8      	it	lt
 8033040:	9204      	strlt	r2, [sp, #16]
 8033042:	7823      	ldrb	r3, [r4, #0]
 8033044:	2b2e      	cmp	r3, #46	@ 0x2e
 8033046:	d10a      	bne.n	803305e <_vfiprintf_r+0x156>
 8033048:	7863      	ldrb	r3, [r4, #1]
 803304a:	2b2a      	cmp	r3, #42	@ 0x2a
 803304c:	d132      	bne.n	80330b4 <_vfiprintf_r+0x1ac>
 803304e:	9b03      	ldr	r3, [sp, #12]
 8033050:	3402      	adds	r4, #2
 8033052:	1d1a      	adds	r2, r3, #4
 8033054:	681b      	ldr	r3, [r3, #0]
 8033056:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 803305a:	9203      	str	r2, [sp, #12]
 803305c:	9305      	str	r3, [sp, #20]
 803305e:	f8df a0d4 	ldr.w	sl, [pc, #212]	@ 8033134 <_vfiprintf_r+0x22c>
 8033062:	2203      	movs	r2, #3
 8033064:	7821      	ldrb	r1, [r4, #0]
 8033066:	4650      	mov	r0, sl
 8033068:	f000 fb38 	bl	80336dc <memchr>
 803306c:	b138      	cbz	r0, 803307e <_vfiprintf_r+0x176>
 803306e:	eba0 000a 	sub.w	r0, r0, sl
 8033072:	2240      	movs	r2, #64	@ 0x40
 8033074:	9b04      	ldr	r3, [sp, #16]
 8033076:	3401      	adds	r4, #1
 8033078:	4082      	lsls	r2, r0
 803307a:	4313      	orrs	r3, r2
 803307c:	9304      	str	r3, [sp, #16]
 803307e:	f814 1b01 	ldrb.w	r1, [r4], #1
 8033082:	2206      	movs	r2, #6
 8033084:	4828      	ldr	r0, [pc, #160]	@ (8033128 <_vfiprintf_r+0x220>)
 8033086:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 803308a:	f000 fb27 	bl	80336dc <memchr>
 803308e:	2800      	cmp	r0, #0
 8033090:	d03f      	beq.n	8033112 <_vfiprintf_r+0x20a>
 8033092:	4b26      	ldr	r3, [pc, #152]	@ (803312c <_vfiprintf_r+0x224>)
 8033094:	bb1b      	cbnz	r3, 80330de <_vfiprintf_r+0x1d6>
 8033096:	9b03      	ldr	r3, [sp, #12]
 8033098:	3307      	adds	r3, #7
 803309a:	f023 0307 	bic.w	r3, r3, #7
 803309e:	3308      	adds	r3, #8
 80330a0:	9303      	str	r3, [sp, #12]
 80330a2:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80330a4:	443b      	add	r3, r7
 80330a6:	9309      	str	r3, [sp, #36]	@ 0x24
 80330a8:	e76a      	b.n	8032f80 <_vfiprintf_r+0x78>
 80330aa:	fb0c 3202 	mla	r2, ip, r2, r3
 80330ae:	460c      	mov	r4, r1
 80330b0:	2001      	movs	r0, #1
 80330b2:	e7a8      	b.n	8033006 <_vfiprintf_r+0xfe>
 80330b4:	2300      	movs	r3, #0
 80330b6:	3401      	adds	r4, #1
 80330b8:	f04f 0c0a 	mov.w	ip, #10
 80330bc:	4619      	mov	r1, r3
 80330be:	9305      	str	r3, [sp, #20]
 80330c0:	4620      	mov	r0, r4
 80330c2:	f810 2b01 	ldrb.w	r2, [r0], #1
 80330c6:	3a30      	subs	r2, #48	@ 0x30
 80330c8:	2a09      	cmp	r2, #9
 80330ca:	d903      	bls.n	80330d4 <_vfiprintf_r+0x1cc>
 80330cc:	2b00      	cmp	r3, #0
 80330ce:	d0c6      	beq.n	803305e <_vfiprintf_r+0x156>
 80330d0:	9105      	str	r1, [sp, #20]
 80330d2:	e7c4      	b.n	803305e <_vfiprintf_r+0x156>
 80330d4:	fb0c 2101 	mla	r1, ip, r1, r2
 80330d8:	4604      	mov	r4, r0
 80330da:	2301      	movs	r3, #1
 80330dc:	e7f0      	b.n	80330c0 <_vfiprintf_r+0x1b8>
 80330de:	ab03      	add	r3, sp, #12
 80330e0:	462a      	mov	r2, r5
 80330e2:	a904      	add	r1, sp, #16
 80330e4:	4630      	mov	r0, r6
 80330e6:	9300      	str	r3, [sp, #0]
 80330e8:	4b11      	ldr	r3, [pc, #68]	@ (8033130 <_vfiprintf_r+0x228>)
 80330ea:	f3af 8000 	nop.w
 80330ee:	4607      	mov	r7, r0
 80330f0:	1c78      	adds	r0, r7, #1
 80330f2:	d1d6      	bne.n	80330a2 <_vfiprintf_r+0x19a>
 80330f4:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 80330f6:	07d9      	lsls	r1, r3, #31
 80330f8:	d405      	bmi.n	8033106 <_vfiprintf_r+0x1fe>
 80330fa:	89ab      	ldrh	r3, [r5, #12]
 80330fc:	059a      	lsls	r2, r3, #22
 80330fe:	d402      	bmi.n	8033106 <_vfiprintf_r+0x1fe>
 8033100:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8033102:	f7ff fe21 	bl	8032d48 <__retarget_lock_release_recursive>
 8033106:	89ab      	ldrh	r3, [r5, #12]
 8033108:	065b      	lsls	r3, r3, #25
 803310a:	f53f af1f 	bmi.w	8032f4c <_vfiprintf_r+0x44>
 803310e:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8033110:	e71e      	b.n	8032f50 <_vfiprintf_r+0x48>
 8033112:	ab03      	add	r3, sp, #12
 8033114:	462a      	mov	r2, r5
 8033116:	a904      	add	r1, sp, #16
 8033118:	4630      	mov	r0, r6
 803311a:	9300      	str	r3, [sp, #0]
 803311c:	4b04      	ldr	r3, [pc, #16]	@ (8033130 <_vfiprintf_r+0x228>)
 803311e:	f000 f87d 	bl	803321c <_printf_i>
 8033122:	e7e4      	b.n	80330ee <_vfiprintf_r+0x1e6>
 8033124:	08038944 	.word	0x08038944
 8033128:	0803894e 	.word	0x0803894e
 803312c:	00000000 	.word	0x00000000
 8033130:	08032ee3 	.word	0x08032ee3
 8033134:	0803894a 	.word	0x0803894a

08033138 <_printf_common>:
 8033138:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 803313c:	4616      	mov	r6, r2
 803313e:	4698      	mov	r8, r3
 8033140:	688a      	ldr	r2, [r1, #8]
 8033142:	4607      	mov	r7, r0
 8033144:	690b      	ldr	r3, [r1, #16]
 8033146:	460c      	mov	r4, r1
 8033148:	f8dd 9020 	ldr.w	r9, [sp, #32]
 803314c:	4293      	cmp	r3, r2
 803314e:	bfb8      	it	lt
 8033150:	4613      	movlt	r3, r2
 8033152:	6033      	str	r3, [r6, #0]
 8033154:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
 8033158:	b10a      	cbz	r2, 803315e <_printf_common+0x26>
 803315a:	3301      	adds	r3, #1
 803315c:	6033      	str	r3, [r6, #0]
 803315e:	6823      	ldr	r3, [r4, #0]
 8033160:	0699      	lsls	r1, r3, #26
 8033162:	bf42      	ittt	mi
 8033164:	6833      	ldrmi	r3, [r6, #0]
 8033166:	3302      	addmi	r3, #2
 8033168:	6033      	strmi	r3, [r6, #0]
 803316a:	6825      	ldr	r5, [r4, #0]
 803316c:	f015 0506 	ands.w	r5, r5, #6
 8033170:	d106      	bne.n	8033180 <_printf_common+0x48>
 8033172:	f104 0a19 	add.w	sl, r4, #25
 8033176:	68e3      	ldr	r3, [r4, #12]
 8033178:	6832      	ldr	r2, [r6, #0]
 803317a:	1a9b      	subs	r3, r3, r2
 803317c:	42ab      	cmp	r3, r5
 803317e:	dc2b      	bgt.n	80331d8 <_printf_common+0xa0>
 8033180:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
 8033184:	6822      	ldr	r2, [r4, #0]
 8033186:	3b00      	subs	r3, #0
 8033188:	bf18      	it	ne
 803318a:	2301      	movne	r3, #1
 803318c:	0692      	lsls	r2, r2, #26
 803318e:	d430      	bmi.n	80331f2 <_printf_common+0xba>
 8033190:	f104 0243 	add.w	r2, r4, #67	@ 0x43
 8033194:	4641      	mov	r1, r8
 8033196:	4638      	mov	r0, r7
 8033198:	47c8      	blx	r9
 803319a:	3001      	adds	r0, #1
 803319c:	d023      	beq.n	80331e6 <_printf_common+0xae>
 803319e:	6823      	ldr	r3, [r4, #0]
 80331a0:	341a      	adds	r4, #26
 80331a2:	f854 2c0a 	ldr.w	r2, [r4, #-10]
 80331a6:	f003 0306 	and.w	r3, r3, #6
 80331aa:	2b04      	cmp	r3, #4
 80331ac:	bf0a      	itet	eq
 80331ae:	f854 5c0e 	ldreq.w	r5, [r4, #-14]
 80331b2:	2500      	movne	r5, #0
 80331b4:	6833      	ldreq	r3, [r6, #0]
 80331b6:	f04f 0600 	mov.w	r6, #0
 80331ba:	bf08      	it	eq
 80331bc:	1aed      	subeq	r5, r5, r3
 80331be:	f854 3c12 	ldr.w	r3, [r4, #-18]
 80331c2:	bf08      	it	eq
 80331c4:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 80331c8:	4293      	cmp	r3, r2
 80331ca:	bfc4      	itt	gt
 80331cc:	1a9b      	subgt	r3, r3, r2
 80331ce:	18ed      	addgt	r5, r5, r3
 80331d0:	42b5      	cmp	r5, r6
 80331d2:	d11a      	bne.n	803320a <_printf_common+0xd2>
 80331d4:	2000      	movs	r0, #0
 80331d6:	e008      	b.n	80331ea <_printf_common+0xb2>
 80331d8:	2301      	movs	r3, #1
 80331da:	4652      	mov	r2, sl
 80331dc:	4641      	mov	r1, r8
 80331de:	4638      	mov	r0, r7
 80331e0:	47c8      	blx	r9
 80331e2:	3001      	adds	r0, #1
 80331e4:	d103      	bne.n	80331ee <_printf_common+0xb6>
 80331e6:	f04f 30ff 	mov.w	r0, #4294967295
 80331ea:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80331ee:	3501      	adds	r5, #1
 80331f0:	e7c1      	b.n	8033176 <_printf_common+0x3e>
 80331f2:	18e1      	adds	r1, r4, r3
 80331f4:	1c5a      	adds	r2, r3, #1
 80331f6:	2030      	movs	r0, #48	@ 0x30
 80331f8:	3302      	adds	r3, #2
 80331fa:	4422      	add	r2, r4
 80331fc:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
 8033200:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
 8033204:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
 8033208:	e7c2      	b.n	8033190 <_printf_common+0x58>
 803320a:	2301      	movs	r3, #1
 803320c:	4622      	mov	r2, r4
 803320e:	4641      	mov	r1, r8
 8033210:	4638      	mov	r0, r7
 8033212:	47c8      	blx	r9
 8033214:	3001      	adds	r0, #1
 8033216:	d0e6      	beq.n	80331e6 <_printf_common+0xae>
 8033218:	3601      	adds	r6, #1
 803321a:	e7d9      	b.n	80331d0 <_printf_common+0x98>

0803321c <_printf_i>:
 803321c:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8033220:	7e0f      	ldrb	r7, [r1, #24]
 8033222:	4691      	mov	r9, r2
 8033224:	4680      	mov	r8, r0
 8033226:	460c      	mov	r4, r1
 8033228:	2f78      	cmp	r7, #120	@ 0x78
 803322a:	469a      	mov	sl, r3
 803322c:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 803322e:	f101 0243 	add.w	r2, r1, #67	@ 0x43
 8033232:	d807      	bhi.n	8033244 <_printf_i+0x28>
 8033234:	2f62      	cmp	r7, #98	@ 0x62
 8033236:	d80a      	bhi.n	803324e <_printf_i+0x32>
 8033238:	2f00      	cmp	r7, #0
 803323a:	f000 80d2 	beq.w	80333e2 <_printf_i+0x1c6>
 803323e:	2f58      	cmp	r7, #88	@ 0x58
 8033240:	f000 80b9 	beq.w	80333b6 <_printf_i+0x19a>
 8033244:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8033248:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
 803324c:	e03a      	b.n	80332c4 <_printf_i+0xa8>
 803324e:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
 8033252:	2b15      	cmp	r3, #21
 8033254:	d8f6      	bhi.n	8033244 <_printf_i+0x28>
 8033256:	a101      	add	r1, pc, #4	@ (adr r1, 803325c <_printf_i+0x40>)
 8033258:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 803325c:	080332b5 	.word	0x080332b5
 8033260:	080332c9 	.word	0x080332c9
 8033264:	08033245 	.word	0x08033245
 8033268:	08033245 	.word	0x08033245
 803326c:	08033245 	.word	0x08033245
 8033270:	08033245 	.word	0x08033245
 8033274:	080332c9 	.word	0x080332c9
 8033278:	08033245 	.word	0x08033245
 803327c:	08033245 	.word	0x08033245
 8033280:	08033245 	.word	0x08033245
 8033284:	08033245 	.word	0x08033245
 8033288:	080333c9 	.word	0x080333c9
 803328c:	080332f3 	.word	0x080332f3
 8033290:	08033383 	.word	0x08033383
 8033294:	08033245 	.word	0x08033245
 8033298:	08033245 	.word	0x08033245
 803329c:	080333eb 	.word	0x080333eb
 80332a0:	08033245 	.word	0x08033245
 80332a4:	080332f3 	.word	0x080332f3
 80332a8:	08033245 	.word	0x08033245
 80332ac:	08033245 	.word	0x08033245
 80332b0:	0803338b 	.word	0x0803338b
 80332b4:	6833      	ldr	r3, [r6, #0]
 80332b6:	1d1a      	adds	r2, r3, #4
 80332b8:	681b      	ldr	r3, [r3, #0]
 80332ba:	6032      	str	r2, [r6, #0]
 80332bc:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 80332c0:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 80332c4:	2301      	movs	r3, #1
 80332c6:	e09d      	b.n	8033404 <_printf_i+0x1e8>
 80332c8:	6833      	ldr	r3, [r6, #0]
 80332ca:	6820      	ldr	r0, [r4, #0]
 80332cc:	1d19      	adds	r1, r3, #4
 80332ce:	6031      	str	r1, [r6, #0]
 80332d0:	0606      	lsls	r6, r0, #24
 80332d2:	d501      	bpl.n	80332d8 <_printf_i+0xbc>
 80332d4:	681d      	ldr	r5, [r3, #0]
 80332d6:	e003      	b.n	80332e0 <_printf_i+0xc4>
 80332d8:	0645      	lsls	r5, r0, #25
 80332da:	d5fb      	bpl.n	80332d4 <_printf_i+0xb8>
 80332dc:	f9b3 5000 	ldrsh.w	r5, [r3]
 80332e0:	2d00      	cmp	r5, #0
 80332e2:	da03      	bge.n	80332ec <_printf_i+0xd0>
 80332e4:	232d      	movs	r3, #45	@ 0x2d
 80332e6:	426d      	negs	r5, r5
 80332e8:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 80332ec:	4859      	ldr	r0, [pc, #356]	@ (8033454 <_printf_i+0x238>)
 80332ee:	230a      	movs	r3, #10
 80332f0:	e011      	b.n	8033316 <_printf_i+0xfa>
 80332f2:	6821      	ldr	r1, [r4, #0]
 80332f4:	6833      	ldr	r3, [r6, #0]
 80332f6:	0608      	lsls	r0, r1, #24
 80332f8:	f853 5b04 	ldr.w	r5, [r3], #4
 80332fc:	d402      	bmi.n	8033304 <_printf_i+0xe8>
 80332fe:	0649      	lsls	r1, r1, #25
 8033300:	bf48      	it	mi
 8033302:	b2ad      	uxthmi	r5, r5
 8033304:	2f6f      	cmp	r7, #111	@ 0x6f
 8033306:	6033      	str	r3, [r6, #0]
 8033308:	4852      	ldr	r0, [pc, #328]	@ (8033454 <_printf_i+0x238>)
 803330a:	bf14      	ite	ne
 803330c:	230a      	movne	r3, #10
 803330e:	2308      	moveq	r3, #8
 8033310:	2100      	movs	r1, #0
 8033312:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
 8033316:	6866      	ldr	r6, [r4, #4]
 8033318:	2e00      	cmp	r6, #0
 803331a:	60a6      	str	r6, [r4, #8]
 803331c:	bfa2      	ittt	ge
 803331e:	6821      	ldrge	r1, [r4, #0]
 8033320:	f021 0104 	bicge.w	r1, r1, #4
 8033324:	6021      	strge	r1, [r4, #0]
 8033326:	b90d      	cbnz	r5, 803332c <_printf_i+0x110>
 8033328:	2e00      	cmp	r6, #0
 803332a:	d04b      	beq.n	80333c4 <_printf_i+0x1a8>
 803332c:	4616      	mov	r6, r2
 803332e:	fbb5 f1f3 	udiv	r1, r5, r3
 8033332:	fb03 5711 	mls	r7, r3, r1, r5
 8033336:	5dc7      	ldrb	r7, [r0, r7]
 8033338:	f806 7d01 	strb.w	r7, [r6, #-1]!
 803333c:	462f      	mov	r7, r5
 803333e:	460d      	mov	r5, r1
 8033340:	42bb      	cmp	r3, r7
 8033342:	d9f4      	bls.n	803332e <_printf_i+0x112>
 8033344:	2b08      	cmp	r3, #8
 8033346:	d10b      	bne.n	8033360 <_printf_i+0x144>
 8033348:	6823      	ldr	r3, [r4, #0]
 803334a:	07df      	lsls	r7, r3, #31
 803334c:	d508      	bpl.n	8033360 <_printf_i+0x144>
 803334e:	6923      	ldr	r3, [r4, #16]
 8033350:	6861      	ldr	r1, [r4, #4]
 8033352:	4299      	cmp	r1, r3
 8033354:	bfde      	ittt	le
 8033356:	2330      	movle	r3, #48	@ 0x30
 8033358:	f806 3c01 	strble.w	r3, [r6, #-1]
 803335c:	f106 36ff 	addle.w	r6, r6, #4294967295
 8033360:	1b92      	subs	r2, r2, r6
 8033362:	6122      	str	r2, [r4, #16]
 8033364:	464b      	mov	r3, r9
 8033366:	aa03      	add	r2, sp, #12
 8033368:	4621      	mov	r1, r4
 803336a:	4640      	mov	r0, r8
 803336c:	f8cd a000 	str.w	sl, [sp]
 8033370:	f7ff fee2 	bl	8033138 <_printf_common>
 8033374:	3001      	adds	r0, #1
 8033376:	d14a      	bne.n	803340e <_printf_i+0x1f2>
 8033378:	f04f 30ff 	mov.w	r0, #4294967295
 803337c:	b004      	add	sp, #16
 803337e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8033382:	6823      	ldr	r3, [r4, #0]
 8033384:	f043 0320 	orr.w	r3, r3, #32
 8033388:	6023      	str	r3, [r4, #0]
 803338a:	2778      	movs	r7, #120	@ 0x78
 803338c:	4832      	ldr	r0, [pc, #200]	@ (8033458 <_printf_i+0x23c>)
 803338e:	6823      	ldr	r3, [r4, #0]
 8033390:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 8033394:	061f      	lsls	r7, r3, #24
 8033396:	6831      	ldr	r1, [r6, #0]
 8033398:	f851 5b04 	ldr.w	r5, [r1], #4
 803339c:	d402      	bmi.n	80333a4 <_printf_i+0x188>
 803339e:	065f      	lsls	r7, r3, #25
 80333a0:	bf48      	it	mi
 80333a2:	b2ad      	uxthmi	r5, r5
 80333a4:	6031      	str	r1, [r6, #0]
 80333a6:	07d9      	lsls	r1, r3, #31
 80333a8:	bf44      	itt	mi
 80333aa:	f043 0320 	orrmi.w	r3, r3, #32
 80333ae:	6023      	strmi	r3, [r4, #0]
 80333b0:	b11d      	cbz	r5, 80333ba <_printf_i+0x19e>
 80333b2:	2310      	movs	r3, #16
 80333b4:	e7ac      	b.n	8033310 <_printf_i+0xf4>
 80333b6:	4827      	ldr	r0, [pc, #156]	@ (8033454 <_printf_i+0x238>)
 80333b8:	e7e9      	b.n	803338e <_printf_i+0x172>
 80333ba:	6823      	ldr	r3, [r4, #0]
 80333bc:	f023 0320 	bic.w	r3, r3, #32
 80333c0:	6023      	str	r3, [r4, #0]
 80333c2:	e7f6      	b.n	80333b2 <_printf_i+0x196>
 80333c4:	4616      	mov	r6, r2
 80333c6:	e7bd      	b.n	8033344 <_printf_i+0x128>
 80333c8:	6833      	ldr	r3, [r6, #0]
 80333ca:	6825      	ldr	r5, [r4, #0]
 80333cc:	1d18      	adds	r0, r3, #4
 80333ce:	6961      	ldr	r1, [r4, #20]
 80333d0:	6030      	str	r0, [r6, #0]
 80333d2:	062e      	lsls	r6, r5, #24
 80333d4:	681b      	ldr	r3, [r3, #0]
 80333d6:	d501      	bpl.n	80333dc <_printf_i+0x1c0>
 80333d8:	6019      	str	r1, [r3, #0]
 80333da:	e002      	b.n	80333e2 <_printf_i+0x1c6>
 80333dc:	0668      	lsls	r0, r5, #25
 80333de:	d5fb      	bpl.n	80333d8 <_printf_i+0x1bc>
 80333e0:	8019      	strh	r1, [r3, #0]
 80333e2:	2300      	movs	r3, #0
 80333e4:	4616      	mov	r6, r2
 80333e6:	6123      	str	r3, [r4, #16]
 80333e8:	e7bc      	b.n	8033364 <_printf_i+0x148>
 80333ea:	6833      	ldr	r3, [r6, #0]
 80333ec:	2100      	movs	r1, #0
 80333ee:	1d1a      	adds	r2, r3, #4
 80333f0:	6032      	str	r2, [r6, #0]
 80333f2:	681e      	ldr	r6, [r3, #0]
 80333f4:	6862      	ldr	r2, [r4, #4]
 80333f6:	4630      	mov	r0, r6
 80333f8:	f000 f970 	bl	80336dc <memchr>
 80333fc:	b108      	cbz	r0, 8033402 <_printf_i+0x1e6>
 80333fe:	1b80      	subs	r0, r0, r6
 8033400:	6060      	str	r0, [r4, #4]
 8033402:	6863      	ldr	r3, [r4, #4]
 8033404:	6123      	str	r3, [r4, #16]
 8033406:	2300      	movs	r3, #0
 8033408:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 803340c:	e7aa      	b.n	8033364 <_printf_i+0x148>
 803340e:	6923      	ldr	r3, [r4, #16]
 8033410:	4632      	mov	r2, r6
 8033412:	4649      	mov	r1, r9
 8033414:	4640      	mov	r0, r8
 8033416:	47d0      	blx	sl
 8033418:	3001      	adds	r0, #1
 803341a:	d0ad      	beq.n	8033378 <_printf_i+0x15c>
 803341c:	6823      	ldr	r3, [r4, #0]
 803341e:	079b      	lsls	r3, r3, #30
 8033420:	d413      	bmi.n	803344a <_printf_i+0x22e>
 8033422:	68e0      	ldr	r0, [r4, #12]
 8033424:	9b03      	ldr	r3, [sp, #12]
 8033426:	4298      	cmp	r0, r3
 8033428:	bfb8      	it	lt
 803342a:	4618      	movlt	r0, r3
 803342c:	e7a6      	b.n	803337c <_printf_i+0x160>
 803342e:	2301      	movs	r3, #1
 8033430:	4632      	mov	r2, r6
 8033432:	4649      	mov	r1, r9
 8033434:	4640      	mov	r0, r8
 8033436:	47d0      	blx	sl
 8033438:	3001      	adds	r0, #1
 803343a:	d09d      	beq.n	8033378 <_printf_i+0x15c>
 803343c:	3501      	adds	r5, #1
 803343e:	68e3      	ldr	r3, [r4, #12]
 8033440:	9903      	ldr	r1, [sp, #12]
 8033442:	1a5b      	subs	r3, r3, r1
 8033444:	42ab      	cmp	r3, r5
 8033446:	dcf2      	bgt.n	803342e <_printf_i+0x212>
 8033448:	e7eb      	b.n	8033422 <_printf_i+0x206>
 803344a:	2500      	movs	r5, #0
 803344c:	f104 0619 	add.w	r6, r4, #25
 8033450:	e7f5      	b.n	803343e <_printf_i+0x222>
 8033452:	bf00      	nop
 8033454:	08038955 	.word	0x08038955
 8033458:	08038966 	.word	0x08038966

0803345c <__sflush_r>:
 803345c:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 8033460:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8033464:	0716      	lsls	r6, r2, #28
 8033466:	4605      	mov	r5, r0
 8033468:	460c      	mov	r4, r1
 803346a:	d454      	bmi.n	8033516 <__sflush_r+0xba>
 803346c:	684b      	ldr	r3, [r1, #4]
 803346e:	2b00      	cmp	r3, #0
 8033470:	dc02      	bgt.n	8033478 <__sflush_r+0x1c>
 8033472:	6c0b      	ldr	r3, [r1, #64]	@ 0x40
 8033474:	2b00      	cmp	r3, #0
 8033476:	dd48      	ble.n	803350a <__sflush_r+0xae>
 8033478:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 803347a:	2e00      	cmp	r6, #0
 803347c:	d045      	beq.n	803350a <__sflush_r+0xae>
 803347e:	2300      	movs	r3, #0
 8033480:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
 8033484:	682f      	ldr	r7, [r5, #0]
 8033486:	6a21      	ldr	r1, [r4, #32]
 8033488:	602b      	str	r3, [r5, #0]
 803348a:	d030      	beq.n	80334ee <__sflush_r+0x92>
 803348c:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 803348e:	89a3      	ldrh	r3, [r4, #12]
 8033490:	0759      	lsls	r1, r3, #29
 8033492:	d505      	bpl.n	80334a0 <__sflush_r+0x44>
 8033494:	6863      	ldr	r3, [r4, #4]
 8033496:	1ad2      	subs	r2, r2, r3
 8033498:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 803349a:	b10b      	cbz	r3, 80334a0 <__sflush_r+0x44>
 803349c:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 803349e:	1ad2      	subs	r2, r2, r3
 80334a0:	2300      	movs	r3, #0
 80334a2:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 80334a4:	6a21      	ldr	r1, [r4, #32]
 80334a6:	4628      	mov	r0, r5
 80334a8:	47b0      	blx	r6
 80334aa:	1c43      	adds	r3, r0, #1
 80334ac:	89a3      	ldrh	r3, [r4, #12]
 80334ae:	d106      	bne.n	80334be <__sflush_r+0x62>
 80334b0:	6829      	ldr	r1, [r5, #0]
 80334b2:	291d      	cmp	r1, #29
 80334b4:	d82b      	bhi.n	803350e <__sflush_r+0xb2>
 80334b6:	4a2a      	ldr	r2, [pc, #168]	@ (8033560 <__sflush_r+0x104>)
 80334b8:	410a      	asrs	r2, r1
 80334ba:	07d6      	lsls	r6, r2, #31
 80334bc:	d427      	bmi.n	803350e <__sflush_r+0xb2>
 80334be:	2200      	movs	r2, #0
 80334c0:	04d9      	lsls	r1, r3, #19
 80334c2:	6062      	str	r2, [r4, #4]
 80334c4:	6922      	ldr	r2, [r4, #16]
 80334c6:	6022      	str	r2, [r4, #0]
 80334c8:	d504      	bpl.n	80334d4 <__sflush_r+0x78>
 80334ca:	1c42      	adds	r2, r0, #1
 80334cc:	d101      	bne.n	80334d2 <__sflush_r+0x76>
 80334ce:	682b      	ldr	r3, [r5, #0]
 80334d0:	b903      	cbnz	r3, 80334d4 <__sflush_r+0x78>
 80334d2:	6560      	str	r0, [r4, #84]	@ 0x54
 80334d4:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 80334d6:	602f      	str	r7, [r5, #0]
 80334d8:	b1b9      	cbz	r1, 803350a <__sflush_r+0xae>
 80334da:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 80334de:	4299      	cmp	r1, r3
 80334e0:	d002      	beq.n	80334e8 <__sflush_r+0x8c>
 80334e2:	4628      	mov	r0, r5
 80334e4:	f7ff fc9c 	bl	8032e20 <_free_r>
 80334e8:	2300      	movs	r3, #0
 80334ea:	6363      	str	r3, [r4, #52]	@ 0x34
 80334ec:	e00d      	b.n	803350a <__sflush_r+0xae>
 80334ee:	2301      	movs	r3, #1
 80334f0:	4628      	mov	r0, r5
 80334f2:	47b0      	blx	r6
 80334f4:	4602      	mov	r2, r0
 80334f6:	1c50      	adds	r0, r2, #1
 80334f8:	d1c9      	bne.n	803348e <__sflush_r+0x32>
 80334fa:	682b      	ldr	r3, [r5, #0]
 80334fc:	2b00      	cmp	r3, #0
 80334fe:	d0c6      	beq.n	803348e <__sflush_r+0x32>
 8033500:	2b1d      	cmp	r3, #29
 8033502:	d001      	beq.n	8033508 <__sflush_r+0xac>
 8033504:	2b16      	cmp	r3, #22
 8033506:	d11d      	bne.n	8033544 <__sflush_r+0xe8>
 8033508:	602f      	str	r7, [r5, #0]
 803350a:	2000      	movs	r0, #0
 803350c:	e021      	b.n	8033552 <__sflush_r+0xf6>
 803350e:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8033512:	b21b      	sxth	r3, r3
 8033514:	e01a      	b.n	803354c <__sflush_r+0xf0>
 8033516:	690f      	ldr	r7, [r1, #16]
 8033518:	2f00      	cmp	r7, #0
 803351a:	d0f6      	beq.n	803350a <__sflush_r+0xae>
 803351c:	0793      	lsls	r3, r2, #30
 803351e:	680e      	ldr	r6, [r1, #0]
 8033520:	600f      	str	r7, [r1, #0]
 8033522:	bf0c      	ite	eq
 8033524:	694b      	ldreq	r3, [r1, #20]
 8033526:	2300      	movne	r3, #0
 8033528:	eba6 0807 	sub.w	r8, r6, r7
 803352c:	608b      	str	r3, [r1, #8]
 803352e:	f1b8 0f00 	cmp.w	r8, #0
 8033532:	ddea      	ble.n	803350a <__sflush_r+0xae>
 8033534:	4643      	mov	r3, r8
 8033536:	463a      	mov	r2, r7
 8033538:	6a21      	ldr	r1, [r4, #32]
 803353a:	4628      	mov	r0, r5
 803353c:	6aa6      	ldr	r6, [r4, #40]	@ 0x28
 803353e:	47b0      	blx	r6
 8033540:	2800      	cmp	r0, #0
 8033542:	dc08      	bgt.n	8033556 <__sflush_r+0xfa>
 8033544:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8033548:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 803354c:	f04f 30ff 	mov.w	r0, #4294967295
 8033550:	81a3      	strh	r3, [r4, #12]
 8033552:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8033556:	4407      	add	r7, r0
 8033558:	eba8 0800 	sub.w	r8, r8, r0
 803355c:	e7e7      	b.n	803352e <__sflush_r+0xd2>
 803355e:	bf00      	nop
 8033560:	dfbffffe 	.word	0xdfbffffe

08033564 <_fflush_r>:
 8033564:	b538      	push	{r3, r4, r5, lr}
 8033566:	690b      	ldr	r3, [r1, #16]
 8033568:	4605      	mov	r5, r0
 803356a:	460c      	mov	r4, r1
 803356c:	b913      	cbnz	r3, 8033574 <_fflush_r+0x10>
 803356e:	2500      	movs	r5, #0
 8033570:	4628      	mov	r0, r5
 8033572:	bd38      	pop	{r3, r4, r5, pc}
 8033574:	b118      	cbz	r0, 803357e <_fflush_r+0x1a>
 8033576:	6a03      	ldr	r3, [r0, #32]
 8033578:	b90b      	cbnz	r3, 803357e <_fflush_r+0x1a>
 803357a:	f7ff fa79 	bl	8032a70 <__sinit>
 803357e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8033582:	2b00      	cmp	r3, #0
 8033584:	d0f3      	beq.n	803356e <_fflush_r+0xa>
 8033586:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 8033588:	07d0      	lsls	r0, r2, #31
 803358a:	d404      	bmi.n	8033596 <_fflush_r+0x32>
 803358c:	0599      	lsls	r1, r3, #22
 803358e:	d402      	bmi.n	8033596 <_fflush_r+0x32>
 8033590:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8033592:	f7ff fbd8 	bl	8032d46 <__retarget_lock_acquire_recursive>
 8033596:	4628      	mov	r0, r5
 8033598:	4621      	mov	r1, r4
 803359a:	f7ff ff5f 	bl	803345c <__sflush_r>
 803359e:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 80335a0:	4605      	mov	r5, r0
 80335a2:	07da      	lsls	r2, r3, #31
 80335a4:	d4e4      	bmi.n	8033570 <_fflush_r+0xc>
 80335a6:	89a3      	ldrh	r3, [r4, #12]
 80335a8:	059b      	lsls	r3, r3, #22
 80335aa:	d4e1      	bmi.n	8033570 <_fflush_r+0xc>
 80335ac:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 80335ae:	f7ff fbcb 	bl	8032d48 <__retarget_lock_release_recursive>
 80335b2:	e7dd      	b.n	8033570 <_fflush_r+0xc>

080335b4 <__swbuf_r>:
 80335b4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80335b6:	460e      	mov	r6, r1
 80335b8:	4614      	mov	r4, r2
 80335ba:	4605      	mov	r5, r0
 80335bc:	b118      	cbz	r0, 80335c6 <__swbuf_r+0x12>
 80335be:	6a03      	ldr	r3, [r0, #32]
 80335c0:	b90b      	cbnz	r3, 80335c6 <__swbuf_r+0x12>
 80335c2:	f7ff fa55 	bl	8032a70 <__sinit>
 80335c6:	69a3      	ldr	r3, [r4, #24]
 80335c8:	60a3      	str	r3, [r4, #8]
 80335ca:	89a3      	ldrh	r3, [r4, #12]
 80335cc:	071a      	lsls	r2, r3, #28
 80335ce:	d501      	bpl.n	80335d4 <__swbuf_r+0x20>
 80335d0:	6923      	ldr	r3, [r4, #16]
 80335d2:	b943      	cbnz	r3, 80335e6 <__swbuf_r+0x32>
 80335d4:	4621      	mov	r1, r4
 80335d6:	4628      	mov	r0, r5
 80335d8:	f000 f82a 	bl	8033630 <__swsetup_r>
 80335dc:	b118      	cbz	r0, 80335e6 <__swbuf_r+0x32>
 80335de:	f04f 37ff 	mov.w	r7, #4294967295
 80335e2:	4638      	mov	r0, r7
 80335e4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80335e6:	6823      	ldr	r3, [r4, #0]
 80335e8:	b2f6      	uxtb	r6, r6
 80335ea:	6922      	ldr	r2, [r4, #16]
 80335ec:	4637      	mov	r7, r6
 80335ee:	1a98      	subs	r0, r3, r2
 80335f0:	6963      	ldr	r3, [r4, #20]
 80335f2:	4283      	cmp	r3, r0
 80335f4:	dc05      	bgt.n	8033602 <__swbuf_r+0x4e>
 80335f6:	4621      	mov	r1, r4
 80335f8:	4628      	mov	r0, r5
 80335fa:	f7ff ffb3 	bl	8033564 <_fflush_r>
 80335fe:	2800      	cmp	r0, #0
 8033600:	d1ed      	bne.n	80335de <__swbuf_r+0x2a>
 8033602:	68a3      	ldr	r3, [r4, #8]
 8033604:	3b01      	subs	r3, #1
 8033606:	60a3      	str	r3, [r4, #8]
 8033608:	6823      	ldr	r3, [r4, #0]
 803360a:	1c5a      	adds	r2, r3, #1
 803360c:	6022      	str	r2, [r4, #0]
 803360e:	701e      	strb	r6, [r3, #0]
 8033610:	1c43      	adds	r3, r0, #1
 8033612:	6962      	ldr	r2, [r4, #20]
 8033614:	429a      	cmp	r2, r3
 8033616:	d004      	beq.n	8033622 <__swbuf_r+0x6e>
 8033618:	89a3      	ldrh	r3, [r4, #12]
 803361a:	07db      	lsls	r3, r3, #31
 803361c:	d5e1      	bpl.n	80335e2 <__swbuf_r+0x2e>
 803361e:	2e0a      	cmp	r6, #10
 8033620:	d1df      	bne.n	80335e2 <__swbuf_r+0x2e>
 8033622:	4621      	mov	r1, r4
 8033624:	4628      	mov	r0, r5
 8033626:	f7ff ff9d 	bl	8033564 <_fflush_r>
 803362a:	2800      	cmp	r0, #0
 803362c:	d0d9      	beq.n	80335e2 <__swbuf_r+0x2e>
 803362e:	e7d6      	b.n	80335de <__swbuf_r+0x2a>

08033630 <__swsetup_r>:
 8033630:	b538      	push	{r3, r4, r5, lr}
 8033632:	4b29      	ldr	r3, [pc, #164]	@ (80336d8 <__swsetup_r+0xa8>)
 8033634:	4605      	mov	r5, r0
 8033636:	460c      	mov	r4, r1
 8033638:	6818      	ldr	r0, [r3, #0]
 803363a:	b118      	cbz	r0, 8033644 <__swsetup_r+0x14>
 803363c:	6a03      	ldr	r3, [r0, #32]
 803363e:	b90b      	cbnz	r3, 8033644 <__swsetup_r+0x14>
 8033640:	f7ff fa16 	bl	8032a70 <__sinit>
 8033644:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8033648:	0719      	lsls	r1, r3, #28
 803364a:	d422      	bmi.n	8033692 <__swsetup_r+0x62>
 803364c:	06da      	lsls	r2, r3, #27
 803364e:	d407      	bmi.n	8033660 <__swsetup_r+0x30>
 8033650:	2209      	movs	r2, #9
 8033652:	602a      	str	r2, [r5, #0]
 8033654:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8033658:	f04f 30ff 	mov.w	r0, #4294967295
 803365c:	81a3      	strh	r3, [r4, #12]
 803365e:	e033      	b.n	80336c8 <__swsetup_r+0x98>
 8033660:	0758      	lsls	r0, r3, #29
 8033662:	d512      	bpl.n	803368a <__swsetup_r+0x5a>
 8033664:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8033666:	b141      	cbz	r1, 803367a <__swsetup_r+0x4a>
 8033668:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 803366c:	4299      	cmp	r1, r3
 803366e:	d002      	beq.n	8033676 <__swsetup_r+0x46>
 8033670:	4628      	mov	r0, r5
 8033672:	f7ff fbd5 	bl	8032e20 <_free_r>
 8033676:	2300      	movs	r3, #0
 8033678:	6363      	str	r3, [r4, #52]	@ 0x34
 803367a:	89a3      	ldrh	r3, [r4, #12]
 803367c:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
 8033680:	81a3      	strh	r3, [r4, #12]
 8033682:	2300      	movs	r3, #0
 8033684:	6063      	str	r3, [r4, #4]
 8033686:	6923      	ldr	r3, [r4, #16]
 8033688:	6023      	str	r3, [r4, #0]
 803368a:	89a3      	ldrh	r3, [r4, #12]
 803368c:	f043 0308 	orr.w	r3, r3, #8
 8033690:	81a3      	strh	r3, [r4, #12]
 8033692:	6923      	ldr	r3, [r4, #16]
 8033694:	b94b      	cbnz	r3, 80336aa <__swsetup_r+0x7a>
 8033696:	89a3      	ldrh	r3, [r4, #12]
 8033698:	f403 7320 	and.w	r3, r3, #640	@ 0x280
 803369c:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 80336a0:	d003      	beq.n	80336aa <__swsetup_r+0x7a>
 80336a2:	4621      	mov	r1, r4
 80336a4:	4628      	mov	r0, r5
 80336a6:	f000 f84c 	bl	8033742 <__smakebuf_r>
 80336aa:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80336ae:	f013 0201 	ands.w	r2, r3, #1
 80336b2:	d00a      	beq.n	80336ca <__swsetup_r+0x9a>
 80336b4:	2200      	movs	r2, #0
 80336b6:	60a2      	str	r2, [r4, #8]
 80336b8:	6962      	ldr	r2, [r4, #20]
 80336ba:	4252      	negs	r2, r2
 80336bc:	61a2      	str	r2, [r4, #24]
 80336be:	6922      	ldr	r2, [r4, #16]
 80336c0:	b942      	cbnz	r2, 80336d4 <__swsetup_r+0xa4>
 80336c2:	f013 0080 	ands.w	r0, r3, #128	@ 0x80
 80336c6:	d1c5      	bne.n	8033654 <__swsetup_r+0x24>
 80336c8:	bd38      	pop	{r3, r4, r5, pc}
 80336ca:	0799      	lsls	r1, r3, #30
 80336cc:	bf58      	it	pl
 80336ce:	6962      	ldrpl	r2, [r4, #20]
 80336d0:	60a2      	str	r2, [r4, #8]
 80336d2:	e7f4      	b.n	80336be <__swsetup_r+0x8e>
 80336d4:	2000      	movs	r0, #0
 80336d6:	e7f7      	b.n	80336c8 <__swsetup_r+0x98>
 80336d8:	20000254 	.word	0x20000254

080336dc <memchr>:
 80336dc:	b2c9      	uxtb	r1, r1
 80336de:	4603      	mov	r3, r0
 80336e0:	4402      	add	r2, r0
 80336e2:	b510      	push	{r4, lr}
 80336e4:	4293      	cmp	r3, r2
 80336e6:	4618      	mov	r0, r3
 80336e8:	d101      	bne.n	80336ee <memchr+0x12>
 80336ea:	2000      	movs	r0, #0
 80336ec:	e003      	b.n	80336f6 <memchr+0x1a>
 80336ee:	7804      	ldrb	r4, [r0, #0]
 80336f0:	3301      	adds	r3, #1
 80336f2:	428c      	cmp	r4, r1
 80336f4:	d1f6      	bne.n	80336e4 <memchr+0x8>
 80336f6:	bd10      	pop	{r4, pc}

080336f8 <__swhatbuf_r>:
 80336f8:	b570      	push	{r4, r5, r6, lr}
 80336fa:	460c      	mov	r4, r1
 80336fc:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8033700:	b096      	sub	sp, #88	@ 0x58
 8033702:	4615      	mov	r5, r2
 8033704:	2900      	cmp	r1, #0
 8033706:	461e      	mov	r6, r3
 8033708:	da0c      	bge.n	8033724 <__swhatbuf_r+0x2c>
 803370a:	89a3      	ldrh	r3, [r4, #12]
 803370c:	2100      	movs	r1, #0
 803370e:	f013 0f80 	tst.w	r3, #128	@ 0x80
 8033712:	bf14      	ite	ne
 8033714:	2340      	movne	r3, #64	@ 0x40
 8033716:	f44f 6380 	moveq.w	r3, #1024	@ 0x400
 803371a:	2000      	movs	r0, #0
 803371c:	6031      	str	r1, [r6, #0]
 803371e:	602b      	str	r3, [r5, #0]
 8033720:	b016      	add	sp, #88	@ 0x58
 8033722:	bd70      	pop	{r4, r5, r6, pc}
 8033724:	466a      	mov	r2, sp
 8033726:	f000 f849 	bl	80337bc <_fstat_r>
 803372a:	2800      	cmp	r0, #0
 803372c:	dbed      	blt.n	803370a <__swhatbuf_r+0x12>
 803372e:	9901      	ldr	r1, [sp, #4]
 8033730:	f401 4170 	and.w	r1, r1, #61440	@ 0xf000
 8033734:	f5a1 5300 	sub.w	r3, r1, #8192	@ 0x2000
 8033738:	4259      	negs	r1, r3
 803373a:	4159      	adcs	r1, r3
 803373c:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 8033740:	e7eb      	b.n	803371a <__swhatbuf_r+0x22>

08033742 <__smakebuf_r>:
 8033742:	898b      	ldrh	r3, [r1, #12]
 8033744:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8033746:	079d      	lsls	r5, r3, #30
 8033748:	4606      	mov	r6, r0
 803374a:	460c      	mov	r4, r1
 803374c:	d507      	bpl.n	803375e <__smakebuf_r+0x1c>
 803374e:	f104 0347 	add.w	r3, r4, #71	@ 0x47
 8033752:	6023      	str	r3, [r4, #0]
 8033754:	6123      	str	r3, [r4, #16]
 8033756:	2301      	movs	r3, #1
 8033758:	6163      	str	r3, [r4, #20]
 803375a:	b003      	add	sp, #12
 803375c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 803375e:	ab01      	add	r3, sp, #4
 8033760:	466a      	mov	r2, sp
 8033762:	f7ff ffc9 	bl	80336f8 <__swhatbuf_r>
 8033766:	9f00      	ldr	r7, [sp, #0]
 8033768:	4605      	mov	r5, r0
 803376a:	4630      	mov	r0, r6
 803376c:	4639      	mov	r1, r7
 803376e:	f7ff f859 	bl	8032824 <_malloc_r>
 8033772:	b948      	cbnz	r0, 8033788 <__smakebuf_r+0x46>
 8033774:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8033778:	059a      	lsls	r2, r3, #22
 803377a:	d4ee      	bmi.n	803375a <__smakebuf_r+0x18>
 803377c:	f023 0303 	bic.w	r3, r3, #3
 8033780:	f043 0302 	orr.w	r3, r3, #2
 8033784:	81a3      	strh	r3, [r4, #12]
 8033786:	e7e2      	b.n	803374e <__smakebuf_r+0xc>
 8033788:	89a3      	ldrh	r3, [r4, #12]
 803378a:	6020      	str	r0, [r4, #0]
 803378c:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8033790:	81a3      	strh	r3, [r4, #12]
 8033792:	9b01      	ldr	r3, [sp, #4]
 8033794:	e9c4 0704 	strd	r0, r7, [r4, #16]
 8033798:	b15b      	cbz	r3, 80337b2 <__smakebuf_r+0x70>
 803379a:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 803379e:	4630      	mov	r0, r6
 80337a0:	f000 f81e 	bl	80337e0 <_isatty_r>
 80337a4:	b128      	cbz	r0, 80337b2 <__smakebuf_r+0x70>
 80337a6:	89a3      	ldrh	r3, [r4, #12]
 80337a8:	f023 0303 	bic.w	r3, r3, #3
 80337ac:	f043 0301 	orr.w	r3, r3, #1
 80337b0:	81a3      	strh	r3, [r4, #12]
 80337b2:	89a3      	ldrh	r3, [r4, #12]
 80337b4:	431d      	orrs	r5, r3
 80337b6:	81a5      	strh	r5, [r4, #12]
 80337b8:	e7cf      	b.n	803375a <__smakebuf_r+0x18>
	...

080337bc <_fstat_r>:
 80337bc:	b538      	push	{r3, r4, r5, lr}
 80337be:	2300      	movs	r3, #0
 80337c0:	4d06      	ldr	r5, [pc, #24]	@ (80337dc <_fstat_r+0x20>)
 80337c2:	4604      	mov	r4, r0
 80337c4:	4608      	mov	r0, r1
 80337c6:	4611      	mov	r1, r2
 80337c8:	602b      	str	r3, [r5, #0]
 80337ca:	f7cd fb9c 	bl	8000f06 <_fstat>
 80337ce:	1c43      	adds	r3, r0, #1
 80337d0:	d102      	bne.n	80337d8 <_fstat_r+0x1c>
 80337d2:	682b      	ldr	r3, [r5, #0]
 80337d4:	b103      	cbz	r3, 80337d8 <_fstat_r+0x1c>
 80337d6:	6023      	str	r3, [r4, #0]
 80337d8:	bd38      	pop	{r3, r4, r5, pc}
 80337da:	bf00      	nop
 80337dc:	20083720 	.word	0x20083720

080337e0 <_isatty_r>:
 80337e0:	b538      	push	{r3, r4, r5, lr}
 80337e2:	2300      	movs	r3, #0
 80337e4:	4d05      	ldr	r5, [pc, #20]	@ (80337fc <_isatty_r+0x1c>)
 80337e6:	4604      	mov	r4, r0
 80337e8:	4608      	mov	r0, r1
 80337ea:	602b      	str	r3, [r5, #0]
 80337ec:	f7cd fb90 	bl	8000f10 <_isatty>
 80337f0:	1c43      	adds	r3, r0, #1
 80337f2:	d102      	bne.n	80337fa <_isatty_r+0x1a>
 80337f4:	682b      	ldr	r3, [r5, #0]
 80337f6:	b103      	cbz	r3, 80337fa <_isatty_r+0x1a>
 80337f8:	6023      	str	r3, [r4, #0]
 80337fa:	bd38      	pop	{r3, r4, r5, pc}
 80337fc:	20083720 	.word	0x20083720

08033800 <_init>:
 8033800:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8033802:	bf00      	nop
 8033804:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8033806:	bc08      	pop	{r3}
 8033808:	469e      	mov	lr, r3
 803380a:	4770      	bx	lr

0803380c <_fini>:
 803380c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 803380e:	bf00      	nop
 8033810:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8033812:	bc08      	pop	{r3}
 8033814:	469e      	mov	lr, r3
 8033816:	4770      	bx	lr
